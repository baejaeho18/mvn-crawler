Compiled from "MoveAxiomsWizard.java"
public class org.protege.editor.owl.ui.ontology.wizard.move.MoveAxiomsWizard extends org.protege.editor.core.ui.wizard.Wizard implements org.protege.editor.owl.ui.ontology.wizard.move.MoveAxiomsModel {
  private org.protege.editor.owl.OWLEditorKit editorKit;

  private org.protege.editor.owl.ui.ontology.wizard.move.MoveAxiomsKit selectedKit;

  private java.util.Set<org.semanticweb.owlapi.model.OWLOntology> sourceOntologies;

  private org.semanticweb.owlapi.model.OWLOntologyID targetOntologyID;

  private java.util.List<org.protege.editor.owl.ui.ontology.wizard.move.MoveAxiomsKit> moveAxiomsKits;

  private java.util.Map<java.lang.String, java.lang.Object> kitId2FirstPanelId;

  private java.util.Map<java.lang.String, java.lang.Object> kitId2LastPanelId;

  private java.util.List<org.protege.editor.owl.ui.ontology.wizard.move.MoveAxiomsKitConfigurationPanel> panels;

  private java.net.URI physicalURI;

  private org.protege.editor.owl.ui.ontology.wizard.move.MoveType moveType;

  private org.protege.editor.owl.ui.action.OntologyFormatPage ontologyFormatPage;

  private org.protege.editor.owl.ui.ontology.wizard.create.PhysicalLocationPanel ontologyPhysicalLocationPage;

  private final org.slf4j.Logger logger;

  public org.protege.editor.owl.ui.ontology.wizard.move.MoveAxiomsWizard(org.protege.editor.owl.OWLEditorKit);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/protege/editor/core/ui/wizard/Wizard."<init>":()V
       4: aload_0
       5: ldc           #2                  // class org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsWizard
       7: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      10: putfield      #4                  // Field logger:Lorg/slf4j/Logger;
      13: aload_0
      14: ldc           #5                  // String Copy/move/delete axioms
      16: invokevirtual #6                  // Method setTitle:(Ljava/lang/String;)V
      19: aload_0
      20: aload_1
      21: putfield      #7                  // Field editorKit:Lorg/protege/editor/owl/OWLEditorKit;
      24: aload_0
      25: new           #8                  // class java/util/HashSet
      28: dup
      29: invokespecial #9                  // Method java/util/HashSet."<init>":()V
      32: putfield      #10                 // Field sourceOntologies:Ljava/util/Set;
      35: aload_0
      36: new           #11                 // class java/util/ArrayList
      39: dup
      40: invokespecial #12                 // Method java/util/ArrayList."<init>":()V
      43: putfield      #13                 // Field panels:Ljava/util/List;
      46: aload_0
      47: aconst_null
      48: putfield      #14                 // Field selectedKit:Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKit;
      51: aload_0
      52: new           #15                 // class java/util/HashMap
      55: dup
      56: invokespecial #16                 // Method java/util/HashMap."<init>":()V
      59: putfield      #17                 // Field kitId2FirstPanelId:Ljava/util/Map;
      62: aload_0
      63: new           #15                 // class java/util/HashMap
      66: dup
      67: invokespecial #16                 // Method java/util/HashMap."<init>":()V
      70: putfield      #18                 // Field kitId2LastPanelId:Ljava/util/Map;
      73: aload_0
      74: invokespecial #19                 // Method setupKits:()V
      77: aload_0
      78: aload_0
      79: getfield      #7                  // Field editorKit:Lorg/protege/editor/owl/OWLEditorKit;
      82: invokevirtual #20                 // Method org/protege/editor/owl/OWLEditorKit.getOWLModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
      85: invokeinterface #21,  1           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.getOntologies:()Ljava/util/Set;
      90: invokevirtual #22                 // Method setSourceOntologies:(Ljava/util/Set;)V
      93: aload_0
      94: ldc           #24                 // String AxiomSelectionStrategyPanel
      96: new           #23                 // class org/protege/editor/owl/ui/ontology/wizard/move/SelectKitPanel
      99: dup
     100: aload_0
     101: getfield      #7                  // Field editorKit:Lorg/protege/editor/owl/OWLEditorKit;
     104: invokespecial #25                 // Method org/protege/editor/owl/ui/ontology/wizard/move/SelectKitPanel."<init>":(Lorg/protege/editor/owl/OWLEditorKit;)V
     107: invokevirtual #26                 // Method registerWizardPanel:(Ljava/lang/Object;Lorg/protege/editor/core/ui/wizard/WizardPanel;)V
     110: aload_0
     111: ldc           #28                 // String SelectActionPanel
     113: new           #27                 // class org/protege/editor/owl/ui/ontology/wizard/move/SelectActionPanel
     116: dup
     117: aload_0
     118: getfield      #7                  // Field editorKit:Lorg/protege/editor/owl/OWLEditorKit;
     121: invokespecial #29                 // Method org/protege/editor/owl/ui/ontology/wizard/move/SelectActionPanel."<init>":(Lorg/protege/editor/owl/OWLEditorKit;)V
     124: invokevirtual #26                 // Method registerWizardPanel:(Ljava/lang/Object;Lorg/protege/editor/core/ui/wizard/WizardPanel;)V
     127: aload_0
     128: ldc           #31                 // String SelectTargetOntologyTypePanel
     130: new           #30                 // class org/protege/editor/owl/ui/ontology/wizard/move/SelectTargetOntologyTypePanel
     133: dup
     134: aload_0
     135: getfield      #7                  // Field editorKit:Lorg/protege/editor/owl/OWLEditorKit;
     138: invokespecial #32                 // Method org/protege/editor/owl/ui/ontology/wizard/move/SelectTargetOntologyTypePanel."<init>":(Lorg/protege/editor/owl/OWLEditorKit;)V
     141: invokevirtual #26                 // Method registerWizardPanel:(Ljava/lang/Object;Lorg/protege/editor/core/ui/wizard/WizardPanel;)V
     144: aload_0
     145: ldc           #34                 // String SelectTargetOntologyPanel
     147: new           #33                 // class org/protege/editor/owl/ui/ontology/wizard/move/SelectTargetOntologyPanel
     150: dup
     151: aload_0
     152: getfield      #7                  // Field editorKit:Lorg/protege/editor/owl/OWLEditorKit;
     155: invokespecial #35                 // Method org/protege/editor/owl/ui/ontology/wizard/move/SelectTargetOntologyPanel."<init>":(Lorg/protege/editor/owl/OWLEditorKit;)V
     158: invokevirtual #26                 // Method registerWizardPanel:(Ljava/lang/Object;Lorg/protege/editor/core/ui/wizard/WizardPanel;)V
     161: aload_0
     162: ldc           #37                 // String ONTOLOGY_ID_PANEL
     164: new           #36                 // class org/protege/editor/owl/ui/ontology/wizard/move/CreateNewOntologyPanel
     167: dup
     168: aload_0
     169: getfield      #7                  // Field editorKit:Lorg/protege/editor/owl/OWLEditorKit;
     172: invokespecial #38                 // Method org/protege/editor/owl/ui/ontology/wizard/move/CreateNewOntologyPanel."<init>":(Lorg/protege/editor/owl/OWLEditorKit;)V
     175: invokevirtual #26                 // Method registerWizardPanel:(Ljava/lang/Object;Lorg/protege/editor/core/ui/wizard/WizardPanel;)V
     178: aload_0
     179: getstatic     #39                 // Field org/protege/editor/owl/ui/ontology/wizard/create/PhysicalLocationPanel.ID:Ljava/lang/String;
     182: aload_0
     183: new           #40                 // class org/protege/editor/owl/ui/ontology/wizard/create/PhysicalLocationPanel
     186: dup
     187: aload_0
     188: getfield      #7                  // Field editorKit:Lorg/protege/editor/owl/OWLEditorKit;
     191: invokespecial #41                 // Method org/protege/editor/owl/ui/ontology/wizard/create/PhysicalLocationPanel."<init>":(Lorg/protege/editor/core/editorkit/EditorKit;)V
     194: dup_x1
     195: putfield      #42                 // Field ontologyPhysicalLocationPage:Lorg/protege/editor/owl/ui/ontology/wizard/create/PhysicalLocationPanel;
     198: invokevirtual #26                 // Method registerWizardPanel:(Ljava/lang/Object;Lorg/protege/editor/core/ui/wizard/WizardPanel;)V
     201: aload_0
     202: ldc           #44                 // String ONTOLOGY_FORMAT_PANEL
     204: aload_0
     205: new           #43                 // class org/protege/editor/owl/ui/action/OntologyFormatPage
     208: dup
     209: aload_0
     210: getfield      #7                  // Field editorKit:Lorg/protege/editor/owl/OWLEditorKit;
     213: invokespecial #45                 // Method org/protege/editor/owl/ui/action/OntologyFormatPage."<init>":(Lorg/protege/editor/core/editorkit/EditorKit;)V
     216: dup_x1
     217: putfield      #46                 // Field ontologyFormatPage:Lorg/protege/editor/owl/ui/action/OntologyFormatPage;
     220: invokevirtual #26                 // Method registerWizardPanel:(Ljava/lang/Object;Lorg/protege/editor/core/ui/wizard/WizardPanel;)V
     223: aload_0
     224: getfield      #47                 // Field moveAxiomsKits:Ljava/util/List;
     227: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     232: astore_2
     233: aload_2
     234: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     239: ifeq          483
     242: aload_2
     243: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     248: checkcast     #51                 // class org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKit
     251: astore_3
     252: aload_3
     253: invokevirtual #52                 // Method org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKit.getConfigurationPanels:()Ljava/util/List;
     256: astore        4
     258: iconst_0
     259: istore        5
     261: iload         5
     263: aload         4
     265: invokeinterface #53,  1           // InterfaceMethod java/util/List.size:()I
     270: if_icmpge     480
     273: aload         4
     275: iload         5
     277: invokeinterface #54,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     282: checkcast     #55                 // class org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKitConfigurationPanel
     285: astore        6
     287: aload_0
     288: getfield      #13                 // Field panels:Ljava/util/List;
     291: aload         6
     293: invokeinterface #56,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     298: pop
     299: aload         6
     301: aload_0
     302: getfield      #7                  // Field editorKit:Lorg/protege/editor/owl/OWLEditorKit;
     305: aload_0
     306: invokevirtual #57                 // Method org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKitConfigurationPanel.setup:(Lorg/protege/editor/owl/OWLEditorKit;Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsWizard;)V
     309: aload         6
     311: invokevirtual #58                 // Method org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKitConfigurationPanel.initialise:()V
     314: ldc           #24                 // String AxiomSelectionStrategyPanel
     316: astore        7
     318: ldc           #28                 // String SelectActionPanel
     320: astore        8
     322: iload         5
     324: ifne          350
     327: aload_0
     328: getfield      #17                 // Field kitId2FirstPanelId:Ljava/util/Map;
     331: aload_3
     332: invokevirtual #59                 // Method org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKit.getID:()Ljava/lang/String;
     335: aload         6
     337: invokevirtual #60                 // Method org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKitConfigurationPanel.getID:()Ljava/lang/String;
     340: invokeinterface #61,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     345: pop
     346: ldc           #24                 // String AxiomSelectionStrategyPanel
     348: astore        7
     350: iload         5
     352: ifle          374
     355: aload         4
     357: iload         5
     359: iconst_1
     360: isub
     361: invokeinterface #54,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     366: checkcast     #55                 // class org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKitConfigurationPanel
     369: invokevirtual #60                 // Method org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKitConfigurationPanel.getID:()Ljava/lang/String;
     372: astore        7
     374: iload         5
     376: aload         4
     378: invokeinterface #53,  1           // InterfaceMethod java/util/List.size:()I
     383: iconst_1
     384: isub
     385: if_icmpge     407
     388: aload         4
     390: iload         5
     392: iconst_1
     393: iadd
     394: invokeinterface #54,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     399: checkcast     #55                 // class org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKitConfigurationPanel
     402: invokevirtual #60                 // Method org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKitConfigurationPanel.getID:()Ljava/lang/String;
     405: astore        8
     407: iload         5
     409: aload         4
     411: invokeinterface #53,  1           // InterfaceMethod java/util/List.size:()I
     416: iconst_1
     417: isub
     418: if_icmpne     444
     421: aload_0
     422: getfield      #18                 // Field kitId2LastPanelId:Ljava/util/Map;
     425: aload_3
     426: invokevirtual #59                 // Method org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKit.getID:()Ljava/lang/String;
     429: aload         6
     431: invokevirtual #60                 // Method org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKitConfigurationPanel.getID:()Ljava/lang/String;
     434: invokeinterface #61,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     439: pop
     440: ldc           #28                 // String SelectActionPanel
     442: astore        8
     444: new           #62                 // class org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsWizardKitConfigurationPanel
     447: dup
     448: aload         7
     450: aload         8
     452: aload         6
     454: aload_0
     455: getfield      #7                  // Field editorKit:Lorg/protege/editor/owl/OWLEditorKit;
     458: invokespecial #63                 // Method org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsWizardKitConfigurationPanel."<init>":(Ljava/lang/Object;Ljava/lang/Object;Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKitConfigurationPanel;Lorg/protege/editor/owl/OWLEditorKit;)V
     461: astore        9
     463: aload_0
     464: aload         6
     466: invokevirtual #60                 // Method org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKitConfigurationPanel.getID:()Ljava/lang/String;
     469: aload         9
     471: invokevirtual #26                 // Method registerWizardPanel:(Ljava/lang/Object;Lorg/protege/editor/core/ui/wizard/WizardPanel;)V
     474: iinc          5, 1
     477: goto          261
     480: goto          233
     483: aload_0
     484: ldc           #24                 // String AxiomSelectionStrategyPanel
     486: invokevirtual #64                 // Method setCurrentPanel:(Ljava/lang/Object;)V
     489: return

  public java.lang.Object getFirstPanelIDForKit();
    Code:
       0: aload_0
       1: getfield      #17                 // Field kitId2FirstPanelId:Ljava/util/Map;
       4: aload_0
       5: getfield      #14                 // Field selectedKit:Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKit;
       8: invokevirtual #59                 // Method org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKit.getID:()Ljava/lang/String;
      11: invokeinterface #65,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn

  public java.lang.Object getLastPanelIDForKit();
    Code:
       0: aload_0
       1: getfield      #18                 // Field kitId2LastPanelId:Ljava/util/Map;
       4: aload_0
       5: getfield      #14                 // Field selectedKit:Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKit;
       8: invokevirtual #59                 // Method org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKit.getID:()Ljava/lang/String;
      11: invokeinterface #65,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn

  public java.util.List<org.protege.editor.owl.ui.ontology.wizard.move.MoveAxiomsKit> getMoveAxiomsKits();
    Code:
       0: aload_0
       1: getfield      #47                 // Field moveAxiomsKits:Ljava/util/List;
       4: areturn

  private void setupKits();
    Code:
       0: aload_0
       1: new           #11                 // class java/util/ArrayList
       4: dup
       5: invokespecial #12                 // Method java/util/ArrayList."<init>":()V
       8: putfield      #47                 // Field moveAxiomsKits:Ljava/util/List;
      11: new           #66                 // class org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKitPluginLoader
      14: dup
      15: aload_0
      16: getfield      #7                  // Field editorKit:Lorg/protege/editor/owl/OWLEditorKit;
      19: invokespecial #67                 // Method org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKitPluginLoader."<init>":(Lorg/protege/editor/owl/OWLEditorKit;)V
      22: astore_1
      23: aload_1
      24: invokevirtual #68                 // Method org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKitPluginLoader.getPlugins:()Ljava/util/Set;
      27: invokeinterface #69,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      32: astore_2
      33: aload_2
      34: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          83
      42: aload_2
      43: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #70                 // class org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKitPlugin
      51: astore_3
      52: aload_3
      53: invokeinterface #71,  1           // InterfaceMethod org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKitPlugin.newInstance:()Lorg/protege/editor/core/plugin/ProtegePluginInstance;
      58: checkcast     #51                 // class org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKit
      61: astore        4
      63: aload_0
      64: getfield      #47                 // Field moveAxiomsKits:Ljava/util/List;
      67: aload         4
      69: invokeinterface #56,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      74: pop
      75: goto          80
      78: astore        4
      80: goto          33
      83: aload_0
      84: getfield      #47                 // Field moveAxiomsKits:Ljava/util/List;
      87: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      92: astore_2
      93: aload_2
      94: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      99: ifeq          137
     102: aload_2
     103: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     108: checkcast     #51                 // class org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKit
     111: astore_3
     112: aload_3
     113: invokevirtual #73                 // Method org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKit.initialise:()V
     116: goto          134
     119: astore        4
     121: aload_0
     122: getfield      #4                  // Field logger:Lorg/slf4j/Logger;
     125: ldc           #74                 // String An error occurred whilst initialising a move axioms kit:
     127: aload         4
     129: invokeinterface #75,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     134: goto          93
     137: aload_0
     138: getfield      #47                 // Field moveAxiomsKits:Ljava/util/List;
     141: invokeinterface #76,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     146: ifne          181
     149: aload_0
     150: getfield      #47                 // Field moveAxiomsKits:Ljava/util/List;
     153: new           #77                 // class org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsWizard$1
     156: dup
     157: aload_0
     158: invokespecial #78                 // Method org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsWizard$1."<init>":(Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsWizard;)V
     161: invokestatic  #79                 // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
     164: aload_0
     165: aload_0
     166: getfield      #47                 // Field moveAxiomsKits:Ljava/util/List;
     169: iconst_0
     170: invokeinterface #54,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     175: checkcast     #51                 // class org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKit
     178: putfield      #14                 // Field selectedKit:Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKit;
     181: return
    Exception table:
       from    to  target type
          52    75    78   Class java/lang/Exception
         112   116   119   Class java/lang/Exception

  public org.protege.editor.owl.ui.ontology.wizard.move.MoveAxiomsKit getSelectedKit();
    Code:
       0: aload_0
       1: getfield      #14                 // Field selectedKit:Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKit;
       4: areturn

  public void setSelectedKit(org.protege.editor.owl.ui.ontology.wizard.move.MoveAxiomsKit);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field selectedKit:Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKit;
       5: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #13                 // Field panels:Ljava/util/List;
       4: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          36
      19: aload_1
      20: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #55                 // class org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKitConfigurationPanel
      28: astore_2
      29: aload_2
      30: invokevirtual #80                 // Method org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKitConfigurationPanel.dispose:()V
      33: goto          10
      36: aload_0
      37: invokespecial #81                 // Method org/protege/editor/core/ui/wizard/Wizard.dispose:()V
      40: return

  public void applyChanges() throws org.semanticweb.owlapi.model.OWLOntologyCreationException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #7                  // Field editorKit:Lorg/protege/editor/owl/OWLEditorKit;
       6: astore_2
       7: aload_0
       8: getfield      #82                 // Field moveType:Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveType;
      11: getstatic     #83                 // Field org/protege/editor/owl/ui/ontology/wizard/move/MoveType.COPY:Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveType;
      14: if_acmpeq     27
      17: aload_0
      18: getfield      #82                 // Field moveType:Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveType;
      21: getstatic     #84                 // Field org/protege/editor/owl/ui/ontology/wizard/move/MoveType.MOVE:Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveType;
      24: if_acmpne     124
      27: aload_0
      28: getfield      #7                  // Field editorKit:Lorg/protege/editor/owl/OWLEditorKit;
      31: invokevirtual #85                 // Method org/protege/editor/owl/OWLEditorKit.getModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
      34: invokeinterface #86,  1           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.getOWLOntologyManager:()Lorg/semanticweb/owlapi/model/OWLOntologyManager;
      39: astore_3
      40: aload_0
      41: getfield      #87                 // Field targetOntologyID:Lorg/semanticweb/owlapi/model/OWLOntologyID;
      44: ifnull        74
      47: aload_3
      48: aload_0
      49: invokevirtual #88                 // Method getTargetOntologyID:()Lorg/semanticweb/owlapi/model/OWLOntologyID;
      52: invokeinterface #89,  2           // InterfaceMethod org/semanticweb/owlapi/model/OWLOntologyManager.contains:(Lorg/semanticweb/owlapi/model/OWLOntologyID;)Z
      57: ifeq          74
      60: aload_3
      61: aload_0
      62: invokevirtual #88                 // Method getTargetOntologyID:()Lorg/semanticweb/owlapi/model/OWLOntologyID;
      65: invokeinterface #90,  2           // InterfaceMethod org/semanticweb/owlapi/model/OWLOntologyManager.getOntology:(Lorg/semanticweb/owlapi/model/OWLOntologyID;)Lorg/semanticweb/owlapi/model/OWLOntology;
      70: astore_1
      71: goto          124
      74: invokestatic  #91                 // Method org/protege/editor/core/ProtegeManager.getInstance:()Lorg/protege/editor/core/ProtegeManager;
      77: new           #92                 // class org/protege/editor/owl/OWLEditorKitFactory
      80: dup
      81: invokespecial #93                 // Method org/protege/editor/owl/OWLEditorKitFactory."<init>":()V
      84: invokevirtual #94                 // Method org/protege/editor/core/ProtegeManager.createAndSetupNewEditorKit:(Lorg/protege/editor/core/editorkit/EditorKitFactory;)Lorg/protege/editor/core/editorkit/EditorKit;
      87: checkcast     #95                 // class org/protege/editor/owl/OWLEditorKit
      90: astore        4
      92: aload         4
      94: invokevirtual #20                 // Method org/protege/editor/owl/OWLEditorKit.getOWLModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
      97: invokeinterface #96,  1           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.getActiveOntology:()Lorg/semanticweb/owlapi/model/OWLOntology;
     102: astore_1
     103: aload         4
     105: astore_2
     106: goto          124
     109: astore        4
     111: aload_0
     112: getfield      #4                  // Field logger:Lorg/slf4j/Logger;
     115: ldc           #97                 // String An error occurred whilst creating and setting up the target editor kit when moving axioms: {}
     117: aload         4
     119: invokeinterface #98,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     124: new           #11                 // class java/util/ArrayList
     127: dup
     128: invokespecial #12                 // Method java/util/ArrayList."<init>":()V
     131: astore_3
     132: aload_0
     133: invokevirtual #99                 // Method getAxiomsToBeMoved:()Ljava/util/Set;
     136: astore        4
     138: aload         4
     140: invokeinterface #69,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     145: astore        5
     147: aload         5
     149: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     154: ifeq          295
     157: aload         5
     159: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     164: checkcast     #100                // class org/semanticweb/owlapi/model/OWLAxiom
     167: astore        6
     169: aload_0
     170: invokevirtual #101                // Method getSourceOntologies:()Ljava/util/Set;
     173: invokeinterface #69,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     178: astore        7
     180: aload         7
     182: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     187: ifeq          292
     190: aload         7
     192: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     197: checkcast     #102                // class org/semanticweb/owlapi/model/OWLOntology
     200: astore        8
     202: aload         8
     204: aload         6
     206: invokeinterface #103,  2          // InterfaceMethod org/semanticweb/owlapi/model/OWLOntology.containsAxiom:(Lorg/semanticweb/owlapi/model/OWLAxiom;)Z
     211: ifeq          289
     214: aload_0
     215: getfield      #82                 // Field moveType:Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveType;
     218: getstatic     #104                // Field org/protege/editor/owl/ui/ontology/wizard/move/MoveType.DELETE:Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveType;
     221: if_acmpeq     234
     224: aload_0
     225: getfield      #82                 // Field moveType:Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveType;
     228: getstatic     #84                 // Field org/protege/editor/owl/ui/ontology/wizard/move/MoveType.MOVE:Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveType;
     231: if_acmpne     252
     234: aload_3
     235: new           #105                // class org/semanticweb/owlapi/model/RemoveAxiom
     238: dup
     239: aload         8
     241: aload         6
     243: invokespecial #106                // Method org/semanticweb/owlapi/model/RemoveAxiom."<init>":(Lorg/semanticweb/owlapi/model/OWLOntology;Lorg/semanticweb/owlapi/model/OWLAxiom;)V
     246: invokeinterface #56,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     251: pop
     252: aload_0
     253: getfield      #82                 // Field moveType:Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveType;
     256: getstatic     #83                 // Field org/protege/editor/owl/ui/ontology/wizard/move/MoveType.COPY:Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveType;
     259: if_acmpeq     272
     262: aload_0
     263: getfield      #82                 // Field moveType:Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveType;
     266: getstatic     #84                 // Field org/protege/editor/owl/ui/ontology/wizard/move/MoveType.MOVE:Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveType;
     269: if_acmpne     289
     272: aload_3
     273: new           #107                // class org/semanticweb/owlapi/model/AddAxiom
     276: dup
     277: aload_1
     278: aload         6
     280: invokespecial #108                // Method org/semanticweb/owlapi/model/AddAxiom."<init>":(Lorg/semanticweb/owlapi/model/OWLOntology;Lorg/semanticweb/owlapi/model/OWLAxiom;)V
     283: invokeinterface #56,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     288: pop
     289: goto          180
     292: goto          147
     295: aload_2
     296: invokevirtual #20                 // Method org/protege/editor/owl/OWLEditorKit.getOWLModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
     299: aload_3
     300: invokeinterface #109,  2          // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.applyChanges:(Ljava/util/List;)V
     305: aload_0
     306: getfield      #87                 // Field targetOntologyID:Lorg/semanticweb/owlapi/model/OWLOntologyID;
     309: ifnull        371
     312: aload_0
     313: getfield      #7                  // Field editorKit:Lorg/protege/editor/owl/OWLEditorKit;
     316: invokevirtual #20                 // Method org/protege/editor/owl/OWLEditorKit.getOWLModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
     319: invokeinterface #86,  1           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.getOWLOntologyManager:()Lorg/semanticweb/owlapi/model/OWLOntologyManager;
     324: aload_0
     325: getfield      #87                 // Field targetOntologyID:Lorg/semanticweb/owlapi/model/OWLOntologyID;
     328: invokeinterface #89,  2           // InterfaceMethod org/semanticweb/owlapi/model/OWLOntologyManager.contains:(Lorg/semanticweb/owlapi/model/OWLOntologyID;)Z
     333: ifeq          371
     336: aload_0
     337: invokevirtual #110                // Method getOwner:()Ljava/awt/Component;
     340: new           #111                // class java/lang/StringBuilder
     343: dup
     344: invokespecial #112                // Method java/lang/StringBuilder."<init>":()V
     347: ldc           #113                // String Axioms successfully
     349: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     352: aload_0
     353: getfield      #82                 // Field moveType:Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveType;
     356: invokevirtual #115                // Method org/protege/editor/owl/ui/ontology/wizard/move/MoveType.getCompletedName:()Ljava/lang/String;
     359: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     362: invokevirtual #116                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     365: ldc           #117                // String Finished
     367: iconst_1
     368: invokestatic  #119                // Method javax/swing/JOptionPane.showMessageDialog:(Ljava/awt/Component;Ljava/lang/Object;Ljava/lang/String;I)V
     371: return
    Exception table:
       from    to  target type
          74   106   109   Class java/lang/Exception

  public java.util.Set<org.semanticweb.owlapi.model.OWLAxiom> getAxiomsToBeMoved();
    Code:
       0: aload_0
       1: getfield      #14                 // Field selectedKit:Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKit;
       4: aload_0
       5: getfield      #10                 // Field sourceOntologies:Ljava/util/Set;
       8: invokevirtual #120                // Method org/protege/editor/owl/ui/ontology/wizard/move/MoveAxiomsKit.getAxioms:(Ljava/util/Set;)Ljava/util/Set;
      11: areturn

  public java.util.Set<org.semanticweb.owlapi.model.OWLOntology> getSourceOntologies();
    Code:
       0: aload_0
       1: getfield      #10                 // Field sourceOntologies:Ljava/util/Set;
       4: areturn

  public void setSourceOntologies(java.util.Set<org.semanticweb.owlapi.model.OWLOntology>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field sourceOntologies:Ljava/util/Set;
       5: return

  public org.semanticweb.owlapi.model.OWLOntologyID getTargetOntologyID();
    Code:
       0: aload_0
       1: getfield      #87                 // Field targetOntologyID:Lorg/semanticweb/owlapi/model/OWLOntologyID;
       4: areturn

  public void setTargetOntologyID(org.semanticweb.owlapi.model.OWLOntologyID);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #87                 // Field targetOntologyID:Lorg/semanticweb/owlapi/model/OWLOntologyID;
       5: return

  public void setMoveType(org.protege.editor.owl.ui.ontology.wizard.move.MoveType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #82                 // Field moveType:Lorg/protege/editor/owl/ui/ontology/wizard/move/MoveType;
       5: return
}
