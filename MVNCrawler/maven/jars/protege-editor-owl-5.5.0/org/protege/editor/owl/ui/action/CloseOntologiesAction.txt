Compiled from "CloseOntologiesAction.java"
public class org.protege.editor.owl.ui.action.CloseOntologiesAction extends org.protege.editor.owl.ui.action.ProtegeOWLAction {
  public org.protege.editor.owl.ui.action.CloseOntologiesAction();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/protege/editor/owl/ui/action/ProtegeOWLAction."<init>":()V
       4: return

  public void actionPerformed(java.awt.event.ActionEvent);
    Code:
       0: new           #2                  // class org/protege/editor/owl/ui/selector/OWLOntologySelectorPanel2
       3: dup
       4: aload_0
       5: invokevirtual #3                  // Method getOWLEditorKit:()Lorg/protege/editor/owl/OWLEditorKit;
       8: aload_0
       9: invokevirtual #4                  // Method getOWLModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
      12: invokeinterface #5,  1            // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.getOntologies:()Ljava/util/Set;
      17: invokespecial #6                  // Method org/protege/editor/owl/ui/selector/OWLOntologySelectorPanel2."<init>":(Lorg/protege/editor/owl/OWLEditorKit;Ljava/util/Set;)V
      20: astore_2
      21: aload_2
      22: iconst_0
      23: invokevirtual #7                  // Method org/protege/editor/owl/ui/selector/OWLOntologySelectorPanel2.checkAll:(Z)V
      26: aload_0
      27: invokevirtual #8                  // Method getWorkspace:()Lorg/protege/editor/core/ui/workspace/Workspace;
      30: ldc           #9                  // String Close ontologies
      32: aload_2
      33: iconst_m1
      34: iconst_2
      35: aload_2
      36: invokestatic  #11                 // Method org/protege/editor/core/ui/util/JOptionPaneEx.showConfirmDialog:(Ljava/awt/Component;Ljava/lang/String;Ljavax/swing/JComponent;IILjavax/swing/JComponent;)I
      39: ifne          126
      42: aload_2
      43: invokevirtual #12                 // Method org/protege/editor/owl/ui/selector/OWLOntologySelectorPanel2.getSelectedOntologies:()Ljava/util/Set;
      46: invokeinterface #13,  1           // InterfaceMethod java/util/Set.size:()I
      51: aload_0
      52: invokevirtual #4                  // Method getOWLModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
      55: invokeinterface #5,  1            // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.getOntologies:()Ljava/util/Set;
      60: invokeinterface #13,  1           // InterfaceMethod java/util/Set.size:()I
      65: if_icmpne     81
      68: invokestatic  #14                 // Method org/protege/editor/core/ProtegeManager.getInstance:()Lorg/protege/editor/core/ProtegeManager;
      71: aload_0
      72: invokevirtual #3                  // Method getOWLEditorKit:()Lorg/protege/editor/owl/OWLEditorKit;
      75: invokevirtual #15                 // Method org/protege/editor/core/ProtegeManager.disposeOfEditorKit:(Lorg/protege/editor/core/editorkit/EditorKit;)V
      78: goto          126
      81: aload_2
      82: invokevirtual #12                 // Method org/protege/editor/owl/ui/selector/OWLOntologySelectorPanel2.getSelectedOntologies:()Ljava/util/Set;
      85: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      90: astore_3
      91: aload_3
      92: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      97: ifeq          126
     100: aload_3
     101: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     106: checkcast     #19                 // class org/semanticweb/owlapi/model/OWLOntology
     109: astore        4
     111: aload_0
     112: invokevirtual #4                  // Method getOWLModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
     115: aload         4
     117: invokeinterface #20,  2           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.removeOntology:(Lorg/semanticweb/owlapi/model/OWLOntology;)Z
     122: pop
     123: goto          91
     126: return

  public void initialise() throws java.lang.Exception;
    Code:
       0: return

  public void dispose() throws java.lang.Exception;
    Code:
       0: return
}
