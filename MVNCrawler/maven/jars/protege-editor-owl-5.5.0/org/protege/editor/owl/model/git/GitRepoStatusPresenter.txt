Compiled from "GitRepoStatusPresenter.java"
public class org.protege.editor.owl.model.git.GitRepoStatusPresenter {
  private static final org.slf4j.Logger logger;

  private final org.protege.editor.owl.model.OWLModelManager modelManager;

  private final org.protege.editor.owl.model.git.GitStatusView view;

  private final org.protege.editor.owl.model.event.OWLModelManagerListener listener;

  public org.protege.editor.owl.model.git.GitRepoStatusPresenter(org.protege.editor.owl.model.OWLModelManager, org.protege.editor.owl.model.git.GitStatusView);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokedynamic #2,  0              // InvokeDynamic #0:handleChange:(Lorg/protege/editor/owl/model/git/GitRepoStatusPresenter;)Lorg/protege/editor/owl/model/event/OWLModelManagerListener;
      11: putfield      #3                  // Field listener:Lorg/protege/editor/owl/model/event/OWLModelManagerListener;
      14: aload_0
      15: aload_1
      16: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #5                  // class org/protege/editor/owl/model/OWLModelManager
      22: putfield      #6                  // Field modelManager:Lorg/protege/editor/owl/model/OWLModelManager;
      25: aload_0
      26: aload_2
      27: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #7                  // class org/protege/editor/owl/model/git/GitStatusView
      33: putfield      #8                  // Field view:Lorg/protege/editor/owl/model/git/GitStatusView;
      36: return

  public org.protege.editor.owl.model.git.GitStatusView getView();
    Code:
       0: aload_0
       1: getfield      #8                  // Field view:Lorg/protege/editor/owl/model/git/GitStatusView;
       4: areturn

  public void start();
    Code:
       0: aload_0
       1: getfield      #6                  // Field modelManager:Lorg/protege/editor/owl/model/OWLModelManager;
       4: aload_0
       5: getfield      #3                  // Field listener:Lorg/protege/editor/owl/model/event/OWLModelManagerListener;
       8: invokeinterface #9,  2            // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.addListener:(Lorg/protege/editor/owl/model/event/OWLModelManagerListener;)V
      13: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #6                  // Field modelManager:Lorg/protege/editor/owl/model/OWLModelManager;
       4: aload_0
       5: getfield      #3                  // Field listener:Lorg/protege/editor/owl/model/event/OWLModelManagerListener;
       8: invokeinterface #10,  2           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.removeListener:(Lorg/protege/editor/owl/model/event/OWLModelManagerListener;)V
      13: return

  private void handleModelManagerEvent(org.protege.editor.owl.model.event.OWLModelManagerChangeEvent);
    Code:
       0: getstatic     #11                 // Field org/protege/editor/owl/model/git/GitRepoStatusPresenter$1.$SwitchMap$org$protege$editor$owl$model$event$EventType:[I
       3: aload_1
       4: invokevirtual #12                 // Method org/protege/editor/owl/model/event/OWLModelManagerChangeEvent.getType:()Lorg/protege/editor/owl/model/event/EventType;
       7: invokevirtual #13                 // Method org/protege/editor/owl/model/event/EventType.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 4
                     1: 40
                     2: 40
                     3: 40
                     4: 40
               default: 44
          }
      40: aload_0
      41: invokespecial #14                 // Method updateStatusView:()V
      44: return

  public void update();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method updateStatusView:()V
       4: return

  private void updateStatusView();
    Code:
       0: aload_0
       1: getfield      #6                  // Field modelManager:Lorg/protege/editor/owl/model/OWLModelManager;
       4: invokestatic  #15                 // Method org/protege/editor/owl/model/git/GitRepositoryManager.get:(Lorg/protege/editor/owl/model/OWLModelManager;)Lorg/protege/editor/owl/model/git/GitRepositoryManager;
       7: astore_1
       8: aload_1
       9: invokevirtual #16                 // Method org/protege/editor/owl/model/git/GitRepositoryManager.isGitRepositoryPresent:()Z
      12: ifeq          50
      15: aload_1
      16: invokevirtual #17                 // Method org/protege/editor/owl/model/git/GitRepositoryManager.getBranchName:()Ljava/util/Optional;
      19: astore_2
      20: aload_2
      21: aload_0
      22: invokedynamic #18,  0             // InvokeDynamic #1:accept:(Lorg/protege/editor/owl/model/git/GitRepoStatusPresenter;)Ljava/util/function/Consumer;
      27: invokevirtual #19                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      30: aload_0
      31: getfield      #8                  // Field view:Lorg/protege/editor/owl/model/git/GitStatusView;
      34: aload_1
      35: invokevirtual #20                 // Method org/protege/editor/owl/model/git/GitRepositoryManager.isAnyOntologyDocumentModified:()Z
      38: invokeinterface #21,  2           // InterfaceMethod org/protege/editor/owl/model/git/GitStatusView.setModified:(Z)V
      43: aload_1
      44: invokevirtual #22                 // Method org/protege/editor/owl/model/git/GitRepositoryManager.dispose:()V
      47: goto          59
      50: aload_0
      51: getfield      #8                  // Field view:Lorg/protege/editor/owl/model/git/GitStatusView;
      54: invokeinterface #23,  1           // InterfaceMethod org/protege/editor/owl/model/git/GitStatusView.clear:()V
      59: goto          78
      62: astore_1
      63: getstatic     #25                 // Field logger:Lorg/slf4j/Logger;
      66: ldc           #26                 // String [GitRepo] An error occurred: {}
      68: aload_1
      69: invokevirtual #27                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      72: aload_1
      73: invokeinterface #28,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      78: return
    Exception table:
       from    to  target type
           0    59    62   Class java/lang/Exception

  private void lambda$updateStatusView$0(java.lang.String);
    Code:
       0: getstatic     #25                 // Field logger:Lorg/slf4j/Logger;
       3: ldc           #29                 // String [GitRepo] On branch: {}
       5: aload_1
       6: invokeinterface #30,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      11: aload_0
      12: getfield      #8                  // Field view:Lorg/protege/editor/owl/model/git/GitStatusView;
      15: aload_1
      16: invokeinterface #31,  2           // InterfaceMethod org/protege/editor/owl/model/git/GitStatusView.setBranch:(Ljava/lang/String;)V
      21: return

  static {};
    Code:
       0: ldc           #32                 // class org/protege/editor/owl/model/git/GitRepoStatusPresenter
       2: invokestatic  #33                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #25                 // Field logger:Lorg/slf4j/Logger;
       8: return
}
