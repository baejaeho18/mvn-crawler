Compiled from "OWLIcons.java"
public class org.protege.editor.owl.ui.OWLIcons {
  private static java.util.HashMap<java.lang.String, javax.swing.Icon> iconMap;

  public static final java.lang.String ALTERNATIVE_ICONS_DIRECTORY;

  public org.protege.editor.owl.ui.OWLIcons();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static javax.swing.Icon getIcon(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: getstatic     #2                  // Field iconMap:Ljava/util/HashMap;
       9: aload_0
      10: invokevirtual #3                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #4                  // class javax/swing/Icon
      16: astore_1
      17: aload_1
      18: ifnull        23
      21: aload_1
      22: areturn
      23: aload_0
      24: invokestatic  #5                  // Method getIconURL:(Ljava/lang/String;)Ljava/net/URL;
      27: astore_2
      28: aload_2
      29: ifnonnull     34
      32: aconst_null
      33: areturn
      34: new           #6                  // class javax/swing/ImageIcon
      37: dup
      38: aload_2
      39: invokespecial #7                  // Method javax/swing/ImageIcon."<init>":(Ljava/net/URL;)V
      42: astore_3
      43: getstatic     #2                  // Field iconMap:Ljava/util/HashMap;
      46: aload_0
      47: aload_3
      48: invokevirtual #8                  // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      51: pop
      52: aload_3
      53: areturn

  private static java.net.URL getIconURL(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: ldc           #9                  // class org/protege/editor/owl/ui/OWLIcons
       8: invokevirtual #10                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      11: astore_1
      12: aload_1
      13: aload_0
      14: invokevirtual #11                 // Method java/lang/ClassLoader.getResource:(Ljava/lang/String;)Ljava/net/URL;
      17: astore_2
      18: aload_2
      19: ifnonnull     53
      22: aload_0
      23: invokestatic  #12                 // Method isFileNameAbsolute:(Ljava/lang/String;)Z
      26: ifne          53
      29: aload_1
      30: new           #13                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #15                 // String icons/
      39: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_0
      43: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokevirtual #11                 // Method java/lang/ClassLoader.getResource:(Ljava/lang/String;)Ljava/net/URL;
      52: astore_2
      53: aload_2
      54: areturn

  private static boolean isFileNameAbsolute(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #18                 // String /
       3: invokevirtual #19                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ireturn

  static {};
    Code:
       0: new           #20                 // class java/util/HashMap
       3: dup
       4: invokespecial #21                 // Method java/util/HashMap."<init>":()V
       7: putstatic     #2                  // Field iconMap:Ljava/util/HashMap;
      10: return
}
