Compiled from "OWLDataPropertyRangeFrameSection.java"
public class org.protege.editor.owl.ui.frame.dataproperty.OWLDataPropertyRangeFrameSection extends org.protege.editor.owl.ui.frame.AbstractOWLFrameSection<org.semanticweb.owlapi.model.OWLDataProperty, org.semanticweb.owlapi.model.OWLDataPropertyRangeAxiom, org.semanticweb.owlapi.model.OWLDataRange> {
  public static final java.lang.String LABEL;

  private java.util.Set<org.semanticweb.owlapi.model.OWLDataRange> addedRanges;

  public org.protege.editor.owl.ui.frame.dataproperty.OWLDataPropertyRangeFrameSection(org.protege.editor.owl.OWLEditorKit, org.protege.editor.owl.ui.frame.OWLFrame<? extends org.semanticweb.owlapi.model.OWLDataProperty>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #2                  // String Ranges
       4: ldc           #3                  // String Range
       6: aload_2
       7: invokespecial #4                  // Method org/protege/editor/owl/ui/frame/AbstractOWLFrameSection."<init>":(Lorg/protege/editor/owl/OWLEditorKit;Ljava/lang/String;Ljava/lang/String;Lorg/protege/editor/owl/ui/frame/OWLFrame;)V
      10: aload_0
      11: new           #5                  // class java/util/HashSet
      14: dup
      15: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      18: putfield      #7                  // Field addedRanges:Ljava/util/Set;
      21: return

  protected org.semanticweb.owlapi.model.OWLDataPropertyRangeAxiom createAxiom(org.semanticweb.owlapi.model.OWLDataRange);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getOWLDataFactory:()Lorg/semanticweb/owlapi/model/OWLDataFactory;
       4: aload_0
       5: invokevirtual #9                  // Method getRootObject:()Ljava/lang/Object;
       8: checkcast     #10                 // class org/semanticweb/owlapi/model/OWLDataPropertyExpression
      11: aload_1
      12: invokeinterface #11,  3           // InterfaceMethod org/semanticweb/owlapi/model/OWLDataFactory.getOWLDataPropertyRangeAxiom:(Lorg/semanticweb/owlapi/model/OWLDataPropertyExpression;Lorg/semanticweb/owlapi/model/OWLDataRange;)Lorg/semanticweb/owlapi/model/OWLDataPropertyRangeAxiom;
      17: areturn

  public org.protege.editor.owl.ui.editor.OWLObjectEditor<org.semanticweb.owlapi.model.OWLDataRange> getObjectEditor();
    Code:
       0: new           #12                 // class org/protege/editor/owl/ui/editor/OWLDataRangeEditor
       3: dup
       4: aload_0
       5: invokevirtual #13                 // Method getOWLEditorKit:()Lorg/protege/editor/owl/OWLEditorKit;
       8: invokespecial #14                 // Method org/protege/editor/owl/ui/editor/OWLDataRangeEditor."<init>":(Lorg/protege/editor/owl/OWLEditorKit;)V
      11: areturn

  protected void clear();
    Code:
       0: aload_0
       1: getfield      #7                  // Field addedRanges:Ljava/util/Set;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/Set.clear:()V
       9: return

  protected void refill(org.semanticweb.owlapi.model.OWLOntology);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #9                  // Method getRootObject:()Ljava/lang/Object;
       5: checkcast     #16                 // class org/semanticweb/owlapi/model/OWLDataProperty
       8: invokeinterface #17,  2           // InterfaceMethod org/semanticweb/owlapi/model/OWLOntology.getDataPropertyRangeAxioms:(Lorg/semanticweb/owlapi/model/OWLDataProperty;)Ljava/util/Set;
      13: invokeinterface #18,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          85
      28: aload_2
      29: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #21                 // class org/semanticweb/owlapi/model/OWLDataPropertyRangeAxiom
      37: astore_3
      38: aload_0
      39: new           #22                 // class org/protege/editor/owl/ui/frame/dataproperty/OWLDataPropertyRangeFrameSectionRow
      42: dup
      43: aload_0
      44: invokevirtual #13                 // Method getOWLEditorKit:()Lorg/protege/editor/owl/OWLEditorKit;
      47: aload_0
      48: aload_1
      49: aload_0
      50: invokevirtual #9                  // Method getRootObject:()Ljava/lang/Object;
      53: checkcast     #16                 // class org/semanticweb/owlapi/model/OWLDataProperty
      56: aload_3
      57: invokespecial #23                 // Method org/protege/editor/owl/ui/frame/dataproperty/OWLDataPropertyRangeFrameSectionRow."<init>":(Lorg/protege/editor/owl/OWLEditorKit;Lorg/protege/editor/owl/ui/frame/OWLFrameSection;Lorg/semanticweb/owlapi/model/OWLOntology;Lorg/semanticweb/owlapi/model/OWLDataProperty;Lorg/semanticweb/owlapi/model/OWLDataPropertyRangeAxiom;)V
      60: invokevirtual #24                 // Method addRow:(Lorg/protege/editor/owl/ui/frame/OWLFrameSectionRow;)V
      63: aload_0
      64: getfield      #7                  // Field addedRanges:Ljava/util/Set;
      67: aload_3
      68: invokeinterface #25,  1           // InterfaceMethod org/semanticweb/owlapi/model/OWLDataPropertyRangeAxiom.getRange:()Lorg/semanticweb/owlapi/model/OWLPropertyRange;
      73: checkcast     #26                 // class org/semanticweb/owlapi/model/OWLDataRange
      76: invokeinterface #27,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      81: pop
      82: goto          19
      85: return

  protected boolean isResettingChange(org.semanticweb.owlapi.model.OWLOntologyChange);
    Code:
       0: aload_1
       1: invokevirtual #28                 // Method org/semanticweb/owlapi/model/OWLOntologyChange.isAxiomChange:()Z
       4: ifeq          46
       7: aload_1
       8: invokevirtual #29                 // Method org/semanticweb/owlapi/model/OWLOntologyChange.getAxiom:()Lorg/semanticweb/owlapi/model/OWLAxiom;
      11: instanceof    #21                 // class org/semanticweb/owlapi/model/OWLDataPropertyRangeAxiom
      14: ifeq          46
      17: aload_1
      18: invokevirtual #29                 // Method org/semanticweb/owlapi/model/OWLOntologyChange.getAxiom:()Lorg/semanticweb/owlapi/model/OWLAxiom;
      21: checkcast     #21                 // class org/semanticweb/owlapi/model/OWLDataPropertyRangeAxiom
      24: invokeinterface #30,  1           // InterfaceMethod org/semanticweb/owlapi/model/OWLDataPropertyRangeAxiom.getProperty:()Lorg/semanticweb/owlapi/model/OWLPropertyExpression;
      29: checkcast     #10                 // class org/semanticweb/owlapi/model/OWLDataPropertyExpression
      32: aload_0
      33: invokevirtual #9                  // Method getRootObject:()Ljava/lang/Object;
      36: invokevirtual #31                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  public java.util.Comparator<org.protege.editor.owl.ui.frame.OWLFrameSectionRow<org.semanticweb.owlapi.model.OWLDataProperty, org.semanticweb.owlapi.model.OWLDataPropertyRangeAxiom, org.semanticweb.owlapi.model.OWLDataRange>> getRowComparator();
    Code:
       0: aconst_null
       1: areturn

  protected org.semanticweb.owlapi.model.OWLAxiom createAxiom(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #26                 // class org/semanticweb/owlapi/model/OWLDataRange
       5: invokevirtual #32                 // Method createAxiom:(Lorg/semanticweb/owlapi/model/OWLDataRange;)Lorg/semanticweb/owlapi/model/OWLDataPropertyRangeAxiom;
       8: areturn
}
