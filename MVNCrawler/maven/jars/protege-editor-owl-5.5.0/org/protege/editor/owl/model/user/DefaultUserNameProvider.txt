Compiled from "DefaultUserNameProvider.java"
public class org.protege.editor.owl.model.user.DefaultUserNameProvider implements org.protege.editor.owl.model.user.UserNameProvider {
  public static final java.lang.String SYSTEM_USER_NAME_PROPERTY;

  private final org.protege.editor.owl.model.user.UserNameProvider gitRepositoryUserNameProvider;

  private final org.protege.editor.owl.model.user.UserNamePreferencesManager preferencesManager;

  private final java.util.Properties properties;

  public org.protege.editor.owl.model.user.DefaultUserNameProvider(org.protege.editor.owl.model.user.UserNameProvider, org.protege.editor.owl.model.user.UserNamePreferencesManager, java.util.Properties);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #3                  // class org/protege/editor/owl/model/user/UserNameProvider
      12: putfield      #4                  // Field gitRepositoryUserNameProvider:Lorg/protege/editor/owl/model/user/UserNameProvider;
      15: aload_0
      16: aload_2
      17: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #5                  // class org/protege/editor/owl/model/user/UserNamePreferencesManager
      23: putfield      #6                  // Field preferencesManager:Lorg/protege/editor/owl/model/user/UserNamePreferencesManager;
      26: aload_0
      27: aload_3
      28: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #7                  // class java/util/Properties
      34: putfield      #8                  // Field properties:Ljava/util/Properties;
      37: return

  public java.util.Optional<java.lang.String> getUserName();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method getGitUserNameIfAvailable:()Ljava/util/Optional;
       4: astore_1
       5: aload_1
       6: invokevirtual #10                 // Method java/util/Optional.isPresent:()Z
       9: ifeq          14
      12: aload_1
      13: areturn
      14: aload_0
      15: getfield      #6                  // Field preferencesManager:Lorg/protege/editor/owl/model/user/UserNamePreferencesManager;
      18: invokevirtual #11                 // Method org/protege/editor/owl/model/user/UserNamePreferencesManager.getUserName:()Ljava/util/Optional;
      21: astore_2
      22: aload_2
      23: invokevirtual #10                 // Method java/util/Optional.isPresent:()Z
      26: ifeq          31
      29: aload_2
      30: areturn
      31: aload_0
      32: getfield      #8                  // Field properties:Ljava/util/Properties;
      35: ldc           #13                 // String user.name
      37: invokevirtual #14                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      40: invokestatic  #15                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      43: areturn

  private java.util.Optional<java.lang.String> getGitUserNameIfAvailable();
    Code:
       0: aload_0
       1: getfield      #6                  // Field preferencesManager:Lorg/protege/editor/owl/model/user/UserNamePreferencesManager;
       4: invokevirtual #16                 // Method org/protege/editor/owl/model/user/UserNamePreferencesManager.isUseGitUserNameIfAvailable:()Z
       7: ifeq          20
      10: aload_0
      11: getfield      #4                  // Field gitRepositoryUserNameProvider:Lorg/protege/editor/owl/model/user/UserNameProvider;
      14: invokeinterface #17,  1           // InterfaceMethod org/protege/editor/owl/model/user/UserNameProvider.getUserName:()Ljava/util/Optional;
      19: areturn
      20: invokestatic  #18                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      23: areturn
}
