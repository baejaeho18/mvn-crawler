Compiled from "OWLIconProviderImpl.java"
public class org.protege.editor.owl.ui.renderer.OWLIconProviderImpl extends org.semanticweb.owlapi.util.OWLObjectVisitorAdapter implements org.protege.editor.owl.ui.renderer.OWLIconProvider {
  private javax.swing.Icon icon;

  private final javax.swing.Icon primitiveClassIcon;

  private final javax.swing.Icon definedClassIcon;

  private final javax.swing.Icon objectPropertyIcon;

  private final javax.swing.Icon dataPropertyIcon;

  private final javax.swing.Icon annotationPropertyIcon;

  private final javax.swing.Icon individualIcon;

  private final javax.swing.Icon dataTypeIcon;

  private final javax.swing.Icon ontologyIcon;

  private final javax.swing.Icon ontologyMissing;

  private final org.protege.editor.owl.ui.renderer.context.DefinedClassChecker definedClassChecker;

  public org.protege.editor.owl.ui.renderer.OWLIconProviderImpl(org.protege.editor.owl.model.OWLModelManager);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/semanticweb/owlapi/util/OWLObjectVisitorAdapter."<init>":()V
       4: aload_0
       5: new           #2                  // class org/protege/editor/owl/ui/renderer/OWLClassIcon
       8: dup
       9: getstatic     #3                  // Field org/protege/editor/owl/ui/renderer/OWLClassIcon$Type.PRIMITIVE:Lorg/protege/editor/owl/ui/renderer/OWLClassIcon$Type;
      12: invokespecial #4                  // Method org/protege/editor/owl/ui/renderer/OWLClassIcon."<init>":(Lorg/protege/editor/owl/ui/renderer/OWLClassIcon$Type;)V
      15: putfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
      18: aload_0
      19: new           #2                  // class org/protege/editor/owl/ui/renderer/OWLClassIcon
      22: dup
      23: getstatic     #6                  // Field org/protege/editor/owl/ui/renderer/OWLClassIcon$Type.DEFINED:Lorg/protege/editor/owl/ui/renderer/OWLClassIcon$Type;
      26: invokespecial #4                  // Method org/protege/editor/owl/ui/renderer/OWLClassIcon."<init>":(Lorg/protege/editor/owl/ui/renderer/OWLClassIcon$Type;)V
      29: putfield      #7                  // Field definedClassIcon:Ljavax/swing/Icon;
      32: aload_0
      33: new           #8                  // class org/protege/editor/owl/ui/renderer/OWLObjectPropertyIcon
      36: dup
      37: invokespecial #9                  // Method org/protege/editor/owl/ui/renderer/OWLObjectPropertyIcon."<init>":()V
      40: putfield      #10                 // Field objectPropertyIcon:Ljavax/swing/Icon;
      43: aload_0
      44: new           #11                 // class org/protege/editor/owl/ui/renderer/OWLDataPropertyIcon
      47: dup
      48: invokespecial #12                 // Method org/protege/editor/owl/ui/renderer/OWLDataPropertyIcon."<init>":()V
      51: putfield      #13                 // Field dataPropertyIcon:Ljavax/swing/Icon;
      54: aload_0
      55: new           #14                 // class org/protege/editor/owl/ui/renderer/OWLAnnotationPropertyIcon
      58: dup
      59: invokespecial #15                 // Method org/protege/editor/owl/ui/renderer/OWLAnnotationPropertyIcon."<init>":()V
      62: putfield      #16                 // Field annotationPropertyIcon:Ljavax/swing/Icon;
      65: aload_0
      66: new           #17                 // class org/protege/editor/owl/ui/renderer/OWLIndividualIcon
      69: dup
      70: getstatic     #18                 // Field org/protege/editor/owl/ui/renderer/OWLEntityIcon$FillType.FILLED:Lorg/protege/editor/owl/ui/renderer/OWLEntityIcon$FillType;
      73: invokespecial #19                 // Method org/protege/editor/owl/ui/renderer/OWLIndividualIcon."<init>":(Lorg/protege/editor/owl/ui/renderer/OWLEntityIcon$FillType;)V
      76: putfield      #20                 // Field individualIcon:Ljavax/swing/Icon;
      79: aload_0
      80: new           #21                 // class org/protege/editor/owl/ui/renderer/OWLDatatypeIcon
      83: dup
      84: invokespecial #22                 // Method org/protege/editor/owl/ui/renderer/OWLDatatypeIcon."<init>":()V
      87: putfield      #23                 // Field dataTypeIcon:Ljavax/swing/Icon;
      90: aload_0
      91: ldc           #24                 // String ontology.png
      93: invokestatic  #25                 // Method org/protege/editor/owl/ui/OWLIcons.getIcon:(Ljava/lang/String;)Ljavax/swing/Icon;
      96: putfield      #26                 // Field ontologyIcon:Ljavax/swing/Icon;
      99: aload_0
     100: ldc           #27                 // String ontology.missing.png
     102: invokestatic  #25                 // Method org/protege/editor/owl/ui/OWLIcons.getIcon:(Ljava/lang/String;)Ljavax/swing/Icon;
     105: putfield      #28                 // Field ontologyMissing:Ljavax/swing/Icon;
     108: aload_0
     109: aload_1
     110: invokedynamic #29,  0             // InvokeDynamic #0:isDefinedClass:(Lorg/protege/editor/owl/model/OWLModelManager;)Lorg/protege/editor/owl/ui/renderer/context/DefinedClassChecker;
     115: putfield      #30                 // Field definedClassChecker:Lorg/protege/editor/owl/ui/renderer/context/DefinedClassChecker;
     118: return

  public org.protege.editor.owl.ui.renderer.OWLIconProviderImpl(org.protege.editor.owl.ui.renderer.context.DefinedClassChecker);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/semanticweb/owlapi/util/OWLObjectVisitorAdapter."<init>":()V
       4: aload_0
       5: new           #2                  // class org/protege/editor/owl/ui/renderer/OWLClassIcon
       8: dup
       9: getstatic     #3                  // Field org/protege/editor/owl/ui/renderer/OWLClassIcon$Type.PRIMITIVE:Lorg/protege/editor/owl/ui/renderer/OWLClassIcon$Type;
      12: invokespecial #4                  // Method org/protege/editor/owl/ui/renderer/OWLClassIcon."<init>":(Lorg/protege/editor/owl/ui/renderer/OWLClassIcon$Type;)V
      15: putfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
      18: aload_0
      19: new           #2                  // class org/protege/editor/owl/ui/renderer/OWLClassIcon
      22: dup
      23: getstatic     #6                  // Field org/protege/editor/owl/ui/renderer/OWLClassIcon$Type.DEFINED:Lorg/protege/editor/owl/ui/renderer/OWLClassIcon$Type;
      26: invokespecial #4                  // Method org/protege/editor/owl/ui/renderer/OWLClassIcon."<init>":(Lorg/protege/editor/owl/ui/renderer/OWLClassIcon$Type;)V
      29: putfield      #7                  // Field definedClassIcon:Ljavax/swing/Icon;
      32: aload_0
      33: new           #8                  // class org/protege/editor/owl/ui/renderer/OWLObjectPropertyIcon
      36: dup
      37: invokespecial #9                  // Method org/protege/editor/owl/ui/renderer/OWLObjectPropertyIcon."<init>":()V
      40: putfield      #10                 // Field objectPropertyIcon:Ljavax/swing/Icon;
      43: aload_0
      44: new           #11                 // class org/protege/editor/owl/ui/renderer/OWLDataPropertyIcon
      47: dup
      48: invokespecial #12                 // Method org/protege/editor/owl/ui/renderer/OWLDataPropertyIcon."<init>":()V
      51: putfield      #13                 // Field dataPropertyIcon:Ljavax/swing/Icon;
      54: aload_0
      55: new           #14                 // class org/protege/editor/owl/ui/renderer/OWLAnnotationPropertyIcon
      58: dup
      59: invokespecial #15                 // Method org/protege/editor/owl/ui/renderer/OWLAnnotationPropertyIcon."<init>":()V
      62: putfield      #16                 // Field annotationPropertyIcon:Ljavax/swing/Icon;
      65: aload_0
      66: new           #17                 // class org/protege/editor/owl/ui/renderer/OWLIndividualIcon
      69: dup
      70: getstatic     #18                 // Field org/protege/editor/owl/ui/renderer/OWLEntityIcon$FillType.FILLED:Lorg/protege/editor/owl/ui/renderer/OWLEntityIcon$FillType;
      73: invokespecial #19                 // Method org/protege/editor/owl/ui/renderer/OWLIndividualIcon."<init>":(Lorg/protege/editor/owl/ui/renderer/OWLEntityIcon$FillType;)V
      76: putfield      #20                 // Field individualIcon:Ljavax/swing/Icon;
      79: aload_0
      80: new           #21                 // class org/protege/editor/owl/ui/renderer/OWLDatatypeIcon
      83: dup
      84: invokespecial #22                 // Method org/protege/editor/owl/ui/renderer/OWLDatatypeIcon."<init>":()V
      87: putfield      #23                 // Field dataTypeIcon:Ljavax/swing/Icon;
      90: aload_0
      91: ldc           #24                 // String ontology.png
      93: invokestatic  #25                 // Method org/protege/editor/owl/ui/OWLIcons.getIcon:(Ljava/lang/String;)Ljavax/swing/Icon;
      96: putfield      #26                 // Field ontologyIcon:Ljavax/swing/Icon;
      99: aload_0
     100: ldc           #27                 // String ontology.missing.png
     102: invokestatic  #25                 // Method org/protege/editor/owl/ui/OWLIcons.getIcon:(Ljava/lang/String;)Ljavax/swing/Icon;
     105: putfield      #28                 // Field ontologyMissing:Ljavax/swing/Icon;
     108: aload_0
     109: aload_1
     110: invokestatic  #31                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
     113: checkcast     #32                 // class org/protege/editor/owl/ui/renderer/context/DefinedClassChecker
     116: putfield      #30                 // Field definedClassChecker:Lorg/protege/editor/owl/ui/renderer/context/DefinedClassChecker;
     119: return

  private static boolean isDefined(org.semanticweb.owlapi.model.OWLClass, org.semanticweb.owlapi.model.OWLOntology);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #33                 // Method org/semanticweb/owlapi/search/EntitySearcher.isDefined:(Lorg/semanticweb/owlapi/model/OWLClass;Lorg/semanticweb/owlapi/model/OWLOntology;)Z
       5: ifeq          10
       8: iconst_1
       9: ireturn
      10: aload_1
      11: aload_0
      12: invokeinterface #34,  2           // InterfaceMethod org/semanticweb/owlapi/model/OWLOntology.getDisjointUnionAxioms:(Lorg/semanticweb/owlapi/model/OWLClass;)Ljava/util/Set;
      17: astore_2
      18: aload_2
      19: invokeinterface #35,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      24: ifne          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public javax.swing.Icon getIcon();
    Code:
       0: aload_0
       1: getfield      #36                 // Field icon:Ljavax/swing/Icon;
       4: areturn

  public javax.swing.Icon getIcon(org.semanticweb.owlapi.model.OWLObject);
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       5: aload_1
       6: aload_0
       7: invokeinterface #37,  2           // InterfaceMethod org/semanticweb/owlapi/model/OWLObject.accept:(Lorg/semanticweb/owlapi/model/OWLObjectVisitor;)V
      12: aload_0
      13: getfield      #36                 // Field icon:Ljavax/swing/Icon;
      16: areturn
      17: astore_2
      18: aconst_null
      19: areturn
    Exception table:
       from    to  target type
           0    16    17   Class java/lang/Exception

  public void visit(org.semanticweb.owlapi.model.OWLObjectIntersectionOf);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLDatatype);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #23                 // Field dataTypeIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLDataOneOf);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #23                 // Field dataTypeIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLDataAllValuesFrom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLDataProperty);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #13                 // Field dataPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLDataSomeValuesFrom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLDataHasValue);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLDifferentIndividualsAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #20                 // Field individualIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLDisjointDataPropertiesAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #13                 // Field dataPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLFunctionalObjectPropertyAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field objectPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLDisjointObjectPropertiesAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field objectPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLInverseObjectPropertiesAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field objectPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLHasKeyAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLDatatypeDefinitionAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #23                 // Field dataTypeIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLInverseFunctionalObjectPropertyAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field objectPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLObjectPropertyDomainAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field objectPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLEquivalentObjectPropertiesAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field objectPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLNegativeDataPropertyAssertionAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #20                 // Field individualIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLObjectPropertyRangeAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field objectPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLObjectPropertyAssertionAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #20                 // Field individualIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLSubObjectPropertyOfAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field objectPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLNamedIndividual);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #20                 // Field individualIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLAnonymousIndividual);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #20                 // Field individualIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLObjectAllValuesFrom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLObjectMinCardinality);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLObjectExactCardinality);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLObjectMaxCardinality);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLObjectHasSelf);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLDataMinCardinality);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLDataExactCardinality);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLDataMaxCardinality);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLObjectProperty);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field objectPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLObjectSomeValuesFrom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLObjectHasValue);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLObjectComplementOf);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLOntology);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #26                 // Field ontologyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLObjectUnionOf);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLDeclarationAxiom);
    Code:
       0: aload_1
       1: invokeinterface #39,  1           // InterfaceMethod org/semanticweb/owlapi/model/OWLDeclarationAxiom.getEntity:()Lorg/semanticweb/owlapi/model/OWLEntity;
       6: aload_0
       7: invokeinterface #40,  2           // InterfaceMethod org/semanticweb/owlapi/model/OWLEntity.accept:(Lorg/semanticweb/owlapi/model/OWLObjectVisitor;)V
      12: return

  public void visit(org.semanticweb.owlapi.model.OWLSubClassOfAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLNegativeObjectPropertyAssertionAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #20                 // Field individualIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLAsymmetricObjectPropertyAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field objectPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLReflexiveObjectPropertyAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field objectPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLDisjointClassesAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLDataPropertyDomainAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #13                 // Field dataPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLDisjointUnionAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLSymmetricObjectPropertyAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field objectPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLDataPropertyRangeAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #13                 // Field dataPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLFunctionalDataPropertyAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #13                 // Field dataPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLEquivalentDataPropertiesAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #13                 // Field dataPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLEquivalentClassesAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLDataPropertyAssertionAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #20                 // Field individualIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLTransitiveObjectPropertyAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field objectPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLIrreflexiveObjectPropertyAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field objectPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLSubDataPropertyOfAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #13                 // Field dataPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLSameIndividualAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #20                 // Field individualIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLClassAssertionAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #20                 // Field individualIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLSubPropertyChainOfAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field objectPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLClass);
    Code:
       0: aload_0
       1: getfield      #30                 // Field definedClassChecker:Lorg/protege/editor/owl/ui/renderer/context/DefinedClassChecker;
       4: aload_1
       5: invokeinterface #41,  2           // InterfaceMethod org/protege/editor/owl/ui/renderer/context/DefinedClassChecker.isDefinedClass:(Lorg/semanticweb/owlapi/model/OWLClass;)Z
      10: ifeq          24
      13: aload_0
      14: aload_0
      15: getfield      #7                  // Field definedClassIcon:Ljavax/swing/Icon;
      18: putfield      #36                 // Field icon:Ljavax/swing/Icon;
      21: goto          32
      24: aload_0
      25: aload_0
      26: getfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
      29: putfield      #36                 // Field icon:Ljavax/swing/Icon;
      32: return

  public void visit(org.semanticweb.owlapi.model.OWLObjectOneOf);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field primitiveClassIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLAnnotationProperty);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #16                 // Field annotationPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLAnnotationAssertionAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #16                 // Field annotationPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLSubAnnotationPropertyOfAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #16                 // Field annotationPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLAnnotationPropertyDomainAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #16                 // Field annotationPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  public void visit(org.semanticweb.owlapi.model.OWLAnnotationPropertyRangeAxiom);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #16                 // Field annotationPropertyIcon:Ljavax/swing/Icon;
       5: putfield      #36                 // Field icon:Ljavax/swing/Icon;
       8: return

  private static boolean lambda$new$0(org.protege.editor.owl.model.OWLModelManager, org.semanticweb.owlapi.model.OWLClass);
    Code:
       0: aload_0
       1: invokeinterface #42,  1           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.getActiveOntologies:()Ljava/util/Set;
       6: invokeinterface #43,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          44
      21: aload_2
      22: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #46                 // class org/semanticweb/owlapi/model/OWLOntology
      30: astore_3
      31: aload_1
      32: aload_3
      33: invokestatic  #47                 // Method isDefined:(Lorg/semanticweb/owlapi/model/OWLClass;Lorg/semanticweb/owlapi/model/OWLOntology;)Z
      36: ifeq          41
      39: iconst_1
      40: ireturn
      41: goto          12
      44: iconst_0
      45: ireturn
}
