Compiled from "OWLClassExpressionComparator.java"
public class org.protege.editor.owl.ui.OWLClassExpressionComparator implements java.util.Comparator<org.semanticweb.owlapi.model.OWLClassExpression> {
  private org.protege.editor.owl.ui.OWLClassExpressionComparator$TypeVisitor typeVisitor;

  private org.protege.editor.owl.model.OWLModelManager owlModelManager;

  private org.semanticweb.owlapi.model.OWLClassExpression focusedDescription;

  public org.protege.editor.owl.ui.OWLClassExpressionComparator(org.protege.editor.owl.model.OWLModelManager);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field owlModelManager:Lorg/protege/editor/owl/model/OWLModelManager;
       9: aload_0
      10: new           #3                  // class org/protege/editor/owl/ui/OWLClassExpressionComparator$TypeVisitor
      13: dup
      14: aload_0
      15: aconst_null
      16: invokespecial #4                  // Method org/protege/editor/owl/ui/OWLClassExpressionComparator$TypeVisitor."<init>":(Lorg/protege/editor/owl/ui/OWLClassExpressionComparator;Lorg/protege/editor/owl/ui/OWLClassExpressionComparator$1;)V
      19: putfield      #5                  // Field typeVisitor:Lorg/protege/editor/owl/ui/OWLClassExpressionComparator$TypeVisitor;
      22: return

  public org.semanticweb.owlapi.model.OWLClassExpression getFocusedDescription();
    Code:
       0: aload_0
       1: getfield      #6                  // Field focusedDescription:Lorg/semanticweb/owlapi/model/OWLClassExpression;
       4: areturn

  public void setFocusedDescription(org.semanticweb.owlapi.model.OWLClassExpression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field focusedDescription:Lorg/semanticweb/owlapi/model/OWLClassExpression;
       5: return

  public int compare(org.semanticweb.owlapi.model.OWLClassExpression, org.semanticweb.owlapi.model.OWLClassExpression);
    Code:
       0: aload_0
       1: getfield      #6                  // Field focusedDescription:Lorg/semanticweb/owlapi/model/OWLClassExpression;
       4: ifnull        33
       7: aload_1
       8: aload_0
       9: getfield      #6                  // Field focusedDescription:Lorg/semanticweb/owlapi/model/OWLClassExpression;
      12: invokevirtual #7                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      15: ifeq          20
      18: iconst_m1
      19: ireturn
      20: aload_2
      21: aload_0
      22: getfield      #6                  // Field focusedDescription:Lorg/semanticweb/owlapi/model/OWLClassExpression;
      25: invokevirtual #7                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      28: ifeq          33
      31: iconst_1
      32: ireturn
      33: aload_1
      34: aload_0
      35: getfield      #5                  // Field typeVisitor:Lorg/protege/editor/owl/ui/OWLClassExpressionComparator$TypeVisitor;
      38: invokeinterface #8,  2            // InterfaceMethod org/semanticweb/owlapi/model/OWLClassExpression.accept:(Lorg/semanticweb/owlapi/model/OWLClassExpressionVisitor;)V
      43: aload_0
      44: getfield      #5                  // Field typeVisitor:Lorg/protege/editor/owl/ui/OWLClassExpressionComparator$TypeVisitor;
      47: invokevirtual #9                  // Method org/protege/editor/owl/ui/OWLClassExpressionComparator$TypeVisitor.getType:()I
      50: istore_3
      51: aload_2
      52: aload_0
      53: getfield      #5                  // Field typeVisitor:Lorg/protege/editor/owl/ui/OWLClassExpressionComparator$TypeVisitor;
      56: invokeinterface #8,  2            // InterfaceMethod org/semanticweb/owlapi/model/OWLClassExpression.accept:(Lorg/semanticweb/owlapi/model/OWLClassExpressionVisitor;)V
      61: aload_0
      62: getfield      #5                  // Field typeVisitor:Lorg/protege/editor/owl/ui/OWLClassExpressionComparator$TypeVisitor;
      65: invokevirtual #9                  // Method org/protege/editor/owl/ui/OWLClassExpressionComparator$TypeVisitor.getType:()I
      68: istore        4
      70: iload_3
      71: iload         4
      73: isub
      74: istore        5
      76: iload         5
      78: ifeq          84
      81: iload         5
      83: ireturn
      84: aload_0
      85: getfield      #2                  // Field owlModelManager:Lorg/protege/editor/owl/model/OWLModelManager;
      88: ifnull        115
      91: aload_0
      92: getfield      #2                  // Field owlModelManager:Lorg/protege/editor/owl/model/OWLModelManager;
      95: aload_1
      96: invokeinterface #10,  2           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.getRendering:(Lorg/semanticweb/owlapi/model/OWLObject;)Ljava/lang/String;
     101: aload_0
     102: getfield      #2                  // Field owlModelManager:Lorg/protege/editor/owl/model/OWLModelManager;
     105: aload_2
     106: invokeinterface #10,  2           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.getRendering:(Lorg/semanticweb/owlapi/model/OWLObject;)Ljava/lang/String;
     111: invokevirtual #11                 // Method java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I
     114: ireturn
     115: iconst_m1
     116: ireturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #12                 // class org/semanticweb/owlapi/model/OWLClassExpression
       5: aload_2
       6: checkcast     #12                 // class org/semanticweb/owlapi/model/OWLClassExpression
       9: invokevirtual #13                 // Method compare:(Lorg/semanticweb/owlapi/model/OWLClassExpression;Lorg/semanticweb/owlapi/model/OWLClassExpression;)I
      12: ireturn
}
