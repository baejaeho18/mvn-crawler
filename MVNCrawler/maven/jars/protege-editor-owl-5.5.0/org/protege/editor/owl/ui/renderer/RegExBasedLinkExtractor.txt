Compiled from "RegExBasedLinkExtractor.java"
public class org.protege.editor.owl.ui.renderer.RegExBasedLinkExtractor implements org.protege.editor.owl.ui.renderer.LinkExtractor {
  private static final org.slf4j.Logger logger;

  private final java.lang.String name;

  private final java.util.regex.Pattern linkPattern;

  private final java.lang.String replacementString;

  public org.protege.editor.owl.ui.renderer.RegExBasedLinkExtractor(java.lang.String, java.util.regex.Pattern, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #3                  // class java/lang/String
      12: putfield      #4                  // Field name:Ljava/lang/String;
      15: aload_0
      16: aload_2
      17: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #5                  // class java/util/regex/Pattern
      23: putfield      #6                  // Field linkPattern:Ljava/util/regex/Pattern;
      26: aload_0
      27: aload_3
      28: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #3                  // class java/lang/String
      34: putfield      #7                  // Field replacementString:Ljava/lang/String;
      37: return

  public java.util.Optional<java.lang.String> extractLinkLiteral(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field linkPattern:Ljava/util/regex/Pattern;
       4: aload_1
       5: invokevirtual #8                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       8: astore_2
       9: aload_2
      10: invokevirtual #9                  // Method java/util/regex/Matcher.matches:()Z
      13: ifeq          30
      16: aload_2
      17: aload_0
      18: getfield      #7                  // Field replacementString:Ljava/lang/String;
      21: invokevirtual #10                 // Method java/util/regex/Matcher.replaceAll:(Ljava/lang/String;)Ljava/lang/String;
      24: astore_3
      25: aload_3
      26: invokestatic  #11                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      29: areturn
      30: invokestatic  #12                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      33: areturn
      34: astore_2
      35: getstatic     #14                 // Field logger:Lorg/slf4j/Logger;
      38: ldc           #15                 // String Link extractor ({}) threw an IndexOutOfBoundsException: {}
      40: aload_0
      41: getfield      #4                  // Field name:Ljava/lang/String;
      44: aload_2
      45: invokevirtual #16                 // Method java/lang/IndexOutOfBoundsException.getMessage:()Ljava/lang/String;
      48: invokeinterface #17,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      53: invokestatic  #12                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      56: areturn
    Exception table:
       from    to  target type
           0    29    34   Class java/lang/IndexOutOfBoundsException
          30    33    34   Class java/lang/IndexOutOfBoundsException

  public java.util.Optional<org.protege.editor.owl.ui.renderer.layout.Link> extractLink(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method extractLinkLiteral:(Ljava/lang/String;)Ljava/util/Optional;
       5: aload_0
       6: invokedynamic #19,  0             // InvokeDynamic #0:apply:(Lorg/protege/editor/owl/ui/renderer/RegExBasedLinkExtractor;)Ljava/util/function/Function;
      11: invokevirtual #20                 // Method java/util/Optional.flatMap:(Ljava/util/function/Function;)Ljava/util/Optional;
      14: areturn

  public java.lang.String toString();
    Code:
       0: ldc           #21                 // String RegExBasedLinkExtractor
       2: invokestatic  #22                 // Method com/google/common/base/MoreObjects.toStringHelper:(Ljava/lang/String;)Lcom/google/common/base/MoreObjects$ToStringHelper;
       5: ldc           #23                 // String name
       7: aload_0
       8: getfield      #4                  // Field name:Ljava/lang/String;
      11: invokevirtual #24                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
      14: ldc           #25                 // String pattern
      16: aload_0
      17: getfield      #6                  // Field linkPattern:Ljava/util/regex/Pattern;
      20: invokevirtual #26                 // Method java/util/regex/Pattern.pattern:()Ljava/lang/String;
      23: invokevirtual #24                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
      26: ldc           #27                 // String replacement
      28: aload_0
      29: getfield      #7                  // Field replacementString:Ljava/lang/String;
      32: invokevirtual #24                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
      35: invokevirtual #28                 // Method com/google/common/base/MoreObjects$ToStringHelper.toString:()Ljava/lang/String;
      38: areturn

  public int hashCode();
    Code:
       0: iconst_3
       1: anewarray     #29                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #4                  // Field name:Ljava/lang/String;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #6                  // Field linkPattern:Ljava/util/regex/Pattern;
      17: aastore
      18: dup
      19: iconst_2
      20: aload_0
      21: getfield      #7                  // Field replacementString:Ljava/lang/String;
      24: aastore
      25: invokestatic  #30                 // Method com/google/common/base/Objects.hashCode:([Ljava/lang/Object;)I
      28: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #31                 // class org/protege/editor/owl/ui/renderer/RegExBasedLinkExtractor
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #31                 // class org/protege/editor/owl/ui/renderer/RegExBasedLinkExtractor
      20: astore_2
      21: aload_0
      22: getfield      #4                  // Field name:Ljava/lang/String;
      25: aload_2
      26: getfield      #4                  // Field name:Ljava/lang/String;
      29: invokevirtual #32                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ifeq          67
      35: aload_0
      36: getfield      #6                  // Field linkPattern:Ljava/util/regex/Pattern;
      39: aload_2
      40: getfield      #6                  // Field linkPattern:Ljava/util/regex/Pattern;
      43: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      46: ifeq          67
      49: aload_0
      50: getfield      #7                  // Field replacementString:Ljava/lang/String;
      53: aload_2
      54: getfield      #7                  // Field replacementString:Ljava/lang/String;
      57: invokevirtual #32                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      60: ifeq          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ireturn

  private java.util.Optional lambda$extractLink$0(java.lang.String);
    Code:
       0: new           #34                 // class java/net/URI
       3: dup
       4: aload_1
       5: invokespecial #35                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
       8: astore_2
       9: new           #36                 // class org/protege/editor/owl/ui/renderer/layout/HTTPLink
      12: dup
      13: aload_2
      14: invokespecial #37                 // Method org/protege/editor/owl/ui/renderer/layout/HTTPLink."<init>":(Ljava/net/URI;)V
      17: invokestatic  #11                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      20: areturn
      21: astore_2
      22: getstatic     #14                 // Field logger:Lorg/slf4j/Logger;
      25: ldc           #39                 // String Link extractor ({}) returned invalid URI: {}
      27: aload_0
      28: getfield      #4                  // Field name:Ljava/lang/String;
      31: aload_2
      32: invokevirtual #40                 // Method java/net/URISyntaxException.getMessage:()Ljava/lang/String;
      35: invokeinterface #17,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      40: invokestatic  #12                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      43: areturn
    Exception table:
       from    to  target type
           0    20    21   Class java/net/URISyntaxException

  static {};
    Code:
       0: ldc           #31                 // class org/protege/editor/owl/ui/renderer/RegExBasedLinkExtractor
       2: invokestatic  #41                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #14                 // Field logger:Lorg/slf4j/Logger;
       8: return
}
