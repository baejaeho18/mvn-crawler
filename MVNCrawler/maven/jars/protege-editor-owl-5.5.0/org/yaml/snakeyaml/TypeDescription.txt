Compiled from "TypeDescription.java"
public final class org.yaml.snakeyaml.TypeDescription {
  private final java.lang.Class<? extends java.lang.Object> type;

  private org.yaml.snakeyaml.nodes.Tag tag;

  private java.util.Map<java.lang.String, java.lang.Class<? extends java.lang.Object>> listProperties;

  private java.util.Map<java.lang.String, java.lang.Class<? extends java.lang.Object>> keyProperties;

  private java.util.Map<java.lang.String, java.lang.Class<? extends java.lang.Object>> valueProperties;

  public org.yaml.snakeyaml.TypeDescription(java.lang.Class<? extends java.lang.Object>, org.yaml.snakeyaml.nodes.Tag);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field type:Ljava/lang/Class;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field tag:Lorg/yaml/snakeyaml/nodes/Tag;
      14: aload_0
      15: new           #4                  // class java/util/HashMap
      18: dup
      19: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      22: putfield      #6                  // Field listProperties:Ljava/util/Map;
      25: aload_0
      26: new           #4                  // class java/util/HashMap
      29: dup
      30: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      33: putfield      #7                  // Field keyProperties:Ljava/util/Map;
      36: aload_0
      37: new           #4                  // class java/util/HashMap
      40: dup
      41: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      44: putfield      #8                  // Field valueProperties:Ljava/util/Map;
      47: return

  public org.yaml.snakeyaml.TypeDescription(java.lang.Class<? extends java.lang.Object>, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #9                  // class org/yaml/snakeyaml/nodes/Tag
       5: dup
       6: aload_2
       7: invokespecial #10                 // Method org/yaml/snakeyaml/nodes/Tag."<init>":(Ljava/lang/String;)V
      10: invokespecial #11                 // Method "<init>":(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Tag;)V
      13: return

  public org.yaml.snakeyaml.TypeDescription(java.lang.Class<? extends java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: checkcast     #9                  // class org/yaml/snakeyaml/nodes/Tag
       6: invokespecial #11                 // Method "<init>":(Ljava/lang/Class;Lorg/yaml/snakeyaml/nodes/Tag;)V
       9: return

  public org.yaml.snakeyaml.nodes.Tag getTag();
    Code:
       0: aload_0
       1: getfield      #3                  // Field tag:Lorg/yaml/snakeyaml/nodes/Tag;
       4: areturn

  public void setTag(org.yaml.snakeyaml.nodes.Tag);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field tag:Lorg/yaml/snakeyaml/nodes/Tag;
       5: return

  public void setTag(java.lang.String);
    Code:
       0: aload_0
       1: new           #9                  // class org/yaml/snakeyaml/nodes/Tag
       4: dup
       5: aload_1
       6: invokespecial #10                 // Method org/yaml/snakeyaml/nodes/Tag."<init>":(Ljava/lang/String;)V
       9: invokevirtual #12                 // Method setTag:(Lorg/yaml/snakeyaml/nodes/Tag;)V
      12: return

  public java.lang.Class<? extends java.lang.Object> getType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field type:Ljava/lang/Class;
       4: areturn

  public void putListPropertyType(java.lang.String, java.lang.Class<? extends java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field listProperties:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public java.lang.Class<? extends java.lang.Object> getListPropertyType(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field listProperties:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #15                 // class java/lang/Class
      13: areturn

  public void putMapPropertyType(java.lang.String, java.lang.Class<? extends java.lang.Object>, java.lang.Class<? extends java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field keyProperties:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: getfield      #8                  // Field valueProperties:Ljava/util/Map;
      16: aload_1
      17: aload_3
      18: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: return

  public java.lang.Class<? extends java.lang.Object> getMapKeyType(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field keyProperties:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #15                 // class java/lang/Class
      13: areturn

  public java.lang.Class<? extends java.lang.Object> getMapValueType(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field valueProperties:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #15                 // class java/lang/Class
      13: areturn

  public java.lang.String toString();
    Code:
       0: new           #16                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #18                 // String TypeDescription for
       9: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #20                 // Method getType:()Ljava/lang/Class;
      16: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #22                 // String  (tag=\'
      21: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #23                 // Method getTag:()Lorg/yaml/snakeyaml/nodes/Tag;
      28: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #24                 // String \')
      33: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn
}
