Compiled from "WorkMailMessageFlowMock.scala"
public final class zio.aws.workmailmessageflow.WorkMailMessageFlowMock$$anon$1 implements zio.aws.workmailmessageflow.WorkMailMessageFlow {
  private final software.amazon.awssdk.services.workmailmessageflow.WorkMailMessageFlowAsyncClient api;

  private final zio.mock.Proxy proxy$1;

  public software.amazon.awssdk.services.workmailmessageflow.WorkMailMessageFlowAsyncClient api();
    Code:
       0: aload_0
       1: getfield      #38                 // Field api:Lsoftware/amazon/awssdk/services/workmailmessageflow/WorkMailMessageFlowAsyncClient;
       4: areturn

  public <R1> zio.aws.workmailmessageflow.WorkMailMessageFlow withAspect(zio.ZIOAspect<scala.runtime.Nothing$, R1, zio.aws.core.AwsError, zio.aws.core.AwsError, scala.runtime.Nothing$, zio.aws.core.aspects.package$Described<?>>, zio.ZEnvironment<R1>);
    Code:
       0: aload_0
       1: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.core.StreamingOutputResult<java.lang.Object, zio.aws.workmailmessageflow.model.GetRawMessageContentResponse$ReadOnly, java.lang.Object>> getRawMessageContent(zio.aws.workmailmessageflow.model.GetRawMessageContentRequest);
    Code:
       0: aload_0
       1: getfield      #53                 // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #57                 // Field zio/aws/workmailmessageflow/WorkMailMessageFlowMock$GetRawMessageContent$.MODULE$:Lzio/aws/workmailmessageflow/WorkMailMessageFlowMock$GetRawMessageContent$;
       7: aload_1
       8: invokevirtual #63                 // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.workmailmessageflow.model.PutRawMessageContentResponse$ReadOnly> putRawMessageContent(zio.aws.workmailmessageflow.model.PutRawMessageContentRequest);
    Code:
       0: aload_0
       1: getfield      #53                 // Field proxy$1:Lzio/mock/Proxy;
       4: getstatic     #70                 // Field zio/aws/workmailmessageflow/WorkMailMessageFlowMock$PutRawMessageContent$.MODULE$:Lzio/aws/workmailmessageflow/WorkMailMessageFlowMock$PutRawMessageContent$;
       7: aload_1
       8: invokevirtual #63                 // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public java.lang.Object withAspect(zio.ZIOAspect, zio.ZEnvironment);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #74                 // Method withAspect:(Lzio/ZIOAspect;Lzio/ZEnvironment;)Lzio/aws/workmailmessageflow/WorkMailMessageFlow;
       6: areturn

  public zio.aws.workmailmessageflow.WorkMailMessageFlowMock$$anon$1(zio.mock.Proxy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field proxy$1:Lzio/mock/Proxy;
       5: aload_0
       6: invokespecial #79                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aconst_null
      11: putfield      #38                 // Field api:Lsoftware/amazon/awssdk/services/workmailmessageflow/WorkMailMessageFlowAsyncClient;
      14: return
}
