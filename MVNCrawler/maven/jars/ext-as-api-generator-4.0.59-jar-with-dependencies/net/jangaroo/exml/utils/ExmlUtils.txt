Compiled from "ExmlUtils.java"
public class net.jangaroo.exml.utils.ExmlUtils {
  public net.jangaroo.exml.utils.ExmlUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String parsePackageFromNamespace(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #3                  // String exml:
       3: invokevirtual #4                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          21
       9: aload_0
      10: ldc           #3                  // String exml:
      12: invokevirtual #5                  // Method java/lang/String.length:()I
      15: invokevirtual #6                  // Method java/lang/String.substring:(I)Ljava/lang/String;
      18: goto          22
      21: aconst_null
      22: areturn

  public static boolean isExmlNamespace(java.lang.String);
    Code:
       0: ldc           #7                  // String http://www.jangaroo.net/exml/0.8
       2: aload_0
       3: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ireturn

  public static boolean isCodeExpression(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #9                  // String {
       3: invokevirtual #4                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          22
       9: aload_0
      10: ldc           #10                 // String }
      12: invokevirtual #11                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public static java.lang.String getCodeExpression(java.lang.String);
    Code:
       0: aload_0
       1: iconst_1
       2: aload_0
       3: invokevirtual #5                  // Method java/lang/String.length:()I
       6: iconst_1
       7: isub
       8: invokevirtual #12                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      11: areturn

  public static void addImport(java.util.Set<java.lang.String>, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        21
       4: aload_1
       5: ldc           #13                 // String .
       7: invokevirtual #14                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      10: ifeq          21
      13: aload_0
      14: aload_1
      15: invokeinterface #15,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      20: pop
      21: return

  public static java.lang.String createComponentClassName(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #5                  // Method java/lang/String.length:()I
       8: ifne          13
      11: aload_0
      12: areturn
      13: new           #16                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      20: aload_0
      21: iconst_0
      22: iconst_1
      23: invokevirtual #12                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      26: invokevirtual #18                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      29: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: iconst_1
      34: invokevirtual #6                  // Method java/lang/String.substring:(I)Ljava/lang/String;
      37: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: areturn

  public static java.util.Set<java.util.zip.ZipEntry> findXsdJarEntries(java.util.zip.ZipFile) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method java/util/zip/ZipFile.entries:()Ljava/util/Enumeration;
       4: astore_1
       5: new           #22                 // class java/util/LinkedHashSet
       8: dup
       9: invokespecial #23                 // Method java/util/LinkedHashSet."<init>":()V
      12: astore_2
      13: aload_1
      14: invokeinterface #24,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      19: ifeq          75
      22: aload_1
      23: invokeinterface #25,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      28: checkcast     #26                 // class java/util/zip/ZipEntry
      31: astore_3
      32: aload_3
      33: invokevirtual #27                 // Method java/util/zip/ZipEntry.isDirectory:()Z
      36: ifne          72
      39: aload_3
      40: invokevirtual #28                 // Method java/util/zip/ZipEntry.getName:()Ljava/lang/String;
      43: bipush        47
      45: invokevirtual #29                 // Method java/lang/String.indexOf:(I)I
      48: iconst_m1
      49: if_icmpne     72
      52: aload_3
      53: invokevirtual #28                 // Method java/util/zip/ZipEntry.getName:()Ljava/lang/String;
      56: ldc           #30                 // String .xsd
      58: invokevirtual #11                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      61: ifeq          72
      64: aload_2
      65: aload_3
      66: invokeinterface #15,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      71: pop
      72: goto          13
      75: aload_2
      76: areturn
}
