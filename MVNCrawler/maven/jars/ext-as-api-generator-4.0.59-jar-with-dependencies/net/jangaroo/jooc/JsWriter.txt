Compiled from "JsWriter.java"
public final class net.jangaroo.jooc.JsWriter extends java.io.FilterWriter {
  private net.jangaroo.jooc.JsStringLiteralWriter stringLiteralWriter;

  private net.jangaroo.jooc.config.JoocOptions options;

  private boolean commentStartWritten;

  private int nOpenBeginComments;

  private char lastChar;

  private boolean inString;

  private int nOpenStrings;

  private boolean suppressWhitespace;

  private java.util.List<net.jangaroo.jooc.JsWriter$SymbolToOutputFilePosition> sourceMappings;

  private java.util.Set<net.jangaroo.jooc.JooSymbol> isWhitespaceWritten;

  public net.jangaroo.jooc.JsWriter(java.io.Writer);
    Code:
       0: aload_0
       1: new           #1                  // class net/jangaroo/jooc/util/PositionTrackingWriter
       4: dup
       5: aload_1
       6: invokespecial #2                  // Method net/jangaroo/jooc/util/PositionTrackingWriter."<init>":(Ljava/io/Writer;)V
       9: invokespecial #3                  // Method java/io/FilterWriter."<init>":(Ljava/io/Writer;)V
      12: aload_0
      13: iconst_0
      14: putfield      #4                  // Field commentStartWritten:Z
      17: aload_0
      18: iconst_0
      19: putfield      #5                  // Field nOpenBeginComments:I
      22: aload_0
      23: bipush        32
      25: putfield      #6                  // Field lastChar:C
      28: aload_0
      29: iconst_0
      30: putfield      #7                  // Field inString:Z
      33: aload_0
      34: iconst_0
      35: putfield      #8                  // Field nOpenStrings:I
      38: aload_0
      39: iconst_0
      40: putfield      #9                  // Field suppressWhitespace:Z
      43: aload_0
      44: new           #10                 // class java/util/ArrayList
      47: dup
      48: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      51: putfield      #12                 // Field sourceMappings:Ljava/util/List;
      54: aload_0
      55: new           #13                 // class java/util/HashSet
      58: dup
      59: invokespecial #14                 // Method java/util/HashSet."<init>":()V
      62: putfield      #15                 // Field isWhitespaceWritten:Ljava/util/Set;
      65: aload_0
      66: new           #16                 // class net/jangaroo/jooc/JsStringLiteralWriter
      69: dup
      70: aload_0
      71: getfield      #17                 // Field out:Ljava/io/Writer;
      74: iconst_0
      75: invokespecial #18                 // Method net/jangaroo/jooc/JsStringLiteralWriter."<init>":(Ljava/io/Writer;Z)V
      78: putfield      #19                 // Field stringLiteralWriter:Lnet/jangaroo/jooc/JsStringLiteralWriter;
      81: return

  public void setOptions(net.jangaroo.jooc.config.JoocOptions);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field options:Lnet/jangaroo/jooc/config/JoocOptions;
       5: return

  public net.jangaroo.jooc.config.JoocOptions getOptions();
    Code:
       0: aload_0
       1: getfield      #20                 // Field options:Lnet/jangaroo/jooc/config/JoocOptions;
       4: areturn

  public boolean getKeepSource();
    Code:
       0: aload_0
       1: getfield      #20                 // Field options:Lnet/jangaroo/jooc/config/JoocOptions;
       4: invokeinterface #21,  1           // InterfaceMethod net/jangaroo/jooc/config/JoocOptions.getDebugMode:()Lnet/jangaroo/jooc/config/DebugMode;
       9: ifnull        34
      12: getstatic     #22                 // Field net/jangaroo/jooc/config/DebugMode.SOURCE:Lnet/jangaroo/jooc/config/DebugMode;
      15: aload_0
      16: getfield      #20                 // Field options:Lnet/jangaroo/jooc/config/JoocOptions;
      19: invokeinterface #21,  1           // InterfaceMethod net/jangaroo/jooc/config/JoocOptions.getDebugMode:()Lnet/jangaroo/jooc/config/DebugMode;
      24: invokevirtual #23                 // Method net/jangaroo/jooc/config/DebugMode.equals:(Ljava/lang/Object;)Z
      27: ifeq          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  public boolean getKeepLines();
    Code:
       0: aload_0
       1: getfield      #20                 // Field options:Lnet/jangaroo/jooc/config/JoocOptions;
       4: invokeinterface #21,  1           // InterfaceMethod net/jangaroo/jooc/config/JoocOptions.getDebugMode:()Lnet/jangaroo/jooc/config/DebugMode;
       9: ifnull        34
      12: getstatic     #24                 // Field net/jangaroo/jooc/config/DebugMode.LINES:Lnet/jangaroo/jooc/config/DebugMode;
      15: aload_0
      16: getfield      #20                 // Field options:Lnet/jangaroo/jooc/config/JoocOptions;
      19: invokeinterface #21,  1           // InterfaceMethod net/jangaroo/jooc/config/JoocOptions.getDebugMode:()Lnet/jangaroo/jooc/config/DebugMode;
      24: invokevirtual #23                 // Method net/jangaroo/jooc/config/DebugMode.equals:(Ljava/lang/Object;)Z
      27: ifeq          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  public void writeInt(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method shouldWrite:()Z
       4: ifeq          15
       7: aload_0
       8: iload_1
       9: invokestatic  #26                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      12: invokevirtual #27                 // Method write:(Ljava/lang/String;)V
      15: return

  public void writeString(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method shouldWrite:()Z
       4: ifeq          42
       7: aload_1
       8: ifnonnull     20
      11: aload_0
      12: ldc           #28                 // String null
      14: invokevirtual #27                 // Method write:(Ljava/lang/String;)V
      17: goto          42
      20: aload_0
      21: getfield      #19                 // Field stringLiteralWriter:Lnet/jangaroo/jooc/JsStringLiteralWriter;
      24: invokevirtual #29                 // Method net/jangaroo/jooc/JsStringLiteralWriter.beginString:()V
      27: aload_0
      28: getfield      #19                 // Field stringLiteralWriter:Lnet/jangaroo/jooc/JsStringLiteralWriter;
      31: aload_1
      32: invokevirtual #30                 // Method net/jangaroo/jooc/JsStringLiteralWriter.write:(Ljava/lang/String;)V
      35: aload_0
      36: getfield      #19                 // Field stringLiteralWriter:Lnet/jangaroo/jooc/JsStringLiteralWriter;
      39: invokevirtual #31                 // Method net/jangaroo/jooc/JsStringLiteralWriter.endString:()V
      42: return

  public void writeDate(java.util.Date) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method shouldWrite:()Z
       4: ifeq          38
       7: aload_0
       8: new           #32                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #34                 // String new Date(
      17: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_1
      21: invokevirtual #36                 // Method java/util/Date.getTime:()J
      24: invokevirtual #37                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      27: ldc           #38                 // String )
      29: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokevirtual #40                 // Method writeString:(Ljava/lang/String;)V
      38: return

  public void writeDate(java.util.Calendar) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #41                 // Method java/util/Calendar.getTime:()Ljava/util/Date;
       5: invokevirtual #42                 // Method writeDate:(Ljava/util/Date;)V
       8: return

  public void writeObject(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method shouldWrite:()Z
       4: ifeq          146
       7: aload_1
       8: instanceof    #43                 // class java/lang/String
      11: ifeq          25
      14: aload_0
      15: aload_1
      16: checkcast     #43                 // class java/lang/String
      19: invokevirtual #40                 // Method writeString:(Ljava/lang/String;)V
      22: goto          146
      25: aload_1
      26: instanceof    #44                 // class java/lang/Integer
      29: ifeq          46
      32: aload_0
      33: aload_1
      34: checkcast     #44                 // class java/lang/Integer
      37: invokevirtual #45                 // Method java/lang/Integer.intValue:()I
      40: invokevirtual #46                 // Method writeInt:(I)V
      43: goto          146
      46: aload_1
      47: instanceof    #47                 // class java/util/Date
      50: ifeq          64
      53: aload_0
      54: aload_1
      55: checkcast     #47                 // class java/util/Date
      58: invokevirtual #42                 // Method writeDate:(Ljava/util/Date;)V
      61: goto          146
      64: aload_1
      65: instanceof    #48                 // class java/util/Calendar
      68: ifeq          82
      71: aload_0
      72: aload_1
      73: checkcast     #48                 // class java/util/Calendar
      76: invokevirtual #49                 // Method writeDate:(Ljava/util/Calendar;)V
      79: goto          146
      82: aload_1
      83: instanceof    #50                 // class "[Ljava/lang/Object;"
      86: ifeq          103
      89: aload_0
      90: aload_1
      91: checkcast     #50                 // class "[Ljava/lang/Object;"
      94: checkcast     #50                 // class "[Ljava/lang/Object;"
      97: invokevirtual #51                 // Method writeArray:([Ljava/lang/Object;)V
     100: goto          146
     103: new           #52                 // class java/io/IOException
     106: dup
     107: new           #32                 // class java/lang/StringBuilder
     110: dup
     111: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     114: aload_0
     115: invokevirtual #53                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     118: invokevirtual #54                 // Method java/lang/Class.getName:()Ljava/lang/String;
     121: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: ldc           #55                 // String : cannot write object:
     126: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: aload_1
     130: invokevirtual #53                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     133: invokevirtual #54                 // Method java/lang/Class.getName:()Ljava/lang/String;
     136: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     142: invokespecial #56                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     145: athrow
     146: return

  public void writeArray(java.lang.Object[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method shouldWrite:()Z
       4: ifeq          52
       7: aload_0
       8: ldc           #57                 // String [
      10: invokevirtual #27                 // Method write:(Ljava/lang/String;)V
      13: aload_1
      14: arraylength
      15: istore_2
      16: iconst_0
      17: istore_3
      18: iload_3
      19: iload_2
      20: if_icmpge     46
      23: iload_3
      24: ifle          33
      27: aload_0
      28: bipush        44
      30: invokevirtual #58                 // Method write:(I)V
      33: aload_0
      34: aload_1
      35: iload_3
      36: aaload
      37: invokevirtual #59                 // Method writeObject:(Ljava/lang/Object;)V
      40: iinc          3, 1
      43: goto          18
      46: aload_0
      47: ldc           #60                 // String ]
      49: invokevirtual #27                 // Method write:(Ljava/lang/String;)V
      52: return

  public void beginComment() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #5                  // Field nOpenBeginComments:I
       5: iconst_1
       6: iadd
       7: putfield      #5                  // Field nOpenBeginComments:I
      10: return

  private boolean shouldWrite() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method getKeepSource:()Z
       4: ifne          14
       7: aload_0
       8: getfield      #5                  // Field nOpenBeginComments:I
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: istore_1
      20: iload_1
      21: ifeq          95
      24: aload_0
      25: getfield      #5                  // Field nOpenBeginComments:I
      28: ifle          61
      31: aload_0
      32: getfield      #4                  // Field commentStartWritten:Z
      35: ifne          61
      38: aload_0
      39: getfield      #17                 // Field out:Ljava/io/Writer;
      42: ldc           #62                 // String /*
      44: invokevirtual #63                 // Method java/io/Writer.write:(Ljava/lang/String;)V
      47: aload_0
      48: bipush        42
      50: putfield      #6                  // Field lastChar:C
      53: aload_0
      54: iconst_1
      55: putfield      #4                  // Field commentStartWritten:Z
      58: goto          95
      61: aload_0
      62: getfield      #5                  // Field nOpenBeginComments:I
      65: ifne          95
      68: aload_0
      69: getfield      #4                  // Field commentStartWritten:Z
      72: ifeq          95
      75: aload_0
      76: getfield      #17                 // Field out:Ljava/io/Writer;
      79: ldc           #64                 // String */
      81: invokevirtual #63                 // Method java/io/Writer.write:(Ljava/lang/String;)V
      84: aload_0
      85: bipush        47
      87: putfield      #6                  // Field lastChar:C
      90: aload_0
      91: iconst_0
      92: putfield      #4                  // Field commentStartWritten:Z
      95: iload_1
      96: ireturn

  public void endComment() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field nOpenBeginComments:I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #65                 // String missing beginComment() for endComment()
      14: invokestatic  #66                 // Method net/jangaroo/jooc/Debug.assertTrue:(ZLjava/lang/String;)V
      17: aload_0
      18: dup
      19: getfield      #5                  // Field nOpenBeginComments:I
      22: iconst_1
      23: isub
      24: putfield      #5                  // Field nOpenBeginComments:I
      27: return

  public void beginCommentWriteSymbol(net.jangaroo.jooc.JooSymbol) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method beginComment:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #68                 // Method writeSymbol:(Lnet/jangaroo/jooc/JooSymbol;)V
       9: return

  public void beginString() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #8                  // Field nOpenStrings:I
       5: iconst_1
       6: iadd
       7: putfield      #8                  // Field nOpenStrings:I
      10: return

  private void checkOpenString() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field nOpenStrings:I
       4: ifle          34
       7: aload_0
       8: getfield      #7                  // Field inString:Z
      11: ifne          34
      14: aload_0
      15: getfield      #17                 // Field out:Ljava/io/Writer;
      18: bipush        34
      20: invokevirtual #69                 // Method java/io/Writer.write:(I)V
      23: aload_0
      24: bipush        34
      26: putfield      #6                  // Field lastChar:C
      29: aload_0
      30: iconst_1
      31: putfield      #7                  // Field inString:Z
      34: return

  private boolean checkCloseString() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field inString:Z
       4: ifeq          23
       7: aload_0
       8: getfield      #17                 // Field out:Ljava/io/Writer;
      11: bipush        34
      13: invokevirtual #69                 // Method java/io/Writer.write:(I)V
      16: aload_0
      17: iconst_0
      18: putfield      #7                  // Field inString:Z
      21: iconst_1
      22: ireturn
      23: iconst_0
      24: ireturn

  public void endString() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field nOpenStrings:I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #70                 // String missing beginString() for endString()
      14: invokestatic  #66                 // Method net/jangaroo/jooc/Debug.assertTrue:(ZLjava/lang/String;)V
      17: aload_0
      18: dup
      19: getfield      #8                  // Field nOpenStrings:I
      22: iconst_1
      23: isub
      24: putfield      #8                  // Field nOpenStrings:I
      27: aload_0
      28: getfield      #8                  // Field nOpenStrings:I
      31: ifne          39
      34: aload_0
      35: invokespecial #71                 // Method checkCloseString:()Z
      38: pop
      39: return

  private void writeLinesInsideString(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #72                 // String \n
       3: iconst_m1
       4: invokevirtual #73                 // Method java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: aload_2
      12: arraylength
      13: iconst_1
      14: isub
      15: if_icmpge     84
      18: aload_2
      19: iload_3
      20: aaload
      21: astore        4
      23: aload         4
      25: invokevirtual #74                 // Method java/lang/String.length:()I
      28: iconst_1
      29: if_icmple     59
      32: aload_0
      33: invokespecial #75                 // Method checkOpenString:()V
      36: aload_0
      37: aload         4
      39: iconst_0
      40: aload         4
      42: invokevirtual #74                 // Method java/lang/String.length:()I
      45: iconst_1
      46: isub
      47: invokevirtual #76                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      50: invokevirtual #27                 // Method write:(Ljava/lang/String;)V
      53: aload_0
      54: ldc           #77                 // String \\n
      56: invokevirtual #27                 // Method write:(Ljava/lang/String;)V
      59: aload_0
      60: invokespecial #71                 // Method checkCloseString:()Z
      63: ifeq          72
      66: aload_0
      67: ldc           #78                 // String +
      69: invokevirtual #27                 // Method write:(Ljava/lang/String;)V
      72: aload_0
      73: ldc           #72                 // String \n
      75: invokevirtual #27                 // Method write:(Ljava/lang/String;)V
      78: iinc          3, 1
      81: goto          10
      84: aload_2
      85: aload_2
      86: arraylength
      87: iconst_1
      88: isub
      89: aaload
      90: astore_3
      91: aload_3
      92: invokevirtual #74                 // Method java/lang/String.length:()I
      95: ifle          107
      98: aload_0
      99: invokespecial #75                 // Method checkOpenString:()V
     102: aload_0
     103: aload_3
     104: invokevirtual #27                 // Method write:(Ljava/lang/String;)V
     107: return

  public void setSuppressWhitespace(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field suppressWhitespace:Z
       5: return

  public void writeSymbolWhitespace(net.jangaroo.jooc.JooSymbol) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field suppressWhitespace:Z
       4: ifne          20
       7: aload_0
       8: getfield      #15                 // Field isWhitespaceWritten:Ljava/util/Set;
      11: aload_1
      12: invokeinterface #79,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      17: ifeq          21
      20: return
      21: aload_0
      22: getfield      #15                 // Field isWhitespaceWritten:Ljava/util/Set;
      25: aload_1
      26: invokeinterface #80,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      31: pop
      32: aload_1
      33: invokevirtual #81                 // Method net/jangaroo/jooc/JooSymbol.getWhitespace:()Ljava/lang/String;
      36: astore_2
      37: aload_0
      38: invokevirtual #61                 // Method getKeepSource:()Z
      41: ifeq          67
      44: aload_0
      45: getfield      #7                  // Field inString:Z
      48: ifeq          59
      51: aload_0
      52: aload_2
      53: invokespecial #82                 // Method writeLinesInsideString:(Ljava/lang/String;)V
      56: goto          87
      59: aload_0
      60: aload_2
      61: invokevirtual #27                 // Method write:(Ljava/lang/String;)V
      64: goto          87
      67: aload_0
      68: invokevirtual #83                 // Method getKeepLines:()Z
      71: ifeq          82
      74: aload_0
      75: aload_2
      76: invokevirtual #84                 // Method writeLines:(Ljava/lang/String;)V
      79: goto          87
      82: aload_0
      83: aload_2
      84: invokespecial #85                 // Method writeLine:(Ljava/lang/String;)V
      87: return

  private void writeLine(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: bipush        10
       3: invokevirtual #86                 // Method java/lang/String.indexOf:(I)I
       6: iconst_m1
       7: if_icmpeq     14
      10: aload_0
      11: invokespecial #87                 // Method writeNewline:()V
      14: return

  protected void writeLines(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: invokevirtual #74                 // Method java/lang/String.length:()I
       7: invokevirtual #88                 // Method writeLines:(Ljava/lang/String;II)V
      10: return

  protected void writeLines(java.lang.String, int, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: istore        4
       3: aload_1
       4: bipush        10
       6: iload         4
       8: invokevirtual #89                 // Method java/lang/String.indexOf:(II)I
      11: iconst_1
      12: iadd
      13: istore        4
      15: iload         4
      17: ifle          40
      20: iload         4
      22: iload_2
      23: iload_3
      24: iadd
      25: iconst_1
      26: iadd
      27: if_icmplt     33
      30: goto          40
      33: aload_0
      34: invokespecial #87                 // Method writeNewline:()V
      37: goto          3
      40: return

  private void writeNewline() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field inString:Z
       4: ifeq          24
       7: aload_0
       8: ldc           #77                 // String \\n
      10: invokevirtual #27                 // Method write:(Ljava/lang/String;)V
      13: aload_0
      14: invokespecial #71                 // Method checkCloseString:()Z
      17: pop
      18: aload_0
      19: bipush        43
      21: invokevirtual #58                 // Method write:(I)V
      24: aload_0
      25: bipush        10
      27: invokevirtual #58                 // Method write:(I)V
      30: return

  public net.jangaroo.jooc.util.FilePosition writeToken(java.lang.String) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokespecial #25                 // Method shouldWrite:()Z
       6: ifeq          92
       9: aload_1
      10: iconst_0
      11: invokevirtual #90                 // Method java/lang/String.charAt:(I)C
      14: istore_3
      15: aload_0
      16: aload_0
      17: getfield      #6                  // Field lastChar:C
      20: invokespecial #91                 // Method isIdeChar:(C)Z
      23: ifeq          34
      26: aload_0
      27: iload_3
      28: invokespecial #91                 // Method isIdeChar:(C)Z
      31: ifne          72
      34: aload_0
      35: getfield      #6                  // Field lastChar:C
      38: iload_3
      39: if_icmpne     54
      42: ldc           #92                 // String =><!&|+-*/&|^%
      44: aload_0
      45: getfield      #6                  // Field lastChar:C
      48: invokevirtual #86                 // Method java/lang/String.indexOf:(I)I
      51: ifge          72
      54: iload_3
      55: bipush        61
      57: if_icmpne     78
      60: ldc           #92                 // String =><!&|+-*/&|^%
      62: aload_0
      63: getfield      #6                  // Field lastChar:C
      66: invokevirtual #86                 // Method java/lang/String.indexOf:(I)I
      69: iflt          78
      72: aload_0
      73: bipush        32
      75: invokevirtual #58                 // Method write:(I)V
      78: aload_0
      79: invokespecial #75                 // Method checkOpenString:()V
      82: aload_0
      83: invokespecial #93                 // Method getCurrentOutputFilePosition:()Lnet/jangaroo/jooc/util/FilePosition;
      86: astore_2
      87: aload_0
      88: aload_1
      89: invokevirtual #27                 // Method write:(Ljava/lang/String;)V
      92: aload_2
      93: areturn

  private boolean isIdeChar(char);
    Code:
       0: iload_1
       1: bipush        36
       3: if_icmpeq     19
       6: iload_1
       7: bipush        95
       9: if_icmpeq     19
      12: iload_1
      13: invokestatic  #94                 // Method java/lang/Character.isLetterOrDigit:(C)Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public void writeSymbol(net.jangaroo.jooc.JooSymbol) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #95                 // Method writeSymbol:(Lnet/jangaroo/jooc/JooSymbol;Z)V
       6: return

  private net.jangaroo.jooc.util.FilePosition getCurrentOutputFilePosition();
    Code:
       0: new           #96                 // class net/jangaroo/jooc/util/PrettyPrintFilePosition
       3: dup
       4: aload_0
       5: getfield      #17                 // Field out:Ljava/io/Writer;
       8: checkcast     #1                  // class net/jangaroo/jooc/util/PositionTrackingWriter
      11: invokevirtual #97                 // Method net/jangaroo/jooc/util/PositionTrackingWriter.getLine:()I
      14: iconst_1
      15: isub
      16: aload_0
      17: getfield      #17                 // Field out:Ljava/io/Writer;
      20: checkcast     #1                  // class net/jangaroo/jooc/util/PositionTrackingWriter
      23: invokevirtual #98                 // Method net/jangaroo/jooc/util/PositionTrackingWriter.getColumn:()I
      26: iconst_1
      27: isub
      28: invokespecial #99                 // Method net/jangaroo/jooc/util/PrettyPrintFilePosition."<init>":(II)V
      31: areturn

  public void writeSymbol(net.jangaroo.jooc.JooSymbol, boolean) throws java.io.IOException;
    Code:
       0: iload_2
       1: ifeq          9
       4: aload_0
       5: aload_1
       6: invokevirtual #100                // Method writeSymbolWhitespace:(Lnet/jangaroo/jooc/JooSymbol;)V
       9: aload_0
      10: aload_1
      11: invokevirtual #101                // Method writeSymbolToken:(Lnet/jangaroo/jooc/JooSymbol;)V
      14: return

  public void writeSymbolToken(net.jangaroo.jooc.JooSymbol) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #102                // Method net/jangaroo/jooc/JooSymbol.getText:()Ljava/lang/String;
       5: aload_1
       6: invokevirtual #103                // Method writeTokenForSymbol:(Ljava/lang/String;Lnet/jangaroo/jooc/JooSymbol;)V
       9: return

  public void writeTokenForSymbol(java.lang.String, net.jangaroo.jooc.JooSymbol) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #104                // Method writeToken:(Ljava/lang/String;)Lnet/jangaroo/jooc/util/FilePosition;
       5: astore_3
       6: aload_3
       7: ifnull        69
      10: aload_0
      11: invokevirtual #105                // Method isWritingComment:()Z
      14: ifne          69
      17: aload_0
      18: getfield      #7                  // Field inString:Z
      21: ifne          69
      24: aload_2
      25: invokevirtual #106                // Method net/jangaroo/jooc/JooSymbol.getLine:()I
      28: ifle          69
      31: aload_2
      32: invokevirtual #107                // Method net/jangaroo/jooc/JooSymbol.getColumn:()I
      35: ifle          69
      38: aload_0
      39: invokespecial #93                 // Method getCurrentOutputFilePosition:()Lnet/jangaroo/jooc/util/FilePosition;
      42: astore        4
      44: new           #108                // class net/jangaroo/jooc/JsWriter$SymbolToOutputFilePosition
      47: dup
      48: aload_2
      49: aload_3
      50: aload         4
      52: invokespecial #109                // Method net/jangaroo/jooc/JsWriter$SymbolToOutputFilePosition."<init>":(Lnet/jangaroo/jooc/JooSymbol;Lnet/jangaroo/jooc/util/FilePosition;Lnet/jangaroo/jooc/util/FilePosition;)V
      55: astore        5
      57: aload_0
      58: getfield      #12                 // Field sourceMappings:Ljava/util/List;
      61: aload         5
      63: invokeinterface #110,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      68: pop
      69: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #83                 // Method getKeepLines:()Z
       4: ifeq          13
       7: iload_1
       8: bipush        10
      10: if_icmpeq     20
      13: aload_0
      14: invokespecial #25                 // Method shouldWrite:()Z
      17: ifeq          52
      20: aload_0
      21: getfield      #6                  // Field lastChar:C
      24: bipush        42
      26: if_icmpne     41
      29: iload_1
      30: bipush        47
      32: if_icmpne     41
      35: aload_0
      36: bipush        32
      38: invokespecial #111                // Method java/io/FilterWriter.write:(I)V
      41: aload_0
      42: iload_1
      43: invokespecial #111                // Method java/io/FilterWriter.write:(I)V
      46: aload_0
      47: iload_1
      48: i2c
      49: putfield      #6                  // Field lastChar:C
      52: return

  public void write(char[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifle          120
       4: aload_0
       5: invokespecial #25                 // Method shouldWrite:()Z
       8: ifeq          71
      11: aload_0
      12: getfield      #4                  // Field commentStartWritten:Z
      15: ifeq          50
      18: iconst_0
      19: istore        4
      21: iload         4
      23: iload_3
      24: if_icmpge     47
      27: aload_1
      28: iload_2
      29: iload         4
      31: iadd
      32: caload
      33: istore        5
      35: aload_0
      36: iload         5
      38: invokevirtual #58                 // Method write:(I)V
      41: iinc          4, 1
      44: goto          21
      47: goto          57
      50: aload_0
      51: aload_1
      52: iload_2
      53: iload_3
      54: invokespecial #112                // Method java/io/FilterWriter.write:([CII)V
      57: aload_0
      58: aload_1
      59: iload_2
      60: iload_3
      61: iadd
      62: iconst_1
      63: isub
      64: caload
      65: putfield      #6                  // Field lastChar:C
      68: goto          120
      71: aload_0
      72: invokevirtual #83                 // Method getKeepLines:()Z
      75: ifeq          120
      78: iconst_0
      79: istore        4
      81: iload         4
      83: iload_3
      84: if_icmpge     120
      87: aload_1
      88: iload_2
      89: iload         4
      91: iadd
      92: caload
      93: istore        5
      95: iload         5
      97: bipush        10
      99: if_icmpne     114
     102: aload_0
     103: iload         5
     105: invokespecial #111                // Method java/io/FilterWriter.write:(I)V
     108: aload_0
     109: iload         5
     111: putfield      #6                  // Field lastChar:C
     114: iinc          4, 1
     117: goto          81
     120: return

  public void write(java.lang.String, int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifle          89
       4: aload_0
       5: invokespecial #25                 // Method shouldWrite:()Z
       8: ifeq          75
      11: aload_0
      12: getfield      #4                  // Field commentStartWritten:Z
      15: ifeq          52
      18: iconst_0
      19: istore        4
      21: iload         4
      23: iload_3
      24: if_icmpge     49
      27: aload_1
      28: iload_2
      29: iload         4
      31: iadd
      32: invokevirtual #90                 // Method java/lang/String.charAt:(I)C
      35: istore        5
      37: aload_0
      38: iload         5
      40: invokevirtual #58                 // Method write:(I)V
      43: iinc          4, 1
      46: goto          21
      49: goto          59
      52: aload_0
      53: aload_1
      54: iload_2
      55: iload_3
      56: invokespecial #113                // Method java/io/FilterWriter.write:(Ljava/lang/String;II)V
      59: aload_0
      60: aload_1
      61: iload_2
      62: iload_3
      63: iadd
      64: iconst_1
      65: isub
      66: invokevirtual #90                 // Method java/lang/String.charAt:(I)C
      69: putfield      #6                  // Field lastChar:C
      72: goto          89
      75: aload_0
      76: invokevirtual #83                 // Method getKeepLines:()Z
      79: ifeq          89
      82: aload_0
      83: aload_1
      84: iload_2
      85: iload_3
      86: invokevirtual #88                 // Method writeLines:(Ljava/lang/String;II)V
      89: return

  private static java.lang.String qualifiedNameToIde(java.lang.String[]);
    Code:
       0: new           #32                 // class java/lang/StringBuilder
       3: dup
       4: bipush        20
       6: invokespecial #114                // Method java/lang/StringBuilder."<init>":(I)V
       9: astore_1
      10: iconst_0
      11: istore_2
      12: iload_2
      13: aload_0
      14: arraylength
      15: if_icmpge     43
      18: iload_2
      19: ifle          29
      22: aload_1
      23: bipush        36
      25: invokevirtual #115                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      28: pop
      29: aload_1
      30: aload_0
      31: iload_2
      32: aaload
      33: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: pop
      37: iinc          2, 1
      40: goto          12
      43: aload_1
      44: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: areturn

  public java.lang.String getQualifiedNameAsIde(net.jangaroo.jooc.ast.IdeDeclaration);
    Code:
       0: aload_1
       1: invokevirtual #116                // Method net/jangaroo/jooc/ast/IdeDeclaration.getQualifiedName:()[Ljava/lang/String;
       4: invokestatic  #117                // Method qualifiedNameToIde:([Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #118                // String
       3: invokevirtual #119                // Method close:(Ljava/lang/String;)V
       6: return

  public void close(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method shouldWrite:()Z
       4: pop
       5: aload_0
       6: getfield      #5                  // Field nOpenBeginComments:I
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: new           #32                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #118                // String
      26: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #5                  // Field nOpenBeginComments:I
      33: invokevirtual #120                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: ldc           #121                // String  endComment() missing
      38: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokestatic  #66                 // Method net/jangaroo/jooc/Debug.assertTrue:(ZLjava/lang/String;)V
      47: aload_0
      48: aload_1
      49: invokevirtual #27                 // Method write:(Ljava/lang/String;)V
      52: aload_0
      53: invokespecial #122                // Method java/io/FilterWriter.close:()V
      56: aload_0
      57: getfield      #5                  // Field nOpenBeginComments:I
      60: ifne          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: new           #32                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #118                // String
      77: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_0
      81: getfield      #5                  // Field nOpenBeginComments:I
      84: invokevirtual #120                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      87: ldc           #121                // String  endComment() missing
      89: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: invokestatic  #66                 // Method net/jangaroo/jooc/Debug.assertTrue:(ZLjava/lang/String;)V
      98: return

  public java.util.List<net.jangaroo.jooc.JsWriter$SymbolToOutputFilePosition> getSourceMappings();
    Code:
       0: aload_0
       1: getfield      #12                 // Field sourceMappings:Ljava/util/List;
       4: invokestatic  #123                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  public boolean isWritingComment();
    Code:
       0: aload_0
       1: getfield      #5                  // Field nOpenBeginComments:I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn
}
