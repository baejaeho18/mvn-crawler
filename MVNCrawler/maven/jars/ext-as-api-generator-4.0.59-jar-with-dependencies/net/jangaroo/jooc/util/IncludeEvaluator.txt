Compiled from "IncludeEvaluator.java"
public final class net.jangaroo.jooc.util.IncludeEvaluator {
  private static final int BEGIN_INDEX;

  private static final java.util.regex.Pattern FILENAME_WITH_LINE_RANGE_PATTERN;

  private net.jangaroo.jooc.util.IncludeEvaluator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.io.Reader createReader(java.lang.String, net.jangaroo.jooc.input.InputSource) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #2                  // Field BEGIN_INDEX:I
       4: aload_0
       5: invokevirtual #3                  // Method java/lang/String.length:()I
       8: iconst_1
       9: isub
      10: invokevirtual #4                  // Method java/lang/String.substring:(II)Ljava/lang/String;
      13: astore_2
      14: getstatic     #5                  // Field FILENAME_WITH_LINE_RANGE_PATTERN:Ljava/util/regex/Pattern;
      17: aload_2
      18: invokevirtual #6                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      21: astore_3
      22: aload_3
      23: invokevirtual #7                  // Method java/util/regex/Matcher.matches:()Z
      26: istore        4
      28: iload         4
      30: ifeq          39
      33: aload_3
      34: iconst_1
      35: invokevirtual #8                  // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      38: astore_2
      39: new           #9                  // class java/io/File
      42: dup
      43: aload_2
      44: invokespecial #10                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      47: astore        5
      49: aconst_null
      50: astore        6
      52: aload         5
      54: invokevirtual #11                 // Method java/io/File.exists:()Z
      57: ifne          147
      60: aload         5
      62: invokevirtual #12                 // Method java/io/File.isAbsolute:()Z
      65: ifne          147
      68: aload_1
      69: invokeinterface #13,  1           // InterfaceMethod net/jangaroo/jooc/input/InputSource.getParent:()Lnet/jangaroo/jooc/input/InputSource;
      74: astore        7
      76: aload         7
      78: aload_2
      79: invokeinterface #14,  2           // InterfaceMethod net/jangaroo/jooc/input/InputSource.getChild:(Ljava/lang/String;)Lnet/jangaroo/jooc/input/InputSource;
      84: astore        8
      86: aload         8
      88: ifnonnull     138
      91: new           #15                 // class java/io/IOException
      94: dup
      95: new           #16                 // class java/lang/StringBuilder
      98: dup
      99: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     102: ldc           #18                 // String cannot find input file
     104: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload         7
     109: invokeinterface #20,  1           // InterfaceMethod net/jangaroo/jooc/input/InputSource.getPath:()Ljava/lang/String;
     114: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: aload         7
     119: invokeinterface #21,  1           // InterfaceMethod net/jangaroo/jooc/input/InputSource.getFileSeparatorChar:()C
     124: invokevirtual #22                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     127: aload_2
     128: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     134: invokespecial #24                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     137: athrow
     138: aload         8
     140: invokeinterface #25,  1           // InterfaceMethod net/jangaroo/jooc/input/InputSource.getInputStream:()Ljava/io/InputStream;
     145: astore        6
     147: aload         6
     149: ifnonnull     163
     152: new           #26                 // class java/io/FileInputStream
     155: dup
     156: aload         5
     158: invokespecial #27                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
     161: astore        6
     163: new           #28                 // class java/io/InputStreamReader
     166: dup
     167: aload         6
     169: ldc           #29                 // String UTF-8
     171: invokespecial #30                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
     174: astore        7
     176: iload         4
     178: ifeq          218
     181: aload_3
     182: iconst_2
     183: invokevirtual #8                  // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     186: invokestatic  #31                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     189: iconst_1
     190: iadd
     191: istore        8
     193: aload_3
     194: iconst_3
     195: invokevirtual #8                  // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     198: invokestatic  #31                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     201: istore        9
     203: new           #32                 // class net/jangaroo/jooc/util/LineRangeReader
     206: dup
     207: aload         7
     209: iload         8
     211: iload         9
     213: invokespecial #33                 // Method net/jangaroo/jooc/util/LineRangeReader."<init>":(Ljava/io/Reader;II)V
     216: astore        7
     218: aload         7
     220: areturn

  static {};
    Code:
       0: ldc           #34                 // String include \"
       2: invokevirtual #3                  // Method java/lang/String.length:()I
       5: putstatic     #2                  // Field BEGIN_INDEX:I
       8: ldc           #35                 // String ^(.*):([0-9]+),([0-9]+)$
      10: invokestatic  #36                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      13: putstatic     #5                  // Field FILENAME_WITH_LINE_RANGE_PATTERN:Ljava/util/regex/Pattern;
      16: return
}
