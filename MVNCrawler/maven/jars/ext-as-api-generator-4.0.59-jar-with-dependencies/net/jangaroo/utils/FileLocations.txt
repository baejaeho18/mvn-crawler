Compiled from "FileLocations.java"
public class net.jangaroo.utils.FileLocations {
  private java.util.List<java.io.File> sourcePath;

  private java.util.List<java.io.File> sourceFiles;

  private java.util.List<java.io.File> classPath;

  private java.io.File outputDirectory;

  static final boolean $assertionsDisabled;

  public net.jangaroo.utils.FileLocations();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field sourcePath:Ljava/util/List;
      15: aload_0
      16: new           #2                  // class java/util/ArrayList
      19: dup
      20: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #5                  // Field sourceFiles:Ljava/util/List;
      26: aload_0
      27: new           #2                  // class java/util/ArrayList
      30: dup
      31: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      34: putfield      #6                  // Field classPath:Ljava/util/List;
      37: return

  public java.io.File findSourceDir(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getSourcePath:()Ljava/util/List;
       4: aload_1
       5: invokestatic  #8                  // Method net/jangaroo/utils/CompilerUtils.findSourceDir:(Ljava/util/List;Ljava/io/File;)Ljava/io/File;
       8: areturn

  public java.io.File getOutputDirectory();
    Code:
       0: aload_0
       1: getfield      #9                  // Field outputDirectory:Ljava/io/File;
       4: areturn

  public void setOutputDirectory(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field outputDirectory:Ljava/io/File;
       5: return

  public java.util.List<java.io.File> getSourcePath();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sourcePath:Ljava/util/List;
       4: areturn

  public void setSourcePath(java.util.List<java.io.File>) throws java.io.IOException;
    Code:
       0: new           #2                  // class java/util/ArrayList
       3: dup
       4: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          48
      24: aload_3
      25: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #13                 // class java/io/File
      33: astore        4
      35: aload_2
      36: aload         4
      38: invokevirtual #14                 // Method java/io/File.getCanonicalFile:()Ljava/io/File;
      41: invokevirtual #15                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      44: pop
      45: goto          15
      48: aload_0
      49: aload_2
      50: invokestatic  #16                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      53: putfield      #4                  // Field sourcePath:Ljava/util/List;
      56: return

  public java.util.List<java.io.File> getClassPath();
    Code:
       0: aload_0
       1: getfield      #6                  // Field classPath:Ljava/util/List;
       4: areturn

  public void setClassPath(java.util.List<java.io.File>);
    Code:
       0: getstatic     #17                 // Field $assertionsDisabled:Z
       3: ifne          18
       6: aload_1
       7: ifnonnull     18
      10: new           #18                 // class java/lang/AssertionError
      13: dup
      14: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: aload_0
      19: aload_1
      20: invokestatic  #16                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      23: putfield      #6                  // Field classPath:Ljava/util/List;
      26: return

  public java.util.List<java.io.File> getSourceFiles();
    Code:
       0: aload_0
       1: getfield      #5                  // Field sourceFiles:Ljava/util/List;
       4: invokestatic  #16                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  public void setSourceFiles(java.util.List<java.io.File>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #20                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #21                 // String sourceFiles == null
      10: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: new           #2                  // class java/util/ArrayList
      18: dup
      19: aload_1
      20: invokespecial #23                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      23: putfield      #5                  // Field sourceFiles:Ljava/util/List;
      26: return

  public void addSourceFile(java.io.File);
    Code:
       0: aload_0
       1: getfield      #5                  // Field sourceFiles:Ljava/util/List;
       4: aload_1
       5: invokeinterface #24,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void addSourceFile(java.lang.String);
    Code:
       0: aload_0
       1: new           #13                 // class java/io/File
       4: dup
       5: aload_1
       6: invokespecial #25                 // Method java/io/File."<init>":(Ljava/lang/String;)V
       9: invokevirtual #26                 // Method addSourceFile:(Ljava/io/File;)V
      12: return

  public java.lang.String toString();
    Code:
       0: new           #27                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #29                 // String FileLocations{sourcePath=
       9: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #4                  // Field sourcePath:Ljava/util/List;
      16: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #32                 // String , sourceFiles=
      21: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #5                  // Field sourceFiles:Ljava/util/List;
      28: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #33                 // String , classPath=
      33: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #6                  // Field classPath:Ljava/util/List;
      40: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #34                 // String , outputDirectory=
      45: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #9                  // Field outputDirectory:Ljava/io/File;
      52: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: bipush        125
      57: invokevirtual #35                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      60: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: areturn

  static {};
    Code:
       0: ldc           #37                 // class net/jangaroo/utils/FileLocations
       2: invokevirtual #38                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #17                 // Field $assertionsDisabled:Z
      16: return
}
