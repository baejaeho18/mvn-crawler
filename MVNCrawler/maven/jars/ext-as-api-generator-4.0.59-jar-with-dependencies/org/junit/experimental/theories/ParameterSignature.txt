Compiled from "ParameterSignature.java"
public class org.junit.experimental.theories.ParameterSignature {
  private static final java.util.Map<java.lang.Class<?>, java.lang.Class<?>> CONVERTABLE_TYPES_MAP;

  private final java.lang.Class<?> type;

  private final java.lang.annotation.Annotation[] annotations;

  private static java.util.Map<java.lang.Class<?>, java.lang.Class<?>> buildConvertableTypesMap();
    Code:
       0: new           #1                  // class java/util/HashMap
       3: dup
       4: invokespecial #2                  // Method java/util/HashMap."<init>":()V
       7: astore_0
       8: aload_0
       9: getstatic     #3                  // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      12: ldc_w         #4                  // class java/lang/Boolean
      15: invokestatic  #5                  // Method putSymmetrically:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V
      18: aload_0
      19: getstatic     #6                  // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      22: ldc_w         #7                  // class java/lang/Byte
      25: invokestatic  #5                  // Method putSymmetrically:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V
      28: aload_0
      29: getstatic     #8                  // Field java/lang/Short.TYPE:Ljava/lang/Class;
      32: ldc_w         #9                  // class java/lang/Short
      35: invokestatic  #5                  // Method putSymmetrically:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V
      38: aload_0
      39: getstatic     #10                 // Field java/lang/Character.TYPE:Ljava/lang/Class;
      42: ldc_w         #11                 // class java/lang/Character
      45: invokestatic  #5                  // Method putSymmetrically:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V
      48: aload_0
      49: getstatic     #12                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      52: ldc_w         #13                 // class java/lang/Integer
      55: invokestatic  #5                  // Method putSymmetrically:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V
      58: aload_0
      59: getstatic     #14                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      62: ldc_w         #15                 // class java/lang/Long
      65: invokestatic  #5                  // Method putSymmetrically:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V
      68: aload_0
      69: getstatic     #16                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
      72: ldc_w         #17                 // class java/lang/Float
      75: invokestatic  #5                  // Method putSymmetrically:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V
      78: aload_0
      79: getstatic     #18                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
      82: ldc_w         #19                 // class java/lang/Double
      85: invokestatic  #5                  // Method putSymmetrically:(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)V
      88: aload_0
      89: invokestatic  #20                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      92: areturn

  private static <T> void putSymmetrically(java.util.Map<T, T>, T, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: aload_0
      10: aload_2
      11: aload_1
      12: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: return

  public static java.util.ArrayList<org.junit.experimental.theories.ParameterSignature> signatures(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
       4: aload_0
       5: invokevirtual #23                 // Method java/lang/reflect/Method.getParameterAnnotations:()[[Ljava/lang/annotation/Annotation;
       8: invokestatic  #24                 // Method signatures:([Ljava/lang/Class;[[Ljava/lang/annotation/Annotation;)Ljava/util/ArrayList;
      11: areturn

  public static java.util.List<org.junit.experimental.theories.ParameterSignature> signatures(java.lang.reflect.Constructor<?>);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method java/lang/reflect/Constructor.getParameterTypes:()[Ljava/lang/Class;
       4: aload_0
       5: invokevirtual #26                 // Method java/lang/reflect/Constructor.getParameterAnnotations:()[[Ljava/lang/annotation/Annotation;
       8: invokestatic  #24                 // Method signatures:([Ljava/lang/Class;[[Ljava/lang/annotation/Annotation;)Ljava/util/ArrayList;
      11: areturn

  private static java.util.ArrayList<org.junit.experimental.theories.ParameterSignature> signatures(java.lang.Class<?>[], java.lang.annotation.Annotation[][]);
    Code:
       0: new           #27                 // class java/util/ArrayList
       3: dup
       4: invokespecial #28                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: aload_0
      12: arraylength
      13: if_icmpge     40
      16: aload_2
      17: new           #29                 // class org/junit/experimental/theories/ParameterSignature
      20: dup
      21: aload_0
      22: iload_3
      23: aaload
      24: aload_1
      25: iload_3
      26: aaload
      27: invokespecial #30                 // Method "<init>":(Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)V
      30: invokevirtual #31                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      33: pop
      34: iinc          3, 1
      37: goto          10
      40: aload_2
      41: areturn

  private org.junit.experimental.theories.ParameterSignature(java.lang.Class<?>, java.lang.annotation.Annotation[]);
    Code:
       0: aload_0
       1: invokespecial #32                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #33                 // Field type:Ljava/lang/Class;
       9: aload_0
      10: aload_2
      11: putfield      #34                 // Field annotations:[Ljava/lang/annotation/Annotation;
      14: return

  public boolean canAcceptValue(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     22
       4: aload_0
       5: getfield      #33                 // Field type:Ljava/lang/Class;
       8: invokevirtual #35                 // Method java/lang/Class.isPrimitive:()Z
      11: ifne          18
      14: iconst_1
      15: goto          30
      18: iconst_0
      19: goto          30
      22: aload_0
      23: aload_1
      24: invokevirtual #36                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #37                 // Method canAcceptType:(Ljava/lang/Class;)Z
      30: ireturn

  public boolean canAcceptType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #33                 // Field type:Ljava/lang/Class;
       4: aload_1
       5: invokevirtual #38                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ifne          23
      11: aload_0
      12: aload_0
      13: getfield      #33                 // Field type:Ljava/lang/Class;
      16: aload_1
      17: invokespecial #39                 // Method isAssignableViaTypeConversion:(Ljava/lang/Class;Ljava/lang/Class;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public boolean canPotentiallyAcceptType(java.lang.Class<?>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #33                 // Field type:Ljava/lang/Class;
       5: invokevirtual #38                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ifne          31
      11: aload_0
      12: aload_1
      13: aload_0
      14: getfield      #33                 // Field type:Ljava/lang/Class;
      17: invokespecial #39                 // Method isAssignableViaTypeConversion:(Ljava/lang/Class;Ljava/lang/Class;)Z
      20: ifne          31
      23: aload_0
      24: aload_1
      25: invokevirtual #37                 // Method canAcceptType:(Ljava/lang/Class;)Z
      28: ifeq          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  private boolean isAssignableViaTypeConversion(java.lang.Class<?>, java.lang.Class<?>);
    Code:
       0: getstatic     #40                 // Field CONVERTABLE_TYPES_MAP:Ljava/util/Map;
       3: aload_2
       4: invokeinterface #41,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
       9: ifeq          31
      12: getstatic     #40                 // Field CONVERTABLE_TYPES_MAP:Ljava/util/Map;
      15: aload_2
      16: invokeinterface #42,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #43                 // class java/lang/Class
      24: astore_3
      25: aload_1
      26: aload_3
      27: invokevirtual #38                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      30: ireturn
      31: iconst_0
      32: ireturn

  public java.lang.Class<?> getType();
    Code:
       0: aload_0
       1: getfield      #33                 // Field type:Ljava/lang/Class;
       4: areturn

  public java.util.List<java.lang.annotation.Annotation> getAnnotations();
    Code:
       0: aload_0
       1: getfield      #34                 // Field annotations:[Ljava/lang/annotation/Annotation;
       4: invokestatic  #44                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       7: areturn

  public boolean hasAnnotation(java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public <T extends java.lang.annotation.Annotation> T findDeepAnnotation(java.lang.Class<T>);
    Code:
       0: aload_0
       1: getfield      #34                 // Field annotations:[Ljava/lang/annotation/Annotation;
       4: astore_2
       5: aload_0
       6: aload_2
       7: aload_1
       8: iconst_3
       9: invokespecial #46                 // Method findDeepAnnotation:([Ljava/lang/annotation/Annotation;Ljava/lang/Class;I)Ljava/lang/annotation/Annotation;
      12: areturn

  private <T extends java.lang.annotation.Annotation> T findDeepAnnotation(java.lang.annotation.Annotation[], java.lang.Class<T>, int);
    Code:
       0: iload_3
       1: ifne          6
       4: aconst_null
       5: areturn
       6: aload_1
       7: astore        4
       9: aload         4
      11: arraylength
      12: istore        5
      14: iconst_0
      15: istore        6
      17: iload         6
      19: iload         5
      21: if_icmpge     91
      24: aload         4
      26: iload         6
      28: aaload
      29: astore        7
      31: aload_2
      32: aload         7
      34: invokevirtual #47                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      37: ifeq          50
      40: aload_2
      41: aload         7
      43: invokevirtual #48                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #49                 // class java/lang/annotation/Annotation
      49: areturn
      50: aload_0
      51: aload         7
      53: invokeinterface #50,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
      58: invokevirtual #51                 // Method java/lang/Class.getAnnotations:()[Ljava/lang/annotation/Annotation;
      61: aload_2
      62: iload_3
      63: iconst_1
      64: isub
      65: invokespecial #46                 // Method findDeepAnnotation:([Ljava/lang/annotation/Annotation;Ljava/lang/Class;I)Ljava/lang/annotation/Annotation;
      68: astore        8
      70: aload         8
      72: ifnull        85
      75: aload_2
      76: aload         8
      78: invokevirtual #48                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      81: checkcast     #49                 // class java/lang/annotation/Annotation
      84: areturn
      85: iinc          6, 1
      88: goto          17
      91: aconst_null
      92: areturn

  public <T extends java.lang.annotation.Annotation> T getAnnotation(java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method getAnnotations:()Ljava/util/List;
       4: invokeinterface #53,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          49
      19: aload_2
      20: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #49                 // class java/lang/annotation/Annotation
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokevirtual #47                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      34: ifeq          46
      37: aload_1
      38: aload_3
      39: invokevirtual #48                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      42: checkcast     #49                 // class java/lang/annotation/Annotation
      45: areturn
      46: goto          10
      49: aconst_null
      50: areturn

  static {};
    Code:
       0: invokestatic  #56                 // Method buildConvertableTypesMap:()Ljava/util/Map;
       3: putstatic     #40                 // Field CONVERTABLE_TYPES_MAP:Ljava/util/Map;
       6: return
}
