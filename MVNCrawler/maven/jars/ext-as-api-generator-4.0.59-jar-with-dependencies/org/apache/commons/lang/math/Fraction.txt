Compiled from "Fraction.java"
public final class org.apache.commons.lang.math.Fraction extends java.lang.Number implements java.lang.Comparable {
  private static final long serialVersionUID;

  public static final org.apache.commons.lang.math.Fraction ZERO;

  public static final org.apache.commons.lang.math.Fraction ONE;

  public static final org.apache.commons.lang.math.Fraction ONE_HALF;

  public static final org.apache.commons.lang.math.Fraction ONE_THIRD;

  public static final org.apache.commons.lang.math.Fraction TWO_THIRDS;

  public static final org.apache.commons.lang.math.Fraction ONE_QUARTER;

  public static final org.apache.commons.lang.math.Fraction TWO_QUARTERS;

  public static final org.apache.commons.lang.math.Fraction THREE_QUARTERS;

  public static final org.apache.commons.lang.math.Fraction ONE_FIFTH;

  public static final org.apache.commons.lang.math.Fraction TWO_FIFTHS;

  public static final org.apache.commons.lang.math.Fraction THREE_FIFTHS;

  public static final org.apache.commons.lang.math.Fraction FOUR_FIFTHS;

  private final int numerator;

  private final int denominator;

  private transient int hashCode;

  private transient java.lang.String toString;

  private transient java.lang.String toProperString;

  private org.apache.commons.lang.math.Fraction(int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Number."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field hashCode:I
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field toString:Ljava/lang/String;
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field toProperString:Ljava/lang/String;
      19: aload_0
      20: iload_1
      21: putfield      #5                  // Field numerator:I
      24: aload_0
      25: iload_2
      26: putfield      #6                  // Field denominator:I
      29: return

  public static org.apache.commons.lang.math.Fraction getFraction(int, int);
    Code:
       0: iload_1
       1: ifne          14
       4: new           #7                  // class java/lang/ArithmeticException
       7: dup
       8: ldc           #8                  // String The denominator must not be zero
      10: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_1
      15: ifge          46
      18: iload_0
      19: ldc           #10                 // int -2147483648
      21: if_icmpeq     30
      24: iload_1
      25: ldc           #10                 // int -2147483648
      27: if_icmpne     40
      30: new           #7                  // class java/lang/ArithmeticException
      33: dup
      34: ldc           #11                 // String overflow: can\'t negate
      36: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: iload_0
      41: ineg
      42: istore_0
      43: iload_1
      44: ineg
      45: istore_1
      46: new           #12                 // class org/apache/commons/lang/math/Fraction
      49: dup
      50: iload_0
      51: iload_1
      52: invokespecial #13                 // Method "<init>":(II)V
      55: areturn

  public static org.apache.commons.lang.math.Fraction getFraction(int, int, int);
    Code:
       0: iload_2
       1: ifne          14
       4: new           #7                  // class java/lang/ArithmeticException
       7: dup
       8: ldc           #8                  // String The denominator must not be zero
      10: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_2
      15: ifge          28
      18: new           #7                  // class java/lang/ArithmeticException
      21: dup
      22: ldc           #14                 // String The denominator must not be negative
      24: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: iload_1
      29: ifge          42
      32: new           #7                  // class java/lang/ArithmeticException
      35: dup
      36: ldc           #15                 // String The numerator must not be negative
      38: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: iload_0
      43: ifge          58
      46: iload_0
      47: i2l
      48: iload_2
      49: i2l
      50: lmul
      51: iload_1
      52: i2l
      53: lsub
      54: lstore_3
      55: goto          67
      58: iload_0
      59: i2l
      60: iload_2
      61: i2l
      62: lmul
      63: iload_1
      64: i2l
      65: ladd
      66: lstore_3
      67: lload_3
      68: ldc2_w        #16                 // long -2147483648l
      71: lcmp
      72: iflt          83
      75: lload_3
      76: ldc2_w        #18                 // long 2147483647l
      79: lcmp
      80: ifle          93
      83: new           #7                  // class java/lang/ArithmeticException
      86: dup
      87: ldc           #20                 // String Numerator too large to represent as an Integer.
      89: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      92: athrow
      93: new           #12                 // class org/apache/commons/lang/math/Fraction
      96: dup
      97: lload_3
      98: l2i
      99: iload_2
     100: invokespecial #13                 // Method "<init>":(II)V
     103: areturn

  public static org.apache.commons.lang.math.Fraction getReducedFraction(int, int);
    Code:
       0: iload_1
       1: ifne          14
       4: new           #7                  // class java/lang/ArithmeticException
       7: dup
       8: ldc           #8                  // String The denominator must not be zero
      10: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_0
      15: ifne          22
      18: getstatic     #21                 // Field ZERO:Lorg/apache/commons/lang/math/Fraction;
      21: areturn
      22: iload_1
      23: ldc           #10                 // int -2147483648
      25: if_icmpne     42
      28: iload_0
      29: iconst_1
      30: iand
      31: ifne          42
      34: iload_0
      35: iconst_2
      36: idiv
      37: istore_0
      38: iload_1
      39: iconst_2
      40: idiv
      41: istore_1
      42: iload_1
      43: ifge          74
      46: iload_0
      47: ldc           #10                 // int -2147483648
      49: if_icmpeq     58
      52: iload_1
      53: ldc           #10                 // int -2147483648
      55: if_icmpne     68
      58: new           #7                  // class java/lang/ArithmeticException
      61: dup
      62: ldc           #11                 // String overflow: can\'t negate
      64: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: iload_0
      69: ineg
      70: istore_0
      71: iload_1
      72: ineg
      73: istore_1
      74: iload_0
      75: iload_1
      76: invokestatic  #22                 // Method greatestCommonDivisor:(II)I
      79: istore_2
      80: iload_0
      81: iload_2
      82: idiv
      83: istore_0
      84: iload_1
      85: iload_2
      86: idiv
      87: istore_1
      88: new           #12                 // class org/apache/commons/lang/math/Fraction
      91: dup
      92: iload_0
      93: iload_1
      94: invokespecial #13                 // Method "<init>":(II)V
      97: areturn

  public static org.apache.commons.lang.math.Fraction getFraction(double);
    Code:
       0: dload_0
       1: dconst_0
       2: dcmpg
       3: ifge          10
       6: iconst_m1
       7: goto          11
      10: iconst_1
      11: istore_2
      12: dload_0
      13: invokestatic  #23                 // Method java/lang/Math.abs:(D)D
      16: dstore_0
      17: dload_0
      18: ldc2_w        #24                 // double 2.147483647E9d
      21: dcmpl
      22: ifgt          32
      25: dload_0
      26: invokestatic  #26                 // Method java/lang/Double.isNaN:(D)Z
      29: ifeq          42
      32: new           #7                  // class java/lang/ArithmeticException
      35: dup
      36: ldc           #27                 // String The value must not be greater than Integer.MAX_VALUE or NaN
      38: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: dload_0
      43: d2i
      44: istore_3
      45: dload_0
      46: iload_3
      47: i2d
      48: dsub
      49: dstore_0
      50: iconst_0
      51: istore        4
      53: iconst_1
      54: istore        5
      56: iconst_1
      57: istore        6
      59: iconst_0
      60: istore        7
      62: iconst_0
      63: istore        8
      65: iconst_0
      66: istore        9
      68: dload_0
      69: d2i
      70: istore        10
      72: iconst_0
      73: istore        11
      75: dconst_1
      76: dstore        12
      78: dconst_0
      79: dstore        14
      81: dload_0
      82: iload         10
      84: i2d
      85: dsub
      86: dstore        16
      88: dconst_0
      89: dstore        18
      91: ldc2_w        #28                 // double 1.7976931348623157E308d
      94: dstore        22
      96: iconst_1
      97: istore        26
      99: dload         22
     101: dstore        20
     103: dload         12
     105: dload         16
     107: ddiv
     108: d2i
     109: istore        11
     111: dload         16
     113: dstore        14
     115: dload         12
     117: iload         11
     119: i2d
     120: dload         16
     122: dmul
     123: dsub
     124: dstore        18
     126: iload         10
     128: iload         6
     130: imul
     131: iload         4
     133: iadd
     134: istore        8
     136: iload         10
     138: iload         7
     140: imul
     141: iload         5
     143: iadd
     144: istore        9
     146: iload         8
     148: i2d
     149: iload         9
     151: i2d
     152: ddiv
     153: dstore        24
     155: dload_0
     156: dload         24
     158: dsub
     159: invokestatic  #23                 // Method java/lang/Math.abs:(D)D
     162: dstore        22
     164: iload         11
     166: istore        10
     168: dload         14
     170: dstore        12
     172: dload         18
     174: dstore        16
     176: iload         6
     178: istore        4
     180: iload         7
     182: istore        5
     184: iload         8
     186: istore        6
     188: iload         9
     190: istore        7
     192: iinc          26, 1
     195: dload         20
     197: dload         22
     199: dcmpl
     200: ifle          223
     203: iload         9
     205: sipush        10000
     208: if_icmpgt     223
     211: iload         9
     213: ifle          223
     216: iload         26
     218: bipush        25
     220: if_icmplt     99
     223: iload         26
     225: bipush        25
     227: if_icmpne     240
     230: new           #7                  // class java/lang/ArithmeticException
     233: dup
     234: ldc           #30                 // String Unable to convert double to fraction
     236: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
     239: athrow
     240: iload         4
     242: iload_3
     243: iload         5
     245: imul
     246: iadd
     247: iload_2
     248: imul
     249: iload         5
     251: invokestatic  #31                 // Method getReducedFraction:(II)Lorg/apache/commons/lang/math/Fraction;
     254: areturn

  public static org.apache.commons.lang.math.Fraction getFraction(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #32                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #33                 // String The string must not be null
      10: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: bipush        46
      17: invokevirtual #35                 // Method java/lang/String.indexOf:(I)I
      20: istore_1
      21: iload_1
      22: iflt          33
      25: aload_0
      26: invokestatic  #36                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
      29: invokestatic  #37                 // Method getFraction:(D)Lorg/apache/commons/lang/math/Fraction;
      32: areturn
      33: aload_0
      34: bipush        32
      36: invokevirtual #35                 // Method java/lang/String.indexOf:(I)I
      39: istore_1
      40: iload_1
      41: ifle          113
      44: aload_0
      45: iconst_0
      46: iload_1
      47: invokevirtual #38                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      50: invokestatic  #39                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      53: istore_2
      54: aload_0
      55: iload_1
      56: iconst_1
      57: iadd
      58: invokevirtual #40                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      61: astore_0
      62: aload_0
      63: bipush        47
      65: invokevirtual #35                 // Method java/lang/String.indexOf:(I)I
      68: istore_1
      69: iload_1
      70: ifge          83
      73: new           #41                 // class java/lang/NumberFormatException
      76: dup
      77: ldc           #42                 // String The fraction could not be parsed as the format X Y/Z
      79: invokespecial #43                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      82: athrow
      83: aload_0
      84: iconst_0
      85: iload_1
      86: invokevirtual #38                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      89: invokestatic  #39                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      92: istore_3
      93: aload_0
      94: iload_1
      95: iconst_1
      96: iadd
      97: invokevirtual #40                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     100: invokestatic  #39                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     103: istore        4
     105: iload_2
     106: iload_3
     107: iload         4
     109: invokestatic  #44                 // Method getFraction:(III)Lorg/apache/commons/lang/math/Fraction;
     112: areturn
     113: aload_0
     114: bipush        47
     116: invokevirtual #35                 // Method java/lang/String.indexOf:(I)I
     119: istore_1
     120: iload_1
     121: ifge          133
     124: aload_0
     125: invokestatic  #39                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     128: iconst_1
     129: invokestatic  #45                 // Method getFraction:(II)Lorg/apache/commons/lang/math/Fraction;
     132: areturn
     133: aload_0
     134: iconst_0
     135: iload_1
     136: invokevirtual #38                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     139: invokestatic  #39                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     142: istore_2
     143: aload_0
     144: iload_1
     145: iconst_1
     146: iadd
     147: invokevirtual #40                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     150: invokestatic  #39                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     153: istore_3
     154: iload_2
     155: iload_3
     156: invokestatic  #45                 // Method getFraction:(II)Lorg/apache/commons/lang/math/Fraction;
     159: areturn

  public int getNumerator();
    Code:
       0: aload_0
       1: getfield      #5                  // Field numerator:I
       4: ireturn

  public int getDenominator();
    Code:
       0: aload_0
       1: getfield      #6                  // Field denominator:I
       4: ireturn

  public int getProperNumerator();
    Code:
       0: aload_0
       1: getfield      #5                  // Field numerator:I
       4: aload_0
       5: getfield      #6                  // Field denominator:I
       8: irem
       9: invokestatic  #46                 // Method java/lang/Math.abs:(I)I
      12: ireturn

  public int getProperWhole();
    Code:
       0: aload_0
       1: getfield      #5                  // Field numerator:I
       4: aload_0
       5: getfield      #6                  // Field denominator:I
       8: idiv
       9: ireturn

  public int intValue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field numerator:I
       4: aload_0
       5: getfield      #6                  // Field denominator:I
       8: idiv
       9: ireturn

  public long longValue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field numerator:I
       4: i2l
       5: aload_0
       6: getfield      #6                  // Field denominator:I
       9: i2l
      10: ldiv
      11: lreturn

  public float floatValue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field numerator:I
       4: i2f
       5: aload_0
       6: getfield      #6                  // Field denominator:I
       9: i2f
      10: fdiv
      11: freturn

  public double doubleValue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field numerator:I
       4: i2d
       5: aload_0
       6: getfield      #6                  // Field denominator:I
       9: i2d
      10: ddiv
      11: dreturn

  public org.apache.commons.lang.math.Fraction reduce();
    Code:
       0: aload_0
       1: getfield      #5                  // Field numerator:I
       4: ifne          25
       7: aload_0
       8: getstatic     #21                 // Field ZERO:Lorg/apache/commons/lang/math/Fraction;
      11: invokevirtual #47                 // Method equals:(Ljava/lang/Object;)Z
      14: ifeq          21
      17: aload_0
      18: goto          24
      21: getstatic     #21                 // Field ZERO:Lorg/apache/commons/lang/math/Fraction;
      24: areturn
      25: aload_0
      26: getfield      #5                  // Field numerator:I
      29: invokestatic  #46                 // Method java/lang/Math.abs:(I)I
      32: aload_0
      33: getfield      #6                  // Field denominator:I
      36: invokestatic  #22                 // Method greatestCommonDivisor:(II)I
      39: istore_1
      40: iload_1
      41: iconst_1
      42: if_icmpne     47
      45: aload_0
      46: areturn
      47: aload_0
      48: getfield      #5                  // Field numerator:I
      51: iload_1
      52: idiv
      53: aload_0
      54: getfield      #6                  // Field denominator:I
      57: iload_1
      58: idiv
      59: invokestatic  #45                 // Method getFraction:(II)Lorg/apache/commons/lang/math/Fraction;
      62: areturn

  public org.apache.commons.lang.math.Fraction invert();
    Code:
       0: aload_0
       1: getfield      #5                  // Field numerator:I
       4: ifne          17
       7: new           #7                  // class java/lang/ArithmeticException
      10: dup
      11: ldc           #48                 // String Unable to invert zero.
      13: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #5                  // Field numerator:I
      21: ldc           #10                 // int -2147483648
      23: if_icmpne     36
      26: new           #7                  // class java/lang/ArithmeticException
      29: dup
      30: ldc           #49                 // String overflow: can\'t negate numerator
      32: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: getfield      #5                  // Field numerator:I
      40: ifge          61
      43: new           #12                 // class org/apache/commons/lang/math/Fraction
      46: dup
      47: aload_0
      48: getfield      #6                  // Field denominator:I
      51: ineg
      52: aload_0
      53: getfield      #5                  // Field numerator:I
      56: ineg
      57: invokespecial #13                 // Method "<init>":(II)V
      60: areturn
      61: new           #12                 // class org/apache/commons/lang/math/Fraction
      64: dup
      65: aload_0
      66: getfield      #6                  // Field denominator:I
      69: aload_0
      70: getfield      #5                  // Field numerator:I
      73: invokespecial #13                 // Method "<init>":(II)V
      76: areturn

  public org.apache.commons.lang.math.Fraction negate();
    Code:
       0: aload_0
       1: getfield      #5                  // Field numerator:I
       4: ldc           #10                 // int -2147483648
       6: if_icmpne     19
       9: new           #7                  // class java/lang/ArithmeticException
      12: dup
      13: ldc           #50                 // String overflow: too large to negate
      15: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: new           #12                 // class org/apache/commons/lang/math/Fraction
      22: dup
      23: aload_0
      24: getfield      #5                  // Field numerator:I
      27: ineg
      28: aload_0
      29: getfield      #6                  // Field denominator:I
      32: invokespecial #13                 // Method "<init>":(II)V
      35: areturn

  public org.apache.commons.lang.math.Fraction abs();
    Code:
       0: aload_0
       1: getfield      #5                  // Field numerator:I
       4: iflt          9
       7: aload_0
       8: areturn
       9: aload_0
      10: invokevirtual #51                 // Method negate:()Lorg/apache/commons/lang/math/Fraction;
      13: areturn

  public org.apache.commons.lang.math.Fraction pow(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpne     7
       5: aload_0
       6: areturn
       7: iload_1
       8: ifne          15
      11: getstatic     #52                 // Field ONE:Lorg/apache/commons/lang/math/Fraction;
      14: areturn
      15: iload_1
      16: ifge          51
      19: iload_1
      20: ldc           #10                 // int -2147483648
      22: if_icmpne     41
      25: aload_0
      26: invokevirtual #53                 // Method invert:()Lorg/apache/commons/lang/math/Fraction;
      29: iconst_2
      30: invokevirtual #54                 // Method pow:(I)Lorg/apache/commons/lang/math/Fraction;
      33: iload_1
      34: iconst_2
      35: idiv
      36: ineg
      37: invokevirtual #54                 // Method pow:(I)Lorg/apache/commons/lang/math/Fraction;
      40: areturn
      41: aload_0
      42: invokevirtual #53                 // Method invert:()Lorg/apache/commons/lang/math/Fraction;
      45: iload_1
      46: ineg
      47: invokevirtual #54                 // Method pow:(I)Lorg/apache/commons/lang/math/Fraction;
      50: areturn
      51: aload_0
      52: aload_0
      53: invokevirtual #55                 // Method multiplyBy:(Lorg/apache/commons/lang/math/Fraction;)Lorg/apache/commons/lang/math/Fraction;
      56: astore_2
      57: iload_1
      58: iconst_2
      59: irem
      60: ifne          71
      63: aload_2
      64: iload_1
      65: iconst_2
      66: idiv
      67: invokevirtual #54                 // Method pow:(I)Lorg/apache/commons/lang/math/Fraction;
      70: areturn
      71: aload_2
      72: iload_1
      73: iconst_2
      74: idiv
      75: invokevirtual #54                 // Method pow:(I)Lorg/apache/commons/lang/math/Fraction;
      78: aload_0
      79: invokevirtual #55                 // Method multiplyBy:(Lorg/apache/commons/lang/math/Fraction;)Lorg/apache/commons/lang/math/Fraction;
      82: areturn

  private static int greatestCommonDivisor(int, int);
    Code:
       0: iload_0
       1: invokestatic  #46                 // Method java/lang/Math.abs:(I)I
       4: iconst_1
       5: if_icmple     16
       8: iload_1
       9: invokestatic  #46                 // Method java/lang/Math.abs:(I)I
      12: iconst_1
      13: if_icmpgt     18
      16: iconst_1
      17: ireturn
      18: iload_0
      19: ifle          25
      22: iload_0
      23: ineg
      24: istore_0
      25: iload_1
      26: ifle          32
      29: iload_1
      30: ineg
      31: istore_1
      32: iconst_0
      33: istore_2
      34: iload_0
      35: iconst_1
      36: iand
      37: ifne          66
      40: iload_1
      41: iconst_1
      42: iand
      43: ifne          66
      46: iload_2
      47: bipush        31
      49: if_icmpge     66
      52: iload_0
      53: iconst_2
      54: idiv
      55: istore_0
      56: iload_1
      57: iconst_2
      58: idiv
      59: istore_1
      60: iinc          2, 1
      63: goto          34
      66: iload_2
      67: bipush        31
      69: if_icmpne     82
      72: new           #7                  // class java/lang/ArithmeticException
      75: dup
      76: ldc           #56                 // String overflow: gcd is 2^31
      78: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: iload_0
      83: iconst_1
      84: iand
      85: iconst_1
      86: if_icmpne     93
      89: iload_1
      90: goto          97
      93: iload_0
      94: iconst_2
      95: idiv
      96: ineg
      97: istore_3
      98: iload_3
      99: iconst_1
     100: iand
     101: ifne          111
     104: iload_3
     105: iconst_2
     106: idiv
     107: istore_3
     108: goto          98
     111: iload_3
     112: ifle          121
     115: iload_3
     116: ineg
     117: istore_0
     118: goto          123
     121: iload_3
     122: istore_1
     123: iload_1
     124: iload_0
     125: isub
     126: iconst_2
     127: idiv
     128: istore_3
     129: iload_3
     130: ifne          98
     133: iload_0
     134: ineg
     135: iconst_1
     136: iload_2
     137: ishl
     138: imul
     139: ireturn

  private static int mulAndCheck(int, int);
    Code:
       0: iload_0
       1: i2l
       2: iload_1
       3: i2l
       4: lmul
       5: lstore_2
       6: lload_2
       7: ldc2_w        #16                 // long -2147483648l
      10: lcmp
      11: iflt          22
      14: lload_2
      15: ldc2_w        #18                 // long 2147483647l
      18: lcmp
      19: ifle          32
      22: new           #7                  // class java/lang/ArithmeticException
      25: dup
      26: ldc           #57                 // String overflow: mul
      28: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: lload_2
      33: l2i
      34: ireturn

  private static int mulPosAndCheck(int, int);
    Code:
       0: iload_0
       1: i2l
       2: iload_1
       3: i2l
       4: lmul
       5: lstore_2
       6: lload_2
       7: ldc2_w        #18                 // long 2147483647l
      10: lcmp
      11: ifle          24
      14: new           #7                  // class java/lang/ArithmeticException
      17: dup
      18: ldc           #58                 // String overflow: mulPos
      20: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: lload_2
      25: l2i
      26: ireturn

  private static int addAndCheck(int, int);
    Code:
       0: iload_0
       1: i2l
       2: iload_1
       3: i2l
       4: ladd
       5: lstore_2
       6: lload_2
       7: ldc2_w        #16                 // long -2147483648l
      10: lcmp
      11: iflt          22
      14: lload_2
      15: ldc2_w        #18                 // long 2147483647l
      18: lcmp
      19: ifle          32
      22: new           #7                  // class java/lang/ArithmeticException
      25: dup
      26: ldc           #59                 // String overflow: add
      28: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: lload_2
      33: l2i
      34: ireturn

  private static int subAndCheck(int, int);
    Code:
       0: iload_0
       1: i2l
       2: iload_1
       3: i2l
       4: lsub
       5: lstore_2
       6: lload_2
       7: ldc2_w        #16                 // long -2147483648l
      10: lcmp
      11: iflt          22
      14: lload_2
      15: ldc2_w        #18                 // long 2147483647l
      18: lcmp
      19: ifle          32
      22: new           #7                  // class java/lang/ArithmeticException
      25: dup
      26: ldc           #59                 // String overflow: add
      28: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: lload_2
      33: l2i
      34: ireturn

  public org.apache.commons.lang.math.Fraction add(org.apache.commons.lang.math.Fraction);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #60                 // Method addSub:(Lorg/apache/commons/lang/math/Fraction;Z)Lorg/apache/commons/lang/math/Fraction;
       6: areturn

  public org.apache.commons.lang.math.Fraction subtract(org.apache.commons.lang.math.Fraction);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #60                 // Method addSub:(Lorg/apache/commons/lang/math/Fraction;Z)Lorg/apache/commons/lang/math/Fraction;
       6: areturn

  private org.apache.commons.lang.math.Fraction addSub(org.apache.commons.lang.math.Fraction, boolean);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #32                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #61                 // String The fraction must not be null
      10: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #5                  // Field numerator:I
      18: ifne          34
      21: iload_2
      22: ifeq          29
      25: aload_1
      26: goto          33
      29: aload_1
      30: invokevirtual #51                 // Method negate:()Lorg/apache/commons/lang/math/Fraction;
      33: areturn
      34: aload_1
      35: getfield      #5                  // Field numerator:I
      38: ifne          43
      41: aload_0
      42: areturn
      43: aload_0
      44: getfield      #6                  // Field denominator:I
      47: aload_1
      48: getfield      #6                  // Field denominator:I
      51: invokestatic  #22                 // Method greatestCommonDivisor:(II)I
      54: istore_3
      55: iload_3
      56: iconst_1
      57: if_icmpne     126
      60: aload_0
      61: getfield      #5                  // Field numerator:I
      64: aload_1
      65: getfield      #6                  // Field denominator:I
      68: invokestatic  #62                 // Method mulAndCheck:(II)I
      71: istore        4
      73: aload_1
      74: getfield      #5                  // Field numerator:I
      77: aload_0
      78: getfield      #6                  // Field denominator:I
      81: invokestatic  #62                 // Method mulAndCheck:(II)I
      84: istore        5
      86: new           #12                 // class org/apache/commons/lang/math/Fraction
      89: dup
      90: iload_2
      91: ifeq          104
      94: iload         4
      96: iload         5
      98: invokestatic  #63                 // Method addAndCheck:(II)I
     101: goto          111
     104: iload         4
     106: iload         5
     108: invokestatic  #64                 // Method subAndCheck:(II)I
     111: aload_0
     112: getfield      #6                  // Field denominator:I
     115: aload_1
     116: getfield      #6                  // Field denominator:I
     119: invokestatic  #65                 // Method mulPosAndCheck:(II)I
     122: invokespecial #13                 // Method "<init>":(II)V
     125: areturn
     126: aload_0
     127: getfield      #5                  // Field numerator:I
     130: i2l
     131: invokestatic  #66                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     134: aload_1
     135: getfield      #6                  // Field denominator:I
     138: iload_3
     139: idiv
     140: i2l
     141: invokestatic  #66                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     144: invokevirtual #67                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     147: astore        4
     149: aload_1
     150: getfield      #5                  // Field numerator:I
     153: i2l
     154: invokestatic  #66                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     157: aload_0
     158: getfield      #6                  // Field denominator:I
     161: iload_3
     162: idiv
     163: i2l
     164: invokestatic  #66                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     167: invokevirtual #67                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     170: astore        5
     172: iload_2
     173: ifeq          186
     176: aload         4
     178: aload         5
     180: invokevirtual #68                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     183: goto          193
     186: aload         4
     188: aload         5
     190: invokevirtual #69                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     193: astore        6
     195: aload         6
     197: iload_3
     198: i2l
     199: invokestatic  #66                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     202: invokevirtual #70                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     205: invokevirtual #71                 // Method java/math/BigInteger.intValue:()I
     208: istore        7
     210: iload         7
     212: ifne          219
     215: iload_3
     216: goto          225
     219: iload         7
     221: iload_3
     222: invokestatic  #22                 // Method greatestCommonDivisor:(II)I
     225: istore        8
     227: aload         6
     229: iload         8
     231: i2l
     232: invokestatic  #66                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     235: invokevirtual #72                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     238: astore        9
     240: aload         9
     242: invokevirtual #73                 // Method java/math/BigInteger.bitLength:()I
     245: bipush        31
     247: if_icmple     260
     250: new           #7                  // class java/lang/ArithmeticException
     253: dup
     254: ldc           #74                 // String overflow: numerator too large after multiply
     256: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
     259: athrow
     260: new           #12                 // class org/apache/commons/lang/math/Fraction
     263: dup
     264: aload         9
     266: invokevirtual #71                 // Method java/math/BigInteger.intValue:()I
     269: aload_0
     270: getfield      #6                  // Field denominator:I
     273: iload_3
     274: idiv
     275: aload_1
     276: getfield      #6                  // Field denominator:I
     279: iload         8
     281: idiv
     282: invokestatic  #65                 // Method mulPosAndCheck:(II)I
     285: invokespecial #13                 // Method "<init>":(II)V
     288: areturn

  public org.apache.commons.lang.math.Fraction multiplyBy(org.apache.commons.lang.math.Fraction);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #32                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #61                 // String The fraction must not be null
      10: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #5                  // Field numerator:I
      18: ifeq          28
      21: aload_1
      22: getfield      #5                  // Field numerator:I
      25: ifne          32
      28: getstatic     #21                 // Field ZERO:Lorg/apache/commons/lang/math/Fraction;
      31: areturn
      32: aload_0
      33: getfield      #5                  // Field numerator:I
      36: aload_1
      37: getfield      #6                  // Field denominator:I
      40: invokestatic  #22                 // Method greatestCommonDivisor:(II)I
      43: istore_2
      44: aload_1
      45: getfield      #5                  // Field numerator:I
      48: aload_0
      49: getfield      #6                  // Field denominator:I
      52: invokestatic  #22                 // Method greatestCommonDivisor:(II)I
      55: istore_3
      56: aload_0
      57: getfield      #5                  // Field numerator:I
      60: iload_2
      61: idiv
      62: aload_1
      63: getfield      #5                  // Field numerator:I
      66: iload_3
      67: idiv
      68: invokestatic  #62                 // Method mulAndCheck:(II)I
      71: aload_0
      72: getfield      #6                  // Field denominator:I
      75: iload_3
      76: idiv
      77: aload_1
      78: getfield      #6                  // Field denominator:I
      81: iload_2
      82: idiv
      83: invokestatic  #65                 // Method mulPosAndCheck:(II)I
      86: invokestatic  #31                 // Method getReducedFraction:(II)Lorg/apache/commons/lang/math/Fraction;
      89: areturn

  public org.apache.commons.lang.math.Fraction divideBy(org.apache.commons.lang.math.Fraction);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #32                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #61                 // String The fraction must not be null
      10: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: getfield      #5                  // Field numerator:I
      18: ifne          31
      21: new           #7                  // class java/lang/ArithmeticException
      24: dup
      25: ldc           #75                 // String The fraction to divide by must not be zero
      27: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: aload_1
      33: invokevirtual #53                 // Method invert:()Lorg/apache/commons/lang/math/Fraction;
      36: invokevirtual #55                 // Method multiplyBy:(Lorg/apache/commons/lang/math/Fraction;)Lorg/apache/commons/lang/math/Fraction;
      39: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #12                 // class org/apache/commons/lang/math/Fraction
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #12                 // class org/apache/commons/lang/math/Fraction
      20: astore_2
      21: aload_0
      22: invokevirtual #76                 // Method getNumerator:()I
      25: aload_2
      26: invokevirtual #76                 // Method getNumerator:()I
      29: if_icmpne     47
      32: aload_0
      33: invokevirtual #77                 // Method getDenominator:()I
      36: aload_2
      37: invokevirtual #77                 // Method getDenominator:()I
      40: if_icmpne     47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field hashCode:I
       4: ifne          27
       7: aload_0
       8: bipush        37
      10: sipush        629
      13: aload_0
      14: invokevirtual #76                 // Method getNumerator:()I
      17: iadd
      18: imul
      19: aload_0
      20: invokevirtual #77                 // Method getDenominator:()I
      23: iadd
      24: putfield      #2                  // Field hashCode:I
      27: aload_0
      28: getfield      #2                  // Field hashCode:I
      31: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #12                 // class org/apache/commons/lang/math/Fraction
       4: astore_2
       5: aload_0
       6: aload_2
       7: if_acmpne     12
      10: iconst_0
      11: ireturn
      12: aload_0
      13: getfield      #5                  // Field numerator:I
      16: aload_2
      17: getfield      #5                  // Field numerator:I
      20: if_icmpne     36
      23: aload_0
      24: getfield      #6                  // Field denominator:I
      27: aload_2
      28: getfield      #6                  // Field denominator:I
      31: if_icmpne     36
      34: iconst_0
      35: ireturn
      36: aload_0
      37: getfield      #5                  // Field numerator:I
      40: i2l
      41: aload_2
      42: getfield      #6                  // Field denominator:I
      45: i2l
      46: lmul
      47: lstore_3
      48: aload_2
      49: getfield      #5                  // Field numerator:I
      52: i2l
      53: aload_0
      54: getfield      #6                  // Field denominator:I
      57: i2l
      58: lmul
      59: lstore        5
      61: lload_3
      62: lload         5
      64: lcmp
      65: ifne          70
      68: iconst_0
      69: ireturn
      70: lload_3
      71: lload         5
      73: lcmp
      74: ifge          79
      77: iconst_m1
      78: ireturn
      79: iconst_1
      80: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #3                  // Field toString:Ljava/lang/String;
       4: ifnonnull     42
       7: aload_0
       8: new           #78                 // class org/apache/commons/lang/text/StrBuilder
      11: dup
      12: bipush        32
      14: invokespecial #79                 // Method org/apache/commons/lang/text/StrBuilder."<init>":(I)V
      17: aload_0
      18: invokevirtual #76                 // Method getNumerator:()I
      21: invokevirtual #80                 // Method org/apache/commons/lang/text/StrBuilder.append:(I)Lorg/apache/commons/lang/text/StrBuilder;
      24: bipush        47
      26: invokevirtual #81                 // Method org/apache/commons/lang/text/StrBuilder.append:(C)Lorg/apache/commons/lang/text/StrBuilder;
      29: aload_0
      30: invokevirtual #77                 // Method getDenominator:()I
      33: invokevirtual #80                 // Method org/apache/commons/lang/text/StrBuilder.append:(I)Lorg/apache/commons/lang/text/StrBuilder;
      36: invokevirtual #82                 // Method org/apache/commons/lang/text/StrBuilder.toString:()Ljava/lang/String;
      39: putfield      #3                  // Field toString:Ljava/lang/String;
      42: aload_0
      43: getfield      #3                  // Field toString:Ljava/lang/String;
      46: areturn

  public java.lang.String toProperString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field toProperString:Ljava/lang/String;
       4: ifnonnull     197
       7: aload_0
       8: getfield      #5                  // Field numerator:I
      11: ifne          23
      14: aload_0
      15: ldc           #83                 // String 0
      17: putfield      #4                  // Field toProperString:Ljava/lang/String;
      20: goto          197
      23: aload_0
      24: getfield      #5                  // Field numerator:I
      27: aload_0
      28: getfield      #6                  // Field denominator:I
      31: if_icmpne     43
      34: aload_0
      35: ldc           #84                 // String 1
      37: putfield      #4                  // Field toProperString:Ljava/lang/String;
      40: goto          197
      43: aload_0
      44: getfield      #5                  // Field numerator:I
      47: iconst_m1
      48: aload_0
      49: getfield      #6                  // Field denominator:I
      52: imul
      53: if_icmpne     65
      56: aload_0
      57: ldc           #85                 // String -1
      59: putfield      #4                  // Field toProperString:Ljava/lang/String;
      62: goto          197
      65: aload_0
      66: getfield      #5                  // Field numerator:I
      69: ifle          80
      72: aload_0
      73: getfield      #5                  // Field numerator:I
      76: ineg
      77: goto          84
      80: aload_0
      81: getfield      #5                  // Field numerator:I
      84: aload_0
      85: getfield      #6                  // Field denominator:I
      88: ineg
      89: if_icmpge     162
      92: aload_0
      93: invokevirtual #86                 // Method getProperNumerator:()I
      96: istore_1
      97: iload_1
      98: ifne          115
     101: aload_0
     102: aload_0
     103: invokevirtual #87                 // Method getProperWhole:()I
     106: invokestatic  #88                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
     109: putfield      #4                  // Field toProperString:Ljava/lang/String;
     112: goto          159
     115: aload_0
     116: new           #78                 // class org/apache/commons/lang/text/StrBuilder
     119: dup
     120: bipush        32
     122: invokespecial #79                 // Method org/apache/commons/lang/text/StrBuilder."<init>":(I)V
     125: aload_0
     126: invokevirtual #87                 // Method getProperWhole:()I
     129: invokevirtual #80                 // Method org/apache/commons/lang/text/StrBuilder.append:(I)Lorg/apache/commons/lang/text/StrBuilder;
     132: bipush        32
     134: invokevirtual #81                 // Method org/apache/commons/lang/text/StrBuilder.append:(C)Lorg/apache/commons/lang/text/StrBuilder;
     137: iload_1
     138: invokevirtual #80                 // Method org/apache/commons/lang/text/StrBuilder.append:(I)Lorg/apache/commons/lang/text/StrBuilder;
     141: bipush        47
     143: invokevirtual #81                 // Method org/apache/commons/lang/text/StrBuilder.append:(C)Lorg/apache/commons/lang/text/StrBuilder;
     146: aload_0
     147: invokevirtual #77                 // Method getDenominator:()I
     150: invokevirtual #80                 // Method org/apache/commons/lang/text/StrBuilder.append:(I)Lorg/apache/commons/lang/text/StrBuilder;
     153: invokevirtual #82                 // Method org/apache/commons/lang/text/StrBuilder.toString:()Ljava/lang/String;
     156: putfield      #4                  // Field toProperString:Ljava/lang/String;
     159: goto          197
     162: aload_0
     163: new           #78                 // class org/apache/commons/lang/text/StrBuilder
     166: dup
     167: bipush        32
     169: invokespecial #79                 // Method org/apache/commons/lang/text/StrBuilder."<init>":(I)V
     172: aload_0
     173: invokevirtual #76                 // Method getNumerator:()I
     176: invokevirtual #80                 // Method org/apache/commons/lang/text/StrBuilder.append:(I)Lorg/apache/commons/lang/text/StrBuilder;
     179: bipush        47
     181: invokevirtual #81                 // Method org/apache/commons/lang/text/StrBuilder.append:(C)Lorg/apache/commons/lang/text/StrBuilder;
     184: aload_0
     185: invokevirtual #77                 // Method getDenominator:()I
     188: invokevirtual #80                 // Method org/apache/commons/lang/text/StrBuilder.append:(I)Lorg/apache/commons/lang/text/StrBuilder;
     191: invokevirtual #82                 // Method org/apache/commons/lang/text/StrBuilder.toString:()Ljava/lang/String;
     194: putfield      #4                  // Field toProperString:Ljava/lang/String;
     197: aload_0
     198: getfield      #4                  // Field toProperString:Ljava/lang/String;
     201: areturn

  static {};
    Code:
       0: new           #12                 // class org/apache/commons/lang/math/Fraction
       3: dup
       4: iconst_0
       5: iconst_1
       6: invokespecial #13                 // Method "<init>":(II)V
       9: putstatic     #21                 // Field ZERO:Lorg/apache/commons/lang/math/Fraction;
      12: new           #12                 // class org/apache/commons/lang/math/Fraction
      15: dup
      16: iconst_1
      17: iconst_1
      18: invokespecial #13                 // Method "<init>":(II)V
      21: putstatic     #52                 // Field ONE:Lorg/apache/commons/lang/math/Fraction;
      24: new           #12                 // class org/apache/commons/lang/math/Fraction
      27: dup
      28: iconst_1
      29: iconst_2
      30: invokespecial #13                 // Method "<init>":(II)V
      33: putstatic     #89                 // Field ONE_HALF:Lorg/apache/commons/lang/math/Fraction;
      36: new           #12                 // class org/apache/commons/lang/math/Fraction
      39: dup
      40: iconst_1
      41: iconst_3
      42: invokespecial #13                 // Method "<init>":(II)V
      45: putstatic     #90                 // Field ONE_THIRD:Lorg/apache/commons/lang/math/Fraction;
      48: new           #12                 // class org/apache/commons/lang/math/Fraction
      51: dup
      52: iconst_2
      53: iconst_3
      54: invokespecial #13                 // Method "<init>":(II)V
      57: putstatic     #91                 // Field TWO_THIRDS:Lorg/apache/commons/lang/math/Fraction;
      60: new           #12                 // class org/apache/commons/lang/math/Fraction
      63: dup
      64: iconst_1
      65: iconst_4
      66: invokespecial #13                 // Method "<init>":(II)V
      69: putstatic     #92                 // Field ONE_QUARTER:Lorg/apache/commons/lang/math/Fraction;
      72: new           #12                 // class org/apache/commons/lang/math/Fraction
      75: dup
      76: iconst_2
      77: iconst_4
      78: invokespecial #13                 // Method "<init>":(II)V
      81: putstatic     #93                 // Field TWO_QUARTERS:Lorg/apache/commons/lang/math/Fraction;
      84: new           #12                 // class org/apache/commons/lang/math/Fraction
      87: dup
      88: iconst_3
      89: iconst_4
      90: invokespecial #13                 // Method "<init>":(II)V
      93: putstatic     #94                 // Field THREE_QUARTERS:Lorg/apache/commons/lang/math/Fraction;
      96: new           #12                 // class org/apache/commons/lang/math/Fraction
      99: dup
     100: iconst_1
     101: iconst_5
     102: invokespecial #13                 // Method "<init>":(II)V
     105: putstatic     #95                 // Field ONE_FIFTH:Lorg/apache/commons/lang/math/Fraction;
     108: new           #12                 // class org/apache/commons/lang/math/Fraction
     111: dup
     112: iconst_2
     113: iconst_5
     114: invokespecial #13                 // Method "<init>":(II)V
     117: putstatic     #96                 // Field TWO_FIFTHS:Lorg/apache/commons/lang/math/Fraction;
     120: new           #12                 // class org/apache/commons/lang/math/Fraction
     123: dup
     124: iconst_3
     125: iconst_5
     126: invokespecial #13                 // Method "<init>":(II)V
     129: putstatic     #97                 // Field THREE_FIFTHS:Lorg/apache/commons/lang/math/Fraction;
     132: new           #12                 // class org/apache/commons/lang/math/Fraction
     135: dup
     136: iconst_4
     137: iconst_5
     138: invokespecial #13                 // Method "<init>":(II)V
     141: putstatic     #98                 // Field FOUR_FIFTHS:Lorg/apache/commons/lang/math/Fraction;
     144: return
}
