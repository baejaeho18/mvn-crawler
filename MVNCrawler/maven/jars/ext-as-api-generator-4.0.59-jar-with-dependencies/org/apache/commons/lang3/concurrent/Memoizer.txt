Compiled from "Memoizer.java"
public class org.apache.commons.lang3.concurrent.Memoizer<I, O> implements org.apache.commons.lang3.concurrent.Computable<I, O> {
  private final java.util.concurrent.ConcurrentMap<I, java.util.concurrent.Future<O>> cache;

  private final org.apache.commons.lang3.concurrent.Computable<I, O> computable;

  private final boolean recalculate;

  public org.apache.commons.lang3.concurrent.Memoizer(org.apache.commons.lang3.concurrent.Computable<I, O>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #2                  // Method "<init>":(Lorg/apache/commons/lang3/concurrent/Computable;Z)V
       6: return

  public org.apache.commons.lang3.concurrent.Memoizer(org.apache.commons.lang3.concurrent.Computable<I, O>, boolean);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #5                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #6                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: aload_1
      17: putfield      #1                  // Field computable:Lorg/apache/commons/lang3/concurrent/Computable;
      20: aload_0
      21: iload_2
      22: putfield      #7                  // Field recalculate:Z
      25: return

  public O compute(I) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #9                  // class java/util/concurrent/Future
      13: astore_2
      14: aload_2
      15: ifnonnull     66
      18: new           #10                 // class org/apache/commons/lang3/concurrent/Memoizer$1
      21: dup
      22: aload_0
      23: aload_1
      24: invokespecial #11                 // Method org/apache/commons/lang3/concurrent/Memoizer$1."<init>":(Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)V
      27: astore_3
      28: new           #12                 // class java/util/concurrent/FutureTask
      31: dup
      32: aload_3
      33: invokespecial #13                 // Method java/util/concurrent/FutureTask."<init>":(Ljava/util/concurrent/Callable;)V
      36: astore        4
      38: aload_0
      39: getfield      #6                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
      42: aload_1
      43: aload         4
      45: invokeinterface #14,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: checkcast     #9                  // class java/util/concurrent/Future
      53: astore_2
      54: aload_2
      55: ifnonnull     66
      58: aload         4
      60: astore_2
      61: aload         4
      63: invokevirtual #15                 // Method java/util/concurrent/FutureTask.run:()V
      66: aload_2
      67: invokeinterface #16,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
      72: areturn
      73: astore_3
      74: aload_0
      75: getfield      #6                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
      78: aload_1
      79: aload_2
      80: invokeinterface #18,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      85: pop
      86: goto          118
      89: astore_3
      90: aload_0
      91: getfield      #7                  // Field recalculate:Z
      94: ifeq          109
      97: aload_0
      98: getfield      #6                  // Field cache:Ljava/util/concurrent/ConcurrentMap;
     101: aload_1
     102: aload_2
     103: invokeinterface #18,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
     108: pop
     109: aload_0
     110: aload_3
     111: invokevirtual #20                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
     114: invokespecial #21                 // Method launderException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     117: athrow
     118: goto          0
    Exception table:
       from    to  target type
          66    72    73   Class java/util/concurrent/CancellationException
          66    72    89   Class java/util/concurrent/ExecutionException

  private java.lang.RuntimeException launderException(java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #22                 // class java/lang/RuntimeException
       4: ifeq          12
       7: aload_1
       8: checkcast     #22                 // class java/lang/RuntimeException
      11: areturn
      12: aload_1
      13: instanceof    #23                 // class java/lang/Error
      16: ifeq          24
      19: aload_1
      20: checkcast     #23                 // class java/lang/Error
      23: athrow
      24: new           #24                 // class java/lang/IllegalStateException
      27: dup
      28: ldc           #25                 // String Unchecked exception
      30: aload_1
      31: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      34: athrow

  static org.apache.commons.lang3.concurrent.Computable access$000(org.apache.commons.lang3.concurrent.Memoizer);
    Code:
       0: aload_0
       1: getfield      #1                  // Field computable:Lorg/apache/commons/lang3/concurrent/Computable;
       4: areturn
}
