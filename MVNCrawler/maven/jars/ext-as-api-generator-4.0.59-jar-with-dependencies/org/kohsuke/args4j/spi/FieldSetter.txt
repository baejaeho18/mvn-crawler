Compiled from "FieldSetter.java"
public final class org.kohsuke.args4j.spi.FieldSetter implements org.kohsuke.args4j.spi.Getter,org.kohsuke.args4j.spi.Setter {
  private final java.lang.reflect.Field f;

  private final java.lang.Object bean;

  public org.kohsuke.args4j.spi.FieldSetter(java.lang.Object, java.lang.reflect.Field);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field bean:Ljava/lang/Object;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field f:Ljava/lang/reflect/Field;
      14: return

  public java.lang.Class getType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field f:Ljava/lang/reflect/Field;
       4: invokevirtual #4                  // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
       7: areturn

  public boolean isMultiValued();
    Code:
       0: iconst_0
       1: ireturn

  public org.kohsuke.args4j.spi.FieldSetter asFieldSetter();
    Code:
       0: new           #5                  // class org/kohsuke/args4j/spi/FieldSetter
       3: dup
       4: aload_0
       5: getfield      #2                  // Field bean:Ljava/lang/Object;
       8: aload_0
       9: getfield      #3                  // Field f:Ljava/lang/reflect/Field;
      12: invokespecial #6                  // Method "<init>":(Ljava/lang/Object;Ljava/lang/reflect/Field;)V
      15: areturn

  public java.lang.reflect.AnnotatedElement asAnnotatedElement();
    Code:
       0: aload_0
       1: getfield      #3                  // Field f:Ljava/lang/reflect/Field;
       4: areturn

  public void addValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field f:Ljava/lang/reflect/Field;
       4: aload_0
       5: getfield      #2                  // Field bean:Ljava/lang/Object;
       8: aload_1
       9: invokevirtual #7                  // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      12: goto          52
      15: astore_2
      16: aload_0
      17: getfield      #3                  // Field f:Ljava/lang/reflect/Field;
      20: iconst_1
      21: invokevirtual #9                  // Method java/lang/reflect/Field.setAccessible:(Z)V
      24: aload_0
      25: getfield      #3                  // Field f:Ljava/lang/reflect/Field;
      28: aload_0
      29: getfield      #2                  // Field bean:Ljava/lang/Object;
      32: aload_1
      33: invokevirtual #7                  // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      36: goto          52
      39: astore_3
      40: new           #10                 // class java/lang/IllegalAccessError
      43: dup
      44: aload_3
      45: invokevirtual #11                 // Method java/lang/IllegalAccessException.getMessage:()Ljava/lang/String;
      48: invokespecial #12                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
      51: athrow
      52: return
    Exception table:
       from    to  target type
           0    12    15   Class java/lang/IllegalAccessException
          24    36    39   Class java/lang/IllegalAccessException

  public java.lang.Object getValue();
    Code:
       0: aload_0
       1: getfield      #3                  // Field f:Ljava/lang/reflect/Field;
       4: aload_0
       5: getfield      #2                  // Field bean:Ljava/lang/Object;
       8: invokevirtual #13                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn
      12: astore_1
      13: aload_0
      14: getfield      #3                  // Field f:Ljava/lang/reflect/Field;
      17: iconst_1
      18: invokevirtual #9                  // Method java/lang/reflect/Field.setAccessible:(Z)V
      21: aload_0
      22: getfield      #3                  // Field f:Ljava/lang/reflect/Field;
      25: aload_0
      26: getfield      #2                  // Field bean:Ljava/lang/Object;
      29: invokevirtual #13                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      32: areturn
      33: astore_2
      34: new           #10                 // class java/lang/IllegalAccessError
      37: dup
      38: aload_2
      39: invokevirtual #11                 // Method java/lang/IllegalAccessException.getMessage:()Ljava/lang/String;
      42: invokespecial #12                 // Method java/lang/IllegalAccessError."<init>":(Ljava/lang/String;)V
      45: athrow
    Exception table:
       from    to  target type
           0    11    12   Class java/lang/IllegalAccessException
          21    32    33   Class java/lang/IllegalAccessException

  public java.util.List<java.lang.Object> getValueList();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #14                 // Method getValue:()Ljava/lang/Object;
       5: invokespecial #15                 // Method asList:(Ljava/lang/Object;)Ljava/util/List;
       8: areturn

  private java.util.List<java.lang.Object> asList(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_1
       5: invokestatic  #16                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
       8: areturn
       9: invokestatic  #17                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      12: areturn
}
