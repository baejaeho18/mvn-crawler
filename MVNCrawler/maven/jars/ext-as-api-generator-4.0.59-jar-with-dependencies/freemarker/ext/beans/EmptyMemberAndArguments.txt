Compiled from "EmptyMemberAndArguments.java"
final class freemarker.ext.beans.EmptyMemberAndArguments extends freemarker.ext.beans.MaybeEmptyMemberAndArguments {
  static final freemarker.ext.beans.EmptyMemberAndArguments WRONG_NUMBER_OF_ARGUMENTS;

  private final java.lang.Object errorDescription;

  private final boolean numberOfArgumentsWrong;

  private final java.lang.Object[] unwrappedArguments;

  private freemarker.ext.beans.EmptyMemberAndArguments(java.lang.Object, boolean, java.lang.Object[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method freemarker/ext/beans/MaybeEmptyMemberAndArguments."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field errorDescription:Ljava/lang/Object;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field numberOfArgumentsWrong:Z
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field unwrappedArguments:[Ljava/lang/Object;
      19: return

  static freemarker.ext.beans.EmptyMemberAndArguments noCompatibleOverload(int);
    Code:
       0: new           #5                  // class freemarker/ext/beans/EmptyMemberAndArguments
       3: dup
       4: iconst_3
       5: anewarray     #6                  // class java/lang/Object
       8: dup
       9: iconst_0
      10: ldc           #7                  // String No compatible overloaded variation was found; can\'t convert (unwrap) the
      12: aastore
      13: dup
      14: iconst_1
      15: new           #8                  // class freemarker/core/_DelayedOrdinal
      18: dup
      19: iload_0
      20: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: invokespecial #10                 // Method freemarker/core/_DelayedOrdinal."<init>":(Ljava/lang/Object;)V
      26: aastore
      27: dup
      28: iconst_2
      29: ldc           #11                 // String  argument to the desired Java type.
      31: aastore
      32: iconst_0
      33: aconst_null
      34: invokespecial #12                 // Method "<init>":(Ljava/lang/Object;Z[Ljava/lang/Object;)V
      37: areturn

  static freemarker.ext.beans.EmptyMemberAndArguments noCompatibleOverload(java.lang.Object[]);
    Code:
       0: new           #5                  // class freemarker/ext/beans/EmptyMemberAndArguments
       3: dup
       4: ldc           #13                 // String No compatible overloaded variation was found; declared parameter types and argument value types mismatch.
       6: iconst_0
       7: aload_0
       8: invokespecial #12                 // Method "<init>":(Ljava/lang/Object;Z[Ljava/lang/Object;)V
      11: areturn

  static freemarker.ext.beans.EmptyMemberAndArguments ambiguous(java.lang.Object[]);
    Code:
       0: new           #5                  // class freemarker/ext/beans/EmptyMemberAndArguments
       3: dup
       4: ldc           #14                 // String Multiple compatible overloaded variations were found with the same priority.
       6: iconst_0
       7: aload_0
       8: invokespecial #12                 // Method "<init>":(Ljava/lang/Object;Z[Ljava/lang/Object;)V
      11: areturn

  static freemarker.ext.beans.MaybeEmptyMemberAndArguments from(freemarker.ext.beans.EmptyCallableMemberDescriptor, java.lang.Object[]);
    Code:
       0: aload_0
       1: getstatic     #15                 // Field freemarker/ext/beans/EmptyCallableMemberDescriptor.NO_SUCH_METHOD:Lfreemarker/ext/beans/EmptyCallableMemberDescriptor;
       4: if_acmpne     12
       7: aload_1
       8: invokestatic  #16                 // Method noCompatibleOverload:([Ljava/lang/Object;)Lfreemarker/ext/beans/EmptyMemberAndArguments;
      11: areturn
      12: aload_0
      13: getstatic     #17                 // Field freemarker/ext/beans/EmptyCallableMemberDescriptor.AMBIGUOUS_METHOD:Lfreemarker/ext/beans/EmptyCallableMemberDescriptor;
      16: if_acmpne     24
      19: aload_1
      20: invokestatic  #18                 // Method ambiguous:([Ljava/lang/Object;)Lfreemarker/ext/beans/EmptyMemberAndArguments;
      23: areturn
      24: new           #19                 // class java/lang/IllegalArgumentException
      27: dup
      28: new           #20                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #22                 // String Unrecognized constant:
      37: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      50: athrow

  java.lang.Object getErrorDescription();
    Code:
       0: aload_0
       1: getfield      #2                  // Field errorDescription:Ljava/lang/Object;
       4: areturn

  java.lang.Object[] getUnwrappedArguments();
    Code:
       0: aload_0
       1: getfield      #4                  // Field unwrappedArguments:[Ljava/lang/Object;
       4: areturn

  public boolean isNumberOfArgumentsWrong();
    Code:
       0: aload_0
       1: getfield      #3                  // Field numberOfArgumentsWrong:Z
       4: ireturn

  static {};
    Code:
       0: new           #5                  // class freemarker/ext/beans/EmptyMemberAndArguments
       3: dup
       4: ldc           #27                 // String No compatible overloaded variation was found; wrong number of arguments.
       6: iconst_1
       7: aconst_null
       8: invokespecial #12                 // Method "<init>":(Ljava/lang/Object;Z[Ljava/lang/Object;)V
      11: putstatic     #28                 // Field WRONG_NUMBER_OF_ARGUMENTS:Lfreemarker/ext/beans/EmptyMemberAndArguments;
      14: return
}
