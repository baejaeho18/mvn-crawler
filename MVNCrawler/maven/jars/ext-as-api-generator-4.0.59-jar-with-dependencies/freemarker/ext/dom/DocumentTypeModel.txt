Compiled from "DocumentTypeModel.java"
class freemarker.ext.dom.DocumentTypeModel extends freemarker.ext.dom.NodeModel {
  public freemarker.ext.dom.DocumentTypeModel(org.w3c.dom.DocumentType);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method freemarker/ext/dom/NodeModel."<init>":(Lorg/w3c/dom/Node;)V
       5: return

  public java.lang.String getAsString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field node:Lorg/w3c/dom/Node;
       4: checkcast     #3                  // class org/w3c/dom/ProcessingInstruction
       7: invokeinterface #4,  1            // InterfaceMethod org/w3c/dom/ProcessingInstruction.getData:()Ljava/lang/String;
      12: areturn

  public freemarker.template.TemplateSequenceModel getChildren() throws freemarker.template.TemplateModelException;
    Code:
       0: new           #5                  // class freemarker/template/TemplateModelException
       3: dup
       4: ldc           #6                  // String entering the child nodes of a DTD node is not currently supported
       6: invokespecial #7                  // Method freemarker/template/TemplateModelException."<init>":(Ljava/lang/String;)V
       9: athrow

  public freemarker.template.TemplateModel get(java.lang.String) throws freemarker.template.TemplateModelException;
    Code:
       0: new           #5                  // class freemarker/template/TemplateModelException
       3: dup
       4: ldc           #8                  // String accessing properties of a DTD is not currently supported
       6: invokespecial #7                  // Method freemarker/template/TemplateModelException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String getNodeName();
    Code:
       0: new           #9                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #11                 // String @document_type$
       9: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field node:Lorg/w3c/dom/Node;
      16: checkcast     #13                 // class org/w3c/dom/DocumentType
      19: invokeinterface #14,  1           // InterfaceMethod org/w3c/dom/DocumentType.getNodeName:()Ljava/lang/String;
      24: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: areturn

  public boolean isEmpty();
    Code:
       0: iconst_1
       1: ireturn
}
