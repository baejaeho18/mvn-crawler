Compiled from "NumberUtil.java"
public class freemarker.template.utility.NumberUtil {
  private static final java.math.BigDecimal BIG_DECIMAL_INT_MIN;

  private static final java.math.BigDecimal BIG_DECIMAL_INT_MAX;

  private static final java.math.BigInteger BIG_INTEGER_INT_MIN;

  private static final java.math.BigInteger BIG_INTEGER_INT_MAX;

  private freemarker.template.utility.NumberUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isInfinite(java.lang.Number);
    Code:
       0: aload_0
       1: instanceof    #2                  // class java/lang/Double
       4: ifeq          15
       7: aload_0
       8: checkcast     #2                  // class java/lang/Double
      11: invokevirtual #3                  // Method java/lang/Double.isInfinite:()Z
      14: ireturn
      15: aload_0
      16: instanceof    #4                  // class java/lang/Float
      19: ifeq          30
      22: aload_0
      23: checkcast     #4                  // class java/lang/Float
      26: invokevirtual #5                  // Method java/lang/Float.isInfinite:()Z
      29: ireturn
      30: aload_0
      31: invokestatic  #6                  // Method isNonFPNumberOfSupportedClass:(Ljava/lang/Number;)Z
      34: ifeq          39
      37: iconst_0
      38: ireturn
      39: new           #7                  // class freemarker/template/utility/UnsupportedNumberClassException
      42: dup
      43: aload_0
      44: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      47: invokespecial #9                  // Method freemarker/template/utility/UnsupportedNumberClassException."<init>":(Ljava/lang/Class;)V
      50: athrow

  public static boolean isNaN(java.lang.Number);
    Code:
       0: aload_0
       1: instanceof    #2                  // class java/lang/Double
       4: ifeq          15
       7: aload_0
       8: checkcast     #2                  // class java/lang/Double
      11: invokevirtual #10                 // Method java/lang/Double.isNaN:()Z
      14: ireturn
      15: aload_0
      16: instanceof    #4                  // class java/lang/Float
      19: ifeq          30
      22: aload_0
      23: checkcast     #4                  // class java/lang/Float
      26: invokevirtual #11                 // Method java/lang/Float.isNaN:()Z
      29: ireturn
      30: aload_0
      31: invokestatic  #6                  // Method isNonFPNumberOfSupportedClass:(Ljava/lang/Number;)Z
      34: ifeq          39
      37: iconst_0
      38: ireturn
      39: new           #7                  // class freemarker/template/utility/UnsupportedNumberClassException
      42: dup
      43: aload_0
      44: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      47: invokespecial #9                  // Method freemarker/template/utility/UnsupportedNumberClassException."<init>":(Ljava/lang/Class;)V
      50: athrow

  public static int getSignum(java.lang.Number) throws java.lang.ArithmeticException;
    Code:
       0: aload_0
       1: instanceof    #12                 // class java/lang/Integer
       4: ifeq          33
       7: aload_0
       8: checkcast     #12                 // class java/lang/Integer
      11: invokevirtual #13                 // Method java/lang/Integer.intValue:()I
      14: istore_1
      15: iload_1
      16: ifle          23
      19: iconst_1
      20: goto          32
      23: iload_1
      24: ifne          31
      27: iconst_0
      28: goto          32
      31: iconst_m1
      32: ireturn
      33: aload_0
      34: instanceof    #14                 // class java/math/BigDecimal
      37: ifeq          50
      40: aload_0
      41: checkcast     #14                 // class java/math/BigDecimal
      44: astore_1
      45: aload_1
      46: invokevirtual #15                 // Method java/math/BigDecimal.signum:()I
      49: ireturn
      50: aload_0
      51: instanceof    #2                  // class java/lang/Double
      54: ifeq          121
      57: aload_0
      58: checkcast     #2                  // class java/lang/Double
      61: invokevirtual #16                 // Method java/lang/Double.doubleValue:()D
      64: dstore_1
      65: dload_1
      66: dconst_0
      67: dcmpl
      68: ifle          73
      71: iconst_1
      72: ireturn
      73: dload_1
      74: dconst_0
      75: dcmpl
      76: ifne          81
      79: iconst_0
      80: ireturn
      81: dload_1
      82: dconst_0
      83: dcmpg
      84: ifge          89
      87: iconst_m1
      88: ireturn
      89: new           #17                 // class java/lang/ArithmeticException
      92: dup
      93: new           #18                 // class java/lang/StringBuilder
      96: dup
      97: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
     100: ldc           #20                 // String The signum of
     102: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: dload_1
     106: invokevirtual #22                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
     109: ldc           #23                 // String  is not defined.
     111: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     117: invokespecial #25                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
     120: athrow
     121: aload_0
     122: instanceof    #4                  // class java/lang/Float
     125: ifeq          192
     128: aload_0
     129: checkcast     #4                  // class java/lang/Float
     132: invokevirtual #26                 // Method java/lang/Float.floatValue:()F
     135: fstore_1
     136: fload_1
     137: fconst_0
     138: fcmpl
     139: ifle          144
     142: iconst_1
     143: ireturn
     144: fload_1
     145: fconst_0
     146: fcmpl
     147: ifne          152
     150: iconst_0
     151: ireturn
     152: fload_1
     153: fconst_0
     154: fcmpg
     155: ifge          160
     158: iconst_m1
     159: ireturn
     160: new           #17                 // class java/lang/ArithmeticException
     163: dup
     164: new           #18                 // class java/lang/StringBuilder
     167: dup
     168: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
     171: ldc           #20                 // String The signum of
     173: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: fload_1
     177: invokevirtual #27                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
     180: ldc           #23                 // String  is not defined.
     182: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     188: invokespecial #25                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
     191: athrow
     192: aload_0
     193: instanceof    #28                 // class java/lang/Long
     196: ifeq          229
     199: aload_0
     200: checkcast     #28                 // class java/lang/Long
     203: invokevirtual #29                 // Method java/lang/Long.longValue:()J
     206: lstore_1
     207: lload_1
     208: lconst_0
     209: lcmp
     210: ifle          217
     213: iconst_1
     214: goto          228
     217: lload_1
     218: lconst_0
     219: lcmp
     220: ifne          227
     223: iconst_0
     224: goto          228
     227: iconst_m1
     228: ireturn
     229: aload_0
     230: instanceof    #30                 // class java/lang/Short
     233: ifeq          262
     236: aload_0
     237: checkcast     #30                 // class java/lang/Short
     240: invokevirtual #31                 // Method java/lang/Short.shortValue:()S
     243: istore_1
     244: iload_1
     245: ifle          252
     248: iconst_1
     249: goto          261
     252: iload_1
     253: ifne          260
     256: iconst_0
     257: goto          261
     260: iconst_m1
     261: ireturn
     262: aload_0
     263: instanceof    #32                 // class java/lang/Byte
     266: ifeq          295
     269: aload_0
     270: checkcast     #32                 // class java/lang/Byte
     273: invokevirtual #33                 // Method java/lang/Byte.byteValue:()B
     276: istore_1
     277: iload_1
     278: ifle          285
     281: iconst_1
     282: goto          294
     285: iload_1
     286: ifne          293
     289: iconst_0
     290: goto          294
     293: iconst_m1
     294: ireturn
     295: aload_0
     296: instanceof    #34                 // class java/math/BigInteger
     299: ifeq          312
     302: aload_0
     303: checkcast     #34                 // class java/math/BigInteger
     306: astore_1
     307: aload_1
     308: invokevirtual #35                 // Method java/math/BigInteger.signum:()I
     311: ireturn
     312: new           #7                  // class freemarker/template/utility/UnsupportedNumberClassException
     315: dup
     316: aload_0
     317: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
     320: invokespecial #9                  // Method freemarker/template/utility/UnsupportedNumberClassException."<init>":(Ljava/lang/Class;)V
     323: athrow

  public static boolean isIntegerBigDecimal(java.math.BigDecimal);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method java/math/BigDecimal.scale:()I
       4: ifle          20
       7: aload_0
       8: iconst_0
       9: iconst_1
      10: invokevirtual #37                 // Method java/math/BigDecimal.setScale:(II)Ljava/math/BigDecimal;
      13: aload_0
      14: invokevirtual #38                 // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private static boolean isNonFPNumberOfSupportedClass(java.lang.Number);
    Code:
       0: aload_0
       1: instanceof    #12                 // class java/lang/Integer
       4: ifne          42
       7: aload_0
       8: instanceof    #14                 // class java/math/BigDecimal
      11: ifne          42
      14: aload_0
      15: instanceof    #28                 // class java/lang/Long
      18: ifne          42
      21: aload_0
      22: instanceof    #30                 // class java/lang/Short
      25: ifne          42
      28: aload_0
      29: instanceof    #32                 // class java/lang/Byte
      32: ifne          42
      35: aload_0
      36: instanceof    #34                 // class java/math/BigInteger
      39: ifeq          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  public static int toIntExact(java.lang.Number);
    Code:
       0: aload_0
       1: instanceof    #12                 // class java/lang/Integer
       4: ifne          21
       7: aload_0
       8: instanceof    #30                 // class java/lang/Short
      11: ifne          21
      14: aload_0
      15: instanceof    #32                 // class java/lang/Byte
      18: ifeq          26
      21: aload_0
      22: invokevirtual #39                 // Method java/lang/Number.intValue:()I
      25: ireturn
      26: aload_0
      27: instanceof    #28                 // class java/lang/Long
      30: ifeq          57
      33: aload_0
      34: invokevirtual #40                 // Method java/lang/Number.longValue:()J
      37: lstore_1
      38: lload_1
      39: l2i
      40: istore_3
      41: lload_1
      42: iload_3
      43: i2l
      44: lcmp
      45: ifeq          55
      48: aload_0
      49: ldc           #12                 // class java/lang/Integer
      51: invokestatic  #41                 // Method newLossyConverionException:(Ljava/lang/Number;Ljava/lang/Class;)Ljava/lang/ArithmeticException;
      54: athrow
      55: iload_3
      56: ireturn
      57: aload_0
      58: instanceof    #2                  // class java/lang/Double
      61: ifne          71
      64: aload_0
      65: instanceof    #4                  // class java/lang/Float
      68: ifeq          110
      71: aload_0
      72: invokevirtual #42                 // Method java/lang/Number.doubleValue:()D
      75: dstore_1
      76: dload_1
      77: dconst_1
      78: drem
      79: dconst_0
      80: dcmpl
      81: ifne          100
      84: dload_1
      85: ldc2_w        #43                 // double -2.147483648E9d
      88: dcmpg
      89: iflt          100
      92: dload_1
      93: ldc2_w        #45                 // double 2.147483647E9d
      96: dcmpl
      97: ifle          107
     100: aload_0
     101: ldc           #12                 // class java/lang/Integer
     103: invokestatic  #41                 // Method newLossyConverionException:(Ljava/lang/Number;Ljava/lang/Class;)Ljava/lang/ArithmeticException;
     106: athrow
     107: dload_1
     108: d2i
     109: ireturn
     110: aload_0
     111: instanceof    #14                 // class java/math/BigDecimal
     114: ifeq          161
     117: aload_0
     118: checkcast     #14                 // class java/math/BigDecimal
     121: astore_1
     122: aload_1
     123: invokestatic  #47                 // Method isIntegerBigDecimal:(Ljava/math/BigDecimal;)Z
     126: ifeq          149
     129: aload_1
     130: getstatic     #48                 // Field BIG_DECIMAL_INT_MAX:Ljava/math/BigDecimal;
     133: invokevirtual #38                 // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
     136: ifgt          149
     139: aload_1
     140: getstatic     #49                 // Field BIG_DECIMAL_INT_MIN:Ljava/math/BigDecimal;
     143: invokevirtual #38                 // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
     146: ifge          156
     149: aload_0
     150: ldc           #12                 // class java/lang/Integer
     152: invokestatic  #41                 // Method newLossyConverionException:(Ljava/lang/Number;Ljava/lang/Class;)Ljava/lang/ArithmeticException;
     155: athrow
     156: aload_1
     157: invokevirtual #50                 // Method java/math/BigDecimal.intValue:()I
     160: ireturn
     161: aload_0
     162: instanceof    #34                 // class java/math/BigInteger
     165: ifeq          205
     168: aload_0
     169: checkcast     #34                 // class java/math/BigInteger
     172: astore_1
     173: aload_1
     174: getstatic     #51                 // Field BIG_INTEGER_INT_MAX:Ljava/math/BigInteger;
     177: invokevirtual #52                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     180: ifgt          193
     183: aload_1
     184: getstatic     #53                 // Field BIG_INTEGER_INT_MIN:Ljava/math/BigInteger;
     187: invokevirtual #52                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     190: ifge          200
     193: aload_0
     194: ldc           #12                 // class java/lang/Integer
     196: invokestatic  #41                 // Method newLossyConverionException:(Ljava/lang/Number;Ljava/lang/Class;)Ljava/lang/ArithmeticException;
     199: athrow
     200: aload_1
     201: invokevirtual #54                 // Method java/math/BigInteger.intValue:()I
     204: ireturn
     205: new           #7                  // class freemarker/template/utility/UnsupportedNumberClassException
     208: dup
     209: aload_0
     210: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
     213: invokespecial #9                  // Method freemarker/template/utility/UnsupportedNumberClassException."<init>":(Ljava/lang/Class;)V
     216: athrow

  private static java.lang.ArithmeticException newLossyConverionException(java.lang.Number, java.lang.Class);
    Code:
       0: new           #17                 // class java/lang/ArithmeticException
       3: dup
       4: new           #18                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #55                 // String Can\'t convert
      13: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: ldc           #57                 // String  to type
      22: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokestatic  #58                 // Method freemarker/template/utility/ClassUtil.getShortClassName:(Ljava/lang/Class;)Ljava/lang/String;
      29: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #59                 // String  without loss.
      34: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokespecial #25                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      43: areturn

  static {};
    Code:
       0: ldc2_w        #60                 // long -2147483648l
       3: invokestatic  #62                 // Method java/math/BigDecimal.valueOf:(J)Ljava/math/BigDecimal;
       6: putstatic     #49                 // Field BIG_DECIMAL_INT_MIN:Ljava/math/BigDecimal;
       9: ldc2_w        #63                 // long 2147483647l
      12: invokestatic  #62                 // Method java/math/BigDecimal.valueOf:(J)Ljava/math/BigDecimal;
      15: putstatic     #48                 // Field BIG_DECIMAL_INT_MAX:Ljava/math/BigDecimal;
      18: getstatic     #49                 // Field BIG_DECIMAL_INT_MIN:Ljava/math/BigDecimal;
      21: invokevirtual #65                 // Method java/math/BigDecimal.toBigInteger:()Ljava/math/BigInteger;
      24: putstatic     #53                 // Field BIG_INTEGER_INT_MIN:Ljava/math/BigInteger;
      27: getstatic     #48                 // Field BIG_DECIMAL_INT_MAX:Ljava/math/BigDecimal;
      30: invokevirtual #65                 // Method java/math/BigDecimal.toBigInteger:()Ljava/math/BigInteger;
      33: putstatic     #51                 // Field BIG_INTEGER_INT_MAX:Ljava/math/BigInteger;
      36: return
}
