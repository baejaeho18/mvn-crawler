Compiled from "CaptureOutput.java"
class freemarker.template.utility.CaptureOutput$1 extends java.io.Writer {
  final java.lang.StringBuilder val$buf;

  final java.io.Writer val$out;

  final boolean val$localVar;

  final freemarker.core.Environment val$env;

  final java.lang.String val$varName;

  final boolean val$globalVar;

  final freemarker.template.TemplateModel val$nsModel;

  final freemarker.template.utility.CaptureOutput this$0;

  freemarker.template.utility.CaptureOutput$1(freemarker.template.utility.CaptureOutput, java.lang.StringBuilder, java.io.Writer, boolean, freemarker.core.Environment, java.lang.String, boolean, freemarker.template.TemplateModel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lfreemarker/template/utility/CaptureOutput;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$buf:Ljava/lang/StringBuilder;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$out:Ljava/io/Writer;
      15: aload_0
      16: iload         4
      18: putfield      #4                  // Field val$localVar:Z
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field val$env:Lfreemarker/core/Environment;
      27: aload_0
      28: aload         6
      30: putfield      #6                  // Field val$varName:Ljava/lang/String;
      33: aload_0
      34: iload         7
      36: putfield      #7                  // Field val$globalVar:Z
      39: aload_0
      40: aload         8
      42: putfield      #8                  // Field val$nsModel:Lfreemarker/template/TemplateModel;
      45: aload_0
      46: invokespecial #9                  // Method java/io/Writer."<init>":()V
      49: return

  public void write(char[], int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$buf:Ljava/lang/StringBuilder;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #10                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
      10: pop
      11: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field val$out:Ljava/io/Writer;
       4: invokevirtual #11                 // Method java/io/Writer.flush:()V
       7: return

  public void close() throws java.io.IOException;
    Code:
       0: new           #12                 // class freemarker/template/SimpleScalar
       3: dup
       4: aload_0
       5: getfield      #2                  // Field val$buf:Ljava/lang/StringBuilder;
       8: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      11: invokespecial #14                 // Method freemarker/template/SimpleScalar."<init>":(Ljava/lang/String;)V
      14: astore_1
      15: aload_0
      16: getfield      #4                  // Field val$localVar:Z
      19: ifeq          37
      22: aload_0
      23: getfield      #5                  // Field val$env:Lfreemarker/core/Environment;
      26: aload_0
      27: getfield      #6                  // Field val$varName:Ljava/lang/String;
      30: aload_1
      31: invokevirtual #15                 // Method freemarker/core/Environment.setLocalVariable:(Ljava/lang/String;Lfreemarker/template/TemplateModel;)V
      34: goto          96
      37: aload_0
      38: getfield      #7                  // Field val$globalVar:Z
      41: ifeq          59
      44: aload_0
      45: getfield      #5                  // Field val$env:Lfreemarker/core/Environment;
      48: aload_0
      49: getfield      #6                  // Field val$varName:Ljava/lang/String;
      52: aload_1
      53: invokevirtual #16                 // Method freemarker/core/Environment.setGlobalVariable:(Ljava/lang/String;Lfreemarker/template/TemplateModel;)V
      56: goto          96
      59: aload_0
      60: getfield      #8                  // Field val$nsModel:Lfreemarker/template/TemplateModel;
      63: ifnonnull     81
      66: aload_0
      67: getfield      #5                  // Field val$env:Lfreemarker/core/Environment;
      70: aload_0
      71: getfield      #6                  // Field val$varName:Ljava/lang/String;
      74: aload_1
      75: invokevirtual #17                 // Method freemarker/core/Environment.setVariable:(Ljava/lang/String;Lfreemarker/template/TemplateModel;)V
      78: goto          96
      81: aload_0
      82: getfield      #8                  // Field val$nsModel:Lfreemarker/template/TemplateModel;
      85: checkcast     #18                 // class freemarker/core/Environment$Namespace
      88: aload_0
      89: getfield      #6                  // Field val$varName:Ljava/lang/String;
      92: aload_1
      93: invokevirtual #19                 // Method freemarker/core/Environment$Namespace.put:(Ljava/lang/String;Ljava/lang/Object;)V
      96: goto          142
      99: astore_2
     100: new           #21                 // class java/io/IOException
     103: dup
     104: new           #22                 // class java/lang/StringBuilder
     107: dup
     108: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     111: ldc           #24                 // String Could not set variable
     113: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: aload_0
     117: getfield      #6                  // Field val$varName:Ljava/lang/String;
     120: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: ldc           #26                 // String :
     125: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: aload_2
     129: invokevirtual #27                 // Method java/lang/IllegalStateException.getMessage:()Ljava/lang/String;
     132: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     138: invokespecial #28                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     141: athrow
     142: return
    Exception table:
       from    to  target type
          15    96    99   Class java/lang/IllegalStateException
}
