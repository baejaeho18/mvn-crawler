Compiled from "TemplateException.java"
public class freemarker.template.TemplateException extends java.lang.Exception {
  private static final java.lang.String FTL_INSTRUCTION_STACK_TRACE_TITLE;

  private transient freemarker.core._ErrorDescriptionBuilder descriptionBuilder;

  private final transient freemarker.core.Environment env;

  private final transient freemarker.core.Expression blamedExpression;

  private transient freemarker.core.TemplateElement[] ftlInstructionStackSnapshot;

  private java.lang.String renderedFtlInstructionStackSnapshot;

  private java.lang.String renderedFtlInstructionStackSnapshotTop;

  private java.lang.String description;

  private transient java.lang.String messageWithoutStackTop;

  private transient java.lang.String message;

  private boolean blamedExpressionStringCalculated;

  private java.lang.String blamedExpressionString;

  private boolean positionsCalculated;

  private java.lang.String templateName;

  private java.lang.String templateSourceName;

  private java.lang.Integer lineNumber;

  private java.lang.Integer columnNumber;

  private java.lang.Integer endLineNumber;

  private java.lang.Integer endColumnNumber;

  private transient java.lang.Object lock;

  private transient java.lang.ThreadLocal messageWasAlreadyPrintedForThisTrace;

  public freemarker.template.TemplateException(freemarker.core.Environment);
    Code:
       0: aload_0
       1: aconst_null
       2: checkcast     #1                  // class java/lang/String
       5: aconst_null
       6: aload_1
       7: invokespecial #2                  // Method "<init>":(Ljava/lang/String;Ljava/lang/Exception;Lfreemarker/core/Environment;)V
      10: return

  public freemarker.template.TemplateException(java.lang.String, freemarker.core.Environment);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokespecial #2                  // Method "<init>":(Ljava/lang/String;Ljava/lang/Exception;Lfreemarker/core/Environment;)V
       7: return

  public freemarker.template.TemplateException(java.lang.Exception, freemarker.core.Environment);
    Code:
       0: aload_0
       1: aconst_null
       2: checkcast     #1                  // class java/lang/String
       5: aload_1
       6: aload_2
       7: invokespecial #2                  // Method "<init>":(Ljava/lang/String;Ljava/lang/Exception;Lfreemarker/core/Environment;)V
      10: return

  public freemarker.template.TemplateException(java.lang.Throwable, freemarker.core.Environment);
    Code:
       0: aload_0
       1: aconst_null
       2: checkcast     #1                  // class java/lang/String
       5: aload_1
       6: aload_2
       7: invokespecial #3                  // Method "<init>":(Ljava/lang/String;Ljava/lang/Throwable;Lfreemarker/core/Environment;)V
      10: return

  public freemarker.template.TemplateException(java.lang.String, java.lang.Exception, freemarker.core.Environment);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: aconst_null
       6: invokespecial #4                  // Method "<init>":(Ljava/lang/String;Ljava/lang/Throwable;Lfreemarker/core/Environment;Lfreemarker/core/Expression;Lfreemarker/core/_ErrorDescriptionBuilder;)V
       9: return

  public freemarker.template.TemplateException(java.lang.String, java.lang.Throwable, freemarker.core.Environment);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: aconst_null
       6: invokespecial #4                  // Method "<init>":(Ljava/lang/String;Ljava/lang/Throwable;Lfreemarker/core/Environment;Lfreemarker/core/Expression;Lfreemarker/core/_ErrorDescriptionBuilder;)V
       9: return

  protected freemarker.template.TemplateException(java.lang.Throwable, freemarker.core.Environment, freemarker.core.Expression, freemarker.core._ErrorDescriptionBuilder);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokespecial #4                  // Method "<init>":(Ljava/lang/String;Ljava/lang/Throwable;Lfreemarker/core/Environment;Lfreemarker/core/Expression;Lfreemarker/core/_ErrorDescriptionBuilder;)V
      10: return

  private freemarker.template.TemplateException(java.lang.String, java.lang.Throwable, freemarker.core.Environment, freemarker.core.Expression, freemarker.core._ErrorDescriptionBuilder);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #5                  // Method java/lang/Exception."<init>":(Ljava/lang/Throwable;)V
       5: aload_0
       6: new           #6                  // class java/lang/Object
       9: dup
      10: invokespecial #7                  // Method java/lang/Object."<init>":()V
      13: putfield      #8                  // Field lock:Ljava/lang/Object;
      16: aload_3
      17: ifnonnull     24
      20: invokestatic  #9                  // Method freemarker/core/Environment.getCurrentEnvironment:()Lfreemarker/core/Environment;
      23: astore_3
      24: aload_0
      25: aload_3
      26: putfield      #10                 // Field env:Lfreemarker/core/Environment;
      29: aload_0
      30: aload         4
      32: putfield      #11                 // Field blamedExpression:Lfreemarker/core/Expression;
      35: aload_0
      36: aload         5
      38: putfield      #12                 // Field descriptionBuilder:Lfreemarker/core/_ErrorDescriptionBuilder;
      41: aload_0
      42: aload_1
      43: putfield      #13                 // Field description:Ljava/lang/String;
      46: aload_3
      47: ifnull        58
      50: aload_0
      51: aload_3
      52: invokestatic  #14                 // Method freemarker/core/_CoreAPI.getInstructionStackSnapshot:(Lfreemarker/core/Environment;)[Lfreemarker/core/TemplateElement;
      55: putfield      #15                 // Field ftlInstructionStackSnapshot:[Lfreemarker/core/TemplateElement;
      58: return

  private void renderMessages();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method getDescription:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnull        24
       9: aload_1
      10: invokevirtual #17                 // Method java/lang/String.length:()I
      13: ifeq          24
      16: aload_0
      17: aload_1
      18: putfield      #18                 // Field messageWithoutStackTop:Ljava/lang/String;
      21: goto          87
      24: aload_0
      25: invokevirtual #19                 // Method getCause:()Ljava/lang/Throwable;
      28: ifnull        81
      31: aload_0
      32: new           #20                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #22                 // String No error description was specified for this error; low-level message:
      41: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: invokevirtual #19                 // Method getCause:()Ljava/lang/Throwable;
      48: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      51: invokevirtual #25                 // Method java/lang/Class.getName:()Ljava/lang/String;
      54: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc           #26                 // String :
      59: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: invokevirtual #19                 // Method getCause:()Ljava/lang/Throwable;
      66: invokevirtual #27                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      69: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: putfield      #18                 // Field messageWithoutStackTop:Ljava/lang/String;
      78: goto          87
      81: aload_0
      82: ldc           #29                 // String [No error description was available.]
      84: putfield      #18                 // Field messageWithoutStackTop:Ljava/lang/String;
      87: aload_0
      88: invokespecial #30                 // Method getFTLInstructionStackTopFew:()Ljava/lang/String;
      91: astore_2
      92: aload_2
      93: ifnull        173
      96: aload_0
      97: new           #20                 // class java/lang/StringBuilder
     100: dup
     101: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
     104: aload_0
     105: getfield      #18                 // Field messageWithoutStackTop:Ljava/lang/String;
     108: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: ldc           #31                 // String \n\n
     113: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: ldc           #33                 // String ----
     118: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: ldc           #34                 // String \n
     123: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: ldc           #36                 // String FTL stack trace (\"~\" means nesting-related):
     128: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: ldc           #34                 // String \n
     133: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: aload_2
     137: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: ldc           #33                 // String ----
     142: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: putfield      #37                 // Field message:Ljava/lang/String;
     151: aload_0
     152: aload_0
     153: getfield      #37                 // Field message:Ljava/lang/String;
     156: iconst_0
     157: aload_0
     158: getfield      #18                 // Field messageWithoutStackTop:Ljava/lang/String;
     161: invokevirtual #17                 // Method java/lang/String.length:()I
     164: invokevirtual #38                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     167: putfield      #18                 // Field messageWithoutStackTop:Ljava/lang/String;
     170: goto          181
     173: aload_0
     174: aload_0
     175: getfield      #18                 // Field messageWithoutStackTop:Ljava/lang/String;
     178: putfield      #37                 // Field message:Ljava/lang/String;
     181: return

  private void calculatePosition();
    Code:
       0: aload_0
       1: getfield      #8                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #39                 // Field positionsCalculated:Z
      11: ifne          155
      14: aload_0
      15: getfield      #11                 // Field blamedExpression:Lfreemarker/core/Expression;
      18: ifnull        28
      21: aload_0
      22: getfield      #11                 // Field blamedExpression:Lfreemarker/core/Expression;
      25: goto          53
      28: aload_0
      29: getfield      #15                 // Field ftlInstructionStackSnapshot:[Lfreemarker/core/TemplateElement;
      32: ifnull        52
      35: aload_0
      36: getfield      #15                 // Field ftlInstructionStackSnapshot:[Lfreemarker/core/TemplateElement;
      39: arraylength
      40: ifeq          52
      43: aload_0
      44: getfield      #15                 // Field ftlInstructionStackSnapshot:[Lfreemarker/core/TemplateElement;
      47: iconst_0
      48: aaload
      49: goto          53
      52: aconst_null
      53: astore_2
      54: aload_2
      55: ifnull        146
      58: aload_2
      59: invokevirtual #40                 // Method freemarker/core/TemplateObject.getBeginLine:()I
      62: ifle          146
      65: aload_2
      66: invokevirtual #41                 // Method freemarker/core/TemplateObject.getTemplate:()Lfreemarker/template/Template;
      69: astore_3
      70: aload_0
      71: aload_3
      72: ifnull        82
      75: aload_3
      76: invokevirtual #42                 // Method freemarker/template/Template.getName:()Ljava/lang/String;
      79: goto          83
      82: aconst_null
      83: putfield      #43                 // Field templateName:Ljava/lang/String;
      86: aload_0
      87: aload_3
      88: ifnull        98
      91: aload_3
      92: invokevirtual #44                 // Method freemarker/template/Template.getSourceName:()Ljava/lang/String;
      95: goto          99
      98: aconst_null
      99: putfield      #45                 // Field templateSourceName:Ljava/lang/String;
     102: aload_0
     103: aload_2
     104: invokevirtual #40                 // Method freemarker/core/TemplateObject.getBeginLine:()I
     107: invokestatic  #46                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     110: putfield      #47                 // Field lineNumber:Ljava/lang/Integer;
     113: aload_0
     114: aload_2
     115: invokevirtual #48                 // Method freemarker/core/TemplateObject.getBeginColumn:()I
     118: invokestatic  #46                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     121: putfield      #49                 // Field columnNumber:Ljava/lang/Integer;
     124: aload_0
     125: aload_2
     126: invokevirtual #50                 // Method freemarker/core/TemplateObject.getEndLine:()I
     129: invokestatic  #46                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     132: putfield      #51                 // Field endLineNumber:Ljava/lang/Integer;
     135: aload_0
     136: aload_2
     137: invokevirtual #52                 // Method freemarker/core/TemplateObject.getEndColumn:()I
     140: invokestatic  #46                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     143: putfield      #53                 // Field endColumnNumber:Ljava/lang/Integer;
     146: aload_0
     147: iconst_1
     148: putfield      #39                 // Field positionsCalculated:Z
     151: aload_0
     152: invokespecial #54                 // Method deleteFTLInstructionStackSnapshotIfNotNeeded:()V
     155: aload_1
     156: monitorexit
     157: goto          167
     160: astore        4
     162: aload_1
     163: monitorexit
     164: aload         4
     166: athrow
     167: return
    Exception table:
       from    to  target type
           7   157   160   any
         160   164   160   any

  public java.lang.Exception getCauseException();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method getCause:()Ljava/lang/Throwable;
       4: instanceof    #55                 // class java/lang/Exception
       7: ifeq          20
      10: aload_0
      11: invokevirtual #19                 // Method getCause:()Ljava/lang/Throwable;
      14: checkcast     #55                 // class java/lang/Exception
      17: goto          53
      20: new           #55                 // class java/lang/Exception
      23: dup
      24: new           #20                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #56                 // String Wrapped to Exception:
      33: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #19                 // Method getCause:()Ljava/lang/Throwable;
      40: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: aload_0
      47: invokevirtual #19                 // Method getCause:()Ljava/lang/Throwable;
      50: invokespecial #58                 // Method java/lang/Exception."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      53: areturn

  public java.lang.String getFTLInstructionStack();
    Code:
       0: aload_0
       1: getfield      #8                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #15                 // Field ftlInstructionStackSnapshot:[Lfreemarker/core/TemplateElement;
      11: ifnonnull     21
      14: aload_0
      15: getfield      #59                 // Field renderedFtlInstructionStackSnapshot:Ljava/lang/String;
      18: ifnull        84
      21: aload_0
      22: getfield      #59                 // Field renderedFtlInstructionStackSnapshot:Ljava/lang/String;
      25: ifnonnull     77
      28: new           #60                 // class java/io/StringWriter
      31: dup
      32: invokespecial #61                 // Method java/io/StringWriter."<init>":()V
      35: astore_2
      36: new           #62                 // class java/io/PrintWriter
      39: dup
      40: aload_2
      41: invokespecial #63                 // Method java/io/PrintWriter."<init>":(Ljava/io/Writer;)V
      44: astore_3
      45: aload_0
      46: getfield      #15                 // Field ftlInstructionStackSnapshot:[Lfreemarker/core/TemplateElement;
      49: iconst_0
      50: aload_3
      51: invokestatic  #64                 // Method freemarker/core/_CoreAPI.outputInstructionStack:([Lfreemarker/core/TemplateElement;ZLjava/io/Writer;)V
      54: aload_3
      55: invokevirtual #65                 // Method java/io/PrintWriter.close:()V
      58: aload_0
      59: getfield      #59                 // Field renderedFtlInstructionStackSnapshot:Ljava/lang/String;
      62: ifnonnull     77
      65: aload_0
      66: aload_2
      67: invokevirtual #66                 // Method java/io/StringWriter.toString:()Ljava/lang/String;
      70: putfield      #59                 // Field renderedFtlInstructionStackSnapshot:Ljava/lang/String;
      73: aload_0
      74: invokespecial #54                 // Method deleteFTLInstructionStackSnapshotIfNotNeeded:()V
      77: aload_0
      78: getfield      #59                 // Field renderedFtlInstructionStackSnapshot:Ljava/lang/String;
      81: aload_1
      82: monitorexit
      83: areturn
      84: aconst_null
      85: aload_1
      86: monitorexit
      87: areturn
      88: astore        4
      90: aload_1
      91: monitorexit
      92: aload         4
      94: athrow
    Exception table:
       from    to  target type
           7    83    88   any
          84    87    88   any
          88    92    88   any

  private java.lang.String getFTLInstructionStackTopFew();
    Code:
       0: aload_0
       1: getfield      #8                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #15                 // Field ftlInstructionStackSnapshot:[Lfreemarker/core/TemplateElement;
      11: ifnonnull     21
      14: aload_0
      15: getfield      #67                 // Field renderedFtlInstructionStackSnapshotTop:Ljava/lang/String;
      18: ifnull        106
      21: aload_0
      22: getfield      #67                 // Field renderedFtlInstructionStackSnapshotTop:Ljava/lang/String;
      25: ifnonnull     85
      28: aload_0
      29: getfield      #15                 // Field ftlInstructionStackSnapshot:[Lfreemarker/core/TemplateElement;
      32: arraylength
      33: istore_2
      34: iload_2
      35: ifne          44
      38: ldc           #68                 // String
      40: astore_3
      41: goto          69
      44: new           #60                 // class java/io/StringWriter
      47: dup
      48: invokespecial #61                 // Method java/io/StringWriter."<init>":()V
      51: astore        4
      53: aload_0
      54: getfield      #15                 // Field ftlInstructionStackSnapshot:[Lfreemarker/core/TemplateElement;
      57: iconst_1
      58: aload         4
      60: invokestatic  #64                 // Method freemarker/core/_CoreAPI.outputInstructionStack:([Lfreemarker/core/TemplateElement;ZLjava/io/Writer;)V
      63: aload         4
      65: invokevirtual #66                 // Method java/io/StringWriter.toString:()Ljava/lang/String;
      68: astore_3
      69: aload_0
      70: getfield      #67                 // Field renderedFtlInstructionStackSnapshotTop:Ljava/lang/String;
      73: ifnonnull     85
      76: aload_0
      77: aload_3
      78: putfield      #67                 // Field renderedFtlInstructionStackSnapshotTop:Ljava/lang/String;
      81: aload_0
      82: invokespecial #54                 // Method deleteFTLInstructionStackSnapshotIfNotNeeded:()V
      85: aload_0
      86: getfield      #67                 // Field renderedFtlInstructionStackSnapshotTop:Ljava/lang/String;
      89: invokevirtual #17                 // Method java/lang/String.length:()I
      92: ifeq          102
      95: aload_0
      96: getfield      #67                 // Field renderedFtlInstructionStackSnapshotTop:Ljava/lang/String;
      99: goto          103
     102: aconst_null
     103: aload_1
     104: monitorexit
     105: areturn
     106: aconst_null
     107: aload_1
     108: monitorexit
     109: areturn
     110: astore        5
     112: aload_1
     113: monitorexit
     114: aload         5
     116: athrow
    Exception table:
       from    to  target type
           7   105   110   any
         106   109   110   any
         110   114   110   any

  private void deleteFTLInstructionStackSnapshotIfNotNeeded();
    Code:
       0: aload_0
       1: getfield      #59                 // Field renderedFtlInstructionStackSnapshot:Ljava/lang/String;
       4: ifnull        33
       7: aload_0
       8: getfield      #67                 // Field renderedFtlInstructionStackSnapshotTop:Ljava/lang/String;
      11: ifnull        33
      14: aload_0
      15: getfield      #39                 // Field positionsCalculated:Z
      18: ifne          28
      21: aload_0
      22: getfield      #11                 // Field blamedExpression:Lfreemarker/core/Expression;
      25: ifnull        33
      28: aload_0
      29: aconst_null
      30: putfield      #15                 // Field ftlInstructionStackSnapshot:[Lfreemarker/core/TemplateElement;
      33: return

  private java.lang.String getDescription();
    Code:
       0: aload_0
       1: getfield      #8                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #13                 // Field description:Ljava/lang/String;
      11: ifnonnull     59
      14: aload_0
      15: getfield      #12                 // Field descriptionBuilder:Lfreemarker/core/_ErrorDescriptionBuilder;
      18: ifnull        59
      21: aload_0
      22: aload_0
      23: getfield      #12                 // Field descriptionBuilder:Lfreemarker/core/_ErrorDescriptionBuilder;
      26: aload_0
      27: invokespecial #69                 // Method getFailingInstruction:()Lfreemarker/core/TemplateElement;
      30: aload_0
      31: getfield      #10                 // Field env:Lfreemarker/core/Environment;
      34: ifnull        47
      37: aload_0
      38: getfield      #10                 // Field env:Lfreemarker/core/Environment;
      41: invokevirtual #70                 // Method freemarker/core/Environment.getShowErrorTips:()Z
      44: goto          48
      47: iconst_1
      48: invokevirtual #71                 // Method freemarker/core/_ErrorDescriptionBuilder.toString:(Lfreemarker/core/TemplateElement;Z)Ljava/lang/String;
      51: putfield      #13                 // Field description:Ljava/lang/String;
      54: aload_0
      55: aconst_null
      56: putfield      #12                 // Field descriptionBuilder:Lfreemarker/core/_ErrorDescriptionBuilder;
      59: aload_0
      60: getfield      #13                 // Field description:Ljava/lang/String;
      63: aload_1
      64: monitorexit
      65: areturn
      66: astore_2
      67: aload_1
      68: monitorexit
      69: aload_2
      70: athrow
    Exception table:
       from    to  target type
           7    65    66   any
          66    69    66   any

  private freemarker.core.TemplateElement getFailingInstruction();
    Code:
       0: aload_0
       1: getfield      #15                 // Field ftlInstructionStackSnapshot:[Lfreemarker/core/TemplateElement;
       4: ifnull        22
       7: aload_0
       8: getfield      #15                 // Field ftlInstructionStackSnapshot:[Lfreemarker/core/TemplateElement;
      11: arraylength
      12: ifle          22
      15: aload_0
      16: getfield      #15                 // Field ftlInstructionStackSnapshot:[Lfreemarker/core/TemplateElement;
      19: iconst_0
      20: aaload
      21: areturn
      22: aconst_null
      23: areturn

  public freemarker.core.Environment getEnvironment();
    Code:
       0: aload_0
       1: getfield      #10                 // Field env:Lfreemarker/core/Environment;
       4: areturn

  public void printStackTrace(java.io.PrintStream);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: iconst_1
       4: iconst_1
       5: invokevirtual #72                 // Method printStackTrace:(Ljava/io/PrintStream;ZZZ)V
       8: return

  public void printStackTrace(java.io.PrintWriter);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: iconst_1
       4: iconst_1
       5: invokevirtual #73                 // Method printStackTrace:(Ljava/io/PrintWriter;ZZZ)V
       8: return

  public void printStackTrace(java.io.PrintWriter, boolean, boolean, boolean);
    Code:
       0: aload_1
       1: dup
       2: astore        5
       4: monitorenter
       5: aload_0
       6: new           #74                 // class freemarker/template/TemplateException$PrintWriterStackTraceWriter
       9: dup
      10: aload_1
      11: invokespecial #75                 // Method freemarker/template/TemplateException$PrintWriterStackTraceWriter."<init>":(Ljava/io/PrintWriter;)V
      14: iload_2
      15: iload_3
      16: iload         4
      18: invokespecial #76                 // Method printStackTrace:(Lfreemarker/template/TemplateException$StackTraceWriter;ZZZ)V
      21: aload         5
      23: monitorexit
      24: goto          35
      27: astore        6
      29: aload         5
      31: monitorexit
      32: aload         6
      34: athrow
      35: return
    Exception table:
       from    to  target type
           5    24    27   any
          27    32    27   any

  public void printStackTrace(java.io.PrintStream, boolean, boolean, boolean);
    Code:
       0: aload_1
       1: dup
       2: astore        5
       4: monitorenter
       5: aload_0
       6: new           #77                 // class freemarker/template/TemplateException$PrintStreamStackTraceWriter
       9: dup
      10: aload_1
      11: invokespecial #78                 // Method freemarker/template/TemplateException$PrintStreamStackTraceWriter."<init>":(Ljava/io/PrintStream;)V
      14: iload_2
      15: iload_3
      16: iload         4
      18: invokespecial #76                 // Method printStackTrace:(Lfreemarker/template/TemplateException$StackTraceWriter;ZZZ)V
      21: aload         5
      23: monitorexit
      24: goto          35
      27: astore        6
      29: aload         5
      31: monitorexit
      32: aload         6
      34: athrow
      35: return
    Exception table:
       from    to  target type
           5    24    27   any
          27    32    27   any

  private void printStackTrace(freemarker.template.TemplateException$StackTraceWriter, boolean, boolean, boolean);
    Code:
       0: aload_1
       1: dup
       2: astore        5
       4: monitorenter
       5: iload_2
       6: ifeq          17
       9: aload_1
      10: ldc           #79                 // String FreeMarker template error:
      12: invokeinterface #80,  2           // InterfaceMethod freemarker/template/TemplateException$StackTraceWriter.println:(Ljava/lang/Object;)V
      17: iload_3
      18: ifeq          88
      21: aload_0
      22: invokevirtual #81                 // Method getFTLInstructionStack:()Ljava/lang/String;
      25: astore        6
      27: aload         6
      29: ifnull        83
      32: aload_1
      33: aload_0
      34: invokevirtual #82                 // Method getMessageWithoutStackTop:()Ljava/lang/String;
      37: invokeinterface #80,  2           // InterfaceMethod freemarker/template/TemplateException$StackTraceWriter.println:(Ljava/lang/Object;)V
      42: aload_1
      43: invokeinterface #83,  1           // InterfaceMethod freemarker/template/TemplateException$StackTraceWriter.println:()V
      48: aload_1
      49: ldc           #33                 // String ----
      51: invokeinterface #80,  2           // InterfaceMethod freemarker/template/TemplateException$StackTraceWriter.println:(Ljava/lang/Object;)V
      56: aload_1
      57: ldc           #36                 // String FTL stack trace (\"~\" means nesting-related):
      59: invokeinterface #80,  2           // InterfaceMethod freemarker/template/TemplateException$StackTraceWriter.println:(Ljava/lang/Object;)V
      64: aload_1
      65: aload         6
      67: invokeinterface #84,  2           // InterfaceMethod freemarker/template/TemplateException$StackTraceWriter.print:(Ljava/lang/Object;)V
      72: aload_1
      73: ldc           #33                 // String ----
      75: invokeinterface #80,  2           // InterfaceMethod freemarker/template/TemplateException$StackTraceWriter.println:(Ljava/lang/Object;)V
      80: goto          88
      83: iconst_0
      84: istore_3
      85: iconst_1
      86: istore        4
      88: iload         4
      90: ifeq          295
      93: iload_3
      94: ifeq          207
      97: aload_1
      98: invokeinterface #83,  1           // InterfaceMethod freemarker/template/TemplateException$StackTraceWriter.println:()V
     103: aload_1
     104: ldc           #85                 // String Java stack trace (for programmers):
     106: invokeinterface #80,  2           // InterfaceMethod freemarker/template/TemplateException$StackTraceWriter.println:(Ljava/lang/Object;)V
     111: aload_1
     112: ldc           #33                 // String ----
     114: invokeinterface #80,  2           // InterfaceMethod freemarker/template/TemplateException$StackTraceWriter.println:(Ljava/lang/Object;)V
     119: aload_0
     120: getfield      #8                  // Field lock:Ljava/lang/Object;
     123: dup
     124: astore        6
     126: monitorenter
     127: aload_0
     128: getfield      #86                 // Field messageWasAlreadyPrintedForThisTrace:Ljava/lang/ThreadLocal;
     131: ifnonnull     145
     134: aload_0
     135: new           #87                 // class java/lang/ThreadLocal
     138: dup
     139: invokespecial #88                 // Method java/lang/ThreadLocal."<init>":()V
     142: putfield      #86                 // Field messageWasAlreadyPrintedForThisTrace:Ljava/lang/ThreadLocal;
     145: aload_0
     146: getfield      #86                 // Field messageWasAlreadyPrintedForThisTrace:Ljava/lang/ThreadLocal;
     149: getstatic     #89                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     152: invokevirtual #90                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     155: aload         6
     157: monitorexit
     158: goto          169
     161: astore        7
     163: aload         6
     165: monitorexit
     166: aload         7
     168: athrow
     169: aload_1
     170: aload_0
     171: invokeinterface #91,  2           // InterfaceMethod freemarker/template/TemplateException$StackTraceWriter.printStandardStackTrace:(Ljava/lang/Throwable;)V
     176: aload_0
     177: getfield      #86                 // Field messageWasAlreadyPrintedForThisTrace:Ljava/lang/ThreadLocal;
     180: getstatic     #92                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     183: invokevirtual #90                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     186: goto          204
     189: astore        8
     191: aload_0
     192: getfield      #86                 // Field messageWasAlreadyPrintedForThisTrace:Ljava/lang/ThreadLocal;
     195: getstatic     #92                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     198: invokevirtual #90                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     201: aload         8
     203: athrow
     204: goto          214
     207: aload_1
     208: aload_0
     209: invokeinterface #91,  2           // InterfaceMethod freemarker/template/TemplateException$StackTraceWriter.printStandardStackTrace:(Ljava/lang/Throwable;)V
     214: aload_0
     215: invokevirtual #19                 // Method getCause:()Ljava/lang/Throwable;
     218: ifnull        295
     221: aload_0
     222: invokevirtual #19                 // Method getCause:()Ljava/lang/Throwable;
     225: invokevirtual #93                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
     228: astore        6
     230: aload         6
     232: ifnonnull     295
     235: aload_0
     236: invokevirtual #19                 // Method getCause:()Ljava/lang/Throwable;
     239: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     242: ldc           #94                 // String getRootCause
     244: getstatic     #95                 // Field freemarker/template/utility/CollectionUtils.EMPTY_CLASS_ARRAY:[Ljava/lang/Class;
     247: invokevirtual #96                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
     250: astore        7
     252: aload         7
     254: aload_0
     255: invokevirtual #19                 // Method getCause:()Ljava/lang/Throwable;
     258: getstatic     #97                 // Field freemarker/template/utility/CollectionUtils.EMPTY_OBJECT_ARRAY:[Ljava/lang/Object;
     261: invokevirtual #98                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
     264: checkcast     #99                 // class java/lang/Throwable
     267: astore        8
     269: aload         8
     271: ifnull        290
     274: aload_1
     275: ldc           #100                // String ServletException root cause:
     277: invokeinterface #80,  2           // InterfaceMethod freemarker/template/TemplateException$StackTraceWriter.println:(Ljava/lang/Object;)V
     282: aload_1
     283: aload         8
     285: invokeinterface #91,  2           // InterfaceMethod freemarker/template/TemplateException$StackTraceWriter.printStandardStackTrace:(Ljava/lang/Throwable;)V
     290: goto          295
     293: astore        7
     295: aload         5
     297: monitorexit
     298: goto          309
     301: astore        9
     303: aload         5
     305: monitorexit
     306: aload         9
     308: athrow
     309: return
    Exception table:
       from    to  target type
         127   158   161   any
         161   166   161   any
         169   176   189   any
         189   191   189   any
         235   290   293   Class java/lang/Throwable
           5   298   301   any
         301   306   301   any

  public void printStandardStackTrace(java.io.PrintStream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #101                // Method java/lang/Exception.printStackTrace:(Ljava/io/PrintStream;)V
       5: return

  public void printStandardStackTrace(java.io.PrintWriter);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #102                // Method java/lang/Exception.printStackTrace:(Ljava/io/PrintWriter;)V
       5: return

  public java.lang.String getMessage();
    Code:
       0: aload_0
       1: getfield      #86                 // Field messageWasAlreadyPrintedForThisTrace:Ljava/lang/ThreadLocal;
       4: ifnull        23
       7: aload_0
       8: getfield      #86                 // Field messageWasAlreadyPrintedForThisTrace:Ljava/lang/ThreadLocal;
      11: invokevirtual #103                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      14: getstatic     #89                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      17: if_acmpne     23
      20: ldc           #104                // String [... Exception message was already printed; see it above ...]
      22: areturn
      23: aload_0
      24: getfield      #8                  // Field lock:Ljava/lang/Object;
      27: dup
      28: astore_1
      29: monitorenter
      30: aload_0
      31: getfield      #37                 // Field message:Ljava/lang/String;
      34: ifnonnull     41
      37: aload_0
      38: invokespecial #105                // Method renderMessages:()V
      41: aload_0
      42: getfield      #37                 // Field message:Ljava/lang/String;
      45: aload_1
      46: monitorexit
      47: areturn
      48: astore_2
      49: aload_1
      50: monitorexit
      51: aload_2
      52: athrow
    Exception table:
       from    to  target type
          30    47    48   any
          48    51    48   any

  public java.lang.String getMessageWithoutStackTop();
    Code:
       0: aload_0
       1: getfield      #8                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #18                 // Field messageWithoutStackTop:Ljava/lang/String;
      11: ifnonnull     18
      14: aload_0
      15: invokespecial #105                // Method renderMessages:()V
      18: aload_0
      19: getfield      #18                 // Field messageWithoutStackTop:Ljava/lang/String;
      22: aload_1
      23: monitorexit
      24: areturn
      25: astore_2
      26: aload_1
      27: monitorexit
      28: aload_2
      29: athrow
    Exception table:
       from    to  target type
           7    24    25   any
          25    28    25   any

  public java.lang.Integer getLineNumber();
    Code:
       0: aload_0
       1: getfield      #8                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #39                 // Field positionsCalculated:Z
      11: ifne          18
      14: aload_0
      15: invokespecial #106                // Method calculatePosition:()V
      18: aload_0
      19: getfield      #47                 // Field lineNumber:Ljava/lang/Integer;
      22: aload_1
      23: monitorexit
      24: areturn
      25: astore_2
      26: aload_1
      27: monitorexit
      28: aload_2
      29: athrow
    Exception table:
       from    to  target type
           7    24    25   any
          25    28    25   any

  public java.lang.String getTemplateName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #39                 // Field positionsCalculated:Z
      11: ifne          18
      14: aload_0
      15: invokespecial #106                // Method calculatePosition:()V
      18: aload_0
      19: getfield      #43                 // Field templateName:Ljava/lang/String;
      22: aload_1
      23: monitorexit
      24: areturn
      25: astore_2
      26: aload_1
      27: monitorexit
      28: aload_2
      29: athrow
    Exception table:
       from    to  target type
           7    24    25   any
          25    28    25   any

  public java.lang.String getTemplateSourceName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #39                 // Field positionsCalculated:Z
      11: ifne          18
      14: aload_0
      15: invokespecial #106                // Method calculatePosition:()V
      18: aload_0
      19: getfield      #45                 // Field templateSourceName:Ljava/lang/String;
      22: aload_1
      23: monitorexit
      24: areturn
      25: astore_2
      26: aload_1
      27: monitorexit
      28: aload_2
      29: athrow
    Exception table:
       from    to  target type
           7    24    25   any
          25    28    25   any

  public java.lang.Integer getColumnNumber();
    Code:
       0: aload_0
       1: getfield      #8                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #39                 // Field positionsCalculated:Z
      11: ifne          18
      14: aload_0
      15: invokespecial #106                // Method calculatePosition:()V
      18: aload_0
      19: getfield      #49                 // Field columnNumber:Ljava/lang/Integer;
      22: aload_1
      23: monitorexit
      24: areturn
      25: astore_2
      26: aload_1
      27: monitorexit
      28: aload_2
      29: athrow
    Exception table:
       from    to  target type
           7    24    25   any
          25    28    25   any

  public java.lang.Integer getEndLineNumber();
    Code:
       0: aload_0
       1: getfield      #8                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #39                 // Field positionsCalculated:Z
      11: ifne          18
      14: aload_0
      15: invokespecial #106                // Method calculatePosition:()V
      18: aload_0
      19: getfield      #51                 // Field endLineNumber:Ljava/lang/Integer;
      22: aload_1
      23: monitorexit
      24: areturn
      25: astore_2
      26: aload_1
      27: monitorexit
      28: aload_2
      29: athrow
    Exception table:
       from    to  target type
           7    24    25   any
          25    28    25   any

  public java.lang.Integer getEndColumnNumber();
    Code:
       0: aload_0
       1: getfield      #8                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #39                 // Field positionsCalculated:Z
      11: ifne          18
      14: aload_0
      15: invokespecial #106                // Method calculatePosition:()V
      18: aload_0
      19: getfield      #53                 // Field endColumnNumber:Ljava/lang/Integer;
      22: aload_1
      23: monitorexit
      24: areturn
      25: astore_2
      26: aload_1
      27: monitorexit
      28: aload_2
      29: athrow
    Exception table:
       from    to  target type
           7    24    25   any
          25    28    25   any

  public java.lang.String getBlamedExpressionString();
    Code:
       0: aload_0
       1: getfield      #8                  // Field lock:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #107                // Field blamedExpressionStringCalculated:Z
      11: ifne          37
      14: aload_0
      15: getfield      #11                 // Field blamedExpression:Lfreemarker/core/Expression;
      18: ifnull        32
      21: aload_0
      22: aload_0
      23: getfield      #11                 // Field blamedExpression:Lfreemarker/core/Expression;
      26: invokevirtual #108                // Method freemarker/core/Expression.getCanonicalForm:()Ljava/lang/String;
      29: putfield      #109                // Field blamedExpressionString:Ljava/lang/String;
      32: aload_0
      33: iconst_1
      34: putfield      #107                // Field blamedExpressionStringCalculated:Z
      37: aload_0
      38: getfield      #109                // Field blamedExpressionString:Ljava/lang/String;
      41: aload_1
      42: monitorexit
      43: areturn
      44: astore_2
      45: aload_1
      46: monitorexit
      47: aload_2
      48: athrow
    Exception table:
       from    to  target type
           7    43    44   any
          44    47    44   any

  freemarker.core.Expression getBlamedExpression();
    Code:
       0: aload_0
       1: getfield      #11                 // Field blamedExpression:Lfreemarker/core/Expression;
       4: areturn

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method getFTLInstructionStack:()Ljava/lang/String;
       4: pop
       5: aload_0
       6: invokespecial #30                 // Method getFTLInstructionStackTopFew:()Ljava/lang/String;
       9: pop
      10: aload_0
      11: invokespecial #16                 // Method getDescription:()Ljava/lang/String;
      14: pop
      15: aload_0
      16: invokespecial #106                // Method calculatePosition:()V
      19: aload_0
      20: invokevirtual #110                // Method getBlamedExpressionString:()Ljava/lang/String;
      23: pop
      24: aload_1
      25: invokevirtual #111                // Method java/io/ObjectOutputStream.defaultWriteObject:()V
      28: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: new           #6                  // class java/lang/Object
       4: dup
       5: invokespecial #7                  // Method java/lang/Object."<init>":()V
       8: putfield      #8                  // Field lock:Ljava/lang/Object;
      11: aload_1
      12: invokevirtual #112                // Method java/io/ObjectInputStream.defaultReadObject:()V
      15: return
}
