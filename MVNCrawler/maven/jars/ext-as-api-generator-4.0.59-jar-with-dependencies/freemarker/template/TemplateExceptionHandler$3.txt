Compiled from "TemplateExceptionHandler.java"
final class freemarker.template.TemplateExceptionHandler$3 implements freemarker.template.TemplateExceptionHandler {
  freemarker.template.TemplateExceptionHandler$3();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void handleTemplateException(freemarker.template.TemplateException, freemarker.core.Environment, java.io.Writer) throws freemarker.template.TemplateException;
    Code:
       0: aload_2
       1: invokevirtual #2                  // Method freemarker/core/Environment.isInAttemptBlock:()Z
       4: ifne          52
       7: aload_3
       8: instanceof    #3                  // class java/io/PrintWriter
      11: ifeq          21
      14: aload_3
      15: checkcast     #3                  // class java/io/PrintWriter
      18: goto          29
      21: new           #3                  // class java/io/PrintWriter
      24: dup
      25: aload_3
      26: invokespecial #4                  // Method java/io/PrintWriter."<init>":(Ljava/io/Writer;)V
      29: astore        4
      31: aload         4
      33: ldc           #5                  // String FreeMarker template error (DEBUG mode; use RETHROW in production!):\n
      35: invokevirtual #6                  // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      38: aload_1
      39: aload         4
      41: iconst_0
      42: iconst_1
      43: iconst_1
      44: invokevirtual #7                  // Method freemarker/template/TemplateException.printStackTrace:(Ljava/io/PrintWriter;ZZZ)V
      47: aload         4
      49: invokevirtual #8                  // Method java/io/PrintWriter.flush:()V
      52: aload_1
      53: athrow
}
