Compiled from "_TemplateAPI.java"
public class freemarker.template._TemplateAPI {
  public static final int VERSION_INT_2_3_0;

  public static final int VERSION_INT_2_3_19;

  public static final int VERSION_INT_2_3_20;

  public static final int VERSION_INT_2_3_21;

  public static final int VERSION_INT_2_3_22;

  public static final int VERSION_INT_2_3_23;

  public static final int VERSION_INT_2_3_24;

  public static final int VERSION_INT_2_4_0;

  public freemarker.template._TemplateAPI();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void checkVersionNotNullAndSupported(freemarker.template.Version);
    Code:
       0: ldc           #2                  // String incompatibleImprovements
       2: aload_0
       3: invokestatic  #3                  // Method freemarker/template/utility/NullArgumentException.check:(Ljava/lang/String;Ljava/lang/Object;)V
       6: aload_0
       7: invokevirtual #4                  // Method freemarker/template/Version.intValue:()I
      10: istore_1
      11: iload_1
      12: invokestatic  #5                  // Method freemarker/template/Configuration.getVersion:()Lfreemarker/template/Version;
      15: invokevirtual #4                  // Method freemarker/template/Version.intValue:()I
      18: if_icmple     64
      21: new           #6                  // class java/lang/IllegalArgumentException
      24: dup
      25: new           #7                  // class java/lang/StringBuilder
      28: dup
      29: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #9                  // String The FreeMarker version requested by \"incompatibleImprovements\" was
      34: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: ldc           #12                 // String , but the installed FreeMarker version is only
      43: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokestatic  #5                  // Method freemarker/template/Configuration.getVersion:()Lfreemarker/template/Version;
      49: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      52: ldc           #13                 // String . You may need to upgrade FreeMarker in your project.
      54: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: iload_1
      65: getstatic     #16                 // Field VERSION_INT_2_3_0:I
      68: if_icmpge     81
      71: new           #6                  // class java/lang/IllegalArgumentException
      74: dup
      75: ldc           #17                 // String \"incompatibleImprovements\" must be at least 2.3.0.
      77: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: return

  public static int getTemplateLanguageVersionAsInt(freemarker.core.TemplateObject);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method freemarker/core/TemplateObject.getTemplate:()Lfreemarker/template/Template;
       4: invokestatic  #19                 // Method getTemplateLanguageVersionAsInt:(Lfreemarker/template/Template;)I
       7: ireturn

  public static int getTemplateLanguageVersionAsInt(freemarker.template.Template);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method freemarker/template/Template.getTemplateLanguageVersion:()Lfreemarker/template/Version;
       4: invokevirtual #4                  // Method freemarker/template/Version.intValue:()I
       7: ireturn

  public static void DefaultObjectWrapperFactory_clearInstanceCache();
    Code:
       0: invokestatic  #21                 // Method freemarker/template/DefaultObjectWrapperBuilder.clearInstanceCache:()V
       3: return

  public static freemarker.template.TemplateExceptionHandler getDefaultTemplateExceptionHandler(freemarker.template.Version);
    Code:
       0: aload_0
       1: invokestatic  #22                 // Method freemarker/template/Configuration.getDefaultTemplateExceptionHandler:(Lfreemarker/template/Version;)Lfreemarker/template/TemplateExceptionHandler;
       4: areturn

  public static boolean getDefaultLogTemplateExceptions(freemarker.template.Version);
    Code:
       0: aload_0
       1: invokestatic  #23                 // Method freemarker/template/Configuration.getDefaultLogTemplateExceptions:(Lfreemarker/template/Version;)Z
       4: ireturn

  public static freemarker.cache.TemplateLoader createDefaultTemplateLoader(freemarker.template.Version);
    Code:
       0: aload_0
       1: invokestatic  #24                 // Method freemarker/template/Configuration.createDefaultTemplateLoader:(Lfreemarker/template/Version;)Lfreemarker/cache/TemplateLoader;
       4: areturn

  public static freemarker.cache.CacheStorage createDefaultCacheStorage(freemarker.template.Version);
    Code:
       0: aload_0
       1: invokestatic  #25                 // Method freemarker/template/Configuration.createDefaultCacheStorage:(Lfreemarker/template/Version;)Lfreemarker/cache/CacheStorage;
       4: areturn

  public static freemarker.cache.TemplateLookupStrategy getDefaultTemplateLookupStrategy(freemarker.template.Version);
    Code:
       0: aload_0
       1: invokestatic  #26                 // Method freemarker/template/Configuration.getDefaultTemplateLookupStrategy:(Lfreemarker/template/Version;)Lfreemarker/cache/TemplateLookupStrategy;
       4: areturn

  public static freemarker.cache.TemplateNameFormat getDefaultTemplateNameFormat(freemarker.template.Version);
    Code:
       0: aload_0
       1: invokestatic  #27                 // Method freemarker/template/Configuration.getDefaultTemplateNameFormat:(Lfreemarker/template/Version;)Lfreemarker/cache/TemplateNameFormat;
       4: areturn

  public static java.util.Set getConfigurationSettingNames(freemarker.template.Configuration, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #28                 // Method freemarker/template/Configuration.getSettingNames:(Z)Ljava/util/Set;
       5: areturn

  public static void setAutoEscaping(freemarker.template.Template, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #29                 // Method freemarker/template/Template.setAutoEscaping:(Z)V
       5: return

  public static void setOutputFormat(freemarker.template.Template, freemarker.core.OutputFormat);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method freemarker/template/Template.setOutputFormat:(Lfreemarker/core/OutputFormat;)V
       5: return

  public static void validateAutoEscapingPolicyValue(int);
    Code:
       0: iload_0
       1: bipush        21
       3: if_icmpeq     28
       6: iload_0
       7: bipush        22
       9: if_icmpeq     28
      12: iload_0
      13: bipush        20
      15: if_icmpeq     28
      18: new           #6                  // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #32                 // String \"auto_escaping\" can only be set to one of these: Configuration.ENABLE_AUTO_ESCAPING_IF_DEFAULT, or Configuration.ENABLE_AUTO_ESCAPING_IF_SUPPORTEDor Configuration.DISABLE_AUTO_ESCAPING
      24: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: return

  public static void validateNamingConventionValue(int);
    Code:
       0: iload_0
       1: bipush        10
       3: if_icmpeq     28
       6: iload_0
       7: bipush        11
       9: if_icmpeq     28
      12: iload_0
      13: bipush        12
      15: if_icmpeq     28
      18: new           #6                  // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #33                 // String \"naming_convention\" can only be set to one of these: Configuration.AUTO_DETECT_NAMING_CONVENTION, or Configuration.LEGACY_NAMING_CONVENTIONor Configuration.CAMEL_CASE_NAMING_CONVENTION
      24: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: return

  public static void valideTagSyntaxValue(int);
    Code:
       0: iload_0
       1: ifeq          24
       4: iload_0
       5: iconst_2
       6: if_icmpeq     24
       9: iload_0
      10: iconst_1
      11: if_icmpeq     24
      14: new           #6                  // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #34                 // String \"tag_syntax\" can only be set to one of these: Configuration.AUTO_DETECT_TAG_SYNTAX, Configuration.ANGLE_BRACKET_SYNTAX, or Configuration.SQAUARE_BRACKET_SYNTAX
      20: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: return

  public static freemarker.core.Expression getBlamedExpression(freemarker.template.TemplateException);
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method freemarker/template/TemplateException.getBlamedExpression:()Lfreemarker/core/Expression;
       4: areturn

  static {};
    Code:
       0: getstatic     #36                 // Field freemarker/template/Configuration.VERSION_2_3_0:Lfreemarker/template/Version;
       3: invokevirtual #4                  // Method freemarker/template/Version.intValue:()I
       6: putstatic     #16                 // Field VERSION_INT_2_3_0:I
       9: getstatic     #37                 // Field freemarker/template/Configuration.VERSION_2_3_19:Lfreemarker/template/Version;
      12: invokevirtual #4                  // Method freemarker/template/Version.intValue:()I
      15: putstatic     #38                 // Field VERSION_INT_2_3_19:I
      18: getstatic     #39                 // Field freemarker/template/Configuration.VERSION_2_3_20:Lfreemarker/template/Version;
      21: invokevirtual #4                  // Method freemarker/template/Version.intValue:()I
      24: putstatic     #40                 // Field VERSION_INT_2_3_20:I
      27: getstatic     #41                 // Field freemarker/template/Configuration.VERSION_2_3_21:Lfreemarker/template/Version;
      30: invokevirtual #4                  // Method freemarker/template/Version.intValue:()I
      33: putstatic     #42                 // Field VERSION_INT_2_3_21:I
      36: getstatic     #43                 // Field freemarker/template/Configuration.VERSION_2_3_22:Lfreemarker/template/Version;
      39: invokevirtual #4                  // Method freemarker/template/Version.intValue:()I
      42: putstatic     #44                 // Field VERSION_INT_2_3_22:I
      45: getstatic     #45                 // Field freemarker/template/Configuration.VERSION_2_3_23:Lfreemarker/template/Version;
      48: invokevirtual #4                  // Method freemarker/template/Version.intValue:()I
      51: putstatic     #46                 // Field VERSION_INT_2_3_23:I
      54: getstatic     #47                 // Field freemarker/template/Configuration.VERSION_2_3_24:Lfreemarker/template/Version;
      57: invokevirtual #4                  // Method freemarker/template/Version.intValue:()I
      60: putstatic     #48                 // Field VERSION_INT_2_3_24:I
      63: iconst_2
      64: iconst_4
      65: iconst_0
      66: invokestatic  #49                 // Method freemarker/template/Version.intValueFor:(III)I
      69: putstatic     #50                 // Field VERSION_INT_2_4_0:I
      72: return
}
