Compiled from "SimpleCollection.java"
class freemarker.template.SimpleCollection$SimpleTemplateModelIterator implements freemarker.template.TemplateModelIterator {
  private final java.util.Iterator iterator;

  private boolean iteratorOwnedByMe;

  final freemarker.template.SimpleCollection this$0;

  freemarker.template.SimpleCollection$SimpleTemplateModelIterator(freemarker.template.SimpleCollection, java.util.Iterator, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lfreemarker/template/SimpleCollection;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field iterator:Ljava/util/Iterator;
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field iteratorOwnedByMe:Z
      19: return

  public freemarker.template.TemplateModel next() throws freemarker.template.TemplateModelException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field iteratorOwnedByMe:Z
       4: ifne          42
       7: aload_0
       8: getfield      #1                  // Field this$0:Lfreemarker/template/SimpleCollection;
      11: dup
      12: astore_1
      13: monitorenter
      14: aload_0
      15: invokespecial #5                  // Method checkIteratorOwned:()V
      18: aload_0
      19: getfield      #1                  // Field this$0:Lfreemarker/template/SimpleCollection;
      22: iconst_1
      23: invokestatic  #6                  // Method freemarker/template/SimpleCollection.access$002:(Lfreemarker/template/SimpleCollection;Z)Z
      26: pop
      27: aload_0
      28: iconst_1
      29: putfield      #4                  // Field iteratorOwnedByMe:Z
      32: aload_1
      33: monitorexit
      34: goto          42
      37: astore_2
      38: aload_1
      39: monitorexit
      40: aload_2
      41: athrow
      42: aload_0
      43: getfield      #3                  // Field iterator:Ljava/util/Iterator;
      46: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifne          64
      54: new           #8                  // class freemarker/template/TemplateModelException
      57: dup
      58: ldc           #9                  // String The collection has no more items.
      60: invokespecial #10                 // Method freemarker/template/TemplateModelException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: aload_0
      65: getfield      #3                  // Field iterator:Ljava/util/Iterator;
      68: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: astore_1
      74: aload_1
      75: instanceof    #12                 // class freemarker/template/TemplateModel
      78: ifeq          88
      81: aload_1
      82: checkcast     #12                 // class freemarker/template/TemplateModel
      85: goto          96
      88: aload_0
      89: getfield      #1                  // Field this$0:Lfreemarker/template/SimpleCollection;
      92: aload_1
      93: invokevirtual #13                 // Method freemarker/template/SimpleCollection.wrap:(Ljava/lang/Object;)Lfreemarker/template/TemplateModel;
      96: areturn
    Exception table:
       from    to  target type
          14    34    37   any
          37    40    37   any

  public boolean hasNext() throws freemarker.template.TemplateModelException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field iteratorOwnedByMe:Z
       4: ifne          28
       7: aload_0
       8: getfield      #1                  // Field this$0:Lfreemarker/template/SimpleCollection;
      11: dup
      12: astore_1
      13: monitorenter
      14: aload_0
      15: invokespecial #5                  // Method checkIteratorOwned:()V
      18: aload_1
      19: monitorexit
      20: goto          28
      23: astore_2
      24: aload_1
      25: monitorexit
      26: aload_2
      27: athrow
      28: aload_0
      29: getfield      #3                  // Field iterator:Ljava/util/Iterator;
      32: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ireturn
    Exception table:
       from    to  target type
          14    20    23   any
          23    26    23   any

  private void checkIteratorOwned() throws freemarker.template.TemplateModelException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lfreemarker/template/SimpleCollection;
       4: invokestatic  #14                 // Method freemarker/template/SimpleCollection.access$000:(Lfreemarker/template/SimpleCollection;)Z
       7: ifeq          20
      10: new           #8                  // class freemarker/template/TemplateModelException
      13: dup
      14: ldc           #15                 // String This collection value wraps a java.util.Iterator, thus it can be listed only once.
      16: invokespecial #10                 // Method freemarker/template/TemplateModelException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: return
}
