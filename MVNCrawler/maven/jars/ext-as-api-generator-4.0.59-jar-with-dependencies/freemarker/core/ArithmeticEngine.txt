Compiled from "ArithmeticEngine.java"
public abstract class freemarker.core.ArithmeticEngine {
  public static final freemarker.core.ArithmeticEngine$BigDecimalEngine BIGDECIMAL_ENGINE;

  public static final freemarker.core.ArithmeticEngine$ConservativeEngine CONSERVATIVE_ENGINE;

  protected int minScale;

  protected int maxScale;

  protected int roundingPolicy;

  public freemarker.core.ArithmeticEngine();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        12
       7: putfield      #4                  // Field minScale:I
      10: aload_0
      11: bipush        12
      13: putfield      #5                  // Field maxScale:I
      16: aload_0
      17: iconst_4
      18: putfield      #7                  // Field roundingPolicy:I
      21: return

  public abstract int compareNumbers(java.lang.Number, java.lang.Number) throws freemarker.template.TemplateException;

  public abstract java.lang.Number add(java.lang.Number, java.lang.Number) throws freemarker.template.TemplateException;

  public abstract java.lang.Number subtract(java.lang.Number, java.lang.Number) throws freemarker.template.TemplateException;

  public abstract java.lang.Number multiply(java.lang.Number, java.lang.Number) throws freemarker.template.TemplateException;

  public abstract java.lang.Number divide(java.lang.Number, java.lang.Number) throws freemarker.template.TemplateException;

  public abstract java.lang.Number modulus(java.lang.Number, java.lang.Number) throws freemarker.template.TemplateException;

  public abstract java.lang.Number toNumber(java.lang.String);

  public void setMinScale(int);
    Code:
       0: iload_1
       1: ifge          14
       4: new           #8                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #9                  // String minScale < 0
      10: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: iload_1
      16: putfield      #4                  // Field minScale:I
      19: return

  public void setMaxScale(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #4                  // Field minScale:I
       5: if_icmpge     18
       8: new           #8                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #11                 // String maxScale < minScale
      14: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: iload_1
      20: putfield      #5                  // Field maxScale:I
      23: return

  public void setRoundingPolicy(int);
    Code:
       0: iload_1
       1: iconst_2
       2: if_icmpeq     51
       5: iload_1
       6: iconst_1
       7: if_icmpeq     51
      10: iload_1
      11: iconst_3
      12: if_icmpeq     51
      15: iload_1
      16: iconst_5
      17: if_icmpeq     51
      20: iload_1
      21: bipush        6
      23: if_icmpeq     51
      26: iload_1
      27: iconst_4
      28: if_icmpeq     51
      31: iload_1
      32: bipush        7
      34: if_icmpeq     51
      37: iload_1
      38: ifeq          51
      41: new           #8                  // class java/lang/IllegalArgumentException
      44: dup
      45: ldc           #12                 // String invalid rounding policy
      47: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: aload_0
      52: iload_1
      53: putfield      #7                  // Field roundingPolicy:I
      56: return

  private static java.math.BigDecimal toBigDecimal(java.lang.Number);
    Code:
       0: aload_0
       1: instanceof    #6                  // class java/math/BigDecimal
       4: ifeq          14
       7: aload_0
       8: checkcast     #6                  // class java/math/BigDecimal
      11: goto          25
      14: new           #6                  // class java/math/BigDecimal
      17: dup
      18: aload_0
      19: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
      22: invokespecial #14                 // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
      25: areturn
      26: astore_1
      27: new           #15                 // class java/lang/NumberFormatException
      30: dup
      31: new           #16                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #18                 // String Can\'t parse this as BigDecimal number:
      40: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: invokestatic  #20                 // Method freemarker/template/utility/StringUtil.jQuote:(Ljava/lang/Object;)Ljava/lang/String;
      47: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #22                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      56: athrow
    Exception table:
       from    to  target type
           0    25    26   Class java/lang/NumberFormatException

  private static java.lang.Number toBigDecimalOrDouble(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method java/lang/String.length:()I
       4: iconst_2
       5: if_icmple     108
       8: aload_0
       9: iconst_0
      10: invokevirtual #24                 // Method java/lang/String.charAt:(I)C
      13: istore_1
      14: iload_1
      15: bipush        73
      17: if_icmpne     45
      20: aload_0
      21: ldc           #25                 // String INF
      23: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      26: ifne          38
      29: aload_0
      30: ldc           #27                 // String Infinity
      32: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      35: ifeq          45
      38: ldc2_w        #29                 // double Infinityd
      41: invokestatic  #31                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      44: areturn
      45: iload_1
      46: bipush        78
      48: if_icmpne     67
      51: aload_0
      52: ldc           #32                 // String NaN
      54: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      57: ifeq          67
      60: ldc2_w        #33                 // double NaNd
      63: invokestatic  #31                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      66: areturn
      67: iload_1
      68: bipush        45
      70: if_icmpne     108
      73: aload_0
      74: iconst_1
      75: invokevirtual #24                 // Method java/lang/String.charAt:(I)C
      78: bipush        73
      80: if_icmpne     108
      83: aload_0
      84: ldc           #35                 // String -INF
      86: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      89: ifne          101
      92: aload_0
      93: ldc           #36                 // String -Infinity
      95: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      98: ifeq          108
     101: ldc2_w        #37                 // double -Infinityd
     104: invokestatic  #31                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     107: areturn
     108: new           #6                  // class java/math/BigDecimal
     111: dup
     112: aload_0
     113: invokespecial #14                 // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
     116: areturn

  static java.math.BigDecimal access$000(java.lang.Number);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method toBigDecimal:(Ljava/lang/Number;)Ljava/math/BigDecimal;
       4: areturn

  static java.lang.Number access$100(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method toBigDecimalOrDouble:(Ljava/lang/String;)Ljava/lang/Number;
       4: areturn

  static {};
    Code:
       0: new           #39                 // class freemarker/core/ArithmeticEngine$BigDecimalEngine
       3: dup
       4: invokespecial #40                 // Method freemarker/core/ArithmeticEngine$BigDecimalEngine."<init>":()V
       7: putstatic     #41                 // Field BIGDECIMAL_ENGINE:Lfreemarker/core/ArithmeticEngine$BigDecimalEngine;
      10: new           #42                 // class freemarker/core/ArithmeticEngine$ConservativeEngine
      13: dup
      14: invokespecial #43                 // Method freemarker/core/ArithmeticEngine$ConservativeEngine."<init>":()V
      17: putstatic     #44                 // Field CONSERVATIVE_ENGINE:Lfreemarker/core/ArithmeticEngine$ConservativeEngine;
      20: return
}
