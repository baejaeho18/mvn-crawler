Compiled from "IteratorBlock.java"
class freemarker.core.IteratorBlock$IterationContext implements freemarker.core.LocalContext {
  private static final java.lang.String LOOP_STATE_HAS_NEXT;

  private static final java.lang.String LOOP_STATE_INDEX;

  private freemarker.template.TemplateModelIterator openedIteratorModel;

  private boolean hasNext;

  private freemarker.template.TemplateModel loopVar;

  private int index;

  private boolean alreadyEntered;

  private java.util.Collection localVarNames;

  private java.lang.String loopVarName;

  private final freemarker.template.TemplateModel listValue;

  final freemarker.core.IteratorBlock this$0;

  public freemarker.core.IteratorBlock$IterationContext(freemarker.core.IteratorBlock, freemarker.template.TemplateModel, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lfreemarker/core/IteratorBlock;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field localVarNames:Ljava/util/Collection;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field listValue:Lfreemarker/template/TemplateModel;
      19: aload_0
      20: aload_3
      21: putfield      #5                  // Field loopVarName:Ljava/lang/String;
      24: return

  boolean accept(freemarker.core.Environment) throws freemarker.template.TemplateException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #1                  // Field this$0:Lfreemarker/core/IteratorBlock;
       6: invokevirtual #6                  // Method freemarker/core/IteratorBlock.getChildBuffer:()[Lfreemarker/core/TemplateElement;
       9: invokespecial #7                  // Method executeNestedContent:(Lfreemarker/core/Environment;[Lfreemarker/core/TemplateElement;)Z
      12: ireturn

  void loopForItemsElement(freemarker.core.Environment, freemarker.core.TemplateElement[], java.lang.String) throws freemarker.core.NonSequenceOrCollectionException, freemarker.template.TemplateModelException, freemarker.core.InvalidReferenceException, freemarker.template.TemplateException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field alreadyEntered:Z
       4: ifeq          18
       7: new           #9                  // class freemarker/core/_MiscTemplateException
      10: dup
      11: aload_1
      12: ldc           #10                 // String The #items directive was already entered earlier for this listing.
      14: invokespecial #11                 // Method freemarker/core/_MiscTemplateException."<init>":(Lfreemarker/core/Environment;Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: iconst_1
      20: putfield      #8                  // Field alreadyEntered:Z
      23: aload_0
      24: aload_3
      25: putfield      #5                  // Field loopVarName:Ljava/lang/String;
      28: aload_0
      29: aload_1
      30: aload_2
      31: invokespecial #7                  // Method executeNestedContent:(Lfreemarker/core/Environment;[Lfreemarker/core/TemplateElement;)Z
      34: pop
      35: aload_0
      36: aconst_null
      37: putfield      #5                  // Field loopVarName:Ljava/lang/String;
      40: goto          53
      43: astore        4
      45: aload_0
      46: aconst_null
      47: putfield      #5                  // Field loopVarName:Ljava/lang/String;
      50: aload         4
      52: athrow
      53: return
    Exception table:
       from    to  target type
           0    35    43   any
          43    45    43   any

  private boolean executeNestedContent(freemarker.core.Environment, freemarker.core.TemplateElement[]) throws freemarker.template.TemplateModelException, freemarker.template.TemplateException, java.io.IOException, freemarker.core.NonSequenceOrCollectionException, freemarker.core.InvalidReferenceException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field listValue:Lfreemarker/template/TemplateModel;
       4: instanceof    #12                 // class freemarker/template/TemplateCollectionModel
       7: ifeq          143
      10: aload_0
      11: getfield      #4                  // Field listValue:Lfreemarker/template/TemplateModel;
      14: checkcast     #12                 // class freemarker/template/TemplateCollectionModel
      17: astore        4
      19: aload_0
      20: getfield      #13                 // Field openedIteratorModel:Lfreemarker/template/TemplateModelIterator;
      23: ifnonnull     36
      26: aload         4
      28: invokeinterface #14,  1           // InterfaceMethod freemarker/template/TemplateCollectionModel.iterator:()Lfreemarker/template/TemplateModelIterator;
      33: goto          40
      36: aload_0
      37: getfield      #13                 // Field openedIteratorModel:Lfreemarker/template/TemplateModelIterator;
      40: astore        5
      42: aload_0
      43: aload         5
      45: invokeinterface #15,  1           // InterfaceMethod freemarker/template/TemplateModelIterator.hasNext:()Z
      50: putfield      #16                 // Field hasNext:Z
      53: aload_0
      54: getfield      #16                 // Field hasNext:Z
      57: istore_3
      58: iload_3
      59: ifeq          140
      62: aload_0
      63: getfield      #5                  // Field loopVarName:Ljava/lang/String;
      66: ifnull        129
      69: aload_0
      70: getfield      #16                 // Field hasNext:Z
      73: ifeq          116
      76: aload_0
      77: aload         5
      79: invokeinterface #17,  1           // InterfaceMethod freemarker/template/TemplateModelIterator.next:()Lfreemarker/template/TemplateModel;
      84: putfield      #18                 // Field loopVar:Lfreemarker/template/TemplateModel;
      87: aload_0
      88: aload         5
      90: invokeinterface #15,  1           // InterfaceMethod freemarker/template/TemplateModelIterator.hasNext:()Z
      95: putfield      #16                 // Field hasNext:Z
      98: aload_1
      99: aload_2
     100: invokevirtual #19                 // Method freemarker/core/Environment.visit:([Lfreemarker/core/TemplateElement;)V
     103: aload_0
     104: dup
     105: getfield      #20                 // Field index:I
     108: iconst_1
     109: iadd
     110: putfield      #20                 // Field index:I
     113: goto          69
     116: goto          121
     119: astore        6
     121: aload_0
     122: aconst_null
     123: putfield      #13                 // Field openedIteratorModel:Lfreemarker/template/TemplateModelIterator;
     126: goto          140
     129: aload_0
     130: aload         5
     132: putfield      #13                 // Field openedIteratorModel:Lfreemarker/template/TemplateModelIterator;
     135: aload_1
     136: aload_2
     137: invokevirtual #19                 // Method freemarker/core/Environment.visit:([Lfreemarker/core/TemplateElement;)V
     140: goto          338
     143: aload_0
     144: getfield      #4                  // Field listValue:Lfreemarker/template/TemplateModel;
     147: instanceof    #22                 // class freemarker/template/TemplateSequenceModel
     150: ifeq          276
     153: aload_0
     154: getfield      #4                  // Field listValue:Lfreemarker/template/TemplateModel;
     157: checkcast     #22                 // class freemarker/template/TemplateSequenceModel
     160: astore        4
     162: aload         4
     164: invokeinterface #23,  1           // InterfaceMethod freemarker/template/TemplateSequenceModel.size:()I
     169: istore        5
     171: iload         5
     173: ifeq          180
     176: iconst_1
     177: goto          181
     180: iconst_0
     181: istore_3
     182: iload_3
     183: ifeq          273
     186: aload_0
     187: getfield      #5                  // Field loopVarName:Ljava/lang/String;
     190: ifnull        268
     193: aload_0
     194: iconst_0
     195: putfield      #20                 // Field index:I
     198: aload_0
     199: getfield      #20                 // Field index:I
     202: iload         5
     204: if_icmpge     260
     207: aload_0
     208: aload         4
     210: aload_0
     211: getfield      #20                 // Field index:I
     214: invokeinterface #24,  2           // InterfaceMethod freemarker/template/TemplateSequenceModel.get:(I)Lfreemarker/template/TemplateModel;
     219: putfield      #18                 // Field loopVar:Lfreemarker/template/TemplateModel;
     222: aload_0
     223: iload         5
     225: aload_0
     226: getfield      #20                 // Field index:I
     229: iconst_1
     230: iadd
     231: if_icmple     238
     234: iconst_1
     235: goto          239
     238: iconst_0
     239: putfield      #16                 // Field hasNext:Z
     242: aload_1
     243: aload_2
     244: invokevirtual #19                 // Method freemarker/core/Environment.visit:([Lfreemarker/core/TemplateElement;)V
     247: aload_0
     248: dup
     249: getfield      #20                 // Field index:I
     252: iconst_1
     253: iadd
     254: putfield      #20                 // Field index:I
     257: goto          198
     260: goto          273
     263: astore        6
     265: goto          273
     268: aload_1
     269: aload_2
     270: invokevirtual #19                 // Method freemarker/core/Environment.visit:([Lfreemarker/core/TemplateElement;)V
     273: goto          338
     276: aload_1
     277: invokevirtual #25                 // Method freemarker/core/Environment.isClassicCompatible:()Z
     280: ifeq          318
     283: iconst_1
     284: istore_3
     285: aload_0
     286: getfield      #5                  // Field loopVarName:Ljava/lang/String;
     289: ifnull        305
     292: aload_0
     293: aload_0
     294: getfield      #4                  // Field listValue:Lfreemarker/template/TemplateModel;
     297: putfield      #18                 // Field loopVar:Lfreemarker/template/TemplateModel;
     300: aload_0
     301: iconst_0
     302: putfield      #16                 // Field hasNext:Z
     305: aload_1
     306: aload_2
     307: invokevirtual #19                 // Method freemarker/core/Environment.visit:([Lfreemarker/core/TemplateElement;)V
     310: goto          338
     313: astore        4
     315: goto          338
     318: new           #26                 // class freemarker/core/NonSequenceOrCollectionException
     321: dup
     322: aload_0
     323: getfield      #1                  // Field this$0:Lfreemarker/core/IteratorBlock;
     326: invokestatic  #27                 // Method freemarker/core/IteratorBlock.access$000:(Lfreemarker/core/IteratorBlock;)Lfreemarker/core/Expression;
     329: aload_0
     330: getfield      #4                  // Field listValue:Lfreemarker/template/TemplateModel;
     333: aload_1
     334: invokespecial #28                 // Method freemarker/core/NonSequenceOrCollectionException."<init>":(Lfreemarker/core/Expression;Lfreemarker/template/TemplateModel;Lfreemarker/core/Environment;)V
     337: athrow
     338: iload_3
     339: ireturn
    Exception table:
       from    to  target type
          69   116   119   Class freemarker/core/BreakInstruction$Break
         193   260   263   Class freemarker/core/BreakInstruction$Break
         305   310   313   Class freemarker/core/BreakInstruction$Break

  java.lang.String getLoopVariableName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field loopVarName:Ljava/lang/String;
       4: areturn

  public freemarker.template.TemplateModel getLocalVariable(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field loopVarName:Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ifnull        112
       9: aload_1
      10: aload_2
      11: invokevirtual #29                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      14: ifeq          112
      17: aload_1
      18: invokevirtual #30                 // Method java/lang/String.length:()I
      21: aload_2
      22: invokevirtual #30                 // Method java/lang/String.length:()I
      25: isub
      26: lookupswitch  { // 3
                     0: 60
                     6: 65
                     9: 86
               default: 112
          }
      60: aload_0
      61: getfield      #18                 // Field loopVar:Lfreemarker/template/TemplateModel;
      64: areturn
      65: aload_1
      66: ldc           #32                 // String _index
      68: invokevirtual #33                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      71: ifeq          112
      74: new           #34                 // class freemarker/template/SimpleNumber
      77: dup
      78: aload_0
      79: getfield      #20                 // Field index:I
      82: invokespecial #35                 // Method freemarker/template/SimpleNumber."<init>":(I)V
      85: areturn
      86: aload_1
      87: ldc           #36                 // String _has_next
      89: invokevirtual #33                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      92: ifeq          112
      95: aload_0
      96: getfield      #16                 // Field hasNext:Z
      99: ifeq          108
     102: getstatic     #37                 // Field freemarker/template/TemplateBooleanModel.TRUE:Lfreemarker/template/TemplateBooleanModel;
     105: goto          111
     108: getstatic     #38                 // Field freemarker/template/TemplateBooleanModel.FALSE:Lfreemarker/template/TemplateBooleanModel;
     111: areturn
     112: aconst_null
     113: areturn

  public java.util.Collection getLocalVariableNames();
    Code:
       0: aload_0
       1: getfield      #5                  // Field loopVarName:Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnull        102
       9: aload_0
      10: getfield      #3                  // Field localVarNames:Ljava/util/Collection;
      13: ifnonnull     97
      16: aload_0
      17: new           #39                 // class java/util/ArrayList
      20: dup
      21: iconst_3
      22: invokespecial #40                 // Method java/util/ArrayList."<init>":(I)V
      25: putfield      #3                  // Field localVarNames:Ljava/util/Collection;
      28: aload_0
      29: getfield      #3                  // Field localVarNames:Ljava/util/Collection;
      32: aload_1
      33: invokeinterface #41,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      38: pop
      39: aload_0
      40: getfield      #3                  // Field localVarNames:Ljava/util/Collection;
      43: new           #42                 // class java/lang/StringBuilder
      46: dup
      47: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      50: aload_1
      51: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc           #32                 // String _index
      56: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokeinterface #41,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      67: pop
      68: aload_0
      69: getfield      #3                  // Field localVarNames:Ljava/util/Collection;
      72: new           #42                 // class java/lang/StringBuilder
      75: dup
      76: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      79: aload_1
      80: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: ldc           #36                 // String _has_next
      85: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: invokeinterface #41,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      96: pop
      97: aload_0
      98: getfield      #3                  // Field localVarNames:Ljava/util/Collection;
     101: areturn
     102: getstatic     #46                 // Field java/util/Collections.EMPTY_LIST:Ljava/util/List;
     105: areturn

  boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #16                 // Field hasNext:Z
       4: ireturn

  int getIndex();
    Code:
       0: aload_0
       1: getfield      #20                 // Field index:I
       4: ireturn
}
