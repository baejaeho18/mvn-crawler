Compiled from "TrimInstruction.java"
final class freemarker.core.TrimInstruction extends freemarker.core.TemplateElement {
  private final int TYPE_T;

  private final int TYPE_LT;

  private final int TYPE_RT;

  private final int TYPE_NT;

  final boolean left;

  final boolean right;

  freemarker.core.TrimInstruction(boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method freemarker/core/TemplateElement."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field TYPE_T:I
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field TYPE_LT:I
      14: aload_0
      15: iconst_2
      16: putfield      #4                  // Field TYPE_RT:I
      19: aload_0
      20: iconst_3
      21: putfield      #5                  // Field TYPE_NT:I
      24: aload_0
      25: iload_1
      26: putfield      #6                  // Field left:Z
      29: aload_0
      30: iload_2
      31: putfield      #7                  // Field right:Z
      34: return

  freemarker.core.TemplateElement[] accept(freemarker.core.Environment);
    Code:
       0: aconst_null
       1: areturn

  protected java.lang.String dump(boolean);
    Code:
       0: new           #8                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: iload_1
       9: ifeq          19
      12: aload_2
      13: bipush        60
      15: invokevirtual #10                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      18: pop
      19: aload_2
      20: aload_0
      21: invokevirtual #11                 // Method getNodeTypeSymbol:()Ljava/lang/String;
      24: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: pop
      28: iload_1
      29: ifeq          39
      32: aload_2
      33: ldc           #13                 // String />
      35: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: pop
      39: aload_2
      40: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: areturn

  java.lang.String getNodeTypeSymbol();
    Code:
       0: aload_0
       1: getfield      #6                  // Field left:Z
       4: ifeq          17
       7: aload_0
       8: getfield      #7                  // Field right:Z
      11: ifeq          17
      14: ldc           #15                 // String #t
      16: areturn
      17: aload_0
      18: getfield      #6                  // Field left:Z
      21: ifeq          27
      24: ldc           #16                 // String #lt
      26: areturn
      27: aload_0
      28: getfield      #7                  // Field right:Z
      31: ifeq          37
      34: ldc           #17                 // String #rt
      36: areturn
      37: ldc           #18                 // String #nt
      39: areturn

  boolean isIgnorable(boolean);
    Code:
       0: iconst_1
       1: ireturn

  int getParameterCount();
    Code:
       0: iconst_1
       1: ireturn

  java.lang.Object getParameterValue(int);
    Code:
       0: iload_1
       1: ifeq          12
       4: new           #19                 // class java/lang/IndexOutOfBoundsException
       7: dup
       8: invokespecial #20                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      11: athrow
      12: aload_0
      13: getfield      #6                  // Field left:Z
      16: ifeq          31
      19: aload_0
      20: getfield      #7                  // Field right:Z
      23: ifeq          31
      26: iconst_0
      27: istore_2
      28: goto          57
      31: aload_0
      32: getfield      #6                  // Field left:Z
      35: ifeq          43
      38: iconst_1
      39: istore_2
      40: goto          57
      43: aload_0
      44: getfield      #7                  // Field right:Z
      47: ifeq          55
      50: iconst_2
      51: istore_2
      52: goto          57
      55: iconst_3
      56: istore_2
      57: iload_2
      58: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      61: areturn

  freemarker.core.ParameterRole getParameterRole(int);
    Code:
       0: iload_1
       1: ifeq          12
       4: new           #19                 // class java/lang/IndexOutOfBoundsException
       7: dup
       8: invokespecial #20                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      11: athrow
      12: getstatic     #23                 // Field freemarker/core/ParameterRole.AST_NODE_SUBTYPE:Lfreemarker/core/ParameterRole;
      15: areturn

  boolean isOutputCacheable();
    Code:
       0: iconst_1
       1: ireturn

  boolean isNestedBlockRepeater();
    Code:
       0: iconst_0
       1: ireturn
}
