Compiled from "CollectionAndSequence.java"
class freemarker.core.CollectionAndSequence$SequenceIterator implements freemarker.template.TemplateModelIterator {
  private final freemarker.template.TemplateSequenceModel sequence;

  private final int size;

  private int index;

  freemarker.core.CollectionAndSequence$SequenceIterator(freemarker.template.TemplateSequenceModel) throws freemarker.template.TemplateModelException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field index:I
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field sequence:Lfreemarker/template/TemplateSequenceModel;
      14: aload_0
      15: aload_1
      16: invokeinterface #4,  1            // InterfaceMethod freemarker/template/TemplateSequenceModel.size:()I
      21: putfield      #5                  // Field size:I
      24: return

  public freemarker.template.TemplateModel next() throws freemarker.template.TemplateModelException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field sequence:Lfreemarker/template/TemplateSequenceModel;
       4: aload_0
       5: dup
       6: getfield      #2                  // Field index:I
       9: dup_x1
      10: iconst_1
      11: iadd
      12: putfield      #2                  // Field index:I
      15: invokeinterface #6,  2            // InterfaceMethod freemarker/template/TemplateSequenceModel.get:(I)Lfreemarker/template/TemplateModel;
      20: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field index:I
       4: aload_0
       5: getfield      #5                  // Field size:I
       8: if_icmpge     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn
}
