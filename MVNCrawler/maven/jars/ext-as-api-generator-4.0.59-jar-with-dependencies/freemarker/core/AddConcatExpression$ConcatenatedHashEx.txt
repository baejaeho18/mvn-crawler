Compiled from "AddConcatExpression.java"
final class freemarker.core.AddConcatExpression$ConcatenatedHashEx extends freemarker.core.AddConcatExpression$ConcatenatedHash implements freemarker.template.TemplateHashModelEx {
  private freemarker.core.CollectionAndSequence keys;

  private freemarker.core.CollectionAndSequence values;

  private int size;

  freemarker.core.AddConcatExpression$ConcatenatedHashEx(freemarker.template.TemplateHashModelEx, freemarker.template.TemplateHashModelEx);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method freemarker/core/AddConcatExpression$ConcatenatedHash."<init>":(Lfreemarker/template/TemplateHashModel;Lfreemarker/template/TemplateHashModel;)V
       6: return

  public int size() throws freemarker.template.TemplateModelException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method initKeys:()V
       4: aload_0
       5: getfield      #3                  // Field size:I
       8: ireturn

  public freemarker.template.TemplateCollectionModel keys() throws freemarker.template.TemplateModelException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method initKeys:()V
       4: aload_0
       5: getfield      #4                  // Field keys:Lfreemarker/core/CollectionAndSequence;
       8: areturn

  public freemarker.template.TemplateCollectionModel values() throws freemarker.template.TemplateModelException;
    Code:
       0: aload_0
       1: invokespecial #5                  // Method initValues:()V
       4: aload_0
       5: getfield      #6                  // Field values:Lfreemarker/core/CollectionAndSequence;
       8: areturn

  private void initKeys() throws freemarker.template.TemplateModelException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field keys:Lfreemarker/core/CollectionAndSequence;
       4: ifnonnull     69
       7: new           #7                  // class java/util/HashSet
      10: dup
      11: invokespecial #8                  // Method java/util/HashSet."<init>":()V
      14: astore_1
      15: new           #9                  // class freemarker/template/SimpleSequence
      18: dup
      19: bipush        32
      21: invokespecial #10                 // Method freemarker/template/SimpleSequence."<init>":(I)V
      24: astore_2
      25: aload_1
      26: aload_2
      27: aload_0
      28: getfield      #11                 // Field left:Lfreemarker/template/TemplateHashModel;
      31: checkcast     #12                 // class freemarker/template/TemplateHashModelEx
      34: invokestatic  #13                 // Method addKeys:(Ljava/util/Set;Lfreemarker/template/SimpleSequence;Lfreemarker/template/TemplateHashModelEx;)V
      37: aload_1
      38: aload_2
      39: aload_0
      40: getfield      #14                 // Field right:Lfreemarker/template/TemplateHashModel;
      43: checkcast     #12                 // class freemarker/template/TemplateHashModelEx
      46: invokestatic  #13                 // Method addKeys:(Ljava/util/Set;Lfreemarker/template/SimpleSequence;Lfreemarker/template/TemplateHashModelEx;)V
      49: aload_0
      50: aload_1
      51: invokevirtual #15                 // Method java/util/HashSet.size:()I
      54: putfield      #3                  // Field size:I
      57: aload_0
      58: new           #16                 // class freemarker/core/CollectionAndSequence
      61: dup
      62: aload_2
      63: invokespecial #17                 // Method freemarker/core/CollectionAndSequence."<init>":(Lfreemarker/template/TemplateSequenceModel;)V
      66: putfield      #4                  // Field keys:Lfreemarker/core/CollectionAndSequence;
      69: return

  private static void addKeys(java.util.Set, freemarker.template.SimpleSequence, freemarker.template.TemplateHashModelEx) throws freemarker.template.TemplateModelException;
    Code:
       0: aload_2
       1: invokeinterface #18,  1           // InterfaceMethod freemarker/template/TemplateHashModelEx.keys:()Lfreemarker/template/TemplateCollectionModel;
       6: invokeinterface #19,  1           // InterfaceMethod freemarker/template/TemplateCollectionModel.iterator:()Lfreemarker/template/TemplateModelIterator;
      11: astore_3
      12: aload_3
      13: invokeinterface #20,  1           // InterfaceMethod freemarker/template/TemplateModelIterator.hasNext:()Z
      18: ifeq          57
      21: aload_3
      22: invokeinterface #21,  1           // InterfaceMethod freemarker/template/TemplateModelIterator.next:()Lfreemarker/template/TemplateModel;
      27: checkcast     #22                 // class freemarker/template/TemplateScalarModel
      30: astore        4
      32: aload_0
      33: aload         4
      35: invokeinterface #23,  1           // InterfaceMethod freemarker/template/TemplateScalarModel.getAsString:()Ljava/lang/String;
      40: invokeinterface #24,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      45: ifeq          54
      48: aload_1
      49: aload         4
      51: invokevirtual #25                 // Method freemarker/template/SimpleSequence.add:(Ljava/lang/Object;)V
      54: goto          12
      57: return

  private void initValues() throws freemarker.template.TemplateModelException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field values:Lfreemarker/core/CollectionAndSequence;
       4: ifnonnull     76
       7: new           #9                  // class freemarker/template/SimpleSequence
      10: dup
      11: aload_0
      12: invokevirtual #26                 // Method size:()I
      15: invokespecial #10                 // Method freemarker/template/SimpleSequence."<init>":(I)V
      18: astore_1
      19: aload_0
      20: getfield      #4                  // Field keys:Lfreemarker/core/CollectionAndSequence;
      23: invokevirtual #27                 // Method freemarker/core/CollectionAndSequence.size:()I
      26: istore_2
      27: iconst_0
      28: istore_3
      29: iload_3
      30: iload_2
      31: if_icmpge     64
      34: aload_1
      35: aload_0
      36: aload_0
      37: getfield      #4                  // Field keys:Lfreemarker/core/CollectionAndSequence;
      40: iload_3
      41: invokevirtual #28                 // Method freemarker/core/CollectionAndSequence.get:(I)Lfreemarker/template/TemplateModel;
      44: checkcast     #22                 // class freemarker/template/TemplateScalarModel
      47: invokeinterface #23,  1           // InterfaceMethod freemarker/template/TemplateScalarModel.getAsString:()Ljava/lang/String;
      52: invokevirtual #29                 // Method get:(Ljava/lang/String;)Lfreemarker/template/TemplateModel;
      55: invokevirtual #25                 // Method freemarker/template/SimpleSequence.add:(Ljava/lang/Object;)V
      58: iinc          3, 1
      61: goto          29
      64: aload_0
      65: new           #16                 // class freemarker/core/CollectionAndSequence
      68: dup
      69: aload_1
      70: invokespecial #17                 // Method freemarker/core/CollectionAndSequence."<init>":(Lfreemarker/template/TemplateSequenceModel;)V
      73: putfield      #6                  // Field values:Lfreemarker/core/CollectionAndSequence;
      76: return
}
