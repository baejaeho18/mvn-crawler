Compiled from "NestedContentNotSupportedException.java"
class freemarker.core.NestedContentNotSupportedException extends freemarker.template.TemplateException {
  public static void check(freemarker.template.TemplateDirectiveBody) throws freemarker.core.NestedContentNotSupportedException;
    Code:
       0: aload_0
       1: ifnonnull     5
       4: return
       5: aload_0
       6: instanceof    #1                  // class freemarker/core/Environment$NestedElementTemplateDirectiveBody
       9: ifeq          51
      12: aload_0
      13: checkcast     #1                  // class freemarker/core/Environment$NestedElementTemplateDirectiveBody
      16: invokevirtual #2                  // Method freemarker/core/Environment$NestedElementTemplateDirectiveBody.getChildrenBuffer:()[Lfreemarker/core/TemplateElement;
      19: astore_1
      20: aload_1
      21: ifnull        50
      24: aload_1
      25: arraylength
      26: ifeq          50
      29: aload_1
      30: iconst_0
      31: aaload
      32: instanceof    #3                  // class freemarker/core/ThreadInterruptionSupportTemplatePostProcessor$ThreadInterruptionCheck
      35: ifeq          51
      38: aload_1
      39: arraylength
      40: iconst_1
      41: if_icmpeq     50
      44: aload_1
      45: iconst_1
      46: aaload
      47: ifnonnull     51
      50: return
      51: new           #4                  // class freemarker/core/NestedContentNotSupportedException
      54: dup
      55: invokestatic  #5                  // Method freemarker/core/Environment.getCurrentEnvironment:()Lfreemarker/core/Environment;
      58: invokespecial #6                  // Method "<init>":(Lfreemarker/core/Environment;)V
      61: athrow

  private freemarker.core.NestedContentNotSupportedException(freemarker.core.Environment);
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: aload_1
       4: invokespecial #7                  // Method "<init>":(Ljava/lang/String;Ljava/lang/Exception;Lfreemarker/core/Environment;)V
       7: return

  private freemarker.core.NestedContentNotSupportedException(java.lang.Exception, freemarker.core.Environment);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: invokespecial #7                  // Method "<init>":(Ljava/lang/String;Ljava/lang/Exception;Lfreemarker/core/Environment;)V
       7: return

  private freemarker.core.NestedContentNotSupportedException(java.lang.String, freemarker.core.Environment);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokespecial #7                  // Method "<init>":(Ljava/lang/String;Ljava/lang/Exception;Lfreemarker/core/Environment;)V
       7: return

  private freemarker.core.NestedContentNotSupportedException(java.lang.String, java.lang.Exception, freemarker.core.Environment);
    Code:
       0: aload_0
       1: new           #8                  // class java/lang/StringBuilder
       4: dup
       5: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #10                 // String Nested content (body) not supported.
      10: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_1
      14: ifnull        42
      17: new           #8                  // class java/lang/StringBuilder
      20: dup
      21: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #12                 // String
      26: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: invokestatic  #13                 // Method freemarker/template/utility/StringUtil.jQuote:(Ljava/lang/String;)Ljava/lang/String;
      33: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: goto          44
      42: ldc           #15                 // String
      44: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: aload_2
      51: aload_3
      52: invokespecial #16                 // Method freemarker/template/TemplateException."<init>":(Ljava/lang/String;Ljava/lang/Exception;Lfreemarker/core/Environment;)V
      55: return
}
