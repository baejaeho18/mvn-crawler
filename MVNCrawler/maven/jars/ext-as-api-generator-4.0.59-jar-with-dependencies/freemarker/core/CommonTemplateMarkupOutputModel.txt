Compiled from "CommonTemplateMarkupOutputModel.java"
public abstract class freemarker.core.CommonTemplateMarkupOutputModel<MO extends freemarker.core.CommonTemplateMarkupOutputModel<MO>> implements freemarker.core.TemplateMarkupOutputModel<MO> {
  private final java.lang.String plainTextContent;

  private java.lang.String markupContet;

  protected freemarker.core.CommonTemplateMarkupOutputModel(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field plainTextContent:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field markupContet:Ljava/lang/String;
      14: return

  public abstract freemarker.core.CommonMarkupOutputFormat<MO> getOutputFormat();

  final java.lang.String getPlainTextContent();
    Code:
       0: aload_0
       1: getfield      #2                  // Field plainTextContent:Ljava/lang/String;
       4: areturn

  final java.lang.String getMarkupContent();
    Code:
       0: aload_0
       1: getfield      #3                  // Field markupContet:Ljava/lang/String;
       4: areturn

  final void setMarkupContet(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field markupContet:Ljava/lang/String;
       5: return

  public freemarker.core.MarkupOutputFormat getOutputFormat();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getOutputFormat:()Lfreemarker/core/CommonMarkupOutputFormat;
       4: areturn
}
