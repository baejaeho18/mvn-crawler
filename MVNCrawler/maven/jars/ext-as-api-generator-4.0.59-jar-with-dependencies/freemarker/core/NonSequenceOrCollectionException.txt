Compiled from "NonSequenceOrCollectionException.java"
public class freemarker.core.NonSequenceOrCollectionException extends freemarker.core.UnexpectedTypeException {
  private static final java.lang.Class[] EXPECTED_TYPES;

  public freemarker.core.NonSequenceOrCollectionException(freemarker.core.Environment);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #1                  // String Expecting sequence or collection value here
       4: invokespecial #2                  // Method freemarker/core/UnexpectedTypeException."<init>":(Lfreemarker/core/Environment;Ljava/lang/String;)V
       7: return

  public freemarker.core.NonSequenceOrCollectionException(java.lang.String, freemarker.core.Environment);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokespecial #2                  // Method freemarker/core/UnexpectedTypeException."<init>":(Lfreemarker/core/Environment;Ljava/lang/String;)V
       6: return

  freemarker.core.NonSequenceOrCollectionException(freemarker.core.Environment, freemarker.core._ErrorDescriptionBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #3                  // Method freemarker/core/UnexpectedTypeException."<init>":(Lfreemarker/core/Environment;Lfreemarker/core/_ErrorDescriptionBuilder;)V
       6: return

  freemarker.core.NonSequenceOrCollectionException(freemarker.core.Expression, freemarker.template.TemplateModel, freemarker.core.Environment) throws freemarker.core.InvalidReferenceException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc           #4                  // String sequence or collection
       5: getstatic     #5                  // Field EXPECTED_TYPES:[Ljava/lang/Class;
       8: aload_3
       9: invokespecial #6                  // Method freemarker/core/UnexpectedTypeException."<init>":(Lfreemarker/core/Expression;Lfreemarker/template/TemplateModel;Ljava/lang/String;[Ljava/lang/Class;Lfreemarker/core/Environment;)V
      12: return

  freemarker.core.NonSequenceOrCollectionException(freemarker.core.Expression, freemarker.template.TemplateModel, java.lang.String, freemarker.core.Environment) throws freemarker.core.InvalidReferenceException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc           #4                  // String sequence or collection
       5: getstatic     #5                  // Field EXPECTED_TYPES:[Ljava/lang/Class;
       8: aload_3
       9: aload         4
      11: invokespecial #7                  // Method freemarker/core/UnexpectedTypeException."<init>":(Lfreemarker/core/Expression;Lfreemarker/template/TemplateModel;Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/String;Lfreemarker/core/Environment;)V
      14: return

  freemarker.core.NonSequenceOrCollectionException(freemarker.core.Expression, freemarker.template.TemplateModel, java.lang.String[], freemarker.core.Environment) throws freemarker.core.InvalidReferenceException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc           #4                  // String sequence or collection
       5: getstatic     #5                  // Field EXPECTED_TYPES:[Ljava/lang/Class;
       8: aload_3
       9: aload         4
      11: invokespecial #8                  // Method freemarker/core/UnexpectedTypeException."<init>":(Lfreemarker/core/Expression;Lfreemarker/template/TemplateModel;Ljava/lang/String;[Ljava/lang/Class;[Ljava/lang/Object;Lfreemarker/core/Environment;)V
      14: return

  static {};
    Code:
       0: iconst_2
       1: anewarray     #9                  // class java/lang/Class
       4: dup
       5: iconst_0
       6: ldc           #10                 // class freemarker/template/TemplateSequenceModel
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #11                 // class freemarker/template/TemplateCollectionModel
      13: aastore
      14: putstatic     #5                  // Field EXPECTED_TYPES:[Ljava/lang/Class;
      17: return
}
