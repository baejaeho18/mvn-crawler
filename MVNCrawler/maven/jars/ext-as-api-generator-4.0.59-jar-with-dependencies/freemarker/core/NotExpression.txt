Compiled from "NotExpression.java"
final class freemarker.core.NotExpression extends freemarker.core.BooleanExpression {
  private final freemarker.core.Expression target;

  freemarker.core.NotExpression(freemarker.core.Expression);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method freemarker/core/BooleanExpression."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field target:Lfreemarker/core/Expression;
       9: return

  boolean evalToBoolean(freemarker.core.Environment) throws freemarker.template.TemplateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field target:Lfreemarker/core/Expression;
       4: aload_1
       5: invokevirtual #3                  // Method freemarker/core/Expression.evalToBoolean:(Lfreemarker/core/Environment;)Z
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public java.lang.String getCanonicalForm();
    Code:
       0: new           #4                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #6                  // String !
       9: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field target:Lfreemarker/core/Expression;
      16: invokevirtual #8                  // Method freemarker/core/Expression.getCanonicalForm:()Ljava/lang/String;
      19: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: areturn

  java.lang.String getNodeTypeSymbol();
    Code:
       0: ldc           #6                  // String !
       2: areturn

  boolean isLiteral();
    Code:
       0: aload_0
       1: getfield      #2                  // Field target:Lfreemarker/core/Expression;
       4: invokevirtual #10                 // Method freemarker/core/Expression.isLiteral:()Z
       7: ireturn

  protected freemarker.core.Expression deepCloneWithIdentifierReplaced_inner(java.lang.String, freemarker.core.Expression, freemarker.core.Expression$ReplacemenetState);
    Code:
       0: new           #11                 // class freemarker/core/NotExpression
       3: dup
       4: aload_0
       5: getfield      #2                  // Field target:Lfreemarker/core/Expression;
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokevirtual #12                 // Method freemarker/core/Expression.deepCloneWithIdentifierReplaced:(Ljava/lang/String;Lfreemarker/core/Expression;Lfreemarker/core/Expression$ReplacemenetState;)Lfreemarker/core/Expression;
      14: invokespecial #13                 // Method "<init>":(Lfreemarker/core/Expression;)V
      17: areturn

  int getParameterCount();
    Code:
       0: iconst_1
       1: ireturn

  java.lang.Object getParameterValue(int);
    Code:
       0: iload_1
       1: ifeq          12
       4: new           #14                 // class java/lang/IndexOutOfBoundsException
       7: dup
       8: invokespecial #15                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      11: athrow
      12: aload_0
      13: getfield      #2                  // Field target:Lfreemarker/core/Expression;
      16: areturn

  freemarker.core.ParameterRole getParameterRole(int);
    Code:
       0: iload_1
       1: ifeq          12
       4: new           #14                 // class java/lang/IndexOutOfBoundsException
       7: dup
       8: invokespecial #15                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      11: athrow
      12: getstatic     #16                 // Field freemarker/core/ParameterRole.RIGHT_HAND_OPERAND:Lfreemarker/core/ParameterRole;
      15: areturn
}
