Compiled from "APINotSupportedTemplateException.java"
class freemarker.core.APINotSupportedTemplateException extends freemarker.template.TemplateException {
  freemarker.core.APINotSupportedTemplateException(freemarker.core.Environment, freemarker.core.Expression, freemarker.template.TemplateModel);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokestatic  #1                  // Method buildDescription:(Lfreemarker/core/Environment;Lfreemarker/core/Expression;Lfreemarker/template/TemplateModel;)Lfreemarker/core/_ErrorDescriptionBuilder;
      10: invokespecial #2                  // Method freemarker/template/TemplateException."<init>":(Ljava/lang/Throwable;Lfreemarker/core/Environment;Lfreemarker/core/Expression;Lfreemarker/core/_ErrorDescriptionBuilder;)V
      13: return

  protected static freemarker.core._ErrorDescriptionBuilder buildDescription(freemarker.core.Environment, freemarker.core.Expression, freemarker.template.TemplateModel);
    Code:
       0: new           #3                  // class freemarker/core/_ErrorDescriptionBuilder
       3: dup
       4: bipush        7
       6: anewarray     #4                  // class java/lang/Object
       9: dup
      10: iconst_0
      11: ldc           #5                  // String The value doesn\'t support ?api. See requirements in the FreeMarker Manual. (FTL type:
      13: aastore
      14: dup
      15: iconst_1
      16: new           #6                  // class freemarker/core/_DelayedFTLTypeDescription
      19: dup
      20: aload_2
      21: invokespecial #7                  // Method freemarker/core/_DelayedFTLTypeDescription."<init>":(Lfreemarker/template/TemplateModel;)V
      24: aastore
      25: dup
      26: iconst_2
      27: ldc           #8                  // String , TemplateModel class:
      29: aastore
      30: dup
      31: iconst_3
      32: new           #9                  // class freemarker/core/_DelayedShortClassName
      35: dup
      36: aload_2
      37: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      40: invokespecial #11                 // Method freemarker/core/_DelayedShortClassName."<init>":(Ljava/lang/Class;)V
      43: aastore
      44: dup
      45: iconst_4
      46: ldc           #12                 // String , ObjectWapper:
      48: aastore
      49: dup
      50: iconst_5
      51: new           #13                 // class freemarker/core/_DelayedToString
      54: dup
      55: aload_0
      56: invokevirtual #14                 // Method freemarker/core/Environment.getObjectWrapper:()Lfreemarker/template/ObjectWrapper;
      59: invokespecial #15                 // Method freemarker/core/_DelayedToString."<init>":(Ljava/lang/Object;)V
      62: aastore
      63: dup
      64: bipush        6
      66: ldc           #16                 // String )
      68: aastore
      69: invokespecial #17                 // Method freemarker/core/_ErrorDescriptionBuilder."<init>":([Ljava/lang/Object;)V
      72: aload_1
      73: invokevirtual #18                 // Method freemarker/core/_ErrorDescriptionBuilder.blame:(Lfreemarker/core/Expression;)Lfreemarker/core/_ErrorDescriptionBuilder;
      76: astore_3
      77: aload_1
      78: invokevirtual #19                 // Method freemarker/core/Expression.isLiteral:()Z
      81: ifeq          94
      84: aload_3
      85: ldc           #20                 // String Only adapted Java objects can possibly have API, not values created inside templates.
      87: invokevirtual #21                 // Method freemarker/core/_ErrorDescriptionBuilder.tip:(Ljava/lang/String;)Lfreemarker/core/_ErrorDescriptionBuilder;
      90: pop
      91: goto          224
      94: aload_0
      95: invokevirtual #14                 // Method freemarker/core/Environment.getObjectWrapper:()Lfreemarker/template/ObjectWrapper;
      98: astore        4
     100: aload         4
     102: instanceof    #22                 // class freemarker/template/DefaultObjectWrapper
     105: ifeq          224
     108: aload_2
     109: instanceof    #23                 // class freemarker/template/SimpleHash
     112: ifne          122
     115: aload_2
     116: instanceof    #24                 // class freemarker/template/SimpleSequence
     119: ifeq          224
     122: aload         4
     124: checkcast     #22                 // class freemarker/template/DefaultObjectWrapper
     127: astore        5
     129: aload         5
     131: invokevirtual #25                 // Method freemarker/template/DefaultObjectWrapper.getUseAdaptersForContainers:()Z
     134: ifne          185
     137: aload_3
     138: iconst_3
     139: anewarray     #4                  // class java/lang/Object
     142: dup
     143: iconst_0
     144: ldc           #26                 // String In the FreeMarker configuration, \"
     146: aastore
     147: dup
     148: iconst_1
     149: ldc           #28                 // String object_wrapper
     151: aastore
     152: dup
     153: iconst_2
     154: ldc           #29                 // String \" is a DefaultObjectWrapper with its \"useAdaptersForContainers\" property set to false. Setting it to true might solves this problem.
     156: aastore
     157: invokevirtual #30                 // Method freemarker/core/_ErrorDescriptionBuilder.tip:([Ljava/lang/Object;)Lfreemarker/core/_ErrorDescriptionBuilder;
     160: pop
     161: aload         5
     163: invokevirtual #31                 // Method freemarker/template/DefaultObjectWrapper.getIncompatibleImprovements:()Lfreemarker/template/Version;
     166: invokevirtual #32                 // Method freemarker/template/Version.intValue:()I
     169: getstatic     #33                 // Field freemarker/template/_TemplateAPI.VERSION_INT_2_3_22:I
     172: if_icmpge     224
     175: aload_3
     176: ldc           #34                 // String Setting DefaultObjectWrapper\'s \"incompatibleImprovements\" to 2.3.22 or higher will change the default value of \"useAdaptersForContainers\" to true.
     178: invokevirtual #21                 // Method freemarker/core/_ErrorDescriptionBuilder.tip:(Ljava/lang/String;)Lfreemarker/core/_ErrorDescriptionBuilder;
     181: pop
     182: goto          224
     185: aload_2
     186: instanceof    #24                 // class freemarker/template/SimpleSequence
     189: ifeq          224
     192: aload         5
     194: invokevirtual #35                 // Method freemarker/template/DefaultObjectWrapper.getForceLegacyNonListCollections:()Z
     197: ifeq          224
     200: aload_3
     201: iconst_3
     202: anewarray     #4                  // class java/lang/Object
     205: dup
     206: iconst_0
     207: ldc           #26                 // String In the FreeMarker configuration, \"
     209: aastore
     210: dup
     211: iconst_1
     212: ldc           #28                 // String object_wrapper
     214: aastore
     215: dup
     216: iconst_2
     217: ldc           #36                 // String \" is a DefaultObjectWrapper with its \"forceLegacyNonListCollections\" property set to true. If you are trying to access the API of a non-List Collection, setting the \"forceLegacyNonListCollections\" property to false might solves this problem.
     219: aastore
     220: invokevirtual #30                 // Method freemarker/core/_ErrorDescriptionBuilder.tip:([Ljava/lang/Object;)Lfreemarker/core/_ErrorDescriptionBuilder;
     223: pop
     224: aload_3
     225: areturn
}
