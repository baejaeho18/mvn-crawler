Compiled from "CompressedBlock.java"
final class freemarker.core.CompressedBlock extends freemarker.core.TemplateElement {
  freemarker.core.CompressedBlock(freemarker.core.TemplateElements);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method freemarker/core/TemplateElement."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #2                  // Method setChildren:(Lfreemarker/core/TemplateElements;)V
       9: return

  freemarker.core.TemplateElement[] accept(freemarker.core.Environment) throws freemarker.template.TemplateException, java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getChildBuffer:()[Lfreemarker/core/TemplateElement;
       4: astore_2
       5: aload_2
       6: ifnull        18
       9: aload_1
      10: aload_2
      11: getstatic     #4                  // Field freemarker/template/utility/StandardCompress.INSTANCE:Lfreemarker/template/utility/StandardCompress;
      14: aconst_null
      15: invokevirtual #5                  // Method freemarker/core/Environment.visitAndTransform:([Lfreemarker/core/TemplateElement;Lfreemarker/template/TemplateTransformModel;Ljava/util/Map;)V
      18: aconst_null
      19: areturn

  protected java.lang.String dump(boolean);
    Code:
       0: iload_1
       1: ifeq          56
       4: new           #6                  // class java/lang/StringBuilder
       7: dup
       8: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #8                  // String <
      13: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #10                 // Method getNodeTypeSymbol:()Ljava/lang/String;
      20: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #11                 // String >
      25: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: invokevirtual #12                 // Method getChildrenCanonicalForm:()Ljava/lang/String;
      32: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #13                 // String </
      37: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: invokevirtual #10                 // Method getNodeTypeSymbol:()Ljava/lang/String;
      44: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc           #11                 // String >
      49: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: areturn
      56: aload_0
      57: invokevirtual #10                 // Method getNodeTypeSymbol:()Ljava/lang/String;
      60: areturn

  java.lang.String getNodeTypeSymbol();
    Code:
       0: ldc           #15                 // String #compress
       2: areturn

  int getParameterCount();
    Code:
       0: iconst_0
       1: ireturn

  java.lang.Object getParameterValue(int);
    Code:
       0: new           #16                 // class java/lang/IndexOutOfBoundsException
       3: dup
       4: invokespecial #17                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
       7: athrow

  freemarker.core.ParameterRole getParameterRole(int);
    Code:
       0: new           #16                 // class java/lang/IndexOutOfBoundsException
       3: dup
       4: invokespecial #17                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
       7: athrow

  boolean isIgnorable(boolean);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getChildCount:()I
       4: ifne          18
       7: aload_0
       8: invokevirtual #19                 // Method getParameterCount:()I
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  boolean isNestedBlockRepeater();
    Code:
       0: iconst_0
       1: ireturn
}
