Compiled from "MarkupOutputFormat.java"
public abstract class freemarker.core.MarkupOutputFormat<MO extends freemarker.core.TemplateMarkupOutputModel> extends freemarker.core.OutputFormat {
  protected freemarker.core.MarkupOutputFormat();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method freemarker/core/OutputFormat."<init>":()V
       4: return

  public abstract MO fromPlainTextByEscaping(java.lang.String) throws freemarker.template.TemplateModelException;

  public abstract MO fromMarkup(java.lang.String) throws freemarker.template.TemplateModelException;

  public abstract void output(MO, java.io.Writer) throws java.io.IOException, freemarker.template.TemplateModelException;

  public abstract void output(java.lang.String, java.io.Writer) throws java.io.IOException, freemarker.template.TemplateModelException;

  public abstract java.lang.String getSourcePlainText(MO) throws freemarker.template.TemplateModelException;

  public abstract java.lang.String getMarkupString(MO) throws freemarker.template.TemplateModelException;

  public abstract MO concat(MO, MO) throws freemarker.template.TemplateModelException;

  public abstract java.lang.String escapePlainText(java.lang.String) throws freemarker.template.TemplateModelException;

  public abstract boolean isEmpty(MO) throws freemarker.template.TemplateModelException;

  public abstract boolean isLegacyBuiltInBypassed(java.lang.String) throws freemarker.template.TemplateModelException;

  public abstract boolean isAutoEscapedByDefault();
}
