Compiled from "BuiltInsForMultipleTypes.java"
class freemarker.core.BuiltInsForMultipleTypes$stringBI$BooleanFormatter implements freemarker.template.TemplateScalarModel,freemarker.template.TemplateMethodModel {
  private final freemarker.template.TemplateBooleanModel bool;

  private final freemarker.core.Environment env;

  final freemarker.core.BuiltInsForMultipleTypes$stringBI this$0;

  freemarker.core.BuiltInsForMultipleTypes$stringBI$BooleanFormatter(freemarker.core.BuiltInsForMultipleTypes$stringBI, freemarker.template.TemplateBooleanModel, freemarker.core.Environment);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lfreemarker/core/BuiltInsForMultipleTypes$stringBI;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field bool:Lfreemarker/template/TemplateBooleanModel;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field env:Lfreemarker/core/Environment;
      19: return

  public java.lang.Object exec(java.util.List) throws freemarker.template.TemplateModelException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lfreemarker/core/BuiltInsForMultipleTypes$stringBI;
       4: aload_1
       5: iconst_2
       6: invokevirtual #5                  // Method freemarker/core/BuiltInsForMultipleTypes$stringBI.checkMethodArgCount:(Ljava/util/List;I)V
       9: new           #6                  // class freemarker/template/SimpleScalar
      12: dup
      13: aload_1
      14: aload_0
      15: getfield      #3                  // Field bool:Lfreemarker/template/TemplateBooleanModel;
      18: invokeinterface #7,  1            // InterfaceMethod freemarker/template/TemplateBooleanModel.getAsBoolean:()Z
      23: ifeq          30
      26: iconst_0
      27: goto          31
      30: iconst_1
      31: invokeinterface #8,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      36: checkcast     #9                  // class java/lang/String
      39: invokespecial #10                 // Method freemarker/template/SimpleScalar."<init>":(Ljava/lang/String;)V
      42: areturn

  public java.lang.String getAsString() throws freemarker.template.TemplateModelException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field bool:Lfreemarker/template/TemplateBooleanModel;
       4: instanceof    #11                 // class freemarker/template/TemplateScalarModel
       7: ifeq          23
      10: aload_0
      11: getfield      #3                  // Field bool:Lfreemarker/template/TemplateBooleanModel;
      14: checkcast     #11                 // class freemarker/template/TemplateScalarModel
      17: invokeinterface #12,  1           // InterfaceMethod freemarker/template/TemplateScalarModel.getAsString:()Ljava/lang/String;
      22: areturn
      23: aload_0
      24: getfield      #4                  // Field env:Lfreemarker/core/Environment;
      27: aload_0
      28: getfield      #3                  // Field bool:Lfreemarker/template/TemplateBooleanModel;
      31: invokeinterface #7,  1            // InterfaceMethod freemarker/template/TemplateBooleanModel.getAsBoolean:()Z
      36: iconst_1
      37: invokevirtual #13                 // Method freemarker/core/Environment.formatBoolean:(ZZ)Ljava/lang/String;
      40: areturn
      41: astore_1
      42: new           #15                 // class freemarker/template/TemplateModelException
      45: dup
      46: aload_1
      47: invokespecial #16                 // Method freemarker/template/TemplateModelException."<init>":(Ljava/lang/Exception;)V
      50: athrow
    Exception table:
       from    to  target type
          23    40    41   Class freemarker/template/TemplateException
}
