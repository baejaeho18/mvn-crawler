Compiled from "Configurable.java"
public class freemarker.core.Configurable {
  static final java.lang.String C_TRUE_FALSE;

  private static final java.lang.String DEFAULT;

  private static final java.lang.String DEFAULT_2_3_0;

  private static final java.lang.String JVM_DEFAULT;

  public static final java.lang.String LOCALE_KEY_SNAKE_CASE;

  public static final java.lang.String LOCALE_KEY_CAMEL_CASE;

  public static final java.lang.String LOCALE_KEY;

  public static final java.lang.String NUMBER_FORMAT_KEY_SNAKE_CASE;

  public static final java.lang.String NUMBER_FORMAT_KEY_CAMEL_CASE;

  public static final java.lang.String NUMBER_FORMAT_KEY;

  public static final java.lang.String CUSTOM_NUMBER_FORMATS_KEY_SNAKE_CASE;

  public static final java.lang.String CUSTOM_NUMBER_FORMATS_KEY_CAMEL_CASE;

  public static final java.lang.String CUSTOM_NUMBER_FORMATS_KEY;

  public static final java.lang.String TIME_FORMAT_KEY_SNAKE_CASE;

  public static final java.lang.String TIME_FORMAT_KEY_CAMEL_CASE;

  public static final java.lang.String TIME_FORMAT_KEY;

  public static final java.lang.String DATE_FORMAT_KEY_SNAKE_CASE;

  public static final java.lang.String DATE_FORMAT_KEY_CAMEL_CASE;

  public static final java.lang.String DATE_FORMAT_KEY;

  public static final java.lang.String CUSTOM_DATE_FORMATS_KEY_SNAKE_CASE;

  public static final java.lang.String CUSTOM_DATE_FORMATS_KEY_CAMEL_CASE;

  public static final java.lang.String CUSTOM_DATE_FORMATS_KEY;

  public static final java.lang.String DATETIME_FORMAT_KEY_SNAKE_CASE;

  public static final java.lang.String DATETIME_FORMAT_KEY_CAMEL_CASE;

  public static final java.lang.String DATETIME_FORMAT_KEY;

  public static final java.lang.String TIME_ZONE_KEY_SNAKE_CASE;

  public static final java.lang.String TIME_ZONE_KEY_CAMEL_CASE;

  public static final java.lang.String TIME_ZONE_KEY;

  public static final java.lang.String SQL_DATE_AND_TIME_TIME_ZONE_KEY_SNAKE_CASE;

  public static final java.lang.String SQL_DATE_AND_TIME_TIME_ZONE_KEY_CAMEL_CASE;

  public static final java.lang.String SQL_DATE_AND_TIME_TIME_ZONE_KEY;

  public static final java.lang.String CLASSIC_COMPATIBLE_KEY_SNAKE_CASE;

  public static final java.lang.String CLASSIC_COMPATIBLE_KEY_CAMEL_CASE;

  public static final java.lang.String CLASSIC_COMPATIBLE_KEY;

  public static final java.lang.String TEMPLATE_EXCEPTION_HANDLER_KEY_SNAKE_CASE;

  public static final java.lang.String TEMPLATE_EXCEPTION_HANDLER_KEY_CAMEL_CASE;

  public static final java.lang.String TEMPLATE_EXCEPTION_HANDLER_KEY;

  public static final java.lang.String ARITHMETIC_ENGINE_KEY_SNAKE_CASE;

  public static final java.lang.String ARITHMETIC_ENGINE_KEY_CAMEL_CASE;

  public static final java.lang.String ARITHMETIC_ENGINE_KEY;

  public static final java.lang.String OBJECT_WRAPPER_KEY_SNAKE_CASE;

  public static final java.lang.String OBJECT_WRAPPER_KEY_CAMEL_CASE;

  public static final java.lang.String OBJECT_WRAPPER_KEY;

  public static final java.lang.String BOOLEAN_FORMAT_KEY_SNAKE_CASE;

  public static final java.lang.String BOOLEAN_FORMAT_KEY_CAMEL_CASE;

  public static final java.lang.String BOOLEAN_FORMAT_KEY;

  public static final java.lang.String OUTPUT_ENCODING_KEY_SNAKE_CASE;

  public static final java.lang.String OUTPUT_ENCODING_KEY_CAMEL_CASE;

  public static final java.lang.String OUTPUT_ENCODING_KEY;

  public static final java.lang.String URL_ESCAPING_CHARSET_KEY_SNAKE_CASE;

  public static final java.lang.String URL_ESCAPING_CHARSET_KEY_CAMEL_CASE;

  public static final java.lang.String URL_ESCAPING_CHARSET_KEY;

  public static final java.lang.String STRICT_BEAN_MODELS_KEY_SNAKE_CASE;

  public static final java.lang.String STRICT_BEAN_MODELS_KEY_CAMEL_CASE;

  public static final java.lang.String STRICT_BEAN_MODELS_KEY;

  public static final java.lang.String AUTO_FLUSH_KEY_SNAKE_CASE;

  public static final java.lang.String AUTO_FLUSH_KEY_CAMEL_CASE;

  public static final java.lang.String AUTO_FLUSH_KEY;

  public static final java.lang.String NEW_BUILTIN_CLASS_RESOLVER_KEY_SNAKE_CASE;

  public static final java.lang.String NEW_BUILTIN_CLASS_RESOLVER_KEY_CAMEL_CASE;

  public static final java.lang.String NEW_BUILTIN_CLASS_RESOLVER_KEY;

  public static final java.lang.String SHOW_ERROR_TIPS_KEY_SNAKE_CASE;

  public static final java.lang.String SHOW_ERROR_TIPS_KEY_CAMEL_CASE;

  public static final java.lang.String SHOW_ERROR_TIPS_KEY;

  public static final java.lang.String API_BUILTIN_ENABLED_KEY_SNAKE_CASE;

  public static final java.lang.String API_BUILTIN_ENABLED_KEY_CAMEL_CASE;

  public static final java.lang.String API_BUILTIN_ENABLED_KEY;

  public static final java.lang.String LOG_TEMPLATE_EXCEPTIONS_KEY_SNAKE_CASE;

  public static final java.lang.String LOG_TEMPLATE_EXCEPTIONS_KEY_CAMEL_CASE;

  public static final java.lang.String LOG_TEMPLATE_EXCEPTIONS_KEY;

  public static final java.lang.String STRICT_BEAN_MODELS;

  private static final java.lang.String[] SETTING_NAMES_SNAKE_CASE;

  private static final java.lang.String[] SETTING_NAMES_CAMEL_CASE;

  private freemarker.core.Configurable parent;

  private java.util.Properties properties;

  private java.util.HashMap<java.lang.Object, java.lang.Object> customAttributes;

  private java.util.Locale locale;

  private java.lang.String numberFormat;

  private java.lang.String timeFormat;

  private java.lang.String dateFormat;

  private java.lang.String dateTimeFormat;

  private java.util.TimeZone timeZone;

  private java.util.TimeZone sqlDataAndTimeTimeZone;

  private boolean sqlDataAndTimeTimeZoneSet;

  private java.lang.String booleanFormat;

  private java.lang.String trueStringValue;

  private java.lang.String falseStringValue;

  private java.lang.Integer classicCompatible;

  private freemarker.template.TemplateExceptionHandler templateExceptionHandler;

  private freemarker.core.ArithmeticEngine arithmeticEngine;

  private freemarker.template.ObjectWrapper objectWrapper;

  private java.lang.String outputEncoding;

  private boolean outputEncodingSet;

  private java.lang.String urlEscapingCharset;

  private boolean urlEscapingCharsetSet;

  private java.lang.Boolean autoFlush;

  private freemarker.core.TemplateClassResolver newBuiltinClassResolver;

  private java.lang.Boolean showErrorTips;

  private java.lang.Boolean apiBuiltinEnabled;

  private java.lang.Boolean logTemplateExceptions;

  private java.util.Map<java.lang.String, ? extends freemarker.core.TemplateDateFormatFactory> customDateFormats;

  private java.util.Map<java.lang.String, ? extends freemarker.core.TemplateNumberFormatFactory> customNumberFormats;

  private static final java.lang.String ALLOWED_CLASSES;

  private static final java.lang.String TRUSTED_TEMPLATES;

  public freemarker.core.Configurable();
    Code:
       0: aload_0
       1: getstatic     #2                  // Field freemarker/template/Configuration.DEFAULT_INCOMPATIBLE_IMPROVEMENTS:Lfreemarker/template/Version;
       4: invokespecial #3                  // Method "<init>":(Lfreemarker/template/Version;)V
       7: return

  protected freemarker.core.Configurable(freemarker.template.Version);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #5                  // Method freemarker/template/_TemplateAPI.checkVersionNotNullAndSupported:(Lfreemarker/template/Version;)V
       8: aload_0
       9: aconst_null
      10: putfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      13: aload_0
      14: new           #7                  // class java/util/Properties
      17: dup
      18: invokespecial #8                  // Method java/util/Properties."<init>":()V
      21: putfield      #9                  // Field properties:Ljava/util/Properties;
      24: aload_0
      25: invokestatic  #10                 // Method java/util/Locale.getDefault:()Ljava/util/Locale;
      28: putfield      #11                 // Field locale:Ljava/util/Locale;
      31: aload_0
      32: getfield      #9                  // Field properties:Ljava/util/Properties;
      35: ldc           #12                 // String locale
      37: aload_0
      38: getfield      #11                 // Field locale:Ljava/util/Locale;
      41: invokevirtual #13                 // Method java/util/Locale.toString:()Ljava/lang/String;
      44: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      47: pop
      48: aload_0
      49: invokestatic  #15                 // Method java/util/TimeZone.getDefault:()Ljava/util/TimeZone;
      52: putfield      #16                 // Field timeZone:Ljava/util/TimeZone;
      55: aload_0
      56: getfield      #9                  // Field properties:Ljava/util/Properties;
      59: ldc           #17                 // String time_zone
      61: aload_0
      62: getfield      #16                 // Field timeZone:Ljava/util/TimeZone;
      65: invokevirtual #18                 // Method java/util/TimeZone.getID:()Ljava/lang/String;
      68: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      71: pop
      72: aload_0
      73: aconst_null
      74: putfield      #19                 // Field sqlDataAndTimeTimeZone:Ljava/util/TimeZone;
      77: aload_0
      78: getfield      #9                  // Field properties:Ljava/util/Properties;
      81: ldc           #20                 // String sql_date_and_time_time_zone
      83: aload_0
      84: getfield      #19                 // Field sqlDataAndTimeTimeZone:Ljava/util/TimeZone;
      87: invokestatic  #21                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      90: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      93: pop
      94: aload_0
      95: ldc           #22                 // String number
      97: putfield      #23                 // Field numberFormat:Ljava/lang/String;
     100: aload_0
     101: getfield      #9                  // Field properties:Ljava/util/Properties;
     104: ldc           #24                 // String number_format
     106: aload_0
     107: getfield      #23                 // Field numberFormat:Ljava/lang/String;
     110: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     113: pop
     114: aload_0
     115: ldc           #25                 // String
     117: putfield      #26                 // Field timeFormat:Ljava/lang/String;
     120: aload_0
     121: getfield      #9                  // Field properties:Ljava/util/Properties;
     124: ldc           #27                 // String time_format
     126: aload_0
     127: getfield      #26                 // Field timeFormat:Ljava/lang/String;
     130: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     133: pop
     134: aload_0
     135: ldc           #25                 // String
     137: putfield      #28                 // Field dateFormat:Ljava/lang/String;
     140: aload_0
     141: getfield      #9                  // Field properties:Ljava/util/Properties;
     144: ldc           #29                 // String date_format
     146: aload_0
     147: getfield      #28                 // Field dateFormat:Ljava/lang/String;
     150: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     153: pop
     154: aload_0
     155: ldc           #25                 // String
     157: putfield      #30                 // Field dateTimeFormat:Ljava/lang/String;
     160: aload_0
     161: getfield      #9                  // Field properties:Ljava/util/Properties;
     164: ldc           #31                 // String datetime_format
     166: aload_0
     167: getfield      #30                 // Field dateTimeFormat:Ljava/lang/String;
     170: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     173: pop
     174: aload_0
     175: iconst_0
     176: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     179: putfield      #33                 // Field classicCompatible:Ljava/lang/Integer;
     182: aload_0
     183: getfield      #9                  // Field properties:Ljava/util/Properties;
     186: ldc           #34                 // String classic_compatible
     188: aload_0
     189: getfield      #33                 // Field classicCompatible:Ljava/lang/Integer;
     192: invokevirtual #35                 // Method java/lang/Integer.toString:()Ljava/lang/String;
     195: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     198: pop
     199: aload_0
     200: aload_1
     201: invokestatic  #36                 // Method freemarker/template/_TemplateAPI.getDefaultTemplateExceptionHandler:(Lfreemarker/template/Version;)Lfreemarker/template/TemplateExceptionHandler;
     204: putfield      #37                 // Field templateExceptionHandler:Lfreemarker/template/TemplateExceptionHandler;
     207: aload_0
     208: getfield      #9                  // Field properties:Ljava/util/Properties;
     211: ldc           #38                 // String template_exception_handler
     213: aload_0
     214: getfield      #37                 // Field templateExceptionHandler:Lfreemarker/template/TemplateExceptionHandler;
     217: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     220: invokevirtual #40                 // Method java/lang/Class.getName:()Ljava/lang/String;
     223: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     226: pop
     227: aload_0
     228: getstatic     #41                 // Field freemarker/core/ArithmeticEngine.BIGDECIMAL_ENGINE:Lfreemarker/core/ArithmeticEngine$BigDecimalEngine;
     231: putfield      #42                 // Field arithmeticEngine:Lfreemarker/core/ArithmeticEngine;
     234: aload_0
     235: getfield      #9                  // Field properties:Ljava/util/Properties;
     238: ldc           #43                 // String arithmetic_engine
     240: aload_0
     241: getfield      #42                 // Field arithmeticEngine:Lfreemarker/core/ArithmeticEngine;
     244: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     247: invokevirtual #40                 // Method java/lang/Class.getName:()Ljava/lang/String;
     250: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     253: pop
     254: aload_0
     255: aload_1
     256: invokestatic  #44                 // Method freemarker/template/Configuration.getDefaultObjectWrapper:(Lfreemarker/template/Version;)Lfreemarker/template/ObjectWrapper;
     259: putfield      #45                 // Field objectWrapper:Lfreemarker/template/ObjectWrapper;
     262: aload_0
     263: getstatic     #46                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     266: putfield      #47                 // Field autoFlush:Ljava/lang/Boolean;
     269: aload_0
     270: getfield      #9                  // Field properties:Ljava/util/Properties;
     273: ldc           #48                 // String auto_flush
     275: aload_0
     276: getfield      #47                 // Field autoFlush:Ljava/lang/Boolean;
     279: invokevirtual #49                 // Method java/lang/Boolean.toString:()Ljava/lang/String;
     282: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     285: pop
     286: aload_0
     287: getstatic     #50                 // Field freemarker/core/TemplateClassResolver.UNRESTRICTED_RESOLVER:Lfreemarker/core/TemplateClassResolver;
     290: putfield      #51                 // Field newBuiltinClassResolver:Lfreemarker/core/TemplateClassResolver;
     293: aload_0
     294: getfield      #9                  // Field properties:Ljava/util/Properties;
     297: ldc           #52                 // String new_builtin_class_resolver
     299: aload_0
     300: getfield      #51                 // Field newBuiltinClassResolver:Lfreemarker/core/TemplateClassResolver;
     303: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     306: invokevirtual #40                 // Method java/lang/Class.getName:()Ljava/lang/String;
     309: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     312: pop
     313: aload_0
     314: getstatic     #46                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     317: putfield      #53                 // Field showErrorTips:Ljava/lang/Boolean;
     320: aload_0
     321: getfield      #9                  // Field properties:Ljava/util/Properties;
     324: ldc           #54                 // String show_error_tips
     326: aload_0
     327: getfield      #53                 // Field showErrorTips:Ljava/lang/Boolean;
     330: invokevirtual #49                 // Method java/lang/Boolean.toString:()Ljava/lang/String;
     333: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     336: pop
     337: aload_0
     338: getstatic     #55                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     341: putfield      #56                 // Field apiBuiltinEnabled:Ljava/lang/Boolean;
     344: aload_0
     345: getfield      #9                  // Field properties:Ljava/util/Properties;
     348: ldc           #57                 // String api_builtin_enabled
     350: aload_0
     351: getfield      #56                 // Field apiBuiltinEnabled:Ljava/lang/Boolean;
     354: invokevirtual #49                 // Method java/lang/Boolean.toString:()Ljava/lang/String;
     357: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     360: pop
     361: aload_0
     362: aload_1
     363: invokestatic  #58                 // Method freemarker/template/_TemplateAPI.getDefaultLogTemplateExceptions:(Lfreemarker/template/Version;)Z
     366: invokestatic  #59                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     369: putfield      #60                 // Field logTemplateExceptions:Ljava/lang/Boolean;
     372: aload_0
     373: getfield      #9                  // Field properties:Ljava/util/Properties;
     376: ldc           #61                 // String log_template_exceptions
     378: aload_0
     379: getfield      #60                 // Field logTemplateExceptions:Ljava/lang/Boolean;
     382: invokevirtual #49                 // Method java/lang/Boolean.toString:()Ljava/lang/String;
     385: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     388: pop
     389: aload_0
     390: ldc           #62                 // String true,false
     392: invokevirtual #63                 // Method setBooleanFormat:(Ljava/lang/String;)V
     395: aload_0
     396: new           #64                 // class java/util/HashMap
     399: dup
     400: invokespecial #65                 // Method java/util/HashMap."<init>":()V
     403: putfield      #66                 // Field customAttributes:Ljava/util/HashMap;
     406: aload_0
     407: invokestatic  #67                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
     410: putfield      #68                 // Field customDateFormats:Ljava/util/Map;
     413: aload_0
     414: invokestatic  #67                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
     417: putfield      #69                 // Field customNumberFormats:Ljava/util/Map;
     420: return

  public freemarker.core.Configurable(freemarker.core.Configurable);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #6                  // Field parent:Lfreemarker/core/Configurable;
       9: aload_0
      10: aconst_null
      11: putfield      #11                 // Field locale:Ljava/util/Locale;
      14: aload_0
      15: aconst_null
      16: putfield      #23                 // Field numberFormat:Ljava/lang/String;
      19: aload_0
      20: aconst_null
      21: putfield      #33                 // Field classicCompatible:Ljava/lang/Integer;
      24: aload_0
      25: aconst_null
      26: putfield      #37                 // Field templateExceptionHandler:Lfreemarker/template/TemplateExceptionHandler;
      29: aload_0
      30: new           #7                  // class java/util/Properties
      33: dup
      34: aload_1
      35: getfield      #9                  // Field properties:Ljava/util/Properties;
      38: invokespecial #70                 // Method java/util/Properties."<init>":(Ljava/util/Properties;)V
      41: putfield      #9                  // Field properties:Ljava/util/Properties;
      44: aload_0
      45: new           #64                 // class java/util/HashMap
      48: dup
      49: iconst_0
      50: invokespecial #71                 // Method java/util/HashMap."<init>":(I)V
      53: putfield      #66                 // Field customAttributes:Ljava/util/HashMap;
      56: return

  protected java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #72                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #1                  // class freemarker/core/Configurable
       7: astore_1
       8: aload_1
       9: new           #7                  // class java/util/Properties
      12: dup
      13: aload_0
      14: getfield      #9                  // Field properties:Ljava/util/Properties;
      17: invokespecial #70                 // Method java/util/Properties."<init>":(Ljava/util/Properties;)V
      20: putfield      #9                  // Field properties:Ljava/util/Properties;
      23: aload_1
      24: aload_0
      25: getfield      #66                 // Field customAttributes:Ljava/util/HashMap;
      28: invokevirtual #73                 // Method java/util/HashMap.clone:()Ljava/lang/Object;
      31: checkcast     #64                 // class java/util/HashMap
      34: putfield      #66                 // Field customAttributes:Ljava/util/HashMap;
      37: aload_1
      38: areturn

  public final freemarker.core.Configurable getParent();
    Code:
       0: aload_0
       1: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
       4: areturn

  void setParent(freemarker.core.Configurable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field parent:Lfreemarker/core/Configurable;
       5: return

  public void setClassicCompatible(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: putfield      #33                 // Field classicCompatible:Ljava/lang/Integer;
      16: aload_0
      17: getfield      #9                  // Field properties:Ljava/util/Properties;
      20: ldc           #34                 // String classic_compatible
      22: aload_0
      23: aload_0
      24: getfield      #33                 // Field classicCompatible:Ljava/lang/Integer;
      27: invokespecial #74                 // Method classicCompatibilityIntToString:(Ljava/lang/Integer;)Ljava/lang/String;
      30: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      33: pop
      34: return

  public void setClassicCompatibleAsInt(int);
    Code:
       0: iload_1
       1: iflt          9
       4: iload_1
       5: iconst_2
       6: if_icmple     36
       9: new           #75                 // class java/lang/IllegalArgumentException
      12: dup
      13: new           #76                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #78                 // String Unsupported \"classicCompatibility\":
      22: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload_1
      26: invokevirtual #80                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #82                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: iload_1
      38: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      41: putfield      #33                 // Field classicCompatible:Ljava/lang/Integer;
      44: return

  private java.lang.String classicCompatibilityIntToString(java.lang.Integer);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_1
       7: invokevirtual #83                 // Method java/lang/Integer.intValue:()I
      10: ifne          16
      13: ldc           #85                 // String false
      15: areturn
      16: aload_1
      17: invokevirtual #83                 // Method java/lang/Integer.intValue:()I
      20: iconst_1
      21: if_icmpne     27
      24: ldc           #86                 // String true
      26: areturn
      27: aload_1
      28: invokevirtual #35                 // Method java/lang/Integer.toString:()Ljava/lang/String;
      31: areturn

  public boolean isClassicCompatible();
    Code:
       0: aload_0
       1: getfield      #33                 // Field classicCompatible:Ljava/lang/Integer;
       4: ifnull        25
       7: aload_0
       8: getfield      #33                 // Field classicCompatible:Ljava/lang/Integer;
      11: invokevirtual #83                 // Method java/lang/Integer.intValue:()I
      14: ifeq          21
      17: iconst_1
      18: goto          32
      21: iconst_0
      22: goto          32
      25: aload_0
      26: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      29: invokevirtual #87                 // Method isClassicCompatible:()Z
      32: ireturn

  public int getClassicCompatibleAsInt();
    Code:
       0: aload_0
       1: getfield      #33                 // Field classicCompatible:Ljava/lang/Integer;
       4: ifnull        17
       7: aload_0
       8: getfield      #33                 // Field classicCompatible:Ljava/lang/Integer;
      11: invokevirtual #83                 // Method java/lang/Integer.intValue:()I
      14: goto          24
      17: aload_0
      18: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      21: invokevirtual #88                 // Method getClassicCompatibleAsInt:()I
      24: ireturn

  public boolean isClassicCompatibleSet();
    Code:
       0: aload_0
       1: getfield      #33                 // Field classicCompatible:Ljava/lang/Integer;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setLocale(java.util.Locale);
    Code:
       0: ldc           #12                 // String locale
       2: aload_1
       3: invokestatic  #89                 // Method freemarker/template/utility/NullArgumentException.check:(Ljava/lang/String;Ljava/lang/Object;)V
       6: aload_0
       7: aload_1
       8: putfield      #11                 // Field locale:Ljava/util/Locale;
      11: aload_0
      12: getfield      #9                  // Field properties:Ljava/util/Properties;
      15: ldc           #12                 // String locale
      17: aload_1
      18: invokevirtual #13                 // Method java/util/Locale.toString:()Ljava/lang/String;
      21: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      24: pop
      25: return

  public java.util.Locale getLocale();
    Code:
       0: aload_0
       1: getfield      #11                 // Field locale:Ljava/util/Locale;
       4: ifnull        14
       7: aload_0
       8: getfield      #11                 // Field locale:Ljava/util/Locale;
      11: goto          21
      14: aload_0
      15: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      18: invokevirtual #90                 // Method getLocale:()Ljava/util/Locale;
      21: areturn

  public boolean isLocaleSet();
    Code:
       0: aload_0
       1: getfield      #11                 // Field locale:Ljava/util/Locale;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setTimeZone(java.util.TimeZone);
    Code:
       0: ldc           #91                 // String timeZone
       2: aload_1
       3: invokestatic  #89                 // Method freemarker/template/utility/NullArgumentException.check:(Ljava/lang/String;Ljava/lang/Object;)V
       6: aload_0
       7: aload_1
       8: putfield      #16                 // Field timeZone:Ljava/util/TimeZone;
      11: aload_0
      12: getfield      #9                  // Field properties:Ljava/util/Properties;
      15: ldc           #17                 // String time_zone
      17: aload_1
      18: invokevirtual #18                 // Method java/util/TimeZone.getID:()Ljava/lang/String;
      21: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      24: pop
      25: return

  public java.util.TimeZone getTimeZone();
    Code:
       0: aload_0
       1: getfield      #16                 // Field timeZone:Ljava/util/TimeZone;
       4: ifnull        14
       7: aload_0
       8: getfield      #16                 // Field timeZone:Ljava/util/TimeZone;
      11: goto          21
      14: aload_0
      15: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      18: invokevirtual #92                 // Method getTimeZone:()Ljava/util/TimeZone;
      21: areturn

  public boolean isTimeZoneSet();
    Code:
       0: aload_0
       1: getfield      #16                 // Field timeZone:Ljava/util/TimeZone;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setSQLDateAndTimeTimeZone(java.util.TimeZone);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field sqlDataAndTimeTimeZone:Ljava/util/TimeZone;
       5: aload_0
       6: iconst_1
       7: putfield      #93                 // Field sqlDataAndTimeTimeZoneSet:Z
      10: aload_0
      11: getfield      #9                  // Field properties:Ljava/util/Properties;
      14: ldc           #20                 // String sql_date_and_time_time_zone
      16: aload_1
      17: ifnull        27
      20: aload_1
      21: invokevirtual #18                 // Method java/util/TimeZone.getID:()Ljava/lang/String;
      24: goto          29
      27: ldc           #94                 // String null
      29: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      32: pop
      33: return

  public java.util.TimeZone getSQLDateAndTimeTimeZone();
    Code:
       0: aload_0
       1: getfield      #93                 // Field sqlDataAndTimeTimeZoneSet:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #19                 // Field sqlDataAndTimeTimeZone:Ljava/util/TimeZone;
      11: goto          32
      14: aload_0
      15: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      18: ifnull        31
      21: aload_0
      22: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      25: invokevirtual #95                 // Method getSQLDateAndTimeTimeZone:()Ljava/util/TimeZone;
      28: goto          32
      31: aconst_null
      32: areturn

  public boolean isSQLDateAndTimeTimeZoneSet();
    Code:
       0: aload_0
       1: getfield      #93                 // Field sqlDataAndTimeTimeZoneSet:Z
       4: ireturn

  public void setNumberFormat(java.lang.String);
    Code:
       0: ldc           #96                 // String numberFormat
       2: aload_1
       3: invokestatic  #89                 // Method freemarker/template/utility/NullArgumentException.check:(Ljava/lang/String;Ljava/lang/Object;)V
       6: aload_0
       7: aload_1
       8: putfield      #23                 // Field numberFormat:Ljava/lang/String;
      11: aload_0
      12: getfield      #9                  // Field properties:Ljava/util/Properties;
      15: ldc           #24                 // String number_format
      17: aload_1
      18: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      21: pop
      22: return

  public java.lang.String getNumberFormat();
    Code:
       0: aload_0
       1: getfield      #23                 // Field numberFormat:Ljava/lang/String;
       4: ifnull        14
       7: aload_0
       8: getfield      #23                 // Field numberFormat:Ljava/lang/String;
      11: goto          21
      14: aload_0
      15: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      18: invokevirtual #97                 // Method getNumberFormat:()Ljava/lang/String;
      21: areturn

  public boolean isNumberFormatSet();
    Code:
       0: aload_0
       1: getfield      #23                 // Field numberFormat:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.util.Map<java.lang.String, ? extends freemarker.core.TemplateNumberFormatFactory> getCustomNumberFormats();
    Code:
       0: aload_0
       1: getfield      #69                 // Field customNumberFormats:Ljava/util/Map;
       4: ifnonnull     17
       7: aload_0
       8: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      11: invokevirtual #98                 // Method getCustomNumberFormats:()Ljava/util/Map;
      14: goto          21
      17: aload_0
      18: getfield      #69                 // Field customNumberFormats:Ljava/util/Map;
      21: areturn

  public void setCustomNumberFormats(java.util.Map<java.lang.String, ? extends freemarker.core.TemplateNumberFormatFactory>);
    Code:
       0: ldc           #99                 // String customNumberFormats
       2: aload_1
       3: invokestatic  #89                 // Method freemarker/template/utility/NullArgumentException.check:(Ljava/lang/String;Ljava/lang/Object;)V
       6: aload_0
       7: aload_1
       8: invokeinterface #100,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      13: invokespecial #101                // Method validateFormatNames:(Ljava/util/Set;)V
      16: aload_0
      17: aload_1
      18: putfield      #69                 // Field customNumberFormats:Ljava/util/Map;
      21: return

  private void validateFormatNames(java.util.Set<java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #102,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #103,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          179
      16: aload_2
      17: invokeinterface #104,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #105                // class java/lang/String
      25: astore_3
      26: aload_3
      27: invokevirtual #106                // Method java/lang/String.length:()I
      30: ifne          43
      33: new           #75                 // class java/lang/IllegalArgumentException
      36: dup
      37: ldc           #107                // String Format names can\'t be 0 length
      39: invokespecial #82                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_3
      44: iconst_0
      45: invokevirtual #108                // Method java/lang/String.charAt:(I)C
      48: istore        4
      50: iload         4
      52: bipush        64
      54: if_icmpne     84
      57: new           #75                 // class java/lang/IllegalArgumentException
      60: dup
      61: new           #76                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #109                // String Format names can\'t start with \'@\'. \'@\' is only used when referring to them from format strings. In:
      70: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_3
      74: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: invokespecial #82                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      83: athrow
      84: iload         4
      86: invokestatic  #110                // Method java/lang/Character.isLetter:(C)Z
      89: ifne          119
      92: new           #75                 // class java/lang/IllegalArgumentException
      95: dup
      96: new           #76                 // class java/lang/StringBuilder
      99: dup
     100: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
     103: ldc           #111                // String Format name must start with letter:
     105: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_3
     109: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     115: invokespecial #82                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     118: athrow
     119: iconst_1
     120: istore        5
     122: iload         5
     124: aload_3
     125: invokevirtual #106                // Method java/lang/String.length:()I
     128: if_icmpge     176
     131: aload_3
     132: iload         5
     134: invokevirtual #108                // Method java/lang/String.charAt:(I)C
     137: invokestatic  #112                // Method java/lang/Character.isLetterOrDigit:(C)Z
     140: ifne          170
     143: new           #75                 // class java/lang/IllegalArgumentException
     146: dup
     147: new           #76                 // class java/lang/StringBuilder
     150: dup
     151: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
     154: ldc           #113                // String Format name can only contain letters and digits:
     156: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: aload_3
     160: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     163: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     166: invokespecial #82                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     169: athrow
     170: iinc          5, 1
     173: goto          122
     176: goto          7
     179: return

  public boolean isCustomNumberFormatsSet();
    Code:
       0: aload_0
       1: getfield      #69                 // Field customNumberFormats:Ljava/util/Map;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public freemarker.core.TemplateNumberFormatFactory getCustomNumberFormat(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #69                 // Field customNumberFormats:Ljava/util/Map;
       4: ifnull        27
       7: aload_0
       8: getfield      #69                 // Field customNumberFormats:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #114,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #115                // class freemarker/core/TemplateNumberFormatFactory
      20: astore_2
      21: aload_2
      22: ifnull        27
      25: aload_2
      26: areturn
      27: aload_0
      28: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      31: ifnull        45
      34: aload_0
      35: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      38: aload_1
      39: invokevirtual #116                // Method getCustomNumberFormat:(Ljava/lang/String;)Lfreemarker/core/TemplateNumberFormatFactory;
      42: goto          46
      45: aconst_null
      46: areturn

  public boolean hasCustomFormats();
    Code:
       0: aload_0
       1: getfield      #69                 // Field customNumberFormats:Ljava/util/Map;
       4: ifnull        19
       7: aload_0
       8: getfield      #69                 // Field customNumberFormats:Ljava/util/Map;
      11: invokeinterface #117,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
      16: ifeq          55
      19: aload_0
      20: getfield      #68                 // Field customDateFormats:Ljava/util/Map;
      23: ifnull        38
      26: aload_0
      27: getfield      #68                 // Field customDateFormats:Ljava/util/Map;
      30: invokeinterface #117,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
      35: ifeq          55
      38: aload_0
      39: invokevirtual #118                // Method getParent:()Lfreemarker/core/Configurable;
      42: ifnull        59
      45: aload_0
      46: invokevirtual #118                // Method getParent:()Lfreemarker/core/Configurable;
      49: invokevirtual #119                // Method hasCustomFormats:()Z
      52: ifeq          59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn

  public void setBooleanFormat(java.lang.String);
    Code:
       0: ldc           #120                // String booleanFormat
       2: aload_1
       3: invokestatic  #89                 // Method freemarker/template/utility/NullArgumentException.check:(Ljava/lang/String;Ljava/lang/Object;)V
       6: aload_1
       7: bipush        44
       9: invokevirtual #121                // Method java/lang/String.indexOf:(I)I
      12: istore_2
      13: iload_2
      14: iconst_m1
      15: if_icmpne     28
      18: new           #75                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #122                // String Setting value must be string that contains two comma-separated values for true and false, respectively.
      24: invokespecial #82                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: aload_1
      30: putfield      #123                // Field booleanFormat:Ljava/lang/String;
      33: aload_0
      34: getfield      #9                  // Field properties:Ljava/util/Properties;
      37: ldc           #124                // String boolean_format
      39: aload_1
      40: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      43: pop
      44: aload_1
      45: ldc           #62                 // String true,false
      47: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      50: ifeq          66
      53: aload_0
      54: aconst_null
      55: putfield      #126                // Field trueStringValue:Ljava/lang/String;
      58: aload_0
      59: aconst_null
      60: putfield      #127                // Field falseStringValue:Ljava/lang/String;
      63: goto          87
      66: aload_0
      67: aload_1
      68: iconst_0
      69: iload_2
      70: invokevirtual #128                // Method java/lang/String.substring:(II)Ljava/lang/String;
      73: putfield      #126                // Field trueStringValue:Ljava/lang/String;
      76: aload_0
      77: aload_1
      78: iload_2
      79: iconst_1
      80: iadd
      81: invokevirtual #129                // Method java/lang/String.substring:(I)Ljava/lang/String;
      84: putfield      #127                // Field falseStringValue:Ljava/lang/String;
      87: return

  public java.lang.String getBooleanFormat();
    Code:
       0: aload_0
       1: getfield      #123                // Field booleanFormat:Ljava/lang/String;
       4: ifnull        14
       7: aload_0
       8: getfield      #123                // Field booleanFormat:Ljava/lang/String;
      11: goto          21
      14: aload_0
      15: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      18: invokevirtual #130                // Method getBooleanFormat:()Ljava/lang/String;
      21: areturn

  public boolean isBooleanFormatSet();
    Code:
       0: aload_0
       1: getfield      #123                // Field booleanFormat:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  java.lang.String formatBoolean(boolean, boolean) throws freemarker.template.TemplateException;
    Code:
       0: iload_1
       1: ifeq          34
       4: aload_0
       5: invokevirtual #131                // Method getTrueStringValue:()Ljava/lang/String;
       8: astore_3
       9: aload_3
      10: ifnonnull     32
      13: iload_2
      14: ifeq          20
      17: ldc           #86                 // String true
      19: areturn
      20: new           #132                // class freemarker/core/_MiscTemplateException
      23: dup
      24: aload_0
      25: invokespecial #133                // Method getNullBooleanFormatErrorDescription:()Lfreemarker/core/_ErrorDescriptionBuilder;
      28: invokespecial #134                // Method freemarker/core/_MiscTemplateException."<init>":(Lfreemarker/core/_ErrorDescriptionBuilder;)V
      31: athrow
      32: aload_3
      33: areturn
      34: aload_0
      35: invokevirtual #135                // Method getFalseStringValue:()Ljava/lang/String;
      38: astore_3
      39: aload_3
      40: ifnonnull     62
      43: iload_2
      44: ifeq          50
      47: ldc           #85                 // String false
      49: areturn
      50: new           #132                // class freemarker/core/_MiscTemplateException
      53: dup
      54: aload_0
      55: invokespecial #133                // Method getNullBooleanFormatErrorDescription:()Lfreemarker/core/_ErrorDescriptionBuilder;
      58: invokespecial #134                // Method freemarker/core/_MiscTemplateException."<init>":(Lfreemarker/core/_ErrorDescriptionBuilder;)V
      61: athrow
      62: aload_3
      63: areturn

  private freemarker.core._ErrorDescriptionBuilder getNullBooleanFormatErrorDescription();
    Code:
       0: new           #136                // class freemarker/core/_ErrorDescriptionBuilder
       3: dup
       4: iconst_5
       5: anewarray     #137                // class java/lang/Object
       8: dup
       9: iconst_0
      10: ldc           #138                // String Can\'t convert boolean to string automatically, because the \"
      12: aastore
      13: dup
      14: iconst_1
      15: ldc           #124                // String boolean_format
      17: aastore
      18: dup
      19: iconst_2
      20: ldc           #139                // String \" setting was
      22: aastore
      23: dup
      24: iconst_3
      25: new           #140                // class freemarker/core/_DelayedJQuote
      28: dup
      29: aload_0
      30: invokevirtual #130                // Method getBooleanFormat:()Ljava/lang/String;
      33: invokespecial #141                // Method freemarker/core/_DelayedJQuote."<init>":(Ljava/lang/Object;)V
      36: aastore
      37: dup
      38: iconst_4
      39: aload_0
      40: invokevirtual #130                // Method getBooleanFormat:()Ljava/lang/String;
      43: ldc           #62                 // String true,false
      45: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      48: ifeq          56
      51: ldc           #142                // String , which is the legacy default computer-language format, and hence isn\'t accepted.
      53: goto          58
      56: ldc           #143                // String .
      58: aastore
      59: invokespecial #144                // Method freemarker/core/_ErrorDescriptionBuilder."<init>":([Ljava/lang/Object;)V
      62: iconst_3
      63: anewarray     #137                // class java/lang/Object
      66: dup
      67: iconst_0
      68: ldc           #145                // String If you just want \"true\"/\"false\" result as you are generting computer-language output, use \"?c\", like ${myBool?c}.
      70: aastore
      71: dup
      72: iconst_1
      73: ldc           #146                // String You can write myBool?string(\'yes\', \'no\') and like to specify boolean formatting in place.
      75: aastore
      76: dup
      77: iconst_2
      78: iconst_3
      79: anewarray     #137                // class java/lang/Object
      82: dup
      83: iconst_0
      84: ldc           #147                // String If you need the same two values on most places, the programmers should set the \"
      86: aastore
      87: dup
      88: iconst_1
      89: ldc           #124                // String boolean_format
      91: aastore
      92: dup
      93: iconst_2
      94: ldc           #148                // String \" setting to something like \"yes,no\".
      96: aastore
      97: aastore
      98: invokevirtual #149                // Method freemarker/core/_ErrorDescriptionBuilder.tips:([Ljava/lang/Object;)Lfreemarker/core/_ErrorDescriptionBuilder;
     101: areturn

  java.lang.String getTrueStringValue();
    Code:
       0: aload_0
       1: getfield      #123                // Field booleanFormat:Ljava/lang/String;
       4: ifnull        14
       7: aload_0
       8: getfield      #126                // Field trueStringValue:Ljava/lang/String;
      11: goto          32
      14: aload_0
      15: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      18: ifnull        31
      21: aload_0
      22: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      25: invokevirtual #131                // Method getTrueStringValue:()Ljava/lang/String;
      28: goto          32
      31: aconst_null
      32: areturn

  java.lang.String getFalseStringValue();
    Code:
       0: aload_0
       1: getfield      #123                // Field booleanFormat:Ljava/lang/String;
       4: ifnull        14
       7: aload_0
       8: getfield      #127                // Field falseStringValue:Ljava/lang/String;
      11: goto          32
      14: aload_0
      15: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      18: ifnull        31
      21: aload_0
      22: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      25: invokevirtual #135                // Method getFalseStringValue:()Ljava/lang/String;
      28: goto          32
      31: aconst_null
      32: areturn

  public void setTimeFormat(java.lang.String);
    Code:
       0: ldc           #150                // String timeFormat
       2: aload_1
       3: invokestatic  #89                 // Method freemarker/template/utility/NullArgumentException.check:(Ljava/lang/String;Ljava/lang/Object;)V
       6: aload_0
       7: aload_1
       8: putfield      #26                 // Field timeFormat:Ljava/lang/String;
      11: aload_0
      12: getfield      #9                  // Field properties:Ljava/util/Properties;
      15: ldc           #27                 // String time_format
      17: aload_1
      18: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      21: pop
      22: return

  public java.lang.String getTimeFormat();
    Code:
       0: aload_0
       1: getfield      #26                 // Field timeFormat:Ljava/lang/String;
       4: ifnull        14
       7: aload_0
       8: getfield      #26                 // Field timeFormat:Ljava/lang/String;
      11: goto          21
      14: aload_0
      15: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      18: invokevirtual #151                // Method getTimeFormat:()Ljava/lang/String;
      21: areturn

  public boolean isTimeFormatSet();
    Code:
       0: aload_0
       1: getfield      #26                 // Field timeFormat:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setDateFormat(java.lang.String);
    Code:
       0: ldc           #152                // String dateFormat
       2: aload_1
       3: invokestatic  #89                 // Method freemarker/template/utility/NullArgumentException.check:(Ljava/lang/String;Ljava/lang/Object;)V
       6: aload_0
       7: aload_1
       8: putfield      #28                 // Field dateFormat:Ljava/lang/String;
      11: aload_0
      12: getfield      #9                  // Field properties:Ljava/util/Properties;
      15: ldc           #29                 // String date_format
      17: aload_1
      18: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      21: pop
      22: return

  public java.lang.String getDateFormat();
    Code:
       0: aload_0
       1: getfield      #28                 // Field dateFormat:Ljava/lang/String;
       4: ifnull        14
       7: aload_0
       8: getfield      #28                 // Field dateFormat:Ljava/lang/String;
      11: goto          21
      14: aload_0
      15: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      18: invokevirtual #153                // Method getDateFormat:()Ljava/lang/String;
      21: areturn

  public boolean isDateFormatSet();
    Code:
       0: aload_0
       1: getfield      #28                 // Field dateFormat:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setDateTimeFormat(java.lang.String);
    Code:
       0: ldc           #154                // String dateTimeFormat
       2: aload_1
       3: invokestatic  #89                 // Method freemarker/template/utility/NullArgumentException.check:(Ljava/lang/String;Ljava/lang/Object;)V
       6: aload_0
       7: aload_1
       8: putfield      #30                 // Field dateTimeFormat:Ljava/lang/String;
      11: aload_0
      12: getfield      #9                  // Field properties:Ljava/util/Properties;
      15: ldc           #31                 // String datetime_format
      17: aload_1
      18: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      21: pop
      22: return

  public java.lang.String getDateTimeFormat();
    Code:
       0: aload_0
       1: getfield      #30                 // Field dateTimeFormat:Ljava/lang/String;
       4: ifnull        14
       7: aload_0
       8: getfield      #30                 // Field dateTimeFormat:Ljava/lang/String;
      11: goto          21
      14: aload_0
      15: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      18: invokevirtual #155                // Method getDateTimeFormat:()Ljava/lang/String;
      21: areturn

  public boolean isDateTimeFormatSet();
    Code:
       0: aload_0
       1: getfield      #30                 // Field dateTimeFormat:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.util.Map<java.lang.String, ? extends freemarker.core.TemplateDateFormatFactory> getCustomDateFormats();
    Code:
       0: aload_0
       1: getfield      #68                 // Field customDateFormats:Ljava/util/Map;
       4: ifnonnull     17
       7: aload_0
       8: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      11: invokevirtual #156                // Method getCustomDateFormats:()Ljava/util/Map;
      14: goto          21
      17: aload_0
      18: getfield      #68                 // Field customDateFormats:Ljava/util/Map;
      21: areturn

  public void setCustomDateFormats(java.util.Map<java.lang.String, ? extends freemarker.core.TemplateDateFormatFactory>);
    Code:
       0: ldc           #157                // String customDateFormats
       2: aload_1
       3: invokestatic  #89                 // Method freemarker/template/utility/NullArgumentException.check:(Ljava/lang/String;Ljava/lang/Object;)V
       6: aload_0
       7: aload_1
       8: invokeinterface #100,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      13: invokespecial #101                // Method validateFormatNames:(Ljava/util/Set;)V
      16: aload_0
      17: aload_1
      18: putfield      #68                 // Field customDateFormats:Ljava/util/Map;
      21: return

  public boolean isCustomDateFormatsSet();
    Code:
       0: aload_0
       1: getfield      #68                 // Field customDateFormats:Ljava/util/Map;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public freemarker.core.TemplateDateFormatFactory getCustomDateFormat(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #68                 // Field customDateFormats:Ljava/util/Map;
       4: ifnull        27
       7: aload_0
       8: getfield      #68                 // Field customDateFormats:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #114,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #158                // class freemarker/core/TemplateDateFormatFactory
      20: astore_2
      21: aload_2
      22: ifnull        27
      25: aload_2
      26: areturn
      27: aload_0
      28: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      31: ifnull        45
      34: aload_0
      35: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      38: aload_1
      39: invokevirtual #159                // Method getCustomDateFormat:(Ljava/lang/String;)Lfreemarker/core/TemplateDateFormatFactory;
      42: goto          46
      45: aconst_null
      46: areturn

  public void setTemplateExceptionHandler(freemarker.template.TemplateExceptionHandler);
    Code:
       0: ldc           #160                // String templateExceptionHandler
       2: aload_1
       3: invokestatic  #89                 // Method freemarker/template/utility/NullArgumentException.check:(Ljava/lang/String;Ljava/lang/Object;)V
       6: aload_0
       7: aload_1
       8: putfield      #37                 // Field templateExceptionHandler:Lfreemarker/template/TemplateExceptionHandler;
      11: aload_0
      12: getfield      #9                  // Field properties:Ljava/util/Properties;
      15: ldc           #38                 // String template_exception_handler
      17: aload_1
      18: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: invokevirtual #40                 // Method java/lang/Class.getName:()Ljava/lang/String;
      24: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      27: pop
      28: return

  public freemarker.template.TemplateExceptionHandler getTemplateExceptionHandler();
    Code:
       0: aload_0
       1: getfield      #37                 // Field templateExceptionHandler:Lfreemarker/template/TemplateExceptionHandler;
       4: ifnull        14
       7: aload_0
       8: getfield      #37                 // Field templateExceptionHandler:Lfreemarker/template/TemplateExceptionHandler;
      11: goto          21
      14: aload_0
      15: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      18: invokevirtual #161                // Method getTemplateExceptionHandler:()Lfreemarker/template/TemplateExceptionHandler;
      21: areturn

  public boolean isTemplateExceptionHandlerSet();
    Code:
       0: aload_0
       1: getfield      #37                 // Field templateExceptionHandler:Lfreemarker/template/TemplateExceptionHandler;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setArithmeticEngine(freemarker.core.ArithmeticEngine);
    Code:
       0: ldc           #162                // String arithmeticEngine
       2: aload_1
       3: invokestatic  #89                 // Method freemarker/template/utility/NullArgumentException.check:(Ljava/lang/String;Ljava/lang/Object;)V
       6: aload_0
       7: aload_1
       8: putfield      #42                 // Field arithmeticEngine:Lfreemarker/core/ArithmeticEngine;
      11: aload_0
      12: getfield      #9                  // Field properties:Ljava/util/Properties;
      15: ldc           #43                 // String arithmetic_engine
      17: aload_1
      18: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: invokevirtual #40                 // Method java/lang/Class.getName:()Ljava/lang/String;
      24: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      27: pop
      28: return

  public freemarker.core.ArithmeticEngine getArithmeticEngine();
    Code:
       0: aload_0
       1: getfield      #42                 // Field arithmeticEngine:Lfreemarker/core/ArithmeticEngine;
       4: ifnull        14
       7: aload_0
       8: getfield      #42                 // Field arithmeticEngine:Lfreemarker/core/ArithmeticEngine;
      11: goto          21
      14: aload_0
      15: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      18: invokevirtual #163                // Method getArithmeticEngine:()Lfreemarker/core/ArithmeticEngine;
      21: areturn

  public boolean isArithmeticEngineSet();
    Code:
       0: aload_0
       1: getfield      #42                 // Field arithmeticEngine:Lfreemarker/core/ArithmeticEngine;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setObjectWrapper(freemarker.template.ObjectWrapper);
    Code:
       0: ldc           #164                // String objectWrapper
       2: aload_1
       3: invokestatic  #89                 // Method freemarker/template/utility/NullArgumentException.check:(Ljava/lang/String;Ljava/lang/Object;)V
       6: aload_0
       7: aload_1
       8: putfield      #45                 // Field objectWrapper:Lfreemarker/template/ObjectWrapper;
      11: aload_0
      12: getfield      #9                  // Field properties:Ljava/util/Properties;
      15: ldc           #165                // String object_wrapper
      17: aload_1
      18: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: invokevirtual #40                 // Method java/lang/Class.getName:()Ljava/lang/String;
      24: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      27: pop
      28: return

  public freemarker.template.ObjectWrapper getObjectWrapper();
    Code:
       0: aload_0
       1: getfield      #45                 // Field objectWrapper:Lfreemarker/template/ObjectWrapper;
       4: ifnull        14
       7: aload_0
       8: getfield      #45                 // Field objectWrapper:Lfreemarker/template/ObjectWrapper;
      11: goto          21
      14: aload_0
      15: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      18: invokevirtual #166                // Method getObjectWrapper:()Lfreemarker/template/ObjectWrapper;
      21: areturn

  public boolean isObjectWrapperSet();
    Code:
       0: aload_0
       1: getfield      #45                 // Field objectWrapper:Lfreemarker/template/ObjectWrapper;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setOutputEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #167                // Field outputEncoding:Ljava/lang/String;
       5: aload_1
       6: ifnull        23
       9: aload_0
      10: getfield      #9                  // Field properties:Ljava/util/Properties;
      13: ldc           #168                // String output_encoding
      15: aload_1
      16: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      19: pop
      20: goto          33
      23: aload_0
      24: getfield      #9                  // Field properties:Ljava/util/Properties;
      27: ldc           #168                // String output_encoding
      29: invokevirtual #169                // Method java/util/Properties.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: aload_0
      34: iconst_1
      35: putfield      #170                // Field outputEncodingSet:Z
      38: return

  public java.lang.String getOutputEncoding();
    Code:
       0: aload_0
       1: getfield      #170                // Field outputEncodingSet:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #167                // Field outputEncoding:Ljava/lang/String;
      11: goto          32
      14: aload_0
      15: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      18: ifnull        31
      21: aload_0
      22: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      25: invokevirtual #171                // Method getOutputEncoding:()Ljava/lang/String;
      28: goto          32
      31: aconst_null
      32: areturn

  public boolean isOutputEncodingSet();
    Code:
       0: aload_0
       1: getfield      #170                // Field outputEncodingSet:Z
       4: ireturn

  public void setURLEscapingCharset(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #172                // Field urlEscapingCharset:Ljava/lang/String;
       5: aload_1
       6: ifnull        23
       9: aload_0
      10: getfield      #9                  // Field properties:Ljava/util/Properties;
      13: ldc           #173                // String url_escaping_charset
      15: aload_1
      16: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      19: pop
      20: goto          33
      23: aload_0
      24: getfield      #9                  // Field properties:Ljava/util/Properties;
      27: ldc           #173                // String url_escaping_charset
      29: invokevirtual #169                // Method java/util/Properties.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: aload_0
      34: iconst_1
      35: putfield      #174                // Field urlEscapingCharsetSet:Z
      38: return

  public java.lang.String getURLEscapingCharset();
    Code:
       0: aload_0
       1: getfield      #174                // Field urlEscapingCharsetSet:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #172                // Field urlEscapingCharset:Ljava/lang/String;
      11: goto          32
      14: aload_0
      15: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      18: ifnull        31
      21: aload_0
      22: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      25: invokevirtual #175                // Method getURLEscapingCharset:()Ljava/lang/String;
      28: goto          32
      31: aconst_null
      32: areturn

  public boolean isURLEscapingCharsetSet();
    Code:
       0: aload_0
       1: getfield      #174                // Field urlEscapingCharsetSet:Z
       4: ireturn

  public void setNewBuiltinClassResolver(freemarker.core.TemplateClassResolver);
    Code:
       0: ldc           #176                // String newBuiltinClassResolver
       2: aload_1
       3: invokestatic  #89                 // Method freemarker/template/utility/NullArgumentException.check:(Ljava/lang/String;Ljava/lang/Object;)V
       6: aload_0
       7: aload_1
       8: putfield      #51                 // Field newBuiltinClassResolver:Lfreemarker/core/TemplateClassResolver;
      11: aload_0
      12: getfield      #9                  // Field properties:Ljava/util/Properties;
      15: ldc           #52                 // String new_builtin_class_resolver
      17: aload_1
      18: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: invokevirtual #40                 // Method java/lang/Class.getName:()Ljava/lang/String;
      24: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      27: pop
      28: return

  public freemarker.core.TemplateClassResolver getNewBuiltinClassResolver();
    Code:
       0: aload_0
       1: getfield      #51                 // Field newBuiltinClassResolver:Lfreemarker/core/TemplateClassResolver;
       4: ifnull        14
       7: aload_0
       8: getfield      #51                 // Field newBuiltinClassResolver:Lfreemarker/core/TemplateClassResolver;
      11: goto          21
      14: aload_0
      15: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      18: invokevirtual #177                // Method getNewBuiltinClassResolver:()Lfreemarker/core/TemplateClassResolver;
      21: areturn

  public boolean isNewBuiltinClassResolverSet();
    Code:
       0: aload_0
       1: getfield      #51                 // Field newBuiltinClassResolver:Lfreemarker/core/TemplateClassResolver;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setAutoFlush(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #59                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #47                 // Field autoFlush:Ljava/lang/Boolean;
       8: aload_0
       9: getfield      #9                  // Field properties:Ljava/util/Properties;
      12: ldc           #48                 // String auto_flush
      14: iload_1
      15: invokestatic  #178                // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
      18: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      21: pop
      22: return

  public boolean getAutoFlush();
    Code:
       0: aload_0
       1: getfield      #47                 // Field autoFlush:Ljava/lang/Boolean;
       4: ifnull        17
       7: aload_0
       8: getfield      #47                 // Field autoFlush:Ljava/lang/Boolean;
      11: invokevirtual #179                // Method java/lang/Boolean.booleanValue:()Z
      14: goto          35
      17: aload_0
      18: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      21: ifnull        34
      24: aload_0
      25: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      28: invokevirtual #180                // Method getAutoFlush:()Z
      31: goto          35
      34: iconst_1
      35: ireturn

  public boolean isAutoFlushSet();
    Code:
       0: aload_0
       1: getfield      #47                 // Field autoFlush:Ljava/lang/Boolean;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setShowErrorTips(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #59                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #53                 // Field showErrorTips:Ljava/lang/Boolean;
       8: aload_0
       9: getfield      #9                  // Field properties:Ljava/util/Properties;
      12: ldc           #54                 // String show_error_tips
      14: iload_1
      15: invokestatic  #178                // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
      18: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      21: pop
      22: return

  public boolean getShowErrorTips();
    Code:
       0: aload_0
       1: getfield      #53                 // Field showErrorTips:Ljava/lang/Boolean;
       4: ifnull        17
       7: aload_0
       8: getfield      #53                 // Field showErrorTips:Ljava/lang/Boolean;
      11: invokevirtual #179                // Method java/lang/Boolean.booleanValue:()Z
      14: goto          35
      17: aload_0
      18: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      21: ifnull        34
      24: aload_0
      25: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      28: invokevirtual #181                // Method getShowErrorTips:()Z
      31: goto          35
      34: iconst_1
      35: ireturn

  public boolean isShowErrorTipsSet();
    Code:
       0: aload_0
       1: getfield      #53                 // Field showErrorTips:Ljava/lang/Boolean;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setAPIBuiltinEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #59                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #56                 // Field apiBuiltinEnabled:Ljava/lang/Boolean;
       8: aload_0
       9: getfield      #9                  // Field properties:Ljava/util/Properties;
      12: ldc           #57                 // String api_builtin_enabled
      14: iload_1
      15: invokestatic  #178                // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
      18: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      21: pop
      22: return

  public boolean isAPIBuiltinEnabled();
    Code:
       0: aload_0
       1: getfield      #56                 // Field apiBuiltinEnabled:Ljava/lang/Boolean;
       4: ifnull        17
       7: aload_0
       8: getfield      #56                 // Field apiBuiltinEnabled:Ljava/lang/Boolean;
      11: invokevirtual #179                // Method java/lang/Boolean.booleanValue:()Z
      14: goto          35
      17: aload_0
      18: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      21: ifnull        34
      24: aload_0
      25: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      28: invokevirtual #182                // Method isAPIBuiltinEnabled:()Z
      31: goto          35
      34: iconst_0
      35: ireturn

  public boolean isAPIBuiltinEnabledSet();
    Code:
       0: aload_0
       1: getfield      #56                 // Field apiBuiltinEnabled:Ljava/lang/Boolean;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setLogTemplateExceptions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #59                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #60                 // Field logTemplateExceptions:Ljava/lang/Boolean;
       8: aload_0
       9: getfield      #9                  // Field properties:Ljava/util/Properties;
      12: ldc           #61                 // String log_template_exceptions
      14: iload_1
      15: invokestatic  #178                // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
      18: invokevirtual #14                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      21: pop
      22: return

  public boolean getLogTemplateExceptions();
    Code:
       0: aload_0
       1: getfield      #60                 // Field logTemplateExceptions:Ljava/lang/Boolean;
       4: ifnull        17
       7: aload_0
       8: getfield      #60                 // Field logTemplateExceptions:Ljava/lang/Boolean;
      11: invokevirtual #179                // Method java/lang/Boolean.booleanValue:()Z
      14: goto          35
      17: aload_0
      18: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      21: ifnull        34
      24: aload_0
      25: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      28: invokevirtual #183                // Method getLogTemplateExceptions:()Z
      31: goto          35
      34: iconst_1
      35: ireturn

  public boolean isLogTemplateExceptionsSet();
    Code:
       0: aload_0
       1: getfield      #60                 // Field logTemplateExceptions:Ljava/lang/Boolean;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setSetting(java.lang.String, java.lang.String) throws freemarker.template.TemplateException;
    Code:
       0: iconst_0
       1: istore_3
       2: ldc           #12                 // String locale
       4: aload_1
       5: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       8: ifeq          22
      11: aload_0
      12: aload_2
      13: invokestatic  #184                // Method freemarker/template/utility/StringUtil.deduceLocale:(Ljava/lang/String;)Ljava/util/Locale;
      16: invokevirtual #185                // Method setLocale:(Ljava/util/Locale;)V
      19: goto          1424
      22: ldc           #24                 // String number_format
      24: aload_1
      25: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: ifne          40
      31: ldc           #96                 // String numberFormat
      33: aload_1
      34: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      37: ifeq          48
      40: aload_0
      41: aload_2
      42: invokevirtual #186                // Method setNumberFormat:(Ljava/lang/String;)V
      45: goto          1424
      48: ldc           #187                // String custom_number_formats
      50: aload_1
      51: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      54: ifne          66
      57: ldc           #99                 // String customNumberFormats
      59: aload_1
      60: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      63: ifeq          118
      66: aload_2
      67: ldc           #188                // class java/util/Map
      69: iconst_0
      70: invokestatic  #189                // Method freemarker/core/_SettingEvaluationEnvironment.getCurrent:()Lfreemarker/core/_SettingEvaluationEnvironment;
      73: invokestatic  #190                // Method freemarker/core/_ObjectBuilderSettingEvaluator.eval:(Ljava/lang/String;Ljava/lang/Class;ZLfreemarker/core/_SettingEvaluationEnvironment;)Ljava/lang/Object;
      76: checkcast     #188                // class java/util/Map
      79: astore        4
      81: ldc           #191                // String Map keys
      83: ldc           #105                // class java/lang/String
      85: aload         4
      87: invokeinterface #100,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      92: invokestatic  #192                // Method freemarker/core/_CoreAPI.checkSettingValueItemsType:(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)V
      95: ldc           #193                // String Map values
      97: ldc           #115                // class freemarker/core/TemplateNumberFormatFactory
      99: aload         4
     101: invokeinterface #194,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     106: invokestatic  #192                // Method freemarker/core/_CoreAPI.checkSettingValueItemsType:(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)V
     109: aload_0
     110: aload         4
     112: invokevirtual #195                // Method setCustomNumberFormats:(Ljava/util/Map;)V
     115: goto          1424
     118: ldc           #27                 // String time_format
     120: aload_1
     121: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     124: ifne          136
     127: ldc           #150                // String timeFormat
     129: aload_1
     130: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     133: ifeq          144
     136: aload_0
     137: aload_2
     138: invokevirtual #196                // Method setTimeFormat:(Ljava/lang/String;)V
     141: goto          1424
     144: ldc           #29                 // String date_format
     146: aload_1
     147: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     150: ifne          162
     153: ldc           #152                // String dateFormat
     155: aload_1
     156: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     159: ifeq          170
     162: aload_0
     163: aload_2
     164: invokevirtual #197                // Method setDateFormat:(Ljava/lang/String;)V
     167: goto          1424
     170: ldc           #31                 // String datetime_format
     172: aload_1
     173: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     176: ifne          188
     179: ldc           #198                // String datetimeFormat
     181: aload_1
     182: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     185: ifeq          196
     188: aload_0
     189: aload_2
     190: invokevirtual #199                // Method setDateTimeFormat:(Ljava/lang/String;)V
     193: goto          1424
     196: ldc           #200                // String custom_date_formats
     198: aload_1
     199: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     202: ifne          214
     205: ldc           #157                // String customDateFormats
     207: aload_1
     208: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     211: ifeq          266
     214: aload_2
     215: ldc           #188                // class java/util/Map
     217: iconst_0
     218: invokestatic  #189                // Method freemarker/core/_SettingEvaluationEnvironment.getCurrent:()Lfreemarker/core/_SettingEvaluationEnvironment;
     221: invokestatic  #190                // Method freemarker/core/_ObjectBuilderSettingEvaluator.eval:(Ljava/lang/String;Ljava/lang/Class;ZLfreemarker/core/_SettingEvaluationEnvironment;)Ljava/lang/Object;
     224: checkcast     #188                // class java/util/Map
     227: astore        4
     229: ldc           #191                // String Map keys
     231: ldc           #105                // class java/lang/String
     233: aload         4
     235: invokeinterface #100,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     240: invokestatic  #192                // Method freemarker/core/_CoreAPI.checkSettingValueItemsType:(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)V
     243: ldc           #193                // String Map values
     245: ldc           #158                // class freemarker/core/TemplateDateFormatFactory
     247: aload         4
     249: invokeinterface #194,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     254: invokestatic  #192                // Method freemarker/core/_CoreAPI.checkSettingValueItemsType:(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)V
     257: aload_0
     258: aload         4
     260: invokevirtual #201                // Method setCustomDateFormats:(Ljava/util/Map;)V
     263: goto          1424
     266: ldc           #17                 // String time_zone
     268: aload_1
     269: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     272: ifne          284
     275: ldc           #91                 // String timeZone
     277: aload_1
     278: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     281: ifeq          296
     284: aload_0
     285: aload_0
     286: aload_2
     287: invokespecial #202                // Method parseTimeZoneSettingValue:(Ljava/lang/String;)Ljava/util/TimeZone;
     290: invokevirtual #203                // Method setTimeZone:(Ljava/util/TimeZone;)V
     293: goto          1424
     296: ldc           #20                 // String sql_date_and_time_time_zone
     298: aload_1
     299: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     302: ifne          314
     305: ldc           #204                // String sqlDateAndTimeTimeZone
     307: aload_1
     308: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     311: ifeq          339
     314: aload_0
     315: aload_2
     316: ldc           #94                 // String null
     318: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     321: ifeq          328
     324: aconst_null
     325: goto          333
     328: aload_0
     329: aload_2
     330: invokespecial #202                // Method parseTimeZoneSettingValue:(Ljava/lang/String;)Ljava/util/TimeZone;
     333: invokevirtual #205                // Method setSQLDateAndTimeTimeZone:(Ljava/util/TimeZone;)V
     336: goto          1424
     339: ldc           #34                 // String classic_compatible
     341: aload_1
     342: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     345: ifne          357
     348: ldc           #206                // String classicCompatible
     350: aload_1
     351: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     354: ifeq          433
     357: aload_2
     358: ifnull        378
     361: aload_2
     362: invokevirtual #106                // Method java/lang/String.length:()I
     365: ifle          378
     368: aload_2
     369: iconst_0
     370: invokevirtual #108                // Method java/lang/String.charAt:(I)C
     373: istore        4
     375: goto          381
     378: iconst_0
     379: istore        4
     381: iload         4
     383: invokestatic  #207                // Method java/lang/Character.isDigit:(C)Z
     386: ifne          403
     389: iload         4
     391: bipush        43
     393: if_icmpeq     403
     396: iload         4
     398: bipush        45
     400: if_icmpne     414
     403: aload_0
     404: aload_2
     405: invokestatic  #208                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     408: invokevirtual #209                // Method setClassicCompatibleAsInt:(I)V
     411: goto          430
     414: aload_0
     415: aload_2
     416: ifnull        426
     419: aload_2
     420: invokestatic  #210                // Method freemarker/template/utility/StringUtil.getYesNo:(Ljava/lang/String;)Z
     423: goto          427
     426: iconst_0
     427: invokevirtual #211                // Method setClassicCompatible:(Z)V
     430: goto          1424
     433: ldc           #38                 // String template_exception_handler
     435: aload_1
     436: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     439: ifne          451
     442: ldc           #160                // String templateExceptionHandler
     444: aload_1
     445: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     448: ifeq          599
     451: aload_2
     452: bipush        46
     454: invokevirtual #121                // Method java/lang/String.indexOf:(I)I
     457: iconst_m1
     458: if_icmpne     579
     461: ldc           #212                // String debug
     463: aload_2
     464: invokevirtual #213                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     467: ifeq          480
     470: aload_0
     471: getstatic     #214                // Field freemarker/template/TemplateExceptionHandler.DEBUG_HANDLER:Lfreemarker/template/TemplateExceptionHandler;
     474: invokevirtual #215                // Method setTemplateExceptionHandler:(Lfreemarker/template/TemplateExceptionHandler;)V
     477: goto          1424
     480: ldc           #216                // String html_debug
     482: aload_2
     483: invokevirtual #213                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     486: ifne          498
     489: ldc           #217                // String htmlDebug
     491: aload_2
     492: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     495: ifeq          508
     498: aload_0
     499: getstatic     #218                // Field freemarker/template/TemplateExceptionHandler.HTML_DEBUG_HANDLER:Lfreemarker/template/TemplateExceptionHandler;
     502: invokevirtual #215                // Method setTemplateExceptionHandler:(Lfreemarker/template/TemplateExceptionHandler;)V
     505: goto          1424
     508: ldc           #219                // String ignore
     510: aload_2
     511: invokevirtual #213                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     514: ifeq          527
     517: aload_0
     518: getstatic     #220                // Field freemarker/template/TemplateExceptionHandler.IGNORE_HANDLER:Lfreemarker/template/TemplateExceptionHandler;
     521: invokevirtual #215                // Method setTemplateExceptionHandler:(Lfreemarker/template/TemplateExceptionHandler;)V
     524: goto          1424
     527: ldc           #221                // String rethrow
     529: aload_2
     530: invokevirtual #213                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     533: ifeq          546
     536: aload_0
     537: getstatic     #222                // Field freemarker/template/TemplateExceptionHandler.RETHROW_HANDLER:Lfreemarker/template/TemplateExceptionHandler;
     540: invokevirtual #215                // Method setTemplateExceptionHandler:(Lfreemarker/template/TemplateExceptionHandler;)V
     543: goto          1424
     546: ldc           #223                // String default
     548: aload_2
     549: invokevirtual #213                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     552: ifeq          572
     555: aload_0
     556: instanceof    #224                // class freemarker/template/Configuration
     559: ifeq          572
     562: aload_0
     563: checkcast     #224                // class freemarker/template/Configuration
     566: invokevirtual #225                // Method freemarker/template/Configuration.unsetTemplateExceptionHandler:()V
     569: goto          1424
     572: aload_0
     573: aload_1
     574: aload_2
     575: invokevirtual #226                // Method invalidSettingValueException:(Ljava/lang/String;Ljava/lang/String;)Lfreemarker/template/TemplateException;
     578: athrow
     579: aload_0
     580: aload_2
     581: ldc           #227                // class freemarker/template/TemplateExceptionHandler
     583: iconst_0
     584: invokestatic  #189                // Method freemarker/core/_SettingEvaluationEnvironment.getCurrent:()Lfreemarker/core/_SettingEvaluationEnvironment;
     587: invokestatic  #190                // Method freemarker/core/_ObjectBuilderSettingEvaluator.eval:(Ljava/lang/String;Ljava/lang/Class;ZLfreemarker/core/_SettingEvaluationEnvironment;)Ljava/lang/Object;
     590: checkcast     #227                // class freemarker/template/TemplateExceptionHandler
     593: invokevirtual #215                // Method setTemplateExceptionHandler:(Lfreemarker/template/TemplateExceptionHandler;)V
     596: goto          1424
     599: ldc           #43                 // String arithmetic_engine
     601: aload_1
     602: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     605: ifne          617
     608: ldc           #162                // String arithmeticEngine
     610: aload_1
     611: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     614: ifeq          692
     617: aload_2
     618: bipush        46
     620: invokevirtual #121                // Method java/lang/String.indexOf:(I)I
     623: iconst_m1
     624: if_icmpne     672
     627: ldc           #228                // String bigdecimal
     629: aload_2
     630: invokevirtual #213                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     633: ifeq          646
     636: aload_0
     637: getstatic     #41                 // Field freemarker/core/ArithmeticEngine.BIGDECIMAL_ENGINE:Lfreemarker/core/ArithmeticEngine$BigDecimalEngine;
     640: invokevirtual #229                // Method setArithmeticEngine:(Lfreemarker/core/ArithmeticEngine;)V
     643: goto          1424
     646: ldc           #230                // String conservative
     648: aload_2
     649: invokevirtual #213                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     652: ifeq          665
     655: aload_0
     656: getstatic     #231                // Field freemarker/core/ArithmeticEngine.CONSERVATIVE_ENGINE:Lfreemarker/core/ArithmeticEngine$ConservativeEngine;
     659: invokevirtual #229                // Method setArithmeticEngine:(Lfreemarker/core/ArithmeticEngine;)V
     662: goto          1424
     665: aload_0
     666: aload_1
     667: aload_2
     668: invokevirtual #226                // Method invalidSettingValueException:(Ljava/lang/String;Ljava/lang/String;)Lfreemarker/template/TemplateException;
     671: athrow
     672: aload_0
     673: aload_2
     674: ldc           #232                // class freemarker/core/ArithmeticEngine
     676: iconst_0
     677: invokestatic  #189                // Method freemarker/core/_SettingEvaluationEnvironment.getCurrent:()Lfreemarker/core/_SettingEvaluationEnvironment;
     680: invokestatic  #190                // Method freemarker/core/_ObjectBuilderSettingEvaluator.eval:(Ljava/lang/String;Ljava/lang/Class;ZLfreemarker/core/_SettingEvaluationEnvironment;)Ljava/lang/Object;
     683: checkcast     #232                // class freemarker/core/ArithmeticEngine
     686: invokevirtual #229                // Method setArithmeticEngine:(Lfreemarker/core/ArithmeticEngine;)V
     689: goto          1424
     692: ldc           #165                // String object_wrapper
     694: aload_1
     695: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     698: ifne          710
     701: ldc           #164                // String objectWrapper
     703: aload_1
     704: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     707: ifeq          866
     710: ldc           #223                // String default
     712: aload_2
     713: invokevirtual #213                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     716: ifeq          749
     719: aload_0
     720: instanceof    #224                // class freemarker/template/Configuration
     723: ifeq          736
     726: aload_0
     727: checkcast     #224                // class freemarker/template/Configuration
     730: invokevirtual #233                // Method freemarker/template/Configuration.unsetObjectWrapper:()V
     733: goto          1424
     736: aload_0
     737: getstatic     #234                // Field freemarker/template/Configuration.VERSION_2_3_0:Lfreemarker/template/Version;
     740: invokestatic  #44                 // Method freemarker/template/Configuration.getDefaultObjectWrapper:(Lfreemarker/template/Version;)Lfreemarker/template/ObjectWrapper;
     743: invokevirtual #235                // Method setObjectWrapper:(Lfreemarker/template/ObjectWrapper;)V
     746: goto          1424
     749: ldc           #236                // String default_2_3_0
     751: aload_2
     752: invokevirtual #213                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     755: ifeq          771
     758: aload_0
     759: getstatic     #234                // Field freemarker/template/Configuration.VERSION_2_3_0:Lfreemarker/template/Version;
     762: invokestatic  #44                 // Method freemarker/template/Configuration.getDefaultObjectWrapper:(Lfreemarker/template/Version;)Lfreemarker/template/ObjectWrapper;
     765: invokevirtual #235                // Method setObjectWrapper:(Lfreemarker/template/ObjectWrapper;)V
     768: goto          1424
     771: ldc           #237                // String simple
     773: aload_2
     774: invokevirtual #213                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     777: ifeq          790
     780: aload_0
     781: getstatic     #238                // Field freemarker/template/ObjectWrapper.SIMPLE_WRAPPER:Lfreemarker/template/ObjectWrapper;
     784: invokevirtual #235                // Method setObjectWrapper:(Lfreemarker/template/ObjectWrapper;)V
     787: goto          1424
     790: ldc           #239                // String beans
     792: aload_2
     793: invokevirtual #213                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     796: ifeq          809
     799: aload_0
     800: getstatic     #240                // Field freemarker/template/ObjectWrapper.BEANS_WRAPPER:Lfreemarker/template/ObjectWrapper;
     803: invokevirtual #235                // Method setObjectWrapper:(Lfreemarker/template/ObjectWrapper;)V
     806: goto          1424
     809: ldc           #241                // String jython
     811: aload_2
     812: invokevirtual #213                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     815: ifeq          846
     818: ldc           #242                // String freemarker.ext.jython.JythonWrapper
     820: invokestatic  #243                // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
     823: astore        4
     825: aload_0
     826: aload         4
     828: ldc           #244                // String INSTANCE
     830: invokevirtual #245                // Method java/lang/Class.getField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
     833: aconst_null
     834: invokevirtual #246                // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
     837: checkcast     #247                // class freemarker/template/ObjectWrapper
     840: invokevirtual #235                // Method setObjectWrapper:(Lfreemarker/template/ObjectWrapper;)V
     843: goto          1424
     846: aload_0
     847: aload_2
     848: ldc           #247                // class freemarker/template/ObjectWrapper
     850: iconst_0
     851: invokestatic  #189                // Method freemarker/core/_SettingEvaluationEnvironment.getCurrent:()Lfreemarker/core/_SettingEvaluationEnvironment;
     854: invokestatic  #190                // Method freemarker/core/_ObjectBuilderSettingEvaluator.eval:(Ljava/lang/String;Ljava/lang/Class;ZLfreemarker/core/_SettingEvaluationEnvironment;)Ljava/lang/Object;
     857: checkcast     #247                // class freemarker/template/ObjectWrapper
     860: invokevirtual #235                // Method setObjectWrapper:(Lfreemarker/template/ObjectWrapper;)V
     863: goto          1424
     866: ldc           #124                // String boolean_format
     868: aload_1
     869: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     872: ifne          884
     875: ldc           #120                // String booleanFormat
     877: aload_1
     878: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     881: ifeq          892
     884: aload_0
     885: aload_2
     886: invokevirtual #63                 // Method setBooleanFormat:(Ljava/lang/String;)V
     889: goto          1424
     892: ldc           #168                // String output_encoding
     894: aload_1
     895: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     898: ifne          910
     901: ldc           #248                // String outputEncoding
     903: aload_1
     904: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     907: ifeq          918
     910: aload_0
     911: aload_2
     912: invokevirtual #249                // Method setOutputEncoding:(Ljava/lang/String;)V
     915: goto          1424
     918: ldc           #173                // String url_escaping_charset
     920: aload_1
     921: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     924: ifne          936
     927: ldc           #250                // String urlEscapingCharset
     929: aload_1
     930: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     933: ifeq          944
     936: aload_0
     937: aload_2
     938: invokevirtual #251                // Method setURLEscapingCharset:(Ljava/lang/String;)V
     941: goto          1424
     944: ldc           #252                // String strict_bean_models
     946: aload_1
     947: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     950: ifne          962
     953: ldc           #253                // String strictBeanModels
     955: aload_1
     956: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     959: ifeq          973
     962: aload_0
     963: aload_2
     964: invokestatic  #210                // Method freemarker/template/utility/StringUtil.getYesNo:(Ljava/lang/String;)Z
     967: invokevirtual #254                // Method setStrictBeanModels:(Z)V
     970: goto          1424
     973: ldc           #48                 // String auto_flush
     975: aload_1
     976: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     979: ifne          991
     982: ldc           #255                // String autoFlush
     984: aload_1
     985: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     988: ifeq          1002
     991: aload_0
     992: aload_2
     993: invokestatic  #210                // Method freemarker/template/utility/StringUtil.getYesNo:(Ljava/lang/String;)Z
     996: invokevirtual #256                // Method setAutoFlush:(Z)V
     999: goto          1424
    1002: ldc           #54                 // String show_error_tips
    1004: aload_1
    1005: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1008: ifne          1021
    1011: ldc_w         #257                // String showErrorTips
    1014: aload_1
    1015: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1018: ifeq          1032
    1021: aload_0
    1022: aload_2
    1023: invokestatic  #210                // Method freemarker/template/utility/StringUtil.getYesNo:(Ljava/lang/String;)Z
    1026: invokevirtual #258                // Method setShowErrorTips:(Z)V
    1029: goto          1424
    1032: ldc           #57                 // String api_builtin_enabled
    1034: aload_1
    1035: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1038: ifne          1051
    1041: ldc_w         #259                // String apiBuiltinEnabled
    1044: aload_1
    1045: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1048: ifeq          1062
    1051: aload_0
    1052: aload_2
    1053: invokestatic  #210                // Method freemarker/template/utility/StringUtil.getYesNo:(Ljava/lang/String;)Z
    1056: invokevirtual #260                // Method setAPIBuiltinEnabled:(Z)V
    1059: goto          1424
    1062: ldc           #52                 // String new_builtin_class_resolver
    1064: aload_1
    1065: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1068: ifne          1080
    1071: ldc           #176                // String newBuiltinClassResolver
    1073: aload_1
    1074: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1077: ifeq          1392
    1080: ldc_w         #261                // String unrestricted
    1083: aload_2
    1084: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1087: ifeq          1100
    1090: aload_0
    1091: getstatic     #50                 // Field freemarker/core/TemplateClassResolver.UNRESTRICTED_RESOLVER:Lfreemarker/core/TemplateClassResolver;
    1094: invokevirtual #262                // Method setNewBuiltinClassResolver:(Lfreemarker/core/TemplateClassResolver;)V
    1097: goto          1424
    1100: ldc_w         #263                // String safer
    1103: aload_2
    1104: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1107: ifeq          1120
    1110: aload_0
    1111: getstatic     #264                // Field freemarker/core/TemplateClassResolver.SAFER_RESOLVER:Lfreemarker/core/TemplateClassResolver;
    1114: invokevirtual #262                // Method setNewBuiltinClassResolver:(Lfreemarker/core/TemplateClassResolver;)V
    1117: goto          1424
    1120: ldc_w         #265                // String allows_nothing
    1123: aload_2
    1124: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1127: ifne          1140
    1130: ldc_w         #266                // String allowsNothing
    1133: aload_2
    1134: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1137: ifeq          1150
    1140: aload_0
    1141: getstatic     #267                // Field freemarker/core/TemplateClassResolver.ALLOWS_NOTHING_RESOLVER:Lfreemarker/core/TemplateClassResolver;
    1144: invokevirtual #262                // Method setNewBuiltinClassResolver:(Lfreemarker/core/TemplateClassResolver;)V
    1147: goto          1424
    1150: aload_2
    1151: ldc_w         #268                // String :
    1154: invokevirtual #269                // Method java/lang/String.indexOf:(Ljava/lang/String;)I
    1157: iconst_m1
    1158: if_icmpeq     1354
    1161: aload_0
    1162: aload_2
    1163: invokevirtual #270                // Method parseAsSegmentedList:(Ljava/lang/String;)Ljava/util/ArrayList;
    1166: astore        4
    1168: aconst_null
    1169: astore        5
    1171: aconst_null
    1172: astore        6
    1174: iconst_0
    1175: istore        7
    1177: iload         7
    1179: aload         4
    1181: invokeinterface #271,  1          // InterfaceMethod java/util/List.size:()I
    1186: if_icmpge     1336
    1189: aload         4
    1191: iload         7
    1193: invokeinterface #272,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
    1198: checkcast     #273                // class freemarker/core/Configurable$KeyValuePair
    1201: astore        8
    1203: aload         8
    1205: invokevirtual #274                // Method freemarker/core/Configurable$KeyValuePair.getKey:()Ljava/lang/Object;
    1208: checkcast     #105                // class java/lang/String
    1211: astore        9
    1213: aload         8
    1215: invokevirtual #275                // Method freemarker/core/Configurable$KeyValuePair.getValue:()Ljava/lang/Object;
    1218: checkcast     #276                // class java/util/List
    1221: astore        10
    1223: aload         9
    1225: ldc_w         #277                // String allowed_classes
    1228: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1231: ifeq          1248
    1234: new           #278                // class java/util/HashSet
    1237: dup
    1238: aload         10
    1240: invokespecial #279                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
    1243: astore        5
    1245: goto          1330
    1248: aload         9
    1250: ldc_w         #280                // String trusted_templates
    1253: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1256: ifeq          1266
    1259: aload         10
    1261: astore        6
    1263: goto          1330
    1266: new           #281                // class freemarker/core/ParseException
    1269: dup
    1270: new           #76                 // class java/lang/StringBuilder
    1273: dup
    1274: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
    1277: ldc_w         #282                // String Unrecognized list segment key:
    1280: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1283: aload         9
    1285: invokestatic  #283                // Method freemarker/template/utility/StringUtil.jQuote:(Ljava/lang/String;)Ljava/lang/String;
    1288: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1291: ldc_w         #284                // String . Supported keys are: \"
    1294: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1297: ldc_w         #277                // String allowed_classes
    1300: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1303: ldc_w         #285                // String \", \"
    1306: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1309: ldc_w         #280                // String trusted_templates
    1312: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1315: ldc_w         #286                // String \"
    1318: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1321: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1324: iconst_0
    1325: iconst_0
    1326: invokespecial #287                // Method freemarker/core/ParseException."<init>":(Ljava/lang/String;II)V
    1329: athrow
    1330: iinc          7, 1
    1333: goto          1177
    1336: aload_0
    1337: new           #288                // class freemarker/core/OptInTemplateClassResolver
    1340: dup
    1341: aload         5
    1343: aload         6
    1345: invokespecial #289                // Method freemarker/core/OptInTemplateClassResolver."<init>":(Ljava/util/Set;Ljava/util/List;)V
    1348: invokevirtual #262                // Method setNewBuiltinClassResolver:(Lfreemarker/core/TemplateClassResolver;)V
    1351: goto          1424
    1354: aload_2
    1355: bipush        46
    1357: invokevirtual #121                // Method java/lang/String.indexOf:(I)I
    1360: iconst_m1
    1361: if_icmpeq     1385
    1364: aload_0
    1365: aload_2
    1366: ldc_w         #290                // class freemarker/core/TemplateClassResolver
    1369: iconst_0
    1370: invokestatic  #189                // Method freemarker/core/_SettingEvaluationEnvironment.getCurrent:()Lfreemarker/core/_SettingEvaluationEnvironment;
    1373: invokestatic  #190                // Method freemarker/core/_ObjectBuilderSettingEvaluator.eval:(Ljava/lang/String;Ljava/lang/Class;ZLfreemarker/core/_SettingEvaluationEnvironment;)Ljava/lang/Object;
    1376: checkcast     #290                // class freemarker/core/TemplateClassResolver
    1379: invokevirtual #262                // Method setNewBuiltinClassResolver:(Lfreemarker/core/TemplateClassResolver;)V
    1382: goto          1424
    1385: aload_0
    1386: aload_1
    1387: aload_2
    1388: invokevirtual #226                // Method invalidSettingValueException:(Ljava/lang/String;Ljava/lang/String;)Lfreemarker/template/TemplateException;
    1391: athrow
    1392: ldc           #61                 // String log_template_exceptions
    1394: aload_1
    1395: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1398: ifne          1411
    1401: ldc_w         #291                // String logTemplateExceptions
    1404: aload_1
    1405: invokevirtual #125                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
    1408: ifeq          1422
    1411: aload_0
    1412: aload_2
    1413: invokestatic  #210                // Method freemarker/template/utility/StringUtil.getYesNo:(Ljava/lang/String;)Z
    1416: invokevirtual #292                // Method setLogTemplateExceptions:(Z)V
    1419: goto          1424
    1422: iconst_1
    1423: istore_3
    1424: goto          1438
    1427: astore        4
    1429: aload_0
    1430: aload_1
    1431: aload_2
    1432: aload         4
    1434: invokevirtual #294                // Method settingValueAssignmentException:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)Lfreemarker/template/TemplateException;
    1437: athrow
    1438: iload_3
    1439: ifeq          1448
    1442: aload_0
    1443: aload_1
    1444: invokevirtual #295                // Method unknownSettingException:(Ljava/lang/String;)Lfreemarker/template/TemplateException;
    1447: athrow
    1448: return
    Exception table:
       from    to  target type
           2  1424  1427   Class java/lang/Exception

  public java.util.Set<java.lang.String> getSettingNames(boolean);
    Code:
       0: new           #296                // class freemarker/core/_SortedArraySet
       3: dup
       4: iload_1
       5: ifeq          14
       8: getstatic     #297                // Field SETTING_NAMES_CAMEL_CASE:[Ljava/lang/String;
      11: goto          17
      14: getstatic     #298                // Field SETTING_NAMES_SNAKE_CASE:[Ljava/lang/String;
      17: invokespecial #299                // Method freemarker/core/_SortedArraySet."<init>":([Ljava/lang/Object;)V
      20: areturn

  private java.util.TimeZone parseTimeZoneSettingValue(java.lang.String);
    Code:
       0: ldc_w         #300                // String JVM default
       3: aload_1
       4: invokevirtual #213                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       7: ifeq          17
      10: invokestatic  #15                 // Method java/util/TimeZone.getDefault:()Ljava/util/TimeZone;
      13: astore_2
      14: goto          22
      17: aload_1
      18: invokestatic  #301                // Method java/util/TimeZone.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;
      21: astore_2
      22: aload_2
      23: areturn

  public void setStrictBeanModels(boolean);
    Code:
       0: aload_0
       1: getfield      #45                 // Field objectWrapper:Lfreemarker/template/ObjectWrapper;
       4: instanceof    #302                // class freemarker/ext/beans/BeansWrapper
       7: ifne          48
      10: new           #303                // class java/lang/IllegalStateException
      13: dup
      14: new           #76                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc_w         #304                // String The value of the object_wrapper setting isn\'t a
      24: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc_w         #302                // class freemarker/ext/beans/BeansWrapper
      30: invokevirtual #40                 // Method java/lang/Class.getName:()Ljava/lang/String;
      33: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #143                // String .
      38: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #305                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: getfield      #45                 // Field objectWrapper:Lfreemarker/template/ObjectWrapper;
      52: checkcast     #302                // class freemarker/ext/beans/BeansWrapper
      55: iload_1
      56: invokevirtual #306                // Method freemarker/ext/beans/BeansWrapper.setStrict:(Z)V
      59: return

  public java.lang.String getSetting(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field properties:Ljava/util/Properties;
       4: aload_1
       5: invokevirtual #307                // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public java.util.Map getSettings();
    Code:
       0: aload_0
       1: getfield      #9                  // Field properties:Ljava/util/Properties;
       4: invokestatic  #308                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  protected freemarker.core.Environment getEnvironment();
    Code:
       0: aload_0
       1: instanceof    #309                // class freemarker/core/Environment
       4: ifeq          14
       7: aload_0
       8: checkcast     #309                // class freemarker/core/Environment
      11: goto          17
      14: invokestatic  #310                // Method freemarker/core/Environment.getCurrentEnvironment:()Lfreemarker/core/Environment;
      17: areturn

  protected freemarker.template.TemplateException unknownSettingException(java.lang.String);
    Code:
       0: new           #311                // class freemarker/core/Configurable$UnknownSettingException
       3: dup
       4: aload_0
       5: invokevirtual #312                // Method getEnvironment:()Lfreemarker/core/Environment;
       8: aload_1
       9: aload_0
      10: aload_1
      11: invokevirtual #313                // Method getCorrectedNameForUnknownSetting:(Ljava/lang/String;)Ljava/lang/String;
      14: aconst_null
      15: invokespecial #314                // Method freemarker/core/Configurable$UnknownSettingException."<init>":(Lfreemarker/core/Environment;Ljava/lang/String;Ljava/lang/String;Lfreemarker/core/Configurable$1;)V
      18: areturn

  protected java.lang.String getCorrectedNameForUnknownSetting(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  protected freemarker.template.TemplateException settingValueAssignmentException(java.lang.String, java.lang.String, java.lang.Throwable);
    Code:
       0: new           #315                // class freemarker/core/Configurable$SettingValueAssignmentException
       3: dup
       4: aload_0
       5: invokevirtual #312                // Method getEnvironment:()Lfreemarker/core/Environment;
       8: aload_1
       9: aload_2
      10: aload_3
      11: aconst_null
      12: invokespecial #316                // Method freemarker/core/Configurable$SettingValueAssignmentException."<init>":(Lfreemarker/core/Environment;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;Lfreemarker/core/Configurable$1;)V
      15: areturn

  protected freemarker.template.TemplateException invalidSettingValueException(java.lang.String, java.lang.String);
    Code:
       0: new           #132                // class freemarker/core/_MiscTemplateException
       3: dup
       4: aload_0
       5: invokevirtual #312                // Method getEnvironment:()Lfreemarker/core/Environment;
       8: iconst_4
       9: anewarray     #137                // class java/lang/Object
      12: dup
      13: iconst_0
      14: ldc_w         #317                // String Invalid value for setting
      17: aastore
      18: dup
      19: iconst_1
      20: new           #140                // class freemarker/core/_DelayedJQuote
      23: dup
      24: aload_1
      25: invokespecial #141                // Method freemarker/core/_DelayedJQuote."<init>":(Ljava/lang/Object;)V
      28: aastore
      29: dup
      30: iconst_2
      31: ldc_w         #318                // String :
      34: aastore
      35: dup
      36: iconst_3
      37: new           #140                // class freemarker/core/_DelayedJQuote
      40: dup
      41: aload_2
      42: invokespecial #141                // Method freemarker/core/_DelayedJQuote."<init>":(Ljava/lang/Object;)V
      45: aastore
      46: invokespecial #319                // Method freemarker/core/_MiscTemplateException."<init>":(Lfreemarker/core/Environment;[Ljava/lang/Object;)V
      49: areturn

  public void setSettings(java.util.Properties) throws freemarker.template.TemplateException;
    Code:
       0: invokestatic  #320                // Method freemarker/core/_SettingEvaluationEnvironment.startScope:()Lfreemarker/core/_SettingEvaluationEnvironment;
       3: astore_2
       4: aload_1
       5: invokevirtual #321                // Method java/util/Properties.keySet:()Ljava/util/Set;
       8: invokeinterface #102,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      13: astore_3
      14: aload_3
      15: invokeinterface #103,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          52
      23: aload_3
      24: invokeinterface #104,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #105                // class java/lang/String
      32: astore        4
      34: aload_0
      35: aload         4
      37: aload_1
      38: aload         4
      40: invokevirtual #307                // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      43: invokevirtual #322                // Method java/lang/String.trim:()Ljava/lang/String;
      46: invokevirtual #323                // Method setSetting:(Ljava/lang/String;Ljava/lang/String;)V
      49: goto          14
      52: aload_2
      53: invokestatic  #324                // Method freemarker/core/_SettingEvaluationEnvironment.endScope:(Lfreemarker/core/_SettingEvaluationEnvironment;)V
      56: goto          68
      59: astore        5
      61: aload_2
      62: invokestatic  #324                // Method freemarker/core/_SettingEvaluationEnvironment.endScope:(Lfreemarker/core/_SettingEvaluationEnvironment;)V
      65: aload         5
      67: athrow
      68: return
    Exception table:
       from    to  target type
           4    52    59   any
          59    61    59   any

  public void setSettings(java.io.InputStream) throws freemarker.template.TemplateException, java.io.IOException;
    Code:
       0: new           #7                  // class java/util/Properties
       3: dup
       4: invokespecial #8                  // Method java/util/Properties."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #325                // Method java/util/Properties.load:(Ljava/io/InputStream;)V
      13: aload_0
      14: aload_2
      15: invokevirtual #326                // Method setSettings:(Ljava/util/Properties;)V
      18: return

  void setCustomAttribute(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #66                 // Field customAttributes:Ljava/util/HashMap;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #66                 // Field customAttributes:Ljava/util/HashMap;
      11: aload_1
      12: aload_2
      13: invokevirtual #327                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: aload_3
      18: monitorexit
      19: goto          29
      22: astore        4
      24: aload_3
      25: monitorexit
      26: aload         4
      28: athrow
      29: return
    Exception table:
       from    to  target type
           7    19    22   any
          22    26    22   any

  java.lang.Object getCustomAttribute(java.lang.Object, freemarker.core.CustomAttribute);
    Code:
       0: aload_0
       1: getfield      #66                 // Field customAttributes:Ljava/util/HashMap;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #66                 // Field customAttributes:Ljava/util/HashMap;
      11: aload_1
      12: invokevirtual #328                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: astore        4
      17: aload         4
      19: ifnonnull     50
      22: aload_0
      23: getfield      #66                 // Field customAttributes:Ljava/util/HashMap;
      26: aload_1
      27: invokevirtual #329                // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      30: ifne          50
      33: aload_2
      34: invokevirtual #330                // Method freemarker/core/CustomAttribute.create:()Ljava/lang/Object;
      37: astore        4
      39: aload_0
      40: getfield      #66                 // Field customAttributes:Ljava/util/HashMap;
      43: aload_1
      44: aload         4
      46: invokevirtual #327                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: aload         4
      52: aload_3
      53: monitorexit
      54: areturn
      55: astore        5
      57: aload_3
      58: monitorexit
      59: aload         5
      61: athrow
    Exception table:
       from    to  target type
           7    54    55   any
          55    59    55   any

  boolean isCustomAttributeSet(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #66                 // Field customAttributes:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #329                // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
       8: ireturn

  void copyDirectCustomAttributes(freemarker.core.Configurable, boolean);
    Code:
       0: aload_0
       1: getfield      #66                 // Field customAttributes:Ljava/util/HashMap;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #66                 // Field customAttributes:Ljava/util/HashMap;
      11: invokevirtual #331                // Method java/util/HashMap.entrySet:()Ljava/util/Set;
      14: invokeinterface #102,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore        4
      21: aload         4
      23: invokeinterface #103,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          108
      31: aload         4
      33: invokeinterface #104,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #332                // class java/util/Map$Entry
      41: astore        5
      43: aload         5
      45: invokeinterface #333,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      50: astore        6
      52: iload_2
      53: ifne          65
      56: aload_1
      57: aload         6
      59: invokevirtual #334                // Method isCustomAttributeSet:(Ljava/lang/Object;)Z
      62: ifne          105
      65: aload         6
      67: instanceof    #105                // class java/lang/String
      70: ifeq          92
      73: aload_1
      74: aload         6
      76: checkcast     #105                // class java/lang/String
      79: aload         5
      81: invokeinterface #335,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      86: invokevirtual #336                // Method setCustomAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      89: goto          105
      92: aload_1
      93: aload         6
      95: aload         5
      97: invokeinterface #335,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     102: invokevirtual #337                // Method setCustomAttribute:(Ljava/lang/Object;Ljava/lang/Object;)V
     105: goto          21
     108: aload_3
     109: monitorexit
     110: goto          120
     113: astore        7
     115: aload_3
     116: monitorexit
     117: aload         7
     119: athrow
     120: return
    Exception table:
       from    to  target type
           7   110   113   any
         113   117   113   any

  public void setCustomAttribute(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #66                 // Field customAttributes:Ljava/util/HashMap;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #66                 // Field customAttributes:Ljava/util/HashMap;
      11: aload_1
      12: aload_2
      13: invokevirtual #327                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: aload_3
      18: monitorexit
      19: goto          29
      22: astore        4
      24: aload_3
      25: monitorexit
      26: aload         4
      28: athrow
      29: return
    Exception table:
       from    to  target type
           7    19    22   any
          22    26    22   any

  public java.lang.String[] getCustomAttributeNames();
    Code:
       0: aload_0
       1: getfield      #66                 // Field customAttributes:Ljava/util/HashMap;
       4: dup
       5: astore_1
       6: monitorenter
       7: new           #338                // class java/util/LinkedList
      10: dup
      11: aload_0
      12: getfield      #66                 // Field customAttributes:Ljava/util/HashMap;
      15: invokevirtual #339                // Method java/util/HashMap.keySet:()Ljava/util/Set;
      18: invokespecial #340                // Method java/util/LinkedList."<init>":(Ljava/util/Collection;)V
      21: astore_2
      22: aload_2
      23: invokeinterface #341,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      28: astore_3
      29: aload_3
      30: invokeinterface #103,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          59
      38: aload_3
      39: invokeinterface #104,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: instanceof    #105                // class java/lang/String
      47: ifne          29
      50: aload_3
      51: invokeinterface #342,  1          // InterfaceMethod java/util/Iterator.remove:()V
      56: goto          29
      59: aload_2
      60: aload_2
      61: invokeinterface #343,  1          // InterfaceMethod java/util/Collection.size:()I
      66: anewarray     #105                // class java/lang/String
      69: invokeinterface #344,  2          // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      74: checkcast     #345                // class "[Ljava/lang/String;"
      77: checkcast     #345                // class "[Ljava/lang/String;"
      80: aload_1
      81: monitorexit
      82: areturn
      83: astore        4
      85: aload_1
      86: monitorexit
      87: aload         4
      89: athrow
    Exception table:
       from    to  target type
           7    82    83   any
          83    87    83   any

  public void removeCustomAttribute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #66                 // Field customAttributes:Ljava/util/HashMap;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #66                 // Field customAttributes:Ljava/util/HashMap;
      11: aload_1
      12: invokevirtual #346                // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: aload_2
      17: monitorexit
      18: goto          26
      21: astore_3
      22: aload_2
      23: monitorexit
      24: aload_3
      25: athrow
      26: return
    Exception table:
       from    to  target type
           7    18    21   any
          21    24    21   any

  public java.lang.Object getCustomAttribute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #66                 // Field customAttributes:Ljava/util/HashMap;
       4: dup
       5: astore_3
       6: monitorenter
       7: aload_0
       8: getfield      #66                 // Field customAttributes:Ljava/util/HashMap;
      11: aload_1
      12: invokevirtual #328                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: astore_2
      16: aload_2
      17: ifnonnull     35
      20: aload_0
      21: getfield      #66                 // Field customAttributes:Ljava/util/HashMap;
      24: aload_1
      25: invokevirtual #329                // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      28: ifeq          35
      31: aconst_null
      32: aload_3
      33: monitorexit
      34: areturn
      35: aload_3
      36: monitorexit
      37: goto          47
      40: astore        4
      42: aload_3
      43: monitorexit
      44: aload         4
      46: athrow
      47: aload_2
      48: ifnonnull     67
      51: aload_0
      52: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      55: ifnull        67
      58: aload_0
      59: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      62: aload_1
      63: invokevirtual #347                // Method getCustomAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      66: areturn
      67: aload_2
      68: areturn
    Exception table:
       from    to  target type
           7    34    40   any
          35    37    40   any
          40    44    40   any

  protected void doAutoImportsAndIncludes(freemarker.core.Environment) throws freemarker.template.TemplateException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
       4: ifnull        15
       7: aload_0
       8: getfield      #6                  // Field parent:Lfreemarker/core/Configurable;
      11: aload_1
      12: invokevirtual #348                // Method doAutoImportsAndIncludes:(Lfreemarker/core/Environment;)V
      15: return

  protected java.util.ArrayList parseAsList(java.lang.String) throws freemarker.core.ParseException;
    Code:
       0: new           #349                // class freemarker/core/Configurable$SettingStringParser
       3: dup
       4: aload_1
       5: aconst_null
       6: invokespecial #350                // Method freemarker/core/Configurable$SettingStringParser."<init>":(Ljava/lang/String;Lfreemarker/core/Configurable$1;)V
       9: invokevirtual #351                // Method freemarker/core/Configurable$SettingStringParser.parseAsList:()Ljava/util/ArrayList;
      12: areturn

  protected java.util.ArrayList parseAsSegmentedList(java.lang.String) throws freemarker.core.ParseException;
    Code:
       0: new           #349                // class freemarker/core/Configurable$SettingStringParser
       3: dup
       4: aload_1
       5: aconst_null
       6: invokespecial #350                // Method freemarker/core/Configurable$SettingStringParser."<init>":(Ljava/lang/String;Lfreemarker/core/Configurable$1;)V
       9: invokevirtual #352                // Method freemarker/core/Configurable$SettingStringParser.parseAsSegmentedList:()Ljava/util/ArrayList;
      12: areturn

  protected java.util.HashMap parseAsImportList(java.lang.String) throws freemarker.core.ParseException;
    Code:
       0: new           #349                // class freemarker/core/Configurable$SettingStringParser
       3: dup
       4: aload_1
       5: aconst_null
       6: invokespecial #350                // Method freemarker/core/Configurable$SettingStringParser."<init>":(Ljava/lang/String;Lfreemarker/core/Configurable$1;)V
       9: invokevirtual #353                // Method freemarker/core/Configurable$SettingStringParser.parseAsImportList:()Ljava/util/HashMap;
      12: areturn

  static {};
    Code:
       0: bipush        22
       2: anewarray     #105                // class java/lang/String
       5: dup
       6: iconst_0
       7: ldc           #57                 // String api_builtin_enabled
       9: aastore
      10: dup
      11: iconst_1
      12: ldc           #43                 // String arithmetic_engine
      14: aastore
      15: dup
      16: iconst_2
      17: ldc           #48                 // String auto_flush
      19: aastore
      20: dup
      21: iconst_3
      22: ldc           #124                // String boolean_format
      24: aastore
      25: dup
      26: iconst_4
      27: ldc           #34                 // String classic_compatible
      29: aastore
      30: dup
      31: iconst_5
      32: ldc           #200                // String custom_date_formats
      34: aastore
      35: dup
      36: bipush        6
      38: ldc           #187                // String custom_number_formats
      40: aastore
      41: dup
      42: bipush        7
      44: ldc           #29                 // String date_format
      46: aastore
      47: dup
      48: bipush        8
      50: ldc           #31                 // String datetime_format
      52: aastore
      53: dup
      54: bipush        9
      56: ldc           #12                 // String locale
      58: aastore
      59: dup
      60: bipush        10
      62: ldc           #61                 // String log_template_exceptions
      64: aastore
      65: dup
      66: bipush        11
      68: ldc           #52                 // String new_builtin_class_resolver
      70: aastore
      71: dup
      72: bipush        12
      74: ldc           #24                 // String number_format
      76: aastore
      77: dup
      78: bipush        13
      80: ldc           #165                // String object_wrapper
      82: aastore
      83: dup
      84: bipush        14
      86: ldc           #168                // String output_encoding
      88: aastore
      89: dup
      90: bipush        15
      92: ldc           #54                 // String show_error_tips
      94: aastore
      95: dup
      96: bipush        16
      98: ldc           #20                 // String sql_date_and_time_time_zone
     100: aastore
     101: dup
     102: bipush        17
     104: ldc           #252                // String strict_bean_models
     106: aastore
     107: dup
     108: bipush        18
     110: ldc           #38                 // String template_exception_handler
     112: aastore
     113: dup
     114: bipush        19
     116: ldc           #27                 // String time_format
     118: aastore
     119: dup
     120: bipush        20
     122: ldc           #17                 // String time_zone
     124: aastore
     125: dup
     126: bipush        21
     128: ldc           #173                // String url_escaping_charset
     130: aastore
     131: putstatic     #298                // Field SETTING_NAMES_SNAKE_CASE:[Ljava/lang/String;
     134: bipush        22
     136: anewarray     #105                // class java/lang/String
     139: dup
     140: iconst_0
     141: ldc_w         #259                // String apiBuiltinEnabled
     144: aastore
     145: dup
     146: iconst_1
     147: ldc           #162                // String arithmeticEngine
     149: aastore
     150: dup
     151: iconst_2
     152: ldc           #255                // String autoFlush
     154: aastore
     155: dup
     156: iconst_3
     157: ldc           #120                // String booleanFormat
     159: aastore
     160: dup
     161: iconst_4
     162: ldc           #206                // String classicCompatible
     164: aastore
     165: dup
     166: iconst_5
     167: ldc           #157                // String customDateFormats
     169: aastore
     170: dup
     171: bipush        6
     173: ldc           #99                 // String customNumberFormats
     175: aastore
     176: dup
     177: bipush        7
     179: ldc           #152                // String dateFormat
     181: aastore
     182: dup
     183: bipush        8
     185: ldc           #198                // String datetimeFormat
     187: aastore
     188: dup
     189: bipush        9
     191: ldc           #12                 // String locale
     193: aastore
     194: dup
     195: bipush        10
     197: ldc_w         #291                // String logTemplateExceptions
     200: aastore
     201: dup
     202: bipush        11
     204: ldc           #176                // String newBuiltinClassResolver
     206: aastore
     207: dup
     208: bipush        12
     210: ldc           #96                 // String numberFormat
     212: aastore
     213: dup
     214: bipush        13
     216: ldc           #164                // String objectWrapper
     218: aastore
     219: dup
     220: bipush        14
     222: ldc           #248                // String outputEncoding
     224: aastore
     225: dup
     226: bipush        15
     228: ldc_w         #257                // String showErrorTips
     231: aastore
     232: dup
     233: bipush        16
     235: ldc           #204                // String sqlDateAndTimeTimeZone
     237: aastore
     238: dup
     239: bipush        17
     241: ldc           #253                // String strictBeanModels
     243: aastore
     244: dup
     245: bipush        18
     247: ldc           #160                // String templateExceptionHandler
     249: aastore
     250: dup
     251: bipush        19
     253: ldc           #150                // String timeFormat
     255: aastore
     256: dup
     257: bipush        20
     259: ldc           #91                 // String timeZone
     261: aastore
     262: dup
     263: bipush        21
     265: ldc           #250                // String urlEscapingCharset
     267: aastore
     268: putstatic     #297                // Field SETTING_NAMES_CAMEL_CASE:[Ljava/lang/String;
     271: return
}
