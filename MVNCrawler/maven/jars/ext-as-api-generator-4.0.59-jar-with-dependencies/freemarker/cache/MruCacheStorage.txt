Compiled from "MruCacheStorage.java"
public class freemarker.cache.MruCacheStorage implements freemarker.cache.CacheStorageWithGetSize {
  private final freemarker.cache.MruCacheStorage$MruEntry strongHead;

  private final freemarker.cache.MruCacheStorage$MruEntry softHead;

  private final java.util.Map map;

  private final java.lang.ref.ReferenceQueue refQueue;

  private final int strongSizeLimit;

  private final int softSizeLimit;

  private int strongSize;

  private int softSize;

  public freemarker.cache.MruCacheStorage(int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class freemarker/cache/MruCacheStorage$MruEntry
       8: dup
       9: invokespecial #3                  // Method freemarker/cache/MruCacheStorage$MruEntry."<init>":()V
      12: putfield      #4                  // Field strongHead:Lfreemarker/cache/MruCacheStorage$MruEntry;
      15: aload_0
      16: new           #2                  // class freemarker/cache/MruCacheStorage$MruEntry
      19: dup
      20: invokespecial #3                  // Method freemarker/cache/MruCacheStorage$MruEntry."<init>":()V
      23: putfield      #5                  // Field softHead:Lfreemarker/cache/MruCacheStorage$MruEntry;
      26: aload_0
      27: getfield      #5                  // Field softHead:Lfreemarker/cache/MruCacheStorage$MruEntry;
      30: aload_0
      31: getfield      #4                  // Field strongHead:Lfreemarker/cache/MruCacheStorage$MruEntry;
      34: invokevirtual #6                  // Method freemarker/cache/MruCacheStorage$MruEntry.linkAfter:(Lfreemarker/cache/MruCacheStorage$MruEntry;)V
      37: aload_0
      38: new           #7                  // class java/util/HashMap
      41: dup
      42: invokespecial #8                  // Method java/util/HashMap."<init>":()V
      45: putfield      #9                  // Field map:Ljava/util/Map;
      48: aload_0
      49: new           #10                 // class java/lang/ref/ReferenceQueue
      52: dup
      53: invokespecial #11                 // Method java/lang/ref/ReferenceQueue."<init>":()V
      56: putfield      #12                 // Field refQueue:Ljava/lang/ref/ReferenceQueue;
      59: aload_0
      60: iconst_0
      61: putfield      #13                 // Field strongSize:I
      64: aload_0
      65: iconst_0
      66: putfield      #14                 // Field softSize:I
      69: iload_1
      70: ifge          83
      73: new           #15                 // class java/lang/IllegalArgumentException
      76: dup
      77: ldc           #16                 // String strongSizeLimit < 0
      79: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      82: athrow
      83: iload_2
      84: ifge          97
      87: new           #15                 // class java/lang/IllegalArgumentException
      90: dup
      91: ldc           #18                 // String softSizeLimit < 0
      93: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      96: athrow
      97: aload_0
      98: iload_1
      99: putfield      #19                 // Field strongSizeLimit:I
     102: aload_0
     103: iload_2
     104: putfield      #20                 // Field softSizeLimit:I
     107: return

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #21                 // Method removeClearedReferences:()V
       4: aload_0
       5: getfield      #9                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #22,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #2                  // class freemarker/cache/MruCacheStorage$MruEntry
      17: astore_2
      18: aload_2
      19: ifnonnull     24
      22: aconst_null
      23: areturn
      24: aload_0
      25: aload_2
      26: aconst_null
      27: invokespecial #23                 // Method relinkEntryAfterStrongHead:(Lfreemarker/cache/MruCacheStorage$MruEntry;Ljava/lang/Object;)V
      30: aload_2
      31: invokevirtual #24                 // Method freemarker/cache/MruCacheStorage$MruEntry.getValue:()Ljava/lang/Object;
      34: astore_3
      35: aload_3
      36: instanceof    #25                 // class freemarker/cache/MruCacheStorage$MruReference
      39: ifeq          50
      42: aload_3
      43: checkcast     #25                 // class freemarker/cache/MruCacheStorage$MruReference
      46: invokevirtual #26                 // Method freemarker/cache/MruCacheStorage$MruReference.get:()Ljava/lang/Object;
      49: areturn
      50: aload_3
      51: areturn

  public void put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #21                 // Method removeClearedReferences:()V
       4: aload_0
       5: getfield      #9                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #22,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #2                  // class freemarker/cache/MruCacheStorage$MruEntry
      17: astore_3
      18: aload_3
      19: ifnonnull     52
      22: new           #2                  // class freemarker/cache/MruCacheStorage$MruEntry
      25: dup
      26: aload_1
      27: aload_2
      28: invokespecial #27                 // Method freemarker/cache/MruCacheStorage$MruEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      31: astore_3
      32: aload_0
      33: getfield      #9                  // Field map:Ljava/util/Map;
      36: aload_1
      37: aload_3
      38: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: aload_0
      45: aload_3
      46: invokespecial #29                 // Method linkAfterStrongHead:(Lfreemarker/cache/MruCacheStorage$MruEntry;)V
      49: goto          58
      52: aload_0
      53: aload_3
      54: aload_2
      55: invokespecial #23                 // Method relinkEntryAfterStrongHead:(Lfreemarker/cache/MruCacheStorage$MruEntry;Ljava/lang/Object;)V
      58: return

  public void remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #21                 // Method removeClearedReferences:()V
       4: aload_0
       5: aload_1
       6: invokespecial #30                 // Method removeInternal:(Ljava/lang/Object;)V
       9: return

  private void removeInternal(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #9                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #31,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #2                  // class freemarker/cache/MruCacheStorage$MruEntry
      13: astore_2
      14: aload_2
      15: ifnull        24
      18: aload_0
      19: aload_2
      20: invokespecial #32                 // Method unlinkEntryAndInspectIfSoft:(Lfreemarker/cache/MruCacheStorage$MruEntry;)Z
      23: pop
      24: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #4                  // Field strongHead:Lfreemarker/cache/MruCacheStorage$MruEntry;
       4: invokevirtual #33                 // Method freemarker/cache/MruCacheStorage$MruEntry.makeHead:()V
       7: aload_0
       8: getfield      #5                  // Field softHead:Lfreemarker/cache/MruCacheStorage$MruEntry;
      11: aload_0
      12: getfield      #4                  // Field strongHead:Lfreemarker/cache/MruCacheStorage$MruEntry;
      15: invokevirtual #6                  // Method freemarker/cache/MruCacheStorage$MruEntry.linkAfter:(Lfreemarker/cache/MruCacheStorage$MruEntry;)V
      18: aload_0
      19: getfield      #9                  // Field map:Ljava/util/Map;
      22: invokeinterface #34,  1           // InterfaceMethod java/util/Map.clear:()V
      27: aload_0
      28: aload_0
      29: iconst_0
      30: dup_x1
      31: putfield      #14                 // Field softSize:I
      34: putfield      #13                 // Field strongSize:I
      37: aload_0
      38: getfield      #12                 // Field refQueue:Ljava/lang/ref/ReferenceQueue;
      41: invokevirtual #35                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      44: ifnull        50
      47: goto          37
      50: return

  private void relinkEntryAfterStrongHead(freemarker.cache.MruCacheStorage$MruEntry, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #32                 // Method unlinkEntryAndInspectIfSoft:(Lfreemarker/cache/MruCacheStorage$MruEntry;)Z
       5: ifeq          62
       8: aload_2
       9: ifnonnull     62
      12: aload_1
      13: invokevirtual #24                 // Method freemarker/cache/MruCacheStorage$MruEntry.getValue:()Ljava/lang/Object;
      16: checkcast     #25                 // class freemarker/cache/MruCacheStorage$MruReference
      19: astore_3
      20: aload_3
      21: invokevirtual #26                 // Method freemarker/cache/MruCacheStorage$MruReference.get:()Ljava/lang/Object;
      24: astore        4
      26: aload         4
      28: ifnull        45
      31: aload_1
      32: aload         4
      34: invokevirtual #36                 // Method freemarker/cache/MruCacheStorage$MruEntry.setValue:(Ljava/lang/Object;)V
      37: aload_0
      38: aload_1
      39: invokespecial #29                 // Method linkAfterStrongHead:(Lfreemarker/cache/MruCacheStorage$MruEntry;)V
      42: goto          59
      45: aload_0
      46: getfield      #9                  // Field map:Ljava/util/Map;
      49: aload_3
      50: invokevirtual #37                 // Method freemarker/cache/MruCacheStorage$MruReference.getKey:()Ljava/lang/Object;
      53: invokeinterface #31,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      58: pop
      59: goto          76
      62: aload_2
      63: ifnull        71
      66: aload_1
      67: aload_2
      68: invokevirtual #36                 // Method freemarker/cache/MruCacheStorage$MruEntry.setValue:(Ljava/lang/Object;)V
      71: aload_0
      72: aload_1
      73: invokespecial #29                 // Method linkAfterStrongHead:(Lfreemarker/cache/MruCacheStorage$MruEntry;)V
      76: return

  private void linkAfterStrongHead(freemarker.cache.MruCacheStorage$MruEntry);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field strongHead:Lfreemarker/cache/MruCacheStorage$MruEntry;
       5: invokevirtual #6                  // Method freemarker/cache/MruCacheStorage$MruEntry.linkAfter:(Lfreemarker/cache/MruCacheStorage$MruEntry;)V
       8: aload_0
       9: getfield      #13                 // Field strongSize:I
      12: aload_0
      13: getfield      #19                 // Field strongSizeLimit:I
      16: if_icmpne     140
      19: aload_0
      20: getfield      #5                  // Field softHead:Lfreemarker/cache/MruCacheStorage$MruEntry;
      23: invokevirtual #38                 // Method freemarker/cache/MruCacheStorage$MruEntry.getPrevious:()Lfreemarker/cache/MruCacheStorage$MruEntry;
      26: astore_2
      27: aload_2
      28: aload_0
      29: getfield      #4                  // Field strongHead:Lfreemarker/cache/MruCacheStorage$MruEntry;
      32: if_acmpeq     137
      35: aload_2
      36: invokevirtual #39                 // Method freemarker/cache/MruCacheStorage$MruEntry.unlink:()V
      39: aload_0
      40: getfield      #20                 // Field softSizeLimit:I
      43: ifle          123
      46: aload_2
      47: aload_0
      48: getfield      #5                  // Field softHead:Lfreemarker/cache/MruCacheStorage$MruEntry;
      51: invokevirtual #6                  // Method freemarker/cache/MruCacheStorage$MruEntry.linkAfter:(Lfreemarker/cache/MruCacheStorage$MruEntry;)V
      54: aload_2
      55: new           #25                 // class freemarker/cache/MruCacheStorage$MruReference
      58: dup
      59: aload_2
      60: aload_0
      61: getfield      #12                 // Field refQueue:Ljava/lang/ref/ReferenceQueue;
      64: invokespecial #40                 // Method freemarker/cache/MruCacheStorage$MruReference."<init>":(Lfreemarker/cache/MruCacheStorage$MruEntry;Ljava/lang/ref/ReferenceQueue;)V
      67: invokevirtual #36                 // Method freemarker/cache/MruCacheStorage$MruEntry.setValue:(Ljava/lang/Object;)V
      70: aload_0
      71: getfield      #14                 // Field softSize:I
      74: aload_0
      75: getfield      #20                 // Field softSizeLimit:I
      78: if_icmpne     110
      81: aload_0
      82: getfield      #4                  // Field strongHead:Lfreemarker/cache/MruCacheStorage$MruEntry;
      85: invokevirtual #38                 // Method freemarker/cache/MruCacheStorage$MruEntry.getPrevious:()Lfreemarker/cache/MruCacheStorage$MruEntry;
      88: astore_3
      89: aload_3
      90: invokevirtual #39                 // Method freemarker/cache/MruCacheStorage$MruEntry.unlink:()V
      93: aload_0
      94: getfield      #9                  // Field map:Ljava/util/Map;
      97: aload_3
      98: invokevirtual #41                 // Method freemarker/cache/MruCacheStorage$MruEntry.getKey:()Ljava/lang/Object;
     101: invokeinterface #31,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     106: pop
     107: goto          137
     110: aload_0
     111: dup
     112: getfield      #14                 // Field softSize:I
     115: iconst_1
     116: iadd
     117: putfield      #14                 // Field softSize:I
     120: goto          137
     123: aload_0
     124: getfield      #9                  // Field map:Ljava/util/Map;
     127: aload_2
     128: invokevirtual #41                 // Method freemarker/cache/MruCacheStorage$MruEntry.getKey:()Ljava/lang/Object;
     131: invokeinterface #31,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     136: pop
     137: goto          150
     140: aload_0
     141: dup
     142: getfield      #13                 // Field strongSize:I
     145: iconst_1
     146: iadd
     147: putfield      #13                 // Field strongSize:I
     150: return

  private boolean unlinkEntryAndInspectIfSoft(freemarker.cache.MruCacheStorage$MruEntry);
    Code:
       0: aload_1
       1: invokevirtual #39                 // Method freemarker/cache/MruCacheStorage$MruEntry.unlink:()V
       4: aload_1
       5: invokevirtual #24                 // Method freemarker/cache/MruCacheStorage$MruEntry.getValue:()Ljava/lang/Object;
       8: instanceof    #25                 // class freemarker/cache/MruCacheStorage$MruReference
      11: ifeq          26
      14: aload_0
      15: dup
      16: getfield      #14                 // Field softSize:I
      19: iconst_1
      20: isub
      21: putfield      #14                 // Field softSize:I
      24: iconst_1
      25: ireturn
      26: aload_0
      27: dup
      28: getfield      #13                 // Field strongSize:I
      31: iconst_1
      32: isub
      33: putfield      #13                 // Field strongSize:I
      36: iconst_0
      37: ireturn

  private void removeClearedReferences();
    Code:
       0: aload_0
       1: getfield      #12                 // Field refQueue:Ljava/lang/ref/ReferenceQueue;
       4: invokevirtual #35                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       7: checkcast     #25                 // class freemarker/cache/MruCacheStorage$MruReference
      10: astore_1
      11: aload_1
      12: ifnonnull     18
      15: goto          29
      18: aload_0
      19: aload_1
      20: invokevirtual #37                 // Method freemarker/cache/MruCacheStorage$MruReference.getKey:()Ljava/lang/Object;
      23: invokespecial #30                 // Method removeInternal:(Ljava/lang/Object;)V
      26: goto          0
      29: return

  public int getStrongSizeLimit();
    Code:
       0: aload_0
       1: getfield      #19                 // Field strongSizeLimit:I
       4: ireturn

  public int getSoftSizeLimit();
    Code:
       0: aload_0
       1: getfield      #20                 // Field softSizeLimit:I
       4: ireturn

  public int getStrongSize();
    Code:
       0: aload_0
       1: getfield      #13                 // Field strongSize:I
       4: ireturn

  public int getSoftSize();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method removeClearedReferences:()V
       4: aload_0
       5: getfield      #14                 // Field softSize:I
       8: ireturn

  public int getSize();
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method getSoftSize:()I
       4: aload_0
       5: invokevirtual #43                 // Method getStrongSize:()I
       8: iadd
       9: ireturn
}
