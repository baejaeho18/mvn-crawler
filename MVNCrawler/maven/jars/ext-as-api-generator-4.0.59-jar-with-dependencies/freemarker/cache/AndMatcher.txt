Compiled from "AndMatcher.java"
public class freemarker.cache.AndMatcher extends freemarker.cache.TemplateSourceMatcher {
  private final freemarker.cache.TemplateSourceMatcher[] matchers;

  public freemarker.cache.AndMatcher(freemarker.cache.TemplateSourceMatcher...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method freemarker/cache/TemplateSourceMatcher."<init>":()V
       4: aload_1
       5: arraylength
       6: ifne          19
       9: new           #2                  // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #3                  // String Need at least 1 matcher, had 0.
      15: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: aload_1
      21: putfield      #5                  // Field matchers:[Lfreemarker/cache/TemplateSourceMatcher;
      24: return

  public boolean matches(java.lang.String, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field matchers:[Lfreemarker/cache/TemplateSourceMatcher;
       4: astore_3
       5: aload_3
       6: arraylength
       7: istore        4
       9: iconst_0
      10: istore        5
      12: iload         5
      14: iload         4
      16: if_icmpge     43
      19: aload_3
      20: iload         5
      22: aaload
      23: astore        6
      25: aload         6
      27: aload_1
      28: aload_2
      29: invokevirtual #6                  // Method freemarker/cache/TemplateSourceMatcher.matches:(Ljava/lang/String;Ljava/lang/Object;)Z
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: iinc          5, 1
      40: goto          12
      43: iconst_1
      44: ireturn
}
