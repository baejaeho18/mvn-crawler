Compiled from "SoftCacheStorage.java"
public class freemarker.cache.SoftCacheStorage implements freemarker.cache.ConcurrentCacheStorage,freemarker.cache.CacheStorageWithGetSize {
  private static final java.lang.reflect.Method atomicRemove;

  private final java.lang.ref.ReferenceQueue queue;

  private final java.util.Map map;

  private final boolean concurrent;

  public freemarker.cache.SoftCacheStorage();
    Code:
       0: aload_0
       1: new           #1                  // class java/util/concurrent/ConcurrentHashMap
       4: dup
       5: invokespecial #2                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Ljava/util/Map;)V
      11: return

  public boolean isConcurrent();
    Code:
       0: aload_0
       1: getfield      #4                  // Field concurrent:Z
       4: ireturn

  public freemarker.cache.SoftCacheStorage(java.util.Map);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/lang/ref/ReferenceQueue
       8: dup
       9: invokespecial #7                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      12: putfield      #8                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      15: aload_0
      16: aload_1
      17: putfield      #9                  // Field map:Ljava/util/Map;
      20: aload_0
      21: aload_0
      22: getfield      #9                  // Field map:Ljava/util/Map;
      25: instanceof    #10                 // class java/util/concurrent/ConcurrentMap
      28: putfield      #4                  // Field concurrent:Z
      31: return

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method processQueue:()V
       4: aload_0
       5: getfield      #9                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #13                 // class java/lang/ref/Reference
      17: astore_2
      18: aload_2
      19: ifnonnull     26
      22: aconst_null
      23: goto          30
      26: aload_2
      27: invokevirtual #14                 // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      30: areturn

  public void put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method processQueue:()V
       4: aload_0
       5: getfield      #9                  // Field map:Ljava/util/Map;
       8: aload_1
       9: new           #15                 // class freemarker/cache/SoftCacheStorage$SoftValueReference
      12: dup
      13: aload_1
      14: aload_2
      15: aload_0
      16: getfield      #8                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      19: invokespecial #16                 // Method freemarker/cache/SoftCacheStorage$SoftValueReference."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      22: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: return

  public void remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method processQueue:()V
       4: aload_0
       5: getfield      #9                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #18,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #9                  // Field map:Ljava/util/Map;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/Map.clear:()V
       9: aload_0
      10: invokespecial #11                 // Method processQueue:()V
      13: return

  public int getSize();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method processQueue:()V
       4: aload_0
       5: getfield      #9                  // Field map:Ljava/util/Map;
       8: invokeinterface #20,  1           // InterfaceMethod java/util/Map.size:()I
      13: ireturn

  private void processQueue();
    Code:
       0: aload_0
       1: getfield      #8                  // Field queue:Ljava/lang/ref/ReferenceQueue;
       4: invokevirtual #21                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       7: checkcast     #15                 // class freemarker/cache/SoftCacheStorage$SoftValueReference
      10: astore_1
      11: aload_1
      12: ifnonnull     16
      15: return
      16: aload_1
      17: invokevirtual #22                 // Method freemarker/cache/SoftCacheStorage$SoftValueReference.getKey:()Ljava/lang/Object;
      20: astore_2
      21: aload_0
      22: getfield      #4                  // Field concurrent:Z
      25: ifeq          74
      28: getstatic     #23                 // Field atomicRemove:Ljava/lang/reflect/Method;
      31: aload_0
      32: getfield      #9                  // Field map:Ljava/util/Map;
      35: iconst_2
      36: anewarray     #24                 // class java/lang/Object
      39: dup
      40: iconst_0
      41: aload_2
      42: aastore
      43: dup
      44: iconst_1
      45: aload_1
      46: aastore
      47: invokevirtual #25                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: goto          99
      54: astore_3
      55: new           #27                 // class freemarker/template/utility/UndeclaredThrowableException
      58: dup
      59: aload_3
      60: invokespecial #28                 // Method freemarker/template/utility/UndeclaredThrowableException."<init>":(Ljava/lang/Throwable;)V
      63: athrow
      64: astore_3
      65: new           #27                 // class freemarker/template/utility/UndeclaredThrowableException
      68: dup
      69: aload_3
      70: invokespecial #28                 // Method freemarker/template/utility/UndeclaredThrowableException."<init>":(Ljava/lang/Throwable;)V
      73: athrow
      74: aload_0
      75: getfield      #9                  // Field map:Ljava/util/Map;
      78: aload_2
      79: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      84: aload_1
      85: if_acmpne     99
      88: aload_0
      89: getfield      #9                  // Field map:Ljava/util/Map;
      92: aload_2
      93: invokeinterface #18,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      98: pop
      99: goto          0
    Exception table:
       from    to  target type
          28    51    54   Class java/lang/IllegalAccessException
          28    51    64   Class java/lang/reflect/InvocationTargetException

  private static java.lang.reflect.Method getAtomicRemoveMethod();
    Code:
       0: ldc           #30                 // String java.util.concurrent.ConcurrentMap
       2: invokestatic  #31                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       5: ldc           #32                 // String remove
       7: iconst_2
       8: anewarray     #33                 // class java/lang/Class
      11: dup
      12: iconst_0
      13: ldc           #24                 // class java/lang/Object
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #24                 // class java/lang/Object
      20: aastore
      21: invokevirtual #34                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      24: areturn
      25: astore_0
      26: aconst_null
      27: areturn
      28: astore_0
      29: new           #27                 // class freemarker/template/utility/UndeclaredThrowableException
      32: dup
      33: aload_0
      34: invokespecial #28                 // Method freemarker/template/utility/UndeclaredThrowableException."<init>":(Ljava/lang/Throwable;)V
      37: athrow
    Exception table:
       from    to  target type
           0    24    25   Class java/lang/ClassNotFoundException
           0    24    28   Class java/lang/NoSuchMethodException

  static {};
    Code:
       0: invokestatic  #37                 // Method getAtomicRemoveMethod:()Ljava/lang/reflect/Method;
       3: putstatic     #23                 // Field atomicRemove:Ljava/lang/reflect/Method;
       6: return
}
