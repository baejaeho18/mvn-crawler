Compiled from "FileNameGlobMatcher.java"
public class freemarker.cache.FileNameGlobMatcher extends freemarker.cache.TemplateSourceMatcher {
  private final java.lang.String glob;

  private java.util.regex.Pattern pattern;

  private boolean caseInsensitive;

  public freemarker.cache.FileNameGlobMatcher(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method freemarker/cache/TemplateSourceMatcher."<init>":()V
       4: aload_1
       5: bipush        47
       7: invokevirtual #2                  // Method java/lang/String.indexOf:(I)I
      10: iconst_m1
      11: if_icmpeq     41
      14: new           #3                  // class java/lang/IllegalArgumentException
      17: dup
      18: new           #4                  // class java/lang/StringBuilder
      21: dup
      22: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #6                  // String A file name glob can\'t contain \"/\":
      27: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_0
      42: aload_1
      43: putfield      #10                 // Field glob:Ljava/lang/String;
      46: aload_0
      47: invokespecial #11                 // Method buildPattern:()V
      50: return

  private void buildPattern();
    Code:
       0: aload_0
       1: new           #4                  // class java/lang/StringBuilder
       4: dup
       5: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #12                 // String **/
      10: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_0
      14: getfield      #10                 // Field glob:Ljava/lang/String;
      17: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: aload_0
      24: getfield      #13                 // Field caseInsensitive:Z
      27: invokestatic  #14                 // Method freemarker/template/utility/StringUtil.globToRegularExpression:(Ljava/lang/String;Z)Ljava/util/regex/Pattern;
      30: putfield      #15                 // Field pattern:Ljava/util/regex/Pattern;
      33: return

  public boolean matches(java.lang.String, java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #15                 // Field pattern:Ljava/util/regex/Pattern;
       4: aload_1
       5: invokevirtual #16                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       8: invokevirtual #17                 // Method java/util/regex/Matcher.matches:()Z
      11: ireturn

  public boolean isCaseInsensitive();
    Code:
       0: aload_0
       1: getfield      #13                 // Field caseInsensitive:Z
       4: ireturn

  public void setCaseInsensitive(boolean);
    Code:
       0: aload_0
       1: getfield      #13                 // Field caseInsensitive:Z
       4: istore_2
       5: aload_0
       6: iload_1
       7: putfield      #13                 // Field caseInsensitive:Z
      10: iload_2
      11: iload_1
      12: if_icmpeq     19
      15: aload_0
      16: invokespecial #11                 // Method buildPattern:()V
      19: return

  public freemarker.cache.FileNameGlobMatcher caseInsensitive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #18                 // Method setCaseInsensitive:(Z)V
       5: aload_0
       6: areturn
}
