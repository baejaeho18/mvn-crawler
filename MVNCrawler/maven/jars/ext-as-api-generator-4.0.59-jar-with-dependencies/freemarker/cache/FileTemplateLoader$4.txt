Compiled from "FileTemplateLoader.java"
class freemarker.cache.FileTemplateLoader$4 implements java.security.PrivilegedExceptionAction {
  final java.lang.Object val$templateSource;

  final java.lang.String val$encoding;

  final freemarker.cache.FileTemplateLoader this$0;

  freemarker.cache.FileTemplateLoader$4(freemarker.cache.FileTemplateLoader, java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lfreemarker/cache/FileTemplateLoader;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$templateSource:Ljava/lang/Object;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$encoding:Ljava/lang/String;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  public java.lang.Object run() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$templateSource:Ljava/lang/Object;
       4: instanceof    #5                  // class java/io/File
       7: ifne          46
      10: new           #6                  // class java/lang/IllegalArgumentException
      13: dup
      14: new           #7                  // class java/lang/StringBuilder
      17: dup
      18: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #9                  // String templateSource wasn\'t a File, but a:
      23: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #2                  // Field val$templateSource:Ljava/lang/Object;
      30: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      33: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
      36: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: new           #15                 // class java/io/InputStreamReader
      49: dup
      50: new           #16                 // class java/io/FileInputStream
      53: dup
      54: aload_0
      55: getfield      #2                  // Field val$templateSource:Ljava/lang/Object;
      58: checkcast     #5                  // class java/io/File
      61: invokespecial #17                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      64: aload_0
      65: getfield      #3                  // Field val$encoding:Ljava/lang/String;
      68: invokespecial #18                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
      71: areturn
}
