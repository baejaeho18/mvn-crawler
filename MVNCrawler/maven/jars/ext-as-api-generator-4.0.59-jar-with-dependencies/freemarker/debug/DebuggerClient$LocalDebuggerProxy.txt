Compiled from "DebuggerClient.java"
class freemarker.debug.DebuggerClient$LocalDebuggerProxy implements freemarker.debug.Debugger {
  private final freemarker.debug.Debugger remoteDebugger;

  freemarker.debug.DebuggerClient$LocalDebuggerProxy(freemarker.debug.Debugger);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field remoteDebugger:Lfreemarker/debug/Debugger;
       9: return

  public void addBreakpoint(freemarker.debug.Breakpoint) throws java.rmi.RemoteException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field remoteDebugger:Lfreemarker/debug/Debugger;
       4: aload_1
       5: invokeinterface #3,  2            // InterfaceMethod freemarker/debug/Debugger.addBreakpoint:(Lfreemarker/debug/Breakpoint;)V
      10: return

  public java.lang.Object addDebuggerListener(freemarker.debug.DebuggerListener) throws java.rmi.RemoteException;
    Code:
       0: aload_1
       1: instanceof    #4                  // class java/rmi/server/RemoteObject
       4: ifeq          18
       7: aload_0
       8: getfield      #2                  // Field remoteDebugger:Lfreemarker/debug/Debugger;
      11: aload_1
      12: invokeinterface #5,  2            // InterfaceMethod freemarker/debug/Debugger.addDebuggerListener:(Lfreemarker/debug/DebuggerListener;)Ljava/lang/Object;
      17: areturn
      18: new           #6                  // class freemarker/debug/impl/RmiDebuggerListenerImpl
      21: dup
      22: aload_1
      23: invokespecial #7                  // Method freemarker/debug/impl/RmiDebuggerListenerImpl."<init>":(Lfreemarker/debug/DebuggerListener;)V
      26: astore_2
      27: aload_0
      28: getfield      #2                  // Field remoteDebugger:Lfreemarker/debug/Debugger;
      31: aload_2
      32: invokeinterface #5,  2            // InterfaceMethod freemarker/debug/Debugger.addDebuggerListener:(Lfreemarker/debug/DebuggerListener;)Ljava/lang/Object;
      37: areturn

  public java.util.List getBreakpoints() throws java.rmi.RemoteException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field remoteDebugger:Lfreemarker/debug/Debugger;
       4: invokeinterface #8,  1            // InterfaceMethod freemarker/debug/Debugger.getBreakpoints:()Ljava/util/List;
       9: areturn

  public java.util.List getBreakpoints(java.lang.String) throws java.rmi.RemoteException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field remoteDebugger:Lfreemarker/debug/Debugger;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod freemarker/debug/Debugger.getBreakpoints:(Ljava/lang/String;)Ljava/util/List;
      10: areturn

  public java.util.Collection getSuspendedEnvironments() throws java.rmi.RemoteException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field remoteDebugger:Lfreemarker/debug/Debugger;
       4: invokeinterface #10,  1           // InterfaceMethod freemarker/debug/Debugger.getSuspendedEnvironments:()Ljava/util/Collection;
       9: areturn

  public void removeBreakpoint(freemarker.debug.Breakpoint) throws java.rmi.RemoteException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field remoteDebugger:Lfreemarker/debug/Debugger;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod freemarker/debug/Debugger.removeBreakpoint:(Lfreemarker/debug/Breakpoint;)V
      10: return

  public void removeBreakpoints(java.lang.String) throws java.rmi.RemoteException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field remoteDebugger:Lfreemarker/debug/Debugger;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod freemarker/debug/Debugger.removeBreakpoints:(Ljava/lang/String;)V
      10: return

  public void removeBreakpoints() throws java.rmi.RemoteException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field remoteDebugger:Lfreemarker/debug/Debugger;
       4: invokeinterface #13,  1           // InterfaceMethod freemarker/debug/Debugger.removeBreakpoints:()V
       9: return

  public void removeDebuggerListener(java.lang.Object) throws java.rmi.RemoteException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field remoteDebugger:Lfreemarker/debug/Debugger;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod freemarker/debug/Debugger.removeDebuggerListener:(Ljava/lang/Object;)V
      10: return
}
