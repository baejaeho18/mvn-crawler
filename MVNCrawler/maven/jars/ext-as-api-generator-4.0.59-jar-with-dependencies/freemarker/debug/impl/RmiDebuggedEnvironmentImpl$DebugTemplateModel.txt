Compiled from "RmiDebuggedEnvironmentImpl.java"
class freemarker.debug.impl.RmiDebuggedEnvironmentImpl$DebugTemplateModel extends freemarker.debug.impl.RmiDebuggedEnvironmentImpl$DebugConfigurableModel {
  private static final java.util.List KEYS;

  private final freemarker.template.SimpleScalar name;

  freemarker.debug.impl.RmiDebuggedEnvironmentImpl$DebugTemplateModel(freemarker.template.Template);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method freemarker/debug/impl/RmiDebuggedEnvironmentImpl$DebugConfigurableModel."<init>":(Lfreemarker/core/Configurable;)V
       5: aload_0
       6: new           #2                  // class freemarker/template/SimpleScalar
       9: dup
      10: aload_1
      11: invokevirtual #3                  // Method freemarker/template/Template.getName:()Ljava/lang/String;
      14: invokespecial #4                  // Method freemarker/template/SimpleScalar."<init>":(Ljava/lang/String;)V
      17: putfield      #5                  // Field name:Lfreemarker/template/SimpleScalar;
      20: return

  java.util.Collection keySet();
    Code:
       0: getstatic     #6                  // Field KEYS:Ljava/util/List;
       3: areturn

  public freemarker.template.TemplateModel get(java.lang.String) throws freemarker.template.TemplateModelException;
    Code:
       0: ldc           #7                  // String configuration
       2: aload_1
       3: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          36
       9: aload_0
      10: getfield      #9                  // Field configurable:Lfreemarker/core/Configurable;
      13: checkcast     #10                 // class freemarker/template/Template
      16: invokevirtual #11                 // Method freemarker/template/Template.getConfiguration:()Lfreemarker/template/Configuration;
      19: invokestatic  #12                 // Method freemarker/debug/impl/RmiDebuggedEnvironmentImpl.getCachedWrapperFor:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #13                 // class freemarker/template/TemplateModel
      25: areturn
      26: astore_2
      27: new           #15                 // class freemarker/template/TemplateModelException
      30: dup
      31: aload_2
      32: invokespecial #16                 // Method freemarker/template/TemplateModelException."<init>":(Ljava/lang/Exception;)V
      35: athrow
      36: ldc           #17                 // String name
      38: aload_1
      39: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      42: ifeq          50
      45: aload_0
      46: getfield      #5                  // Field name:Lfreemarker/template/SimpleScalar;
      49: areturn
      50: aload_0
      51: aload_1
      52: invokespecial #18                 // Method freemarker/debug/impl/RmiDebuggedEnvironmentImpl$DebugConfigurableModel.get:(Ljava/lang/String;)Lfreemarker/template/TemplateModel;
      55: areturn
    Exception table:
       from    to  target type
           9    25    26   Class java/rmi/RemoteException

  static {};
    Code:
       0: getstatic     #19                 // Field freemarker/debug/impl/RmiDebuggedEnvironmentImpl$DebugConfigurableModel.KEYS:Ljava/util/List;
       3: iconst_2
       4: anewarray     #20                 // class java/lang/String
       7: dup
       8: iconst_0
       9: ldc           #7                  // String configuration
      11: aastore
      12: dup
      13: iconst_1
      14: ldc           #17                 // String name
      16: aastore
      17: invokestatic  #21                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      20: invokestatic  #22                 // Method composeList:(Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/List;
      23: putstatic     #6                  // Field KEYS:Ljava/util/List;
      26: return
}
