Compiled from "DebuggerService.java"
public abstract class freemarker.debug.impl.DebuggerService {
  private static final freemarker.debug.impl.DebuggerService instance;

  public freemarker.debug.impl.DebuggerService();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  private static freemarker.debug.impl.DebuggerService createInstance();
    Code:
       0: ldc           #2                  // String freemarker.debug.password
       2: aconst_null
       3: invokestatic  #3                  // Method freemarker/template/utility/SecurityUtilities.getSystemProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       6: ifnonnull     20
       9: new           #4                  // class freemarker/debug/impl/DebuggerService$NoOpDebuggerService
      12: dup
      13: aconst_null
      14: invokespecial #5                  // Method freemarker/debug/impl/DebuggerService$NoOpDebuggerService."<init>":(Lfreemarker/debug/impl/DebuggerService$1;)V
      17: goto          27
      20: new           #6                  // class freemarker/debug/impl/RmiDebuggerService
      23: dup
      24: invokespecial #7                  // Method freemarker/debug/impl/RmiDebuggerService."<init>":()V
      27: areturn

  public static java.util.List getBreakpoints(java.lang.String);
    Code:
       0: getstatic     #8                  // Field instance:Lfreemarker/debug/impl/DebuggerService;
       3: aload_0
       4: invokevirtual #9                  // Method getBreakpointsSpi:(Ljava/lang/String;)Ljava/util/List;
       7: areturn

  abstract java.util.List getBreakpointsSpi(java.lang.String);

  public static void registerTemplate(freemarker.template.Template);
    Code:
       0: getstatic     #8                  // Field instance:Lfreemarker/debug/impl/DebuggerService;
       3: aload_0
       4: invokevirtual #10                 // Method registerTemplateSpi:(Lfreemarker/template/Template;)V
       7: return

  abstract void registerTemplateSpi(freemarker.template.Template);

  public static boolean suspendEnvironment(freemarker.core.Environment, java.lang.String, int) throws java.rmi.RemoteException;
    Code:
       0: getstatic     #8                  // Field instance:Lfreemarker/debug/impl/DebuggerService;
       3: aload_0
       4: aload_1
       5: iload_2
       6: invokevirtual #11                 // Method suspendEnvironmentSpi:(Lfreemarker/core/Environment;Ljava/lang/String;I)Z
       9: ireturn

  abstract boolean suspendEnvironmentSpi(freemarker.core.Environment, java.lang.String, int) throws java.rmi.RemoteException;

  abstract void shutdownSpi();

  public static void shutdown();
    Code:
       0: getstatic     #8                  // Field instance:Lfreemarker/debug/impl/DebuggerService;
       3: invokevirtual #12                 // Method shutdownSpi:()V
       6: return

  static {};
    Code:
       0: invokestatic  #13                 // Method createInstance:()Lfreemarker/debug/impl/DebuggerService;
       3: putstatic     #8                  // Field instance:Lfreemarker/debug/impl/DebuggerService;
       6: return
}
