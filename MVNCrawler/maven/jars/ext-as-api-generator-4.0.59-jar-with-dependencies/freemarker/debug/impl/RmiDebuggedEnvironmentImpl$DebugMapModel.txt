Compiled from "RmiDebuggedEnvironmentImpl.java"
abstract class freemarker.debug.impl.RmiDebuggedEnvironmentImpl$DebugMapModel implements freemarker.template.TemplateHashModelEx {
  private freemarker.debug.impl.RmiDebuggedEnvironmentImpl$DebugMapModel();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method keySet:()Ljava/util/Collection;
       4: invokeinterface #4,  1            // InterfaceMethod java/util/Collection.size:()I
       9: ireturn

  public freemarker.template.TemplateCollectionModel keys();
    Code:
       0: new           #5                  // class freemarker/template/SimpleCollection
       3: dup
       4: aload_0
       5: invokevirtual #3                  // Method keySet:()Ljava/util/Collection;
       8: invokespecial #6                  // Method freemarker/template/SimpleCollection."<init>":(Ljava/util/Collection;)V
      11: areturn

  public freemarker.template.TemplateCollectionModel values() throws freemarker.template.TemplateModelException;
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method keySet:()Ljava/util/Collection;
       4: astore_1
       5: new           #7                  // class java/util/ArrayList
       8: dup
       9: aload_1
      10: invokeinterface #4,  1            // InterfaceMethod java/util/Collection.size:()I
      15: invokespecial #8                  // Method java/util/ArrayList."<init>":(I)V
      18: astore_2
      19: aload_1
      20: invokeinterface #9,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      25: astore_3
      26: aload_3
      27: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          58
      35: aload_2
      36: aload_0
      37: aload_3
      38: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #12                 // class java/lang/String
      46: invokevirtual #13                 // Method get:(Ljava/lang/String;)Lfreemarker/template/TemplateModel;
      49: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      54: pop
      55: goto          26
      58: new           #5                  // class freemarker/template/SimpleCollection
      61: dup
      62: aload_2
      63: invokespecial #6                  // Method freemarker/template/SimpleCollection."<init>":(Ljava/util/Collection;)V
      66: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method size:()I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  abstract java.util.Collection keySet();

  static java.util.List composeList(java.util.Collection, java.util.Collection);
    Code:
       0: new           #7                  // class java/util/ArrayList
       3: dup
       4: aload_0
       5: invokespecial #16                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
       8: astore_2
       9: aload_2
      10: aload_1
      11: invokeinterface #17,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      16: pop
      17: aload_2
      18: invokestatic  #18                 // Method java/util/Collections.sort:(Ljava/util/List;)V
      21: aload_2
      22: areturn

  freemarker.debug.impl.RmiDebuggedEnvironmentImpl$DebugMapModel(freemarker.debug.impl.RmiDebuggedEnvironmentImpl$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
