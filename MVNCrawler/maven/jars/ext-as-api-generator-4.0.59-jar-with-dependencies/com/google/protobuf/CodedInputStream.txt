Compiled from "CodedInputStream.java"
public final class com.google.protobuf.CodedInputStream {
  private final byte[] buffer;

  private int bufferSize;

  private int bufferSizeAfterLimit;

  private int bufferPos;

  private final java.io.InputStream input;

  private int lastTag;

  private int totalBytesRetired;

  private int currentLimit;

  private int recursionDepth;

  private int recursionLimit;

  private int sizeLimit;

  private static final int DEFAULT_RECURSION_LIMIT;

  private static final int DEFAULT_SIZE_LIMIT;

  private static final int BUFFER_SIZE;

  public static com.google.protobuf.CodedInputStream newInstance(java.io.InputStream);
    Code:
       0: new           #8                  // class com/google/protobuf/CodedInputStream
       3: dup
       4: aload_0
       5: invokespecial #9                  // Method "<init>":(Ljava/io/InputStream;)V
       8: areturn

  public static com.google.protobuf.CodedInputStream newInstance(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: invokestatic  #10                 // Method newInstance:([BII)Lcom/google/protobuf/CodedInputStream;
       7: areturn

  public static com.google.protobuf.CodedInputStream newInstance(byte[], int, int);
    Code:
       0: new           #8                  // class com/google/protobuf/CodedInputStream
       3: dup
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokespecial #11                 // Method "<init>":([BII)V
      10: astore_3
      11: aload_3
      12: iload_2
      13: invokevirtual #12                 // Method pushLimit:(I)I
      16: pop
      17: goto          32
      20: astore        4
      22: new           #14                 // class java/lang/IllegalArgumentException
      25: dup
      26: aload         4
      28: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      31: athrow
      32: aload_3
      33: areturn
    Exception table:
       from    to  target type
          11    17    20   Class com/google/protobuf/InvalidProtocolBufferException

  public int readTag() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method isAtEnd:()Z
       4: ifeq          14
       7: aload_0
       8: iconst_0
       9: putfield      #17                 // Field lastTag:I
      12: iconst_0
      13: ireturn
      14: aload_0
      15: aload_0
      16: invokevirtual #18                 // Method readRawVarint32:()I
      19: putfield      #17                 // Field lastTag:I
      22: aload_0
      23: getfield      #17                 // Field lastTag:I
      26: invokestatic  #19                 // Method com/google/protobuf/WireFormat.getTagFieldNumber:(I)I
      29: ifne          36
      32: invokestatic  #20                 // Method com/google/protobuf/InvalidProtocolBufferException.invalidTag:()Lcom/google/protobuf/InvalidProtocolBufferException;
      35: athrow
      36: aload_0
      37: getfield      #17                 // Field lastTag:I
      40: ireturn

  public void checkLastTagWas(int) throws com.google.protobuf.InvalidProtocolBufferException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field lastTag:I
       4: iload_1
       5: if_icmpeq     12
       8: invokestatic  #21                 // Method com/google/protobuf/InvalidProtocolBufferException.invalidEndTag:()Lcom/google/protobuf/InvalidProtocolBufferException;
      11: athrow
      12: return

  public boolean skipField(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: invokestatic  #22                 // Method com/google/protobuf/WireFormat.getTagWireType:(I)I
       4: tableswitch   { // 0 to 5
                     0: 44
                     1: 51
                     2: 58
                     3: 68
                     4: 86
                     5: 88
               default: 95
          }
      44: aload_0
      45: invokevirtual #23                 // Method readInt32:()I
      48: pop
      49: iconst_1
      50: ireturn
      51: aload_0
      52: invokevirtual #24                 // Method readRawLittleEndian64:()J
      55: pop2
      56: iconst_1
      57: ireturn
      58: aload_0
      59: aload_0
      60: invokevirtual #18                 // Method readRawVarint32:()I
      63: invokevirtual #25                 // Method skipRawBytes:(I)V
      66: iconst_1
      67: ireturn
      68: aload_0
      69: invokevirtual #26                 // Method skipMessage:()V
      72: aload_0
      73: iload_1
      74: invokestatic  #19                 // Method com/google/protobuf/WireFormat.getTagFieldNumber:(I)I
      77: iconst_4
      78: invokestatic  #27                 // Method com/google/protobuf/WireFormat.makeTag:(II)I
      81: invokevirtual #28                 // Method checkLastTagWas:(I)V
      84: iconst_1
      85: ireturn
      86: iconst_0
      87: ireturn
      88: aload_0
      89: invokevirtual #29                 // Method readRawLittleEndian32:()I
      92: pop
      93: iconst_1
      94: ireturn
      95: invokestatic  #30                 // Method com/google/protobuf/InvalidProtocolBufferException.invalidWireType:()Lcom/google/protobuf/InvalidProtocolBufferException;
      98: athrow

  public void skipMessage() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method readTag:()I
       4: istore_1
       5: iload_1
       6: ifeq          17
       9: aload_0
      10: iload_1
      11: invokevirtual #32                 // Method skipField:(I)Z
      14: ifne          18
      17: return
      18: goto          0

  public double readDouble() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method readRawLittleEndian64:()J
       4: invokestatic  #33                 // Method java/lang/Double.longBitsToDouble:(J)D
       7: dreturn

  public float readFloat() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method readRawLittleEndian32:()I
       4: invokestatic  #34                 // Method java/lang/Float.intBitsToFloat:(I)F
       7: freturn

  public long readUInt64() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method readRawVarint64:()J
       4: lreturn

  public long readInt64() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method readRawVarint64:()J
       4: lreturn

  public int readInt32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method readRawVarint32:()I
       4: ireturn

  public long readFixed64() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method readRawLittleEndian64:()J
       4: lreturn

  public int readFixed32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method readRawLittleEndian32:()I
       4: ireturn

  public boolean readBool() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method readRawVarint32:()I
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.String readString() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method readRawVarint32:()I
       4: istore_1
       5: iload_1
       6: aload_0
       7: getfield      #36                 // Field bufferSize:I
      10: aload_0
      11: getfield      #37                 // Field bufferPos:I
      14: isub
      15: if_icmpgt     53
      18: iload_1
      19: ifle          53
      22: new           #38                 // class java/lang/String
      25: dup
      26: aload_0
      27: getfield      #39                 // Field buffer:[B
      30: aload_0
      31: getfield      #37                 // Field bufferPos:I
      34: iload_1
      35: ldc           #40                 // String UTF-8
      37: invokespecial #41                 // Method java/lang/String."<init>":([BIILjava/lang/String;)V
      40: astore_2
      41: aload_0
      42: dup
      43: getfield      #37                 // Field bufferPos:I
      46: iload_1
      47: iadd
      48: putfield      #37                 // Field bufferPos:I
      51: aload_2
      52: areturn
      53: new           #38                 // class java/lang/String
      56: dup
      57: aload_0
      58: iload_1
      59: invokevirtual #42                 // Method readRawBytes:(I)[B
      62: ldc           #40                 // String UTF-8
      64: invokespecial #43                 // Method java/lang/String."<init>":([BLjava/lang/String;)V
      67: areturn

  public void readGroup(int, com.google.protobuf.MessageLite$Builder, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #44                 // Field recursionDepth:I
       4: aload_0
       5: getfield      #45                 // Field recursionLimit:I
       8: if_icmplt     15
      11: invokestatic  #46                 // Method com/google/protobuf/InvalidProtocolBufferException.recursionLimitExceeded:()Lcom/google/protobuf/InvalidProtocolBufferException;
      14: athrow
      15: aload_0
      16: dup
      17: getfield      #44                 // Field recursionDepth:I
      20: iconst_1
      21: iadd
      22: putfield      #44                 // Field recursionDepth:I
      25: aload_2
      26: aload_0
      27: aload_3
      28: invokeinterface #47,  3           // InterfaceMethod com/google/protobuf/MessageLite$Builder.mergeFrom:(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/MessageLite$Builder;
      33: pop
      34: aload_0
      35: iload_1
      36: iconst_4
      37: invokestatic  #27                 // Method com/google/protobuf/WireFormat.makeTag:(II)I
      40: invokevirtual #28                 // Method checkLastTagWas:(I)V
      43: aload_0
      44: dup
      45: getfield      #44                 // Field recursionDepth:I
      48: iconst_1
      49: isub
      50: putfield      #44                 // Field recursionDepth:I
      53: return

  public <T extends com.google.protobuf.MessageLite> T readGroup(int, com.google.protobuf.Parser<T>, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #44                 // Field recursionDepth:I
       4: aload_0
       5: getfield      #45                 // Field recursionLimit:I
       8: if_icmplt     15
      11: invokestatic  #46                 // Method com/google/protobuf/InvalidProtocolBufferException.recursionLimitExceeded:()Lcom/google/protobuf/InvalidProtocolBufferException;
      14: athrow
      15: aload_0
      16: dup
      17: getfield      #44                 // Field recursionDepth:I
      20: iconst_1
      21: iadd
      22: putfield      #44                 // Field recursionDepth:I
      25: aload_2
      26: aload_0
      27: aload_3
      28: invokeinterface #48,  3           // InterfaceMethod com/google/protobuf/Parser.parsePartialFrom:(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      33: checkcast     #49                 // class com/google/protobuf/MessageLite
      36: astore        4
      38: aload_0
      39: iload_1
      40: iconst_4
      41: invokestatic  #27                 // Method com/google/protobuf/WireFormat.makeTag:(II)I
      44: invokevirtual #28                 // Method checkLastTagWas:(I)V
      47: aload_0
      48: dup
      49: getfield      #44                 // Field recursionDepth:I
      52: iconst_1
      53: isub
      54: putfield      #44                 // Field recursionDepth:I
      57: aload         4
      59: areturn

  public void readUnknownGroup(int, com.google.protobuf.MessageLite$Builder) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #50                 // Method readGroup:(ILcom/google/protobuf/MessageLite$Builder;Lcom/google/protobuf/ExtensionRegistryLite;)V
       7: return

  public void readMessage(com.google.protobuf.MessageLite$Builder, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method readRawVarint32:()I
       4: istore_3
       5: aload_0
       6: getfield      #44                 // Field recursionDepth:I
       9: aload_0
      10: getfield      #45                 // Field recursionLimit:I
      13: if_icmplt     20
      16: invokestatic  #46                 // Method com/google/protobuf/InvalidProtocolBufferException.recursionLimitExceeded:()Lcom/google/protobuf/InvalidProtocolBufferException;
      19: athrow
      20: aload_0
      21: iload_3
      22: invokevirtual #12                 // Method pushLimit:(I)I
      25: istore        4
      27: aload_0
      28: dup
      29: getfield      #44                 // Field recursionDepth:I
      32: iconst_1
      33: iadd
      34: putfield      #44                 // Field recursionDepth:I
      37: aload_1
      38: aload_0
      39: aload_2
      40: invokeinterface #47,  3           // InterfaceMethod com/google/protobuf/MessageLite$Builder.mergeFrom:(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/MessageLite$Builder;
      45: pop
      46: aload_0
      47: iconst_0
      48: invokevirtual #28                 // Method checkLastTagWas:(I)V
      51: aload_0
      52: dup
      53: getfield      #44                 // Field recursionDepth:I
      56: iconst_1
      57: isub
      58: putfield      #44                 // Field recursionDepth:I
      61: aload_0
      62: iload         4
      64: invokevirtual #51                 // Method popLimit:(I)V
      67: return

  public <T extends com.google.protobuf.MessageLite> T readMessage(com.google.protobuf.Parser<T>, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method readRawVarint32:()I
       4: istore_3
       5: aload_0
       6: getfield      #44                 // Field recursionDepth:I
       9: aload_0
      10: getfield      #45                 // Field recursionLimit:I
      13: if_icmplt     20
      16: invokestatic  #46                 // Method com/google/protobuf/InvalidProtocolBufferException.recursionLimitExceeded:()Lcom/google/protobuf/InvalidProtocolBufferException;
      19: athrow
      20: aload_0
      21: iload_3
      22: invokevirtual #12                 // Method pushLimit:(I)I
      25: istore        4
      27: aload_0
      28: dup
      29: getfield      #44                 // Field recursionDepth:I
      32: iconst_1
      33: iadd
      34: putfield      #44                 // Field recursionDepth:I
      37: aload_1
      38: aload_0
      39: aload_2
      40: invokeinterface #48,  3           // InterfaceMethod com/google/protobuf/Parser.parsePartialFrom:(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      45: checkcast     #49                 // class com/google/protobuf/MessageLite
      48: astore        5
      50: aload_0
      51: iconst_0
      52: invokevirtual #28                 // Method checkLastTagWas:(I)V
      55: aload_0
      56: dup
      57: getfield      #44                 // Field recursionDepth:I
      60: iconst_1
      61: isub
      62: putfield      #44                 // Field recursionDepth:I
      65: aload_0
      66: iload         4
      68: invokevirtual #51                 // Method popLimit:(I)V
      71: aload         5
      73: areturn

  public com.google.protobuf.ByteString readBytes() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method readRawVarint32:()I
       4: istore_1
       5: iload_1
       6: ifne          13
       9: getstatic     #52                 // Field com/google/protobuf/ByteString.EMPTY:Lcom/google/protobuf/ByteString;
      12: areturn
      13: iload_1
      14: aload_0
      15: getfield      #36                 // Field bufferSize:I
      18: aload_0
      19: getfield      #37                 // Field bufferPos:I
      22: isub
      23: if_icmpgt     55
      26: iload_1
      27: ifle          55
      30: aload_0
      31: getfield      #39                 // Field buffer:[B
      34: aload_0
      35: getfield      #37                 // Field bufferPos:I
      38: iload_1
      39: invokestatic  #53                 // Method com/google/protobuf/ByteString.copyFrom:([BII)Lcom/google/protobuf/ByteString;
      42: astore_2
      43: aload_0
      44: dup
      45: getfield      #37                 // Field bufferPos:I
      48: iload_1
      49: iadd
      50: putfield      #37                 // Field bufferPos:I
      53: aload_2
      54: areturn
      55: aload_0
      56: iload_1
      57: invokevirtual #42                 // Method readRawBytes:(I)[B
      60: invokestatic  #54                 // Method com/google/protobuf/ByteString.copyFrom:([B)Lcom/google/protobuf/ByteString;
      63: areturn

  public int readUInt32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method readRawVarint32:()I
       4: ireturn

  public int readEnum() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method readRawVarint32:()I
       4: ireturn

  public int readSFixed32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method readRawLittleEndian32:()I
       4: ireturn

  public long readSFixed64() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method readRawLittleEndian64:()J
       4: lreturn

  public int readSInt32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method readRawVarint32:()I
       4: invokestatic  #55                 // Method decodeZigZag32:(I)I
       7: ireturn

  public long readSInt64() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method readRawVarint64:()J
       4: invokestatic  #56                 // Method decodeZigZag64:(J)J
       7: lreturn

  public int readRawVarint32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method readRawByte:()B
       4: istore_1
       5: iload_1
       6: iflt          11
       9: iload_1
      10: ireturn
      11: iload_1
      12: bipush        127
      14: iand
      15: istore_2
      16: aload_0
      17: invokevirtual #57                 // Method readRawByte:()B
      20: dup
      21: istore_1
      22: iflt          35
      25: iload_2
      26: iload_1
      27: bipush        7
      29: ishl
      30: ior
      31: istore_2
      32: goto          145
      35: iload_2
      36: iload_1
      37: bipush        127
      39: iand
      40: bipush        7
      42: ishl
      43: ior
      44: istore_2
      45: aload_0
      46: invokevirtual #57                 // Method readRawByte:()B
      49: dup
      50: istore_1
      51: iflt          64
      54: iload_2
      55: iload_1
      56: bipush        14
      58: ishl
      59: ior
      60: istore_2
      61: goto          145
      64: iload_2
      65: iload_1
      66: bipush        127
      68: iand
      69: bipush        14
      71: ishl
      72: ior
      73: istore_2
      74: aload_0
      75: invokevirtual #57                 // Method readRawByte:()B
      78: dup
      79: istore_1
      80: iflt          93
      83: iload_2
      84: iload_1
      85: bipush        21
      87: ishl
      88: ior
      89: istore_2
      90: goto          145
      93: iload_2
      94: iload_1
      95: bipush        127
      97: iand
      98: bipush        21
     100: ishl
     101: ior
     102: istore_2
     103: iload_2
     104: aload_0
     105: invokevirtual #57                 // Method readRawByte:()B
     108: dup
     109: istore_1
     110: bipush        28
     112: ishl
     113: ior
     114: istore_2
     115: iload_1
     116: ifge          145
     119: iconst_0
     120: istore_3
     121: iload_3
     122: iconst_5
     123: if_icmpge     141
     126: aload_0
     127: invokevirtual #57                 // Method readRawByte:()B
     130: iflt          135
     133: iload_2
     134: ireturn
     135: iinc          3, 1
     138: goto          121
     141: invokestatic  #58                 // Method com/google/protobuf/InvalidProtocolBufferException.malformedVarint:()Lcom/google/protobuf/InvalidProtocolBufferException;
     144: athrow
     145: iload_2
     146: ireturn

  static int readRawVarint32(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method java/io/InputStream.read:()I
       4: istore_1
       5: iload_1
       6: iconst_m1
       7: if_icmpne     14
      10: invokestatic  #60                 // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
      13: athrow
      14: iload_1
      15: aload_0
      16: invokestatic  #61                 // Method readRawVarint32:(ILjava/io/InputStream;)I
      19: ireturn

  public static int readRawVarint32(int, java.io.InputStream) throws java.io.IOException;
    Code:
       0: iload_0
       1: sipush        128
       4: iand
       5: ifne          10
       8: iload_0
       9: ireturn
      10: iload_0
      11: bipush        127
      13: iand
      14: istore_2
      15: bipush        7
      17: istore_3
      18: iload_3
      19: bipush        32
      21: if_icmpge     67
      24: aload_1
      25: invokevirtual #59                 // Method java/io/InputStream.read:()I
      28: istore        4
      30: iload         4
      32: iconst_m1
      33: if_icmpne     40
      36: invokestatic  #60                 // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
      39: athrow
      40: iload_2
      41: iload         4
      43: bipush        127
      45: iand
      46: iload_3
      47: ishl
      48: ior
      49: istore_2
      50: iload         4
      52: sipush        128
      55: iand
      56: ifne          61
      59: iload_2
      60: ireturn
      61: iinc          3, 7
      64: goto          18
      67: iload_3
      68: bipush        64
      70: if_icmpge     106
      73: aload_1
      74: invokevirtual #59                 // Method java/io/InputStream.read:()I
      77: istore        4
      79: iload         4
      81: iconst_m1
      82: if_icmpne     89
      85: invokestatic  #60                 // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
      88: athrow
      89: iload         4
      91: sipush        128
      94: iand
      95: ifne          100
      98: iload_2
      99: ireturn
     100: iinc          3, 7
     103: goto          67
     106: invokestatic  #58                 // Method com/google/protobuf/InvalidProtocolBufferException.malformedVarint:()Lcom/google/protobuf/InvalidProtocolBufferException;
     109: athrow

  public long readRawVarint64() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: lconst_0
       3: lstore_2
       4: iload_1
       5: bipush        64
       7: if_icmpge     44
      10: aload_0
      11: invokevirtual #57                 // Method readRawByte:()B
      14: istore        4
      16: lload_2
      17: iload         4
      19: bipush        127
      21: iand
      22: i2l
      23: iload_1
      24: lshl
      25: lor
      26: lstore_2
      27: iload         4
      29: sipush        128
      32: iand
      33: ifne          38
      36: lload_2
      37: lreturn
      38: iinc          1, 7
      41: goto          4
      44: invokestatic  #58                 // Method com/google/protobuf/InvalidProtocolBufferException.malformedVarint:()Lcom/google/protobuf/InvalidProtocolBufferException;
      47: athrow

  public int readRawLittleEndian32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method readRawByte:()B
       4: istore_1
       5: aload_0
       6: invokevirtual #57                 // Method readRawByte:()B
       9: istore_2
      10: aload_0
      11: invokevirtual #57                 // Method readRawByte:()B
      14: istore_3
      15: aload_0
      16: invokevirtual #57                 // Method readRawByte:()B
      19: istore        4
      21: iload_1
      22: sipush        255
      25: iand
      26: iload_2
      27: sipush        255
      30: iand
      31: bipush        8
      33: ishl
      34: ior
      35: iload_3
      36: sipush        255
      39: iand
      40: bipush        16
      42: ishl
      43: ior
      44: iload         4
      46: sipush        255
      49: iand
      50: bipush        24
      52: ishl
      53: ior
      54: ireturn

  public long readRawLittleEndian64() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method readRawByte:()B
       4: istore_1
       5: aload_0
       6: invokevirtual #57                 // Method readRawByte:()B
       9: istore_2
      10: aload_0
      11: invokevirtual #57                 // Method readRawByte:()B
      14: istore_3
      15: aload_0
      16: invokevirtual #57                 // Method readRawByte:()B
      19: istore        4
      21: aload_0
      22: invokevirtual #57                 // Method readRawByte:()B
      25: istore        5
      27: aload_0
      28: invokevirtual #57                 // Method readRawByte:()B
      31: istore        6
      33: aload_0
      34: invokevirtual #57                 // Method readRawByte:()B
      37: istore        7
      39: aload_0
      40: invokevirtual #57                 // Method readRawByte:()B
      43: istore        8
      45: iload_1
      46: i2l
      47: ldc2_w        #62                 // long 255l
      50: land
      51: iload_2
      52: i2l
      53: ldc2_w        #62                 // long 255l
      56: land
      57: bipush        8
      59: lshl
      60: lor
      61: iload_3
      62: i2l
      63: ldc2_w        #62                 // long 255l
      66: land
      67: bipush        16
      69: lshl
      70: lor
      71: iload         4
      73: i2l
      74: ldc2_w        #62                 // long 255l
      77: land
      78: bipush        24
      80: lshl
      81: lor
      82: iload         5
      84: i2l
      85: ldc2_w        #62                 // long 255l
      88: land
      89: bipush        32
      91: lshl
      92: lor
      93: iload         6
      95: i2l
      96: ldc2_w        #62                 // long 255l
      99: land
     100: bipush        40
     102: lshl
     103: lor
     104: iload         7
     106: i2l
     107: ldc2_w        #62                 // long 255l
     110: land
     111: bipush        48
     113: lshl
     114: lor
     115: iload         8
     117: i2l
     118: ldc2_w        #62                 // long 255l
     121: land
     122: bipush        56
     124: lshl
     125: lor
     126: lreturn

  public static int decodeZigZag32(int);
    Code:
       0: iload_0
       1: iconst_1
       2: iushr
       3: iload_0
       4: iconst_1
       5: iand
       6: ineg
       7: ixor
       8: ireturn

  public static long decodeZigZag64(long);
    Code:
       0: lload_0
       1: iconst_1
       2: lushr
       3: lload_0
       4: lconst_1
       5: land
       6: lneg
       7: lxor
       8: lreturn

  private com.google.protobuf.CodedInputStream(byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #64                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #65                 // int 2147483647
       7: putfield      #66                 // Field currentLimit:I
      10: aload_0
      11: bipush        64
      13: putfield      #45                 // Field recursionLimit:I
      16: aload_0
      17: ldc           #67                 // int 67108864
      19: putfield      #68                 // Field sizeLimit:I
      22: aload_0
      23: aload_1
      24: putfield      #39                 // Field buffer:[B
      27: aload_0
      28: iload_2
      29: iload_3
      30: iadd
      31: putfield      #36                 // Field bufferSize:I
      34: aload_0
      35: iload_2
      36: putfield      #37                 // Field bufferPos:I
      39: aload_0
      40: iload_2
      41: ineg
      42: putfield      #69                 // Field totalBytesRetired:I
      45: aload_0
      46: aconst_null
      47: putfield      #70                 // Field input:Ljava/io/InputStream;
      50: return

  private com.google.protobuf.CodedInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: invokespecial #64                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #65                 // int 2147483647
       7: putfield      #66                 // Field currentLimit:I
      10: aload_0
      11: bipush        64
      13: putfield      #45                 // Field recursionLimit:I
      16: aload_0
      17: ldc           #67                 // int 67108864
      19: putfield      #68                 // Field sizeLimit:I
      22: aload_0
      23: sipush        4096
      26: newarray       byte
      28: putfield      #39                 // Field buffer:[B
      31: aload_0
      32: iconst_0
      33: putfield      #36                 // Field bufferSize:I
      36: aload_0
      37: iconst_0
      38: putfield      #37                 // Field bufferPos:I
      41: aload_0
      42: iconst_0
      43: putfield      #69                 // Field totalBytesRetired:I
      46: aload_0
      47: aload_1
      48: putfield      #70                 // Field input:Ljava/io/InputStream;
      51: return

  public int setRecursionLimit(int);
    Code:
       0: iload_1
       1: ifge          31
       4: new           #14                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #71                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #72                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #73                 // String Recursion limit cannot be negative:
      17: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_1
      21: invokevirtual #75                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #77                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: getfield      #45                 // Field recursionLimit:I
      35: istore_2
      36: aload_0
      37: iload_1
      38: putfield      #45                 // Field recursionLimit:I
      41: iload_2
      42: ireturn

  public int setSizeLimit(int);
    Code:
       0: iload_1
       1: ifge          31
       4: new           #14                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #71                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #72                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #78                 // String Size limit cannot be negative:
      17: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_1
      21: invokevirtual #75                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #77                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: getfield      #68                 // Field sizeLimit:I
      35: istore_2
      36: aload_0
      37: iload_1
      38: putfield      #68                 // Field sizeLimit:I
      41: iload_2
      42: ireturn

  public void resetSizeCounter();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #37                 // Field bufferPos:I
       5: ineg
       6: putfield      #69                 // Field totalBytesRetired:I
       9: return

  public int pushLimit(int) throws com.google.protobuf.InvalidProtocolBufferException;
    Code:
       0: iload_1
       1: ifge          8
       4: invokestatic  #79                 // Method com/google/protobuf/InvalidProtocolBufferException.negativeSize:()Lcom/google/protobuf/InvalidProtocolBufferException;
       7: athrow
       8: iload_1
       9: aload_0
      10: getfield      #69                 // Field totalBytesRetired:I
      13: aload_0
      14: getfield      #37                 // Field bufferPos:I
      17: iadd
      18: iadd
      19: istore_1
      20: aload_0
      21: getfield      #66                 // Field currentLimit:I
      24: istore_2
      25: iload_1
      26: iload_2
      27: if_icmple     34
      30: invokestatic  #60                 // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
      33: athrow
      34: aload_0
      35: iload_1
      36: putfield      #66                 // Field currentLimit:I
      39: aload_0
      40: invokespecial #80                 // Method recomputeBufferSizeAfterLimit:()V
      43: iload_2
      44: ireturn

  private void recomputeBufferSizeAfterLimit();
    Code:
       0: aload_0
       1: dup
       2: getfield      #36                 // Field bufferSize:I
       5: aload_0
       6: getfield      #81                 // Field bufferSizeAfterLimit:I
       9: iadd
      10: putfield      #36                 // Field bufferSize:I
      13: aload_0
      14: getfield      #69                 // Field totalBytesRetired:I
      17: aload_0
      18: getfield      #36                 // Field bufferSize:I
      21: iadd
      22: istore_1
      23: iload_1
      24: aload_0
      25: getfield      #66                 // Field currentLimit:I
      28: if_icmple     57
      31: aload_0
      32: iload_1
      33: aload_0
      34: getfield      #66                 // Field currentLimit:I
      37: isub
      38: putfield      #81                 // Field bufferSizeAfterLimit:I
      41: aload_0
      42: dup
      43: getfield      #36                 // Field bufferSize:I
      46: aload_0
      47: getfield      #81                 // Field bufferSizeAfterLimit:I
      50: isub
      51: putfield      #36                 // Field bufferSize:I
      54: goto          62
      57: aload_0
      58: iconst_0
      59: putfield      #81                 // Field bufferSizeAfterLimit:I
      62: return

  public void popLimit(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #66                 // Field currentLimit:I
       5: aload_0
       6: invokespecial #80                 // Method recomputeBufferSizeAfterLimit:()V
       9: return

  public int getBytesUntilLimit();
    Code:
       0: aload_0
       1: getfield      #66                 // Field currentLimit:I
       4: ldc           #65                 // int 2147483647
       6: if_icmpne     11
       9: iconst_m1
      10: ireturn
      11: aload_0
      12: getfield      #69                 // Field totalBytesRetired:I
      15: aload_0
      16: getfield      #37                 // Field bufferPos:I
      19: iadd
      20: istore_1
      21: aload_0
      22: getfield      #66                 // Field currentLimit:I
      25: iload_1
      26: isub
      27: ireturn

  public boolean isAtEnd() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field bufferPos:I
       4: aload_0
       5: getfield      #36                 // Field bufferSize:I
       8: if_icmpne     23
      11: aload_0
      12: iconst_0
      13: invokespecial #82                 // Method refillBuffer:(Z)Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public int getTotalBytesRead();
    Code:
       0: aload_0
       1: getfield      #69                 // Field totalBytesRetired:I
       4: aload_0
       5: getfield      #37                 // Field bufferPos:I
       8: iadd
       9: ireturn

  private boolean refillBuffer(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field bufferPos:I
       4: aload_0
       5: getfield      #36                 // Field bufferSize:I
       8: if_icmpge     21
      11: new           #83                 // class java/lang/IllegalStateException
      14: dup
      15: ldc           #84                 // String refillBuffer() called when buffer wasn\'t empty.
      17: invokespecial #85                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #69                 // Field totalBytesRetired:I
      25: aload_0
      26: getfield      #36                 // Field bufferSize:I
      29: iadd
      30: aload_0
      31: getfield      #66                 // Field currentLimit:I
      34: if_icmpne     47
      37: iload_1
      38: ifeq          45
      41: invokestatic  #60                 // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
      44: athrow
      45: iconst_0
      46: ireturn
      47: aload_0
      48: dup
      49: getfield      #69                 // Field totalBytesRetired:I
      52: aload_0
      53: getfield      #36                 // Field bufferSize:I
      56: iadd
      57: putfield      #69                 // Field totalBytesRetired:I
      60: aload_0
      61: iconst_0
      62: putfield      #37                 // Field bufferPos:I
      65: aload_0
      66: aload_0
      67: getfield      #70                 // Field input:Ljava/io/InputStream;
      70: ifnonnull     77
      73: iconst_m1
      74: goto          88
      77: aload_0
      78: getfield      #70                 // Field input:Ljava/io/InputStream;
      81: aload_0
      82: getfield      #39                 // Field buffer:[B
      85: invokevirtual #86                 // Method java/io/InputStream.read:([B)I
      88: putfield      #36                 // Field bufferSize:I
      91: aload_0
      92: getfield      #36                 // Field bufferSize:I
      95: ifeq          106
      98: aload_0
      99: getfield      #36                 // Field bufferSize:I
     102: iconst_m1
     103: if_icmpge     141
     106: new           #83                 // class java/lang/IllegalStateException
     109: dup
     110: new           #71                 // class java/lang/StringBuilder
     113: dup
     114: invokespecial #72                 // Method java/lang/StringBuilder."<init>":()V
     117: ldc           #87                 // String InputStream#read(byte[]) returned invalid result:
     119: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload_0
     123: getfield      #36                 // Field bufferSize:I
     126: invokevirtual #75                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     129: ldc           #88                 // String \nThe InputStream implementation is buggy.
     131: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     137: invokespecial #85                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     140: athrow
     141: aload_0
     142: getfield      #36                 // Field bufferSize:I
     145: iconst_m1
     146: if_icmpne     164
     149: aload_0
     150: iconst_0
     151: putfield      #36                 // Field bufferSize:I
     154: iload_1
     155: ifeq          162
     158: invokestatic  #60                 // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
     161: athrow
     162: iconst_0
     163: ireturn
     164: aload_0
     165: invokespecial #80                 // Method recomputeBufferSizeAfterLimit:()V
     168: aload_0
     169: getfield      #69                 // Field totalBytesRetired:I
     172: aload_0
     173: getfield      #36                 // Field bufferSize:I
     176: iadd
     177: aload_0
     178: getfield      #81                 // Field bufferSizeAfterLimit:I
     181: iadd
     182: istore_2
     183: iload_2
     184: aload_0
     185: getfield      #68                 // Field sizeLimit:I
     188: if_icmpgt     195
     191: iload_2
     192: ifge          199
     195: invokestatic  #89                 // Method com/google/protobuf/InvalidProtocolBufferException.sizeLimitExceeded:()Lcom/google/protobuf/InvalidProtocolBufferException;
     198: athrow
     199: iconst_1
     200: ireturn

  public byte readRawByte() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #37                 // Field bufferPos:I
       4: aload_0
       5: getfield      #36                 // Field bufferSize:I
       8: if_icmpne     17
      11: aload_0
      12: iconst_1
      13: invokespecial #82                 // Method refillBuffer:(Z)Z
      16: pop
      17: aload_0
      18: getfield      #39                 // Field buffer:[B
      21: aload_0
      22: dup
      23: getfield      #37                 // Field bufferPos:I
      26: dup_x1
      27: iconst_1
      28: iadd
      29: putfield      #37                 // Field bufferPos:I
      32: baload
      33: ireturn

  public byte[] readRawBytes(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifge          8
       4: invokestatic  #79                 // Method com/google/protobuf/InvalidProtocolBufferException.negativeSize:()Lcom/google/protobuf/InvalidProtocolBufferException;
       7: athrow
       8: aload_0
       9: getfield      #69                 // Field totalBytesRetired:I
      12: aload_0
      13: getfield      #37                 // Field bufferPos:I
      16: iadd
      17: iload_1
      18: iadd
      19: aload_0
      20: getfield      #66                 // Field currentLimit:I
      23: if_icmple     48
      26: aload_0
      27: aload_0
      28: getfield      #66                 // Field currentLimit:I
      31: aload_0
      32: getfield      #69                 // Field totalBytesRetired:I
      35: isub
      36: aload_0
      37: getfield      #37                 // Field bufferPos:I
      40: isub
      41: invokevirtual #25                 // Method skipRawBytes:(I)V
      44: invokestatic  #60                 // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
      47: athrow
      48: iload_1
      49: aload_0
      50: getfield      #36                 // Field bufferSize:I
      53: aload_0
      54: getfield      #37                 // Field bufferPos:I
      57: isub
      58: if_icmpgt     91
      61: iload_1
      62: newarray       byte
      64: astore_2
      65: aload_0
      66: getfield      #39                 // Field buffer:[B
      69: aload_0
      70: getfield      #37                 // Field bufferPos:I
      73: aload_2
      74: iconst_0
      75: iload_1
      76: invokestatic  #90                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      79: aload_0
      80: dup
      81: getfield      #37                 // Field bufferPos:I
      84: iload_1
      85: iadd
      86: putfield      #37                 // Field bufferPos:I
      89: aload_2
      90: areturn
      91: iload_1
      92: sipush        4096
      95: if_icmpge     210
      98: iload_1
      99: newarray       byte
     101: astore_2
     102: aload_0
     103: getfield      #36                 // Field bufferSize:I
     106: aload_0
     107: getfield      #37                 // Field bufferPos:I
     110: isub
     111: istore_3
     112: aload_0
     113: getfield      #39                 // Field buffer:[B
     116: aload_0
     117: getfield      #37                 // Field bufferPos:I
     120: aload_2
     121: iconst_0
     122: iload_3
     123: invokestatic  #90                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     126: aload_0
     127: aload_0
     128: getfield      #36                 // Field bufferSize:I
     131: putfield      #37                 // Field bufferPos:I
     134: aload_0
     135: iconst_1
     136: invokespecial #82                 // Method refillBuffer:(Z)Z
     139: pop
     140: iload_1
     141: iload_3
     142: isub
     143: aload_0
     144: getfield      #36                 // Field bufferSize:I
     147: if_icmple     188
     150: aload_0
     151: getfield      #39                 // Field buffer:[B
     154: iconst_0
     155: aload_2
     156: iload_3
     157: aload_0
     158: getfield      #36                 // Field bufferSize:I
     161: invokestatic  #90                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     164: iload_3
     165: aload_0
     166: getfield      #36                 // Field bufferSize:I
     169: iadd
     170: istore_3
     171: aload_0
     172: aload_0
     173: getfield      #36                 // Field bufferSize:I
     176: putfield      #37                 // Field bufferPos:I
     179: aload_0
     180: iconst_1
     181: invokespecial #82                 // Method refillBuffer:(Z)Z
     184: pop
     185: goto          140
     188: aload_0
     189: getfield      #39                 // Field buffer:[B
     192: iconst_0
     193: aload_2
     194: iload_3
     195: iload_1
     196: iload_3
     197: isub
     198: invokestatic  #90                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     201: aload_0
     202: iload_1
     203: iload_3
     204: isub
     205: putfield      #37                 // Field bufferPos:I
     208: aload_2
     209: areturn
     210: aload_0
     211: getfield      #37                 // Field bufferPos:I
     214: istore_2
     215: aload_0
     216: getfield      #36                 // Field bufferSize:I
     219: istore_3
     220: aload_0
     221: dup
     222: getfield      #69                 // Field totalBytesRetired:I
     225: aload_0
     226: getfield      #36                 // Field bufferSize:I
     229: iadd
     230: putfield      #69                 // Field totalBytesRetired:I
     233: aload_0
     234: iconst_0
     235: putfield      #37                 // Field bufferPos:I
     238: aload_0
     239: iconst_0
     240: putfield      #36                 // Field bufferSize:I
     243: iload_1
     244: iload_3
     245: iload_2
     246: isub
     247: isub
     248: istore        4
     250: new           #91                 // class java/util/ArrayList
     253: dup
     254: invokespecial #92                 // Method java/util/ArrayList."<init>":()V
     257: astore        5
     259: iload         4
     261: ifle          369
     264: iload         4
     266: sipush        4096
     269: invokestatic  #93                 // Method java/lang/Math.min:(II)I
     272: newarray       byte
     274: astore        6
     276: iconst_0
     277: istore        7
     279: iload         7
     281: aload         6
     283: arraylength
     284: if_icmpge     348
     287: aload_0
     288: getfield      #70                 // Field input:Ljava/io/InputStream;
     291: ifnonnull     298
     294: iconst_m1
     295: goto          315
     298: aload_0
     299: getfield      #70                 // Field input:Ljava/io/InputStream;
     302: aload         6
     304: iload         7
     306: aload         6
     308: arraylength
     309: iload         7
     311: isub
     312: invokevirtual #94                 // Method java/io/InputStream.read:([BII)I
     315: istore        8
     317: iload         8
     319: iconst_m1
     320: if_icmpne     327
     323: invokestatic  #60                 // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
     326: athrow
     327: aload_0
     328: dup
     329: getfield      #69                 // Field totalBytesRetired:I
     332: iload         8
     334: iadd
     335: putfield      #69                 // Field totalBytesRetired:I
     338: iload         7
     340: iload         8
     342: iadd
     343: istore        7
     345: goto          279
     348: iload         4
     350: aload         6
     352: arraylength
     353: isub
     354: istore        4
     356: aload         5
     358: aload         6
     360: invokeinterface #95,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     365: pop
     366: goto          259
     369: iload_1
     370: newarray       byte
     372: astore        6
     374: iload_3
     375: iload_2
     376: isub
     377: istore        7
     379: aload_0
     380: getfield      #39                 // Field buffer:[B
     383: iload_2
     384: aload         6
     386: iconst_0
     387: iload         7
     389: invokestatic  #90                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     392: aload         5
     394: invokeinterface #96,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     399: astore        8
     401: aload         8
     403: invokeinterface #97,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     408: ifeq          447
     411: aload         8
     413: invokeinterface #98,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     418: checkcast     #99                 // class "[B"
     421: astore        9
     423: aload         9
     425: iconst_0
     426: aload         6
     428: iload         7
     430: aload         9
     432: arraylength
     433: invokestatic  #90                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     436: iload         7
     438: aload         9
     440: arraylength
     441: iadd
     442: istore        7
     444: goto          401
     447: aload         6
     449: areturn

  public void skipRawBytes(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifge          8
       4: invokestatic  #79                 // Method com/google/protobuf/InvalidProtocolBufferException.negativeSize:()Lcom/google/protobuf/InvalidProtocolBufferException;
       7: athrow
       8: aload_0
       9: getfield      #69                 // Field totalBytesRetired:I
      12: aload_0
      13: getfield      #37                 // Field bufferPos:I
      16: iadd
      17: iload_1
      18: iadd
      19: aload_0
      20: getfield      #66                 // Field currentLimit:I
      23: if_icmple     48
      26: aload_0
      27: aload_0
      28: getfield      #66                 // Field currentLimit:I
      31: aload_0
      32: getfield      #69                 // Field totalBytesRetired:I
      35: isub
      36: aload_0
      37: getfield      #37                 // Field bufferPos:I
      40: isub
      41: invokevirtual #25                 // Method skipRawBytes:(I)V
      44: invokestatic  #60                 // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
      47: athrow
      48: iload_1
      49: aload_0
      50: getfield      #36                 // Field bufferSize:I
      53: aload_0
      54: getfield      #37                 // Field bufferPos:I
      57: isub
      58: if_icmpgt     74
      61: aload_0
      62: dup
      63: getfield      #37                 // Field bufferPos:I
      66: iload_1
      67: iadd
      68: putfield      #37                 // Field bufferPos:I
      71: goto          139
      74: aload_0
      75: getfield      #36                 // Field bufferSize:I
      78: aload_0
      79: getfield      #37                 // Field bufferPos:I
      82: isub
      83: istore_2
      84: aload_0
      85: aload_0
      86: getfield      #36                 // Field bufferSize:I
      89: putfield      #37                 // Field bufferPos:I
      92: aload_0
      93: iconst_1
      94: invokespecial #82                 // Method refillBuffer:(Z)Z
      97: pop
      98: iload_1
      99: iload_2
     100: isub
     101: aload_0
     102: getfield      #36                 // Field bufferSize:I
     105: if_icmple     132
     108: iload_2
     109: aload_0
     110: getfield      #36                 // Field bufferSize:I
     113: iadd
     114: istore_2
     115: aload_0
     116: aload_0
     117: getfield      #36                 // Field bufferSize:I
     120: putfield      #37                 // Field bufferPos:I
     123: aload_0
     124: iconst_1
     125: invokespecial #82                 // Method refillBuffer:(Z)Z
     128: pop
     129: goto          98
     132: aload_0
     133: iload_1
     134: iload_2
     135: isub
     136: putfield      #37                 // Field bufferPos:I
     139: return
}
