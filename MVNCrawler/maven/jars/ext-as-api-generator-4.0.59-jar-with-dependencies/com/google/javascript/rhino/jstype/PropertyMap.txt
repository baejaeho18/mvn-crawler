Compiled from "PropertyMap.java"
class com.google.javascript.rhino.jstype.PropertyMap implements java.io.Serializable {
  private static final long serialVersionUID;

  private static final com.google.javascript.rhino.jstype.PropertyMap EMPTY_MAP;

  private static final com.google.common.base.Function<com.google.javascript.rhino.jstype.ObjectType, com.google.javascript.rhino.jstype.PropertyMap> PROP_MAP_FROM_TYPE;

  private com.google.javascript.rhino.jstype.ObjectType parentSource;

  private final java.util.Map<java.lang.String, com.google.javascript.rhino.jstype.Property> properties;

  com.google.javascript.rhino.jstype.PropertyMap();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method com/google/common/collect/Maps.newTreeMap:()Ljava/util/TreeMap;
       4: invokespecial #2                  // Method "<init>":(Ljava/util/Map;)V
       7: return

  private com.google.javascript.rhino.jstype.PropertyMap(java.util.Map<java.lang.String, com.google.javascript.rhino.jstype.Property>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #4                  // Field parentSource:Lcom/google/javascript/rhino/jstype/ObjectType;
       9: aload_0
      10: aload_1
      11: putfield      #5                  // Field properties:Ljava/util/Map;
      14: return

  static com.google.javascript.rhino.jstype.PropertyMap immutableEmptyMap();
    Code:
       0: getstatic     #6                  // Field EMPTY_MAP:Lcom/google/javascript/rhino/jstype/PropertyMap;
       3: areturn

  void setParentSource(com.google.javascript.rhino.jstype.ObjectType);
    Code:
       0: aload_0
       1: getstatic     #6                  // Field EMPTY_MAP:Lcom/google/javascript/rhino/jstype/PropertyMap;
       4: if_acmpeq     12
       7: aload_0
       8: aload_1
       9: putfield      #4                  // Field parentSource:Lcom/google/javascript/rhino/jstype/ObjectType;
      12: return

  com.google.javascript.rhino.jstype.PropertyMap getPrimaryParent();
    Code:
       0: aload_0
       1: getfield      #4                  // Field parentSource:Lcom/google/javascript/rhino/jstype/ObjectType;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #4                  // Field parentSource:Lcom/google/javascript/rhino/jstype/ObjectType;
      13: invokevirtual #7                  // Method com/google/javascript/rhino/jstype/ObjectType.getImplicitPrototype:()Lcom/google/javascript/rhino/jstype/ObjectType;
      16: astore_1
      17: aload_1
      18: ifnonnull     25
      21: aconst_null
      22: goto          29
      25: aload_1
      26: invokevirtual #8                  // Method com/google/javascript/rhino/jstype/ObjectType.getPropertyMap:()Lcom/google/javascript/rhino/jstype/PropertyMap;
      29: areturn

  java.lang.Iterable<com.google.javascript.rhino.jstype.PropertyMap> getSecondaryParents();
    Code:
       0: aload_0
       1: getfield      #4                  // Field parentSource:Lcom/google/javascript/rhino/jstype/ObjectType;
       4: ifnonnull     11
       7: invokestatic  #9                  // Method com/google/common/collect/ImmutableList.of:()Lcom/google/common/collect/ImmutableList;
      10: areturn
      11: aload_0
      12: getfield      #4                  // Field parentSource:Lcom/google/javascript/rhino/jstype/ObjectType;
      15: invokevirtual #10                 // Method com/google/javascript/rhino/jstype/ObjectType.getCtorExtendedInterfaces:()Ljava/lang/Iterable;
      18: astore_1
      19: aload_1
      20: invokestatic  #11                 // Method com/google/common/collect/Iterables.isEmpty:(Ljava/lang/Iterable;)Z
      23: ifeq          30
      26: invokestatic  #9                  // Method com/google/common/collect/ImmutableList.of:()Lcom/google/common/collect/ImmutableList;
      29: areturn
      30: aload_1
      31: getstatic     #12                 // Field PROP_MAP_FROM_TYPE:Lcom/google/common/base/Function;
      34: invokestatic  #13                 // Method com/google/common/collect/Iterables.transform:(Ljava/lang/Iterable;Lcom/google/common/base/Function;)Ljava/lang/Iterable;
      37: areturn

  com.google.javascript.rhino.jstype.Property getSlot(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field properties:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          27
      13: aload_0
      14: getfield      #5                  // Field properties:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #15,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #16                 // class com/google/javascript/rhino/jstype/Property
      26: areturn
      27: aload_0
      28: invokevirtual #17                 // Method getPrimaryParent:()Lcom/google/javascript/rhino/jstype/PropertyMap;
      31: astore_2
      32: aload_2
      33: ifnull        48
      36: aload_2
      37: aload_1
      38: invokevirtual #18                 // Method getSlot:(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/Property;
      41: astore_3
      42: aload_3
      43: ifnull        48
      46: aload_3
      47: areturn
      48: aload_0
      49: invokevirtual #19                 // Method getSecondaryParents:()Ljava/lang/Iterable;
      52: invokeinterface #20,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      57: astore_3
      58: aload_3
      59: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          102
      67: aload_3
      68: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #23                 // class com/google/javascript/rhino/jstype/PropertyMap
      76: astore        4
      78: aload         4
      80: ifnull        99
      83: aload         4
      85: aload_1
      86: invokevirtual #18                 // Method getSlot:(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/Property;
      89: astore        5
      91: aload         5
      93: ifnull        99
      96: aload         5
      98: areturn
      99: goto          58
     102: aconst_null
     103: areturn

  com.google.javascript.rhino.jstype.Property getOwnProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field properties:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #16                 // class com/google/javascript/rhino/jstype/Property
      13: areturn

  int getPropertiesCount();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getPrimaryParent:()Lcom/google/javascript/rhino/jstype/PropertyMap;
       4: astore_1
       5: aload_1
       6: ifnonnull     19
       9: aload_0
      10: getfield      #5                  // Field properties:Ljava/util/Map;
      13: invokeinterface #24,  1           // InterfaceMethod java/util/Map.size:()I
      18: ireturn
      19: invokestatic  #25                 // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
      22: astore_2
      23: aload_0
      24: aload_2
      25: invokevirtual #26                 // Method collectPropertyNames:(Ljava/util/Set;)V
      28: aload_2
      29: invokeinterface #27,  1           // InterfaceMethod java/util/Set.size:()I
      34: ireturn

  boolean hasOwnProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field properties:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: ifnull        17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  boolean hasProperty(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method getSlot:(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/Property;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  java.util.Set<java.lang.String> getOwnPropertyNames();
    Code:
       0: aload_0
       1: getfield      #5                  // Field properties:Ljava/util/Map;
       4: invokeinterface #28,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  void collectPropertyNames(java.util.Set<java.lang.String>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #5                  // Field properties:Ljava/util/Map;
       5: invokeinterface #28,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      10: invokeinterface #29,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      15: pop
      16: aload_0
      17: invokevirtual #17                 // Method getPrimaryParent:()Lcom/google/javascript/rhino/jstype/PropertyMap;
      20: astore_2
      21: aload_2
      22: ifnull        30
      25: aload_2
      26: aload_1
      27: invokevirtual #26                 // Method collectPropertyNames:(Ljava/util/Set;)V
      30: aload_0
      31: invokevirtual #19                 // Method getSecondaryParents:()Ljava/lang/Iterable;
      34: invokeinterface #20,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      39: astore_3
      40: aload_3
      41: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          74
      49: aload_3
      50: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #23                 // class com/google/javascript/rhino/jstype/PropertyMap
      58: astore        4
      60: aload         4
      62: ifnull        71
      65: aload         4
      67: aload_1
      68: invokevirtual #26                 // Method collectPropertyNames:(Ljava/util/Set;)V
      71: goto          40
      74: return

  boolean removeProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field properties:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: ifnull        17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  void putProperty(java.lang.String, com.google.javascript.rhino.jstype.Property);
    Code:
       0: aload_0
       1: getfield      #5                  // Field properties:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #16                 // class com/google/javascript/rhino/jstype/Property
      13: astore_3
      14: aload_3
      15: ifnull        26
      18: aload_2
      19: aload_3
      20: invokevirtual #31                 // Method com/google/javascript/rhino/jstype/Property.getJSDocInfo:()Lcom/google/javascript/rhino/JSDocInfo;
      23: invokevirtual #32                 // Method com/google/javascript/rhino/jstype/Property.setJSDocInfo:(Lcom/google/javascript/rhino/JSDocInfo;)V
      26: aload_0
      27: getfield      #5                  // Field properties:Ljava/util/Map;
      30: aload_1
      31: aload_2
      32: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: return

  java.lang.Iterable<com.google.javascript.rhino.jstype.Property> values();
    Code:
       0: aload_0
       1: getfield      #5                  // Field properties:Ljava/util/Map;
       4: invokeinterface #34,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  static {};
    Code:
       0: new           #23                 // class com/google/javascript/rhino/jstype/PropertyMap
       3: dup
       4: invokestatic  #35                 // Method com/google/common/collect/ImmutableMap.of:()Lcom/google/common/collect/ImmutableMap;
       7: invokespecial #2                  // Method "<init>":(Ljava/util/Map;)V
      10: putstatic     #6                  // Field EMPTY_MAP:Lcom/google/javascript/rhino/jstype/PropertyMap;
      13: new           #36                 // class com/google/javascript/rhino/jstype/PropertyMap$1
      16: dup
      17: invokespecial #37                 // Method com/google/javascript/rhino/jstype/PropertyMap$1."<init>":()V
      20: putstatic     #12                 // Field PROP_MAP_FROM_TYPE:Lcom/google/common/base/Function;
      23: return
}
