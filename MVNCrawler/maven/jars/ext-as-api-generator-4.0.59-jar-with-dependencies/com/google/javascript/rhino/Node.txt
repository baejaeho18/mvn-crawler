Compiled from "Node.java"
public class com.google.javascript.rhino.Node implements java.lang.Cloneable,java.io.Serializable {
  private static final long serialVersionUID;

  public static final int JSDOC_INFO_PROP;

  public static final int VAR_ARGS_NAME;

  public static final int INCRDECR_PROP;

  public static final int QUOTED_PROP;

  public static final int OPT_ARG_NAME;

  public static final int SYNTHETIC_BLOCK_PROP;

  public static final int ADDED_BLOCK;

  public static final int ORIGINALNAME_PROP;

  public static final int SIDE_EFFECT_FLAGS;

  public static final int IS_CONSTANT_NAME;

  public static final int IS_NAMESPACE;

  public static final int DIRECTIVES;

  public static final int DIRECT_EVAL;

  public static final int FREE_CALL;

  public static final int STATIC_SOURCE_FILE;

  public static final int LENGTH;

  public static final int INPUT_ID;

  public static final int SLASH_V;

  public static final int INFERRED_FUNCTION;

  public static final int CHANGE_TIME;

  public static final int REFLECTED_OBJECT;

  public static final int STATIC_MEMBER;

  public static final int GENERATOR_FN;

  public static final int ARROW_FN;

  public static final int YIELD_FOR;

  public static final int EXPORT_DEFAULT;

  public static final int EXPORT_ALL_FROM;

  public static final int IS_CONSTANT_VAR;

  public static final int GENERATOR_MARKER;

  public static final int GENERATOR_SAFE;

  public static final int COOKED_STRING;

  public static final int RAW_STRING_VALUE;

  public static final int COMPUTED_PROP_METHOD;

  public static final int COMPUTED_PROP_GETTER;

  public static final int COMPUTED_PROP_SETTER;

  public static final int ANALYZED_DURING_GTI;

  public static final int CONSTANT_PROPERTY_DEF;

  public static final int JS_TYPE_EXPRESSION;

  public static final int DECR_FLAG;

  public static final int POST_FLAG;

  int type;

  com.google.javascript.rhino.Node next;

  private com.google.javascript.rhino.Node first;

  private com.google.javascript.rhino.Node last;

  private com.google.javascript.rhino.Node$PropListItem propListHead;

  public static final int COLUMN_BITS;

  public static final int MAX_COLUMN_NUMBER;

  public static final int COLUMN_MASK;

  private int sourcePosition;

  private com.google.javascript.rhino.TypeI typei;

  private com.google.javascript.rhino.Node parent;

  public static final int FLAG_GLOBAL_STATE_UNMODIFIED;

  public static final int FLAG_THIS_UNMODIFIED;

  public static final int FLAG_ARGUMENTS_UNMODIFIED;

  public static final int FLAG_NO_THROWS;

  public static final int FLAG_LOCAL_RESULTS;

  public static final int SIDE_EFFECTS_FLAGS_MASK;

  public static final int SIDE_EFFECTS_ALL;

  public static final int NO_SIDE_EFFECTS;

  private static final java.lang.String propToString(int);
    Code:
       0: iload_0
       1: tableswitch   { // 29 to 77
                    29: 215
                    30: 212
                    31: 326
                    32: 218
                    33: 326
                    34: 326
                    35: 326
                    36: 221
                    37: 224
                    38: 227
                    39: 230
                    40: 233
                    41: 326
                    42: 236
                    43: 239
                    44: 326
                    45: 326
                    46: 242
                    47: 326
                    48: 245
                    49: 248
                    50: 251
                    51: 254
                    52: 260
                    53: 257
                    54: 263
                    55: 266
                    56: 269
                    57: 272
                    58: 275
                    59: 278
                    60: 281
                    61: 284
                    62: 287
                    63: 290
                    64: 293
                    65: 296
                    66: 299
                    67: 326
                    68: 326
                    69: 326
                    70: 302
                    71: 305
                    72: 308
                    73: 311
                    74: 314
                    75: 317
                    76: 320
                    77: 323
               default: 326
          }
     212: ldc           #1                  // String var_args_name
     214: areturn
     215: ldc           #2                  // String jsdoc_info
     217: areturn
     218: ldc           #3                  // String incrdecr
     220: areturn
     221: ldc           #4                  // String quoted
     223: areturn
     224: ldc           #5                  // String opt_arg
     226: areturn
     227: ldc           #6                  // String synthetic
     229: areturn
     230: ldc           #7                  // String added_block
     232: areturn
     233: ldc           #8                  // String originalname
     235: areturn
     236: ldc           #9                  // String side_effect_flags
     238: areturn
     239: ldc           #10                 // String is_constant_name
     241: areturn
     242: ldc           #11                 // String is_namespace
     244: areturn
     245: ldc           #12                 // String directives
     247: areturn
     248: ldc           #13                 // String direct_eval
     250: areturn
     251: ldc           #14                 // String free_call
     253: areturn
     254: ldc           #15                 // String source_file
     256: areturn
     257: ldc           #16                 // String input_id
     259: areturn
     260: ldc           #17                 // String length
     262: areturn
     263: ldc           #18                 // String slash_v
     265: areturn
     266: ldc           #19                 // String inferred
     268: areturn
     269: ldc           #20                 // String change_time
     271: areturn
     272: ldc           #21                 // String reflected_object
     274: areturn
     275: ldc           #22                 // String static_member
     277: areturn
     278: ldc           #23                 // String generator_fn
     280: areturn
     281: ldc           #24                 // String arrow_fn
     283: areturn
     284: ldc           #25                 // String yield_for
     286: areturn
     287: ldc           #26                 // String export_default
     289: areturn
     290: ldc           #27                 // String export_all_from
     292: areturn
     293: ldc           #28                 // String is_constant_var
     295: areturn
     296: ldc           #29                 // String is_generator_marker
     298: areturn
     299: ldc           #30                 // String is_generator_safe
     301: areturn
     302: ldc           #31                 // String cooked_string
     304: areturn
     305: ldc           #32                 // String raw_string_value
     307: areturn
     308: ldc           #33                 // String computed_prop_method
     310: areturn
     311: ldc           #34                 // String computed_prop_getter
     313: areturn
     314: ldc           #35                 // String computed_prop_setter
     316: areturn
     317: ldc           #36                 // String analyzed_during_gti
     319: areturn
     320: ldc           #37                 // String constant_property_def
     322: areturn
     323: ldc           #38                 // String js_type_expression
     325: areturn
     326: new           #39                 // class java/lang/IllegalStateException
     329: dup
     330: new           #40                 // class java/lang/StringBuilder
     333: dup
     334: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
     337: ldc           #42                 // String unexpected prop id
     339: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     342: iload_0
     343: invokevirtual #44                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     346: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     349: invokespecial #46                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     352: athrow

  public com.google.javascript.rhino.Node(int);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #48                 // Field type:I
       9: aload_0
      10: aconst_null
      11: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      14: aload_0
      15: iconst_m1
      16: putfield      #50                 // Field sourcePosition:I
      19: return

  public com.google.javascript.rhino.Node(int, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method java/lang/Object."<init>":()V
       4: aload_2
       5: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
       8: ifnonnull     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ldc           #51                 // String new child has existing parent
      18: invokestatic  #52                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      21: aload_2
      22: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      25: ifnonnull     32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ldc           #54                 // String new child has existing sibling
      35: invokestatic  #52                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      38: aload_0
      39: iload_1
      40: putfield      #48                 // Field type:I
      43: aload_0
      44: aconst_null
      45: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      48: aload_0
      49: aload_0
      50: aload_2
      51: dup_x1
      52: putfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      55: putfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      58: aload_2
      59: aconst_null
      60: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      63: aload_2
      64: aload_0
      65: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      68: aload_0
      69: iconst_m1
      70: putfield      #50                 // Field sourcePosition:I
      73: return

  public com.google.javascript.rhino.Node(int, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method java/lang/Object."<init>":()V
       4: aload_2
       5: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
       8: ifnonnull     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ldc           #57                 // String first new child has existing parent
      18: invokestatic  #52                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      21: aload_2
      22: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      25: ifnonnull     32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ldc           #58                 // String first new child has existing sibling
      35: invokestatic  #52                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      38: aload_3
      39: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      42: ifnonnull     49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ldc           #59                 // String second new child has existing parent
      52: invokestatic  #52                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      55: aload_3
      56: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      59: ifnonnull     66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: ldc           #60                 // String second new child has existing sibling
      69: invokestatic  #52                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      72: aload_0
      73: iload_1
      74: putfield      #48                 // Field type:I
      77: aload_0
      78: aconst_null
      79: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      82: aload_0
      83: aload_2
      84: putfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      87: aload_0
      88: aload_3
      89: putfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      92: aload_2
      93: aload_3
      94: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      97: aload_2
      98: aload_0
      99: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
     102: aload_3
     103: aconst_null
     104: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
     107: aload_3
     108: aload_0
     109: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
     112: aload_0
     113: iconst_m1
     114: putfield      #50                 // Field sourcePosition:I
     117: return

  public com.google.javascript.rhino.Node(int, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method java/lang/Object."<init>":()V
       4: aload_2
       5: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
       8: ifnonnull     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      19: aload_2
      20: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      23: ifnonnull     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      34: aload_3
      35: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      38: ifnonnull     45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      49: aload_3
      50: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      53: ifnonnull     60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      64: aload         4
      66: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      69: ifnonnull     76
      72: iconst_1
      73: goto          77
      76: iconst_0
      77: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      80: aload         4
      82: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      85: ifnonnull     92
      88: iconst_1
      89: goto          93
      92: iconst_0
      93: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      96: aload_0
      97: iload_1
      98: putfield      #48                 // Field type:I
     101: aload_0
     102: aconst_null
     103: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
     106: aload_0
     107: aload_2
     108: putfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
     111: aload_0
     112: aload         4
     114: putfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
     117: aload_2
     118: aload_3
     119: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
     122: aload_2
     123: aload_0
     124: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
     127: aload_3
     128: aload         4
     130: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
     133: aload_3
     134: aload_0
     135: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
     138: aload         4
     140: aconst_null
     141: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
     144: aload         4
     146: aload_0
     147: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
     150: aload_0
     151: iconst_m1
     152: putfield      #50                 // Field sourcePosition:I
     155: return

  public com.google.javascript.rhino.Node(int, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method java/lang/Object."<init>":()V
       4: aload_2
       5: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
       8: ifnonnull     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      19: aload_2
      20: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      23: ifnonnull     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      34: aload_3
      35: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      38: ifnonnull     45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      49: aload_3
      50: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      53: ifnonnull     60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      64: aload         4
      66: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      69: ifnonnull     76
      72: iconst_1
      73: goto          77
      76: iconst_0
      77: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      80: aload         4
      82: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      85: ifnonnull     92
      88: iconst_1
      89: goto          93
      92: iconst_0
      93: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      96: aload         5
      98: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
     101: ifnonnull     108
     104: iconst_1
     105: goto          109
     108: iconst_0
     109: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
     112: aload         5
     114: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
     117: ifnonnull     124
     120: iconst_1
     121: goto          125
     124: iconst_0
     125: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
     128: aload_0
     129: iload_1
     130: putfield      #48                 // Field type:I
     133: aload_0
     134: aconst_null
     135: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
     138: aload_0
     139: aload_2
     140: putfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
     143: aload_0
     144: aload         5
     146: putfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
     149: aload_2
     150: aload_3
     151: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
     154: aload_2
     155: aload_0
     156: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
     159: aload_3
     160: aload         4
     162: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
     165: aload_3
     166: aload_0
     167: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
     170: aload         4
     172: aload         5
     174: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
     177: aload         4
     179: aload_0
     180: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
     183: aload         5
     185: aconst_null
     186: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
     189: aload         5
     191: aload_0
     192: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
     195: aload_0
     196: iconst_m1
     197: putfield      #50                 // Field sourcePosition:I
     200: return

  public com.google.javascript.rhino.Node(int, int, int);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #48                 // Field type:I
       9: aload_0
      10: aconst_null
      11: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      14: aload_0
      15: iload_2
      16: iload_3
      17: invokestatic  #62                 // Method mergeLineCharNo:(II)I
      20: putfield      #50                 // Field sourcePosition:I
      23: return

  public com.google.javascript.rhino.Node(int, com.google.javascript.rhino.Node, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #63                 // Method "<init>":(ILcom/google/javascript/rhino/Node;)V
       6: aload_0
       7: iload_3
       8: iload         4
      10: invokestatic  #62                 // Method mergeLineCharNo:(II)I
      13: putfield      #50                 // Field sourcePosition:I
      16: return

  public com.google.javascript.rhino.Node(int, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokespecial #64                 // Method "<init>":(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
       7: aload_0
       8: iload         4
      10: iload         5
      12: invokestatic  #62                 // Method mergeLineCharNo:(II)I
      15: putfield      #50                 // Field sourcePosition:I
      18: return

  public com.google.javascript.rhino.Node(int, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #65                 // Method "<init>":(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
       9: aload_0
      10: iload         5
      12: iload         6
      14: invokestatic  #62                 // Method mergeLineCharNo:(II)I
      17: putfield      #50                 // Field sourcePosition:I
      20: return

  public com.google.javascript.rhino.Node(int, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #66                 // Method "<init>":(ILcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      11: aload_0
      12: iload         6
      14: iload         7
      16: invokestatic  #62                 // Method mergeLineCharNo:(II)I
      19: putfield      #50                 // Field sourcePosition:I
      22: return

  public com.google.javascript.rhino.Node(int, com.google.javascript.rhino.Node[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #67                 // Method "<init>":(I[Lcom/google/javascript/rhino/Node;)V
       6: aload_0
       7: iload_3
       8: iload         4
      10: invokestatic  #62                 // Method mergeLineCharNo:(II)I
      13: putfield      #50                 // Field sourcePosition:I
      16: return

  public com.google.javascript.rhino.Node(int, com.google.javascript.rhino.Node[]);
    Code:
       0: aload_0
       1: invokespecial #47                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #48                 // Field type:I
       9: aload_0
      10: aconst_null
      11: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      14: aload_2
      15: arraylength
      16: ifeq          162
      19: aload_0
      20: aload_2
      21: iconst_0
      22: aaload
      23: putfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      26: aload_0
      27: aload_2
      28: aload_2
      29: arraylength
      30: iconst_1
      31: isub
      32: aaload
      33: putfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      36: iconst_1
      37: istore_3
      38: iload_3
      39: aload_2
      40: arraylength
      41: if_icmpge     111
      44: aconst_null
      45: aload_2
      46: iload_3
      47: iconst_1
      48: isub
      49: aaload
      50: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      53: if_acmpeq     66
      56: new           #68                 // class java/lang/IllegalArgumentException
      59: dup
      60: ldc           #69                 // String duplicate child
      62: invokespecial #70                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload_2
      67: iload_3
      68: iconst_1
      69: isub
      70: aaload
      71: aload_2
      72: iload_3
      73: aaload
      74: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      77: aload_2
      78: iload_3
      79: iconst_1
      80: isub
      81: aaload
      82: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      85: ifnonnull     92
      88: iconst_1
      89: goto          93
      92: iconst_0
      93: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      96: aload_2
      97: iload_3
      98: iconst_1
      99: isub
     100: aaload
     101: aload_0
     102: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
     105: iinc          3, 1
     108: goto          38
     111: aload_2
     112: aload_2
     113: arraylength
     114: iconst_1
     115: isub
     116: aaload
     117: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
     120: ifnonnull     127
     123: iconst_1
     124: goto          128
     127: iconst_0
     128: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
     131: aload_2
     132: aload_2
     133: arraylength
     134: iconst_1
     135: isub
     136: aaload
     137: aload_0
     138: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
     141: aconst_null
     142: aload_0
     143: getfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
     146: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
     149: if_acmpeq     162
     152: new           #68                 // class java/lang/IllegalArgumentException
     155: dup
     156: ldc           #69                 // String duplicate child
     158: invokespecial #70                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     161: athrow
     162: return

  public static com.google.javascript.rhino.Node newNumber(double);
    Code:
       0: new           #71                 // class com/google/javascript/rhino/Node$NumberNode
       3: dup
       4: dload_0
       5: invokespecial #72                 // Method com/google/javascript/rhino/Node$NumberNode."<init>":(D)V
       8: areturn

  public static com.google.javascript.rhino.Node newNumber(double, int, int);
    Code:
       0: new           #71                 // class com/google/javascript/rhino/Node$NumberNode
       3: dup
       4: dload_0
       5: iload_2
       6: iload_3
       7: invokespecial #73                 // Method com/google/javascript/rhino/Node$NumberNode."<init>":(DII)V
      10: areturn

  public static com.google.javascript.rhino.Node newString(java.lang.String);
    Code:
       0: new           #74                 // class com/google/javascript/rhino/Node$StringNode
       3: dup
       4: bipush        40
       6: aload_0
       7: invokespecial #76                 // Method com/google/javascript/rhino/Node$StringNode."<init>":(ILjava/lang/String;)V
      10: areturn

  public static com.google.javascript.rhino.Node newString(int, java.lang.String);
    Code:
       0: new           #74                 // class com/google/javascript/rhino/Node$StringNode
       3: dup
       4: iload_0
       5: aload_1
       6: invokespecial #76                 // Method com/google/javascript/rhino/Node$StringNode."<init>":(ILjava/lang/String;)V
       9: areturn

  public static com.google.javascript.rhino.Node newString(java.lang.String, int, int);
    Code:
       0: new           #74                 // class com/google/javascript/rhino/Node$StringNode
       3: dup
       4: bipush        40
       6: aload_0
       7: iload_1
       8: iload_2
       9: invokespecial #77                 // Method com/google/javascript/rhino/Node$StringNode."<init>":(ILjava/lang/String;II)V
      12: areturn

  public static com.google.javascript.rhino.Node newString(int, java.lang.String, int, int);
    Code:
       0: new           #74                 // class com/google/javascript/rhino/Node$StringNode
       3: dup
       4: iload_0
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokespecial #77                 // Method com/google/javascript/rhino/Node$StringNode."<init>":(ILjava/lang/String;II)V
      11: areturn

  public int getType();
    Code:
       0: aload_0
       1: getfield      #48                 // Field type:I
       4: ireturn

  public void setType(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #48                 // Field type:I
       5: return

  public boolean hasChildren();
    Code:
       0: aload_0
       1: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public com.google.javascript.rhino.Node getFirstChild();
    Code:
       0: aload_0
       1: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
       4: areturn

  public com.google.javascript.rhino.Node getLastChild();
    Code:
       0: aload_0
       1: getfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
       4: areturn

  public com.google.javascript.rhino.Node getNext();
    Code:
       0: aload_0
       1: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
       4: areturn

  public com.google.javascript.rhino.Node getChildBefore(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
       5: if_acmpne     10
       8: aconst_null
       9: areturn
      10: aload_0
      11: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      14: astore_2
      15: aload_2
      16: ifnonnull     29
      19: new           #78                 // class java/lang/RuntimeException
      22: dup
      23: ldc           #79                 // String node is not a child
      25: invokespecial #80                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_2
      30: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      33: aload_1
      34: if_acmpeq     56
      37: aload_2
      38: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      41: astore_2
      42: aload_2
      43: ifnonnull     29
      46: new           #78                 // class java/lang/RuntimeException
      49: dup
      50: ldc           #79                 // String node is not a child
      52: invokespecial #80                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_2
      57: areturn

  public com.google.javascript.rhino.Node getChildAtIndex(int);
    Code:
       0: aload_0
       1: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
       4: astore_2
       5: iload_1
       6: ifle          20
       9: aload_2
      10: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      13: astore_2
      14: iinc          1, -1
      17: goto          5
      20: aload_2
      21: areturn

  public int getIndexOfChild(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
       4: astore_2
       5: iconst_0
       6: istore_3
       7: aload_2
       8: ifnull        29
      11: aload_1
      12: aload_2
      13: if_acmpne     18
      16: iload_3
      17: ireturn
      18: aload_2
      19: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      22: astore_2
      23: iinc          3, 1
      26: goto          7
      29: iconst_m1
      30: ireturn

  public com.google.javascript.rhino.Node getLastSibling();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
       6: ifnull        17
       9: aload_1
      10: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      13: astore_1
      14: goto          2
      17: aload_1
      18: areturn

  public void addChildToFront(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      15: aload_1
      16: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      19: ifnonnull     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      30: aload_1
      31: aload_0
      32: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      35: aload_1
      36: aload_0
      37: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      40: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      43: aload_0
      44: aload_1
      45: putfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      48: aload_0
      49: getfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      52: ifnonnull     60
      55: aload_0
      56: aload_1
      57: putfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      60: return

  public void addChildToBack(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      15: aload_1
      16: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      19: ifnonnull     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      30: aload_1
      31: aload_0
      32: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      35: aload_1
      36: aconst_null
      37: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      40: aload_0
      41: getfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      44: ifnonnull     58
      47: aload_0
      48: aload_0
      49: aload_1
      50: dup_x1
      51: putfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      54: putfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      57: return
      58: aload_0
      59: getfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      62: aload_1
      63: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      66: aload_0
      67: aload_1
      68: putfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      71: return

  public void addChildrenToFront(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        34
       6: aload_2
       7: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      10: ifnonnull     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      21: aload_2
      22: aload_0
      23: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      26: aload_2
      27: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      30: astore_2
      31: goto          2
      34: aload_1
      35: invokevirtual #81                 // Method getLastSibling:()Lcom/google/javascript/rhino/Node;
      38: astore_2
      39: aload_2
      40: aload_0
      41: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      44: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      47: aload_0
      48: aload_1
      49: putfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      52: aload_0
      53: getfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      56: ifnonnull     64
      59: aload_0
      60: aload_2
      61: putfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      64: return

  public void addChildrenToBack(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #82                 // Method getLastChild:()Lcom/google/javascript/rhino/Node;
       6: invokevirtual #83                 // Method addChildrenAfter:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
       9: return

  public void addChildBefore(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: ifnull        16
       4: aload_2
       5: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
       8: aload_0
       9: if_acmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ldc           #84                 // String The existing child node of the parent should not be null.
      19: invokestatic  #52                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      22: aload_1
      23: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      26: ifnonnull     33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ldc           #85                 // String The new child node has siblings.
      36: invokestatic  #52                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      39: aload_1
      40: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      43: ifnonnull     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ldc           #86                 // String The new child node already has a parent.
      53: invokestatic  #52                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      56: aload_0
      57: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      60: aload_2
      61: if_acmpne     83
      64: aload_1
      65: aload_0
      66: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      69: aload_1
      70: aload_0
      71: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      74: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      77: aload_0
      78: aload_1
      79: putfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      82: return
      83: aload_0
      84: aload_2
      85: invokevirtual #87                 // Method getChildBefore:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      88: astore_3
      89: aload_0
      90: aload_1
      91: aload_3
      92: invokevirtual #88                 // Method addChildAfter:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      95: return

  public void addChildAfter(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #85                 // String The new child node has siblings.
      14: invokestatic  #52                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokevirtual #83                 // Method addChildrenAfter:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      23: return

  public void addChildrenAfter(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: ifnull        12
       4: aload_2
       5: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
       8: aload_0
       9: if_acmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      20: aload_1
      21: astore_3
      22: aload_3
      23: ifnull        54
      26: aload_3
      27: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      30: ifnonnull     37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      41: aload_3
      42: aload_0
      43: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      46: aload_3
      47: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      50: astore_3
      51: goto          22
      54: aload_1
      55: invokevirtual #81                 // Method getLastSibling:()Lcom/google/javascript/rhino/Node;
      58: astore_3
      59: aload_2
      60: ifnull        96
      63: aload_2
      64: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      67: astore        4
      69: aload_2
      70: aload_1
      71: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      74: aload_3
      75: aload         4
      77: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      80: aload_2
      81: aload_0
      82: getfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      85: if_acmpne     93
      88: aload_0
      89: aload_3
      90: putfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      93: goto          124
      96: aload_0
      97: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
     100: ifnull        114
     103: aload_3
     104: aload_0
     105: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
     108: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
     111: goto          119
     114: aload_0
     115: aload_3
     116: putfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
     119: aload_0
     120: aload_1
     121: putfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
     124: return

  public void removeChild(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #87                 // Method getChildBefore:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
       5: astore_2
       6: aload_2
       7: ifnonnull     24
      10: aload_0
      11: aload_0
      12: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      15: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      18: putfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      21: goto          32
      24: aload_2
      25: aload_1
      26: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      29: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      32: aload_1
      33: aload_0
      34: getfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      37: if_acmpne     45
      40: aload_0
      41: aload_2
      42: putfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      45: aload_1
      46: aconst_null
      47: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      50: aload_1
      51: aconst_null
      52: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      55: return

  public void replaceChild(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #85                 // String The new child node has siblings.
      14: invokestatic  #52                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      17: aload_2
      18: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      21: ifnonnull     28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ldc           #86                 // String The new child node already has a parent.
      31: invokestatic  #52                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      34: aload_2
      35: aload_1
      36: invokevirtual #89                 // Method copyInformationFrom:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      39: pop
      40: aload_2
      41: aload_1
      42: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      45: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      48: aload_2
      49: aload_0
      50: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      53: aload_1
      54: aload_0
      55: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      58: if_acmpne     69
      61: aload_0
      62: aload_2
      63: putfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      66: goto          80
      69: aload_0
      70: aload_1
      71: invokevirtual #87                 // Method getChildBefore:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      74: astore_3
      75: aload_3
      76: aload_2
      77: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      80: aload_1
      81: aload_0
      82: getfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      85: if_acmpne     93
      88: aload_0
      89: aload_2
      90: putfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      93: aload_1
      94: aconst_null
      95: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      98: aload_1
      99: aconst_null
     100: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
     103: return

  public void replaceChildAfter(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
       4: aload_0
       5: if_acmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ldc           #90                 // String prev is not a child of this node.
      15: invokestatic  #52                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      18: aload_2
      19: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      22: ifnonnull     29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ldc           #85                 // String The new child node has siblings.
      32: invokestatic  #52                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      35: aload_2
      36: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      39: ifnonnull     46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ldc           #86                 // String The new child node already has a parent.
      49: invokestatic  #52                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      52: aload_2
      53: aload_1
      54: invokevirtual #89                 // Method copyInformationFrom:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      57: pop
      58: aload_1
      59: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      62: astore_3
      63: aload_2
      64: aload_3
      65: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      68: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      71: aload_2
      72: aload_0
      73: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      76: aload_1
      77: aload_2
      78: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      81: aload_3
      82: aload_0
      83: getfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      86: if_acmpne     94
      89: aload_0
      90: aload_2
      91: putfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      94: aload_3
      95: aconst_null
      96: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      99: aload_3
     100: aconst_null
     101: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
     104: return

  com.google.javascript.rhino.Node$PropListItem lookupProperty(int);
    Code:
       0: aload_0
       1: getfield      #91                 // Field propListHead:Lcom/google/javascript/rhino/Node$PropListItem;
       4: astore_2
       5: aload_2
       6: ifnull        29
       9: iload_1
      10: aload_2
      11: invokeinterface #92,  1           // InterfaceMethod com/google/javascript/rhino/Node$PropListItem.getType:()I
      16: if_icmpeq     29
      19: aload_2
      20: invokeinterface #93,  1           // InterfaceMethod com/google/javascript/rhino/Node$PropListItem.getNext:()Lcom/google/javascript/rhino/Node$PropListItem;
      25: astore_2
      26: goto          5
      29: aload_2
      30: areturn

  public com.google.javascript.rhino.Node clonePropsFrom(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #91                 // Field propListHead:Lcom/google/javascript/rhino/Node$PropListItem;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #94                 // String Node has existing properties.
      14: invokestatic  #95                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      17: aload_0
      18: aload_1
      19: getfield      #91                 // Field propListHead:Lcom/google/javascript/rhino/Node$PropListItem;
      22: putfield      #91                 // Field propListHead:Lcom/google/javascript/rhino/Node$PropListItem;
      25: aload_0
      26: areturn

  public void removeProp(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #91                 // Field propListHead:Lcom/google/javascript/rhino/Node$PropListItem;
       5: iload_1
       6: invokespecial #96                 // Method removeProp:(Lcom/google/javascript/rhino/Node$PropListItem;I)Lcom/google/javascript/rhino/Node$PropListItem;
       9: astore_2
      10: aload_2
      11: aload_0
      12: getfield      #91                 // Field propListHead:Lcom/google/javascript/rhino/Node$PropListItem;
      15: if_acmpeq     23
      18: aload_0
      19: aload_2
      20: putfield      #91                 // Field propListHead:Lcom/google/javascript/rhino/Node$PropListItem;
      23: return

  private com.google.javascript.rhino.Node$PropListItem removeProp(com.google.javascript.rhino.Node$PropListItem, int);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_1
       7: invokeinterface #92,  1           // InterfaceMethod com/google/javascript/rhino/Node$PropListItem.getType:()I
      12: iload_2
      13: if_icmpne     23
      16: aload_1
      17: invokeinterface #93,  1           // InterfaceMethod com/google/javascript/rhino/Node$PropListItem.getNext:()Lcom/google/javascript/rhino/Node$PropListItem;
      22: areturn
      23: aload_0
      24: aload_1
      25: invokeinterface #93,  1           // InterfaceMethod com/google/javascript/rhino/Node$PropListItem.getNext:()Lcom/google/javascript/rhino/Node$PropListItem;
      30: iload_2
      31: invokespecial #96                 // Method removeProp:(Lcom/google/javascript/rhino/Node$PropListItem;I)Lcom/google/javascript/rhino/Node$PropListItem;
      34: astore_3
      35: aload_3
      36: aload_1
      37: invokeinterface #93,  1           // InterfaceMethod com/google/javascript/rhino/Node$PropListItem.getNext:()Lcom/google/javascript/rhino/Node$PropListItem;
      42: if_acmpeq     53
      45: aload_1
      46: aload_3
      47: invokeinterface #97,  2           // InterfaceMethod com/google/javascript/rhino/Node$PropListItem.chain:(Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;
      52: areturn
      53: aload_1
      54: areturn

  public java.lang.Object getProp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #98                 // Method lookupProperty:(I)Lcom/google/javascript/rhino/Node$PropListItem;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_2
      13: invokeinterface #99,  1           // InterfaceMethod com/google/javascript/rhino/Node$PropListItem.getObjectValue:()Ljava/lang/Object;
      18: areturn

  public boolean getBooleanProp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #100                // Method getIntProp:(I)I
       5: ifeq          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public int getIntProp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #98                 // Method lookupProperty:(I)Lcom/google/javascript/rhino/Node$PropListItem;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: iconst_0
      11: ireturn
      12: aload_2
      13: invokeinterface #101,  1          // InterfaceMethod com/google/javascript/rhino/Node$PropListItem.getIntValue:()I
      18: ireturn

  public int getExistingIntProp(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #98                 // Method lookupProperty:(I)Lcom/google/javascript/rhino/Node$PropListItem;
       5: astore_2
       6: aload_2
       7: ifnonnull     37
      10: new           #39                 // class java/lang/IllegalStateException
      13: dup
      14: new           #40                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #102                // String missing prop:
      23: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload_1
      27: invokevirtual #44                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #46                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_2
      38: invokeinterface #101,  1          // InterfaceMethod com/google/javascript/rhino/Node$PropListItem.getIntValue:()I
      43: ireturn

  public void putProp(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #103                // Method removeProp:(I)V
       5: aload_2
       6: ifnull        23
       9: aload_0
      10: aload_0
      11: iload_1
      12: aload_2
      13: aload_0
      14: getfield      #91                 // Field propListHead:Lcom/google/javascript/rhino/Node$PropListItem;
      17: invokevirtual #104                // Method createProp:(ILjava/lang/Object;Lcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;
      20: putfield      #91                 // Field propListHead:Lcom/google/javascript/rhino/Node$PropListItem;
      23: return

  public void putBooleanProp(int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: ifeq          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: invokevirtual #105                // Method putIntProp:(II)V
      14: return

  public void putIntProp(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #103                // Method removeProp:(I)V
       5: iload_2
       6: ifeq          23
       9: aload_0
      10: aload_0
      11: iload_1
      12: iload_2
      13: aload_0
      14: getfield      #91                 // Field propListHead:Lcom/google/javascript/rhino/Node$PropListItem;
      17: invokevirtual #106                // Method createProp:(IILcom/google/javascript/rhino/Node$PropListItem;)Lcom/google/javascript/rhino/Node$PropListItem;
      20: putfield      #91                 // Field propListHead:Lcom/google/javascript/rhino/Node$PropListItem;
      23: return

  public void setJsTypeExpression(com.google.javascript.rhino.JSTypeExpression);
    Code:
       0: aload_0
       1: bipush        77
       3: aload_1
       4: invokevirtual #108                // Method putProp:(ILjava/lang/Object;)V
       7: return

  public com.google.javascript.rhino.JSTypeExpression getJSTypeExpression();
    Code:
       0: aload_0
       1: bipush        77
       3: invokevirtual #109                // Method getProp:(I)Ljava/lang/Object;
       6: checkcast     #110                // class com/google/javascript/rhino/JSTypeExpression
       9: areturn

  com.google.javascript.rhino.Node$PropListItem createProp(int, java.lang.Object, com.google.javascript.rhino.Node$PropListItem);
    Code:
       0: new           #111                // class com/google/javascript/rhino/Node$ObjectPropListItem
       3: dup
       4: iload_1
       5: aload_2
       6: aload_3
       7: invokespecial #112                // Method com/google/javascript/rhino/Node$ObjectPropListItem."<init>":(ILjava/lang/Object;Lcom/google/javascript/rhino/Node$PropListItem;)V
      10: areturn

  com.google.javascript.rhino.Node$PropListItem createProp(int, int, com.google.javascript.rhino.Node$PropListItem);
    Code:
       0: new           #113                // class com/google/javascript/rhino/Node$IntPropListItem
       3: dup
       4: iload_1
       5: iload_2
       6: aload_3
       7: invokespecial #114                // Method com/google/javascript/rhino/Node$IntPropListItem."<init>":(IILcom/google/javascript/rhino/Node$PropListItem;)V
      10: areturn

  private int[] getSortedPropTypes();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #91                 // Field propListHead:Lcom/google/javascript/rhino/Node$PropListItem;
       6: astore_2
       7: aload_2
       8: ifnull        24
      11: iinc          1, 1
      14: aload_2
      15: invokeinterface #93,  1           // InterfaceMethod com/google/javascript/rhino/Node$PropListItem.getNext:()Lcom/google/javascript/rhino/Node$PropListItem;
      20: astore_2
      21: goto          7
      24: iload_1
      25: newarray       int
      27: astore_2
      28: aload_0
      29: getfield      #91                 // Field propListHead:Lcom/google/javascript/rhino/Node$PropListItem;
      32: astore_3
      33: aload_3
      34: ifnull        59
      37: iinc          1, -1
      40: aload_2
      41: iload_1
      42: aload_3
      43: invokeinterface #92,  1           // InterfaceMethod com/google/javascript/rhino/Node$PropListItem.getType:()I
      48: iastore
      49: aload_3
      50: invokeinterface #93,  1           // InterfaceMethod com/google/javascript/rhino/Node$PropListItem.getNext:()Lcom/google/javascript/rhino/Node$PropListItem;
      55: astore_3
      56: goto          33
      59: aload_2
      60: invokestatic  #115                // Method java/util/Arrays.sort:([I)V
      63: aload_2
      64: areturn

  public double getDouble() throws java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        39
       6: if_icmpne     19
       9: new           #39                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #117                // String Number node not created with Node.newNumber
      15: invokespecial #46                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: new           #118                // class java/lang/UnsupportedOperationException
      22: dup
      23: new           #40                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      30: aload_0
      31: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: ldc           #120                // String  is not a number node
      36: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #121                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      45: athrow

  public void setDouble(double) throws java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        39
       6: if_icmpne     19
       9: new           #39                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #117                // String Number node not created with Node.newNumber
      15: invokespecial #46                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: new           #118                // class java/lang/UnsupportedOperationException
      22: dup
      23: new           #40                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      30: aload_0
      31: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: ldc           #122                // String  is not a string node
      36: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #121                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      45: athrow

  public java.lang.String getString() throws java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        40
       6: if_icmpne     19
       9: new           #39                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #123                // String String node not created with Node.newString
      15: invokespecial #46                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: new           #118                // class java/lang/UnsupportedOperationException
      22: dup
      23: new           #40                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      30: aload_0
      31: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: ldc           #122                // String  is not a string node
      36: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #121                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      45: athrow

  public void setString(java.lang.String) throws java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        40
       6: if_icmpeq     18
       9: aload_0
      10: invokevirtual #116                // Method getType:()I
      13: bipush        38
      15: if_icmpne     28
      18: new           #39                 // class java/lang/IllegalStateException
      21: dup
      22: ldc           #123                // String String node not created with Node.newString
      24: invokespecial #46                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: new           #118                // class java/lang/UnsupportedOperationException
      31: dup
      32: new           #40                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      39: aload_0
      40: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #122                // String  is not a string node
      45: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #121                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      54: athrow

  public java.lang.String toString();
    Code:
       0: aload_0
       1: iconst_1
       2: iconst_1
       3: iconst_1
       4: invokevirtual #124                // Method toString:(ZZZ)Ljava/lang/String;
       7: areturn

  public java.lang.String toString(boolean, boolean, boolean);
    Code:
       0: new           #40                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
       7: astore        4
       9: aload_0
      10: aload         4
      12: iload_1
      13: iload_2
      14: iload_3
      15: invokespecial #125                // Method toString:(Ljava/lang/StringBuilder;ZZZ)V
      18: aload         4
      20: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: areturn

  private void toString(java.lang.StringBuilder, boolean, boolean, boolean);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #48                 // Field type:I
       5: invokestatic  #126                // Method com/google/javascript/rhino/Token.name:(I)Ljava/lang/String;
       8: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: pop
      12: aload_0
      13: instanceof    #74                 // class com/google/javascript/rhino/Node$StringNode
      16: ifeq          38
      19: aload_1
      20: bipush        32
      22: invokevirtual #127                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      25: pop
      26: aload_1
      27: aload_0
      28: invokevirtual #128                // Method getString:()Ljava/lang/String;
      31: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: pop
      35: goto          123
      38: aload_0
      39: getfield      #48                 // Field type:I
      42: bipush        105
      44: if_icmpne     98
      47: aload_1
      48: bipush        32
      50: invokevirtual #127                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      58: ifnull        73
      61: aload_0
      62: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      65: invokevirtual #116                // Method getType:()I
      68: bipush        38
      70: if_icmpeq     83
      73: aload_1
      74: ldc           #129                // String <invalid>
      76: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: pop
      80: goto          123
      83: aload_1
      84: aload_0
      85: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      88: invokevirtual #128                // Method getString:()Ljava/lang/String;
      91: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: pop
      95: goto          123
      98: aload_0
      99: getfield      #48                 // Field type:I
     102: bipush        39
     104: if_icmpne     123
     107: aload_1
     108: bipush        32
     110: invokevirtual #127                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     113: pop
     114: aload_1
     115: aload_0
     116: invokevirtual #130                // Method getDouble:()D
     119: invokevirtual #131                // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
     122: pop
     123: iload_2
     124: ifeq          153
     127: aload_0
     128: invokevirtual #132                // Method getLineno:()I
     131: istore        5
     133: iload         5
     135: iconst_m1
     136: if_icmpeq     153
     139: aload_1
     140: bipush        32
     142: invokevirtual #127                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     145: pop
     146: aload_1
     147: iload         5
     149: invokevirtual #44                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     152: pop
     153: iload_3
     154: ifeq          251
     157: aload_0
     158: invokespecial #133                // Method getSortedPropTypes:()[I
     161: astore        5
     163: iconst_0
     164: istore        6
     166: iload         6
     168: aload         5
     170: arraylength
     171: if_icmpge     251
     174: aload         5
     176: iload         6
     178: iaload
     179: istore        7
     181: aload_0
     182: iload         7
     184: invokevirtual #98                 // Method lookupProperty:(I)Lcom/google/javascript/rhino/Node$PropListItem;
     187: astore        8
     189: aload_1
     190: ldc           #134                // String  [
     192: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     195: pop
     196: aload_1
     197: iload         7
     199: invokestatic  #135                // Method propToString:(I)Ljava/lang/String;
     202: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     205: pop
     206: aload_1
     207: ldc           #136                // String :
     209: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     212: pop
     213: iload         7
     215: lookupswitch  { // 0
               default: 224
          }
     224: aload         8
     226: invokevirtual #137                // Method java/lang/Object.toString:()Ljava/lang/String;
     229: astore        9
     231: aload_1
     232: aload         9
     234: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     237: pop
     238: aload_1
     239: bipush        93
     241: invokevirtual #127                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     244: pop
     245: iinc          6, 1
     248: goto          166
     251: iload         4
     253: ifeq          291
     256: aload_0
     257: getfield      #138                // Field typei:Lcom/google/javascript/rhino/TypeI;
     260: ifnull        291
     263: aload_0
     264: getfield      #138                // Field typei:Lcom/google/javascript/rhino/TypeI;
     267: invokevirtual #137                // Method java/lang/Object.toString:()Ljava/lang/String;
     270: astore        5
     272: aload         5
     274: ifnull        291
     277: aload_1
     278: ldc           #139                // String  :
     280: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     283: pop
     284: aload_1
     285: aload         5
     287: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     290: pop
     291: return

  public java.lang.String toStringTree();
    Code:
       0: aload_0
       1: invokespecial #140                // Method toStringTreeImpl:()Ljava/lang/String;
       4: areturn

  private java.lang.String toStringTreeImpl();
    Code:
       0: new           #40                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #141                // Method appendStringTree:(Ljava/lang/Appendable;)V
      13: aload_1
      14: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      17: areturn
      18: astore_1
      19: new           #78                 // class java/lang/RuntimeException
      22: dup
      23: new           #40                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #143                // String Should not happen\n
      32: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_1
      36: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #80                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      45: athrow
    Exception table:
       from    to  target type
           0    17    18   Class java/io/IOException

  public void appendStringTree(java.lang.Appendable) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokestatic  #144                // Method toStringTreeHelper:(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V
       6: return

  private static void toStringTreeHelper(com.google.javascript.rhino.Node, int, java.lang.Appendable) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: iload_1
       4: if_icmpeq     22
       7: aload_2
       8: ldc           #145                // String
      10: invokeinterface #146,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      15: pop
      16: iinc          3, 1
      19: goto          2
      22: aload_2
      23: aload_0
      24: invokevirtual #147                // Method toString:()Ljava/lang/String;
      27: invokeinterface #146,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      32: pop
      33: aload_2
      34: bipush        10
      36: invokeinterface #148,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      41: pop
      42: aload_0
      43: invokevirtual #149                // Method getFirstChild:()Lcom/google/javascript/rhino/Node;
      46: astore_3
      47: aload_3
      48: ifnull        67
      51: aload_3
      52: iload_1
      53: iconst_1
      54: iadd
      55: aload_2
      56: invokestatic  #144                // Method toStringTreeHelper:(Lcom/google/javascript/rhino/Node;ILjava/lang/Appendable;)V
      59: aload_3
      60: invokevirtual #150                // Method getNext:()Lcom/google/javascript/rhino/Node;
      63: astore_3
      64: goto          47
      67: return

  public void setStaticSourceFile(com.google.javascript.rhino.jstype.StaticSourceFile);
    Code:
       0: aload_0
       1: bipush        51
       3: aload_1
       4: invokevirtual #108                // Method putProp:(ILjava/lang/Object;)V
       7: return

  public void setSourceFileForTesting(java.lang.String);
    Code:
       0: aload_0
       1: bipush        51
       3: new           #151                // class com/google/javascript/rhino/jstype/SimpleSourceFile
       6: dup
       7: aload_1
       8: iconst_0
       9: invokespecial #152                // Method com/google/javascript/rhino/jstype/SimpleSourceFile."<init>":(Ljava/lang/String;Z)V
      12: invokevirtual #108                // Method putProp:(ILjava/lang/Object;)V
      15: return

  public java.lang.String getSourceFileName();
    Code:
       0: aload_0
       1: invokevirtual #153                // Method getStaticSourceFile:()Lcom/google/javascript/rhino/jstype/StaticSourceFile;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: aconst_null
      10: goto          19
      13: aload_1
      14: invokeinterface #154,  1          // InterfaceMethod com/google/javascript/rhino/jstype/StaticSourceFile.getName:()Ljava/lang/String;
      19: areturn

  public com.google.javascript.rhino.jstype.StaticSourceFile getStaticSourceFile();
    Code:
       0: aload_0
       1: bipush        51
       3: invokevirtual #109                // Method getProp:(I)Ljava/lang/Object;
       6: checkcast     #155                // class com/google/javascript/rhino/jstype/StaticSourceFile
       9: areturn

  public void setInputId(com.google.javascript.rhino.InputId);
    Code:
       0: aload_0
       1: bipush        53
       3: aload_1
       4: invokevirtual #108                // Method putProp:(ILjava/lang/Object;)V
       7: return

  public com.google.javascript.rhino.InputId getInputId();
    Code:
       0: aload_0
       1: bipush        53
       3: invokevirtual #109                // Method getProp:(I)Ljava/lang/Object;
       6: checkcast     #156                // class com/google/javascript/rhino/InputId
       9: areturn

  public boolean isFromExterns();
    Code:
       0: aload_0
       1: invokevirtual #153                // Method getStaticSourceFile:()Lcom/google/javascript/rhino/jstype/StaticSourceFile;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: iconst_0
      10: goto          19
      13: aload_1
      14: invokeinterface #157,  1          // InterfaceMethod com/google/javascript/rhino/jstype/StaticSourceFile.isExtern:()Z
      19: ireturn

  public int getLength();
    Code:
       0: aload_0
       1: bipush        52
       3: invokevirtual #100                // Method getIntProp:(I)I
       6: ireturn

  public void setLength(int);
    Code:
       0: aload_0
       1: bipush        52
       3: iload_1
       4: invokevirtual #105                // Method putIntProp:(II)V
       7: return

  public int getLineno();
    Code:
       0: aload_0
       1: getfield      #50                 // Field sourcePosition:I
       4: invokestatic  #158                // Method extractLineno:(I)I
       7: ireturn

  public int getCharno();
    Code:
       0: aload_0
       1: getfield      #50                 // Field sourcePosition:I
       4: invokestatic  #159                // Method extractCharno:(I)I
       7: ireturn

  public int getSourceOffset();
    Code:
       0: aload_0
       1: invokevirtual #153                // Method getStaticSourceFile:()Lcom/google/javascript/rhino/jstype/StaticSourceFile;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: iconst_m1
      10: ireturn
      11: aload_0
      12: invokevirtual #132                // Method getLineno:()I
      15: istore_2
      16: iload_2
      17: iconst_m1
      18: if_icmpne     23
      21: iconst_m1
      22: ireturn
      23: aload_1
      24: iload_2
      25: invokeinterface #160,  2          // InterfaceMethod com/google/javascript/rhino/jstype/StaticSourceFile.getLineOffset:(I)I
      30: aload_0
      31: invokevirtual #161                // Method getCharno:()I
      34: iadd
      35: ireturn

  public int getSourcePosition();
    Code:
       0: aload_0
       1: getfield      #50                 // Field sourcePosition:I
       4: ireturn

  public void setLineno(int);
    Code:
       0: aload_0
       1: invokevirtual #161                // Method getCharno:()I
       4: istore_2
       5: iload_2
       6: iconst_m1
       7: if_icmpne     12
      10: iconst_0
      11: istore_2
      12: aload_0
      13: iload_1
      14: iload_2
      15: invokestatic  #62                 // Method mergeLineCharNo:(II)I
      18: putfield      #50                 // Field sourcePosition:I
      21: return

  public void setCharno(int);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #132                // Method getLineno:()I
       5: iload_1
       6: invokestatic  #62                 // Method mergeLineCharNo:(II)I
       9: putfield      #50                 // Field sourcePosition:I
      12: return

  public void setSourceEncodedPosition(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #50                 // Field sourcePosition:I
       5: return

  public void setSourceEncodedPositionForTree(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #50                 // Field sourcePosition:I
       5: aload_0
       6: invokevirtual #149                // Method getFirstChild:()Lcom/google/javascript/rhino/Node;
       9: astore_2
      10: aload_2
      11: ifnull        27
      14: aload_2
      15: iload_1
      16: invokevirtual #162                // Method setSourceEncodedPositionForTree:(I)V
      19: aload_2
      20: invokevirtual #150                // Method getNext:()Lcom/google/javascript/rhino/Node;
      23: astore_2
      24: goto          10
      27: return

  protected static int mergeLineCharNo(int, int);
    Code:
       0: iload_0
       1: iflt          8
       4: iload_1
       5: ifge          10
       8: iconst_m1
       9: ireturn
      10: iload_1
      11: sipush        -4096
      14: iand
      15: ifeq          27
      18: iload_0
      19: bipush        12
      21: ishl
      22: sipush        4095
      25: ior
      26: ireturn
      27: iload_0
      28: bipush        12
      30: ishl
      31: iload_1
      32: sipush        4095
      35: iand
      36: ior
      37: ireturn

  protected static int extractLineno(int);
    Code:
       0: iload_0
       1: iconst_m1
       2: if_icmpne     7
       5: iconst_m1
       6: ireturn
       7: iload_0
       8: bipush        12
      10: iushr
      11: ireturn

  protected static int extractCharno(int);
    Code:
       0: iload_0
       1: iconst_m1
       2: if_icmpne     7
       5: iconst_m1
       6: ireturn
       7: iload_0
       8: sipush        4095
      11: iand
      12: ireturn

  public java.lang.Iterable<com.google.javascript.rhino.Node> children();
    Code:
       0: aload_0
       1: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
       4: ifnonnull     11
       7: invokestatic  #163                // Method java/util/Collections.emptySet:()Ljava/util/Set;
      10: areturn
      11: new           #164                // class com/google/javascript/rhino/Node$SiblingNodeIterable
      14: dup
      15: aload_0
      16: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      19: invokespecial #165                // Method com/google/javascript/rhino/Node$SiblingNodeIterable."<init>":(Lcom/google/javascript/rhino/Node;)V
      22: areturn

  public java.lang.Iterable<com.google.javascript.rhino.Node> siblings();
    Code:
       0: new           #164                // class com/google/javascript/rhino/Node$SiblingNodeIterable
       3: dup
       4: aload_0
       5: invokespecial #165                // Method com/google/javascript/rhino/Node$SiblingNodeIterable."<init>":(Lcom/google/javascript/rhino/Node;)V
       8: areturn

  com.google.javascript.rhino.Node$PropListItem getPropListHeadForTesting();
    Code:
       0: aload_0
       1: getfield      #91                 // Field propListHead:Lcom/google/javascript/rhino/Node$PropListItem;
       4: areturn

  public com.google.javascript.rhino.Node getParent();
    Code:
       0: aload_0
       1: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
       4: areturn

  public com.google.javascript.rhino.Node getAncestor(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: invokestatic  #61                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      12: aload_0
      13: astore_2
      14: aload_2
      15: ifnull        33
      18: iload_1
      19: iinc          1, -1
      22: ifle          33
      25: aload_2
      26: invokevirtual #166                // Method getParent:()Lcom/google/javascript/rhino/Node;
      29: astore_2
      30: goto          14
      33: aload_2
      34: areturn

  public com.google.javascript.rhino.Node$AncestorIterable getAncestors();
    Code:
       0: new           #167                // class com/google/javascript/rhino/Node$AncestorIterable
       3: dup
       4: aload_0
       5: invokevirtual #166                // Method getParent:()Lcom/google/javascript/rhino/Node;
       8: invokespecial #168                // Method com/google/javascript/rhino/Node$AncestorIterable."<init>":(Lcom/google/javascript/rhino/Node;)V
      11: areturn

  public boolean hasOneChild();
    Code:
       0: aload_0
       1: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
       4: ifnull        22
       7: aload_0
       8: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      11: aload_0
      12: getfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      15: if_acmpne     22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public boolean hasMoreThanOneChild();
    Code:
       0: aload_0
       1: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
       4: ifnull        22
       7: aload_0
       8: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      11: aload_0
      12: getfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      15: if_acmpeq     22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public int getChildCount();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
       6: astore_2
       7: aload_2
       8: ifnull        22
      11: iinc          1, 1
      14: aload_2
      15: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      18: astore_2
      19: goto          7
      22: iload_1
      23: ireturn

  public boolean hasChild(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
       4: astore_2
       5: aload_2
       6: ifnull        24
       9: aload_1
      10: aload_2
      11: if_acmpne     16
      14: iconst_1
      15: ireturn
      16: aload_2
      17: invokevirtual #150                // Method getNext:()Lcom/google/javascript/rhino/Node;
      20: astore_2
      21: goto          5
      24: iconst_0
      25: ireturn

  public java.lang.String checkTreeEquals(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #169                // Method checkTreeEqualsImpl:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node$NodeMismatch;
       5: astore_2
       6: aload_2
       7: ifnull        75
      10: new           #40                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #170                // String Node tree inequality:\nTree1:\n
      19: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: invokevirtual #171                // Method toStringTree:()Ljava/lang/String;
      26: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #172                // String \n\nTree2:\n
      31: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokevirtual #171                // Method toStringTree:()Ljava/lang/String;
      38: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #173                // String \n\nSubtree1:
      43: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_2
      47: getfield      #174                // Field com/google/javascript/rhino/Node$NodeMismatch.nodeA:Lcom/google/javascript/rhino/Node;
      50: invokevirtual #171                // Method toStringTree:()Ljava/lang/String;
      53: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: ldc           #175                // String \n\nSubtree2:
      58: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_2
      62: getfield      #176                // Field com/google/javascript/rhino/Node$NodeMismatch.nodeB:Lcom/google/javascript/rhino/Node;
      65: invokevirtual #171                // Method toStringTree:()Ljava/lang/String;
      68: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: areturn
      75: aconst_null
      76: areturn

  public java.lang.String checkTreeEqualsIncludingJsDoc(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #177                // Method checkTreeEqualsImpl:(Lcom/google/javascript/rhino/Node;Z)Lcom/google/javascript/rhino/Node$NodeMismatch;
       6: astore_2
       7: aload_2
       8: ifnull        200
      11: aload_2
      12: getfield      #174                // Field com/google/javascript/rhino/Node$NodeMismatch.nodeA:Lcom/google/javascript/rhino/Node;
      15: aload_2
      16: getfield      #176                // Field com/google/javascript/rhino/Node$NodeMismatch.nodeB:Lcom/google/javascript/rhino/Node;
      19: iconst_0
      20: iconst_1
      21: iconst_0
      22: invokevirtual #178                // Method isEquivalentTo:(Lcom/google/javascript/rhino/Node;ZZZ)Z
      25: ifeq          135
      28: aload_2
      29: getfield      #174                // Field com/google/javascript/rhino/Node$NodeMismatch.nodeA:Lcom/google/javascript/rhino/Node;
      32: invokevirtual #179                // Method getJSDocInfo:()Lcom/google/javascript/rhino/JSDocInfo;
      35: ifnonnull     43
      38: ldc           #180                // String (none)
      40: goto          53
      43: aload_2
      44: getfield      #174                // Field com/google/javascript/rhino/Node$NodeMismatch.nodeA:Lcom/google/javascript/rhino/Node;
      47: invokevirtual #179                // Method getJSDocInfo:()Lcom/google/javascript/rhino/JSDocInfo;
      50: invokevirtual #181                // Method com/google/javascript/rhino/JSDocInfo.toStringVerbose:()Ljava/lang/String;
      53: astore_3
      54: aload_2
      55: getfield      #176                // Field com/google/javascript/rhino/Node$NodeMismatch.nodeB:Lcom/google/javascript/rhino/Node;
      58: invokevirtual #179                // Method getJSDocInfo:()Lcom/google/javascript/rhino/JSDocInfo;
      61: ifnonnull     69
      64: ldc           #180                // String (none)
      66: goto          79
      69: aload_2
      70: getfield      #176                // Field com/google/javascript/rhino/Node$NodeMismatch.nodeB:Lcom/google/javascript/rhino/Node;
      73: invokevirtual #179                // Method getJSDocInfo:()Lcom/google/javascript/rhino/JSDocInfo;
      76: invokevirtual #181                // Method com/google/javascript/rhino/JSDocInfo.toStringVerbose:()Ljava/lang/String;
      79: astore        4
      81: new           #40                 // class java/lang/StringBuilder
      84: dup
      85: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      88: ldc           #182                // String Node tree inequality:\nTree:\n
      90: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload_0
      94: invokevirtual #171                // Method toStringTree:()Ljava/lang/String;
      97: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: ldc           #183                // String \n\nJSDoc differs on subtree:
     102: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: aload_2
     106: getfield      #174                // Field com/google/javascript/rhino/Node$NodeMismatch.nodeA:Lcom/google/javascript/rhino/Node;
     109: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     112: ldc           #184                // String \nExpected JSDoc:
     114: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: aload_3
     118: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: ldc           #185                // String \nActual JSDoc  :
     123: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload         4
     128: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     134: areturn
     135: new           #40                 // class java/lang/StringBuilder
     138: dup
     139: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
     142: ldc           #186                // String Node tree inequality:\nExpected tree:\n
     144: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: aload_0
     148: invokevirtual #171                // Method toStringTree:()Ljava/lang/String;
     151: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: ldc           #187                // String \n\nActual tree:\n
     156: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: aload_1
     160: invokevirtual #171                // Method toStringTree:()Ljava/lang/String;
     163: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: ldc           #188                // String \n\nExpected subtree:
     168: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     171: aload_2
     172: getfield      #174                // Field com/google/javascript/rhino/Node$NodeMismatch.nodeA:Lcom/google/javascript/rhino/Node;
     175: invokevirtual #171                // Method toStringTree:()Ljava/lang/String;
     178: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     181: ldc           #189                // String \n\nActual subtree:
     183: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     186: aload_2
     187: getfield      #176                // Field com/google/javascript/rhino/Node$NodeMismatch.nodeB:Lcom/google/javascript/rhino/Node;
     190: invokevirtual #171                // Method toStringTree:()Ljava/lang/String;
     193: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     199: areturn
     200: aconst_null
     201: areturn

  com.google.javascript.rhino.Node$NodeMismatch checkTreeEqualsImpl(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #177                // Method checkTreeEqualsImpl:(Lcom/google/javascript/rhino/Node;Z)Lcom/google/javascript/rhino/Node$NodeMismatch;
       6: areturn

  private com.google.javascript.rhino.Node$NodeMismatch checkTreeEqualsImpl(com.google.javascript.rhino.Node, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: iconst_0
       4: iload_2
       5: invokevirtual #178                // Method isEquivalentTo:(Lcom/google/javascript/rhino/Node;ZZZ)Z
       8: ifne          21
      11: new           #190                // class com/google/javascript/rhino/Node$NodeMismatch
      14: dup
      15: aload_0
      16: aload_1
      17: invokespecial #191                // Method com/google/javascript/rhino/Node$NodeMismatch."<init>":(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      20: areturn
      21: aconst_null
      22: astore_3
      23: aload_0
      24: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      27: astore        4
      29: aload_1
      30: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      33: astore        5
      35: aload_3
      36: ifnonnull     88
      39: aload         4
      41: ifnull        88
      44: aload_1
      45: ifnonnull     56
      48: new           #39                 // class java/lang/IllegalStateException
      51: dup
      52: invokespecial #192                // Method java/lang/IllegalStateException."<init>":()V
      55: athrow
      56: aload         4
      58: aload         5
      60: iload_2
      61: invokespecial #177                // Method checkTreeEqualsImpl:(Lcom/google/javascript/rhino/Node;Z)Lcom/google/javascript/rhino/Node$NodeMismatch;
      64: astore_3
      65: aload_3
      66: ifnull        71
      69: aload_3
      70: areturn
      71: aload         4
      73: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      76: astore        4
      78: aload         5
      80: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      83: astore        5
      85: goto          35
      88: aload_3
      89: areturn

  public boolean isEquivalentTo(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: iconst_1
       4: iconst_0
       5: invokevirtual #178                // Method isEquivalentTo:(Lcom/google/javascript/rhino/Node;ZZZ)Z
       8: ireturn

  public boolean isEquivalentToShallow(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: iconst_0
       4: iconst_0
       5: invokevirtual #178                // Method isEquivalentTo:(Lcom/google/javascript/rhino/Node;ZZZ)Z
       8: ireturn

  public boolean isEquivalentToTyped(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: iconst_1
       4: iconst_1
       5: invokevirtual #178                // Method isEquivalentTo:(Lcom/google/javascript/rhino/Node;ZZZ)Z
       8: ireturn

  boolean isEquivalentTo(com.google.javascript.rhino.Node, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: getfield      #48                 // Field type:I
       4: aload_1
       5: invokevirtual #116                // Method getType:()I
       8: if_icmpne     33
      11: aload_0
      12: invokevirtual #193                // Method getChildCount:()I
      15: aload_1
      16: invokevirtual #193                // Method getChildCount:()I
      19: if_icmpne     33
      22: aload_0
      23: invokevirtual #194                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      26: aload_1
      27: invokevirtual #194                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      30: if_acmpeq     35
      33: iconst_0
      34: ireturn
      35: iload_2
      36: ifeq          58
      39: aload_0
      40: getfield      #138                // Field typei:Lcom/google/javascript/rhino/TypeI;
      43: checkcast     #195                // class com/google/javascript/rhino/jstype/JSType
      46: aload_1
      47: invokevirtual #196                // Method getJSType:()Lcom/google/javascript/rhino/jstype/JSType;
      50: invokestatic  #197                // Method com/google/javascript/rhino/jstype/JSType.isEquivalent:(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z
      53: ifne          58
      56: iconst_0
      57: ireturn
      58: iload         4
      60: ifeq          79
      63: aload_0
      64: invokevirtual #179                // Method getJSDocInfo:()Lcom/google/javascript/rhino/JSDocInfo;
      67: aload_1
      68: invokevirtual #179                // Method getJSDocInfo:()Lcom/google/javascript/rhino/JSDocInfo;
      71: invokestatic  #198                // Method com/google/javascript/rhino/JSDocInfo.areEquivalent:(Lcom/google/javascript/rhino/JSDocInfo;Lcom/google/javascript/rhino/JSDocInfo;)Z
      74: ifne          79
      77: iconst_0
      78: ireturn
      79: aload_0
      80: getfield      #48                 // Field type:I
      83: bipush        102
      85: if_icmpeq     97
      88: aload_0
      89: getfield      #48                 // Field type:I
      92: bipush        103
      94: if_icmpne     125
      97: aload_0
      98: bipush        32
     100: invokevirtual #100                // Method getIntProp:(I)I
     103: istore        5
     105: aload_1
     106: bipush        32
     108: invokevirtual #100                // Method getIntProp:(I)I
     111: istore        6
     113: iload         5
     115: iload         6
     117: if_icmpeq     122
     120: iconst_0
     121: ireturn
     122: goto          255
     125: aload_0
     126: getfield      #48                 // Field type:I
     129: bipush        40
     131: if_icmpeq     144
     134: aload_0
     135: getfield      #48                 // Field type:I
     138: sipush        154
     141: if_icmpne     207
     144: aload_0
     145: getfield      #48                 // Field type:I
     148: sipush        154
     151: if_icmpne     179
     154: aload_0
     155: bipush        36
     157: invokevirtual #100                // Method getIntProp:(I)I
     160: istore        5
     162: aload_1
     163: bipush        36
     165: invokevirtual #100                // Method getIntProp:(I)I
     168: istore        6
     170: iload         5
     172: iload         6
     174: if_icmpeq     179
     177: iconst_0
     178: ireturn
     179: aload_0
     180: bipush        54
     182: invokevirtual #100                // Method getIntProp:(I)I
     185: istore        5
     187: aload_1
     188: bipush        54
     190: invokevirtual #100                // Method getIntProp:(I)I
     193: istore        6
     195: iload         5
     197: iload         6
     199: if_icmpeq     204
     202: iconst_0
     203: ireturn
     204: goto          255
     207: aload_0
     208: getfield      #48                 // Field type:I
     211: bipush        37
     213: if_icmpne     233
     216: aload_0
     217: bipush        50
     219: invokevirtual #199                // Method getBooleanProp:(I)Z
     222: aload_1
     223: bipush        50
     225: invokevirtual #199                // Method getBooleanProp:(I)Z
     228: if_icmpeq     255
     231: iconst_0
     232: ireturn
     233: aload_0
     234: getfield      #48                 // Field type:I
     237: bipush        105
     239: if_icmpne     255
     242: aload_0
     243: invokevirtual #200                // Method isArrowFunction:()Z
     246: aload_1
     247: invokevirtual #200                // Method isArrowFunction:()Z
     250: if_icmpeq     255
     253: iconst_0
     254: ireturn
     255: iload_3
     256: ifeq          309
     259: aload_0
     260: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
     263: astore        5
     265: aload_1
     266: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
     269: astore        6
     271: aload         5
     273: ifnull        309
     276: aload         5
     278: aload         6
     280: iload_2
     281: iload_3
     282: iload         4
     284: invokevirtual #178                // Method isEquivalentTo:(Lcom/google/javascript/rhino/Node;ZZZ)Z
     287: ifne          292
     290: iconst_0
     291: ireturn
     292: aload         5
     294: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
     297: astore        5
     299: aload         6
     301: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
     304: astore        6
     306: goto          271
     309: iconst_1
     310: ireturn

  public java.lang.String getQualifiedName();
    Code:
       0: aload_0
       1: getfield      #48                 // Field type:I
       4: bipush        38
       6: if_icmpne     27
       9: aload_0
      10: invokevirtual #128                // Method getString:()Ljava/lang/String;
      13: astore_1
      14: aload_1
      15: invokevirtual #201                // Method java/lang/String.isEmpty:()Z
      18: ifeq          25
      21: aconst_null
      22: goto          26
      25: aload_1
      26: areturn
      27: aload_0
      28: getfield      #48                 // Field type:I
      31: bipush        33
      33: if_icmpne     80
      36: aload_0
      37: invokevirtual #149                // Method getFirstChild:()Lcom/google/javascript/rhino/Node;
      40: invokevirtual #202                // Method getQualifiedName:()Ljava/lang/String;
      43: astore_1
      44: aload_1
      45: ifnonnull     50
      48: aconst_null
      49: areturn
      50: new           #40                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      57: aload_1
      58: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: ldc           #203                // String .
      63: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_0
      67: invokevirtual #82                 // Method getLastChild:()Lcom/google/javascript/rhino/Node;
      70: invokevirtual #128                // Method getString:()Ljava/lang/String;
      73: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: areturn
      80: aload_0
      81: getfield      #48                 // Field type:I
      84: bipush        42
      86: if_icmpne     92
      89: ldc           #204                // String this
      91: areturn
      92: aload_0
      93: getfield      #48                 // Field type:I
      96: sipush        161
      99: if_icmpne     105
     102: ldc           #205                // String super
     104: areturn
     105: aconst_null
     106: areturn

  public boolean isQualifiedName();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: lookupswitch  { // 3
                    33: 58
                    38: 40
                    42: 56
               default: 66
          }
      40: aload_0
      41: invokevirtual #128                // Method getString:()Ljava/lang/String;
      44: invokevirtual #201                // Method java/lang/String.isEmpty:()Z
      47: ifne          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: ireturn
      56: iconst_1
      57: ireturn
      58: aload_0
      59: invokevirtual #149                // Method getFirstChild:()Lcom/google/javascript/rhino/Node;
      62: invokevirtual #206                // Method isQualifiedName:()Z
      65: ireturn
      66: iconst_0
      67: ireturn

  public boolean matchesQualifiedName(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        20
       4: aload_0
       5: aload_1
       6: aload_1
       7: invokevirtual #207                // Method java/lang/String.length:()I
      10: invokespecial #208                // Method matchesQualifiedName:(Ljava/lang/String;I)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  private boolean matchesQualifiedName(java.lang.String, int);
    Code:
       0: aload_1
       1: bipush        46
       3: iload_2
       4: iconst_1
       5: isub
       6: invokevirtual #209                // Method java/lang/String.lastIndexOf:(II)I
       9: iconst_1
      10: iadd
      11: istore_3
      12: aload_0
      13: invokevirtual #116                // Method getType:()I
      16: lookupswitch  { // 4
                    33: 150
                    38: 60
                    42: 102
                   161: 126
               default: 209
          }
      60: aload_0
      61: invokevirtual #128                // Method getString:()Ljava/lang/String;
      64: astore        4
      66: iload_3
      67: ifne          100
      70: aload         4
      72: invokevirtual #201                // Method java/lang/String.isEmpty:()Z
      75: ifne          100
      78: aload         4
      80: invokevirtual #207                // Method java/lang/String.length:()I
      83: iload_2
      84: if_icmpne     100
      87: aload_1
      88: aload         4
      90: invokevirtual #210                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      93: ifeq          100
      96: iconst_1
      97: goto          101
     100: iconst_0
     101: ireturn
     102: iload_3
     103: ifne          124
     106: iconst_4
     107: iload_2
     108: if_icmpne     124
     111: aload_1
     112: ldc           #204                // String this
     114: invokevirtual #210                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     117: ifeq          124
     120: iconst_1
     121: goto          125
     124: iconst_0
     125: ireturn
     126: iload_3
     127: ifne          148
     130: iconst_5
     131: iload_2
     132: if_icmpne     148
     135: aload_1
     136: ldc           #205                // String super
     138: invokevirtual #210                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     141: ifeq          148
     144: iconst_1
     145: goto          149
     148: iconst_0
     149: ireturn
     150: aload_0
     151: invokevirtual #82                 // Method getLastChild:()Lcom/google/javascript/rhino/Node;
     154: invokevirtual #128                // Method getString:()Ljava/lang/String;
     157: astore        5
     159: iload_3
     160: iconst_1
     161: if_icmple     207
     164: aload         5
     166: invokevirtual #207                // Method java/lang/String.length:()I
     169: iload_2
     170: iload_3
     171: isub
     172: if_icmpne     207
     175: aload         5
     177: iconst_0
     178: aload_1
     179: iload_3
     180: iload_2
     181: iload_3
     182: isub
     183: invokevirtual #211                // Method java/lang/String.regionMatches:(ILjava/lang/String;II)Z
     186: ifeq          207
     189: aload_0
     190: invokevirtual #149                // Method getFirstChild:()Lcom/google/javascript/rhino/Node;
     193: aload_1
     194: iload_3
     195: iconst_1
     196: isub
     197: invokespecial #208                // Method matchesQualifiedName:(Ljava/lang/String;I)Z
     200: ifeq          207
     203: iconst_1
     204: goto          208
     207: iconst_0
     208: ireturn
     209: iconst_0
     210: ireturn

  public boolean matchesQualifiedName(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_1
       5: getfield      #48                 // Field type:I
       8: aload_0
       9: getfield      #48                 // Field type:I
      12: if_icmpeq     17
      15: iconst_0
      16: ireturn
      17: aload_0
      18: getfield      #48                 // Field type:I
      21: lookupswitch  { // 4
                    33: 98
                    38: 64
                    42: 94
                   161: 96
               default: 138
          }
      64: aload_0
      65: invokevirtual #128                // Method getString:()Ljava/lang/String;
      68: invokevirtual #201                // Method java/lang/String.isEmpty:()Z
      71: ifne          92
      74: aload_0
      75: invokevirtual #128                // Method getString:()Ljava/lang/String;
      78: aload_1
      79: invokevirtual #128                // Method getString:()Ljava/lang/String;
      82: invokevirtual #212                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      85: ifeq          92
      88: iconst_1
      89: goto          93
      92: iconst_0
      93: ireturn
      94: iconst_1
      95: ireturn
      96: iconst_1
      97: ireturn
      98: aload_0
      99: invokevirtual #82                 // Method getLastChild:()Lcom/google/javascript/rhino/Node;
     102: invokevirtual #128                // Method getString:()Ljava/lang/String;
     105: aload_1
     106: invokevirtual #82                 // Method getLastChild:()Lcom/google/javascript/rhino/Node;
     109: invokevirtual #128                // Method getString:()Ljava/lang/String;
     112: invokevirtual #212                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     115: ifeq          136
     118: aload_0
     119: invokevirtual #149                // Method getFirstChild:()Lcom/google/javascript/rhino/Node;
     122: aload_1
     123: invokevirtual #149                // Method getFirstChild:()Lcom/google/javascript/rhino/Node;
     126: invokevirtual #213                // Method matchesQualifiedName:(Lcom/google/javascript/rhino/Node;)Z
     129: ifeq          136
     132: iconst_1
     133: goto          137
     136: iconst_0
     137: ireturn
     138: iconst_0
     139: ireturn

  public boolean isUnscopedQualifiedName();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: lookupswitch  { // 2
                    33: 48
                    38: 32
               default: 56
          }
      32: aload_0
      33: invokevirtual #128                // Method getString:()Ljava/lang/String;
      36: invokevirtual #201                // Method java/lang/String.isEmpty:()Z
      39: ifne          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn
      48: aload_0
      49: invokevirtual #149                // Method getFirstChild:()Lcom/google/javascript/rhino/Node;
      52: invokevirtual #214                // Method isUnscopedQualifiedName:()Z
      55: ireturn
      56: iconst_0
      57: ireturn

  public boolean isValidAssignmentTarget();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: lookupswitch  { // 7
                    33: 72
                    35: 72
                    38: 72
                   155: 72
                   156: 72
                   157: 72
                   178: 72
               default: 74
          }
      72: iconst_1
      73: ireturn
      74: iconst_0
      75: ireturn

  public com.google.javascript.rhino.Node detachFromParent();
    Code:
       0: aload_0
       1: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #215                // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      19: aload_0
      20: invokevirtual #216                // Method removeChild:(Lcom/google/javascript/rhino/Node;)V
      23: aload_0
      24: areturn

  public com.google.javascript.rhino.Node removeFirstChild();
    Code:
       0: aload_0
       1: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
       4: astore_1
       5: aload_1
       6: ifnull        14
       9: aload_0
      10: aload_1
      11: invokevirtual #216                // Method removeChild:(Lcom/google/javascript/rhino/Node;)V
      14: aload_1
      15: areturn

  public com.google.javascript.rhino.Node removeChildren();
    Code:
       0: aload_0
       1: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
       4: astore_1
       5: aload_0
       6: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
       9: astore_2
      10: aload_2
      11: ifnull        27
      14: aload_2
      15: aconst_null
      16: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      19: aload_2
      20: invokevirtual #150                // Method getNext:()Lcom/google/javascript/rhino/Node;
      23: astore_2
      24: goto          10
      27: aload_0
      28: aconst_null
      29: putfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      32: aload_0
      33: aconst_null
      34: putfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      37: aload_1
      38: areturn

  public void detachChildren();
    Code:
       0: aload_0
       1: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
       4: astore_1
       5: aload_1
       6: ifnull        29
       9: aload_1
      10: invokevirtual #150                // Method getNext:()Lcom/google/javascript/rhino/Node;
      13: astore_2
      14: aload_1
      15: aconst_null
      16: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      19: aload_1
      20: aconst_null
      21: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      24: aload_2
      25: astore_1
      26: goto          5
      29: aload_0
      30: aconst_null
      31: putfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      34: aload_0
      35: aconst_null
      36: putfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      39: return

  public com.google.javascript.rhino.Node removeChildAfter(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: getfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
       4: aload_0
       5: if_acmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ldc           #90                 // String prev is not a child of this node.
      15: invokestatic  #52                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      18: aload_1
      19: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      22: ifnull        29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ldc           #217                // String no next sibling.
      32: invokestatic  #52                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      35: aload_1
      36: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      39: astore_2
      40: aload_1
      41: aload_2
      42: getfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      45: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      48: aload_2
      49: aload_0
      50: getfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      53: if_acmpne     61
      56: aload_0
      57: aload_1
      58: putfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      61: aload_2
      62: aconst_null
      63: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      66: aload_2
      67: aconst_null
      68: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      71: aload_2
      72: areturn

  public com.google.javascript.rhino.Node cloneNode();
    Code:
       0: aload_0
       1: invokespecial #218                // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #107                // class com/google/javascript/rhino/Node
       7: astore_1
       8: aload_1
       9: aconst_null
      10: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      13: aload_1
      14: aconst_null
      15: putfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      18: aload_1
      19: aconst_null
      20: putfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      23: aload_1
      24: aconst_null
      25: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      28: goto          44
      31: astore_2
      32: new           #78                 // class java/lang/RuntimeException
      35: dup
      36: aload_2
      37: invokevirtual #220                // Method java/lang/CloneNotSupportedException.getMessage:()Ljava/lang/String;
      40: invokespecial #80                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_1
      45: areturn
    Exception table:
       from    to  target type
           0    28    31   Class java/lang/CloneNotSupportedException

  public com.google.javascript.rhino.Node cloneTree();
    Code:
       0: aload_0
       1: invokevirtual #221                // Method cloneNode:()Lcom/google/javascript/rhino/Node;
       4: astore_1
       5: aload_0
       6: invokevirtual #149                // Method getFirstChild:()Lcom/google/javascript/rhino/Node;
       9: astore_2
      10: aload_2
      11: ifnull        64
      14: aload_2
      15: invokevirtual #222                // Method cloneTree:()Lcom/google/javascript/rhino/Node;
      18: astore_3
      19: aload_3
      20: aload_1
      21: putfield      #49                 // Field parent:Lcom/google/javascript/rhino/Node;
      24: aload_1
      25: getfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      28: ifnull        39
      31: aload_1
      32: getfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      35: aload_3
      36: putfield      #53                 // Field next:Lcom/google/javascript/rhino/Node;
      39: aload_1
      40: getfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      43: ifnonnull     51
      46: aload_1
      47: aload_3
      48: putfield      #56                 // Field first:Lcom/google/javascript/rhino/Node;
      51: aload_1
      52: aload_3
      53: putfield      #55                 // Field last:Lcom/google/javascript/rhino/Node;
      56: aload_2
      57: invokevirtual #150                // Method getNext:()Lcom/google/javascript/rhino/Node;
      60: astore_2
      61: goto          10
      64: aload_1
      65: areturn

  public com.google.javascript.rhino.Node copyInformationFrom(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: bipush        40
       3: invokevirtual #109                // Method getProp:(I)Ljava/lang/Object;
       6: ifnonnull     21
       9: aload_0
      10: bipush        40
      12: aload_1
      13: bipush        40
      15: invokevirtual #109                // Method getProp:(I)Ljava/lang/Object;
      18: invokevirtual #108                // Method putProp:(ILjava/lang/Object;)V
      21: aload_0
      22: bipush        51
      24: invokevirtual #109                // Method getProp:(I)Ljava/lang/Object;
      27: ifnonnull     50
      30: aload_0
      31: bipush        51
      33: aload_1
      34: bipush        51
      36: invokevirtual #109                // Method getProp:(I)Ljava/lang/Object;
      39: invokevirtual #108                // Method putProp:(ILjava/lang/Object;)V
      42: aload_0
      43: aload_1
      44: getfield      #50                 // Field sourcePosition:I
      47: putfield      #50                 // Field sourcePosition:I
      50: aload_0
      51: areturn

  public com.google.javascript.rhino.Node copyInformationFromForTree(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #89                 // Method copyInformationFrom:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
       5: pop
       6: aload_0
       7: invokevirtual #149                // Method getFirstChild:()Lcom/google/javascript/rhino/Node;
      10: astore_2
      11: aload_2
      12: ifnull        29
      15: aload_2
      16: aload_1
      17: invokevirtual #223                // Method copyInformationFromForTree:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      20: pop
      21: aload_2
      22: invokevirtual #150                // Method getNext:()Lcom/google/javascript/rhino/Node;
      25: astore_2
      26: goto          11
      29: aload_0
      30: areturn

  public com.google.javascript.rhino.Node useSourceInfoFrom(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: bipush        40
       3: aload_1
       4: bipush        40
       6: invokevirtual #109                // Method getProp:(I)Ljava/lang/Object;
       9: invokevirtual #108                // Method putProp:(ILjava/lang/Object;)V
      12: aload_0
      13: bipush        51
      15: aload_1
      16: bipush        51
      18: invokevirtual #109                // Method getProp:(I)Ljava/lang/Object;
      21: invokevirtual #108                // Method putProp:(ILjava/lang/Object;)V
      24: aload_0
      25: aload_1
      26: getfield      #50                 // Field sourcePosition:I
      29: putfield      #50                 // Field sourcePosition:I
      32: aload_0
      33: areturn

  public com.google.javascript.rhino.Node srcref(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #224                // Method useSourceInfoFrom:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
       5: areturn

  public com.google.javascript.rhino.Node useSourceInfoFromForTree(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #224                // Method useSourceInfoFrom:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
       5: pop
       6: aload_0
       7: invokevirtual #149                // Method getFirstChild:()Lcom/google/javascript/rhino/Node;
      10: astore_2
      11: aload_2
      12: ifnull        29
      15: aload_2
      16: aload_1
      17: invokevirtual #225                // Method useSourceInfoFromForTree:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      20: pop
      21: aload_2
      22: invokevirtual #150                // Method getNext:()Lcom/google/javascript/rhino/Node;
      25: astore_2
      26: goto          11
      29: aload_0
      30: areturn

  public com.google.javascript.rhino.Node srcrefTree(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #225                // Method useSourceInfoFromForTree:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
       5: areturn

  public com.google.javascript.rhino.Node useSourceInfoIfMissingFrom(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: bipush        40
       3: invokevirtual #109                // Method getProp:(I)Ljava/lang/Object;
       6: ifnonnull     21
       9: aload_0
      10: bipush        40
      12: aload_1
      13: bipush        40
      15: invokevirtual #109                // Method getProp:(I)Ljava/lang/Object;
      18: invokevirtual #108                // Method putProp:(ILjava/lang/Object;)V
      21: aload_0
      22: bipush        51
      24: invokevirtual #109                // Method getProp:(I)Ljava/lang/Object;
      27: ifnonnull     50
      30: aload_0
      31: bipush        51
      33: aload_1
      34: bipush        51
      36: invokevirtual #109                // Method getProp:(I)Ljava/lang/Object;
      39: invokevirtual #108                // Method putProp:(ILjava/lang/Object;)V
      42: aload_0
      43: aload_1
      44: getfield      #50                 // Field sourcePosition:I
      47: putfield      #50                 // Field sourcePosition:I
      50: aload_0
      51: areturn

  public com.google.javascript.rhino.Node useSourceInfoIfMissingFromForTree(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #226                // Method useSourceInfoIfMissingFrom:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
       5: pop
       6: aload_0
       7: invokevirtual #149                // Method getFirstChild:()Lcom/google/javascript/rhino/Node;
      10: astore_2
      11: aload_2
      12: ifnull        29
      15: aload_2
      16: aload_1
      17: invokevirtual #227                // Method useSourceInfoIfMissingFromForTree:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      20: pop
      21: aload_2
      22: invokevirtual #150                // Method getNext:()Lcom/google/javascript/rhino/Node;
      25: astore_2
      26: goto          11
      29: aload_0
      30: areturn

  public com.google.javascript.rhino.jstype.JSType getJSType();
    Code:
       0: aload_0
       1: getfield      #138                // Field typei:Lcom/google/javascript/rhino/TypeI;
       4: checkcast     #195                // class com/google/javascript/rhino/jstype/JSType
       7: areturn

  public void setJSType(com.google.javascript.rhino.jstype.JSType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #138                // Field typei:Lcom/google/javascript/rhino/TypeI;
       5: return

  public com.google.javascript.rhino.TypeI getTypeI();
    Code:
       0: aload_0
       1: getfield      #138                // Field typei:Lcom/google/javascript/rhino/TypeI;
       4: areturn

  public void setTypeI(com.google.javascript.rhino.TypeI);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #138                // Field typei:Lcom/google/javascript/rhino/TypeI;
       5: return

  public com.google.javascript.rhino.Node$FileLevelJsDocBuilder getJsDocBuilderForNode();
    Code:
       0: new           #228                // class com/google/javascript/rhino/Node$FileLevelJsDocBuilder
       3: dup
       4: aload_0
       5: invokespecial #229                // Method com/google/javascript/rhino/Node$FileLevelJsDocBuilder."<init>":(Lcom/google/javascript/rhino/Node;)V
       8: areturn

  public com.google.javascript.rhino.JSDocInfo getJSDocInfo();
    Code:
       0: aload_0
       1: bipush        29
       3: invokevirtual #109                // Method getProp:(I)Ljava/lang/Object;
       6: checkcast     #230                // class com/google/javascript/rhino/JSDocInfo
       9: areturn

  public com.google.javascript.rhino.Node setJSDocInfo(com.google.javascript.rhino.JSDocInfo);
    Code:
       0: aload_0
       1: bipush        29
       3: aload_1
       4: invokevirtual #108                // Method putProp:(ILjava/lang/Object;)V
       7: aload_0
       8: areturn

  public void setChangeTime(int);
    Code:
       0: aload_0
       1: bipush        56
       3: iload_1
       4: invokevirtual #105                // Method putIntProp:(II)V
       7: return

  public int getChangeTime();
    Code:
       0: aload_0
       1: bipush        56
       3: invokevirtual #100                // Method getIntProp:(I)I
       6: ireturn

  public void setVarArgs(boolean);
    Code:
       0: aload_0
       1: bipush        30
       3: iload_1
       4: invokevirtual #231                // Method putBooleanProp:(IZ)V
       7: return

  public boolean isVarArgs();
    Code:
       0: aload_0
       1: bipush        30
       3: invokevirtual #199                // Method getBooleanProp:(I)Z
       6: ireturn

  public void setOptionalArg(boolean);
    Code:
       0: aload_0
       1: bipush        37
       3: iload_1
       4: invokevirtual #231                // Method putBooleanProp:(IZ)V
       7: return

  public boolean isOptionalArg();
    Code:
       0: aload_0
       1: bipush        37
       3: invokevirtual #199                // Method getBooleanProp:(I)Z
       6: ireturn

  public void setIsSyntheticBlock(boolean);
    Code:
       0: aload_0
       1: bipush        38
       3: iload_1
       4: invokevirtual #231                // Method putBooleanProp:(IZ)V
       7: return

  public boolean isSyntheticBlock();
    Code:
       0: aload_0
       1: bipush        38
       3: invokevirtual #199                // Method getBooleanProp:(I)Z
       6: ireturn

  public void setDirectives(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: bipush        48
       3: aload_1
       4: invokevirtual #108                // Method putProp:(ILjava/lang/Object;)V
       7: return

  public java.util.Set<java.lang.String> getDirectives();
    Code:
       0: aload_0
       1: bipush        48
       3: invokevirtual #109                // Method getProp:(I)Ljava/lang/Object;
       6: checkcast     #232                // class java/util/Set
       9: areturn

  public void addSuppression(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #179                // Method getJSDocInfo:()Lcom/google/javascript/rhino/JSDocInfo;
       4: ifnonnull     20
       7: aload_0
       8: new           #230                // class com/google/javascript/rhino/JSDocInfo
      11: dup
      12: iconst_0
      13: invokespecial #233                // Method com/google/javascript/rhino/JSDocInfo."<init>":(Z)V
      16: invokevirtual #234                // Method setJSDocInfo:(Lcom/google/javascript/rhino/JSDocInfo;)Lcom/google/javascript/rhino/Node;
      19: pop
      20: aload_0
      21: invokevirtual #179                // Method getJSDocInfo:()Lcom/google/javascript/rhino/JSDocInfo;
      24: aload_1
      25: invokevirtual #235                // Method com/google/javascript/rhino/JSDocInfo.addSuppression:(Ljava/lang/String;)V
      28: return

  public void setIsAddedBlock(boolean);
    Code:
       0: aload_0
       1: bipush        39
       3: iload_1
       4: invokevirtual #231                // Method putBooleanProp:(IZ)V
       7: return

  public boolean isAddedBlock();
    Code:
       0: aload_0
       1: bipush        39
       3: invokevirtual #199                // Method getBooleanProp:(I)Z
       6: ireturn

  public void setStaticMember(boolean);
    Code:
       0: aload_0
       1: bipush        58
       3: iload_1
       4: invokevirtual #231                // Method putBooleanProp:(IZ)V
       7: return

  public boolean isStaticMember();
    Code:
       0: aload_0
       1: bipush        58
       3: invokevirtual #199                // Method getBooleanProp:(I)Z
       6: ireturn

  public void setIsGeneratorFunction(boolean);
    Code:
       0: aload_0
       1: bipush        59
       3: iload_1
       4: invokevirtual #231                // Method putBooleanProp:(IZ)V
       7: return

  public boolean isGeneratorFunction();
    Code:
       0: aload_0
       1: bipush        59
       3: invokevirtual #199                // Method getBooleanProp:(I)Z
       6: ireturn

  public void setGeneratorMarker(boolean);
    Code:
       0: aload_0
       1: bipush        65
       3: iload_1
       4: invokevirtual #231                // Method putBooleanProp:(IZ)V
       7: return

  public boolean isGeneratorMarker();
    Code:
       0: aload_0
       1: bipush        65
       3: invokevirtual #199                // Method getBooleanProp:(I)Z
       6: ireturn

  public void setGeneratorSafe(boolean);
    Code:
       0: aload_0
       1: bipush        66
       3: iload_1
       4: invokevirtual #231                // Method putBooleanProp:(IZ)V
       7: return

  public boolean isGeneratorSafe();
    Code:
       0: aload_0
       1: bipush        66
       3: invokevirtual #199                // Method getBooleanProp:(I)Z
       6: ireturn

  public void setIsArrowFunction(boolean);
    Code:
       0: aload_0
       1: bipush        60
       3: iload_1
       4: invokevirtual #231                // Method putBooleanProp:(IZ)V
       7: return

  public boolean isArrowFunction();
    Code:
       0: aload_0
       1: bipush        60
       3: invokevirtual #199                // Method getBooleanProp:(I)Z
       6: ireturn

  public void setYieldFor(boolean);
    Code:
       0: aload_0
       1: bipush        61
       3: iload_1
       4: invokevirtual #231                // Method putBooleanProp:(IZ)V
       7: return

  public boolean isYieldFor();
    Code:
       0: aload_0
       1: bipush        61
       3: invokevirtual #199                // Method getBooleanProp:(I)Z
       6: ireturn

  public void setSideEffectFlags(int);
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        37
       6: if_icmpeq     18
       9: aload_0
      10: invokevirtual #116                // Method getType:()I
      13: bipush        30
      15: if_icmpne     22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ldc           #236                // String setIsNoSideEffectsCall only supports CALL and NEW nodes, got %s
      25: iconst_1
      26: anewarray     #237                // class java/lang/Object
      29: dup
      30: iconst_0
      31: aload_0
      32: invokevirtual #116                // Method getType:()I
      35: invokestatic  #126                // Method com/google/javascript/rhino/Token.name:(I)Ljava/lang/String;
      38: aastore
      39: invokestatic  #238                // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      42: aload_0
      43: bipush        42
      45: iload_1
      46: invokevirtual #105                // Method putIntProp:(II)V
      49: return

  public void setSideEffectFlags(com.google.javascript.rhino.Node$SideEffectFlags);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #239                // Method com/google/javascript/rhino/Node$SideEffectFlags.valueOf:()I
       5: invokevirtual #240                // Method setSideEffectFlags:(I)V
       8: return

  public int getSideEffectFlags();
    Code:
       0: aload_0
       1: bipush        42
       3: invokevirtual #100                // Method getIntProp:(I)I
       6: ireturn

  public boolean isOnlyModifiesThisCall();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #241                // Method getSideEffectFlags:()I
       5: bipush        15
       7: iand
       8: bipush        13
      10: invokespecial #242                // Method areBitFlagsSet:(II)Z
      13: ireturn

  public boolean isOnlyModifiesArgumentsCall();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #241                // Method getSideEffectFlags:()I
       5: bipush        15
       7: iand
       8: bipush        11
      10: invokespecial #242                // Method areBitFlagsSet:(II)Z
      13: ireturn

  public boolean isNoSideEffectsCall();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #241                // Method getSideEffectFlags:()I
       5: bipush        15
       7: invokespecial #242                // Method areBitFlagsSet:(II)Z
      10: ireturn

  public boolean isLocalResultCall();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #241                // Method getSideEffectFlags:()I
       5: bipush        16
       7: invokespecial #242                // Method areBitFlagsSet:(II)Z
      10: ireturn

  public boolean mayMutateArguments();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #241                // Method getSideEffectFlags:()I
       5: iconst_4
       6: invokespecial #242                // Method areBitFlagsSet:(II)Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public boolean mayMutateGlobalStateOrThrow();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #241                // Method getSideEffectFlags:()I
       5: bipush        9
       7: invokespecial #242                // Method areBitFlagsSet:(II)Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  private boolean areBitFlagsSet(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: iand
       3: iload_2
       4: if_icmpne     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isQuotedString();
    Code:
       0: iconst_0
       1: ireturn

  public void setQuotedString();
    Code:
       0: new           #39                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #243                // String not a StringNode
       6: invokespecial #46                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean isAdd();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        21
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isAnd();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        101
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isArrayLit();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        63
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isArrayPattern();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        156
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isAssign();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        86
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isAssignAdd();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        93
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isBlock();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        125
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isBreak();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        116
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isCall();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        37
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isCase();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        111
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isCast();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        155
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isCatch();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        120
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isClass();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        158
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isClassMembers();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        159
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isComma();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        85
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isComputedProp();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        175
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isContinue();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        117
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isConst();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        149
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isDebugger();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        152
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isDec();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        103
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isDefaultCase();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        112
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isDefaultValue();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        178
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isDelProp();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        31
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isDestructuringPattern();
    Code:
       0: aload_0
       1: invokevirtual #244                // Method isObjectPattern:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #245                // Method isArrayPattern:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean isDo();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        114
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        124
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isExport();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        169
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isExprResult();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        130
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isFalse();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        43
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isFor();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        115
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isForOf();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        163
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isFunction();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        105
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isGetterDef();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        147
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isGetElem();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        35
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isGetProp();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        33
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isHook();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        98
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isIf();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        108
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isImport();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        165
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isIn();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        51
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isInc();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        102
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isInstanceOf();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        52
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isLabel();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        126
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isLabelName();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        153
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isLet();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        162
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isMemberDef();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        160
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isName();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        38
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isNE();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        13
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isNew();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        30
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isNot();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        26
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isNull();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        41
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isNumber();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        39
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isObjectLit();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        64
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isObjectPattern();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        157
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isOr();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        100
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isParamList();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        83
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isRegExp();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        47
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isRest();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        173
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isReturn();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: iconst_4
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isScript();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        132
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isSetterDef();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        148
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isSpread();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        174
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isString();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        40
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isStringKey();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        154
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isSuper();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        161
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isSwitch();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        110
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isThis();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        42
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isThrow();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        49
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isTrue();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        44
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isTry();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        77
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isTypeOf();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        32
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isVar();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        118
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isVoid();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        122
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isWhile();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        113
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isWith();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: bipush        119
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isYield();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getType:()I
       4: sipush        164
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn
}
