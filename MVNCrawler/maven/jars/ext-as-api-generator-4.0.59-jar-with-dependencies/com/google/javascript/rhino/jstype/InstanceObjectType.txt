Compiled from "InstanceObjectType.java"
class com.google.javascript.rhino.jstype.InstanceObjectType extends com.google.javascript.rhino.jstype.PrototypeObjectType {
  private static final long serialVersionUID;

  private final com.google.javascript.rhino.jstype.FunctionType constructor;

  com.google.javascript.rhino.jstype.InstanceObjectType(com.google.javascript.rhino.jstype.JSTypeRegistry, com.google.javascript.rhino.jstype.FunctionType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokespecial #1                  // Method "<init>":(Lcom/google/javascript/rhino/jstype/JSTypeRegistry;Lcom/google/javascript/rhino/jstype/FunctionType;Z)V
       7: return

  com.google.javascript.rhino.jstype.InstanceObjectType(com.google.javascript.rhino.jstype.JSTypeRegistry, com.google.javascript.rhino.jstype.FunctionType, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: iload_3
       5: aload_2
       6: invokevirtual #2                  // Method com/google/javascript/rhino/jstype/FunctionType.getTemplateTypeMap:()Lcom/google/javascript/rhino/jstype/TemplateTypeMap;
       9: invokespecial #3                  // Method com/google/javascript/rhino/jstype/PrototypeObjectType."<init>":(Lcom/google/javascript/rhino/jstype/JSTypeRegistry;Ljava/lang/String;Lcom/google/javascript/rhino/jstype/ObjectType;ZLcom/google/javascript/rhino/jstype/TemplateTypeMap;)V
      12: aload_2
      13: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: aload_0
      18: aload_2
      19: putfield      #5                  // Field constructor:Lcom/google/javascript/rhino/jstype/FunctionType;
      22: return

  public java.lang.String getReferenceName();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getConstructor:()Lcom/google/javascript/rhino/jstype/FunctionType;
       4: invokevirtual #7                  // Method com/google/javascript/rhino/jstype/FunctionType.getReferenceName:()Ljava/lang/String;
       7: areturn

  public boolean hasReferenceName();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getConstructor:()Lcom/google/javascript/rhino/jstype/FunctionType;
       4: invokevirtual #8                  // Method com/google/javascript/rhino/jstype/FunctionType.hasReferenceName:()Z
       7: ireturn

  public com.google.javascript.rhino.jstype.ObjectType getImplicitPrototype();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getConstructor:()Lcom/google/javascript/rhino/jstype/FunctionType;
       4: invokevirtual #9                  // Method com/google/javascript/rhino/jstype/FunctionType.getPrototype:()Lcom/google/javascript/rhino/jstype/ObjectType;
       7: areturn

  public com.google.javascript.rhino.jstype.FunctionType getConstructor();
    Code:
       0: aload_0
       1: getfield      #5                  // Field constructor:Lcom/google/javascript/rhino/jstype/FunctionType;
       4: areturn

  boolean defineProperty(java.lang.String, com.google.javascript.rhino.jstype.JSType, boolean, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getImplicitPrototype:()Lcom/google/javascript/rhino/jstype/ObjectType;
       4: astore        5
       6: aload         5
       8: ifnull        22
      11: aload         5
      13: aload_1
      14: invokevirtual #11                 // Method com/google/javascript/rhino/jstype/ObjectType.hasOwnDeclaredProperty:(Ljava/lang/String;)Z
      17: ifeq          22
      20: iconst_0
      21: ireturn
      22: aload_0
      23: aload_1
      24: aload_2
      25: iload_3
      26: aload         4
      28: invokespecial #12                 // Method com/google/javascript/rhino/jstype/PrototypeObjectType.defineProperty:(Ljava/lang/String;Lcom/google/javascript/rhino/jstype/JSType;ZLcom/google/javascript/rhino/Node;)Z
      31: ireturn

  java.lang.String toStringHelper(boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field constructor:Lcom/google/javascript/rhino/jstype/FunctionType;
       4: invokevirtual #8                  // Method com/google/javascript/rhino/jstype/FunctionType.hasReferenceName:()Z
       7: ifeq          18
      10: aload_0
      11: getfield      #5                  // Field constructor:Lcom/google/javascript/rhino/jstype/FunctionType;
      14: invokevirtual #7                  // Method com/google/javascript/rhino/jstype/FunctionType.getReferenceName:()Ljava/lang/String;
      17: areturn
      18: aload_0
      19: iload_1
      20: invokespecial #13                 // Method com/google/javascript/rhino/jstype/PrototypeObjectType.toStringHelper:(Z)Ljava/lang/String;
      23: areturn

  boolean isTheObjectType();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getConstructor:()Lcom/google/javascript/rhino/jstype/FunctionType;
       4: invokevirtual #14                 // Method com/google/javascript/rhino/jstype/FunctionType.isNativeObjectType:()Z
       7: ifeq          26
      10: ldc           #15                 // String Object
      12: aload_0
      13: invokevirtual #16                 // Method getReferenceName:()Ljava/lang/String;
      16: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isInstanceType();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isArrayType();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getConstructor:()Lcom/google/javascript/rhino/jstype/FunctionType;
       4: invokevirtual #14                 // Method com/google/javascript/rhino/jstype/FunctionType.isNativeObjectType:()Z
       7: ifeq          26
      10: ldc           #18                 // String Array
      12: aload_0
      13: invokevirtual #16                 // Method getReferenceName:()Ljava/lang/String;
      16: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isStringObjectType();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getConstructor:()Lcom/google/javascript/rhino/jstype/FunctionType;
       4: invokevirtual #14                 // Method com/google/javascript/rhino/jstype/FunctionType.isNativeObjectType:()Z
       7: ifeq          26
      10: ldc           #19                 // String String
      12: aload_0
      13: invokevirtual #16                 // Method getReferenceName:()Ljava/lang/String;
      16: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isBooleanObjectType();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getConstructor:()Lcom/google/javascript/rhino/jstype/FunctionType;
       4: invokevirtual #14                 // Method com/google/javascript/rhino/jstype/FunctionType.isNativeObjectType:()Z
       7: ifeq          26
      10: ldc           #20                 // String Boolean
      12: aload_0
      13: invokevirtual #16                 // Method getReferenceName:()Ljava/lang/String;
      16: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isNumberObjectType();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getConstructor:()Lcom/google/javascript/rhino/jstype/FunctionType;
       4: invokevirtual #14                 // Method com/google/javascript/rhino/jstype/FunctionType.isNativeObjectType:()Z
       7: ifeq          26
      10: ldc           #21                 // String Number
      12: aload_0
      13: invokevirtual #16                 // Method getReferenceName:()Ljava/lang/String;
      16: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isDateType();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getConstructor:()Lcom/google/javascript/rhino/jstype/FunctionType;
       4: invokevirtual #14                 // Method com/google/javascript/rhino/jstype/FunctionType.isNativeObjectType:()Z
       7: ifeq          26
      10: ldc           #22                 // String Date
      12: aload_0
      13: invokevirtual #16                 // Method getReferenceName:()Ljava/lang/String;
      16: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isRegexpType();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getConstructor:()Lcom/google/javascript/rhino/jstype/FunctionType;
       4: invokevirtual #14                 // Method com/google/javascript/rhino/jstype/FunctionType.isNativeObjectType:()Z
       7: ifeq          26
      10: ldc           #23                 // String RegExp
      12: aload_0
      13: invokevirtual #16                 // Method getReferenceName:()Ljava/lang/String;
      16: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isNominalType();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method hasReferenceName:()Z
       4: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method hasReferenceName:()Z
       4: ifeq          15
       7: aload_0
       8: invokevirtual #16                 // Method getReferenceName:()Ljava/lang/String;
      11: invokevirtual #25                 // Method java/lang/String.hashCode:()I
      14: ireturn
      15: aload_0
      16: invokespecial #26                 // Method com/google/javascript/rhino/jstype/PrototypeObjectType.hashCode:()I
      19: ireturn

  public java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> getCtorImplementedInterfaces();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getConstructor:()Lcom/google/javascript/rhino/jstype/FunctionType;
       4: invokevirtual #27                 // Method com/google/javascript/rhino/jstype/FunctionType.getImplementedInterfaces:()Ljava/lang/Iterable;
       7: areturn

  public java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> getCtorExtendedInterfaces();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getConstructor:()Lcom/google/javascript/rhino/jstype/FunctionType;
       4: invokevirtual #28                 // Method com/google/javascript/rhino/jstype/FunctionType.getExtendedInterfaces:()Ljava/lang/Iterable;
       7: areturn
}
