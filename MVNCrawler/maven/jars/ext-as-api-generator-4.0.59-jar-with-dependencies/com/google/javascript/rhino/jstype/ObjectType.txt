Compiled from "ObjectType.java"
public abstract class com.google.javascript.rhino.jstype.ObjectType extends com.google.javascript.rhino.jstype.JSType implements com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType> {
  private boolean visited;

  private com.google.javascript.rhino.JSDocInfo docInfo;

  private boolean unknown;

  com.google.javascript.rhino.jstype.ObjectType(com.google.javascript.rhino.jstype.JSTypeRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method com/google/javascript/rhino/jstype/JSType."<init>":(Lcom/google/javascript/rhino/jstype/JSTypeRegistry;)V
       5: aload_0
       6: aconst_null
       7: putfield      #2                  // Field docInfo:Lcom/google/javascript/rhino/JSDocInfo;
      10: aload_0
      11: iconst_1
      12: putfield      #3                  // Field unknown:Z
      15: return

  com.google.javascript.rhino.jstype.ObjectType(com.google.javascript.rhino.jstype.JSTypeRegistry, com.google.javascript.rhino.jstype.TemplateTypeMap);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #4                  // Method com/google/javascript/rhino/jstype/JSType."<init>":(Lcom/google/javascript/rhino/jstype/JSTypeRegistry;Lcom/google/javascript/rhino/jstype/TemplateTypeMap;)V
       6: aload_0
       7: aconst_null
       8: putfield      #2                  // Field docInfo:Lcom/google/javascript/rhino/JSDocInfo;
      11: aload_0
      12: iconst_1
      13: putfield      #3                  // Field unknown:Z
      16: return

  public com.google.javascript.rhino.Node getRootNode();
    Code:
       0: aconst_null
       1: areturn

  public com.google.javascript.rhino.jstype.ObjectType getParentScope();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getImplicitPrototype:()Lcom/google/javascript/rhino/jstype/ObjectType;
       4: areturn

  com.google.javascript.rhino.jstype.PropertyMap getPropertyMap();
    Code:
       0: invokestatic  #6                  // Method com/google/javascript/rhino/jstype/PropertyMap.immutableEmptyMap:()Lcom/google/javascript/rhino/jstype/PropertyMap;
       3: areturn

  public com.google.javascript.rhino.jstype.Property getSlot(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getPropertyMap:()Lcom/google/javascript/rhino/jstype/PropertyMap;
       4: aload_1
       5: invokevirtual #8                  // Method com/google/javascript/rhino/jstype/PropertyMap.getSlot:(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/Property;
       8: areturn

  public com.google.javascript.rhino.jstype.Property getOwnSlot(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getPropertyMap:()Lcom/google/javascript/rhino/jstype/PropertyMap;
       4: aload_1
       5: invokevirtual #9                  // Method com/google/javascript/rhino/jstype/PropertyMap.getOwnProperty:(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/Property;
       8: areturn

  public com.google.javascript.rhino.jstype.JSType getTypeOfThis();
    Code:
       0: aconst_null
       1: areturn

  public com.google.common.collect.ImmutableList<com.google.javascript.rhino.jstype.JSType> getTemplateTypes();
    Code:
       0: aconst_null
       1: areturn

  public com.google.javascript.rhino.JSDocInfo getJSDocInfo();
    Code:
       0: aload_0
       1: getfield      #2                  // Field docInfo:Lcom/google/javascript/rhino/JSDocInfo;
       4: areturn

  public void setJSDocInfo(com.google.javascript.rhino.JSDocInfo);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field docInfo:Lcom/google/javascript/rhino/JSDocInfo;
       5: return

  final boolean detectImplicitPrototypeCycle();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #10                 // Field visited:Z
       5: aload_0
       6: invokevirtual #5                  // Method getImplicitPrototype:()Lcom/google/javascript/rhino/jstype/ObjectType;
       9: astore_1
      10: aload_1
      11: ifnull        36
      14: aload_1
      15: getfield      #10                 // Field visited:Z
      18: ifeq          23
      21: iconst_1
      22: ireturn
      23: aload_1
      24: iconst_1
      25: putfield      #10                 // Field visited:Z
      28: aload_1
      29: invokevirtual #5                  // Method getImplicitPrototype:()Lcom/google/javascript/rhino/jstype/ObjectType;
      32: astore_1
      33: goto          10
      36: aload_0
      37: astore_1
      38: aload_1
      39: iconst_0
      40: putfield      #10                 // Field visited:Z
      43: aload_1
      44: invokevirtual #5                  // Method getImplicitPrototype:()Lcom/google/javascript/rhino/jstype/ObjectType;
      47: astore_1
      48: aload_1
      49: ifnonnull     38
      52: iconst_0
      53: ireturn

  final boolean detectInheritanceCycle();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method detectImplicitPrototypeCycle:()Z
       4: ifne          29
       7: aload_0
       8: invokevirtual #12                 // Method getCtorImplementedInterfaces:()Ljava/lang/Iterable;
      11: aload_0
      12: invokestatic  #13                 // Method com/google/common/collect/Iterables.contains:(Ljava/lang/Iterable;Ljava/lang/Object;)Z
      15: ifne          29
      18: aload_0
      19: invokevirtual #14                 // Method getCtorExtendedInterfaces:()Ljava/lang/Iterable;
      22: aload_0
      23: invokestatic  #13                 // Method com/google/common/collect/Iterables.contains:(Ljava/lang/Iterable;Ljava/lang/Object;)Z
      26: ifeq          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  public abstract java.lang.String getReferenceName();

  public java.lang.String getNormalizedReferenceName();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getReferenceName:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnull        28
       9: aload_1
      10: bipush        40
      12: invokevirtual #16                 // Method java/lang/String.indexOf:(I)I
      15: istore_2
      16: iload_2
      17: iconst_m1
      18: if_icmpeq     28
      21: aload_1
      22: iconst_0
      23: iload_2
      24: invokevirtual #17                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      27: areturn
      28: aload_1
      29: areturn

  public java.lang.String getDisplayName();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getNormalizedReferenceName:()Ljava/lang/String;
       4: areturn

  public static java.lang.String createDelegateSuffix(java.lang.String);
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #21                 // String (
       9: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #23                 // String )
      18: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: areturn

  public boolean hasReferenceName();
    Code:
       0: iconst_0
       1: ireturn

  public com.google.javascript.rhino.jstype.TernaryValue testForEquality(com.google.javascript.rhino.jstype.JSType);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method com/google/javascript/rhino/jstype/JSType.testForEquality:(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;
       5: astore_2
       6: aload_2
       7: ifnull        12
      10: aload_2
      11: areturn
      12: aload_1
      13: aload_0
      14: getstatic     #26                 // Field com/google/javascript/rhino/jstype/JSTypeNative.OBJECT_NUMBER_STRING_BOOLEAN:Lcom/google/javascript/rhino/jstype/JSTypeNative;
      17: invokevirtual #27                 // Method getNativeType:(Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/JSType;
      20: invokevirtual #28                 // Method com/google/javascript/rhino/jstype/JSType.isSubtype:(Lcom/google/javascript/rhino/jstype/JSType;)Z
      23: ifeq          30
      26: getstatic     #29                 // Field com/google/javascript/rhino/jstype/TernaryValue.UNKNOWN:Lcom/google/javascript/rhino/jstype/TernaryValue;
      29: areturn
      30: getstatic     #30                 // Field com/google/javascript/rhino/jstype/TernaryValue.FALSE:Lcom/google/javascript/rhino/jstype/TernaryValue;
      33: areturn

  public abstract com.google.javascript.rhino.jstype.FunctionType getConstructor();

  public abstract com.google.javascript.rhino.jstype.ObjectType getImplicitPrototype();

  public final boolean defineDeclaredProperty(java.lang.String, com.google.javascript.rhino.jstype.JSType, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: aload_3
       5: invokevirtual #31                 // Method defineProperty:(Ljava/lang/String;Lcom/google/javascript/rhino/jstype/JSType;ZLcom/google/javascript/rhino/Node;)Z
       8: istore        4
      10: aload_0
      11: getfield      #32                 // Field registry:Lcom/google/javascript/rhino/jstype/JSTypeRegistry;
      14: aload_1
      15: aload_0
      16: invokevirtual #33                 // Method com/google/javascript/rhino/jstype/JSTypeRegistry.registerPropertyOnType:(Ljava/lang/String;Lcom/google/javascript/rhino/jstype/JSType;)V
      19: iload         4
      21: ireturn

  public final boolean defineSynthesizedProperty(java.lang.String, com.google.javascript.rhino.jstype.JSType, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: aload_3
       5: invokevirtual #31                 // Method defineProperty:(Ljava/lang/String;Lcom/google/javascript/rhino/jstype/JSType;ZLcom/google/javascript/rhino/Node;)Z
       8: ireturn

  public final boolean defineInferredProperty(java.lang.String, com.google.javascript.rhino.jstype.JSType, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method hasProperty:(Ljava/lang/String;)Z
       5: ifeq          41
       8: aload_0
       9: aload_1
      10: invokevirtual #35                 // Method isPropertyTypeDeclared:(Ljava/lang/String;)Z
      13: ifeq          18
      16: iconst_1
      17: ireturn
      18: aload_0
      19: aload_1
      20: invokevirtual #36                 // Method getPropertyType:(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/JSType;
      23: astore        4
      25: aload         4
      27: ifnonnull     34
      30: aload_2
      31: goto          40
      34: aload         4
      36: aload_2
      37: invokevirtual #37                 // Method com/google/javascript/rhino/jstype/JSType.getLeastSupertype:(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;
      40: astore_2
      41: aload_0
      42: aload_1
      43: aload_2
      44: iconst_1
      45: aload_3
      46: invokevirtual #31                 // Method defineProperty:(Ljava/lang/String;Lcom/google/javascript/rhino/jstype/JSType;ZLcom/google/javascript/rhino/Node;)Z
      49: istore        4
      51: aload_0
      52: getfield      #32                 // Field registry:Lcom/google/javascript/rhino/jstype/JSTypeRegistry;
      55: aload_1
      56: aload_0
      57: invokevirtual #33                 // Method com/google/javascript/rhino/jstype/JSTypeRegistry.registerPropertyOnType:(Ljava/lang/String;Lcom/google/javascript/rhino/jstype/JSType;)V
      60: iload         4
      62: ireturn

  abstract boolean defineProperty(java.lang.String, com.google.javascript.rhino.jstype.JSType, boolean, com.google.javascript.rhino.Node);

  public boolean removeProperty(java.lang.String);
    Code:
       0: iconst_0
       1: ireturn

  public com.google.javascript.rhino.Node getPropertyNode(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method getSlot:(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/Property;
       5: astore_2
       6: aload_2
       7: ifnonnull     14
      10: aconst_null
      11: goto          18
      14: aload_2
      15: invokevirtual #39                 // Method com/google/javascript/rhino/jstype/Property.getNode:()Lcom/google/javascript/rhino/Node;
      18: areturn

  public com.google.javascript.rhino.JSDocInfo getOwnPropertyJSDocInfo(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method getOwnSlot:(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/Property;
       5: astore_2
       6: aload_2
       7: ifnonnull     14
      10: aconst_null
      11: goto          18
      14: aload_2
      15: invokevirtual #41                 // Method com/google/javascript/rhino/jstype/Property.getJSDocInfo:()Lcom/google/javascript/rhino/JSDocInfo;
      18: areturn

  public void setPropertyJSDocInfo(java.lang.String, com.google.javascript.rhino.JSDocInfo);
    Code:
       0: return

  public com.google.javascript.rhino.jstype.JSType findPropertyType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #34                 // Method hasProperty:(Ljava/lang/String;)Z
       5: ifeq          16
       8: aload_0
       9: aload_1
      10: invokevirtual #36                 // Method getPropertyType:(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/JSType;
      13: goto          17
      16: aconst_null
      17: areturn

  public com.google.javascript.rhino.jstype.JSType getPropertyType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method getSlot:(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/Property;
       5: astore_2
       6: aload_2
       7: ifnonnull     55
      10: aload_0
      11: invokevirtual #42                 // Method isNoResolvedType:()Z
      14: ifne          24
      17: aload_0
      18: invokevirtual #43                 // Method isCheckedUnknownType:()Z
      21: ifeq          32
      24: aload_0
      25: getstatic     #44                 // Field com/google/javascript/rhino/jstype/JSTypeNative.CHECKED_UNKNOWN_TYPE:Lcom/google/javascript/rhino/jstype/JSTypeNative;
      28: invokevirtual #27                 // Method getNativeType:(Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/JSType;
      31: areturn
      32: aload_0
      33: invokevirtual #45                 // Method isEmptyType:()Z
      36: ifeq          47
      39: aload_0
      40: getstatic     #46                 // Field com/google/javascript/rhino/jstype/JSTypeNative.NO_TYPE:Lcom/google/javascript/rhino/jstype/JSTypeNative;
      43: invokevirtual #27                 // Method getNativeType:(Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/JSType;
      46: areturn
      47: aload_0
      48: getstatic     #47                 // Field com/google/javascript/rhino/jstype/JSTypeNative.UNKNOWN_TYPE:Lcom/google/javascript/rhino/jstype/JSTypeNative;
      51: invokevirtual #27                 // Method getNativeType:(Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/JSType;
      54: areturn
      55: aload_2
      56: invokeinterface #48,  1           // InterfaceMethod com/google/javascript/rhino/jstype/StaticSlot.getType:()Ljava/lang/Object;
      61: checkcast     #49                 // class com/google/javascript/rhino/jstype/JSType
      64: areturn

  public boolean hasProperty(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method isEmptyType:()Z
       4: ifne          22
       7: aload_0
       8: invokevirtual #50                 // Method isUnknownType:()Z
      11: ifne          22
      14: aload_0
      15: aload_1
      16: invokevirtual #38                 // Method getSlot:(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/Property;
      19: ifnull        26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean hasOwnProperty(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method getOwnSlot:(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/Property;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public java.util.Set<java.lang.String> getOwnPropertyNames();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getPropertyMap:()Lcom/google/javascript/rhino/jstype/PropertyMap;
       4: invokevirtual #51                 // Method com/google/javascript/rhino/jstype/PropertyMap.getOwnPropertyNames:()Ljava/util/Set;
       7: areturn

  public boolean isPropertyTypeInferred(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method getSlot:(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/Property;
       5: astore_2
       6: aload_2
       7: ifnonnull     14
      10: iconst_0
      11: goto          20
      14: aload_2
      15: invokeinterface #52,  1           // InterfaceMethod com/google/javascript/rhino/jstype/StaticSlot.isTypeInferred:()Z
      20: ireturn

  public boolean isPropertyTypeDeclared(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method getSlot:(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/Property;
       5: astore_2
       6: aload_2
       7: ifnonnull     14
      10: iconst_0
      11: goto          28
      14: aload_2
      15: invokeinterface #52,  1           // InterfaceMethod com/google/javascript/rhino/jstype/StaticSlot.isTypeInferred:()Z
      20: ifne          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  final boolean hasOwnDeclaredProperty(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #53                 // Method hasOwnProperty:(Ljava/lang/String;)Z
       5: ifeq          20
       8: aload_0
       9: aload_1
      10: invokevirtual #35                 // Method isPropertyTypeDeclared:(Ljava/lang/String;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public boolean isPropertyInExterns(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method getSlot:(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/Property;
       5: astore_2
       6: aload_2
       7: ifnonnull     14
      10: iconst_0
      11: goto          18
      14: aload_2
      15: invokevirtual #54                 // Method com/google/javascript/rhino/jstype/Property.isFromExterns:()Z
      18: ireturn

  public int getPropertiesCount();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getPropertyMap:()Lcom/google/javascript/rhino/jstype/PropertyMap;
       4: invokevirtual #55                 // Method com/google/javascript/rhino/jstype/PropertyMap.getPropertiesCount:()I
       7: ireturn

  public java.util.Set<java.lang.String> getPropertyNames();
    Code:
       0: invokestatic  #56                 // Method com/google/common/collect/Sets.newTreeSet:()Ljava/util/TreeSet;
       3: astore_1
       4: aload_0
       5: aload_1
       6: invokevirtual #57                 // Method collectPropertyNames:(Ljava/util/Set;)V
       9: aload_1
      10: areturn

  final void collectPropertyNames(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getPropertyMap:()Lcom/google/javascript/rhino/jstype/PropertyMap;
       4: aload_1
       5: invokevirtual #58                 // Method com/google/javascript/rhino/jstype/PropertyMap.collectPropertyNames:(Ljava/util/Set;)V
       8: return

  public <T> T visit(com.google.javascript.rhino.jstype.Visitor<T>);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #59,  2           // InterfaceMethod com/google/javascript/rhino/jstype/Visitor.caseObjectType:(Lcom/google/javascript/rhino/jstype/ObjectType;)Ljava/lang/Object;
       7: areturn

  <T> T visit(com.google.javascript.rhino.jstype.RelationshipVisitor<T>, com.google.javascript.rhino.jstype.JSType);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokeinterface #60,  3           // InterfaceMethod com/google/javascript/rhino/jstype/RelationshipVisitor.caseObjectType:(Lcom/google/javascript/rhino/jstype/ObjectType;Lcom/google/javascript/rhino/jstype/JSType;)Ljava/lang/Object;
       8: areturn

  final boolean isImplicitPrototype(com.google.javascript.rhino.jstype.ObjectType);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: ifnull        39
       6: aload_2
       7: invokevirtual #61                 // Method isTemplatizedType:()Z
      10: ifeq          21
      13: aload_2
      14: invokevirtual #62                 // Method toMaybeTemplatizedType:()Lcom/google/javascript/rhino/jstype/TemplatizedType;
      17: invokevirtual #63                 // Method com/google/javascript/rhino/jstype/TemplatizedType.getReferencedType:()Lcom/google/javascript/rhino/jstype/ObjectType;
      20: astore_2
      21: aload_2
      22: aload_1
      23: invokevirtual #64                 // Method isEquivalentTo:(Lcom/google/javascript/rhino/jstype/JSType;)Z
      26: ifeq          31
      29: iconst_1
      30: ireturn
      31: aload_2
      32: invokevirtual #5                  // Method getImplicitPrototype:()Lcom/google/javascript/rhino/jstype/ObjectType;
      35: astore_2
      36: goto          2
      39: iconst_0
      40: ireturn

  public com.google.javascript.rhino.jstype.BooleanLiteralSet getPossibleToBooleanOutcomes();
    Code:
       0: getstatic     #65                 // Field com/google/javascript/rhino/jstype/BooleanLiteralSet.TRUE:Lcom/google/javascript/rhino/jstype/BooleanLiteralSet;
       3: areturn

  public boolean isUnknownType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field unknown:Z
       4: ifeq          86
       7: aload_0
       8: invokevirtual #5                  // Method getImplicitPrototype:()Lcom/google/javascript/rhino/jstype/ObjectType;
      11: astore_1
      12: aload_1
      13: ifnull        23
      16: aload_1
      17: invokevirtual #66                 // Method isNativeObjectType:()Z
      20: ifeq          78
      23: aload_0
      24: iconst_0
      25: putfield      #3                  // Field unknown:Z
      28: aload_0
      29: invokevirtual #14                 // Method getCtorExtendedInterfaces:()Ljava/lang/Iterable;
      32: invokeinterface #67,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      37: astore_2
      38: aload_2
      39: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          75
      47: aload_2
      48: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      53: checkcast     #70                 // class com/google/javascript/rhino/jstype/ObjectType
      56: astore_3
      57: aload_3
      58: invokevirtual #50                 // Method isUnknownType:()Z
      61: ifeq          72
      64: aload_0
      65: iconst_1
      66: putfield      #3                  // Field unknown:Z
      69: goto          75
      72: goto          38
      75: goto          86
      78: aload_0
      79: aload_1
      80: invokevirtual #50                 // Method isUnknownType:()Z
      83: putfield      #3                  // Field unknown:Z
      86: aload_0
      87: getfield      #3                  // Field unknown:Z
      90: ireturn

  public boolean isObject();
    Code:
       0: iconst_1
       1: ireturn

  public boolean hasCachedValues();
    Code:
       0: aload_0
       1: getfield      #3                  // Field unknown:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void clearCachedValues();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field unknown:Z
       5: return

  public boolean isNativeObjectType();
    Code:
       0: iconst_0
       1: ireturn

  public static com.google.javascript.rhino.jstype.ObjectType cast(com.google.javascript.rhino.jstype.JSType);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aconst_null
       5: goto          12
       8: aload_0
       9: invokevirtual #71                 // Method com/google/javascript/rhino/jstype/JSType.toObjectType:()Lcom/google/javascript/rhino/jstype/ObjectType;
      12: areturn

  public final boolean isFunctionPrototypeType();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method getOwnerFunction:()Lcom/google/javascript/rhino/jstype/FunctionType;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public com.google.javascript.rhino.jstype.FunctionType getOwnerFunction();
    Code:
       0: aconst_null
       1: areturn

  void setOwnerFunction(com.google.javascript.rhino.jstype.FunctionType);
    Code:
       0: return

  public java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> getCtorImplementedInterfaces();
    Code:
       0: invokestatic  #73                 // Method com/google/common/collect/ImmutableSet.of:()Lcom/google/common/collect/ImmutableSet;
       3: areturn

  public java.lang.Iterable<com.google.javascript.rhino.jstype.ObjectType> getCtorExtendedInterfaces();
    Code:
       0: invokestatic  #73                 // Method com/google/common/collect/ImmutableSet.of:()Lcom/google/common/collect/ImmutableSet;
       3: areturn

  public java.lang.Object getTypeOfThis();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method getTypeOfThis:()Lcom/google/javascript/rhino/jstype/JSType;
       4: areturn

  public com.google.javascript.rhino.jstype.StaticSlot getOwnSlot(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method getOwnSlot:(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/Property;
       5: areturn

  public com.google.javascript.rhino.jstype.StaticSlot getSlot(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method getSlot:(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/Property;
       5: areturn

  public com.google.javascript.rhino.jstype.StaticScope getParentScope();
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method getParentScope:()Lcom/google/javascript/rhino/jstype/ObjectType;
       4: areturn
}
