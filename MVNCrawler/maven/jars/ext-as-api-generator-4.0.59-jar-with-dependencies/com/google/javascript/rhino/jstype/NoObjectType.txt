Compiled from "NoObjectType.java"
public class com.google.javascript.rhino.jstype.NoObjectType extends com.google.javascript.rhino.jstype.FunctionType {
  private static final long serialVersionUID;

  com.google.javascript.rhino.jstype.NoObjectType(com.google.javascript.rhino.jstype.JSTypeRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: aload_1
       5: aconst_null
       6: aconst_null
       7: invokevirtual #1                  // Method com/google/javascript/rhino/jstype/JSTypeRegistry.createArrowType:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/ArrowType;
      10: aconst_null
      11: aconst_null
      12: iconst_1
      13: iconst_1
      14: invokespecial #2                  // Method com/google/javascript/rhino/jstype/FunctionType."<init>":(Lcom/google/javascript/rhino/jstype/JSTypeRegistry;Ljava/lang/String;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/ArrowType;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/TemplateTypeMap;ZZ)V
      17: aload_0
      18: invokevirtual #3                  // Method getInternalArrowType:()Lcom/google/javascript/rhino/jstype/ArrowType;
      21: aload_0
      22: putfield      #4                  // Field com/google/javascript/rhino/jstype/ArrowType.returnType:Lcom/google/javascript/rhino/jstype/JSType;
      25: aload_0
      26: aload_0
      27: invokevirtual #5                  // Method setInstanceType:(Lcom/google/javascript/rhino/jstype/ObjectType;)V
      30: return

  public boolean isSubtype(com.google.javascript.rhino.jstype.JSType);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #6                  // Method com/google/javascript/rhino/jstype/JSType.isSubtypeHelper:(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z
       5: ifeq          10
       8: iconst_1
       9: ireturn
      10: aload_1
      11: invokevirtual #7                  // Method com/google/javascript/rhino/jstype/JSType.isObject:()Z
      14: ifeq          35
      17: aload_1
      18: invokevirtual #8                  // Method com/google/javascript/rhino/jstype/JSType.isNoType:()Z
      21: ifne          35
      24: aload_1
      25: invokevirtual #9                  // Method com/google/javascript/rhino/jstype/JSType.isNoResolvedType:()Z
      28: ifne          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  public com.google.javascript.rhino.jstype.FunctionType toMaybeFunctionType();
    Code:
       0: aconst_null
       1: areturn

  public boolean isNoObjectType();
    Code:
       0: iconst_1
       1: ireturn

  public com.google.javascript.rhino.jstype.ObjectType getImplicitPrototype();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getReferenceName();
    Code:
       0: aconst_null
       1: areturn

  public boolean matchesNumberContext();
    Code:
       0: iconst_1
       1: ireturn

  public boolean matchesObjectContext();
    Code:
       0: iconst_1
       1: ireturn

  public boolean matchesStringContext();
    Code:
       0: iconst_1
       1: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
       4: ireturn

  boolean defineProperty(java.lang.String, com.google.javascript.rhino.jstype.JSType, boolean, com.google.javascript.rhino.Node);
    Code:
       0: iconst_1
       1: ireturn

  public boolean removeProperty(java.lang.String);
    Code:
       0: iconst_0
       1: ireturn

  public void setPropertyJSDocInfo(java.lang.String, com.google.javascript.rhino.JSDocInfo);
    Code:
       0: return

  public <T> T visit(com.google.javascript.rhino.jstype.Visitor<T>);
    Code:
       0: aload_1
       1: invokeinterface #11,  1           // InterfaceMethod com/google/javascript/rhino/jstype/Visitor.caseNoObjectType:()Ljava/lang/Object;
       6: areturn

  <T> T visit(com.google.javascript.rhino.jstype.RelationshipVisitor<T>, com.google.javascript.rhino.jstype.JSType);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #12,  2           // InterfaceMethod com/google/javascript/rhino/jstype/RelationshipVisitor.caseNoObjectType:(Lcom/google/javascript/rhino/jstype/JSType;)Ljava/lang/Object;
       7: areturn

  java.lang.String toStringHelper(boolean);
    Code:
       0: iload_1
       1: ifeq          9
       4: ldc           #13                 // String ?
       6: goto          11
       9: ldc           #14                 // String NoObject
      11: areturn

  public com.google.javascript.rhino.jstype.FunctionType getConstructor();
    Code:
       0: aconst_null
       1: areturn

  com.google.javascript.rhino.jstype.JSType resolveInternal(com.google.javascript.rhino.ErrorReporter, com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>);
    Code:
       0: aload_0
       1: areturn

  public com.google.javascript.rhino.FunctionTypeI toMaybeFunctionType();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method toMaybeFunctionType:()Lcom/google/javascript/rhino/jstype/FunctionType;
       4: areturn
}
