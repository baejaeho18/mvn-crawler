Compiled from "VoidType.java"
public class com.google.javascript.rhino.jstype.VoidType extends com.google.javascript.rhino.jstype.ValueType {
  private static final long serialVersionUID;

  com.google.javascript.rhino.jstype.VoidType(com.google.javascript.rhino.jstype.JSTypeRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method com/google/javascript/rhino/jstype/ValueType."<init>":(Lcom/google/javascript/rhino/jstype/JSTypeRegistry;)V
       5: return

  public com.google.javascript.rhino.jstype.JSType restrictByNotNullOrUndefined();
    Code:
       0: aload_0
       1: getfield      #2                  // Field registry:Lcom/google/javascript/rhino/jstype/JSTypeRegistry;
       4: getstatic     #3                  // Field com/google/javascript/rhino/jstype/JSTypeNative.NO_TYPE:Lcom/google/javascript/rhino/jstype/JSTypeNative;
       7: invokevirtual #4                  // Method com/google/javascript/rhino/jstype/JSTypeRegistry.getNativeType:(Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/JSType;
      10: areturn

  public com.google.javascript.rhino.jstype.TernaryValue testForEquality(com.google.javascript.rhino.jstype.JSType);
    Code:
       0: getstatic     #5                  // Field com/google/javascript/rhino/jstype/TernaryValue.UNKNOWN:Lcom/google/javascript/rhino/jstype/TernaryValue;
       3: aload_0
       4: aload_1
       5: invokespecial #6                  // Method com/google/javascript/rhino/jstype/ValueType.testForEquality:(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/TernaryValue;
       8: invokevirtual #7                  // Method com/google/javascript/rhino/jstype/TernaryValue.equals:(Ljava/lang/Object;)Z
      11: ifeq          18
      14: getstatic     #5                  // Field com/google/javascript/rhino/jstype/TernaryValue.UNKNOWN:Lcom/google/javascript/rhino/jstype/TernaryValue;
      17: areturn
      18: aload_1
      19: aload_0
      20: invokevirtual #8                  // Method com/google/javascript/rhino/jstype/JSType.isSubtype:(Lcom/google/javascript/rhino/jstype/JSType;)Z
      23: ifne          40
      26: aload_1
      27: aload_0
      28: getstatic     #9                  // Field com/google/javascript/rhino/jstype/JSTypeNative.NULL_TYPE:Lcom/google/javascript/rhino/jstype/JSTypeNative;
      31: invokevirtual #10                 // Method getNativeType:(Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/JSType;
      34: invokevirtual #8                  // Method com/google/javascript/rhino/jstype/JSType.isSubtype:(Lcom/google/javascript/rhino/jstype/JSType;)Z
      37: ifeq          44
      40: getstatic     #11                 // Field com/google/javascript/rhino/jstype/TernaryValue.TRUE:Lcom/google/javascript/rhino/jstype/TernaryValue;
      43: areturn
      44: getstatic     #12                 // Field com/google/javascript/rhino/jstype/TernaryValue.FALSE:Lcom/google/javascript/rhino/jstype/TernaryValue;
      47: areturn

  public boolean matchesNumberContext();
    Code:
       0: iconst_0
       1: ireturn

  public boolean matchesObjectContext();
    Code:
       0: iconst_0
       1: ireturn

  public boolean matchesStringContext();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isVoidType();
    Code:
       0: iconst_1
       1: ireturn

  java.lang.String toStringHelper(boolean);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getDisplayName:()Ljava/lang/String;
       4: areturn

  public java.lang.String getDisplayName();
    Code:
       0: ldc           #14                 // String undefined
       2: areturn

  public com.google.javascript.rhino.jstype.BooleanLiteralSet getPossibleToBooleanOutcomes();
    Code:
       0: getstatic     #15                 // Field com/google/javascript/rhino/jstype/BooleanLiteralSet.FALSE:Lcom/google/javascript/rhino/jstype/BooleanLiteralSet;
       3: areturn

  public <T> T visit(com.google.javascript.rhino.jstype.Visitor<T>);
    Code:
       0: aload_1
       1: invokeinterface #16,  1           // InterfaceMethod com/google/javascript/rhino/jstype/Visitor.caseVoidType:()Ljava/lang/Object;
       6: areturn

  public boolean hasDisplayName();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method com/google/javascript/rhino/jstype/ValueType.hasDisplayName:()Z
       4: ireturn

  public com.google.javascript.rhino.TypeI restrictByNotNullOrUndefined();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method restrictByNotNullOrUndefined:()Lcom/google/javascript/rhino/jstype/JSType;
       4: areturn
}
