Compiled from "ApplySuggestedFixes.java"
public final class com.google.javascript.refactoring.ApplySuggestedFixes {
  private static final com.google.common.collect.Ordering<com.google.javascript.refactoring.CodeReplacement> ORDER_CODE_REPLACEMENTS;

  public com.google.javascript.refactoring.ApplySuggestedFixes();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void applySuggestedFixesToFiles(java.lang.Iterable<com.google.javascript.refactoring.SuggestedFix>) throws java.io.IOException;
    Code:
       0: new           #2                  // class java/util/HashSet
       3: dup
       4: invokespecial #3                  // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #4,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          53
      24: aload_2
      25: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #7                  // class com/google/javascript/refactoring/SuggestedFix
      33: astore_3
      34: aload_1
      35: aload_3
      36: invokevirtual #8                  // Method com/google/javascript/refactoring/SuggestedFix.getReplacements:()Lcom/google/common/collect/SetMultimap;
      39: invokeinterface #9,  1            // InterfaceMethod com/google/common/collect/SetMultimap.keySet:()Ljava/util/Set;
      44: invokeinterface #10,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      49: pop
      50: goto          15
      53: new           #11                 // class java/util/HashMap
      56: dup
      57: invokespecial #12                 // Method java/util/HashMap."<init>":()V
      60: astore_2
      61: aload_1
      62: invokeinterface #13,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      67: astore_3
      68: aload_3
      69: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      74: ifeq          115
      77: aload_3
      78: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      83: checkcast     #14                 // class java/lang/String
      86: astore        4
      88: aload_2
      89: aload         4
      91: new           #15                 // class java/io/File
      94: dup
      95: aload         4
      97: invokespecial #16                 // Method java/io/File."<init>":(Ljava/lang/String;)V
     100: getstatic     #17                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     103: invokestatic  #18                 // Method com/google/common/io/Files.toString:(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/lang/String;
     106: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     111: pop
     112: goto          68
     115: aload_0
     116: aload_2
     117: invokestatic  #20                 // Method applySuggestedFixesToCode:(Ljava/lang/Iterable;Ljava/util/Map;)Ljava/util/Map;
     120: astore_3
     121: aload_3
     122: invokeinterface #21,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     127: invokeinterface #13,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     132: astore        4
     134: aload         4
     136: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     141: ifeq          192
     144: aload         4
     146: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     151: checkcast     #22                 // class java/util/Map$Entry
     154: astore        5
     156: aload         5
     158: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     163: checkcast     #24                 // class java/lang/CharSequence
     166: new           #15                 // class java/io/File
     169: dup
     170: aload         5
     172: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     177: checkcast     #14                 // class java/lang/String
     180: invokespecial #16                 // Method java/io/File."<init>":(Ljava/lang/String;)V
     183: getstatic     #17                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     186: invokestatic  #26                 // Method com/google/common/io/Files.write:(Ljava/lang/CharSequence;Ljava/io/File;Ljava/nio/charset/Charset;)V
     189: goto          134
     192: return

  public static java.util.Map<java.lang.String, java.lang.String> applySuggestedFixesToCode(java.lang.Iterable<com.google.javascript.refactoring.SuggestedFix>, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: invokestatic  #27                 // Method com/google/common/collect/ImmutableSetMultimap.builder:()Lcom/google/common/collect/ImmutableSetMultimap$Builder;
       3: astore_2
       4: aload_0
       5: invokeinterface #4,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      10: astore_3
      11: aload_3
      12: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          44
      20: aload_3
      21: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #7                  // class com/google/javascript/refactoring/SuggestedFix
      29: astore        4
      31: aload_2
      32: aload         4
      34: invokevirtual #8                  // Method com/google/javascript/refactoring/SuggestedFix.getReplacements:()Lcom/google/common/collect/SetMultimap;
      37: invokevirtual #28                 // Method com/google/common/collect/ImmutableSetMultimap$Builder.putAll:(Lcom/google/common/collect/Multimap;)Lcom/google/common/collect/ImmutableSetMultimap$Builder;
      40: pop
      41: goto          11
      44: aload_2
      45: invokevirtual #29                 // Method com/google/common/collect/ImmutableSetMultimap$Builder.build:()Lcom/google/common/collect/ImmutableSetMultimap;
      48: astore_3
      49: invokestatic  #30                 // Method com/google/common/collect/ImmutableMap.builder:()Lcom/google/common/collect/ImmutableMap$Builder;
      52: astore        4
      54: aload_3
      55: invokestatic  #31                 // Method com/google/common/collect/Multimaps.asMap:(Lcom/google/common/collect/SetMultimap;)Ljava/util/Map;
      58: invokeinterface #21,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      63: invokeinterface #13,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      68: astore        5
      70: aload         5
      72: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      77: ifeq          186
      80: aload         5
      82: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      87: checkcast     #22                 // class java/util/Map$Entry
      90: astore        6
      92: aload         6
      94: invokeinterface #25,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      99: checkcast     #14                 // class java/lang/String
     102: astore        7
     104: aload_1
     105: aload         7
     107: invokeinterface #32,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     112: ifne          143
     115: new           #33                 // class java/lang/IllegalArgumentException
     118: dup
     119: new           #34                 // class java/lang/StringBuilder
     122: dup
     123: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     126: ldc           #36                 // String filenameToCodeMap missing code for file:
     128: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: aload         7
     133: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: invokespecial #39                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     142: athrow
     143: aload         6
     145: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     150: checkcast     #40                 // class java/util/Set
     153: astore        8
     155: aload         8
     157: aload_1
     158: aload         7
     160: invokeinterface #41,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     165: checkcast     #14                 // class java/lang/String
     168: invokestatic  #42                 // Method applyCodeReplacements:(Ljava/lang/Iterable;Ljava/lang/String;)Ljava/lang/String;
     171: astore        9
     173: aload         4
     175: aload         7
     177: aload         9
     179: invokevirtual #43                 // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
     182: pop
     183: goto          70
     186: aload         4
     188: invokevirtual #44                 // Method com/google/common/collect/ImmutableMap$Builder.build:()Lcom/google/common/collect/ImmutableMap;
     191: areturn

  public static java.lang.String applyCodeReplacements(java.lang.Iterable<com.google.javascript.refactoring.CodeReplacement>, java.lang.String);
    Code:
       0: getstatic     #45                 // Field ORDER_CODE_REPLACEMENTS:Lcom/google/common/collect/Ordering;
       3: aload_0
       4: invokevirtual #46                 // Method com/google/common/collect/Ordering.sortedCopy:(Ljava/lang/Iterable;)Ljava/util/List;
       7: astore_2
       8: aload_2
       9: invokestatic  #47                 // Method validateNoOverlaps:(Ljava/util/List;)V
      12: new           #34                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      19: astore_3
      20: iconst_0
      21: istore        4
      23: aload_2
      24: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      29: astore        5
      31: aload         5
      33: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          92
      41: aload         5
      43: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #49                 // class com/google/javascript/refactoring/CodeReplacement
      51: astore        6
      53: aload_3
      54: aload_1
      55: iload         4
      57: aload         6
      59: invokevirtual #50                 // Method com/google/javascript/refactoring/CodeReplacement.getStartPosition:()I
      62: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
      65: pop
      66: aload_3
      67: aload         6
      69: invokevirtual #52                 // Method com/google/javascript/refactoring/CodeReplacement.getNewContent:()Ljava/lang/String;
      72: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: pop
      76: aload         6
      78: invokevirtual #50                 // Method com/google/javascript/refactoring/CodeReplacement.getStartPosition:()I
      81: aload         6
      83: invokevirtual #53                 // Method com/google/javascript/refactoring/CodeReplacement.getLength:()I
      86: iadd
      87: istore        4
      89: goto          31
      92: iload         4
      94: aload_1
      95: invokevirtual #54                 // Method java/lang/String.length:()I
      98: if_icmpgt     112
     101: aload_3
     102: aload_1
     103: iload         4
     105: invokevirtual #55                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     108: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: pop
     112: aload_3
     113: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     116: areturn

  private static void validateNoOverlaps(java.util.List<com.google.javascript.refactoring.CodeReplacement>);
    Code:
       0: iconst_m1
       1: istore_1
       2: aload_0
       3: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: astore_2
       9: aload_2
      10: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          80
      18: aload_2
      19: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #49                 // class com/google/javascript/refactoring/CodeReplacement
      27: astore_3
      28: aload_3
      29: invokevirtual #50                 // Method com/google/javascript/refactoring/CodeReplacement.getStartPosition:()I
      32: iload_1
      33: if_icmpge     63
      36: new           #33                 // class java/lang/IllegalArgumentException
      39: dup
      40: new           #34                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #56                 // String Found overlap between code replacements!\n
      49: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_0
      53: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      56: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokespecial #39                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: iload_1
      64: aload_3
      65: invokevirtual #50                 // Method com/google/javascript/refactoring/CodeReplacement.getStartPosition:()I
      68: aload_3
      69: invokevirtual #53                 // Method com/google/javascript/refactoring/CodeReplacement.getLength:()I
      72: iadd
      73: invokestatic  #58                 // Method java/lang/Math.max:(II)I
      76: istore_1
      77: goto          9
      80: return

  static {};
    Code:
       0: invokestatic  #59                 // Method com/google/common/collect/Ordering.natural:()Lcom/google/common/collect/Ordering;
       3: new           #60                 // class com/google/javascript/refactoring/ApplySuggestedFixes$2
       6: dup
       7: invokespecial #61                 // Method com/google/javascript/refactoring/ApplySuggestedFixes$2."<init>":()V
      10: invokevirtual #62                 // Method com/google/common/collect/Ordering.onResultOf:(Lcom/google/common/base/Function;)Lcom/google/common/collect/Ordering;
      13: invokestatic  #59                 // Method com/google/common/collect/Ordering.natural:()Lcom/google/common/collect/Ordering;
      16: new           #63                 // class com/google/javascript/refactoring/ApplySuggestedFixes$1
      19: dup
      20: invokespecial #64                 // Method com/google/javascript/refactoring/ApplySuggestedFixes$1."<init>":()V
      23: invokevirtual #62                 // Method com/google/common/collect/Ordering.onResultOf:(Lcom/google/common/base/Function;)Lcom/google/common/collect/Ordering;
      26: invokevirtual #65                 // Method com/google/common/collect/Ordering.compound:(Ljava/util/Comparator;)Lcom/google/common/collect/Ordering;
      29: putstatic     #45                 // Field ORDER_CODE_REPLACEMENTS:Lcom/google/common/collect/Ordering;
      32: return
}
