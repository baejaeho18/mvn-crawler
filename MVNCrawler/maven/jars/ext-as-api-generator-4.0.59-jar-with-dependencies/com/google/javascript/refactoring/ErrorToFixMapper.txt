Compiled from "ErrorToFixMapper.java"
public final class com.google.javascript.refactoring.ErrorToFixMapper {
  private static final java.util.regex.Pattern DID_YOU_MEAN;

  private static final java.util.regex.Pattern MISSING_REQUIRE;

  private com.google.javascript.refactoring.ErrorToFixMapper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static com.google.javascript.refactoring.SuggestedFix getFixForJsError(com.google.javascript.jscomp.JSError, com.google.javascript.jscomp.AbstractCompiler);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method com/google/javascript/jscomp/JSError.getType:()Lcom/google/javascript/jscomp/DiagnosticType;
       4: getfield      #3                  // Field com/google/javascript/jscomp/DiagnosticType.key:Ljava/lang/String;
       7: astore_2
       8: iconst_m1
       9: istore_3
      10: aload_2
      11: invokevirtual #4                  // Method java/lang/String.hashCode:()I
      14: lookupswitch  { // 4
           -1078890835: 98
            -776441610: 70
             378628196: 84
             941057106: 56
               default: 109
          }
      56: aload_2
      57: ldc           #5                  // String JSC_DEBUGGER_STATEMENT_PRESENT
      59: invokevirtual #6                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      62: ifeq          109
      65: iconst_0
      66: istore_3
      67: goto          109
      70: aload_2
      71: ldc           #7                  // String JSC_INEXISTENT_PROPERTY
      73: invokevirtual #6                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      76: ifeq          109
      79: iconst_1
      80: istore_3
      81: goto          109
      84: aload_2
      85: ldc           #8                  // String JSC_MISSING_REQUIRE_WARNING
      87: invokevirtual #6                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      90: ifeq          109
      93: iconst_2
      94: istore_3
      95: goto          109
      98: aload_2
      99: ldc           #9                  // String JSC_UNNECESSARY_CAST
     101: invokevirtual #6                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     104: ifeq          109
     107: iconst_3
     108: istore_3
     109: iload_3
     110: tableswitch   { // 0 to 3
                     0: 140
                     1: 145
                     2: 150
                     3: 156
               default: 162
          }
     140: aload_0
     141: invokestatic  #10                 // Method getFixForDebuggerStatement:(Lcom/google/javascript/jscomp/JSError;)Lcom/google/javascript/refactoring/SuggestedFix;
     144: areturn
     145: aload_0
     146: invokestatic  #11                 // Method getFixForInexistentProperty:(Lcom/google/javascript/jscomp/JSError;)Lcom/google/javascript/refactoring/SuggestedFix;
     149: areturn
     150: aload_0
     151: aload_1
     152: invokestatic  #12                 // Method getFixForMissingRequire:(Lcom/google/javascript/jscomp/JSError;Lcom/google/javascript/jscomp/AbstractCompiler;)Lcom/google/javascript/refactoring/SuggestedFix;
     155: areturn
     156: aload_0
     157: aload_1
     158: invokestatic  #13                 // Method getFixForUnnecessaryCast:(Lcom/google/javascript/jscomp/JSError;Lcom/google/javascript/jscomp/AbstractCompiler;)Lcom/google/javascript/refactoring/SuggestedFix;
     161: areturn
     162: aconst_null
     163: areturn

  private static com.google.javascript.refactoring.SuggestedFix getFixForDebuggerStatement(com.google.javascript.jscomp.JSError);
    Code:
       0: new           #14                 // class com/google/javascript/refactoring/SuggestedFix$Builder
       3: dup
       4: invokespecial #15                 // Method com/google/javascript/refactoring/SuggestedFix$Builder."<init>":()V
       7: aload_0
       8: getfield      #16                 // Field com/google/javascript/jscomp/JSError.node:Lcom/google/javascript/rhino/Node;
      11: invokevirtual #17                 // Method com/google/javascript/refactoring/SuggestedFix$Builder.setOriginalMatchedNode:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/refactoring/SuggestedFix$Builder;
      14: aload_0
      15: getfield      #16                 // Field com/google/javascript/jscomp/JSError.node:Lcom/google/javascript/rhino/Node;
      18: invokevirtual #18                 // Method com/google/javascript/refactoring/SuggestedFix$Builder.delete:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/refactoring/SuggestedFix$Builder;
      21: invokevirtual #19                 // Method com/google/javascript/refactoring/SuggestedFix$Builder.build:()Lcom/google/javascript/refactoring/SuggestedFix;
      24: areturn

  private static com.google.javascript.refactoring.SuggestedFix getFixForInexistentProperty(com.google.javascript.jscomp.JSError);
    Code:
       0: getstatic     #20                 // Field DID_YOU_MEAN:Ljava/util/regex/Pattern;
       3: aload_0
       4: getfield      #21                 // Field com/google/javascript/jscomp/JSError.description:Ljava/lang/String;
       7: invokevirtual #22                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      10: astore_1
      11: aload_1
      12: invokevirtual #23                 // Method java/util/regex/Matcher.matches:()Z
      15: ifeq          50
      18: aload_1
      19: iconst_1
      20: invokevirtual #24                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      23: astore_2
      24: new           #14                 // class com/google/javascript/refactoring/SuggestedFix$Builder
      27: dup
      28: invokespecial #15                 // Method com/google/javascript/refactoring/SuggestedFix$Builder."<init>":()V
      31: aload_0
      32: getfield      #16                 // Field com/google/javascript/jscomp/JSError.node:Lcom/google/javascript/rhino/Node;
      35: invokevirtual #17                 // Method com/google/javascript/refactoring/SuggestedFix$Builder.setOriginalMatchedNode:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/refactoring/SuggestedFix$Builder;
      38: aload_0
      39: getfield      #16                 // Field com/google/javascript/jscomp/JSError.node:Lcom/google/javascript/rhino/Node;
      42: aload_2
      43: invokevirtual #25                 // Method com/google/javascript/refactoring/SuggestedFix$Builder.rename:(Lcom/google/javascript/rhino/Node;Ljava/lang/String;)Lcom/google/javascript/refactoring/SuggestedFix$Builder;
      46: invokevirtual #19                 // Method com/google/javascript/refactoring/SuggestedFix$Builder.build:()Lcom/google/javascript/refactoring/SuggestedFix;
      49: areturn
      50: aconst_null
      51: areturn

  private static com.google.javascript.refactoring.SuggestedFix getFixForMissingRequire(com.google.javascript.jscomp.JSError, com.google.javascript.jscomp.AbstractCompiler);
    Code:
       0: getstatic     #26                 // Field MISSING_REQUIRE:Ljava/util/regex/Pattern;
       3: aload_0
       4: getfield      #21                 // Field com/google/javascript/jscomp/JSError.description:Ljava/lang/String;
       7: invokevirtual #22                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      10: astore_2
      11: aload_2
      12: invokevirtual #23                 // Method java/util/regex/Matcher.matches:()Z
      15: ldc           #27                 // String Unexpected error description: %s
      17: iconst_1
      18: anewarray     #28                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_0
      24: getfield      #21                 // Field com/google/javascript/jscomp/JSError.description:Ljava/lang/String;
      27: aastore
      28: invokestatic  #29                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      31: aload_2
      32: iconst_1
      33: invokevirtual #24                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      36: astore_3
      37: new           #30                 // class com/google/javascript/refactoring/NodeMetadata
      40: dup
      41: aload_1
      42: invokespecial #31                 // Method com/google/javascript/refactoring/NodeMetadata."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;)V
      45: astore        4
      47: new           #32                 // class com/google/javascript/refactoring/Match
      50: dup
      51: aload_0
      52: getfield      #16                 // Field com/google/javascript/jscomp/JSError.node:Lcom/google/javascript/rhino/Node;
      55: aload         4
      57: invokespecial #33                 // Method com/google/javascript/refactoring/Match."<init>":(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/refactoring/NodeMetadata;)V
      60: astore        5
      62: new           #14                 // class com/google/javascript/refactoring/SuggestedFix$Builder
      65: dup
      66: invokespecial #15                 // Method com/google/javascript/refactoring/SuggestedFix$Builder."<init>":()V
      69: aload_0
      70: getfield      #16                 // Field com/google/javascript/jscomp/JSError.node:Lcom/google/javascript/rhino/Node;
      73: invokevirtual #17                 // Method com/google/javascript/refactoring/SuggestedFix$Builder.setOriginalMatchedNode:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/refactoring/SuggestedFix$Builder;
      76: aload         5
      78: aload_3
      79: invokevirtual #34                 // Method com/google/javascript/refactoring/SuggestedFix$Builder.addGoogRequire:(Lcom/google/javascript/refactoring/Match;Ljava/lang/String;)Lcom/google/javascript/refactoring/SuggestedFix$Builder;
      82: invokevirtual #19                 // Method com/google/javascript/refactoring/SuggestedFix$Builder.build:()Lcom/google/javascript/refactoring/SuggestedFix;
      85: areturn

  private static com.google.javascript.refactoring.SuggestedFix getFixForUnnecessaryCast(com.google.javascript.jscomp.JSError, com.google.javascript.jscomp.AbstractCompiler);
    Code:
       0: new           #14                 // class com/google/javascript/refactoring/SuggestedFix$Builder
       3: dup
       4: invokespecial #15                 // Method com/google/javascript/refactoring/SuggestedFix$Builder."<init>":()V
       7: aload_0
       8: getfield      #16                 // Field com/google/javascript/jscomp/JSError.node:Lcom/google/javascript/rhino/Node;
      11: invokevirtual #17                 // Method com/google/javascript/refactoring/SuggestedFix$Builder.setOriginalMatchedNode:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/refactoring/SuggestedFix$Builder;
      14: aload_0
      15: getfield      #16                 // Field com/google/javascript/jscomp/JSError.node:Lcom/google/javascript/rhino/Node;
      18: aload_1
      19: invokevirtual #35                 // Method com/google/javascript/refactoring/SuggestedFix$Builder.removeCast:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/AbstractCompiler;)Lcom/google/javascript/refactoring/SuggestedFix$Builder;
      22: invokevirtual #19                 // Method com/google/javascript/refactoring/SuggestedFix$Builder.build:()Lcom/google/javascript/refactoring/SuggestedFix;
      25: areturn

  static {};
    Code:
       0: ldc           #36                 // String .*Did you mean (.*)\\?
       2: invokestatic  #37                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #20                 // Field DID_YOU_MEAN:Ljava/util/regex/Pattern;
       8: ldc           #38                 // String \'([^\']+)\' used but not goog\\.require\'d
      10: invokestatic  #37                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      13: putstatic     #26                 // Field MISSING_REQUIRE:Ljava/util/regex/Pattern;
      16: return
}
