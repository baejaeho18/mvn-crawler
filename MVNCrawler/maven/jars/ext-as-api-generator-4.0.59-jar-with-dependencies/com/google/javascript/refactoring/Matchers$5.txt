Compiled from "Matchers.java"
final class com.google.javascript.refactoring.Matchers$5 implements com.google.javascript.refactoring.Matcher {
  final java.lang.String val$name;

  com.google.javascript.refactoring.Matchers$5(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$name:Ljava/lang/String;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public boolean matches(com.google.javascript.rhino.Node, com.google.javascript.refactoring.NodeMetadata);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method com/google/javascript/rhino/Node.getJSDocInfo:()Lcom/google/javascript/rhino/JSDocInfo;
       4: astore_3
       5: aload_3
       6: ifnull        61
       9: aload_3
      10: invokevirtual #4                  // Method com/google/javascript/rhino/JSDocInfo.isConstructor:()Z
      13: ifeq          61
      16: aload_1
      17: invokevirtual #5                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      20: astore        4
      22: aload_0
      23: getfield      #1                  // Field val$name:Ljava/lang/String;
      26: ifnonnull     31
      29: iconst_1
      30: ireturn
      31: aload         4
      33: invokevirtual #6                  // Method com/google/javascript/rhino/Node.isGetProp:()Z
      36: ifne          47
      39: aload         4
      41: invokevirtual #7                  // Method com/google/javascript/rhino/Node.isName:()Z
      44: ifeq          61
      47: aload         4
      49: aload_0
      50: getfield      #1                  // Field val$name:Ljava/lang/String;
      53: invokevirtual #8                  // Method com/google/javascript/rhino/Node.matchesQualifiedName:(Ljava/lang/String;)Z
      56: ifeq          61
      59: iconst_1
      60: ireturn
      61: iconst_0
      62: ireturn
}
