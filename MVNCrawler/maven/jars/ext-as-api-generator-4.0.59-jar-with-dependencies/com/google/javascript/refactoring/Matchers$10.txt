Compiled from "Matchers.java"
final class com.google.javascript.refactoring.Matchers$10 implements com.google.javascript.refactoring.Matcher {
  final java.lang.String val$name;

  com.google.javascript.refactoring.Matchers$10(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$name:Ljava/lang/String;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public boolean matches(com.google.javascript.rhino.Node, com.google.javascript.refactoring.NodeMetadata);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method com/google/javascript/rhino/Node.isGetProp:()Z
       4: ifeq          54
       7: aload_0
       8: getfield      #1                  // Field val$name:Ljava/lang/String;
      11: ifnonnull     16
      14: iconst_1
      15: ireturn
      16: aload_0
      17: getfield      #1                  // Field val$name:Ljava/lang/String;
      20: aload_1
      21: invokevirtual #4                  // Method com/google/javascript/rhino/Node.getQualifiedName:()Ljava/lang/String;
      24: invokevirtual #5                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ifeq          32
      30: iconst_1
      31: ireturn
      32: aload_0
      33: getfield      #1                  // Field val$name:Ljava/lang/String;
      36: ldc           #6                  // String .prototype.
      38: invokevirtual #7                  // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      41: ifeq          54
      44: aload_1
      45: aload_2
      46: aload_0
      47: getfield      #1                  // Field val$name:Ljava/lang/String;
      50: invokestatic  #8                  // Method com/google/javascript/refactoring/Matchers.access$200:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/refactoring/NodeMetadata;Ljava/lang/String;)Z
      53: ireturn
      54: iconst_0
      55: ireturn
}
