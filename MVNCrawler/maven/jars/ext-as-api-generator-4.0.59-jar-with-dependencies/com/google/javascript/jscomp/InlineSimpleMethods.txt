Compiled from "InlineSimpleMethods.java"
class com.google.javascript.jscomp.InlineSimpleMethods extends com.google.javascript.jscomp.MethodCompilerPass {
  private static final java.util.logging.Logger logger;

  static final com.google.javascript.jscomp.MethodCompilerPass$SignatureStore DUMMY_SIGNATURE_STORE;

  com.google.javascript.jscomp.InlineSimpleMethods(com.google.javascript.jscomp.AbstractCompiler);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method com/google/javascript/jscomp/MethodCompilerPass."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;)V
       5: return

  com.google.javascript.jscomp.NodeTraversal$Callback getActingCallback();
    Code:
       0: new           #11                 // class com/google/javascript/jscomp/InlineSimpleMethods$InlineTrivialAccessors
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #12                 // Method com/google/javascript/jscomp/InlineSimpleMethods$InlineTrivialAccessors."<init>":(Lcom/google/javascript/jscomp/InlineSimpleMethods;Lcom/google/javascript/jscomp/InlineSimpleMethods$1;)V
       9: areturn

  private static boolean isPropertyTree(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method com/google/javascript/rhino/Node.isGetProp:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokevirtual #14                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      13: astore_1
      14: aload_1
      15: invokevirtual #15                 // Method com/google/javascript/rhino/Node.isThis:()Z
      18: ifne          30
      21: aload_1
      22: invokestatic  #6                  // Method isPropertyTree:(Lcom/google/javascript/rhino/Node;)Z
      25: ifne          30
      28: iconst_0
      29: ireturn
      30: aload_1
      31: invokevirtual #16                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      34: astore_2
      35: aload_2
      36: invokestatic  #17                 // Method com/google/javascript/jscomp/NodeUtil.getStringValue:(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;
      39: ifnull        46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  private static void replaceThis(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
       4: astore_2
       5: aload_2
       6: invokevirtual #15                 // Method com/google/javascript/rhino/Node.isThis:()Z
       9: ifeq          21
      12: aload_0
      13: aload_2
      14: aload_1
      15: invokevirtual #18                 // Method com/google/javascript/rhino/Node.replaceChild:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      18: goto          26
      21: aload_2
      22: aload_1
      23: invokestatic  #19                 // Method replaceThis:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      26: return

  private static com.google.javascript.rhino.Node returnedExpression(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokestatic  #20                 // Method getMethodBlock:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
       4: astore_1
       5: aload_1
       6: invokevirtual #21                 // Method com/google/javascript/rhino/Node.hasOneChild:()Z
       9: ifne          14
      12: aconst_null
      13: areturn
      14: aload_1
      15: invokevirtual #14                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      18: astore_2
      19: aload_2
      20: invokevirtual #22                 // Method com/google/javascript/rhino/Node.isReturn:()Z
      23: ifne          28
      26: aconst_null
      27: areturn
      28: aload_2
      29: invokevirtual #21                 // Method com/google/javascript/rhino/Node.hasOneChild:()Z
      32: ifne          37
      35: aconst_null
      36: areturn
      37: aload_2
      38: invokevirtual #23                 // Method com/google/javascript/rhino/Node.getLastChild:()Lcom/google/javascript/rhino/Node;
      41: areturn

  private static boolean isEmptyMethod(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokestatic  #20                 // Method getMethodBlock:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: iconst_0
      10: goto          17
      13: aload_1
      14: invokestatic  #24                 // Method com/google/javascript/jscomp/NodeUtil.isEmptyBlock:(Lcom/google/javascript/rhino/Node;)Z
      17: ireturn

  private static com.google.javascript.rhino.Node getMethodBlock(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method com/google/javascript/rhino/Node.getChildCount:()I
       4: iconst_3
       5: if_icmpeq     10
       8: aconst_null
       9: areturn
      10: aload_0
      11: invokevirtual #23                 // Method com/google/javascript/rhino/Node.getLastChild:()Lcom/google/javascript/rhino/Node;
      14: astore_1
      15: aload_1
      16: invokevirtual #26                 // Method com/google/javascript/rhino/Node.isBlock:()Z
      19: ifeq          26
      22: aload_1
      23: goto          27
      26: aconst_null
      27: areturn

  private boolean allDefinitionsEquivalent(java.util.Collection<com.google.javascript.rhino.Node>);
    Code:
       0: invokestatic  #27                 // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
       3: astore_2
       4: aload_2
       5: aload_1
       6: invokeinterface #28,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      11: pop
      12: aload_2
      13: iconst_0
      14: invokeinterface #29,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      19: checkcast     #30                 // class com/google/javascript/rhino/Node
      22: astore_3
      23: iconst_1
      24: istore        4
      26: iload         4
      28: aload_2
      29: invokeinterface #31,  1           // InterfaceMethod java/util/List.size:()I
      34: if_icmpge     67
      37: aload_0
      38: getfield      #32                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      41: aload_2
      42: iload         4
      44: invokeinterface #29,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      49: checkcast     #30                 // class com/google/javascript/rhino/Node
      52: aload_3
      53: invokevirtual #33                 // Method com/google/javascript/jscomp/AbstractCompiler.areNodesEqualForInlining:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z
      56: ifne          61
      59: iconst_0
      60: ireturn
      61: iinc          4, 1
      64: goto          26
      67: iconst_1
      68: ireturn

  private void inlinePropertyReturn(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_3
       1: invokevirtual #34                 // Method com/google/javascript/rhino/Node.cloneTree:()Lcom/google/javascript/rhino/Node;
       4: astore        4
       6: aload         4
       8: aload_2
       9: invokevirtual #14                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      12: invokevirtual #35                 // Method com/google/javascript/rhino/Node.removeFirstChild:()Lcom/google/javascript/rhino/Node;
      15: invokestatic  #19                 // Method replaceThis:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      18: aload_1
      19: aload_2
      20: aload         4
      22: invokevirtual #18                 // Method com/google/javascript/rhino/Node.replaceChild:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      25: aload_0
      26: getfield      #32                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      29: invokevirtual #36                 // Method com/google/javascript/jscomp/AbstractCompiler.reportCodeChange:()V
      32: return

  private void inlineConstReturn(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_3
       1: invokevirtual #34                 // Method com/google/javascript/rhino/Node.cloneTree:()Lcom/google/javascript/rhino/Node;
       4: astore        4
       6: aload_1
       7: aload_2
       8: aload         4
      10: invokevirtual #18                 // Method com/google/javascript/rhino/Node.replaceChild:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      13: aload_0
      14: getfield      #32                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      17: invokevirtual #36                 // Method com/google/javascript/jscomp/AbstractCompiler.reportCodeChange:()V
      20: return

  private void inlineEmptyMethod(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokestatic  #37                 // Method com/google/javascript/jscomp/NodeUtil.isExprCall:(Lcom/google/javascript/rhino/Node;)Z
       4: ifeq          21
       7: aload_1
       8: invokevirtual #38                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      11: aload_1
      12: invokestatic  #39                 // Method com/google/javascript/rhino/IR.empty:()Lcom/google/javascript/rhino/Node;
      15: invokevirtual #18                 // Method com/google/javascript/rhino/Node.replaceChild:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      18: goto          32
      21: aload_2
      22: astore_3
      23: aload_1
      24: aload_2
      25: aload_3
      26: invokestatic  #40                 // Method com/google/javascript/jscomp/NodeUtil.newUndefinedNode:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      29: invokevirtual #18                 // Method com/google/javascript/rhino/Node.replaceChild:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      32: aload_0
      33: getfield      #32                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      36: invokevirtual #36                 // Method com/google/javascript/jscomp/AbstractCompiler.reportCodeChange:()V
      39: return

  private boolean argsMayHaveSideEffects(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #14                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
       4: invokevirtual #16                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
       7: astore_2
       8: aload_2
       9: ifnull        33
      12: aload_2
      13: aload_0
      14: getfield      #32                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      17: invokestatic  #41                 // Method com/google/javascript/jscomp/NodeUtil.mayHaveSideEffects:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/AbstractCompiler;)Z
      20: ifeq          25
      23: iconst_1
      24: ireturn
      25: aload_2
      26: invokevirtual #16                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      29: astore_2
      30: goto          8
      33: iconst_0
      34: ireturn

  com.google.javascript.jscomp.MethodCompilerPass$SignatureStore getSignatureStore();
    Code:
       0: getstatic     #42                 // Field DUMMY_SIGNATURE_STORE:Lcom/google/javascript/jscomp/MethodCompilerPass$SignatureStore;
       3: areturn

  static boolean access$000(com.google.javascript.jscomp.InlineSimpleMethods, java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method allDefinitionsEquivalent:(Ljava/util/Collection;)Z
       5: ireturn

  static boolean access$100(com.google.javascript.jscomp.InlineSimpleMethods, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method argsMayHaveSideEffects:(Lcom/google/javascript/rhino/Node;)Z
       5: ireturn

  static com.google.javascript.rhino.Node access$200(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method returnedExpression:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
       4: areturn

  static boolean access$300(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method isPropertyTree:(Lcom/google/javascript/rhino/Node;)Z
       4: ireturn

  static java.util.logging.Logger access$400();
    Code:
       0: getstatic     #5                  // Field logger:Ljava/util/logging/Logger;
       3: areturn

  static void access$500(com.google.javascript.jscomp.InlineSimpleMethods, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #4                  // Method inlinePropertyReturn:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
       7: return

  static void access$600(com.google.javascript.jscomp.InlineSimpleMethods, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #3                  // Method inlineConstReturn:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
       7: return

  static boolean access$700(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method isEmptyMethod:(Lcom/google/javascript/rhino/Node;)Z
       4: ireturn

  static void access$800(com.google.javascript.jscomp.InlineSimpleMethods, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method inlineEmptyMethod:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
       6: return

  static {};
    Code:
       0: ldc           #43                 // class com/google/javascript/jscomp/InlineSimpleMethods
       2: invokevirtual #44                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #45                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #5                  // Field logger:Ljava/util/logging/Logger;
      11: new           #46                 // class com/google/javascript/jscomp/InlineSimpleMethods$1
      14: dup
      15: invokespecial #47                 // Method com/google/javascript/jscomp/InlineSimpleMethods$1."<init>":()V
      18: putstatic     #42                 // Field DUMMY_SIGNATURE_STORE:Lcom/google/javascript/jscomp/MethodCompilerPass$SignatureStore;
      21: return
}
