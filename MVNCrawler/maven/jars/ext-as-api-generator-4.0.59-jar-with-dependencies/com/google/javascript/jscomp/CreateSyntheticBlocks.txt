Compiled from "CreateSyntheticBlocks.java"
class com.google.javascript.jscomp.CreateSyntheticBlocks implements com.google.javascript.jscomp.CompilerPass {
  static final com.google.javascript.jscomp.DiagnosticType UNMATCHED_START_MARKER;

  static final com.google.javascript.jscomp.DiagnosticType UNMATCHED_END_MARKER;

  static final com.google.javascript.jscomp.DiagnosticType INVALID_MARKER_USAGE;

  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  private final java.lang.String startMarkerName;

  private final java.lang.String endMarkerName;

  private final java.util.Deque<com.google.javascript.rhino.Node> markerStack;

  private final java.util.List<com.google.javascript.jscomp.CreateSyntheticBlocks$Marker> validMarkers;

  public com.google.javascript.jscomp.CreateSyntheticBlocks(com.google.javascript.jscomp.AbstractCompiler, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/ArrayDeque
       8: dup
       9: invokespecial #8                  // Method java/util/ArrayDeque."<init>":()V
      12: putfield      #3                  // Field markerStack:Ljava/util/Deque;
      15: aload_0
      16: invokestatic  #9                  // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
      19: putfield      #1                  // Field validMarkers:Ljava/util/List;
      22: aload_0
      23: aload_1
      24: putfield      #4                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      27: aload_0
      28: aload_2
      29: putfield      #5                  // Field startMarkerName:Ljava/lang/String;
      32: aload_0
      33: aload_3
      34: putfield      #2                  // Field endMarkerName:Ljava/lang/String;
      37: return

  public void process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #4                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: aload_2
       5: new           #10                 // class com/google/javascript/jscomp/CreateSyntheticBlocks$Callback
       8: dup
       9: aload_0
      10: aconst_null
      11: invokespecial #11                 // Method com/google/javascript/jscomp/CreateSyntheticBlocks$Callback."<init>":(Lcom/google/javascript/jscomp/CreateSyntheticBlocks;Lcom/google/javascript/jscomp/CreateSyntheticBlocks$1;)V
      14: invokestatic  #12                 // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      17: aload_0
      18: getfield      #3                  // Field markerStack:Ljava/util/Deque;
      21: invokeinterface #13,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
      26: astore_3
      27: aload_3
      28: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          76
      36: aload_3
      37: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #16                 // class com/google/javascript/rhino/Node
      45: astore        4
      47: aload_0
      48: getfield      #4                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      51: aload         4
      53: getstatic     #17                 // Field UNMATCHED_START_MARKER:Lcom/google/javascript/jscomp/DiagnosticType;
      56: iconst_1
      57: anewarray     #18                 // class java/lang/String
      60: dup
      61: iconst_0
      62: aload_0
      63: getfield      #5                  // Field startMarkerName:Ljava/lang/String;
      66: aastore
      67: invokestatic  #19                 // Method com/google/javascript/jscomp/JSError.make:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)Lcom/google/javascript/jscomp/JSError;
      70: invokevirtual #20                 // Method com/google/javascript/jscomp/AbstractCompiler.report:(Lcom/google/javascript/jscomp/JSError;)V
      73: goto          27
      76: aload_0
      77: getfield      #1                  // Field validMarkers:Ljava/util/List;
      80: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      85: astore_3
      86: aload_3
      87: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      92: ifeq          115
      95: aload_3
      96: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     101: checkcast     #22                 // class com/google/javascript/jscomp/CreateSyntheticBlocks$Marker
     104: astore        4
     106: aload_0
     107: aload         4
     109: invokespecial #23                 // Method addBlocks:(Lcom/google/javascript/jscomp/CreateSyntheticBlocks$Marker;)V
     112: goto          86
     115: return

  private void addBlocks(com.google.javascript.jscomp.CreateSyntheticBlocks$Marker);
    Code:
       0: aload_1
       1: getfield      #24                 // Field com/google/javascript/jscomp/CreateSyntheticBlocks$Marker.endMarker:Lcom/google/javascript/rhino/Node;
       4: invokevirtual #25                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
       7: astore_2
       8: invokestatic  #26                 // Method com/google/javascript/rhino/IR.block:()Lcom/google/javascript/rhino/Node;
      11: astore_3
      12: aload_3
      13: iconst_1
      14: invokevirtual #27                 // Method com/google/javascript/rhino/Node.setIsSyntheticBlock:(Z)V
      17: aload_2
      18: aload_3
      19: aload_1
      20: getfield      #28                 // Field com/google/javascript/jscomp/CreateSyntheticBlocks$Marker.startMarker:Lcom/google/javascript/rhino/Node;
      23: invokevirtual #29                 // Method com/google/javascript/rhino/Node.addChildBefore:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      26: invokestatic  #26                 // Method com/google/javascript/rhino/IR.block:()Lcom/google/javascript/rhino/Node;
      29: astore        4
      31: aload         4
      33: iconst_1
      34: invokevirtual #27                 // Method com/google/javascript/rhino/Node.setIsSyntheticBlock:(Z)V
      37: aload_0
      38: aload_2
      39: aload         4
      41: aload_1
      42: getfield      #28                 // Field com/google/javascript/jscomp/CreateSyntheticBlocks$Marker.startMarker:Lcom/google/javascript/rhino/Node;
      45: aload_1
      46: getfield      #24                 // Field com/google/javascript/jscomp/CreateSyntheticBlocks$Marker.endMarker:Lcom/google/javascript/rhino/Node;
      49: invokespecial #30                 // Method moveSiblingExclusive:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      52: aload_3
      53: aload_2
      54: aload_3
      55: invokevirtual #31                 // Method com/google/javascript/rhino/Node.removeChildAfter:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      58: invokevirtual #32                 // Method com/google/javascript/rhino/Node.addChildToBack:(Lcom/google/javascript/rhino/Node;)V
      61: aload_3
      62: aload         4
      64: invokevirtual #32                 // Method com/google/javascript/rhino/Node.addChildToBack:(Lcom/google/javascript/rhino/Node;)V
      67: aload_3
      68: aload_2
      69: aload_3
      70: invokevirtual #31                 // Method com/google/javascript/rhino/Node.removeChildAfter:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      73: invokevirtual #32                 // Method com/google/javascript/rhino/Node.addChildToBack:(Lcom/google/javascript/rhino/Node;)V
      76: aload_0
      77: getfield      #4                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      80: invokevirtual #33                 // Method com/google/javascript/jscomp/AbstractCompiler.reportCodeChange:()V
      83: return

  private void moveSiblingExclusive(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: aload_3
       2: invokestatic  #34                 // Method childAfter:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
       5: aload         4
       7: if_acmpeq     26
      10: aload_1
      11: aload_3
      12: invokestatic  #35                 // Method removeChildAfter:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      15: astore        5
      17: aload_2
      18: aload         5
      20: invokevirtual #32                 // Method com/google/javascript/rhino/Node.addChildToBack:(Lcom/google/javascript/rhino/Node;)V
      23: goto          0
      26: return

  private static com.google.javascript.rhino.Node childAfter(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_0
       5: invokevirtual #36                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
       8: areturn
       9: aload_1
      10: invokevirtual #37                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      13: areturn

  private static com.google.javascript.rhino.Node removeChildAfter(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_0
       5: invokevirtual #38                 // Method com/google/javascript/rhino/Node.removeFirstChild:()Lcom/google/javascript/rhino/Node;
       8: areturn
       9: aload_0
      10: aload_1
      11: invokevirtual #31                 // Method com/google/javascript/rhino/Node.removeChildAfter:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      14: areturn

  static java.lang.String access$100(com.google.javascript.jscomp.CreateSyntheticBlocks);
    Code:
       0: aload_0
       1: getfield      #5                  // Field startMarkerName:Ljava/lang/String;
       4: areturn

  static com.google.javascript.jscomp.AbstractCompiler access$200(com.google.javascript.jscomp.CreateSyntheticBlocks);
    Code:
       0: aload_0
       1: getfield      #4                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: areturn

  static java.util.Deque access$300(com.google.javascript.jscomp.CreateSyntheticBlocks);
    Code:
       0: aload_0
       1: getfield      #3                  // Field markerStack:Ljava/util/Deque;
       4: areturn

  static java.lang.String access$400(com.google.javascript.jscomp.CreateSyntheticBlocks);
    Code:
       0: aload_0
       1: getfield      #2                  // Field endMarkerName:Ljava/lang/String;
       4: areturn

  static java.util.List access$500(com.google.javascript.jscomp.CreateSyntheticBlocks);
    Code:
       0: aload_0
       1: getfield      #1                  // Field validMarkers:Ljava/util/List;
       4: areturn

  static {};
    Code:
       0: ldc           #39                 // String JSC_UNMATCHED_START_MARKER
       2: ldc           #40                 // String Unmatched {0}
       4: invokestatic  #41                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
       7: putstatic     #17                 // Field UNMATCHED_START_MARKER:Lcom/google/javascript/jscomp/DiagnosticType;
      10: ldc           #42                 // String JSC_UNMATCHED_END_MARKER
      12: ldc           #43                 // String Unmatched {1} - {0} not in the same block
      14: invokestatic  #41                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      17: putstatic     #44                 // Field UNMATCHED_END_MARKER:Lcom/google/javascript/jscomp/DiagnosticType;
      20: ldc           #45                 // String JSC_INVALID_MARKER_USAGE
      22: ldc           #46                 // String Marker {0} can only be used in a simple call expression
      24: invokestatic  #41                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      27: putstatic     #47                 // Field INVALID_MARKER_USAGE:Lcom/google/javascript/jscomp/DiagnosticType;
      30: return
}
