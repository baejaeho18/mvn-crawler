Compiled from "Denormalize.java"
class com.google.javascript.jscomp.Denormalize implements com.google.javascript.jscomp.CompilerPass,com.google.javascript.jscomp.NodeTraversal$Callback {
  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  com.google.javascript.jscomp.Denormalize(com.google.javascript.jscomp.AbstractCompiler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       9: return

  public void process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: aload_2
       5: aload_0
       6: invokestatic  #3                  // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
       9: return

  public boolean shouldTraverse(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: iconst_1
       1: ireturn

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokespecial #4                  // Method maybeCollapseIntoForStatements:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
       6: return

  private void maybeCollapseIntoForStatements(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: ifnull        11
       4: aload_2
       5: invokestatic  #5                  // Method com/google/javascript/jscomp/NodeUtil.isStatementBlock:(Lcom/google/javascript/rhino/Node;)Z
       8: ifne          12
      11: return
      12: aload_1
      13: invokevirtual #6                  // Method com/google/javascript/rhino/Node.isExprResult:()Z
      16: ifne          27
      19: aload_1
      20: invokevirtual #7                  // Method com/google/javascript/rhino/Node.isVar:()Z
      23: ifne          27
      26: return
      27: aload_1
      28: invokevirtual #8                  // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      31: astore_3
      32: aload_3
      33: ifnonnull     37
      36: return
      37: aload_3
      38: invokestatic  #9                  // Method com/google/javascript/jscomp/NodeUtil.isForIn:(Lcom/google/javascript/rhino/Node;)Z
      41: ifeq          129
      44: aload_3
      45: astore        4
      47: aload         4
      49: invokevirtual #10                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      52: astore        5
      54: aload         5
      56: invokevirtual #11                 // Method com/google/javascript/rhino/Node.isName:()Z
      59: ifeq          126
      62: aload_1
      63: invokevirtual #7                  // Method com/google/javascript/rhino/Node.isVar:()Z
      66: ifeq          126
      69: aload_1
      70: invokevirtual #12                 // Method com/google/javascript/rhino/Node.hasOneChild:()Z
      73: ifeq          126
      76: aload_1
      77: invokevirtual #10                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      80: astore        6
      82: aload         6
      84: invokevirtual #13                 // Method com/google/javascript/rhino/Node.hasChildren:()Z
      87: ifne          126
      90: aload         5
      92: invokevirtual #14                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      95: aload         6
      97: invokevirtual #14                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
     100: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     103: ifeq          126
     106: aload_2
     107: aload_1
     108: invokevirtual #16                 // Method com/google/javascript/rhino/Node.removeChild:(Lcom/google/javascript/rhino/Node;)V
     111: aload         4
     113: aload         5
     115: aload_1
     116: invokevirtual #17                 // Method com/google/javascript/rhino/Node.replaceChild:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
     119: aload_0
     120: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
     123: invokevirtual #18                 // Method com/google/javascript/jscomp/AbstractCompiler.reportCodeChange:()V
     126: goto          219
     129: aload_3
     130: invokevirtual #19                 // Method com/google/javascript/rhino/Node.isFor:()Z
     133: ifeq          219
     136: aload_3
     137: invokevirtual #10                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     140: invokevirtual #20                 // Method com/google/javascript/rhino/Node.isEmpty:()Z
     143: ifeq          219
     146: aload_1
     147: bipush        51
     149: invokestatic  #22                 // Method com/google/javascript/jscomp/NodeUtil.containsType:(Lcom/google/javascript/rhino/Node;I)Z
     152: ifeq          156
     155: return
     156: aload_3
     157: astore        4
     159: aload         4
     161: invokevirtual #10                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     164: astore        5
     166: aload_2
     167: aload_1
     168: invokevirtual #16                 // Method com/google/javascript/rhino/Node.removeChild:(Lcom/google/javascript/rhino/Node;)V
     171: aload_1
     172: invokevirtual #7                  // Method com/google/javascript/rhino/Node.isVar:()Z
     175: ifeq          184
     178: aload_1
     179: astore        6
     181: goto          203
     184: aload_1
     185: invokevirtual #12                 // Method com/google/javascript/rhino/Node.hasOneChild:()Z
     188: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkState:(Z)V
     191: aload_1
     192: invokevirtual #10                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     195: astore        6
     197: aload_1
     198: aload         6
     200: invokevirtual #16                 // Method com/google/javascript/rhino/Node.removeChild:(Lcom/google/javascript/rhino/Node;)V
     203: aload         4
     205: aload         5
     207: aload         6
     209: invokevirtual #17                 // Method com/google/javascript/rhino/Node.replaceChild:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
     212: aload_0
     213: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
     216: invokevirtual #18                 // Method com/google/javascript/jscomp/AbstractCompiler.reportCodeChange:()V
     219: return
}
