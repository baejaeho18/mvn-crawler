Compiled from "RenamePrototypes.java"
class com.google.javascript.jscomp.RenamePrototypes$ProcessProperties extends com.google.javascript.jscomp.NodeTraversal$AbstractPostOrderCallback {
  final com.google.javascript.jscomp.RenamePrototypes this$0;

  private com.google.javascript.jscomp.RenamePrototypes$ProcessProperties(com.google.javascript.jscomp.RenamePrototypes);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/RenamePrototypes;
       5: aload_0
       6: invokespecial #3                  // Method com/google/javascript/jscomp/NodeTraversal$AbstractPostOrderCallback."<init>":()V
       9: return

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: invokevirtual #4                  // Method com/google/javascript/rhino/Node.getType:()I
       4: lookupswitch  { // 3
                    33: 40
                    35: 40
                    64: 99
               default: 157
          }
      40: aload_2
      41: invokevirtual #5                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      44: invokevirtual #6                  // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      47: astore        4
      49: aload         4
      51: invokevirtual #7                  // Method com/google/javascript/rhino/Node.isString:()Z
      54: ifeq          157
      57: aload         4
      59: invokevirtual #8                  // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      62: astore        5
      64: aload         5
      66: ldc           #9                  // String prototype
      68: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      71: ifeq          86
      74: aload_0
      75: aload_3
      76: aload_1
      77: invokevirtual #11                 // Method com/google/javascript/jscomp/NodeTraversal.getInput:()Lcom/google/javascript/jscomp/CompilerInput;
      80: invokespecial #12                 // Method processPrototypeParent:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/CompilerInput;)V
      83: goto          96
      86: aload_0
      87: aload         4
      89: aload_1
      90: invokevirtual #11                 // Method com/google/javascript/jscomp/NodeTraversal.getInput:()Lcom/google/javascript/jscomp/CompilerInput;
      93: invokespecial #13                 // Method markPropertyAccessCandidate:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/CompilerInput;)V
      96: goto          157
      99: aload_0
     100: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/RenamePrototypes;
     103: invokestatic  #14                 // Method com/google/javascript/jscomp/RenamePrototypes.access$500:(Lcom/google/javascript/jscomp/RenamePrototypes;)Ljava/util/Set;
     106: aload_2
     107: invokeinterface #15,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     112: ifne          157
     115: aload_2
     116: invokevirtual #5                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     119: astore        5
     121: aload         5
     123: ifnull        157
     126: aload         5
     128: invokevirtual #8                  // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
     131: invokestatic  #16                 // Method com/google/javascript/rhino/TokenStream.isJSIdentifier:(Ljava/lang/String;)Z
     134: ifeq          147
     137: aload_0
     138: aload         5
     140: aload_1
     141: invokevirtual #11                 // Method com/google/javascript/jscomp/NodeTraversal.getInput:()Lcom/google/javascript/jscomp/CompilerInput;
     144: invokespecial #17                 // Method markObjLitPropertyCandidate:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/CompilerInput;)V
     147: aload         5
     149: invokevirtual #6                  // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
     152: astore        5
     154: goto          121
     157: return

  private void processPrototypeParent(com.google.javascript.rhino.Node, com.google.javascript.jscomp.CompilerInput);
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method com/google/javascript/rhino/Node.getType:()I
       4: lookupswitch  { // 4
                    33: 48
                    35: 48
                    37: 72
                    86: 72
               default: 160
          }
      48: aload_1
      49: invokevirtual #5                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      52: invokevirtual #6                  // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      55: astore_3
      56: aload_3
      57: invokevirtual #7                  // Method com/google/javascript/rhino/Node.isString:()Z
      60: ifeq          160
      63: aload_0
      64: aload_3
      65: aload_2
      66: invokespecial #18                 // Method markPrototypePropertyCandidate:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/CompilerInput;)V
      69: goto          160
      72: aload_1
      73: invokevirtual #19                 // Method com/google/javascript/rhino/Node.isAssign:()Z
      76: ifeq          91
      79: aload_1
      80: invokevirtual #5                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      83: invokevirtual #6                  // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      86: astore        4
      88: goto          97
      91: aload_1
      92: invokevirtual #20                 // Method com/google/javascript/rhino/Node.getLastChild:()Lcom/google/javascript/rhino/Node;
      95: astore        4
      97: aload         4
      99: invokevirtual #21                 // Method com/google/javascript/rhino/Node.isObjectLit:()Z
     102: ifeq          160
     105: aload_0
     106: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/RenamePrototypes;
     109: invokestatic  #14                 // Method com/google/javascript/jscomp/RenamePrototypes.access$500:(Lcom/google/javascript/jscomp/RenamePrototypes;)Ljava/util/Set;
     112: aload         4
     114: invokeinterface #22,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     119: pop
     120: aload         4
     122: invokevirtual #5                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     125: astore        5
     127: aload         5
     129: ifnull        160
     132: aload         5
     134: invokevirtual #8                  // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
     137: invokestatic  #16                 // Method com/google/javascript/rhino/TokenStream.isJSIdentifier:(Ljava/lang/String;)Z
     140: ifeq          150
     143: aload_0
     144: aload         5
     146: aload_2
     147: invokespecial #18                 // Method markPrototypePropertyCandidate:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/CompilerInput;)V
     150: aload         5
     152: invokevirtual #6                  // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
     155: astore        5
     157: goto          127
     160: return

  private void markPrototypePropertyCandidate(com.google.javascript.rhino.Node, com.google.javascript.jscomp.CompilerInput);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/RenamePrototypes;
       4: invokestatic  #23                 // Method com/google/javascript/jscomp/RenamePrototypes.access$600:(Lcom/google/javascript/jscomp/RenamePrototypes;)Ljava/util/Set;
       7: aload_1
       8: invokeinterface #22,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      13: pop
      14: aload_0
      15: aload_1
      16: invokevirtual #8                  // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      19: invokespecial #24                 // Method getProperty:(Ljava/lang/String;)Lcom/google/javascript/jscomp/RenamePrototypes$Property;
      22: dup
      23: getfield      #25                 // Field com/google/javascript/jscomp/RenamePrototypes$Property.prototypeCount:I
      26: iconst_1
      27: iadd
      28: putfield      #25                 // Field com/google/javascript/jscomp/RenamePrototypes$Property.prototypeCount:I
      31: return

  private void markObjLitPropertyCandidate(com.google.javascript.rhino.Node, com.google.javascript.jscomp.CompilerInput);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/RenamePrototypes;
       4: invokestatic  #23                 // Method com/google/javascript/jscomp/RenamePrototypes.access$600:(Lcom/google/javascript/jscomp/RenamePrototypes;)Ljava/util/Set;
       7: aload_1
       8: invokeinterface #22,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      13: pop
      14: aload_0
      15: aload_1
      16: invokevirtual #8                  // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      19: invokespecial #24                 // Method getProperty:(Ljava/lang/String;)Lcom/google/javascript/jscomp/RenamePrototypes$Property;
      22: dup
      23: getfield      #26                 // Field com/google/javascript/jscomp/RenamePrototypes$Property.objLitCount:I
      26: iconst_1
      27: iadd
      28: putfield      #26                 // Field com/google/javascript/jscomp/RenamePrototypes$Property.objLitCount:I
      31: return

  private void markPropertyAccessCandidate(com.google.javascript.rhino.Node, com.google.javascript.jscomp.CompilerInput);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/RenamePrototypes;
       4: invokestatic  #23                 // Method com/google/javascript/jscomp/RenamePrototypes.access$600:(Lcom/google/javascript/jscomp/RenamePrototypes;)Ljava/util/Set;
       7: aload_1
       8: invokeinterface #22,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      13: pop
      14: aload_0
      15: aload_1
      16: invokevirtual #8                  // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      19: invokespecial #24                 // Method getProperty:(Ljava/lang/String;)Lcom/google/javascript/jscomp/RenamePrototypes$Property;
      22: dup
      23: getfield      #27                 // Field com/google/javascript/jscomp/RenamePrototypes$Property.refCount:I
      26: iconst_1
      27: iadd
      28: putfield      #27                 // Field com/google/javascript/jscomp/RenamePrototypes$Property.refCount:I
      31: return

  private com.google.javascript.jscomp.RenamePrototypes$Property getProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/RenamePrototypes;
       4: invokestatic  #28                 // Method com/google/javascript/jscomp/RenamePrototypes.access$700:(Lcom/google/javascript/jscomp/RenamePrototypes;)Ljava/util/Map;
       7: aload_1
       8: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #30                 // class com/google/javascript/jscomp/RenamePrototypes$Property
      16: astore_2
      17: aload_2
      18: ifnonnull     49
      21: new           #30                 // class com/google/javascript/jscomp/RenamePrototypes$Property
      24: dup
      25: aload_0
      26: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/RenamePrototypes;
      29: aload_1
      30: invokespecial #31                 // Method com/google/javascript/jscomp/RenamePrototypes$Property."<init>":(Lcom/google/javascript/jscomp/RenamePrototypes;Ljava/lang/String;)V
      33: astore_2
      34: aload_0
      35: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/RenamePrototypes;
      38: invokestatic  #28                 // Method com/google/javascript/jscomp/RenamePrototypes.access$700:(Lcom/google/javascript/jscomp/RenamePrototypes;)Ljava/util/Map;
      41: aload_1
      42: aload_2
      43: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: aload_2
      50: areturn

  com.google.javascript.jscomp.RenamePrototypes$ProcessProperties(com.google.javascript.jscomp.RenamePrototypes, com.google.javascript.jscomp.RenamePrototypes$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lcom/google/javascript/jscomp/RenamePrototypes;)V
       5: return
}
