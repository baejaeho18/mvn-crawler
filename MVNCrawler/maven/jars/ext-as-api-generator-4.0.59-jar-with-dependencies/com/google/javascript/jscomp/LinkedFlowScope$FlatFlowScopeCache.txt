Compiled from "LinkedFlowScope.java"
class com.google.javascript.jscomp.LinkedFlowScope$FlatFlowScopeCache {
  private final com.google.javascript.jscomp.Scope functionScope;

  private final com.google.javascript.jscomp.LinkedFlowScope linkedEquivalent;

  private java.util.Map<java.lang.String, com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType>> symbols;

  final java.util.Set<java.lang.String> dirtySymbols;

  com.google.javascript.jscomp.LinkedFlowScope$FlatFlowScopeCache(com.google.javascript.jscomp.Scope);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #5                  // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
       8: putfield      #1                  // Field symbols:Ljava/util/Map;
      11: aload_0
      12: invokestatic  #6                  // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
      15: putfield      #7                  // Field dirtySymbols:Ljava/util/Set;
      18: aload_0
      19: aload_1
      20: putfield      #2                  // Field functionScope:Lcom/google/javascript/jscomp/Scope;
      23: aload_0
      24: invokestatic  #8                  // Method com/google/common/collect/ImmutableMap.of:()Lcom/google/common/collect/ImmutableMap;
      27: putfield      #1                  // Field symbols:Ljava/util/Map;
      30: aload_0
      31: aconst_null
      32: putfield      #3                  // Field linkedEquivalent:Lcom/google/javascript/jscomp/LinkedFlowScope;
      35: return

  com.google.javascript.jscomp.LinkedFlowScope$FlatFlowScopeCache(com.google.javascript.jscomp.LinkedFlowScope);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #5                  // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
       8: putfield      #1                  // Field symbols:Ljava/util/Map;
      11: aload_0
      12: invokestatic  #6                  // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
      15: putfield      #7                  // Field dirtySymbols:Ljava/util/Set;
      18: aload_1
      19: invokestatic  #9                  // Method com/google/javascript/jscomp/LinkedFlowScope.access$400:(Lcom/google/javascript/jscomp/LinkedFlowScope;)Lcom/google/javascript/jscomp/LinkedFlowScope$FlatFlowScopeCache;
      22: astore_2
      23: aload_0
      24: aload_2
      25: getfield      #2                  // Field functionScope:Lcom/google/javascript/jscomp/Scope;
      28: putfield      #2                  // Field functionScope:Lcom/google/javascript/jscomp/Scope;
      31: aload_0
      32: aload_1
      33: invokestatic  #10                 // Method com/google/javascript/jscomp/LinkedFlowScope.access$500:(Lcom/google/javascript/jscomp/LinkedFlowScope;)Ljava/util/Map;
      36: putfield      #1                  // Field symbols:Ljava/util/Map;
      39: aload_0
      40: aload_1
      41: putfield      #3                  // Field linkedEquivalent:Lcom/google/javascript/jscomp/LinkedFlowScope;
      44: return

  com.google.javascript.jscomp.LinkedFlowScope$FlatFlowScopeCache(com.google.javascript.jscomp.LinkedFlowScope, com.google.javascript.jscomp.LinkedFlowScope);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #5                  // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
       8: putfield      #1                  // Field symbols:Ljava/util/Map;
      11: aload_0
      12: invokestatic  #6                  // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
      15: putfield      #7                  // Field dirtySymbols:Ljava/util/Set;
      18: aload_0
      19: aconst_null
      20: putfield      #3                  // Field linkedEquivalent:Lcom/google/javascript/jscomp/LinkedFlowScope;
      23: aload_0
      24: aload_1
      25: invokestatic  #11                 // Method com/google/javascript/jscomp/LinkedFlowScope.access$600:(Lcom/google/javascript/jscomp/LinkedFlowScope;)Z
      28: ifeq          38
      31: aload_2
      32: invokestatic  #12                 // Method com/google/javascript/jscomp/LinkedFlowScope.access$700:(Lcom/google/javascript/jscomp/LinkedFlowScope;)Lcom/google/javascript/jscomp/Scope;
      35: goto          42
      38: aload_1
      39: invokestatic  #12                 // Method com/google/javascript/jscomp/LinkedFlowScope.access$700:(Lcom/google/javascript/jscomp/LinkedFlowScope;)Lcom/google/javascript/jscomp/Scope;
      42: putfield      #2                  // Field functionScope:Lcom/google/javascript/jscomp/Scope;
      45: aload_1
      46: invokestatic  #10                 // Method com/google/javascript/jscomp/LinkedFlowScope.access$500:(Lcom/google/javascript/jscomp/LinkedFlowScope;)Ljava/util/Map;
      49: astore_3
      50: aload_2
      51: invokestatic  #10                 // Method com/google/javascript/jscomp/LinkedFlowScope.access$500:(Lcom/google/javascript/jscomp/LinkedFlowScope;)Ljava/util/Map;
      54: astore        4
      56: aload_0
      57: aload_3
      58: putfield      #1                  // Field symbols:Ljava/util/Map;
      61: aload_0
      62: getfield      #1                  // Field symbols:Ljava/util/Map;
      65: invokeinterface #13,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      70: invokestatic  #14                 // Method com/google/common/collect/Sets.newHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;
      73: astore        5
      75: aload         5
      77: aload         4
      79: invokeinterface #13,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      84: invokeinterface #15,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      89: pop
      90: aload         5
      92: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      97: astore        6
      99: aload         6
     101: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     106: ifeq          372
     109: aload         6
     111: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     116: checkcast     #19                 // class java/lang/String
     119: astore        7
     121: aload_3
     122: aload         7
     124: invokeinterface #20,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     129: checkcast     #21                 // class com/google/javascript/rhino/jstype/StaticSlot
     132: astore        8
     134: aload         4
     136: aload         7
     138: invokeinterface #20,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     143: checkcast     #21                 // class com/google/javascript/rhino/jstype/StaticSlot
     146: astore        9
     148: aconst_null
     149: astore        10
     151: aload         9
     153: ifnull        166
     156: aload         9
     158: invokeinterface #22,  1           // InterfaceMethod com/google/javascript/rhino/jstype/StaticSlot.getType:()Ljava/lang/Object;
     163: ifnonnull     226
     166: aload_2
     167: invokestatic  #12                 // Method com/google/javascript/jscomp/LinkedFlowScope.access$700:(Lcom/google/javascript/jscomp/LinkedFlowScope;)Lcom/google/javascript/jscomp/Scope;
     170: aload         7
     172: invokevirtual #23                 // Method com/google/javascript/jscomp/Scope.getSlot:(Ljava/lang/String;)Lcom/google/javascript/jscomp/Scope$Var;
     175: astore        11
     177: aload         11
     179: ifnonnull     186
     182: aconst_null
     183: goto          196
     186: aload         11
     188: invokeinterface #22,  1           // InterfaceMethod com/google/javascript/rhino/jstype/StaticSlot.getType:()Ljava/lang/Object;
     193: checkcast     #24                 // class com/google/javascript/rhino/jstype/JSType
     196: astore        12
     198: aload         12
     200: ifnonnull     206
     203: goto          223
     206: aload         8
     208: invokeinterface #22,  1           // InterfaceMethod com/google/javascript/rhino/jstype/StaticSlot.getType:()Ljava/lang/Object;
     213: checkcast     #24                 // class com/google/javascript/rhino/jstype/JSType
     216: aload         12
     218: invokevirtual #25                 // Method com/google/javascript/rhino/jstype/JSType.getLeastSupertype:(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;
     221: astore        10
     223: goto          340
     226: aload         8
     228: ifnull        241
     231: aload         8
     233: invokeinterface #22,  1           // InterfaceMethod com/google/javascript/rhino/jstype/StaticSlot.getType:()Ljava/lang/Object;
     238: ifnonnull     315
     241: aload_1
     242: invokestatic  #12                 // Method com/google/javascript/jscomp/LinkedFlowScope.access$700:(Lcom/google/javascript/jscomp/LinkedFlowScope;)Lcom/google/javascript/jscomp/Scope;
     245: aload         7
     247: invokevirtual #23                 // Method com/google/javascript/jscomp/Scope.getSlot:(Ljava/lang/String;)Lcom/google/javascript/jscomp/Scope$Var;
     250: astore        11
     252: aload         11
     254: ifnonnull     261
     257: aconst_null
     258: goto          271
     261: aload         11
     263: invokeinterface #22,  1           // InterfaceMethod com/google/javascript/rhino/jstype/StaticSlot.getType:()Ljava/lang/Object;
     268: checkcast     #24                 // class com/google/javascript/rhino/jstype/JSType
     271: astore        12
     273: aload         12
     275: ifnonnull     295
     278: aload_0
     279: getfield      #1                  // Field symbols:Ljava/util/Map;
     282: aload         7
     284: aload         9
     286: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     291: pop
     292: goto          312
     295: aload         9
     297: invokeinterface #22,  1           // InterfaceMethod com/google/javascript/rhino/jstype/StaticSlot.getType:()Ljava/lang/Object;
     302: checkcast     #24                 // class com/google/javascript/rhino/jstype/JSType
     305: aload         12
     307: invokevirtual #25                 // Method com/google/javascript/rhino/jstype/JSType.getLeastSupertype:(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;
     310: astore        10
     312: goto          340
     315: aload         8
     317: invokeinterface #22,  1           // InterfaceMethod com/google/javascript/rhino/jstype/StaticSlot.getType:()Ljava/lang/Object;
     322: checkcast     #24                 // class com/google/javascript/rhino/jstype/JSType
     325: aload         9
     327: invokeinterface #22,  1           // InterfaceMethod com/google/javascript/rhino/jstype/StaticSlot.getType:()Ljava/lang/Object;
     332: checkcast     #24                 // class com/google/javascript/rhino/jstype/JSType
     335: invokevirtual #25                 // Method com/google/javascript/rhino/jstype/JSType.getLeastSupertype:(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/JSType;
     338: astore        10
     340: aload         10
     342: ifnull        369
     345: aload_0
     346: getfield      #1                  // Field symbols:Ljava/util/Map;
     349: aload         7
     351: new           #27                 // class com/google/javascript/rhino/jstype/SimpleSlot
     354: dup
     355: aload         7
     357: aload         10
     359: iconst_1
     360: invokespecial #28                 // Method com/google/javascript/rhino/jstype/SimpleSlot."<init>":(Ljava/lang/String;Lcom/google/javascript/rhino/jstype/JSType;Z)V
     363: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     368: pop
     369: goto          99
     372: return

  public com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType> getSlot(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field symbols:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #29,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          27
      13: aload_0
      14: getfield      #1                  // Field symbols:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #20,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #21                 // class com/google/javascript/rhino/jstype/StaticSlot
      26: areturn
      27: aload_0
      28: getfield      #2                  // Field functionScope:Lcom/google/javascript/jscomp/Scope;
      31: aload_1
      32: invokevirtual #23                 // Method com/google/javascript/jscomp/Scope.getSlot:(Ljava/lang/String;)Lcom/google/javascript/jscomp/Scope$Var;
      35: areturn

  static com.google.javascript.jscomp.LinkedFlowScope access$000(com.google.javascript.jscomp.LinkedFlowScope$FlatFlowScopeCache);
    Code:
       0: aload_0
       1: getfield      #3                  // Field linkedEquivalent:Lcom/google/javascript/jscomp/LinkedFlowScope;
       4: areturn

  static com.google.javascript.jscomp.Scope access$100(com.google.javascript.jscomp.LinkedFlowScope$FlatFlowScopeCache);
    Code:
       0: aload_0
       1: getfield      #2                  // Field functionScope:Lcom/google/javascript/jscomp/Scope;
       4: areturn

  static java.util.Map access$300(com.google.javascript.jscomp.LinkedFlowScope$FlatFlowScopeCache);
    Code:
       0: aload_0
       1: getfield      #1                  // Field symbols:Ljava/util/Map;
       4: areturn
}
