Compiled from "ControlFlowAnalysis.java"
class com.google.javascript.jscomp.ControlFlowAnalysis$1 implements java.util.Comparator<com.google.javascript.jscomp.graph.DiGraph$DiGraphNode<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph$Branch>> {
  final com.google.javascript.jscomp.ControlFlowAnalysis this$0;

  com.google.javascript.jscomp.ControlFlowAnalysis$1(com.google.javascript.jscomp.ControlFlowAnalysis);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/ControlFlowAnalysis;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public int compare(com.google.javascript.jscomp.graph.DiGraph$DiGraphNode<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph$Branch>, com.google.javascript.jscomp.graph.DiGraph$DiGraphNode<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph$Branch>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/ControlFlowAnalysis;
       4: invokestatic  #3                  // Method com/google/javascript/jscomp/ControlFlowAnalysis.access$000:(Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Ljava/util/Map;
       7: aload_1
       8: invokeinterface #4,  1            // InterfaceMethod com/google/javascript/jscomp/graph/DiGraph$DiGraphNode.getValue:()Ljava/lang/Object;
      13: invokeinterface #5,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #6                  // class java/lang/Integer
      21: invokevirtual #7                  // Method java/lang/Integer.intValue:()I
      24: aload_0
      25: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/ControlFlowAnalysis;
      28: invokestatic  #3                  // Method com/google/javascript/jscomp/ControlFlowAnalysis.access$000:(Lcom/google/javascript/jscomp/ControlFlowAnalysis;)Ljava/util/Map;
      31: aload_2
      32: invokeinterface #4,  1            // InterfaceMethod com/google/javascript/jscomp/graph/DiGraph$DiGraphNode.getValue:()Ljava/lang/Object;
      37: invokeinterface #5,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      42: checkcast     #6                  // class java/lang/Integer
      45: invokevirtual #7                  // Method java/lang/Integer.intValue:()I
      48: isub
      49: ireturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #8                  // class com/google/javascript/jscomp/graph/DiGraph$DiGraphNode
       5: aload_2
       6: checkcast     #8                  // class com/google/javascript/jscomp/graph/DiGraph$DiGraphNode
       9: invokevirtual #9                  // Method compare:(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)I
      12: ireturn
}
