Compiled from "CheckMissingReturn.java"
class com.google.javascript.jscomp.CheckMissingReturn implements com.google.javascript.jscomp.NodeTraversal$ScopedCallback {
  static final com.google.javascript.jscomp.DiagnosticType MISSING_RETURN_STATEMENT;

  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  private final com.google.javascript.jscomp.CheckLevel level;

  private final com.google.javascript.jscomp.CodingConvention convention;

  private static final com.google.common.base.Predicate<com.google.javascript.rhino.Node> IS_RETURN;

  private static final com.google.common.base.Predicate<com.google.javascript.jscomp.graph.DiGraph$DiGraphEdge<com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph$Branch>> GOES_THROUGH_TRUE_CONDITION_PREDICATE;

  com.google.javascript.jscomp.CheckMissingReturn(com.google.javascript.jscomp.AbstractCompiler, com.google.javascript.jscomp.CheckLevel);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field level:Lcom/google/javascript/jscomp/CheckLevel;
      14: aload_0
      15: aload_1
      16: invokevirtual #4                  // Method com/google/javascript/jscomp/AbstractCompiler.getCodingConvention:()Lcom/google/javascript/jscomp/CodingConvention;
      19: putfield      #5                  // Field convention:Lcom/google/javascript/jscomp/CodingConvention;
      22: return

  public void enterScope(com.google.javascript.jscomp.NodeTraversal);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method com/google/javascript/jscomp/NodeTraversal.getScopeRoot:()Lcom/google/javascript/rhino/Node;
       5: invokespecial #7                  // Method explicitReturnExpected:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/jstype/JSType;
       8: astore_2
       9: aload_2
      10: ifnonnull     14
      13: return
      14: aload_0
      15: aload_1
      16: invokevirtual #8                  // Method com/google/javascript/jscomp/NodeTraversal.getControlFlowGraph:()Lcom/google/javascript/jscomp/ControlFlowGraph;
      19: invokespecial #9                  // Method fastAllPathsReturnCheck:(Lcom/google/javascript/jscomp/ControlFlowGraph;)Z
      22: ifeq          26
      25: return
      26: new           #10                 // class com/google/javascript/jscomp/CheckPathsBetweenNodes
      29: dup
      30: aload_1
      31: invokevirtual #8                  // Method com/google/javascript/jscomp/NodeTraversal.getControlFlowGraph:()Lcom/google/javascript/jscomp/ControlFlowGraph;
      34: aload_1
      35: invokevirtual #8                  // Method com/google/javascript/jscomp/NodeTraversal.getControlFlowGraph:()Lcom/google/javascript/jscomp/ControlFlowGraph;
      38: invokevirtual #11                 // Method com/google/javascript/jscomp/ControlFlowGraph.getEntry:()Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;
      41: aload_1
      42: invokevirtual #8                  // Method com/google/javascript/jscomp/NodeTraversal.getControlFlowGraph:()Lcom/google/javascript/jscomp/ControlFlowGraph;
      45: invokevirtual #12                 // Method com/google/javascript/jscomp/ControlFlowGraph.getImplicitReturn:()Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;
      48: getstatic     #13                 // Field IS_RETURN:Lcom/google/common/base/Predicate;
      51: getstatic     #14                 // Field GOES_THROUGH_TRUE_CONDITION_PREDICATE:Lcom/google/common/base/Predicate;
      54: invokespecial #15                 // Method com/google/javascript/jscomp/CheckPathsBetweenNodes."<init>":(Lcom/google/javascript/jscomp/graph/DiGraph;Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)V
      57: astore_3
      58: aload_3
      59: invokevirtual #16                 // Method com/google/javascript/jscomp/CheckPathsBetweenNodes.allPathsSatisfyPredicate:()Z
      62: ifne          98
      65: aload_0
      66: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      69: aload_1
      70: aload_1
      71: invokevirtual #6                  // Method com/google/javascript/jscomp/NodeTraversal.getScopeRoot:()Lcom/google/javascript/rhino/Node;
      74: aload_0
      75: getfield      #3                  // Field level:Lcom/google/javascript/jscomp/CheckLevel;
      78: getstatic     #17                 // Field MISSING_RETURN_STATEMENT:Lcom/google/javascript/jscomp/DiagnosticType;
      81: iconst_1
      82: anewarray     #18                 // class java/lang/String
      85: dup
      86: iconst_0
      87: aload_2
      88: invokevirtual #19                 // Method com/google/javascript/rhino/jstype/JSType.toString:()Ljava/lang/String;
      91: aastore
      92: invokevirtual #20                 // Method com/google/javascript/jscomp/NodeTraversal.makeError:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/CheckLevel;Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)Lcom/google/javascript/jscomp/JSError;
      95: invokevirtual #21                 // Method com/google/javascript/jscomp/AbstractCompiler.report:(Lcom/google/javascript/jscomp/JSError;)V
      98: return

  private boolean fastAllPathsReturnCheck(com.google.javascript.jscomp.ControlFlowGraph<com.google.javascript.rhino.Node>);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method com/google/javascript/jscomp/ControlFlowGraph.getImplicitReturn:()Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;
       4: invokeinterface #22,  1           // InterfaceMethod com/google/javascript/jscomp/graph/DiGraph$DiGraphNode.getInEdges:()Ljava/util/List;
       9: invokeinterface #23,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          77
      24: aload_2
      25: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #26                 // class com/google/javascript/jscomp/graph/DiGraph$DiGraphEdge
      33: astore_3
      34: aload_3
      35: invokeinterface #27,  1           // InterfaceMethod com/google/javascript/jscomp/graph/DiGraph$DiGraphEdge.getSource:()Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;
      40: invokeinterface #28,  1           // InterfaceMethod com/google/javascript/jscomp/graph/DiGraph$DiGraphNode.getValue:()Ljava/lang/Object;
      45: checkcast     #29                 // class com/google/javascript/rhino/Node
      48: astore        4
      50: aload         4
      52: invokevirtual #30                 // Method com/google/javascript/rhino/Node.isReturn:()Z
      55: ifne          74
      58: aload_0
      59: getfield      #5                  // Field convention:Lcom/google/javascript/jscomp/CodingConvention;
      62: aload         4
      64: invokeinterface #31,  2           // InterfaceMethod com/google/javascript/jscomp/CodingConvention.isFunctionCallThatAlwaysThrows:(Lcom/google/javascript/rhino/Node;)Z
      69: ifne          74
      72: iconst_0
      73: ireturn
      74: goto          15
      77: iconst_1
      78: ireturn

  public void exitScope(com.google.javascript.jscomp.NodeTraversal);
    Code:
       0: return

  public boolean shouldTraverse(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: iconst_1
       1: ireturn

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: return

  private com.google.javascript.rhino.jstype.JSType explicitReturnExpected(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #32                 // Method com/google/javascript/rhino/Node.getJSType:()Lcom/google/javascript/rhino/jstype/JSType;
       4: invokestatic  #33                 // Method com/google/javascript/rhino/jstype/JSType.toMaybeFunctionType:(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/FunctionType;
       7: astore_2
       8: aload_2
       9: ifnonnull     14
      12: aconst_null
      13: areturn
      14: aload_1
      15: invokestatic  #34                 // Method isEmptyFunction:(Lcom/google/javascript/rhino/Node;)Z
      18: ifeq          23
      21: aconst_null
      22: areturn
      23: aload_2
      24: invokevirtual #35                 // Method com/google/javascript/rhino/jstype/FunctionType.isConstructor:()Z
      27: ifeq          32
      30: aconst_null
      31: areturn
      32: aload_2
      33: invokevirtual #36                 // Method com/google/javascript/rhino/jstype/FunctionType.getReturnType:()Lcom/google/javascript/rhino/jstype/JSType;
      36: astore_3
      37: aload_3
      38: ifnonnull     43
      41: aconst_null
      42: areturn
      43: aload_0
      44: aload_3
      45: invokespecial #37                 // Method isVoidOrUnknown:(Lcom/google/javascript/rhino/jstype/JSType;)Z
      48: ifne          53
      51: aload_3
      52: areturn
      53: aconst_null
      54: areturn

  private static boolean isEmptyFunction(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method com/google/javascript/rhino/Node.getChildCount:()I
       4: iconst_3
       5: if_icmpne     28
       8: aload_0
       9: invokevirtual #39                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      12: invokevirtual #40                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      15: invokevirtual #40                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      18: invokevirtual #41                 // Method com/google/javascript/rhino/Node.hasChildren:()Z
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  private boolean isVoidOrUnknown(com.google.javascript.rhino.jstype.JSType);
    Code:
       0: aload_0
       1: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: invokevirtual #42                 // Method com/google/javascript/jscomp/AbstractCompiler.getTypeRegistry:()Lcom/google/javascript/rhino/jstype/JSTypeRegistry;
       7: getstatic     #43                 // Field com/google/javascript/rhino/jstype/JSTypeNative.VOID_TYPE:Lcom/google/javascript/rhino/jstype/JSTypeNative;
      10: invokevirtual #44                 // Method com/google/javascript/rhino/jstype/JSTypeRegistry.getNativeType:(Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/JSType;
      13: astore_2
      14: aload_2
      15: aload_1
      16: invokevirtual #45                 // Method com/google/javascript/rhino/jstype/JSType.isSubtype:(Lcom/google/javascript/rhino/jstype/JSType;)Z
      19: ireturn

  static {};
    Code:
       0: ldc           #46                 // String JSC_MISSING_RETURN_STATEMENT
       2: ldc           #47                 // String Missing return statement. Function expected to return {0}.
       4: invokestatic  #48                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
       7: putstatic     #17                 // Field MISSING_RETURN_STATEMENT:Lcom/google/javascript/jscomp/DiagnosticType;
      10: new           #49                 // class com/google/javascript/jscomp/CheckMissingReturn$1
      13: dup
      14: invokespecial #50                 // Method com/google/javascript/jscomp/CheckMissingReturn$1."<init>":()V
      17: putstatic     #13                 // Field IS_RETURN:Lcom/google/common/base/Predicate;
      20: new           #51                 // class com/google/javascript/jscomp/CheckMissingReturn$2
      23: dup
      24: invokespecial #52                 // Method com/google/javascript/jscomp/CheckMissingReturn$2."<init>":()V
      27: putstatic     #14                 // Field GOES_THROUGH_TRUE_CONDITION_PREDICATE:Lcom/google/common/base/Predicate;
      30: return
}
