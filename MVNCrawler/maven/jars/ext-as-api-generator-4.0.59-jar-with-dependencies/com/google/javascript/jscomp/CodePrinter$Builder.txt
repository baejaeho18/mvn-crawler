Compiled from "CodePrinter.java"
public final class com.google.javascript.jscomp.CodePrinter$Builder {
  private final com.google.javascript.rhino.Node root;

  private com.google.javascript.jscomp.CompilerOptions options;

  private boolean outputTypes;

  private com.google.javascript.jscomp.SourceMap sourceMap;

  private boolean tagAsStrict;

  private com.google.javascript.rhino.jstype.JSTypeRegistry registry;

  public com.google.javascript.jscomp.CodePrinter$Builder(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class com/google/javascript/jscomp/CompilerOptions
       8: dup
       9: invokespecial #3                  // Method com/google/javascript/jscomp/CompilerOptions."<init>":()V
      12: putfield      #4                  // Field options:Lcom/google/javascript/jscomp/CompilerOptions;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field outputTypes:Z
      20: aload_0
      21: aconst_null
      22: putfield      #6                  // Field sourceMap:Lcom/google/javascript/jscomp/SourceMap;
      25: aload_0
      26: aload_1
      27: putfield      #7                  // Field root:Lcom/google/javascript/rhino/Node;
      30: return

  public com.google.javascript.jscomp.CodePrinter$Builder setCompilerOptions(com.google.javascript.jscomp.CompilerOptions);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method com/google/javascript/jscomp/CompilerOptions.clone:()Ljava/lang/Object;
       5: checkcast     #2                  // class com/google/javascript/jscomp/CompilerOptions
       8: putfield      #4                  // Field options:Lcom/google/javascript/jscomp/CompilerOptions;
      11: goto          20
      14: astore_2
      15: aload_2
      16: invokestatic  #10                 // Method com/google/common/base/Throwables.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      19: athrow
      20: aload_0
      21: areturn
    Exception table:
       from    to  target type
           0    11    14   Class java/lang/CloneNotSupportedException

  public com.google.javascript.jscomp.CodePrinter$Builder setTypeRegistry(com.google.javascript.rhino.jstype.JSTypeRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field registry:Lcom/google/javascript/rhino/jstype/JSTypeRegistry;
       5: aload_0
       6: areturn

  public com.google.javascript.jscomp.CodePrinter$Builder setPrettyPrint(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:Lcom/google/javascript/jscomp/CompilerOptions;
       4: iload_1
       5: invokevirtual #12                 // Method com/google/javascript/jscomp/CompilerOptions.setPrettyPrint:(Z)V
       8: aload_0
       9: areturn

  public com.google.javascript.jscomp.CodePrinter$Builder setLineBreak(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:Lcom/google/javascript/jscomp/CompilerOptions;
       4: iload_1
       5: invokevirtual #13                 // Method com/google/javascript/jscomp/CompilerOptions.setLineBreak:(Z)V
       8: aload_0
       9: areturn

  public com.google.javascript.jscomp.CodePrinter$Builder setOutputTypes(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field outputTypes:Z
       5: aload_0
       6: areturn

  public com.google.javascript.jscomp.CodePrinter$Builder setSourceMap(com.google.javascript.jscomp.SourceMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field sourceMap:Lcom/google/javascript/jscomp/SourceMap;
       5: aload_0
       6: areturn

  public com.google.javascript.jscomp.CodePrinter$Builder setTagAsStrict(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field tagAsStrict:Z
       5: aload_0
       6: areturn

  public java.lang.String build();
    Code:
       0: aload_0
       1: getfield      #7                  // Field root:Lcom/google/javascript/rhino/Node;
       4: ifnonnull     17
       7: new           #15                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #16                 // String Cannot build without root node being specified
      13: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #7                  // Field root:Lcom/google/javascript/rhino/Node;
      21: aload_0
      22: getfield      #4                  // Field options:Lcom/google/javascript/jscomp/CompilerOptions;
      25: aload_0
      26: getfield      #5                  // Field outputTypes:Z
      29: invokestatic  #18                 // Method com/google/javascript/jscomp/CodePrinter$Format.fromOptions:(Lcom/google/javascript/jscomp/CompilerOptions;Z)Lcom/google/javascript/jscomp/CodePrinter$Format;
      32: aload_0
      33: getfield      #4                  // Field options:Lcom/google/javascript/jscomp/CompilerOptions;
      36: aload_0
      37: getfield      #11                 // Field registry:Lcom/google/javascript/rhino/jstype/JSTypeRegistry;
      40: aload_0
      41: getfield      #6                  // Field sourceMap:Lcom/google/javascript/jscomp/SourceMap;
      44: aload_0
      45: getfield      #14                 // Field tagAsStrict:Z
      48: invokestatic  #19                 // Method com/google/javascript/jscomp/CodePrinter.access$100:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/CodePrinter$Format;Lcom/google/javascript/jscomp/CompilerOptions;Lcom/google/javascript/rhino/jstype/JSTypeRegistry;Lcom/google/javascript/jscomp/SourceMap;Z)Ljava/lang/String;
      51: areturn
}
