Compiled from "FlowSensitiveInlineVariables.java"
class com.google.javascript.jscomp.FlowSensitiveInlineVariables extends com.google.javascript.jscomp.NodeTraversal$AbstractPostOrderCallback implements com.google.javascript.jscomp.CompilerPass,com.google.javascript.jscomp.NodeTraversal$ScopedCallback {
  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  private final java.util.Set<com.google.javascript.jscomp.Scope$Var> inlinedNewDependencies;

  private com.google.javascript.jscomp.ControlFlowGraph<com.google.javascript.rhino.Node> cfg;

  private java.util.List<com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate> candidates;

  private com.google.javascript.jscomp.MustBeReachingVariableDef reachingDef;

  private com.google.javascript.jscomp.MaybeReachingVariableUse reachingUses;

  private static final com.google.common.base.Predicate<com.google.javascript.rhino.Node> SIDE_EFFECT_PREDICATE;

  public com.google.javascript.jscomp.FlowSensitiveInlineVariables(com.google.javascript.jscomp.AbstractCompiler);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method com/google/javascript/jscomp/NodeTraversal$AbstractPostOrderCallback."<init>":()V
       4: aload_0
       5: invokestatic  #11                 // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
       8: putfield      #5                  // Field inlinedNewDependencies:Ljava/util/Set;
      11: aload_0
      12: aload_1
      13: putfield      #8                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      16: return

  public void enterScope(com.google.javascript.jscomp.NodeTraversal);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method com/google/javascript/jscomp/NodeTraversal.inGlobalScope:()Z
       4: ifeq          8
       7: return
       8: bipush        100
      10: aload_1
      11: invokevirtual #14                 // Method com/google/javascript/jscomp/NodeTraversal.getScope:()Lcom/google/javascript/jscomp/Scope;
      14: invokevirtual #15                 // Method com/google/javascript/jscomp/Scope.getVarCount:()I
      17: if_icmpge     21
      20: return
      21: new           #16                 // class com/google/javascript/jscomp/ControlFlowAnalysis
      24: dup
      25: aload_0
      26: getfield      #8                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      29: iconst_0
      30: iconst_1
      31: invokespecial #17                 // Method com/google/javascript/jscomp/ControlFlowAnalysis."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;ZZ)V
      34: astore_2
      35: aload_1
      36: invokevirtual #18                 // Method com/google/javascript/jscomp/NodeTraversal.getScopeRoot:()Lcom/google/javascript/rhino/Node;
      39: invokevirtual #19                 // Method com/google/javascript/rhino/Node.isFunction:()Z
      42: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      45: aload_2
      46: aconst_null
      47: aload_1
      48: invokevirtual #18                 // Method com/google/javascript/jscomp/NodeTraversal.getScopeRoot:()Lcom/google/javascript/rhino/Node;
      51: invokevirtual #21                 // Method com/google/javascript/rhino/Node.getLastChild:()Lcom/google/javascript/rhino/Node;
      54: invokevirtual #22                 // Method com/google/javascript/jscomp/ControlFlowAnalysis.process:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      57: aload_0
      58: aload_2
      59: invokevirtual #23                 // Method com/google/javascript/jscomp/ControlFlowAnalysis.getCfg:()Lcom/google/javascript/jscomp/ControlFlowGraph;
      62: putfield      #9                  // Field cfg:Lcom/google/javascript/jscomp/ControlFlowGraph;
      65: aload_0
      66: new           #24                 // class com/google/javascript/jscomp/MustBeReachingVariableDef
      69: dup
      70: aload_0
      71: getfield      #9                  // Field cfg:Lcom/google/javascript/jscomp/ControlFlowGraph;
      74: aload_1
      75: invokevirtual #14                 // Method com/google/javascript/jscomp/NodeTraversal.getScope:()Lcom/google/javascript/jscomp/Scope;
      78: aload_0
      79: getfield      #8                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      82: invokespecial #25                 // Method com/google/javascript/jscomp/MustBeReachingVariableDef."<init>":(Lcom/google/javascript/jscomp/ControlFlowGraph;Lcom/google/javascript/jscomp/Scope;Lcom/google/javascript/jscomp/AbstractCompiler;)V
      85: putfield      #7                  // Field reachingDef:Lcom/google/javascript/jscomp/MustBeReachingVariableDef;
      88: aload_0
      89: getfield      #7                  // Field reachingDef:Lcom/google/javascript/jscomp/MustBeReachingVariableDef;
      92: invokevirtual #26                 // Method com/google/javascript/jscomp/MustBeReachingVariableDef.analyze:()V
      95: aload_0
      96: invokestatic  #27                 // Method com/google/common/collect/Lists.newLinkedList:()Ljava/util/LinkedList;
      99: putfield      #6                  // Field candidates:Ljava/util/List;
     102: new           #28                 // class com/google/javascript/jscomp/NodeTraversal
     105: dup
     106: aload_0
     107: getfield      #8                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
     110: new           #29                 // class com/google/javascript/jscomp/FlowSensitiveInlineVariables$GatherCandiates
     113: dup
     114: aload_0
     115: aconst_null
     116: invokespecial #30                 // Method com/google/javascript/jscomp/FlowSensitiveInlineVariables$GatherCandiates."<init>":(Lcom/google/javascript/jscomp/FlowSensitiveInlineVariables;Lcom/google/javascript/jscomp/FlowSensitiveInlineVariables$1;)V
     119: invokespecial #31                 // Method com/google/javascript/jscomp/NodeTraversal."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
     122: aload_1
     123: invokevirtual #18                 // Method com/google/javascript/jscomp/NodeTraversal.getScopeRoot:()Lcom/google/javascript/rhino/Node;
     126: invokevirtual #21                 // Method com/google/javascript/rhino/Node.getLastChild:()Lcom/google/javascript/rhino/Node;
     129: invokevirtual #32                 // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/rhino/Node;)V
     132: aload_0
     133: new           #33                 // class com/google/javascript/jscomp/MaybeReachingVariableUse
     136: dup
     137: aload_0
     138: getfield      #9                  // Field cfg:Lcom/google/javascript/jscomp/ControlFlowGraph;
     141: aload_1
     142: invokevirtual #14                 // Method com/google/javascript/jscomp/NodeTraversal.getScope:()Lcom/google/javascript/jscomp/Scope;
     145: aload_0
     146: getfield      #8                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
     149: invokespecial #34                 // Method com/google/javascript/jscomp/MaybeReachingVariableUse."<init>":(Lcom/google/javascript/jscomp/ControlFlowGraph;Lcom/google/javascript/jscomp/Scope;Lcom/google/javascript/jscomp/AbstractCompiler;)V
     152: putfield      #1                  // Field reachingUses:Lcom/google/javascript/jscomp/MaybeReachingVariableUse;
     155: aload_0
     156: getfield      #1                  // Field reachingUses:Lcom/google/javascript/jscomp/MaybeReachingVariableUse;
     159: invokevirtual #35                 // Method com/google/javascript/jscomp/MaybeReachingVariableUse.analyze:()V
     162: aload_0
     163: getfield      #6                  // Field candidates:Ljava/util/List;
     166: invokeinterface #36,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     171: astore_3
     172: aload_3
     173: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     178: ifeq          250
     181: aload_3
     182: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     187: checkcast     #39                 // class com/google/javascript/jscomp/FlowSensitiveInlineVariables$Candidate
     190: astore        4
     192: aload         4
     194: aload_1
     195: invokevirtual #14                 // Method com/google/javascript/jscomp/NodeTraversal.getScope:()Lcom/google/javascript/jscomp/Scope;
     198: invokestatic  #40                 // Method com/google/javascript/jscomp/FlowSensitiveInlineVariables$Candidate.access$100:(Lcom/google/javascript/jscomp/FlowSensitiveInlineVariables$Candidate;Lcom/google/javascript/jscomp/Scope;)Z
     201: ifeq          247
     204: aload         4
     206: invokestatic  #41                 // Method com/google/javascript/jscomp/FlowSensitiveInlineVariables$Candidate.access$200:(Lcom/google/javascript/jscomp/FlowSensitiveInlineVariables$Candidate;)V
     209: aload         4
     211: invokestatic  #42                 // Method com/google/javascript/jscomp/FlowSensitiveInlineVariables$Candidate.access$300:(Lcom/google/javascript/jscomp/FlowSensitiveInlineVariables$Candidate;)Lcom/google/javascript/jscomp/MustBeReachingVariableDef$Definition;
     214: getfield      #43                 // Field com/google/javascript/jscomp/MustBeReachingVariableDef$Definition.depends:Ljava/util/Set;
     217: invokeinterface #44,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     222: ifne          247
     225: aload_0
     226: getfield      #5                  // Field inlinedNewDependencies:Ljava/util/Set;
     229: aload_1
     230: invokevirtual #14                 // Method com/google/javascript/jscomp/NodeTraversal.getScope:()Lcom/google/javascript/jscomp/Scope;
     233: aload         4
     235: invokestatic  #45                 // Method com/google/javascript/jscomp/FlowSensitiveInlineVariables$Candidate.access$400:(Lcom/google/javascript/jscomp/FlowSensitiveInlineVariables$Candidate;)Ljava/lang/String;
     238: invokevirtual #46                 // Method com/google/javascript/jscomp/Scope.getVar:(Ljava/lang/String;)Lcom/google/javascript/jscomp/Scope$Var;
     241: invokeinterface #47,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     246: pop
     247: goto          172
     250: return

  public void exitScope(com.google.javascript.jscomp.NodeTraversal);
    Code:
       0: return

  public void process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: new           #28                 // class com/google/javascript/jscomp/NodeTraversal
       3: dup
       4: aload_0
       5: getfield      #8                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       8: aload_0
       9: invokespecial #31                 // Method com/google/javascript/jscomp/NodeTraversal."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      12: iconst_2
      13: anewarray     #48                 // class com/google/javascript/rhino/Node
      16: dup
      17: iconst_0
      18: aload_1
      19: aastore
      20: dup
      21: iconst_1
      22: aload_2
      23: aastore
      24: invokevirtual #49                 // Method com/google/javascript/jscomp/NodeTraversal.traverseRoots:([Lcom/google/javascript/rhino/Node;)V
      27: return

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: return

  private static boolean checkRightOf(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.common.base.Predicate<com.google.javascript.rhino.Node>);
    Code:
       0: aload_0
       1: astore_3
       2: aload_3
       3: aload_1
       4: if_acmpeq     49
       7: aload_3
       8: invokevirtual #50                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      11: astore        4
      13: aload         4
      15: ifnull        41
      18: aload_2
      19: aload         4
      21: invokeinterface #51,  2           // InterfaceMethod com/google/common/base/Predicate.apply:(Ljava/lang/Object;)Z
      26: ifeq          31
      29: iconst_1
      30: ireturn
      31: aload         4
      33: invokevirtual #50                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      36: astore        4
      38: goto          13
      41: aload_3
      42: invokevirtual #52                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      45: astore_3
      46: goto          2
      49: iconst_0
      50: ireturn

  private static boolean checkLeftOf(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.common.base.Predicate<com.google.javascript.rhino.Node>);
    Code:
       0: aload_0
       1: astore_3
       2: aload_3
       3: aload_1
       4: if_acmpeq     53
       7: aload_3
       8: invokevirtual #52                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      11: invokevirtual #53                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      14: astore        4
      16: aload         4
      18: aload_3
      19: if_acmpeq     45
      22: aload_2
      23: aload         4
      25: invokeinterface #51,  2           // InterfaceMethod com/google/common/base/Predicate.apply:(Ljava/lang/Object;)Z
      30: ifeq          35
      33: iconst_1
      34: ireturn
      35: aload         4
      37: invokevirtual #50                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      40: astore        4
      42: goto          16
      45: aload_3
      46: invokevirtual #52                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      49: astore_3
      50: goto          2
      53: iconst_0
      54: ireturn

  static com.google.javascript.jscomp.ControlFlowGraph access$500(com.google.javascript.jscomp.FlowSensitiveInlineVariables);
    Code:
       0: aload_0
       1: getfield      #9                  // Field cfg:Lcom/google/javascript/jscomp/ControlFlowGraph;
       4: areturn

  static com.google.javascript.jscomp.AbstractCompiler access$600(com.google.javascript.jscomp.FlowSensitiveInlineVariables);
    Code:
       0: aload_0
       1: getfield      #8                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: areturn

  static com.google.javascript.jscomp.MustBeReachingVariableDef access$700(com.google.javascript.jscomp.FlowSensitiveInlineVariables);
    Code:
       0: aload_0
       1: getfield      #7                  // Field reachingDef:Lcom/google/javascript/jscomp/MustBeReachingVariableDef;
       4: areturn

  static java.util.List access$800(com.google.javascript.jscomp.FlowSensitiveInlineVariables);
    Code:
       0: aload_0
       1: getfield      #6                  // Field candidates:Ljava/util/List;
       4: areturn

  static java.util.Set access$900(com.google.javascript.jscomp.FlowSensitiveInlineVariables);
    Code:
       0: aload_0
       1: getfield      #5                  // Field inlinedNewDependencies:Ljava/util/Set;
       4: areturn

  static com.google.common.base.Predicate access$1000();
    Code:
       0: getstatic     #4                  // Field SIDE_EFFECT_PREDICATE:Lcom/google/common/base/Predicate;
       3: areturn

  static boolean access$1100(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.common.base.Predicate);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #3                  // Method checkRightOf:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/common/base/Predicate;)Z
       6: ireturn

  static boolean access$1200(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.common.base.Predicate);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2                  // Method checkLeftOf:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/common/base/Predicate;)Z
       6: ireturn

  static com.google.javascript.jscomp.MaybeReachingVariableUse access$1300(com.google.javascript.jscomp.FlowSensitiveInlineVariables);
    Code:
       0: aload_0
       1: getfield      #1                  // Field reachingUses:Lcom/google/javascript/jscomp/MaybeReachingVariableUse;
       4: areturn

  static {};
    Code:
       0: new           #54                 // class com/google/javascript/jscomp/FlowSensitiveInlineVariables$1
       3: dup
       4: invokespecial #55                 // Method com/google/javascript/jscomp/FlowSensitiveInlineVariables$1."<init>":()V
       7: putstatic     #4                  // Field SIDE_EFFECT_PREDICATE:Lcom/google/common/base/Predicate;
      10: return
}
