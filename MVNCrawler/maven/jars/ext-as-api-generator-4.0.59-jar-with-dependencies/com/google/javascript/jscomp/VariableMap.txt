Compiled from "VariableMap.java"
public class com.google.javascript.jscomp.VariableMap {
  private final com.google.common.collect.ImmutableMap<java.lang.String, java.lang.String> map;

  private com.google.common.collect.ImmutableMap<java.lang.String, java.lang.String> reverseMap;

  private static final char SEPARATOR;

  private static final com.google.common.base.Splitter LINE_SPLITTER;

  com.google.javascript.jscomp.VariableMap(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field reverseMap:Lcom/google/common/collect/ImmutableMap;
       9: aload_0
      10: aload_1
      11: invokestatic  #3                  // Method com/google/common/collect/ImmutableMap.copyOf:(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;
      14: putfield      #4                  // Field map:Lcom/google/common/collect/ImmutableMap;
      17: return

  public java.lang.String lookupNewName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Lcom/google/common/collect/ImmutableMap;
       4: aload_1
       5: invokevirtual #5                  // Method com/google/common/collect/ImmutableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #6                  // class java/lang/String
      11: areturn

  public java.lang.String lookupSourceName(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method initReverseMap:()V
       4: aload_0
       5: getfield      #2                  // Field reverseMap:Lcom/google/common/collect/ImmutableMap;
       8: aload_1
       9: invokevirtual #5                  // Method com/google/common/collect/ImmutableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #6                  // class java/lang/String
      15: areturn

  private synchronized void initReverseMap();
    Code:
       0: aload_0
       1: getfield      #2                  // Field reverseMap:Lcom/google/common/collect/ImmutableMap;
       4: ifnonnull     69
       7: invokestatic  #8                  // Method com/google/common/collect/ImmutableMap.builder:()Lcom/google/common/collect/ImmutableMap$Builder;
      10: astore_1
      11: aload_0
      12: getfield      #4                  // Field map:Lcom/google/common/collect/ImmutableMap;
      15: invokevirtual #9                  // Method com/google/common/collect/ImmutableMap.entrySet:()Lcom/google/common/collect/ImmutableSet;
      18: invokevirtual #10                 // Method com/google/common/collect/ImmutableSet.iterator:()Lcom/google/common/collect/UnmodifiableIterator;
      21: astore_2
      22: aload_2
      23: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          61
      31: aload_2
      32: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #13                 // class java/util/Map$Entry
      40: astore_3
      41: aload_1
      42: aload_3
      43: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      48: aload_3
      49: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      54: invokevirtual #16                 // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
      57: pop
      58: goto          22
      61: aload_0
      62: aload_1
      63: invokevirtual #17                 // Method com/google/common/collect/ImmutableMap$Builder.build:()Lcom/google/common/collect/ImmutableMap;
      66: putfield      #2                  // Field reverseMap:Lcom/google/common/collect/ImmutableMap;
      69: return

  public java.util.Map<java.lang.String, java.lang.String> getOriginalNameToNewNameMap();
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Lcom/google/common/collect/ImmutableMap;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.String> getNewNameToOriginalNameMap();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method initReverseMap:()V
       4: aload_0
       5: getfield      #2                  // Field reverseMap:Lcom/google/common/collect/ImmutableMap;
       8: areturn

  public void save(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method toBytes:()[B
       4: new           #19                 // class java/io/File
       7: dup
       8: aload_1
       9: invokespecial #20                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      12: invokestatic  #21                 // Method com/google/common/io/Files.write:([BLjava/io/File;)V
      15: return

  public static com.google.javascript.jscomp.VariableMap load(java.lang.String) throws java.io.IOException;
    Code:
       0: new           #19                 // class java/io/File
       3: dup
       4: aload_0
       5: invokespecial #20                 // Method java/io/File."<init>":(Ljava/lang/String;)V
       8: invokestatic  #22                 // Method com/google/common/io/Files.toByteArray:(Ljava/io/File;)[B
      11: invokestatic  #23                 // Method fromBytes:([B)Lcom/google/javascript/jscomp/VariableMap;
      14: areturn
      15: astore_1
      16: new           #25                 // class java/io/IOException
      19: dup
      20: aload_1
      21: invokespecial #26                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      24: athrow
    Exception table:
       from    to  target type
           0    14    15   Class java/text/ParseException

  public byte[] toBytes();
    Code:
       0: new           #27                 // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #28                 // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_1
       8: new           #29                 // class java/io/OutputStreamWriter
      11: dup
      12: aload_1
      13: getstatic     #30                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      16: invokespecial #31                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
      19: astore_2
      20: aload_0
      21: getfield      #4                  // Field map:Lcom/google/common/collect/ImmutableMap;
      24: invokevirtual #9                  // Method com/google/common/collect/ImmutableMap.entrySet:()Lcom/google/common/collect/ImmutableSet;
      27: invokevirtual #10                 // Method com/google/common/collect/ImmutableSet.iterator:()Lcom/google/common/collect/UnmodifiableIterator;
      30: astore_3
      31: aload_3
      32: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          100
      40: aload_3
      41: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #13                 // class java/util/Map$Entry
      49: astore        4
      51: aload_2
      52: aload         4
      54: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      59: checkcast     #6                  // class java/lang/String
      62: invokestatic  #32                 // Method escape:(Ljava/lang/String;)Ljava/lang/String;
      65: invokevirtual #33                 // Method java/io/Writer.write:(Ljava/lang/String;)V
      68: aload_2
      69: bipush        58
      71: invokevirtual #35                 // Method java/io/Writer.write:(I)V
      74: aload_2
      75: aload         4
      77: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      82: checkcast     #6                  // class java/lang/String
      85: invokestatic  #32                 // Method escape:(Ljava/lang/String;)Ljava/lang/String;
      88: invokevirtual #33                 // Method java/io/Writer.write:(Ljava/lang/String;)V
      91: aload_2
      92: bipush        10
      94: invokevirtual #35                 // Method java/io/Writer.write:(I)V
      97: goto          31
     100: aload_2
     101: invokevirtual #36                 // Method java/io/Writer.close:()V
     104: goto          117
     107: astore_3
     108: new           #37                 // class java/lang/RuntimeException
     111: dup
     112: aload_3
     113: invokespecial #38                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     116: athrow
     117: aload_1
     118: invokevirtual #39                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     121: areturn
    Exception table:
       from    to  target type
          20   104   107   Class java/io/IOException

  public static com.google.javascript.jscomp.VariableMap fromBytes(byte[]) throws java.text.ParseException;
    Code:
       0: getstatic     #40                 // Field LINE_SPLITTER:Lcom/google/common/base/Splitter;
       3: new           #6                  // class java/lang/String
       6: dup
       7: aload_0
       8: getstatic     #30                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      11: invokespecial #41                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      14: invokevirtual #42                 // Method com/google/common/base/Splitter.split:(Ljava/lang/CharSequence;)Ljava/lang/Iterable;
      17: astore_1
      18: invokestatic  #8                  // Method com/google/common/collect/ImmutableMap.builder:()Lcom/google/common/collect/ImmutableMap$Builder;
      21: astore_2
      22: aload_1
      23: invokeinterface #43,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      28: astore_3
      29: aload_3
      30: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          135
      38: aload_3
      39: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #6                  // class java/lang/String
      47: astore        4
      49: aload         4
      51: bipush        58
      53: invokestatic  #44                 // Method findIndexOfChar:(Ljava/lang/String;C)I
      56: istore        5
      58: iload         5
      60: ifle          75
      63: iload         5
      65: aload         4
      67: invokevirtual #45                 // Method java/lang/String.length:()I
      70: iconst_1
      71: isub
      72: if_icmpne     104
      75: new           #24                 // class java/text/ParseException
      78: dup
      79: new           #46                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
      86: ldc           #48                 // String Bad line:
      88: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload         4
      93: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: iconst_0
     100: invokespecial #51                 // Method java/text/ParseException."<init>":(Ljava/lang/String;I)V
     103: athrow
     104: aload_2
     105: aload         4
     107: iconst_0
     108: iload         5
     110: invokevirtual #52                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     113: invokestatic  #53                 // Method unescape:(Ljava/lang/CharSequence;)Ljava/lang/String;
     116: aload         4
     118: iload         5
     120: iconst_1
     121: iadd
     122: invokevirtual #54                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     125: invokestatic  #53                 // Method unescape:(Ljava/lang/CharSequence;)Ljava/lang/String;
     128: invokevirtual #16                 // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
     131: pop
     132: goto          29
     135: new           #34                 // class com/google/javascript/jscomp/VariableMap
     138: dup
     139: aload_2
     140: invokevirtual #17                 // Method com/google/common/collect/ImmutableMap$Builder.build:()Lcom/google/common/collect/ImmutableMap;
     143: invokespecial #55                 // Method "<init>":(Ljava/util/Map;)V
     146: areturn

  private static java.lang.String escape(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #56                 // String \\
       3: ldc           #57                 // String \\\\
       5: invokevirtual #58                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
       8: ldc           #59                 // String :
      10: ldc           #60                 // String \\:
      12: invokevirtual #58                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      15: ldc           #61                 // String \n
      17: ldc           #62                 // String \\n
      19: invokevirtual #58                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      22: areturn

  private static int findIndexOfChar(java.lang.String, char);
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method java/lang/String.length:()I
       4: istore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_2
       9: if_icmpge     58
      12: aload_0
      13: iload_3
      14: invokevirtual #63                 // Method java/lang/String.charAt:(I)C
      17: istore        4
      19: iload         4
      21: bipush        92
      23: if_icmpne     44
      26: iinc          3, 1
      29: iload_3
      30: iload_2
      31: if_icmpge     44
      34: aload_0
      35: iload_3
      36: invokevirtual #63                 // Method java/lang/String.charAt:(I)C
      39: istore        4
      41: goto          52
      44: iload         4
      46: iload_1
      47: if_icmpne     52
      50: iload_3
      51: ireturn
      52: iinc          3, 1
      55: goto          7
      58: iconst_m1
      59: ireturn

  private static java.lang.String unescape(java.lang.CharSequence);
    Code:
       0: new           #46                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #64,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      14: istore_2
      15: iconst_0
      16: istore_3
      17: iload_3
      18: iload_2
      19: if_icmpge     68
      22: aload_0
      23: iload_3
      24: invokeinterface #65,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      29: istore        4
      31: iload         4
      33: bipush        92
      35: if_icmpne     55
      38: iinc          3, 1
      41: iload_3
      42: iload_2
      43: if_icmpge     55
      46: aload_0
      47: iload_3
      48: invokeinterface #65,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      53: istore        4
      55: aload_1
      56: iload         4
      58: invokevirtual #66                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      61: pop
      62: iinc          3, 1
      65: goto          17
      68: aload_1
      69: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: areturn

  public static com.google.javascript.jscomp.VariableMap fromMap(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: new           #34                 // class com/google/javascript/jscomp/VariableMap
       3: dup
       4: aload_0
       5: invokespecial #55                 // Method "<init>":(Ljava/util/Map;)V
       8: areturn

  java.util.Map<java.lang.String, java.lang.String> toMap();
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Lcom/google/common/collect/ImmutableMap;
       4: areturn

  static {};
    Code:
       0: ldc           #67                 // String \\r?\\n
       2: invokestatic  #68                 // Method com/google/common/base/Splitter.onPattern:(Ljava/lang/String;)Lcom/google/common/base/Splitter;
       5: invokevirtual #69                 // Method com/google/common/base/Splitter.omitEmptyStrings:()Lcom/google/common/base/Splitter;
       8: putstatic     #40                 // Field LINE_SPLITTER:Lcom/google/common/base/Splitter;
      11: return
}
