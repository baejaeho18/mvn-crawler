Compiled from "GlobalNamespace.java"
class com.google.javascript.jscomp.GlobalNamespace implements com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>, com.google.javascript.rhino.jstype.StaticSymbolTable<com.google.javascript.jscomp.GlobalNamespace$Name, com.google.javascript.jscomp.GlobalNamespace$Ref> {
  private com.google.javascript.jscomp.AbstractCompiler compiler;

  private final com.google.javascript.rhino.Node root;

  private final com.google.javascript.rhino.Node externsRoot;

  private boolean inExterns;

  private com.google.javascript.jscomp.Scope externsScope;

  private boolean generated;

  private int currentPreOrderIndex;

  private java.util.List<com.google.javascript.jscomp.GlobalNamespace$Name> globalNames;

  private java.util.Map<java.lang.String, com.google.javascript.jscomp.GlobalNamespace$Name> nameMap;

  com.google.javascript.jscomp.GlobalNamespace(com.google.javascript.jscomp.AbstractCompiler, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokespecial #10                 // Method "<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
       7: return

  com.google.javascript.jscomp.GlobalNamespace(com.google.javascript.jscomp.AbstractCompiler, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #12                 // Field generated:Z
       9: aload_0
      10: iconst_0
      11: putfield      #5                  // Field currentPreOrderIndex:I
      14: aload_0
      15: new           #13                 // class java/util/ArrayList
      18: dup
      19: invokespecial #14                 // Method java/util/ArrayList."<init>":()V
      22: putfield      #1                  // Field globalNames:Ljava/util/List;
      25: aload_0
      26: new           #15                 // class java/util/HashMap
      29: dup
      30: invokespecial #16                 // Method java/util/HashMap."<init>":()V
      33: putfield      #3                  // Field nameMap:Ljava/util/Map;
      36: aload_0
      37: aload_1
      38: putfield      #4                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      41: aload_0
      42: aload_2
      43: putfield      #9                  // Field externsRoot:Lcom/google/javascript/rhino/Node;
      46: aload_0
      47: aload_3
      48: putfield      #17                 // Field root:Lcom/google/javascript/rhino/Node;
      51: return

  boolean hasExternsRoot();
    Code:
       0: aload_0
       1: getfield      #9                  // Field externsRoot:Lcom/google/javascript/rhino/Node;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public com.google.javascript.rhino.Node getRootNode();
    Code:
       0: aload_0
       1: getfield      #17                 // Field root:Lcom/google/javascript/rhino/Node;
       4: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
       7: areturn

  public com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType> getParentScope();
    Code:
       0: aconst_null
       1: areturn

  public com.google.javascript.jscomp.GlobalNamespace$Name getSlot(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method getOwnSlot:(Ljava/lang/String;)Lcom/google/javascript/jscomp/GlobalNamespace$Name;
       5: areturn

  public com.google.javascript.jscomp.GlobalNamespace$Name getOwnSlot(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method ensureGenerated:()V
       4: aload_0
       5: getfield      #3                  // Field nameMap:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #22                 // class com/google/javascript/jscomp/GlobalNamespace$Name
      17: areturn

  public com.google.javascript.rhino.jstype.JSType getTypeOfThis();
    Code:
       0: aload_0
       1: getfield      #4                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: invokevirtual #23                 // Method com/google/javascript/jscomp/AbstractCompiler.getTypeRegistry:()Lcom/google/javascript/rhino/jstype/JSTypeRegistry;
       7: getstatic     #24                 // Field com/google/javascript/rhino/jstype/JSTypeNative.GLOBAL_THIS:Lcom/google/javascript/rhino/jstype/JSTypeNative;
      10: invokevirtual #25                 // Method com/google/javascript/rhino/jstype/JSTypeRegistry.getNativeObjectType:(Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/ObjectType;
      13: areturn

  public java.lang.Iterable<com.google.javascript.jscomp.GlobalNamespace$Ref> getReferences(com.google.javascript.jscomp.GlobalNamespace$Name);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method ensureGenerated:()V
       4: aload_1
       5: invokevirtual #26                 // Method com/google/javascript/jscomp/GlobalNamespace$Name.getRefs:()Ljava/util/List;
       8: invokestatic  #27                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      11: areturn

  public com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType> getScope(com.google.javascript.jscomp.GlobalNamespace$Name);
    Code:
       0: aload_0
       1: areturn

  public java.lang.Iterable<com.google.javascript.jscomp.GlobalNamespace$Name> getAllSymbols();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method ensureGenerated:()V
       4: aload_0
       5: invokevirtual #28                 // Method getNameIndex:()Ljava/util/Map;
       8: invokeinterface #29,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      13: invokestatic  #30                 // Method java/util/Collections.unmodifiableCollection:(Ljava/util/Collection;)Ljava/util/Collection;
      16: areturn

  private void ensureGenerated();
    Code:
       0: aload_0
       1: getfield      #12                 // Field generated:Z
       4: ifne          11
       7: aload_0
       8: invokespecial #31                 // Method process:()V
      11: return

  java.util.List<com.google.javascript.jscomp.GlobalNamespace$Name> getNameForest();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method ensureGenerated:()V
       4: aload_0
       5: getfield      #1                  // Field globalNames:Ljava/util/List;
       8: areturn

  java.util.Map<java.lang.String, com.google.javascript.jscomp.GlobalNamespace$Name> getNameIndex();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method ensureGenerated:()V
       4: aload_0
       5: getfield      #3                  // Field nameMap:Ljava/util/Map;
       8: areturn

  void scanNewNodes(java.util.List<com.google.javascript.jscomp.GlobalNamespace$AstChange>);
    Code:
       0: new           #32                 // class com/google/javascript/jscomp/GlobalNamespace$BuildGlobalNamespace
       3: dup
       4: aload_0
       5: invokespecial #33                 // Method com/google/javascript/jscomp/GlobalNamespace$BuildGlobalNamespace."<init>":(Lcom/google/javascript/jscomp/GlobalNamespace;)V
       8: astore_2
       9: aload_1
      10: invokeinterface #34,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      15: astore_3
      16: aload_3
      17: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          84
      25: aload_3
      26: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #37                 // class com/google/javascript/jscomp/GlobalNamespace$AstChange
      34: astore        4
      36: aload         4
      38: getfield      #38                 // Field com/google/javascript/jscomp/GlobalNamespace$AstChange.node:Lcom/google/javascript/rhino/Node;
      41: invokevirtual #39                 // Method com/google/javascript/rhino/Node.isQualifiedName:()Z
      44: ifne          61
      47: aload         4
      49: getfield      #38                 // Field com/google/javascript/jscomp/GlobalNamespace$AstChange.node:Lcom/google/javascript/rhino/Node;
      52: invokestatic  #40                 // Method com/google/javascript/jscomp/NodeUtil.isObjectLitKey:(Lcom/google/javascript/rhino/Node;)Z
      55: ifne          61
      58: goto          16
      61: aload_0
      62: aload_2
      63: aload         4
      65: getfield      #41                 // Field com/google/javascript/jscomp/GlobalNamespace$AstChange.module:Lcom/google/javascript/jscomp/JSModule;
      68: aload         4
      70: getfield      #42                 // Field com/google/javascript/jscomp/GlobalNamespace$AstChange.scope:Lcom/google/javascript/jscomp/Scope;
      73: aload         4
      75: getfield      #38                 // Field com/google/javascript/jscomp/GlobalNamespace$AstChange.node:Lcom/google/javascript/rhino/Node;
      78: invokespecial #43                 // Method scanFromNode:(Lcom/google/javascript/jscomp/GlobalNamespace$BuildGlobalNamespace;Lcom/google/javascript/jscomp/JSModule;Lcom/google/javascript/jscomp/Scope;Lcom/google/javascript/rhino/Node;)V
      81: goto          16
      84: return

  private void scanFromNode(com.google.javascript.jscomp.GlobalNamespace$BuildGlobalNamespace, com.google.javascript.jscomp.JSModule, com.google.javascript.jscomp.Scope, com.google.javascript.rhino.Node);
    Code:
       0: aload         4
       2: invokevirtual #44                 // Method com/google/javascript/rhino/Node.isName:()Z
       5: ifne          16
       8: aload         4
      10: invokevirtual #45                 // Method com/google/javascript/rhino/Node.isGetProp:()Z
      13: ifeq          28
      16: aload_0
      17: aload_1
      18: aload_2
      19: aload_3
      20: aload         4
      22: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      25: invokespecial #43                 // Method scanFromNode:(Lcom/google/javascript/jscomp/GlobalNamespace$BuildGlobalNamespace;Lcom/google/javascript/jscomp/JSModule;Lcom/google/javascript/jscomp/Scope;Lcom/google/javascript/rhino/Node;)V
      28: aload_1
      29: aload_2
      30: aload_3
      31: aload         4
      33: invokevirtual #46                 // Method com/google/javascript/jscomp/GlobalNamespace$BuildGlobalNamespace.collect:(Lcom/google/javascript/jscomp/JSModule;Lcom/google/javascript/jscomp/Scope;Lcom/google/javascript/rhino/Node;)V
      36: return

  private void process();
    Code:
       0: aload_0
       1: getfield      #9                  // Field externsRoot:Lcom/google/javascript/rhino/Node;
       4: ifnull        31
       7: aload_0
       8: iconst_1
       9: putfield      #2                  // Field inExterns:Z
      12: aload_0
      13: getfield      #4                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      16: aload_0
      17: getfield      #9                  // Field externsRoot:Lcom/google/javascript/rhino/Node;
      20: new           #32                 // class com/google/javascript/jscomp/GlobalNamespace$BuildGlobalNamespace
      23: dup
      24: aload_0
      25: invokespecial #33                 // Method com/google/javascript/jscomp/GlobalNamespace$BuildGlobalNamespace."<init>":(Lcom/google/javascript/jscomp/GlobalNamespace;)V
      28: invokestatic  #47                 // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      31: aload_0
      32: iconst_0
      33: putfield      #2                  // Field inExterns:Z
      36: aload_0
      37: getfield      #4                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      40: aload_0
      41: getfield      #17                 // Field root:Lcom/google/javascript/rhino/Node;
      44: new           #32                 // class com/google/javascript/jscomp/GlobalNamespace$BuildGlobalNamespace
      47: dup
      48: aload_0
      49: invokespecial #33                 // Method com/google/javascript/jscomp/GlobalNamespace$BuildGlobalNamespace."<init>":(Lcom/google/javascript/jscomp/GlobalNamespace;)V
      52: invokestatic  #47                 // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      55: aload_0
      56: iconst_1
      57: putfield      #12                 // Field generated:Z
      60: return

  private boolean isGlobalNameReference(java.lang.String, com.google.javascript.jscomp.Scope);
    Code:
       0: aload_1
       1: invokestatic  #48                 // Method getTopVarName:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_3
       5: aload_0
       6: aload_3
       7: aload_2
       8: invokespecial #49                 // Method isGlobalVarReference:(Ljava/lang/String;Lcom/google/javascript/jscomp/Scope;)Z
      11: ireturn

  private static java.lang.String getTopVarName(java.lang.String);
    Code:
       0: aload_0
       1: bipush        46
       3: invokevirtual #50                 // Method java/lang/String.indexOf:(I)I
       6: istore_1
       7: iload_1
       8: iconst_m1
       9: if_icmpne     16
      12: aload_0
      13: goto          22
      16: aload_0
      17: iconst_0
      18: iload_1
      19: invokevirtual #51                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      22: areturn

  private boolean isGlobalVarReference(java.lang.String, com.google.javascript.jscomp.Scope);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #52                 // Method com/google/javascript/jscomp/Scope.getVar:(Ljava/lang/String;)Lcom/google/javascript/jscomp/Scope$Var;
       5: astore_3
       6: aload_3
       7: ifnonnull     26
      10: aload_0
      11: getfield      #8                  // Field externsScope:Lcom/google/javascript/jscomp/Scope;
      14: ifnull        26
      17: aload_0
      18: getfield      #8                  // Field externsScope:Lcom/google/javascript/jscomp/Scope;
      21: aload_1
      22: invokevirtual #52                 // Method com/google/javascript/jscomp/Scope.getVar:(Ljava/lang/String;)Lcom/google/javascript/jscomp/Scope$Var;
      25: astore_3
      26: aload_3
      27: ifnull        41
      30: aload_3
      31: invokevirtual #53                 // Method com/google/javascript/jscomp/Scope$Var.isLocal:()Z
      34: ifne          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  private static boolean isGlobalScope(com.google.javascript.jscomp.Scope);
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method com/google/javascript/jscomp/Scope.getParent:()Lcom/google/javascript/jscomp/Scope;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.Object getTypeOfThis();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method getTypeOfThis:()Lcom/google/javascript/rhino/jstype/JSType;
       4: areturn

  public com.google.javascript.rhino.jstype.StaticSlot getOwnSlot(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method getOwnSlot:(Ljava/lang/String;)Lcom/google/javascript/jscomp/GlobalNamespace$Name;
       5: areturn

  public com.google.javascript.rhino.jstype.StaticSlot getSlot(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method getSlot:(Ljava/lang/String;)Lcom/google/javascript/jscomp/GlobalNamespace$Name;
       5: areturn

  public com.google.javascript.rhino.jstype.StaticScope getScope(com.google.javascript.rhino.jstype.StaticSlot);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class com/google/javascript/jscomp/GlobalNamespace$Name
       5: invokevirtual #57                 // Method getScope:(Lcom/google/javascript/jscomp/GlobalNamespace$Name;)Lcom/google/javascript/rhino/jstype/StaticScope;
       8: areturn

  public java.lang.Iterable getReferences(com.google.javascript.rhino.jstype.StaticSlot);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class com/google/javascript/jscomp/GlobalNamespace$Name
       5: invokevirtual #58                 // Method getReferences:(Lcom/google/javascript/jscomp/GlobalNamespace$Name;)Ljava/lang/Iterable;
       8: areturn

  static com.google.javascript.rhino.Node access$000(com.google.javascript.jscomp.GlobalNamespace);
    Code:
       0: aload_0
       1: getfield      #9                  // Field externsRoot:Lcom/google/javascript/rhino/Node;
       4: areturn

  static com.google.javascript.jscomp.Scope access$102(com.google.javascript.jscomp.GlobalNamespace, com.google.javascript.jscomp.Scope);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #8                  // Field externsScope:Lcom/google/javascript/jscomp/Scope;
       6: areturn

  static boolean access$200(com.google.javascript.jscomp.GlobalNamespace, java.lang.String, com.google.javascript.jscomp.Scope);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #7                  // Method isGlobalNameReference:(Ljava/lang/String;Lcom/google/javascript/jscomp/Scope;)Z
       6: ireturn

  static boolean access$300(com.google.javascript.jscomp.Scope);
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method isGlobalScope:(Lcom/google/javascript/jscomp/Scope;)Z
       4: ireturn

  static int access$408(com.google.javascript.jscomp.GlobalNamespace);
    Code:
       0: aload_0
       1: dup
       2: getfield      #5                  // Field currentPreOrderIndex:I
       5: dup_x1
       6: iconst_1
       7: iadd
       8: putfield      #5                  // Field currentPreOrderIndex:I
      11: ireturn

  static com.google.javascript.jscomp.AbstractCompiler access$500(com.google.javascript.jscomp.GlobalNamespace);
    Code:
       0: aload_0
       1: getfield      #4                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: areturn

  static java.util.Map access$600(com.google.javascript.jscomp.GlobalNamespace);
    Code:
       0: aload_0
       1: getfield      #3                  // Field nameMap:Ljava/util/Map;
       4: areturn

  static boolean access$700(com.google.javascript.jscomp.GlobalNamespace);
    Code:
       0: aload_0
       1: getfield      #2                  // Field inExterns:Z
       4: ireturn

  static java.util.List access$800(com.google.javascript.jscomp.GlobalNamespace);
    Code:
       0: aload_0
       1: getfield      #1                  // Field globalNames:Ljava/util/List;
       4: areturn
}
