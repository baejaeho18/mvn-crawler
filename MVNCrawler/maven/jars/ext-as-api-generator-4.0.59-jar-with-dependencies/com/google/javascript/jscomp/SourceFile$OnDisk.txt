Compiled from "SourceFile.java"
class com.google.javascript.jscomp.SourceFile$OnDisk extends com.google.javascript.jscomp.SourceFile {
  private static final long serialVersionUID;

  private final java.io.File file;

  private java.lang.String inputCharset;

  com.google.javascript.jscomp.SourceFile$OnDisk(java.io.File, java.lang.String, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method java/io/File.getPath:()Ljava/lang/String;
       5: invokespecial #2                  // Method com/google/javascript/jscomp/SourceFile."<init>":(Ljava/lang/String;)V
       8: aload_0
       9: getstatic     #3                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      12: invokevirtual #4                  // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      15: putfield      #5                  // Field inputCharset:Ljava/lang/String;
      18: aload_0
      19: aload_1
      20: putfield      #6                  // Field file:Ljava/io/File;
      23: aload_0
      24: aload_2
      25: invokespecial #7                  // Method com/google/javascript/jscomp/SourceFile.setOriginalPath:(Ljava/lang/String;)V
      28: aload_3
      29: ifnull        37
      32: aload_0
      33: aload_3
      34: invokevirtual #8                  // Method setCharset:(Ljava/nio/charset/Charset;)V
      37: return

  public synchronized java.lang.String getCode() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #9                  // Method com/google/javascript/jscomp/SourceFile.getCode:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     26
       9: aload_0
      10: getfield      #6                  // Field file:Ljava/io/File;
      13: aload_0
      14: invokevirtual #10                 // Method getCharset:()Ljava/nio/charset/Charset;
      17: invokestatic  #11                 // Method com/google/common/io/Files.toString:(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/lang/String;
      20: astore_1
      21: aload_0
      22: aload_1
      23: invokestatic  #12                 // Method com/google/javascript/jscomp/SourceFile.access$000:(Lcom/google/javascript/jscomp/SourceFile;Ljava/lang/String;)V
      26: aload_1
      27: areturn

  public java.io.Reader getCodeReader() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method hasSourceInMemory:()Z
       4: ifeq          12
       7: aload_0
       8: invokespecial #14                 // Method com/google/javascript/jscomp/SourceFile.getCodeReader:()Ljava/io/Reader;
      11: areturn
      12: aload_0
      13: getfield      #6                  // Field file:Ljava/io/File;
      16: getstatic     #3                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      19: invokestatic  #15                 // Method com/google/common/io/Files.newReader:(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/io/BufferedReader;
      22: areturn

  public void clearCachedSource();
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #12                 // Method com/google/javascript/jscomp/SourceFile.access$000:(Lcom/google/javascript/jscomp/SourceFile;Ljava/lang/String;)V
       5: return

  public void setCharset(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method java/nio/charset/Charset.name:()Ljava/lang/String;
       5: putfield      #5                  // Field inputCharset:Ljava/lang/String;
       8: return

  public java.nio.charset.Charset getCharset();
    Code:
       0: aload_0
       1: getfield      #5                  // Field inputCharset:Ljava/lang/String;
       4: invokestatic  #16                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       7: areturn
}
