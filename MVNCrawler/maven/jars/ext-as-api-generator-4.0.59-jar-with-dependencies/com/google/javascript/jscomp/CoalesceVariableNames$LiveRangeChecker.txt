Compiled from "CoalesceVariableNames.java"
class com.google.javascript.jscomp.CoalesceVariableNames$LiveRangeChecker extends com.google.javascript.jscomp.ControlFlowGraph$AbstractCfgNodeTraversalCallback {
  boolean defFound;

  boolean crossed;

  private final com.google.javascript.jscomp.Scope$Var def;

  private final com.google.javascript.jscomp.Scope$Var use;

  public com.google.javascript.jscomp.CoalesceVariableNames$LiveRangeChecker(com.google.javascript.jscomp.Scope$Var, com.google.javascript.jscomp.Scope$Var);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/javascript/jscomp/ControlFlowGraph$AbstractCfgNodeTraversalCallback."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field defFound:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field crossed:Z
      14: aload_0
      15: aload_1
      16: putfield      #4                  // Field def:Lcom/google/javascript/jscomp/Scope$Var;
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field use:Lcom/google/javascript/jscomp/Scope$Var;
      24: return

  com.google.javascript.jscomp.Scope$Var getDef();
    Code:
       0: aload_0
       1: getfield      #4                  // Field def:Lcom/google/javascript/jscomp/Scope$Var;
       4: areturn

  public static boolean shouldVisit(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method com/google/javascript/rhino/Node.isName:()Z
       4: ifne          24
       7: aload_0
       8: invokevirtual #7                  // Method com/google/javascript/rhino/Node.hasChildren:()Z
      11: ifeq          28
      14: aload_0
      15: invokevirtual #8                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      18: invokevirtual #6                  // Method com/google/javascript/rhino/Node.isName:()Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #2                  // Field defFound:Z
       4: ifne          24
       7: aload_0
       8: getfield      #4                  // Field def:Lcom/google/javascript/jscomp/Scope$Var;
      11: aload_2
      12: aload_3
      13: invokestatic  #9                  // Method isAssignTo:(Lcom/google/javascript/jscomp/Scope$Var;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z
      16: ifeq          24
      19: aload_0
      20: iconst_1
      21: putfield      #2                  // Field defFound:Z
      24: aload_0
      25: getfield      #2                  // Field defFound:Z
      28: ifeq          54
      31: aload_0
      32: getfield      #5                  // Field use:Lcom/google/javascript/jscomp/Scope$Var;
      35: ifnull        49
      38: aload_0
      39: getfield      #5                  // Field use:Lcom/google/javascript/jscomp/Scope$Var;
      42: aload_2
      43: invokestatic  #10                 // Method isReadFrom:(Lcom/google/javascript/jscomp/Scope$Var;Lcom/google/javascript/rhino/Node;)Z
      46: ifeq          54
      49: aload_0
      50: iconst_1
      51: putfield      #3                  // Field crossed:Z
      54: return

  private static boolean isAssignTo(com.google.javascript.jscomp.Scope$Var, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #6                  // Method com/google/javascript/rhino/Node.isName:()Z
       4: ifeq          48
       7: aload_0
       8: invokevirtual #11                 // Method com/google/javascript/jscomp/Scope$Var.getName:()Ljava/lang/String;
      11: aload_1
      12: invokevirtual #12                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      15: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      18: ifeq          48
      21: aload_2
      22: ifnull        48
      25: aload_2
      26: invokevirtual #14                 // Method com/google/javascript/rhino/Node.isParamList:()Z
      29: ifeq          34
      32: iconst_1
      33: ireturn
      34: aload_2
      35: invokevirtual #15                 // Method com/google/javascript/rhino/Node.isVar:()Z
      38: ifeq          46
      41: aload_1
      42: invokevirtual #7                  // Method com/google/javascript/rhino/Node.hasChildren:()Z
      45: ireturn
      46: iconst_0
      47: ireturn
      48: aload_1
      49: invokevirtual #8                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      52: astore_3
      53: aload_3
      54: ifnull        89
      57: aload_3
      58: invokevirtual #6                  // Method com/google/javascript/rhino/Node.isName:()Z
      61: ifeq          89
      64: aload_0
      65: invokevirtual #11                 // Method com/google/javascript/jscomp/Scope$Var.getName:()Ljava/lang/String;
      68: aload_3
      69: invokevirtual #12                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      72: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifeq          89
      78: aload_1
      79: invokestatic  #16                 // Method com/google/javascript/jscomp/NodeUtil.isAssignmentOp:(Lcom/google/javascript/rhino/Node;)Z
      82: ifeq          89
      85: iconst_1
      86: goto          90
      89: iconst_0
      90: ireturn

  private static boolean isReadFrom(com.google.javascript.jscomp.Scope$Var, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: ifnull        40
       4: aload_1
       5: invokevirtual #6                  // Method com/google/javascript/rhino/Node.isName:()Z
       8: ifeq          40
      11: aload_0
      12: invokevirtual #11                 // Method com/google/javascript/jscomp/Scope$Var.getName:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #12                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      19: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      22: ifeq          40
      25: aload_1
      26: aload_1
      27: invokevirtual #17                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      30: invokestatic  #18                 // Method com/google/javascript/jscomp/NodeUtil.isVarOrSimpleAssignLhs:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z
      33: ifne          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn
}
