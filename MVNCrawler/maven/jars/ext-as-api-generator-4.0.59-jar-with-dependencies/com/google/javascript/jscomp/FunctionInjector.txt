Compiled from "FunctionInjector.java"
class com.google.javascript.jscomp.FunctionInjector {
  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  private final boolean allowDecomposition;

  private java.util.Set<java.lang.String> knownConstants;

  private final boolean assumeStrictThis;

  private final boolean assumeMinimumCapture;

  private final com.google.common.base.Supplier<java.lang.String> safeNameIdSupplier;

  private final com.google.common.base.Supplier<java.lang.String> throwawayNameSupplier;

  private static final int NAME_COST_ESTIMATE;

  private static final int COMMA_COST;

  private static final int PAREN_COST;

  public com.google.javascript.jscomp.FunctionInjector(com.google.javascript.jscomp.AbstractCompiler, com.google.common.base.Supplier<java.lang.String>, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #4                  // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
       8: putfield      #5                  // Field knownConstants:Ljava/util/Set;
      11: aload_0
      12: new           #6                  // class com/google/javascript/jscomp/FunctionInjector$1
      15: dup
      16: aload_0
      17: invokespecial #7                  // Method com/google/javascript/jscomp/FunctionInjector$1."<init>":(Lcom/google/javascript/jscomp/FunctionInjector;)V
      20: putfield      #8                  // Field throwawayNameSupplier:Lcom/google/common/base/Supplier;
      23: aload_1
      24: invokestatic  #9                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: aload_2
      29: invokestatic  #9                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: aload_0
      34: aload_1
      35: putfield      #10                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      38: aload_0
      39: aload_2
      40: putfield      #11                 // Field safeNameIdSupplier:Lcom/google/common/base/Supplier;
      43: aload_0
      44: iload_3
      45: putfield      #12                 // Field allowDecomposition:Z
      48: aload_0
      49: iload         4
      51: putfield      #13                 // Field assumeStrictThis:Z
      54: aload_0
      55: iload         5
      57: putfield      #14                 // Field assumeMinimumCapture:Z
      60: return

  boolean doesFunctionMeetMinimumRequirements(java.lang.String, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: invokestatic  #15                 // Method com/google/javascript/jscomp/NodeUtil.getFunctionBody:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
       4: astore_3
       5: aload_0
       6: getfield      #10                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       9: invokevirtual #16                 // Method com/google/javascript/jscomp/AbstractCompiler.getCodingConvention:()Lcom/google/javascript/jscomp/CodingConvention;
      12: aload_2
      13: invokeinterface #17,  2           // InterfaceMethod com/google/javascript/jscomp/CodingConvention.isInlinableFunction:(Lcom/google/javascript/rhino/Node;)Z
      18: ifne          23
      21: iconst_0
      22: ireturn
      23: aload_2
      24: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      27: invokevirtual #19                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      30: astore        4
      32: aload         4
      34: ifnull        41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      45: aload_3
      46: ldc           #21                 // String arguments
      48: getstatic     #22                 // Field com/google/javascript/jscomp/NodeUtil.MATCH_NOT_FUNCTION:Lcom/google/common/base/Predicate;
      51: invokestatic  #23                 // Method com/google/javascript/jscomp/NodeUtil.isNameReferenced:(Lcom/google/javascript/rhino/Node;Ljava/lang/String;Lcom/google/common/base/Predicate;)Z
      54: istore        5
      56: new           #24                 // class com/google/javascript/jscomp/FunctionInjector$2
      59: dup
      60: aload_0
      61: aload_1
      62: aload         4
      64: invokespecial #25                 // Method com/google/javascript/jscomp/FunctionInjector$2."<init>":(Lcom/google/javascript/jscomp/FunctionInjector;Ljava/lang/String;Ljava/lang/String;)V
      67: astore        6
      69: iload         5
      71: ifne          90
      74: aload_3
      75: aload         6
      77: invokestatic  #26                 // Method com/google/common/base/Predicates.alwaysTrue:()Lcom/google/common/base/Predicate;
      80: invokestatic  #27                 // Method com/google/javascript/jscomp/NodeUtil.has:(Lcom/google/javascript/rhino/Node;Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)Z
      83: ifne          90
      86: iconst_1
      87: goto          91
      90: iconst_0
      91: ireturn

  com.google.javascript.jscomp.FunctionInjector$CanInlineResult canInlineReferenceToFunction(com.google.javascript.jscomp.FunctionInjector$Reference, com.google.javascript.rhino.Node, java.util.Set<java.lang.String>, boolean, boolean);
    Code:
       0: aload_1
       1: getfield      #28                 // Field com/google/javascript/jscomp/FunctionInjector$Reference.callNode:Lcom/google/javascript/rhino/Node;
       4: astore        6
       6: aload_0
       7: aload         6
       9: invokespecial #29                 // Method isSupportedCallType:(Lcom/google/javascript/rhino/Node;)Z
      12: ifne          19
      15: getstatic     #30                 // Field com/google/javascript/jscomp/FunctionInjector$CanInlineResult.NO:Lcom/google/javascript/jscomp/FunctionInjector$CanInlineResult;
      18: areturn
      19: iload         5
      21: ifeq          57
      24: aload_0
      25: getfield      #14                 // Field assumeMinimumCapture:Z
      28: ifne          45
      31: aload_1
      32: getfield      #31                 // Field com/google/javascript/jscomp/FunctionInjector$Reference.scope:Lcom/google/javascript/jscomp/Scope;
      35: invokevirtual #32                 // Method com/google/javascript/jscomp/Scope.isGlobal:()Z
      38: ifne          45
      41: getstatic     #30                 // Field com/google/javascript/jscomp/FunctionInjector$CanInlineResult.NO:Lcom/google/javascript/jscomp/FunctionInjector$CanInlineResult;
      44: areturn
      45: aload         6
      47: invokestatic  #33                 // Method com/google/javascript/jscomp/NodeUtil.isWithinLoop:(Lcom/google/javascript/rhino/Node;)Z
      50: ifeq          57
      53: getstatic     #30                 // Field com/google/javascript/jscomp/FunctionInjector$CanInlineResult.NO:Lcom/google/javascript/jscomp/FunctionInjector$CanInlineResult;
      56: areturn
      57: iload         4
      59: ifeq          74
      62: aload         6
      64: invokestatic  #34                 // Method com/google/javascript/jscomp/NodeUtil.isFunctionObjectCall:(Lcom/google/javascript/rhino/Node;)Z
      67: ifne          74
      70: getstatic     #30                 // Field com/google/javascript/jscomp/FunctionInjector$CanInlineResult.NO:Lcom/google/javascript/jscomp/FunctionInjector$CanInlineResult;
      73: areturn
      74: aload_1
      75: getfield      #35                 // Field com/google/javascript/jscomp/FunctionInjector$Reference.mode:Lcom/google/javascript/jscomp/FunctionInjector$InliningMode;
      78: getstatic     #36                 // Field com/google/javascript/jscomp/FunctionInjector$InliningMode.DIRECT:Lcom/google/javascript/jscomp/FunctionInjector$InliningMode;
      81: if_acmpne     92
      84: aload_0
      85: aload_1
      86: aload_2
      87: aload_3
      88: invokespecial #37                 // Method canInlineReferenceDirectly:(Lcom/google/javascript/jscomp/FunctionInjector$Reference;Lcom/google/javascript/rhino/Node;Ljava/util/Set;)Lcom/google/javascript/jscomp/FunctionInjector$CanInlineResult;
      91: areturn
      92: aload_0
      93: aload_1
      94: aload_2
      95: aload_3
      96: invokespecial #38                 // Method canInlineReferenceAsStatementBlock:(Lcom/google/javascript/jscomp/FunctionInjector$Reference;Lcom/google/javascript/rhino/Node;Ljava/util/Set;)Lcom/google/javascript/jscomp/FunctionInjector$CanInlineResult;
      99: areturn

  private boolean isSupportedCallType(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
       4: invokevirtual #39                 // Method com/google/javascript/rhino/Node.isName:()Z
       7: ifne          57
      10: aload_1
      11: invokestatic  #34                 // Method com/google/javascript/jscomp/NodeUtil.isFunctionObjectCall:(Lcom/google/javascript/rhino/Node;)Z
      14: ifeq          48
      17: aload_0
      18: getfield      #13                 // Field assumeStrictThis:Z
      21: ifne          57
      24: aload_1
      25: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      28: invokevirtual #40                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      31: astore_2
      32: aload_2
      33: ifnull        43
      36: aload_2
      37: invokevirtual #41                 // Method com/google/javascript/rhino/Node.isThis:()Z
      40: ifne          45
      43: iconst_0
      44: ireturn
      45: goto          57
      48: aload_1
      49: invokestatic  #42                 // Method com/google/javascript/jscomp/NodeUtil.isFunctionObjectApply:(Lcom/google/javascript/rhino/Node;)Z
      52: ifeq          57
      55: iconst_0
      56: ireturn
      57: iconst_1
      58: ireturn

  com.google.javascript.rhino.Node inline(com.google.javascript.jscomp.FunctionInjector$Reference, java.lang.String, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #10                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: invokevirtual #43                 // Method com/google/javascript/jscomp/AbstractCompiler.getLifeCycleStage:()Lcom/google/javascript/jscomp/AbstractCompiler$LifeCycleStage;
       7: invokevirtual #44                 // Method com/google/javascript/jscomp/AbstractCompiler$LifeCycleStage.isNormalized:()Z
      10: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      13: aload_1
      14: getfield      #35                 // Field com/google/javascript/jscomp/FunctionInjector$Reference.mode:Lcom/google/javascript/jscomp/FunctionInjector$InliningMode;
      17: getstatic     #36                 // Field com/google/javascript/jscomp/FunctionInjector$InliningMode.DIRECT:Lcom/google/javascript/jscomp/FunctionInjector$InliningMode;
      20: if_acmpne     30
      23: aload_0
      24: aload_1
      25: aload_3
      26: invokespecial #45                 // Method inlineReturnValue:(Lcom/google/javascript/jscomp/FunctionInjector$Reference;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      29: areturn
      30: aload_0
      31: aload_1
      32: aload_3
      33: aload_2
      34: invokespecial #46                 // Method inlineFunction:(Lcom/google/javascript/jscomp/FunctionInjector$Reference;Lcom/google/javascript/rhino/Node;Ljava/lang/String;)Lcom/google/javascript/rhino/Node;
      37: areturn

  private com.google.javascript.rhino.Node inlineReturnValue(com.google.javascript.jscomp.FunctionInjector$Reference, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: getfield      #28                 // Field com/google/javascript/jscomp/FunctionInjector$Reference.callNode:Lcom/google/javascript/rhino/Node;
       4: astore_3
       5: aload_2
       6: invokevirtual #47                 // Method com/google/javascript/rhino/Node.getLastChild:()Lcom/google/javascript/rhino/Node;
       9: astore        4
      11: aload_3
      12: invokevirtual #48                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      15: astore        5
      17: aload_2
      18: aload_3
      19: aload_0
      20: getfield      #11                 // Field safeNameIdSupplier:Lcom/google/common/base/Supplier;
      23: invokestatic  #49                 // Method com/google/javascript/jscomp/FunctionArgumentInjector.getFunctionCallParameterMap:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/common/base/Supplier;)Ljava/util/LinkedHashMap;
      26: astore        6
      28: aload         4
      30: invokevirtual #50                 // Method com/google/javascript/rhino/Node.hasChildren:()Z
      33: ifne          50
      36: aload         4
      38: astore        8
      40: aload         8
      42: invokestatic  #51                 // Method com/google/javascript/jscomp/NodeUtil.newUndefinedNode:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      45: astore        7
      47: goto          105
      50: aload         4
      52: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      55: astore        8
      57: aload         8
      59: invokevirtual #52                 // Method com/google/javascript/rhino/Node.isReturn:()Z
      62: invokestatic  #53                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      65: aload         8
      67: invokevirtual #54                 // Method com/google/javascript/rhino/Node.cloneTree:()Lcom/google/javascript/rhino/Node;
      70: astore        9
      72: aconst_null
      73: aload         9
      75: aconst_null
      76: aload         6
      78: invokestatic  #55                 // Method com/google/javascript/jscomp/FunctionArgumentInjector.inject:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Ljava/util/Map;)Lcom/google/javascript/rhino/Node;
      81: astore        10
      83: aload         9
      85: aload         10
      87: if_acmpne     94
      90: iconst_1
      91: goto          95
      94: iconst_0
      95: invokestatic  #53                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      98: aload         9
     100: invokevirtual #56                 // Method com/google/javascript/rhino/Node.removeFirstChild:()Lcom/google/javascript/rhino/Node;
     103: astore        7
     105: aload         5
     107: aload_3
     108: aload         7
     110: invokevirtual #57                 // Method com/google/javascript/rhino/Node.replaceChild:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
     113: aload         7
     115: areturn

  private com.google.javascript.jscomp.FunctionInjector$CallSiteType classifyCallSite(com.google.javascript.jscomp.FunctionInjector$Reference);
    Code:
       0: aload_1
       1: getfield      #28                 // Field com/google/javascript/jscomp/FunctionInjector$Reference.callNode:Lcom/google/javascript/rhino/Node;
       4: astore_2
       5: aload_2
       6: invokevirtual #48                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
       9: astore_3
      10: aload_3
      11: invokevirtual #48                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      14: astore        4
      16: aload_3
      17: invokestatic  #58                 // Method com/google/javascript/jscomp/NodeUtil.isExprCall:(Lcom/google/javascript/rhino/Node;)Z
      20: ifeq          27
      23: getstatic     #59                 // Field com/google/javascript/jscomp/FunctionInjector$CallSiteType.SIMPLE_CALL:Lcom/google/javascript/jscomp/FunctionInjector$CallSiteType;
      26: areturn
      27: aload         4
      29: invokestatic  #60                 // Method com/google/javascript/jscomp/NodeUtil.isExprAssign:(Lcom/google/javascript/rhino/Node;)Z
      32: ifeq          67
      35: aload_2
      36: aload_3
      37: invokestatic  #61                 // Method com/google/javascript/jscomp/NodeUtil.isVarOrSimpleAssignLhs:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z
      40: ifne          67
      43: aload_3
      44: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      47: invokevirtual #39                 // Method com/google/javascript/rhino/Node.isName:()Z
      50: ifeq          67
      53: aload_3
      54: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      57: invokestatic  #62                 // Method com/google/javascript/jscomp/NodeUtil.isConstantName:(Lcom/google/javascript/rhino/Node;)Z
      60: ifne          67
      63: getstatic     #63                 // Field com/google/javascript/jscomp/FunctionInjector$CallSiteType.SIMPLE_ASSIGNMENT:Lcom/google/javascript/jscomp/FunctionInjector$CallSiteType;
      66: areturn
      67: aload_3
      68: invokevirtual #39                 // Method com/google/javascript/rhino/Node.isName:()Z
      71: ifeq          101
      74: aload_3
      75: invokestatic  #62                 // Method com/google/javascript/jscomp/NodeUtil.isConstantName:(Lcom/google/javascript/rhino/Node;)Z
      78: ifne          101
      81: aload         4
      83: invokevirtual #64                 // Method com/google/javascript/rhino/Node.isVar:()Z
      86: ifeq          101
      89: aload         4
      91: invokevirtual #65                 // Method com/google/javascript/rhino/Node.hasOneChild:()Z
      94: ifeq          101
      97: getstatic     #66                 // Field com/google/javascript/jscomp/FunctionInjector$CallSiteType.VAR_DECL_SIMPLE_ASSIGNMENT:Lcom/google/javascript/jscomp/FunctionInjector$CallSiteType;
     100: areturn
     101: aload_2
     102: invokestatic  #67                 // Method com/google/javascript/jscomp/ExpressionDecomposer.findExpressionRoot:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
     105: astore        5
     107: aload         5
     109: ifnull        185
     112: new           #68                 // class com/google/javascript/jscomp/ExpressionDecomposer
     115: dup
     116: aload_0
     117: getfield      #10                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
     120: aload_0
     121: getfield      #11                 // Field safeNameIdSupplier:Lcom/google/common/base/Supplier;
     124: aload_0
     125: getfield      #5                  // Field knownConstants:Ljava/util/Set;
     128: aload_1
     129: getfield      #31                 // Field com/google/javascript/jscomp/FunctionInjector$Reference.scope:Lcom/google/javascript/jscomp/Scope;
     132: invokespecial #69                 // Method com/google/javascript/jscomp/ExpressionDecomposer."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/common/base/Supplier;Ljava/util/Set;Lcom/google/javascript/jscomp/Scope;)V
     135: astore        6
     137: aload         6
     139: aload_2
     140: invokevirtual #70                 // Method com/google/javascript/jscomp/ExpressionDecomposer.canExposeExpression:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/jscomp/ExpressionDecomposer$DecompositionType;
     143: astore        7
     145: aload         7
     147: getstatic     #71                 // Field com/google/javascript/jscomp/ExpressionDecomposer$DecompositionType.MOVABLE:Lcom/google/javascript/jscomp/ExpressionDecomposer$DecompositionType;
     150: if_acmpne     157
     153: getstatic     #72                 // Field com/google/javascript/jscomp/FunctionInjector$CallSiteType.EXPRESSION:Lcom/google/javascript/jscomp/FunctionInjector$CallSiteType;
     156: areturn
     157: aload         7
     159: getstatic     #73                 // Field com/google/javascript/jscomp/ExpressionDecomposer$DecompositionType.DECOMPOSABLE:Lcom/google/javascript/jscomp/ExpressionDecomposer$DecompositionType;
     162: if_acmpne     169
     165: getstatic     #74                 // Field com/google/javascript/jscomp/FunctionInjector$CallSiteType.DECOMPOSABLE_EXPRESSION:Lcom/google/javascript/jscomp/FunctionInjector$CallSiteType;
     168: areturn
     169: aload         7
     171: getstatic     #75                 // Field com/google/javascript/jscomp/ExpressionDecomposer$DecompositionType.UNDECOMPOSABLE:Lcom/google/javascript/jscomp/ExpressionDecomposer$DecompositionType;
     174: if_acmpne     181
     177: iconst_1
     178: goto          182
     181: iconst_0
     182: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkState:(Z)V
     185: getstatic     #76                 // Field com/google/javascript/jscomp/FunctionInjector$CallSiteType.UNSUPPORTED:Lcom/google/javascript/jscomp/FunctionInjector$CallSiteType;
     188: areturn

  private com.google.javascript.jscomp.ExpressionDecomposer getDecomposer(com.google.javascript.jscomp.Scope);
    Code:
       0: new           #68                 // class com/google/javascript/jscomp/ExpressionDecomposer
       3: dup
       4: aload_0
       5: getfield      #10                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       8: aload_0
       9: getfield      #11                 // Field safeNameIdSupplier:Lcom/google/common/base/Supplier;
      12: aload_0
      13: getfield      #5                  // Field knownConstants:Ljava/util/Set;
      16: aload_1
      17: invokespecial #69                 // Method com/google/javascript/jscomp/ExpressionDecomposer."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/common/base/Supplier;Ljava/util/Set;Lcom/google/javascript/jscomp/Scope;)V
      20: areturn

  void maybePrepareCall(com.google.javascript.jscomp.FunctionInjector$Reference);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method classifyCallSite:(Lcom/google/javascript/jscomp/FunctionInjector$Reference;)Lcom/google/javascript/jscomp/FunctionInjector$CallSiteType;
       5: astore_2
       6: aload_2
       7: aload_0
       8: aload_1
       9: invokevirtual #77                 // Method com/google/javascript/jscomp/FunctionInjector$CallSiteType.prepare:(Lcom/google/javascript/jscomp/FunctionInjector;Lcom/google/javascript/jscomp/FunctionInjector$Reference;)V
      12: return

  private com.google.javascript.rhino.Node inlineFunction(com.google.javascript.jscomp.FunctionInjector$Reference, com.google.javascript.rhino.Node, java.lang.String);
    Code:
       0: aload_1
       1: getfield      #28                 // Field com/google/javascript/jscomp/FunctionInjector$Reference.callNode:Lcom/google/javascript/rhino/Node;
       4: astore        4
       6: aload         4
       8: invokevirtual #48                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      11: astore        5
      13: aload         5
      15: invokevirtual #48                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      18: astore        6
      20: aload_0
      21: aload_1
      22: invokespecial #1                  // Method classifyCallSite:(Lcom/google/javascript/jscomp/FunctionInjector$Reference;)Lcom/google/javascript/jscomp/FunctionInjector$CallSiteType;
      25: astore        7
      27: aload         7
      29: getstatic     #76                 // Field com/google/javascript/jscomp/FunctionInjector$CallSiteType.UNSUPPORTED:Lcom/google/javascript/jscomp/FunctionInjector$CallSiteType;
      32: if_acmpeq     39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: invokestatic  #53                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      43: aload         4
      45: invokestatic  #33                 // Method com/google/javascript/jscomp/NodeUtil.isWithinLoop:(Lcom/google/javascript/rhino/Node;)Z
      48: istore        8
      50: aconst_null
      51: astore        9
      53: iconst_1
      54: istore        10
      56: getstatic     #78                 // Field com/google/javascript/jscomp/FunctionInjector$4.$SwitchMap$com$google$javascript$jscomp$FunctionInjector$CallSiteType:[I
      59: aload         7
      61: invokevirtual #79                 // Method com/google/javascript/jscomp/FunctionInjector$CallSiteType.ordinal:()I
      64: iaload
      65: tableswitch   { // 1 to 5
                     1: 100
                     2: 122
                     3: 141
                     4: 150
                     5: 160
               default: 170
          }
     100: aload         5
     102: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     105: invokevirtual #19                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
     108: astore        9
     110: aload_1
     111: getfield      #31                 // Field com/google/javascript/jscomp/FunctionInjector$Reference.scope:Lcom/google/javascript/jscomp/Scope;
     114: aload         9
     116: invokestatic  #80                 // Method removeConstantVarAnnotation:(Lcom/google/javascript/jscomp/Scope;Ljava/lang/String;)V
     119: goto          180
     122: aload         5
     124: invokevirtual #19                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
     127: astore        9
     129: aload_1
     130: getfield      #31                 // Field com/google/javascript/jscomp/FunctionInjector$Reference.scope:Lcom/google/javascript/jscomp/Scope;
     133: aload         9
     135: invokestatic  #80                 // Method removeConstantVarAnnotation:(Lcom/google/javascript/jscomp/Scope;Ljava/lang/String;)V
     138: goto          180
     141: aconst_null
     142: astore        9
     144: iconst_0
     145: istore        10
     147: goto          180
     150: new           #81                 // class java/lang/IllegalStateException
     153: dup
     154: ldc           #82                 // String Movable expressions must be moved before inlining.
     156: invokespecial #83                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     159: athrow
     160: new           #81                 // class java/lang/IllegalStateException
     163: dup
     164: ldc           #84                 // String Decomposable expressions must be decomposed before inlining.
     166: invokespecial #83                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     169: athrow
     170: new           #81                 // class java/lang/IllegalStateException
     173: dup
     174: ldc           #85                 // String Unexpected call site type.
     176: invokespecial #83                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     179: athrow
     180: new           #86                 // class com/google/javascript/jscomp/FunctionToBlockMutator
     183: dup
     184: aload_0
     185: getfield      #10                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
     188: aload_0
     189: getfield      #11                 // Field safeNameIdSupplier:Lcom/google/common/base/Supplier;
     192: invokespecial #87                 // Method com/google/javascript/jscomp/FunctionToBlockMutator."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/common/base/Supplier;)V
     195: astore        11
     197: aload         11
     199: aload_3
     200: aload_2
     201: aload         4
     203: aload         9
     205: iload         10
     207: iload         8
     209: invokevirtual #88                 // Method com/google/javascript/jscomp/FunctionToBlockMutator.mutate:(Ljava/lang/String;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Ljava/lang/String;ZZ)Lcom/google/javascript/rhino/Node;
     212: astore        12
     214: aload         6
     216: invokevirtual #48                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
     219: astore        13
     221: getstatic     #78                 // Field com/google/javascript/jscomp/FunctionInjector$4.$SwitchMap$com$google$javascript$jscomp$FunctionInjector$CallSiteType:[I
     224: aload         7
     226: invokevirtual #79                 // Method com/google/javascript/jscomp/FunctionInjector$CallSiteType.ordinal:()I
     229: iaload
     230: tableswitch   { // 1 to 3
                     1: 294
                     2: 256
                     3: 314
               default: 334
          }
     256: aload         5
     258: aload         5
     260: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     263: invokevirtual #89                 // Method com/google/javascript/rhino/Node.removeChild:(Lcom/google/javascript/rhino/Node;)V
     266: aload         5
     268: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     271: ifnonnull     278
     274: iconst_1
     275: goto          279
     278: iconst_0
     279: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkState:(Z)V
     282: aload         13
     284: aload         12
     286: aload         6
     288: invokevirtual #90                 // Method com/google/javascript/rhino/Node.addChildAfter:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
     291: goto          344
     294: aload         6
     296: invokevirtual #91                 // Method com/google/javascript/rhino/Node.isExprResult:()Z
     299: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkState:(Z)V
     302: aload         13
     304: aload         6
     306: aload         12
     308: invokevirtual #57                 // Method com/google/javascript/rhino/Node.replaceChild:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
     311: goto          344
     314: aload         5
     316: invokevirtual #91                 // Method com/google/javascript/rhino/Node.isExprResult:()Z
     319: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkState:(Z)V
     322: aload         6
     324: aload         5
     326: aload         12
     328: invokevirtual #57                 // Method com/google/javascript/rhino/Node.replaceChild:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
     331: goto          344
     334: new           #81                 // class java/lang/IllegalStateException
     337: dup
     338: ldc           #85                 // String Unexpected call site type.
     340: invokespecial #83                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     343: athrow
     344: aload         12
     346: areturn

  private static void removeConstantVarAnnotation(com.google.javascript.jscomp.Scope, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #92                 // Method com/google/javascript/jscomp/Scope.getVar:(Ljava/lang/String;)Lcom/google/javascript/jscomp/Scope$Var;
       5: astore_2
       6: aload_2
       7: ifnonnull     14
      10: aconst_null
      11: goto          18
      14: aload_2
      15: invokevirtual #93                 // Method com/google/javascript/jscomp/Scope$Var.getNameNode:()Lcom/google/javascript/rhino/Node;
      18: astore_3
      19: aload_3
      20: ifnonnull     24
      23: return
      24: aload_3
      25: bipush        64
      27: invokevirtual #95                 // Method com/google/javascript/rhino/Node.getBooleanProp:(I)Z
      30: ifeq          39
      33: aload_3
      34: bipush        64
      36: invokevirtual #96                 // Method com/google/javascript/rhino/Node.removeProp:(I)V
      39: return

  static boolean isDirectCallNodeReplacementPossible(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokestatic  #15                 // Method com/google/javascript/jscomp/NodeUtil.getFunctionBody:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
       4: astore_1
       5: aload_1
       6: invokevirtual #50                 // Method com/google/javascript/rhino/Node.hasChildren:()Z
       9: ifne          14
      12: iconst_1
      13: ireturn
      14: aload_1
      15: invokevirtual #65                 // Method com/google/javascript/rhino/Node.hasOneChild:()Z
      18: ifeq          43
      21: aload_1
      22: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      25: invokevirtual #52                 // Method com/google/javascript/rhino/Node.isReturn:()Z
      28: ifeq          43
      31: aload_1
      32: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      35: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      38: ifnull        43
      41: iconst_1
      42: ireturn
      43: iconst_0
      44: ireturn

  private com.google.javascript.jscomp.FunctionInjector$CanInlineResult canInlineReferenceAsStatementBlock(com.google.javascript.jscomp.FunctionInjector$Reference, com.google.javascript.rhino.Node, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method classifyCallSite:(Lcom/google/javascript/jscomp/FunctionInjector$Reference;)Lcom/google/javascript/jscomp/FunctionInjector$CallSiteType;
       5: astore        4
       7: aload         4
       9: getstatic     #76                 // Field com/google/javascript/jscomp/FunctionInjector$CallSiteType.UNSUPPORTED:Lcom/google/javascript/jscomp/FunctionInjector$CallSiteType;
      12: if_acmpne     19
      15: getstatic     #30                 // Field com/google/javascript/jscomp/FunctionInjector$CanInlineResult.NO:Lcom/google/javascript/jscomp/FunctionInjector$CanInlineResult;
      18: areturn
      19: aload_0
      20: getfield      #12                 // Field allowDecomposition:Z
      23: ifne          46
      26: aload         4
      28: getstatic     #74                 // Field com/google/javascript/jscomp/FunctionInjector$CallSiteType.DECOMPOSABLE_EXPRESSION:Lcom/google/javascript/jscomp/FunctionInjector$CallSiteType;
      31: if_acmpeq     42
      34: aload         4
      36: getstatic     #72                 // Field com/google/javascript/jscomp/FunctionInjector$CallSiteType.EXPRESSION:Lcom/google/javascript/jscomp/FunctionInjector$CallSiteType;
      39: if_acmpne     46
      42: getstatic     #30                 // Field com/google/javascript/jscomp/FunctionInjector$CanInlineResult.NO:Lcom/google/javascript/jscomp/FunctionInjector$CanInlineResult;
      45: areturn
      46: aload_0
      47: aload_1
      48: aload_2
      49: aload_3
      50: invokespecial #97                 // Method callMeetsBlockInliningRequirements:(Lcom/google/javascript/jscomp/FunctionInjector$Reference;Lcom/google/javascript/rhino/Node;Ljava/util/Set;)Z
      53: ifne          60
      56: getstatic     #30                 // Field com/google/javascript/jscomp/FunctionInjector$CanInlineResult.NO:Lcom/google/javascript/jscomp/FunctionInjector$CanInlineResult;
      59: areturn
      60: aload         4
      62: getstatic     #74                 // Field com/google/javascript/jscomp/FunctionInjector$CallSiteType.DECOMPOSABLE_EXPRESSION:Lcom/google/javascript/jscomp/FunctionInjector$CallSiteType;
      65: if_acmpeq     76
      68: aload         4
      70: getstatic     #72                 // Field com/google/javascript/jscomp/FunctionInjector$CallSiteType.EXPRESSION:Lcom/google/javascript/jscomp/FunctionInjector$CallSiteType;
      73: if_acmpne     80
      76: getstatic     #98                 // Field com/google/javascript/jscomp/FunctionInjector$CanInlineResult.AFTER_PREPARATION:Lcom/google/javascript/jscomp/FunctionInjector$CanInlineResult;
      79: areturn
      80: getstatic     #99                 // Field com/google/javascript/jscomp/FunctionInjector$CanInlineResult.YES:Lcom/google/javascript/jscomp/FunctionInjector$CanInlineResult;
      83: areturn

  private boolean callMeetsBlockInliningRequirements(com.google.javascript.jscomp.FunctionInjector$Reference, com.google.javascript.rhino.Node, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #14                 // Field assumeMinimumCapture:Z
       4: istore        4
       6: aload_2
       7: invokestatic  #15                 // Method com/google/javascript/jscomp/NodeUtil.getFunctionBody:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      10: new           #100                // class com/google/javascript/jscomp/NodeUtil$MatchDeclaration
      13: dup
      14: invokespecial #101                // Method com/google/javascript/jscomp/NodeUtil$MatchDeclaration."<init>":()V
      17: new           #102                // class com/google/javascript/jscomp/NodeUtil$MatchShallowStatement
      20: dup
      21: invokespecial #103                // Method com/google/javascript/jscomp/NodeUtil$MatchShallowStatement."<init>":()V
      24: invokestatic  #27                 // Method com/google/javascript/jscomp/NodeUtil.has:(Lcom/google/javascript/rhino/Node;Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)Z
      27: istore        5
      29: iconst_0
      30: istore        6
      32: aload_1
      33: getfield      #31                 // Field com/google/javascript/jscomp/FunctionInjector$Reference.scope:Lcom/google/javascript/jscomp/Scope;
      36: invokevirtual #32                 // Method com/google/javascript/jscomp/Scope.isGlobal:()Z
      39: ifne          83
      42: aload_1
      43: getfield      #31                 // Field com/google/javascript/jscomp/FunctionInjector$Reference.scope:Lcom/google/javascript/jscomp/Scope;
      46: invokevirtual #104                // Method com/google/javascript/jscomp/Scope.getRootNode:()Lcom/google/javascript/rhino/Node;
      49: astore        7
      51: aload         7
      53: invokevirtual #47                 // Method com/google/javascript/rhino/Node.getLastChild:()Lcom/google/javascript/rhino/Node;
      56: astore        8
      58: new           #105                // class com/google/javascript/jscomp/FunctionInjector$3
      61: dup
      62: aload_0
      63: iload         4
      65: aload_2
      66: invokespecial #106                // Method com/google/javascript/jscomp/FunctionInjector$3."<init>":(Lcom/google/javascript/jscomp/FunctionInjector;ZLcom/google/javascript/rhino/Node;)V
      69: astore        9
      71: aload         8
      73: aload         9
      75: getstatic     #22                 // Field com/google/javascript/jscomp/NodeUtil.MATCH_NOT_FUNCTION:Lcom/google/common/base/Predicate;
      78: invokestatic  #27                 // Method com/google/javascript/jscomp/NodeUtil.has:(Lcom/google/javascript/rhino/Node;Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)Z
      81: istore        6
      83: iload         5
      85: ifeq          95
      88: iload         6
      90: ifeq          95
      93: iconst_0
      94: ireturn
      95: iload         6
      97: ifeq          169
     100: aload_2
     101: aload_1
     102: getfield      #28                 // Field com/google/javascript/jscomp/FunctionInjector$Reference.callNode:Lcom/google/javascript/rhino/Node;
     105: aload_0
     106: getfield      #11                 // Field safeNameIdSupplier:Lcom/google/common/base/Supplier;
     109: invokestatic  #49                 // Method com/google/javascript/jscomp/FunctionArgumentInjector.getFunctionCallParameterMap:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/common/base/Supplier;)Ljava/util/LinkedHashMap;
     112: astore        7
     114: aload         7
     116: invokeinterface #107,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
     121: ifne          128
     124: iconst_1
     125: goto          129
     128: iconst_0
     129: istore        8
     131: iload         8
     133: ifeq          169
     136: aload_3
     137: invokestatic  #108                // Method com/google/common/collect/Sets.newHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;
     140: astore        9
     142: aload_2
     143: aload         7
     145: aload         9
     147: aload_0
     148: getfield      #10                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
     151: invokevirtual #16                 // Method com/google/javascript/jscomp/AbstractCompiler.getCodingConvention:()Lcom/google/javascript/jscomp/CodingConvention;
     154: invokestatic  #109                // Method com/google/javascript/jscomp/FunctionArgumentInjector.maybeAddTempsForCallArguments:(Lcom/google/javascript/rhino/Node;Ljava/util/Map;Ljava/util/Set;Lcom/google/javascript/jscomp/CodingConvention;)V
     157: aload         9
     159: invokeinterface #110,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
     164: ifne          169
     167: iconst_0
     168: ireturn
     169: iconst_1
     170: ireturn

  private com.google.javascript.jscomp.FunctionInjector$CanInlineResult canInlineReferenceDirectly(com.google.javascript.jscomp.FunctionInjector$Reference, com.google.javascript.rhino.Node, java.util.Set<java.lang.String>);
    Code:
       0: aload_2
       1: invokestatic  #111                // Method isDirectCallNodeReplacementPossible:(Lcom/google/javascript/rhino/Node;)Z
       4: ifne          11
       7: getstatic     #30                 // Field com/google/javascript/jscomp/FunctionInjector$CanInlineResult.NO:Lcom/google/javascript/jscomp/FunctionInjector$CanInlineResult;
      10: areturn
      11: aload_1
      12: getfield      #28                 // Field com/google/javascript/jscomp/FunctionInjector$Reference.callNode:Lcom/google/javascript/rhino/Node;
      15: astore        4
      17: aload         4
      19: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      22: invokevirtual #40                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      25: astore        5
      27: aload         4
      29: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      32: invokevirtual #39                 // Method com/google/javascript/rhino/Node.isName:()Z
      35: ifne          89
      38: aload         4
      40: invokestatic  #34                 // Method com/google/javascript/jscomp/NodeUtil.isFunctionObjectCall:(Lcom/google/javascript/rhino/Node;)Z
      43: ifeq          73
      46: aload         5
      48: ifnull        59
      51: aload         5
      53: invokevirtual #41                 // Method com/google/javascript/rhino/Node.isThis:()Z
      56: ifne          63
      59: getstatic     #30                 // Field com/google/javascript/jscomp/FunctionInjector$CanInlineResult.NO:Lcom/google/javascript/jscomp/FunctionInjector$CanInlineResult;
      62: areturn
      63: aload         5
      65: invokevirtual #40                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      68: astore        5
      70: goto          89
      73: aload         4
      75: invokestatic  #42                 // Method com/google/javascript/jscomp/NodeUtil.isFunctionObjectApply:(Lcom/google/javascript/rhino/Node;)Z
      78: ifne          85
      81: iconst_1
      82: goto          86
      85: iconst_0
      86: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      89: aload_2
      90: aload         4
      92: aload_0
      93: getfield      #8                  // Field throwawayNameSupplier:Lcom/google/common/base/Supplier;
      96: invokestatic  #49                 // Method com/google/javascript/jscomp/FunctionArgumentInjector.getFunctionCallParameterMap:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/common/base/Supplier;)Ljava/util/LinkedHashMap;
      99: astore        6
     101: aload         6
     103: invokeinterface #107,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
     108: ifne          115
     111: iconst_1
     112: goto          116
     115: iconst_0
     116: istore        7
     118: iload         7
     120: ifeq          158
     123: aload_3
     124: invokestatic  #108                // Method com/google/common/collect/Sets.newHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;
     127: astore        8
     129: aload_2
     130: aload         6
     132: aload         8
     134: aload_0
     135: getfield      #10                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
     138: invokevirtual #16                 // Method com/google/javascript/jscomp/AbstractCompiler.getCodingConvention:()Lcom/google/javascript/jscomp/CodingConvention;
     141: invokestatic  #109                // Method com/google/javascript/jscomp/FunctionArgumentInjector.maybeAddTempsForCallArguments:(Lcom/google/javascript/rhino/Node;Ljava/util/Map;Ljava/util/Set;Lcom/google/javascript/jscomp/CodingConvention;)V
     144: aload         8
     146: invokeinterface #110,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
     151: ifne          158
     154: getstatic     #30                 // Field com/google/javascript/jscomp/FunctionInjector$CanInlineResult.NO:Lcom/google/javascript/jscomp/FunctionInjector$CanInlineResult;
     157: areturn
     158: getstatic     #99                 // Field com/google/javascript/jscomp/FunctionInjector$CanInlineResult.YES:Lcom/google/javascript/jscomp/FunctionInjector$CanInlineResult;
     161: areturn

  boolean inliningLowersCost(com.google.javascript.jscomp.JSModule, com.google.javascript.rhino.Node, java.util.Collection<? extends com.google.javascript.jscomp.FunctionInjector$Reference>, java.util.Set<java.lang.String>, boolean, boolean);
    Code:
       0: aload_3
       1: invokeinterface #112,  1          // InterfaceMethod java/util/Collection.size:()I
       6: istore        7
       8: iload         7
      10: ifne          15
      13: iconst_1
      14: ireturn
      15: iconst_0
      16: istore        8
      18: iload         5
      20: ifeq          31
      23: aload_1
      24: ifnull        31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: istore        9
      34: aload_0
      35: getfield      #10                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      38: invokevirtual #113                // Method com/google/javascript/jscomp/AbstractCompiler.getModuleGraph:()Lcom/google/javascript/jscomp/JSModuleGraph;
      41: astore        10
      43: aload_3
      44: invokeinterface #114,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      49: astore        11
      51: aload         11
      53: invokeinterface #115,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          132
      61: aload         11
      63: invokeinterface #116,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      68: checkcast     #117                // class com/google/javascript/jscomp/FunctionInjector$Reference
      71: astore        12
      73: aload         12
      75: getfield      #35                 // Field com/google/javascript/jscomp/FunctionInjector$Reference.mode:Lcom/google/javascript/jscomp/FunctionInjector$InliningMode;
      78: getstatic     #118                // Field com/google/javascript/jscomp/FunctionInjector$InliningMode.BLOCK:Lcom/google/javascript/jscomp/FunctionInjector$InliningMode;
      81: if_acmpne     87
      84: iinc          8, 1
      87: iload         9
      89: ifeq          129
      92: aload         12
      94: getfield      #119                // Field com/google/javascript/jscomp/FunctionInjector$Reference.module:Lcom/google/javascript/jscomp/JSModule;
      97: ifnull        129
     100: aload         12
     102: getfield      #119                // Field com/google/javascript/jscomp/FunctionInjector$Reference.module:Lcom/google/javascript/jscomp/JSModule;
     105: aload_1
     106: if_acmpeq     129
     109: aload         10
     111: aload         12
     113: getfield      #119                // Field com/google/javascript/jscomp/FunctionInjector$Reference.module:Lcom/google/javascript/jscomp/JSModule;
     116: aload_1
     117: invokevirtual #120                // Method com/google/javascript/jscomp/JSModuleGraph.dependsOn:(Lcom/google/javascript/jscomp/JSModule;Lcom/google/javascript/jscomp/JSModule;)Z
     120: ifne          129
     123: iconst_0
     124: istore        5
     126: iconst_0
     127: istore        9
     129: goto          51
     132: iload         7
     134: iload         8
     136: isub
     137: istore        11
     139: iload         7
     141: iconst_1
     142: if_icmpne     158
     145: iload         5
     147: ifeq          158
     150: iload         11
     152: iconst_1
     153: if_icmpne     158
     156: iconst_1
     157: ireturn
     158: aload_2
     159: iload         6
     161: invokestatic  #121                // Method estimateCallCost:(Lcom/google/javascript/rhino/Node;Z)I
     164: istore        12
     166: iload         12
     168: iload         7
     170: imul
     171: istore        13
     173: aload_2
     174: aload         4
     176: getstatic     #36                 // Field com/google/javascript/jscomp/FunctionInjector$InliningMode.DIRECT:Lcom/google/javascript/jscomp/FunctionInjector$InliningMode;
     179: invokestatic  #122                // Method inlineCostDelta:(Lcom/google/javascript/rhino/Node;Ljava/util/Set;Lcom/google/javascript/jscomp/FunctionInjector$InliningMode;)I
     182: istore        14
     184: aload_2
     185: aload         4
     187: getstatic     #118                // Field com/google/javascript/jscomp/FunctionInjector$InliningMode.BLOCK:Lcom/google/javascript/jscomp/FunctionInjector$InliningMode;
     190: invokestatic  #122                // Method inlineCostDelta:(Lcom/google/javascript/rhino/Node;Ljava/util/Set;Lcom/google/javascript/jscomp/FunctionInjector$InliningMode;)I
     193: istore        15
     195: aload_2
     196: iload         13
     198: iload         11
     200: iload         14
     202: iload         8
     204: iload         15
     206: iload         5
     208: invokestatic  #123                // Method doesLowerCost:(Lcom/google/javascript/rhino/Node;IIIIIZ)Z
     211: ireturn

  private static boolean doesLowerCost(com.google.javascript.rhino.Node, int, int, int, int, int, boolean);
    Code:
       0: iload_2
       1: iload         4
       3: iadd
       4: iload         6
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: isub
      15: istore        7
      17: iload         7
      19: ifne          38
      22: iload         4
      24: ifle          32
      27: iload         5
      29: ifgt          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn
      38: iload_2
      39: iload_3
      40: imul
      41: iload         4
      43: iload         5
      45: imul
      46: iadd
      47: istore        8
      49: iload_1
      50: iload         8
      52: isub
      53: iload         7
      55: idiv
      56: istore        9
      58: aload_0
      59: iload         9
      61: iconst_1
      62: iadd
      63: invokestatic  #124                // Method com/google/javascript/jscomp/InlineCostEstimator.getCost:(Lcom/google/javascript/rhino/Node;I)I
      66: iload         9
      68: if_icmpgt     75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: ireturn

  private static int estimateCallCost(com.google.javascript.rhino.Node, boolean);
    Code:
       0: aload_0
       1: invokestatic  #125                // Method com/google/javascript/jscomp/NodeUtil.getFunctionParameters:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
       4: astore_2
       5: aload_2
       6: invokevirtual #126                // Method com/google/javascript/rhino/Node.getChildCount:()I
       9: istore_3
      10: getstatic     #127                // Field NAME_COST_ESTIMATE:I
      13: iconst_2
      14: iadd
      15: istore        4
      17: iload_3
      18: ifle          37
      21: iload         4
      23: iload_3
      24: getstatic     #127                // Field NAME_COST_ESTIMATE:I
      27: imul
      28: iload_3
      29: iconst_1
      30: isub
      31: iconst_1
      32: imul
      33: iadd
      34: iadd
      35: istore        4
      37: iload_1
      38: ifeq          44
      41: iinc          4, 10
      44: iload         4
      46: ireturn

  private static int inlineCostDelta(com.google.javascript.rhino.Node, java.util.Set<java.lang.String>, com.google.javascript.jscomp.FunctionInjector$InliningMode);
    Code:
       0: aload_0
       1: invokestatic  #125                // Method com/google/javascript/jscomp/NodeUtil.getFunctionParameters:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
       4: invokevirtual #126                // Method com/google/javascript/rhino/Node.getChildCount:()I
       7: istore_3
       8: iload_3
       9: iconst_1
      10: if_icmple     19
      13: iload_3
      14: iconst_1
      15: isub
      16: goto          20
      19: iconst_0
      20: istore        4
      22: bipush        15
      24: iload         4
      26: iadd
      27: iload_3
      28: getstatic     #129                // Field com/google/javascript/jscomp/InlineCostEstimator.ESTIMATED_IDENTIFIER_COST:I
      31: imul
      32: iadd
      33: istore        5
      35: aload_0
      36: invokevirtual #47                 // Method com/google/javascript/rhino/Node.getLastChild:()Lcom/google/javascript/rhino/Node;
      39: astore        6
      41: aload         6
      43: invokevirtual #50                 // Method com/google/javascript/rhino/Node.hasChildren:()Z
      46: ifne          53
      49: iload         5
      51: ineg
      52: ireturn
      53: aload_2
      54: getstatic     #36                 // Field com/google/javascript/jscomp/FunctionInjector$InliningMode.DIRECT:Lcom/google/javascript/jscomp/FunctionInjector$InliningMode;
      57: if_acmpne     67
      60: iload         5
      62: bipush        7
      64: iadd
      65: ineg
      66: ireturn
      67: aload_1
      68: invokeinterface #130,  1          // InterfaceMethod java/util/Set.size:()I
      73: istore        7
      75: iconst_4
      76: istore        8
      78: iconst_2
      79: istore        9
      81: iconst_3
      82: istore        10
      84: iconst_3
      85: istore        11
      87: aload         6
      89: iconst_4
      90: new           #102                // class com/google/javascript/jscomp/NodeUtil$MatchShallowStatement
      93: dup
      94: invokespecial #103                // Method com/google/javascript/jscomp/NodeUtil$MatchShallowStatement."<init>":()V
      97: invokestatic  #132                // Method com/google/javascript/jscomp/NodeUtil.getNodeTypeReferenceCount:(Lcom/google/javascript/rhino/Node;ILcom/google/common/base/Predicate;)I
     100: istore        12
     102: iload         12
     104: ifle          114
     107: iload         12
     109: iconst_1
     110: isub
     111: goto          115
     114: iconst_0
     115: istore        13
     117: iload         12
     119: ifle          126
     122: iconst_4
     123: goto          127
     126: iconst_0
     127: istore        14
     129: iload         14
     131: iload         12
     133: iconst_2
     134: imul
     135: iadd
     136: iload         13
     138: iconst_3
     139: imul
     140: iadd
     141: iload         7
     143: iconst_3
     144: imul
     145: iadd
     146: istore        15
     148: iload         15
     150: iload         5
     152: isub
     153: ireturn

  public void setKnownConstants(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field knownConstants:Ljava/util/Set;
       4: invokeinterface #110,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
       9: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      12: aload_0
      13: aload_1
      14: putfield      #5                  // Field knownConstants:Ljava/util/Set;
      17: return

  static com.google.javascript.jscomp.ExpressionDecomposer access$100(com.google.javascript.jscomp.FunctionInjector, com.google.javascript.jscomp.Scope);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method getDecomposer:(Lcom/google/javascript/jscomp/Scope;)Lcom/google/javascript/jscomp/ExpressionDecomposer;
       5: areturn

  static com.google.javascript.jscomp.FunctionInjector$CallSiteType access$200(com.google.javascript.jscomp.FunctionInjector, com.google.javascript.jscomp.FunctionInjector$Reference);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method classifyCallSite:(Lcom/google/javascript/jscomp/FunctionInjector$Reference;)Lcom/google/javascript/jscomp/FunctionInjector$CallSiteType;
       5: areturn

  static {};
    Code:
       0: getstatic     #129                // Field com/google/javascript/jscomp/InlineCostEstimator.ESTIMATED_IDENTIFIER_COST:I
       3: putstatic     #127                // Field NAME_COST_ESTIMATE:I
       6: return
}
