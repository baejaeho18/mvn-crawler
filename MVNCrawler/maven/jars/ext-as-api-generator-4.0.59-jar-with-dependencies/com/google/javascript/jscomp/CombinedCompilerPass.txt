Compiled from "CombinedCompilerPass.java"
final class com.google.javascript.jscomp.CombinedCompilerPass implements com.google.javascript.jscomp.HotSwapCompilerPass,com.google.javascript.jscomp.NodeTraversal$ScopedCallback {
  private final com.google.javascript.jscomp.CombinedCompilerPass$CallbackWrapper[] callbacks;

  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  com.google.javascript.jscomp.CombinedCompilerPass(com.google.javascript.jscomp.AbstractCompiler, com.google.javascript.jscomp.NodeTraversal$Callback...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1                  // Method com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
       6: invokespecial #2                  // Method "<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Ljava/util/List;)V
       9: return

  com.google.javascript.jscomp.CombinedCompilerPass(com.google.javascript.jscomp.AbstractCompiler, java.util.List<com.google.javascript.jscomp.NodeTraversal$Callback>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       9: aload_0
      10: aload_2
      11: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I
      16: anewarray     #6                  // class com/google/javascript/jscomp/CombinedCompilerPass$CallbackWrapper
      19: putfield      #7                  // Field callbacks:[Lcom/google/javascript/jscomp/CombinedCompilerPass$CallbackWrapper;
      22: iconst_0
      23: istore_3
      24: iload_3
      25: aload_2
      26: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I
      31: if_icmpge     64
      34: aload_0
      35: getfield      #7                  // Field callbacks:[Lcom/google/javascript/jscomp/CombinedCompilerPass$CallbackWrapper;
      38: iload_3
      39: new           #6                  // class com/google/javascript/jscomp/CombinedCompilerPass$CallbackWrapper
      42: dup
      43: aload_2
      44: iload_3
      45: invokeinterface #8,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      50: checkcast     #9                  // class com/google/javascript/jscomp/NodeTraversal$Callback
      53: aconst_null
      54: invokespecial #10                 // Method com/google/javascript/jscomp/CombinedCompilerPass$CallbackWrapper."<init>":(Lcom/google/javascript/jscomp/NodeTraversal$Callback;Lcom/google/javascript/jscomp/CombinedCompilerPass$1;)V
      57: aastore
      58: iinc          3, 1
      61: goto          24
      64: return

  static void traverse(com.google.javascript.jscomp.AbstractCompiler, com.google.javascript.rhino.Node, java.util.List<com.google.javascript.jscomp.NodeTraversal$Callback>);
    Code:
       0: aload_2
       1: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I
       6: iconst_1
       7: if_icmpne     28
      10: aload_0
      11: aload_1
      12: aload_2
      13: iconst_0
      14: invokeinterface #8,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      19: checkcast     #9                  // class com/google/javascript/jscomp/NodeTraversal$Callback
      22: invokestatic  #11                 // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      25: goto          42
      28: new           #12                 // class com/google/javascript/jscomp/CombinedCompilerPass
      31: dup
      32: aload_0
      33: aload_2
      34: invokespecial #2                  // Method "<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Ljava/util/List;)V
      37: aconst_null
      38: aload_1
      39: invokevirtual #13                 // Method process:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      42: return

  public final void process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #4                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: aload_2
       5: aload_0
       6: invokestatic  #11                 // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
       9: return

  public void hotSwapScript(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #4                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: aload_1
       5: aload_0
       6: invokestatic  #11                 // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
       9: return

  public boolean shouldTraverse(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #7                  // Field callbacks:[Lcom/google/javascript/jscomp/CombinedCompilerPass$CallbackWrapper;
       4: astore        4
       6: aload         4
       8: arraylength
       9: istore        5
      11: iconst_0
      12: istore        6
      14: iload         6
      16: iload         5
      18: if_icmpge     42
      21: aload         4
      23: iload         6
      25: aaload
      26: astore        7
      28: aload         7
      30: aload_1
      31: aload_2
      32: aload_3
      33: invokevirtual #14                 // Method com/google/javascript/jscomp/CombinedCompilerPass$CallbackWrapper.shouldTraverseIfActive:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      36: iinc          6, 1
      39: goto          14
      42: iconst_1
      43: ireturn

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #7                  // Field callbacks:[Lcom/google/javascript/jscomp/CombinedCompilerPass$CallbackWrapper;
       4: astore        4
       6: aload         4
       8: arraylength
       9: istore        5
      11: iconst_0
      12: istore        6
      14: iload         6
      16: iload         5
      18: if_icmpge     42
      21: aload         4
      23: iload         6
      25: aaload
      26: astore        7
      28: aload         7
      30: aload_1
      31: aload_2
      32: aload_3
      33: invokevirtual #15                 // Method com/google/javascript/jscomp/CombinedCompilerPass$CallbackWrapper.visitOrMaybeActivate:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      36: iinc          6, 1
      39: goto          14
      42: return

  public void enterScope(com.google.javascript.jscomp.NodeTraversal);
    Code:
       0: aload_0
       1: getfield      #7                  // Field callbacks:[Lcom/google/javascript/jscomp/CombinedCompilerPass$CallbackWrapper;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     35
      17: aload_2
      18: iload         4
      20: aaload
      21: astore        5
      23: aload         5
      25: aload_1
      26: invokevirtual #16                 // Method com/google/javascript/jscomp/CombinedCompilerPass$CallbackWrapper.enterScopeIfActive:(Lcom/google/javascript/jscomp/NodeTraversal;)V
      29: iinc          4, 1
      32: goto          11
      35: return

  public void exitScope(com.google.javascript.jscomp.NodeTraversal);
    Code:
       0: aload_0
       1: getfield      #7                  // Field callbacks:[Lcom/google/javascript/jscomp/CombinedCompilerPass$CallbackWrapper;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     35
      17: aload_2
      18: iload         4
      20: aaload
      21: astore        5
      23: aload         5
      25: aload_1
      26: invokevirtual #17                 // Method com/google/javascript/jscomp/CombinedCompilerPass$CallbackWrapper.exitScopeIfActive:(Lcom/google/javascript/jscomp/NodeTraversal;)V
      29: iinc          4, 1
      32: goto          11
      35: return
}
