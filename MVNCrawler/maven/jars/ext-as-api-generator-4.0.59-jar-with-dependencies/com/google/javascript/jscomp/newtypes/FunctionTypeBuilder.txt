Compiled from "FunctionTypeBuilder.java"
public class com.google.javascript.jscomp.newtypes.FunctionTypeBuilder {
  private final java.util.List<com.google.javascript.jscomp.newtypes.JSType> requiredFormals;

  private final java.util.List<com.google.javascript.jscomp.newtypes.JSType> optionalFormals;

  private final java.util.Map<java.lang.String, com.google.javascript.jscomp.newtypes.JSType> outerVars;

  private com.google.javascript.jscomp.newtypes.JSType restFormals;

  private com.google.javascript.jscomp.newtypes.JSType returnType;

  private boolean loose;

  private com.google.javascript.jscomp.newtypes.NominalType nominalType;

  private com.google.javascript.jscomp.newtypes.NominalType receiverType;

  private com.google.common.collect.ImmutableList<java.lang.String> typeParameters;

  public com.google.javascript.jscomp.newtypes.FunctionTypeBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field requiredFormals:Ljava/util/List;
      15: aload_0
      16: new           #2                  // class java/util/ArrayList
      19: dup
      20: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #5                  // Field optionalFormals:Ljava/util/List;
      26: aload_0
      27: new           #6                  // class java/util/HashMap
      30: dup
      31: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      34: putfield      #8                  // Field outerVars:Ljava/util/Map;
      37: aload_0
      38: aconst_null
      39: putfield      #9                  // Field restFormals:Lcom/google/javascript/jscomp/newtypes/JSType;
      42: aload_0
      43: aconst_null
      44: putfield      #10                 // Field returnType:Lcom/google/javascript/jscomp/newtypes/JSType;
      47: aload_0
      48: iconst_0
      49: putfield      #11                 // Field loose:Z
      52: return

  static com.google.javascript.jscomp.newtypes.FunctionTypeBuilder qmarkFunctionBuilder();
    Code:
       0: new           #12                 // class com/google/javascript/jscomp/newtypes/FunctionTypeBuilder
       3: dup
       4: invokespecial #13                 // Method "<init>":()V
       7: astore_0
       8: aload_0
       9: getstatic     #14                 // Field com/google/javascript/jscomp/newtypes/JSType.UNKNOWN:Lcom/google/javascript/jscomp/newtypes/JSType;
      12: invokevirtual #15                 // Method addRestFormals:(Lcom/google/javascript/jscomp/newtypes/JSType;)Lcom/google/javascript/jscomp/newtypes/FunctionTypeBuilder;
      15: pop
      16: aload_0
      17: getstatic     #14                 // Field com/google/javascript/jscomp/newtypes/JSType.UNKNOWN:Lcom/google/javascript/jscomp/newtypes/JSType;
      20: invokevirtual #16                 // Method addRetType:(Lcom/google/javascript/jscomp/newtypes/JSType;)Lcom/google/javascript/jscomp/newtypes/FunctionTypeBuilder;
      23: pop
      24: aload_0
      25: areturn

  public com.google.javascript.jscomp.newtypes.FunctionTypeBuilder addReqFormal(com.google.javascript.jscomp.newtypes.JSType) throws com.google.javascript.jscomp.newtypes.FunctionTypeBuilder$WrongParameterOrderException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field optionalFormals:Ljava/util/List;
       4: invokeinterface #17,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          19
      12: aload_0
      13: getfield      #9                  // Field restFormals:Lcom/google/javascript/jscomp/newtypes/JSType;
      16: ifnull        29
      19: new           #18                 // class com/google/javascript/jscomp/newtypes/FunctionTypeBuilder$WrongParameterOrderException
      22: dup
      23: ldc           #19                 // String Cannot add required formal after optional or rest args
      25: invokespecial #20                 // Method com/google/javascript/jscomp/newtypes/FunctionTypeBuilder$WrongParameterOrderException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: getfield      #4                  // Field requiredFormals:Ljava/util/List;
      33: aload_1
      34: invokeinterface #21,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      39: pop
      40: aload_0
      41: areturn

  public com.google.javascript.jscomp.newtypes.FunctionTypeBuilder addOptFormal(com.google.javascript.jscomp.newtypes.JSType) throws com.google.javascript.jscomp.newtypes.FunctionTypeBuilder$WrongParameterOrderException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field restFormals:Lcom/google/javascript/jscomp/newtypes/JSType;
       4: ifnull        17
       7: new           #18                 // class com/google/javascript/jscomp/newtypes/FunctionTypeBuilder$WrongParameterOrderException
      10: dup
      11: ldc           #22                 // String Cannot add optional formal after rest args
      13: invokespecial #20                 // Method com/google/javascript/jscomp/newtypes/FunctionTypeBuilder$WrongParameterOrderException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: ifnonnull     35
      21: aload_0
      22: getfield      #5                  // Field optionalFormals:Ljava/util/List;
      25: aconst_null
      26: invokeinterface #21,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      31: pop
      32: goto          75
      35: aload_1
      36: invokevirtual #23                 // Method com/google/javascript/jscomp/newtypes/JSType.isBottom:()Z
      39: ifeq          58
      42: aload_0
      43: getfield      #5                  // Field optionalFormals:Ljava/util/List;
      46: getstatic     #24                 // Field com/google/javascript/jscomp/newtypes/JSType.BOTTOM:Lcom/google/javascript/jscomp/newtypes/JSType;
      49: invokeinterface #21,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      54: pop
      55: goto          75
      58: aload_0
      59: getfield      #5                  // Field optionalFormals:Ljava/util/List;
      62: aload_1
      63: getstatic     #25                 // Field com/google/javascript/jscomp/newtypes/JSType.UNDEFINED:Lcom/google/javascript/jscomp/newtypes/JSType;
      66: invokestatic  #26                 // Method com/google/javascript/jscomp/newtypes/JSType.join:(Lcom/google/javascript/jscomp/newtypes/JSType;Lcom/google/javascript/jscomp/newtypes/JSType;)Lcom/google/javascript/jscomp/newtypes/JSType;
      69: invokeinterface #21,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      74: pop
      75: aload_0
      76: areturn

  public com.google.javascript.jscomp.newtypes.FunctionTypeBuilder addOuterVarPrecondition(java.lang.String, com.google.javascript.jscomp.newtypes.JSType);
    Code:
       0: aload_0
       1: getfield      #8                  // Field outerVars:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public com.google.javascript.jscomp.newtypes.FunctionTypeBuilder addRestFormals(com.google.javascript.jscomp.newtypes.JSType);
    Code:
       0: aload_0
       1: getfield      #9                  // Field restFormals:Lcom/google/javascript/jscomp/newtypes/JSType;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #28                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: aload_1
      17: putfield      #9                  // Field restFormals:Lcom/google/javascript/jscomp/newtypes/JSType;
      20: aload_0
      21: areturn

  public com.google.javascript.jscomp.newtypes.FunctionTypeBuilder addRetType(com.google.javascript.jscomp.newtypes.JSType);
    Code:
       0: aload_0
       1: getfield      #10                 // Field returnType:Lcom/google/javascript/jscomp/newtypes/JSType;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #28                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: aload_1
      17: putfield      #10                 // Field returnType:Lcom/google/javascript/jscomp/newtypes/JSType;
      20: aload_0
      21: areturn

  public com.google.javascript.jscomp.newtypes.FunctionTypeBuilder addLoose();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #11                 // Field loose:Z
       5: aload_0
       6: areturn

  public com.google.javascript.jscomp.newtypes.FunctionTypeBuilder addNominalType(com.google.javascript.jscomp.newtypes.NominalType);
    Code:
       0: aload_0
       1: getfield      #29                 // Field nominalType:Lcom/google/javascript/jscomp/newtypes/NominalType;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #28                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: aload_1
      17: putfield      #29                 // Field nominalType:Lcom/google/javascript/jscomp/newtypes/NominalType;
      20: aload_0
      21: areturn

  public com.google.javascript.jscomp.newtypes.FunctionTypeBuilder addTypeParameters(com.google.common.collect.ImmutableList<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #30                 // Field typeParameters:Lcom/google/common/collect/ImmutableList;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #28                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: aload_1
      17: putfield      #30                 // Field typeParameters:Lcom/google/common/collect/ImmutableList;
      20: aload_0
      21: areturn

  public com.google.javascript.jscomp.newtypes.FunctionTypeBuilder addReceiverType(com.google.javascript.jscomp.newtypes.NominalType);
    Code:
       0: aload_0
       1: getfield      #31                 // Field receiverType:Lcom/google/javascript/jscomp/newtypes/NominalType;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #28                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: aload_1
      17: putfield      #31                 // Field receiverType:Lcom/google/javascript/jscomp/newtypes/NominalType;
      20: aload_0
      21: areturn

  public com.google.javascript.jscomp.newtypes.DeclaredFunctionType buildDeclaration();
    Code:
       0: aload_0
       1: getfield      #11                 // Field loose:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #28                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: getfield      #8                  // Field outerVars:Ljava/util/Map;
      19: invokeinterface #32,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      24: invokestatic  #28                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      27: aload_0
      28: getfield      #4                  // Field requiredFormals:Ljava/util/List;
      31: aload_0
      32: getfield      #5                  // Field optionalFormals:Ljava/util/List;
      35: aload_0
      36: getfield      #9                  // Field restFormals:Lcom/google/javascript/jscomp/newtypes/JSType;
      39: aload_0
      40: getfield      #10                 // Field returnType:Lcom/google/javascript/jscomp/newtypes/JSType;
      43: aload_0
      44: getfield      #29                 // Field nominalType:Lcom/google/javascript/jscomp/newtypes/NominalType;
      47: aload_0
      48: getfield      #31                 // Field receiverType:Lcom/google/javascript/jscomp/newtypes/NominalType;
      51: aload_0
      52: getfield      #30                 // Field typeParameters:Lcom/google/common/collect/ImmutableList;
      55: invokestatic  #33                 // Method com/google/javascript/jscomp/newtypes/DeclaredFunctionType.make:(Ljava/util/List;Ljava/util/List;Lcom/google/javascript/jscomp/newtypes/JSType;Lcom/google/javascript/jscomp/newtypes/JSType;Lcom/google/javascript/jscomp/newtypes/NominalType;Lcom/google/javascript/jscomp/newtypes/NominalType;Lcom/google/common/collect/ImmutableList;)Lcom/google/javascript/jscomp/newtypes/DeclaredFunctionType;
      58: areturn

  public com.google.javascript.jscomp.newtypes.FunctionType buildFunction();
    Code:
       0: aload_0
       1: getfield      #4                  // Field requiredFormals:Ljava/util/List;
       4: aload_0
       5: getfield      #5                  // Field optionalFormals:Ljava/util/List;
       8: aload_0
       9: getfield      #9                  // Field restFormals:Lcom/google/javascript/jscomp/newtypes/JSType;
      12: aload_0
      13: getfield      #10                 // Field returnType:Lcom/google/javascript/jscomp/newtypes/JSType;
      16: aload_0
      17: getfield      #29                 // Field nominalType:Lcom/google/javascript/jscomp/newtypes/NominalType;
      20: aload_0
      21: getfield      #31                 // Field receiverType:Lcom/google/javascript/jscomp/newtypes/NominalType;
      24: aload_0
      25: getfield      #8                  // Field outerVars:Ljava/util/Map;
      28: aload_0
      29: getfield      #30                 // Field typeParameters:Lcom/google/common/collect/ImmutableList;
      32: aload_0
      33: getfield      #11                 // Field loose:Z
      36: invokestatic  #34                 // Method com/google/javascript/jscomp/newtypes/FunctionType.normalized:(Ljava/util/List;Ljava/util/List;Lcom/google/javascript/jscomp/newtypes/JSType;Lcom/google/javascript/jscomp/newtypes/JSType;Lcom/google/javascript/jscomp/newtypes/NominalType;Lcom/google/javascript/jscomp/newtypes/NominalType;Ljava/util/Map;Lcom/google/common/collect/ImmutableList;Z)Lcom/google/javascript/jscomp/newtypes/FunctionType;
      39: astore_1
      40: aload_1
      41: invokevirtual #35                 // Method com/google/javascript/jscomp/newtypes/FunctionType.checkValid:()V
      44: aload_1
      45: areturn
}
