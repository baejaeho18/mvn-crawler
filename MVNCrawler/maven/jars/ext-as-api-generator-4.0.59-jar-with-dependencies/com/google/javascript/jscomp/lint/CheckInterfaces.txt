Compiled from "CheckInterfaces.java"
public final class com.google.javascript.jscomp.lint.CheckInterfaces extends com.google.javascript.jscomp.NodeTraversal$AbstractPostOrderCallback implements com.google.javascript.jscomp.HotSwapCompilerPass {
  public static final com.google.javascript.jscomp.DiagnosticType INTERFACE_FUNCTION_NOT_EMPTY;

  public static final com.google.javascript.jscomp.DiagnosticType INTERFACE_SHOULD_NOT_TAKE_ARGS;

  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  public com.google.javascript.jscomp.lint.CheckInterfaces(com.google.javascript.jscomp.AbstractCompiler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/javascript/jscomp/NodeTraversal$AbstractPostOrderCallback."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       9: return

  public void process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: aload_2
       5: aload_0
       6: invokestatic  #3                  // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
       9: return

  public void hotSwapScript(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: aload_1
       5: aload_0
       6: invokestatic  #3                  // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
       9: return

  private boolean isInterface(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method com/google/javascript/rhino/Node.isFunction:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: invokestatic  #5                  // Method com/google/javascript/jscomp/NodeUtil.getBestJSDocInfo:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/JSDocInfo;
      13: astore_2
      14: aload_2
      15: ifnull        29
      18: aload_2
      19: invokevirtual #6                  // Method com/google/javascript/rhino/JSDocInfo.isInterface:()Z
      22: ifeq          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #7                  // Method isInterface:(Lcom/google/javascript/rhino/Node;)Z
       5: ifne          9
       8: return
       9: aload_2
      10: invokevirtual #8                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      13: invokevirtual #9                  // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      16: astore        4
      18: aload         4
      20: invokevirtual #10                 // Method com/google/javascript/rhino/Node.hasChildren:()Z
      23: ifeq          42
      26: aload_1
      27: aload         4
      29: invokevirtual #8                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      32: getstatic     #11                 // Field INTERFACE_SHOULD_NOT_TAKE_ARGS:Lcom/google/javascript/jscomp/DiagnosticType;
      35: iconst_0
      36: anewarray     #12                 // class java/lang/String
      39: invokevirtual #13                 // Method com/google/javascript/jscomp/NodeTraversal.report:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)V
      42: aload_2
      43: invokevirtual #14                 // Method com/google/javascript/rhino/Node.getLastChild:()Lcom/google/javascript/rhino/Node;
      46: astore        5
      48: aload         5
      50: invokevirtual #10                 // Method com/google/javascript/rhino/Node.hasChildren:()Z
      53: ifeq          72
      56: aload_1
      57: aload         5
      59: invokevirtual #8                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      62: getstatic     #15                 // Field INTERFACE_FUNCTION_NOT_EMPTY:Lcom/google/javascript/jscomp/DiagnosticType;
      65: iconst_0
      66: anewarray     #12                 // class java/lang/String
      69: invokevirtual #13                 // Method com/google/javascript/jscomp/NodeTraversal.report:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)V
      72: return

  static {};
    Code:
       0: ldc           #16                 // String JSC_INTERFACE_FUNCTION_NOT_EMPTY
       2: ldc           #17                 // String interface functions must have an empty body
       4: invokestatic  #18                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
       7: putstatic     #15                 // Field INTERFACE_FUNCTION_NOT_EMPTY:Lcom/google/javascript/jscomp/DiagnosticType;
      10: ldc           #19                 // String JSC_INTERFACE_SHOULD_NOT_TAKE_ARGS
      12: ldc           #20                 // String Interface functions should not take any arguments
      14: invokestatic  #18                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      17: putstatic     #11                 // Field INTERFACE_SHOULD_NOT_TAKE_ARGS:Lcom/google/javascript/jscomp/DiagnosticType;
      20: return
}
