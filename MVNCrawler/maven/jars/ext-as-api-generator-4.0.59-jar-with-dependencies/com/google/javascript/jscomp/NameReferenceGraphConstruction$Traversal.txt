Compiled from "NameReferenceGraphConstruction.java"
class com.google.javascript.jscomp.NameReferenceGraphConstruction$Traversal implements com.google.javascript.jscomp.NodeTraversal$ScopedCallback {
  final boolean isExtern;

  final com.google.javascript.jscomp.NameReferenceGraphConstruction this$0;

  private com.google.javascript.jscomp.NameReferenceGraphConstruction$Traversal(com.google.javascript.jscomp.NameReferenceGraphConstruction, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iload_2
      11: putfield      #4                  // Field isExtern:Z
      14: aload_1
      15: aload_1
      16: invokestatic  #5                  // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$100:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)Lcom/google/javascript/jscomp/NameReferenceGraph;
      19: getfield      #6                  // Field com/google/javascript/jscomp/NameReferenceGraph.main:Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
      22: invokestatic  #7                  // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$200:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;Lcom/google/javascript/jscomp/NameReferenceGraph$Name;)V
      25: return

  public void enterScope(com.google.javascript.jscomp.NodeTraversal);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method com/google/javascript/jscomp/NodeTraversal.getScopeRoot:()Lcom/google/javascript/rhino/Node;
       4: astore_2
       5: aload_2
       6: invokevirtual #9                  // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
       9: astore_3
      10: aload_1
      11: invokevirtual #10                 // Method com/google/javascript/jscomp/NodeTraversal.inGlobalScope:()Z
      14: ifne          114
      17: aload_2
      18: invokestatic  #11                 // Method com/google/javascript/jscomp/NodeUtil.getFunctionName:(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;
      21: astore        4
      23: aload         4
      25: ifnonnull     46
      28: aload_0
      29: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      32: aload_0
      33: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      36: invokestatic  #5                  // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$100:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)Lcom/google/javascript/jscomp/NameReferenceGraph;
      39: getfield      #12                 // Field com/google/javascript/jscomp/NameReferenceGraph.unknown:Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
      42: invokestatic  #7                  // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$200:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;Lcom/google/javascript/jscomp/NameReferenceGraph$Name;)V
      45: return
      46: aload_0
      47: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      50: aload_2
      51: invokestatic  #13                 // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$300:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/jstype/JSType;
      54: astore        5
      56: aload_3
      57: invokevirtual #14                 // Method com/google/javascript/rhino/Node.isAssign:()Z
      60: ifeq          94
      63: aload_3
      64: invokevirtual #15                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      67: invokestatic  #16                 // Method com/google/javascript/jscomp/NodeUtil.isPrototypeProperty:(Lcom/google/javascript/rhino/Node;)Z
      70: ifeq          94
      73: aload_0
      74: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      77: aload_0
      78: aload_3
      79: invokevirtual #15                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      82: aload         5
      84: aload_3
      85: invokespecial #17                 // Method recordPrototypePropDefinition:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
      88: invokestatic  #7                  // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$200:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;Lcom/google/javascript/jscomp/NameReferenceGraph$Name;)V
      91: goto          114
      94: aload_0
      95: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      98: aload_0
      99: aload         4
     101: aload         5
     103: aload_2
     104: aload_2
     105: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getLastChild:()Lcom/google/javascript/rhino/Node;
     108: invokespecial #19                 // Method recordStaticNameDefinition:(Ljava/lang/String;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
     111: invokestatic  #7                  // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$200:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;Lcom/google/javascript/jscomp/NameReferenceGraph$Name;)V
     114: return

  public void exitScope(com.google.javascript.jscomp.NodeTraversal);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method com/google/javascript/jscomp/NodeTraversal.inGlobalScope:()Z
       4: ifne          14
       7: aload_0
       8: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      11: invokestatic  #20                 // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$400:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)V
      14: return

  public boolean shouldTraverse(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: iconst_1
       1: ireturn

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: invokevirtual #21                 // Method com/google/javascript/rhino/Node.getType:()I
       4: lookupswitch  { // 5
                    33: 56
                    37: 256
                    38: 56
                    86: 138
                   118: 226
               default: 303
          }
      56: aload_3
      57: invokevirtual #22                 // Method com/google/javascript/rhino/Node.isGetProp:()Z
      60: ifeq          64
      63: return
      64: aload_3
      65: invokevirtual #23                 // Method com/google/javascript/rhino/Node.isFunction:()Z
      68: ifeq          72
      71: return
      72: aload_3
      73: invokevirtual #14                 // Method com/google/javascript/rhino/Node.isAssign:()Z
      76: ifeq          80
      79: return
      80: aload_0
      81: aload_1
      82: aload_2
      83: invokespecial #24                 // Method isLocalNameReference:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;)Z
      86: ifeq          90
      89: return
      90: aload_0
      91: aload_2
      92: invokespecial #25                 // Method isPrototypeNameReference:(Lcom/google/javascript/rhino/Node;)Z
      95: ifeq          107
      98: aload_0
      99: aload_2
     100: aload_3
     101: invokespecial #26                 // Method recordPrototypePropUse:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
     104: goto          303
     107: aload_0
     108: aload_2
     109: aload_1
     110: invokevirtual #27                 // Method com/google/javascript/jscomp/NodeTraversal.getScope:()Lcom/google/javascript/jscomp/Scope;
     113: invokespecial #28                 // Method isStaticNameReference:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/Scope;)Z
     116: ifeq          129
     119: aload_0
     120: aload_2
     121: aload_3
     122: invokespecial #29                 // Method recordStaticNameUse:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/jscomp/NameReferenceGraph$Reference;
     125: pop
     126: goto          303
     129: aload_0
     130: aload_2
     131: aload_3
     132: invokespecial #30                 // Method recordUnknownUse:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
     135: goto          303
     138: aload_2
     139: invokevirtual #15                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     142: astore        4
     144: aload_2
     145: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getLastChild:()Lcom/google/javascript/rhino/Node;
     148: astore        5
     150: aload         5
     152: invokevirtual #23                 // Method com/google/javascript/rhino/Node.isFunction:()Z
     155: ifeq          159
     158: return
     159: aload         4
     161: invokevirtual #31                 // Method com/google/javascript/rhino/Node.isName:()Z
     164: ifne          183
     167: aload         4
     169: invokevirtual #22                 // Method com/google/javascript/rhino/Node.isGetProp:()Z
     172: ifne          183
     175: aload         5
     177: invokevirtual #22                 // Method com/google/javascript/rhino/Node.isGetProp:()Z
     180: ifeq          215
     183: aload         4
     185: invokestatic  #16                 // Method com/google/javascript/jscomp/NodeUtil.isPrototypeProperty:(Lcom/google/javascript/rhino/Node;)Z
     188: ifeq          215
     191: aload_0
     192: aload         4
     194: aload_0
     195: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
     198: aload         5
     200: invokestatic  #13                 // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$300:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/jstype/JSType;
     203: aload_2
     204: invokespecial #17                 // Method recordPrototypePropDefinition:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
     207: astore        6
     209: aload         6
     211: iconst_1
     212: invokevirtual #32                 // Method com/google/javascript/jscomp/NameReferenceGraph$Name.setAliased:(Z)V
     215: aload_0
     216: aload         4
     218: aload         5
     220: invokespecial #33                 // Method maybeAliasNamesOnAssign:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
     223: goto          303
     226: aload_2
     227: invokevirtual #15                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     230: astore        6
     232: aload         6
     234: invokevirtual #15                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     237: astore        7
     239: aload         7
     241: ifnonnull     245
     244: return
     245: aload_0
     246: aload         6
     248: aload         7
     250: invokespecial #33                 // Method maybeAliasNamesOnAssign:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
     253: goto          303
     256: aload_2
     257: invokevirtual #15                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     260: astore        8
     262: aload         8
     264: invokevirtual #34                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
     267: dup
     268: astore        8
     270: ifnull        298
     273: aload         8
     275: invokevirtual #31                 // Method com/google/javascript/rhino/Node.isName:()Z
     278: ifne          289
     281: aload         8
     283: invokevirtual #22                 // Method com/google/javascript/rhino/Node.isGetProp:()Z
     286: ifeq          262
     289: aload_0
     290: aload         8
     292: invokespecial #35                 // Method safeAlias:(Lcom/google/javascript/rhino/Node;)V
     295: goto          262
     298: aload_0
     299: aload_2
     300: invokespecial #36                 // Method maybeRecordExport:(Lcom/google/javascript/rhino/Node;)V
     303: return

  private boolean containsName(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: bipush        38
       3: invokestatic  #38                 // Method com/google/javascript/jscomp/NodeUtil.containsType:(Lcom/google/javascript/rhino/Node;I)Z
       6: ifne          27
       9: aload_1
      10: bipush        35
      12: invokestatic  #38                 // Method com/google/javascript/jscomp/NodeUtil.containsType:(Lcom/google/javascript/rhino/Node;I)Z
      15: ifne          27
      18: aload_1
      19: bipush        33
      21: invokestatic  #38                 // Method com/google/javascript/jscomp/NodeUtil.containsType:(Lcom/google/javascript/rhino/Node;I)Z
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  private void safeAlias(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #31                 // Method com/google/javascript/rhino/Node.isName:()Z
       4: ifne          14
       7: aload_1
       8: invokevirtual #22                 // Method com/google/javascript/rhino/Node.isGetProp:()Z
      11: ifeq          29
      14: aload_1
      15: invokevirtual #39                 // Method com/google/javascript/rhino/Node.getQualifiedName:()Ljava/lang/String;
      18: astore_2
      19: aload_2
      20: ifnull        29
      23: aload_0
      24: aload_2
      25: invokespecial #40                 // Method defineAndAlias:(Ljava/lang/String;)V
      28: return
      29: aload_1
      30: invokevirtual #22                 // Method com/google/javascript/rhino/Node.isGetProp:()Z
      33: ifeq          50
      36: aload_0
      37: aload_1
      38: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getLastChild:()Lcom/google/javascript/rhino/Node;
      41: invokevirtual #41                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      44: invokespecial #40                 // Method defineAndAlias:(Ljava/lang/String;)V
      47: goto          94
      50: aload_1
      51: invokevirtual #14                 // Method com/google/javascript/rhino/Node.isAssign:()Z
      54: ifeq          68
      57: aload_0
      58: aload_1
      59: invokevirtual #15                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      62: invokespecial #35                 // Method safeAlias:(Lcom/google/javascript/rhino/Node;)V
      65: goto          94
      68: aload_1
      69: invokevirtual #42                 // Method com/google/javascript/rhino/Node.hasChildren:()Z
      72: ifeq          94
      75: aload_1
      76: invokevirtual #15                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      79: astore_2
      80: aload_0
      81: aload_2
      82: invokespecial #35                 // Method safeAlias:(Lcom/google/javascript/rhino/Node;)V
      85: aload_2
      86: invokevirtual #34                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      89: dup
      90: astore_2
      91: ifnonnull     80
      94: return

  private void maybeAliasNamesOnAssign(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #31                 // Method com/google/javascript/rhino/Node.isName:()Z
       4: ifne          14
       7: aload_1
       8: invokevirtual #22                 // Method com/google/javascript/rhino/Node.isGetProp:()Z
      11: ifeq          46
      14: aload_0
      15: aload_2
      16: invokespecial #43                 // Method containsName:(Lcom/google/javascript/rhino/Node;)Z
      19: ifeq          46
      22: aload_2
      23: invokevirtual #23                 // Method com/google/javascript/rhino/Node.isFunction:()Z
      26: ifne          46
      29: aload_2
      30: invokevirtual #44                 // Method com/google/javascript/rhino/Node.isNew:()Z
      33: ifne          46
      36: aload_0
      37: aload_1
      38: invokespecial #35                 // Method safeAlias:(Lcom/google/javascript/rhino/Node;)V
      41: aload_0
      42: aload_2
      43: invokespecial #35                 // Method safeAlias:(Lcom/google/javascript/rhino/Node;)V
      46: return

  private void defineAndAlias(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
       4: invokestatic  #5                  // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$100:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)Lcom/google/javascript/jscomp/NameReferenceGraph;
       7: aload_1
       8: aload_0
       9: getfield      #4                  // Field isExtern:Z
      12: invokevirtual #45                 // Method com/google/javascript/jscomp/NameReferenceGraph.defineNameIfNotExists:(Ljava/lang/String;Z)Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
      15: iconst_1
      16: invokevirtual #32                 // Method com/google/javascript/jscomp/NameReferenceGraph$Name.setAliased:(Z)V
      19: return

  private void maybeRecordExport(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #46                 // Method com/google/javascript/rhino/Node.isCall:()Z
       4: invokestatic  #47                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
       7: aload_1
       8: invokevirtual #15                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      11: astore_2
      12: aload_2
      13: invokevirtual #22                 // Method com/google/javascript/rhino/Node.isGetProp:()Z
      16: ifne          20
      19: return
      20: aload_2
      21: invokevirtual #39                 // Method com/google/javascript/rhino/Node.getQualifiedName:()Ljava/lang/String;
      24: astore_3
      25: aload_3
      26: ifnonnull     30
      29: return
      30: aload_3
      31: ldc           #48                 // String .call
      33: invokevirtual #49                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      36: ifne          48
      39: aload_3
      40: ldc           #50                 // String .apply
      42: invokevirtual #49                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      45: ifeq          72
      48: aload_0
      49: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      52: invokestatic  #5                  // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$100:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)Lcom/google/javascript/jscomp/NameReferenceGraph;
      55: aload_2
      56: invokevirtual #15                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      59: invokevirtual #39                 // Method com/google/javascript/rhino/Node.getQualifiedName:()Ljava/lang/String;
      62: aload_0
      63: getfield      #4                  // Field isExtern:Z
      66: invokevirtual #45                 // Method com/google/javascript/jscomp/NameReferenceGraph.defineNameIfNotExists:(Ljava/lang/String;Z)Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
      69: invokevirtual #51                 // Method com/google/javascript/jscomp/NameReferenceGraph$Name.markExposedToCallOrApply:()V
      72: ldc           #52                 // String goog.exportSymbol
      74: aload_3
      75: invokevirtual #53                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      78: ifne          82
      81: return
      82: aload_2
      83: invokevirtual #34                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      86: astore        4
      88: aload         4
      90: invokevirtual #54                 // Method com/google/javascript/rhino/Node.isString:()Z
      93: ifne          97
      96: return
      97: aload         4
      99: invokevirtual #34                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
     102: astore        5
     104: aload         5
     106: invokevirtual #39                 // Method com/google/javascript/rhino/Node.getQualifiedName:()Ljava/lang/String;
     109: astore        6
     111: aload         6
     113: ifnull        124
     116: aload         5
     118: invokevirtual #34                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
     121: ifnull        125
     124: return
     125: aload_0
     126: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
     129: invokestatic  #5                  // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$100:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)Lcom/google/javascript/jscomp/NameReferenceGraph;
     132: aload         6
     134: iconst_0
     135: invokevirtual #45                 // Method com/google/javascript/jscomp/NameReferenceGraph.defineNameIfNotExists:(Ljava/lang/String;Z)Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
     138: invokevirtual #55                 // Method com/google/javascript/jscomp/NameReferenceGraph$Name.markExported:()V
     141: return

  private boolean isLocalNameReference(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: invokevirtual #31                 // Method com/google/javascript/rhino/Node.isName:()Z
       4: ifeq          36
       7: aload_1
       8: invokevirtual #27                 // Method com/google/javascript/jscomp/NodeTraversal.getScope:()Lcom/google/javascript/jscomp/Scope;
      11: aload_2
      12: invokevirtual #41                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      15: invokevirtual #56                 // Method com/google/javascript/jscomp/Scope.getVar:(Ljava/lang/String;)Lcom/google/javascript/jscomp/Scope$Var;
      18: astore_3
      19: aload_3
      20: ifnull        34
      23: aload_3
      24: invokevirtual #57                 // Method com/google/javascript/jscomp/Scope$Var.isLocal:()Z
      27: ifeq          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn
      36: iconst_0
      37: ireturn

  private boolean isStaticNameReference(com.google.javascript.rhino.Node, com.google.javascript.jscomp.Scope);
    Code:
       0: aload_1
       1: invokevirtual #31                 // Method com/google/javascript/rhino/Node.isName:()Z
       4: ifne          14
       7: aload_1
       8: invokevirtual #22                 // Method com/google/javascript/rhino/Node.isGetProp:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokestatic  #47                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      22: aload_1
      23: invokevirtual #31                 // Method com/google/javascript/rhino/Node.isName:()Z
      26: ifeq          31
      29: iconst_1
      30: ireturn
      31: aload_1
      32: invokevirtual #39                 // Method com/google/javascript/rhino/Node.getQualifiedName:()Ljava/lang/String;
      35: astore_3
      36: aload_3
      37: ifnonnull     42
      40: iconst_0
      41: ireturn
      42: aload_2
      43: aload_3
      44: iconst_1
      45: invokevirtual #58                 // Method com/google/javascript/jscomp/Scope.isDeclared:(Ljava/lang/String;Z)Z
      48: ireturn

  private boolean isPrototypeNameReference(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method com/google/javascript/rhino/Node.isGetProp:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      13: aload_1
      14: invokevirtual #15                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      17: invokestatic  #13                 // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$300:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/jstype/JSType;
      20: astore_2
      21: aload_2
      22: invokevirtual #59                 // Method com/google/javascript/rhino/jstype/JSType.isUnknownType:()Z
      25: ifne          35
      28: aload_2
      29: invokevirtual #60                 // Method com/google/javascript/rhino/jstype/JSType.isUnionType:()Z
      32: ifeq          37
      35: iconst_0
      36: ireturn
      37: aload_2
      38: invokevirtual #61                 // Method com/google/javascript/rhino/jstype/JSType.isInstanceType:()Z
      41: ifne          51
      44: aload_2
      45: invokevirtual #62                 // Method com/google/javascript/rhino/jstype/JSType.autoboxesTo:()Lcom/google/javascript/rhino/jstype/JSType;
      48: ifnull        55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: ireturn

  private com.google.javascript.jscomp.NameReferenceGraph$Name recordStaticNameDefinition(java.lang.String, com.google.javascript.rhino.jstype.JSType, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
       4: invokestatic  #63                 // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$500:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
       7: aload_0
       8: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      11: invokestatic  #5                  // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$100:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)Lcom/google/javascript/jscomp/NameReferenceGraph;
      14: getfield      #6                  // Field com/google/javascript/jscomp/NameReferenceGraph.main:Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
      17: if_acmpeq     20
      20: aload_2
      21: invokevirtual #64                 // Method com/google/javascript/rhino/jstype/JSType.isConstructor:()Z
      24: ifeq          40
      27: aload_0
      28: aload_1
      29: aload_2
      30: invokevirtual #65                 // Method com/google/javascript/rhino/jstype/JSType.toMaybeFunctionType:()Lcom/google/javascript/rhino/jstype/FunctionType;
      33: aload_3
      34: aload         4
      36: invokespecial #66                 // Method recordClassConstructorOrInterface:(Ljava/lang/String;Lcom/google/javascript/rhino/jstype/FunctionType;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
      39: areturn
      40: aload_0
      41: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      44: invokestatic  #5                  // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$100:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)Lcom/google/javascript/jscomp/NameReferenceGraph;
      47: aload_1
      48: aload_0
      49: getfield      #4                  // Field isExtern:Z
      52: invokevirtual #45                 // Method com/google/javascript/jscomp/NameReferenceGraph.defineNameIfNotExists:(Ljava/lang/String;Z)Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
      55: astore        5
      57: aload         5
      59: aload_2
      60: invokevirtual #67                 // Method com/google/javascript/jscomp/NameReferenceGraph$Name.setType:(Lcom/google/javascript/rhino/jstype/JSType;)V
      63: aload_3
      64: invokevirtual #14                 // Method com/google/javascript/rhino/Node.isAssign:()Z
      67: ifeq          79
      70: aload         5
      72: aload_3
      73: invokevirtual #68                 // Method com/google/javascript/jscomp/NameReferenceGraph$Name.addAssignmentDeclaration:(Lcom/google/javascript/rhino/Node;)V
      76: goto          85
      79: aload         5
      81: aload_3
      82: invokevirtual #69                 // Method com/google/javascript/jscomp/NameReferenceGraph$Name.addFunctionDeclaration:(Lcom/google/javascript/rhino/Node;)V
      85: aload         5
      87: areturn

  private com.google.javascript.jscomp.NameReferenceGraph$Name recordPrototypePropDefinition(com.google.javascript.rhino.Node, com.google.javascript.rhino.jstype.JSType, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
       4: aload_1
       5: invokestatic  #70                 // Method com/google/javascript/jscomp/NodeUtil.getPrototypeClassName:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
       8: invokestatic  #13                 // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$300:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/jstype/JSType;
      11: astore        4
      13: aconst_null
      14: astore        5
      16: aconst_null
      17: astore        6
      19: aload         4
      21: ifnull        49
      24: aload         4
      26: invokevirtual #64                 // Method com/google/javascript/rhino/jstype/JSType.isConstructor:()Z
      29: ifeq          49
      32: aload         4
      34: invokevirtual #65                 // Method com/google/javascript/rhino/jstype/JSType.toMaybeFunctionType:()Lcom/google/javascript/rhino/jstype/FunctionType;
      37: astore        5
      39: aload         5
      41: invokevirtual #71                 // Method com/google/javascript/rhino/jstype/FunctionType.getReferenceName:()Ljava/lang/String;
      44: astore        6
      46: goto          76
      49: aload_0
      50: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      53: invokestatic  #72                 // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$600:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)Lcom/google/javascript/jscomp/AbstractCompiler;
      56: invokevirtual #73                 // Method com/google/javascript/jscomp/AbstractCompiler.getTypeRegistry:()Lcom/google/javascript/rhino/jstype/JSTypeRegistry;
      59: getstatic     #74                 // Field com/google/javascript/rhino/jstype/JSTypeNative.U2U_CONSTRUCTOR_TYPE:Lcom/google/javascript/rhino/jstype/JSTypeNative;
      62: invokevirtual #75                 // Method com/google/javascript/rhino/jstype/JSTypeRegistry.getNativeFunctionType:(Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/FunctionType;
      65: astore        5
      67: aload_1
      68: invokestatic  #70                 // Method com/google/javascript/jscomp/NodeUtil.getPrototypeClassName:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      71: invokevirtual #39                 // Method com/google/javascript/rhino/Node.getQualifiedName:()Ljava/lang/String;
      74: astore        6
      76: aload_0
      77: aload         6
      79: aload         5
      81: aconst_null
      82: aconst_null
      83: invokespecial #66                 // Method recordClassConstructorOrInterface:(Ljava/lang/String;Lcom/google/javascript/rhino/jstype/FunctionType;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
      86: pop
      87: new           #76                 // class java/lang/StringBuilder
      90: dup
      91: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
      94: aload         6
      96: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: ldc           #79                 // String .prototype.
     101: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_1
     105: invokestatic  #80                 // Method com/google/javascript/jscomp/NodeUtil.getPrototypePropertyName:(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;
     108: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: astore        7
     116: aload_0
     117: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
     120: invokestatic  #5                  // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$100:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)Lcom/google/javascript/jscomp/NameReferenceGraph;
     123: aload         7
     125: aload_0
     126: getfield      #4                  // Field isExtern:Z
     129: invokevirtual #45                 // Method com/google/javascript/jscomp/NameReferenceGraph.defineNameIfNotExists:(Ljava/lang/String;Z)Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
     132: astore        8
     134: aload         8
     136: ldc           #82                 // String %s should be in the name graph as a node.
     138: iconst_1
     139: anewarray     #83                 // class java/lang/Object
     142: dup
     143: iconst_0
     144: aload         7
     146: aastore
     147: invokestatic  #84                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
     150: pop
     151: aload_3
     152: ifnull        161
     155: aload         8
     157: aload_3
     158: invokevirtual #68                 // Method com/google/javascript/jscomp/NameReferenceGraph$Name.addAssignmentDeclaration:(Lcom/google/javascript/rhino/Node;)V
     161: aload         8
     163: aload_2
     164: invokevirtual #67                 // Method com/google/javascript/jscomp/NameReferenceGraph$Name.setType:(Lcom/google/javascript/rhino/jstype/JSType;)V
     167: aload         8
     169: areturn

  private com.google.javascript.jscomp.NameReferenceGraph$Reference recordStaticNameUse(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #4                  // Field isExtern:Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: new           #85                 // class com/google/javascript/jscomp/NameReferenceGraph$Reference
      12: dup
      13: aload_1
      14: invokespecial #86                 // Method com/google/javascript/jscomp/NameReferenceGraph$Reference."<init>":(Lcom/google/javascript/rhino/Node;)V
      17: astore_3
      18: aload_0
      19: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      22: invokestatic  #5                  // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$100:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)Lcom/google/javascript/jscomp/NameReferenceGraph;
      25: aload_1
      26: invokevirtual #39                 // Method com/google/javascript/rhino/Node.getQualifiedName:()Ljava/lang/String;
      29: aload_0
      30: getfield      #4                  // Field isExtern:Z
      33: invokevirtual #45                 // Method com/google/javascript/jscomp/NameReferenceGraph.defineNameIfNotExists:(Ljava/lang/String;Z)Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
      36: astore        4
      38: aload         4
      40: aload_0
      41: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      44: aload_1
      45: invokestatic  #13                 // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$300:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/jstype/JSType;
      48: invokevirtual #67                 // Method com/google/javascript/jscomp/NameReferenceGraph$Name.setType:(Lcom/google/javascript/rhino/jstype/JSType;)V
      51: aload_0
      52: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      55: invokestatic  #5                  // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$100:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)Lcom/google/javascript/jscomp/NameReferenceGraph;
      58: aload_0
      59: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      62: invokestatic  #63                 // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$500:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
      65: aload_3
      66: aload         4
      68: invokevirtual #87                 // Method com/google/javascript/jscomp/NameReferenceGraph.connect:(Lcom/google/javascript/jscomp/NameReferenceGraph$Name;Lcom/google/javascript/jscomp/NameReferenceGraph$Reference;Lcom/google/javascript/jscomp/NameReferenceGraph$Name;)V
      71: aload_3
      72: areturn

  private void recordPrototypePropUse(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method com/google/javascript/rhino/Node.isGetProp:()Z
       4: invokestatic  #47                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
       7: aload_1
       8: invokevirtual #15                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      11: astore_3
      12: aload_0
      13: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      16: aload_3
      17: invokestatic  #13                 // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$300:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/jstype/JSType;
      20: astore        4
      22: aload         4
      24: invokevirtual #62                 // Method com/google/javascript/rhino/jstype/JSType.autoboxesTo:()Lcom/google/javascript/rhino/jstype/JSType;
      27: astore        5
      29: aload         5
      31: ifnull        39
      34: aload         5
      36: goto          41
      39: aload         4
      41: astore        4
      43: aload         4
      45: invokevirtual #88                 // Method com/google/javascript/rhino/jstype/JSType.toObjectType:()Lcom/google/javascript/rhino/jstype/ObjectType;
      48: astore        6
      50: aload         6
      52: ifnull        59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: invokestatic  #89                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      63: aload_0
      64: getfield      #4                  // Field isExtern:Z
      67: ifne          143
      70: new           #85                 // class com/google/javascript/jscomp/NameReferenceGraph$Reference
      73: dup
      74: aload_1
      75: invokespecial #86                 // Method com/google/javascript/jscomp/NameReferenceGraph$Reference."<init>":(Lcom/google/javascript/rhino/Node;)V
      78: astore        7
      80: aload         6
      82: invokevirtual #90                 // Method com/google/javascript/rhino/jstype/ObjectType.getConstructor:()Lcom/google/javascript/rhino/jstype/FunctionType;
      85: astore        8
      87: aload         8
      89: ifnull        137
      92: aload_1
      93: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getLastChild:()Lcom/google/javascript/rhino/Node;
      96: invokevirtual #41                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      99: astore        9
     101: aload         8
     103: invokevirtual #91                 // Method com/google/javascript/rhino/jstype/FunctionType.getPrototype:()Lcom/google/javascript/rhino/jstype/ObjectType;
     106: aload         9
     108: invokevirtual #92                 // Method com/google/javascript/rhino/jstype/ObjectType.hasOwnProperty:(Ljava/lang/String;)Z
     111: ifne          124
     114: aload_0
     115: aload         8
     117: aload         9
     119: aload         7
     121: invokespecial #93                 // Method recordSuperClassPrototypePropUse:(Lcom/google/javascript/rhino/jstype/FunctionType;Ljava/lang/String;Lcom/google/javascript/jscomp/NameReferenceGraph$Reference;)V
     124: aload_0
     125: aload         8
     127: aload         9
     129: aload         7
     131: invokespecial #94                 // Method recordSubclassPrototypePropUse:(Lcom/google/javascript/rhino/jstype/FunctionType;Ljava/lang/String;Lcom/google/javascript/jscomp/NameReferenceGraph$Reference;)V
     134: goto          143
     137: aload_0
     138: aload_1
     139: aload_2
     140: invokespecial #30                 // Method recordUnknownUse:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
     143: return

  private void recordSuperClassPrototypePropUse(com.google.javascript.rhino.jstype.FunctionType, java.lang.String, com.google.javascript.jscomp.NameReferenceGraph$Reference);
    Code:
       0: aload_1
       1: invokevirtual #95                 // Method com/google/javascript/rhino/jstype/FunctionType.getSuperClassConstructor:()Lcom/google/javascript/rhino/jstype/FunctionType;
       4: astore        4
       6: aload         4
       8: ifnull        90
      11: aload         4
      13: invokevirtual #91                 // Method com/google/javascript/rhino/jstype/FunctionType.getPrototype:()Lcom/google/javascript/rhino/jstype/ObjectType;
      16: aload_2
      17: invokevirtual #92                 // Method com/google/javascript/rhino/jstype/ObjectType.hasOwnProperty:(Ljava/lang/String;)Z
      20: ifeq          80
      23: aload_0
      24: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      27: invokestatic  #5                  // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$100:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)Lcom/google/javascript/jscomp/NameReferenceGraph;
      30: aload_0
      31: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      34: invokestatic  #63                 // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$500:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
      37: aload_3
      38: aload_0
      39: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      42: invokestatic  #5                  // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$100:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)Lcom/google/javascript/jscomp/NameReferenceGraph;
      45: new           #76                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
      52: aload         4
      54: invokevirtual #71                 // Method com/google/javascript/rhino/jstype/FunctionType.getReferenceName:()Ljava/lang/String;
      57: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: ldc           #79                 // String .prototype.
      62: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_2
      66: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: iconst_0
      73: invokevirtual #45                 // Method com/google/javascript/jscomp/NameReferenceGraph.defineNameIfNotExists:(Ljava/lang/String;Z)Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
      76: invokevirtual #87                 // Method com/google/javascript/jscomp/NameReferenceGraph.connect:(Lcom/google/javascript/jscomp/NameReferenceGraph$Name;Lcom/google/javascript/jscomp/NameReferenceGraph$Reference;Lcom/google/javascript/jscomp/NameReferenceGraph$Name;)V
      79: return
      80: aload         4
      82: invokevirtual #95                 // Method com/google/javascript/rhino/jstype/FunctionType.getSuperClassConstructor:()Lcom/google/javascript/rhino/jstype/FunctionType;
      85: astore        4
      87: goto          6
      90: return

  private void recordSubclassPrototypePropUse(com.google.javascript.rhino.jstype.FunctionType, java.lang.String, com.google.javascript.jscomp.NameReferenceGraph$Reference);
    Code:
       0: aload_1
       1: invokevirtual #91                 // Method com/google/javascript/rhino/jstype/FunctionType.getPrototype:()Lcom/google/javascript/rhino/jstype/ObjectType;
       4: aload_2
       5: invokevirtual #92                 // Method com/google/javascript/rhino/jstype/ObjectType.hasOwnProperty:(Ljava/lang/String;)Z
       8: ifeq          66
      11: aload_0
      12: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      15: invokestatic  #5                  // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$100:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)Lcom/google/javascript/jscomp/NameReferenceGraph;
      18: aload_0
      19: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      22: invokestatic  #63                 // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$500:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
      25: aload_3
      26: aload_0
      27: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      30: invokestatic  #5                  // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$100:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)Lcom/google/javascript/jscomp/NameReferenceGraph;
      33: new           #76                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
      40: aload_1
      41: invokevirtual #71                 // Method com/google/javascript/rhino/jstype/FunctionType.getReferenceName:()Ljava/lang/String;
      44: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc           #79                 // String .prototype.
      49: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_2
      53: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: iconst_0
      60: invokevirtual #45                 // Method com/google/javascript/jscomp/NameReferenceGraph.defineNameIfNotExists:(Ljava/lang/String;Z)Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
      63: invokevirtual #87                 // Method com/google/javascript/jscomp/NameReferenceGraph.connect:(Lcom/google/javascript/jscomp/NameReferenceGraph$Name;Lcom/google/javascript/jscomp/NameReferenceGraph$Reference;Lcom/google/javascript/jscomp/NameReferenceGraph$Name;)V
      66: aload_1
      67: invokevirtual #96                 // Method com/google/javascript/rhino/jstype/FunctionType.getSubTypes:()Ljava/util/List;
      70: ifnull        117
      73: aload_1
      74: invokevirtual #96                 // Method com/google/javascript/rhino/jstype/FunctionType.getSubTypes:()Ljava/util/List;
      77: invokeinterface #97,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      82: astore        4
      84: aload         4
      86: invokeinterface #98,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      91: ifeq          117
      94: aload         4
      96: invokeinterface #99,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     101: checkcast     #100                // class com/google/javascript/rhino/jstype/FunctionType
     104: astore        5
     106: aload_0
     107: aload         5
     109: aload_2
     110: aload_3
     111: invokespecial #94                 // Method recordSubclassPrototypePropUse:(Lcom/google/javascript/rhino/jstype/FunctionType;Ljava/lang/String;Lcom/google/javascript/jscomp/NameReferenceGraph$Reference;)V
     114: goto          84
     117: return

  private void recordUnknownUse(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #4                  // Field isExtern:Z
       4: ifeq          8
       7: return
       8: aload_1
       9: invokevirtual #22                 // Method com/google/javascript/rhino/Node.isGetProp:()Z
      12: invokestatic  #47                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      15: new           #85                 // class com/google/javascript/jscomp/NameReferenceGraph$Reference
      18: dup
      19: aload_1
      20: invokespecial #86                 // Method com/google/javascript/jscomp/NameReferenceGraph$Reference."<init>":(Lcom/google/javascript/rhino/Node;)V
      23: astore_3
      24: aload_0
      25: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      28: invokestatic  #101                // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$800:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)Lcom/google/common/collect/Multimap;
      31: aload_1
      32: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getLastChild:()Lcom/google/javascript/rhino/Node;
      35: invokevirtual #41                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      38: new           #102                // class com/google/javascript/jscomp/NameReferenceGraphConstruction$NameUse
      41: dup
      42: aload_0
      43: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      46: invokestatic  #63                 // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$500:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
      49: aload_3
      50: aconst_null
      51: invokespecial #103                // Method com/google/javascript/jscomp/NameReferenceGraphConstruction$NameUse."<init>":(Lcom/google/javascript/jscomp/NameReferenceGraph$Name;Lcom/google/javascript/jscomp/NameReferenceGraph$Reference;Lcom/google/javascript/jscomp/NameReferenceGraphConstruction$1;)V
      54: invokeinterface #104,  3          // InterfaceMethod com/google/common/collect/Multimap.put:(Ljava/lang/Object;Ljava/lang/Object;)Z
      59: pop
      60: return

  private com.google.javascript.jscomp.NameReferenceGraph$Name recordClassConstructorOrInterface(java.lang.String, com.google.javascript.rhino.jstype.FunctionType, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: invokevirtual #105                // Method com/google/javascript/rhino/jstype/FunctionType.isConstructor:()Z
       4: ifne          14
       7: aload_2
       8: invokevirtual #106                // Method com/google/javascript/rhino/jstype/FunctionType.isInterface:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokestatic  #47                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      22: aload_0
      23: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      26: invokestatic  #5                  // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$100:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)Lcom/google/javascript/jscomp/NameReferenceGraph;
      29: aload_1
      30: aload_0
      31: getfield      #4                  // Field isExtern:Z
      34: invokevirtual #45                 // Method com/google/javascript/jscomp/NameReferenceGraph.defineNameIfNotExists:(Ljava/lang/String;Z)Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
      37: astore        5
      39: aload         4
      41: ifnull        80
      44: aload         5
      46: aload_0
      47: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
      50: aload         4
      52: invokestatic  #13                 // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$300:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/jstype/JSType;
      55: invokevirtual #67                 // Method com/google/javascript/jscomp/NameReferenceGraph$Name.setType:(Lcom/google/javascript/rhino/jstype/JSType;)V
      58: aload_3
      59: invokevirtual #14                 // Method com/google/javascript/rhino/Node.isAssign:()Z
      62: ifeq          74
      65: aload         5
      67: aload_3
      68: invokevirtual #68                 // Method com/google/javascript/jscomp/NameReferenceGraph$Name.addAssignmentDeclaration:(Lcom/google/javascript/rhino/Node;)V
      71: goto          80
      74: aload         5
      76: aload_3
      77: invokevirtual #69                 // Method com/google/javascript/jscomp/NameReferenceGraph$Name.addFunctionDeclaration:(Lcom/google/javascript/rhino/Node;)V
      80: aload_2
      81: invokevirtual #91                 // Method com/google/javascript/rhino/jstype/FunctionType.getPrototype:()Lcom/google/javascript/rhino/jstype/ObjectType;
      84: astore        6
      86: aload         6
      88: invokevirtual #107                // Method com/google/javascript/rhino/jstype/ObjectType.getOwnPropertyNames:()Ljava/util/Set;
      91: invokeinterface #108,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      96: astore        7
      98: aload         7
     100: invokeinterface #98,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     105: ifeq          162
     108: aload         7
     110: invokeinterface #99,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     115: checkcast     #109                // class java/lang/String
     118: astore        8
     120: aload_0
     121: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;
     124: invokestatic  #5                  // Method com/google/javascript/jscomp/NameReferenceGraphConstruction.access$100:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;)Lcom/google/javascript/jscomp/NameReferenceGraph;
     127: new           #76                 // class java/lang/StringBuilder
     130: dup
     131: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
     134: aload_1
     135: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: ldc           #79                 // String .prototype.
     140: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: aload         8
     145: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     151: aload_0
     152: getfield      #4                  // Field isExtern:Z
     155: invokevirtual #45                 // Method com/google/javascript/jscomp/NameReferenceGraph.defineNameIfNotExists:(Ljava/lang/String;Z)Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
     158: pop
     159: goto          98
     162: aload         5
     164: areturn

  com.google.javascript.jscomp.NameReferenceGraphConstruction$Traversal(com.google.javascript.jscomp.NameReferenceGraphConstruction, boolean, com.google.javascript.jscomp.NameReferenceGraphConstruction$1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method "<init>":(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;Z)V
       6: return
}
