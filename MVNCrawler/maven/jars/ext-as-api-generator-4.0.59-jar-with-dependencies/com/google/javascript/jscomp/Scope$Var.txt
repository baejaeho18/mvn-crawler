Compiled from "Scope.java"
public class com.google.javascript.jscomp.Scope$Var implements com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType>, com.google.javascript.rhino.jstype.StaticReference<com.google.javascript.rhino.jstype.JSType> {
  final java.lang.String name;

  final com.google.javascript.rhino.Node nameNode;

  private com.google.javascript.rhino.jstype.JSType type;

  private final boolean typeInferred;

  final com.google.javascript.jscomp.CompilerInput input;

  final int index;

  final com.google.javascript.jscomp.Scope scope;

  private boolean markedEscaped;

  private boolean markedAssignedExactlyOnce;

  private com.google.javascript.jscomp.Scope$Var(boolean, java.lang.String, com.google.javascript.rhino.Node, com.google.javascript.rhino.jstype.JSType, com.google.javascript.jscomp.Scope, int, com.google.javascript.jscomp.CompilerInput);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field markedEscaped:Z
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field markedAssignedExactlyOnce:Z
      14: aload_0
      15: aload_2
      16: putfield      #5                  // Field name:Ljava/lang/String;
      19: aload_0
      20: aload_3
      21: putfield      #6                  // Field nameNode:Lcom/google/javascript/rhino/Node;
      24: aload_0
      25: aload         4
      27: putfield      #7                  // Field type:Lcom/google/javascript/rhino/jstype/JSType;
      30: aload_0
      31: aload         5
      33: putfield      #8                  // Field scope:Lcom/google/javascript/jscomp/Scope;
      36: aload_0
      37: iload         6
      39: putfield      #9                  // Field index:I
      42: aload_0
      43: aload         7
      45: putfield      #10                 // Field input:Lcom/google/javascript/jscomp/CompilerInput;
      48: aload_0
      49: iload_1
      50: putfield      #11                 // Field typeInferred:Z
      53: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field name:Ljava/lang/String;
       4: areturn

  public com.google.javascript.rhino.Node getNode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field nameNode:Lcom/google/javascript/rhino/Node;
       4: areturn

  com.google.javascript.jscomp.CompilerInput getInput();
    Code:
       0: aload_0
       1: getfield      #10                 // Field input:Lcom/google/javascript/jscomp/CompilerInput;
       4: areturn

  public com.google.javascript.rhino.jstype.StaticSourceFile getSourceFile();
    Code:
       0: aload_0
       1: getfield      #6                  // Field nameNode:Lcom/google/javascript/rhino/Node;
       4: invokevirtual #12                 // Method com/google/javascript/rhino/Node.getStaticSourceFile:()Lcom/google/javascript/rhino/jstype/StaticSourceFile;
       7: areturn

  public com.google.javascript.jscomp.Scope$Var getSymbol();
    Code:
       0: aload_0
       1: areturn

  public com.google.javascript.jscomp.Scope$Var getDeclaration();
    Code:
       0: aload_0
       1: getfield      #6                  // Field nameNode:Lcom/google/javascript/rhino/Node;
       4: ifnonnull     11
       7: aconst_null
       8: goto          12
      11: aload_0
      12: areturn

  public com.google.javascript.rhino.Node getParentNode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field nameNode:Lcom/google/javascript/rhino/Node;
       4: ifnonnull     11
       7: aconst_null
       8: goto          18
      11: aload_0
      12: getfield      #6                  // Field nameNode:Lcom/google/javascript/rhino/Node;
      15: invokevirtual #13                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      18: areturn

  public boolean isBleedingFunction();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getParentNode:()Lcom/google/javascript/rhino/Node;
       4: invokestatic  #15                 // Method com/google/javascript/jscomp/NodeUtil.isFunctionExpression:(Lcom/google/javascript/rhino/Node;)Z
       7: ireturn

  com.google.javascript.jscomp.Scope getScope();
    Code:
       0: aload_0
       1: getfield      #8                  // Field scope:Lcom/google/javascript/jscomp/Scope;
       4: areturn

  public boolean isGlobal();
    Code:
       0: aload_0
       1: getfield      #8                  // Field scope:Lcom/google/javascript/jscomp/Scope;
       4: invokevirtual #16                 // Method com/google/javascript/jscomp/Scope.isGlobal:()Z
       7: ireturn

  public boolean isLocal();
    Code:
       0: aload_0
       1: getfield      #8                  // Field scope:Lcom/google/javascript/jscomp/Scope;
       4: invokevirtual #17                 // Method com/google/javascript/jscomp/Scope.isLocal:()Z
       7: ireturn

  boolean isExtern();
    Code:
       0: aload_0
       1: getfield      #10                 // Field input:Lcom/google/javascript/jscomp/CompilerInput;
       4: ifnull        17
       7: aload_0
       8: getfield      #10                 // Field input:Lcom/google/javascript/jscomp/CompilerInput;
      11: invokevirtual #18                 // Method com/google/javascript/jscomp/CompilerInput.isExtern:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean isInferredConst();
    Code:
       0: aload_0
       1: getfield      #6                  // Field nameNode:Lcom/google/javascript/rhino/Node;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #6                  // Field nameNode:Lcom/google/javascript/rhino/Node;
      13: bipush        64
      15: invokevirtual #20                 // Method com/google/javascript/rhino/Node.getBooleanProp:(I)Z
      18: ifne          33
      21: aload_0
      22: getfield      #6                  // Field nameNode:Lcom/google/javascript/rhino/Node;
      25: bipush        43
      27: invokevirtual #20                 // Method com/google/javascript/rhino/Node.getBooleanProp:(I)Z
      30: ifeq          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public boolean isDefine();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method getJSDocInfo:()Lcom/google/javascript/rhino/JSDocInfo;
       4: astore_1
       5: aload_1
       6: ifnull        20
       9: aload_1
      10: invokevirtual #22                 // Method com/google/javascript/rhino/JSDocInfo.isDefine:()Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public com.google.javascript.rhino.Node getInitialValue();
    Code:
       0: aload_0
       1: getfield      #6                  // Field nameNode:Lcom/google/javascript/rhino/Node;
       4: invokestatic  #23                 // Method com/google/javascript/jscomp/NodeUtil.getRValueOfLValue:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
       7: areturn

  public com.google.javascript.rhino.jstype.JSType getType();
    Code:
       0: aload_0
       1: getfield      #7                  // Field type:Lcom/google/javascript/rhino/jstype/JSType;
       4: areturn

  public com.google.javascript.rhino.Node getNameNode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field nameNode:Lcom/google/javascript/rhino/Node;
       4: areturn

  public com.google.javascript.rhino.JSDocInfo getJSDocInfo();
    Code:
       0: aload_0
       1: getfield      #6                  // Field nameNode:Lcom/google/javascript/rhino/Node;
       4: ifnonnull     11
       7: aconst_null
       8: goto          18
      11: aload_0
      12: getfield      #6                  // Field nameNode:Lcom/google/javascript/rhino/Node;
      15: invokestatic  #24                 // Method com/google/javascript/jscomp/NodeUtil.getBestJSDocInfo:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/JSDocInfo;
      18: areturn

  void setType(com.google.javascript.rhino.jstype.JSType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field type:Lcom/google/javascript/rhino/jstype/JSType;
       5: return

  void resolveType(com.google.javascript.rhino.ErrorReporter);
    Code:
       0: aload_0
       1: getfield      #7                  // Field type:Lcom/google/javascript/rhino/jstype/JSType;
       4: ifnull        23
       7: aload_0
       8: aload_0
       9: getfield      #7                  // Field type:Lcom/google/javascript/rhino/jstype/JSType;
      12: aload_1
      13: aload_0
      14: getfield      #8                  // Field scope:Lcom/google/javascript/jscomp/Scope;
      17: invokevirtual #25                 // Method com/google/javascript/rhino/jstype/JSType.resolve:(Lcom/google/javascript/rhino/ErrorReporter;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;
      20: putfield      #7                  // Field type:Lcom/google/javascript/rhino/jstype/JSType;
      23: return

  public boolean isTypeInferred();
    Code:
       0: aload_0
       1: getfield      #11                 // Field typeInferred:Z
       4: ireturn

  public java.lang.String getInputName();
    Code:
       0: aload_0
       1: getfield      #10                 // Field input:Lcom/google/javascript/jscomp/CompilerInput;
       4: ifnonnull     10
       7: ldc           #26                 // String <non-file>
       9: areturn
      10: aload_0
      11: getfield      #10                 // Field input:Lcom/google/javascript/jscomp/CompilerInput;
      14: invokevirtual #27                 // Method com/google/javascript/jscomp/CompilerInput.getName:()Ljava/lang/String;
      17: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #28                 // class com/google/javascript/jscomp/Scope$Var
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #28                 // class com/google/javascript/jscomp/Scope$Var
      13: astore_2
      14: aload_2
      15: getfield      #6                  // Field nameNode:Lcom/google/javascript/rhino/Node;
      18: aload_0
      19: getfield      #6                  // Field nameNode:Lcom/google/javascript/rhino/Node;
      22: if_acmpne     29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field nameNode:Lcom/google/javascript/rhino/Node;
       4: invokevirtual #29                 // Method java/lang/Object.hashCode:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: new           #30                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #32                 // String Scope.Var
       9: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #5                  // Field name:Ljava/lang/String;
      16: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #34                 // String {
      21: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #7                  // Field type:Lcom/google/javascript/rhino/jstype/JSType;
      28: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #36                 // String }
      33: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  void markEscaped();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field markedEscaped:Z
       5: return

  boolean isMarkedEscaped();
    Code:
       0: aload_0
       1: getfield      #3                  // Field markedEscaped:Z
       4: ireturn

  void markAssignedExactlyOnce();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field markedAssignedExactlyOnce:Z
       5: return

  boolean isMarkedAssignedExactlyOnce();
    Code:
       0: aload_0
       1: getfield      #4                  // Field markedAssignedExactlyOnce:Z
       4: ireturn

  boolean isVar();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method declarationType:()I
       4: bipush        118
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  boolean isLet();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method declarationType:()I
       4: sipush        162
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  boolean isConst();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method declarationType:()I
       4: sipush        149
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  boolean isParam();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method declarationType:()I
       4: bipush        83
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  private int declarationType();
    Code:
       0: bipush        118
       2: invokestatic  #40                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: sipush        162
       8: invokestatic  #40                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: sipush        149
      14: invokestatic  #40                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      17: bipush        105
      19: invokestatic  #40                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      22: sipush        158
      25: invokestatic  #40                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: bipush        120
      30: invokestatic  #40                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: iconst_1
      34: anewarray     #41                 // class java/lang/Integer
      37: dup
      38: iconst_0
      39: bipush        83
      41: invokestatic  #40                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      44: aastore
      45: invokestatic  #42                 // Method com/google/common/collect/ImmutableSet.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      48: astore_1
      49: aload_0
      50: getfield      #6                  // Field nameNode:Lcom/google/javascript/rhino/Node;
      53: astore_2
      54: aload_2
      55: ifnull        87
      58: aload_1
      59: aload_2
      60: invokevirtual #43                 // Method com/google/javascript/rhino/Node.getType:()I
      63: invokestatic  #40                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      66: invokeinterface #44,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      71: ifeq          79
      74: aload_2
      75: invokevirtual #43                 // Method com/google/javascript/rhino/Node.getType:()I
      78: ireturn
      79: aload_2
      80: invokevirtual #13                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      83: astore_2
      84: goto          54
      87: new           #45                 // class java/lang/IllegalStateException
      90: dup
      91: new           #30                 // class java/lang/StringBuilder
      94: dup
      95: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      98: ldc           #46                 // String The nameNode for
     100: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload_0
     104: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     107: ldc           #47                 // String  must be a descendant
     109: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: ldc           #48                 // String  of one of:
     114: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: aload_1
     118: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     121: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     124: invokespecial #49                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     127: athrow

  public com.google.javascript.rhino.jstype.StaticReference getDeclaration();
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method getDeclaration:()Lcom/google/javascript/jscomp/Scope$Var;
       4: areturn

  public java.lang.Object getType();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method getType:()Lcom/google/javascript/rhino/jstype/JSType;
       4: areturn

  public com.google.javascript.rhino.jstype.StaticSlot getSymbol();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method getSymbol:()Lcom/google/javascript/jscomp/Scope$Var;
       4: areturn

  com.google.javascript.jscomp.Scope$Var(boolean, java.lang.String, com.google.javascript.rhino.Node, com.google.javascript.rhino.jstype.JSType, com.google.javascript.jscomp.Scope, int, com.google.javascript.jscomp.CompilerInput, com.google.javascript.jscomp.Scope$1);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: invokespecial #1                  // Method "<init>":(ZLjava/lang/String;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/jscomp/Scope;ILcom/google/javascript/jscomp/CompilerInput;)V
      15: return
}
