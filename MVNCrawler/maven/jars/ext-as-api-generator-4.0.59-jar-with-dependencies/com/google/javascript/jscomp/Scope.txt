Compiled from "Scope.java"
public class com.google.javascript.jscomp.Scope implements com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>, com.google.javascript.rhino.jstype.StaticSymbolTable<com.google.javascript.jscomp.Scope$Var, com.google.javascript.jscomp.Scope$Var> {
  private final java.util.Map<java.lang.String, com.google.javascript.jscomp.Scope$Var> vars;

  private final com.google.javascript.jscomp.Scope parent;

  private final int depth;

  private final com.google.javascript.rhino.Node rootNode;

  private final boolean isBottom;

  private com.google.javascript.jscomp.Scope$Var arguments;

  private static final com.google.common.base.Predicate<com.google.javascript.jscomp.Scope$Var> DECLARATIVELY_UNBOUND_VARS_WITHOUT_TYPES;

  private com.google.javascript.jscomp.Scope$TypeResolver typeResolver;

  com.google.javascript.jscomp.Scope(com.google.javascript.jscomp.Scope, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #5                  // Field vars:Ljava/util/Map;
      15: aload_1
      16: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_2
      21: aload_1
      22: getfield      #1                  // Field rootNode:Lcom/google/javascript/rhino/Node;
      25: if_acmpeq     32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: invokestatic  #7                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      36: aload_0
      37: aload_1
      38: putfield      #8                  // Field parent:Lcom/google/javascript/jscomp/Scope;
      41: aload_0
      42: aload_2
      43: putfield      #1                  // Field rootNode:Lcom/google/javascript/rhino/Node;
      46: aload_0
      47: iconst_0
      48: putfield      #9                  // Field isBottom:Z
      51: aload_0
      52: aload_1
      53: getfield      #10                 // Field depth:I
      56: iconst_1
      57: iadd
      58: putfield      #10                 // Field depth:I
      61: return

  private com.google.javascript.jscomp.Scope(com.google.javascript.rhino.Node, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #5                  // Field vars:Ljava/util/Map;
      15: aload_0
      16: aconst_null
      17: putfield      #8                  // Field parent:Lcom/google/javascript/jscomp/Scope;
      20: aload_0
      21: aload_1
      22: putfield      #1                  // Field rootNode:Lcom/google/javascript/rhino/Node;
      25: aload_0
      26: iload_2
      27: putfield      #9                  // Field isBottom:Z
      30: aload_0
      31: iconst_0
      32: putfield      #10                 // Field depth:I
      35: return

  static com.google.javascript.jscomp.Scope createGlobalScope(com.google.javascript.rhino.Node);
    Code:
       0: new           #11                 // class com/google/javascript/jscomp/Scope
       3: dup
       4: aload_0
       5: iconst_0
       6: invokespecial #12                 // Method "<init>":(Lcom/google/javascript/rhino/Node;Z)V
       9: areturn

  static com.google.javascript.jscomp.Scope createLatticeBottom(com.google.javascript.rhino.Node);
    Code:
       0: new           #11                 // class com/google/javascript/jscomp/Scope
       3: dup
       4: aload_0
       5: iconst_1
       6: invokespecial #12                 // Method "<init>":(Lcom/google/javascript/rhino/Node;Z)V
       9: areturn

  int getDepth();
    Code:
       0: aload_0
       1: getfield      #10                 // Field depth:I
       4: ireturn

  boolean isBottom();
    Code:
       0: aload_0
       1: getfield      #9                  // Field isBottom:Z
       4: ireturn

  public com.google.javascript.rhino.Node getRootNode();
    Code:
       0: aload_0
       1: getfield      #1                  // Field rootNode:Lcom/google/javascript/rhino/Node;
       4: areturn

  public com.google.javascript.jscomp.Scope getParent();
    Code:
       0: aload_0
       1: getfield      #8                  // Field parent:Lcom/google/javascript/jscomp/Scope;
       4: areturn

  com.google.javascript.jscomp.Scope getGlobalScope();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: invokevirtual #13                 // Method getParent:()Lcom/google/javascript/jscomp/Scope;
       6: ifnull        17
       9: aload_1
      10: invokevirtual #13                 // Method getParent:()Lcom/google/javascript/jscomp/Scope;
      13: astore_1
      14: goto          2
      17: aload_1
      18: areturn

  public com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType> getParentScope();
    Code:
       0: aload_0
       1: getfield      #8                  // Field parent:Lcom/google/javascript/jscomp/Scope;
       4: areturn

  public com.google.javascript.rhino.jstype.JSType getTypeOfThis();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method isGlobal:()Z
       4: ifeq          18
       7: aload_0
       8: getfield      #1                  // Field rootNode:Lcom/google/javascript/rhino/Node;
      11: invokevirtual #15                 // Method com/google/javascript/rhino/Node.getJSType:()Lcom/google/javascript/rhino/jstype/JSType;
      14: invokestatic  #16                 // Method com/google/javascript/rhino/jstype/ObjectType.cast:(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/ObjectType;
      17: areturn
      18: aload_0
      19: getfield      #1                  // Field rootNode:Lcom/google/javascript/rhino/Node;
      22: invokevirtual #17                 // Method com/google/javascript/rhino/Node.isFunction:()Z
      25: invokestatic  #18                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      28: aload_0
      29: getfield      #1                  // Field rootNode:Lcom/google/javascript/rhino/Node;
      32: invokevirtual #15                 // Method com/google/javascript/rhino/Node.getJSType:()Lcom/google/javascript/rhino/jstype/JSType;
      35: astore_1
      36: aload_1
      37: ifnull        55
      40: aload_1
      41: invokevirtual #19                 // Method com/google/javascript/rhino/jstype/JSType.isFunctionType:()Z
      44: ifeq          55
      47: aload_1
      48: invokevirtual #20                 // Method com/google/javascript/rhino/jstype/JSType.toMaybeFunctionType:()Lcom/google/javascript/rhino/jstype/FunctionType;
      51: invokevirtual #21                 // Method com/google/javascript/rhino/jstype/FunctionType.getTypeOfThis:()Lcom/google/javascript/rhino/jstype/JSType;
      54: areturn
      55: aload_0
      56: getfield      #8                  // Field parent:Lcom/google/javascript/jscomp/Scope;
      59: invokevirtual #22                 // Method getTypeOfThis:()Lcom/google/javascript/rhino/jstype/JSType;
      62: areturn

  com.google.javascript.jscomp.Scope$Var declare(java.lang.String, com.google.javascript.rhino.Node, com.google.javascript.rhino.jstype.JSType, com.google.javascript.jscomp.CompilerInput);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: iconst_1
       7: invokevirtual #23                 // Method declare:(Ljava/lang/String;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/jscomp/CompilerInput;Z)Lcom/google/javascript/jscomp/Scope$Var;
      10: areturn

  com.google.javascript.jscomp.Scope$Var declare(java.lang.String, com.google.javascript.rhino.Node, com.google.javascript.rhino.jstype.JSType, com.google.javascript.jscomp.CompilerInput, boolean);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_1
       5: invokevirtual #24                 // Method java/lang/String.isEmpty:()Z
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: invokestatic  #18                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      19: aload_0
      20: getfield      #5                  // Field vars:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #25,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: ifnonnull     36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: invokestatic  #18                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      40: new           #26                 // class com/google/javascript/jscomp/Scope$Var
      43: dup
      44: iload         5
      46: aload_1
      47: aload_2
      48: aload_3
      49: aload_0
      50: aload_0
      51: getfield      #5                  // Field vars:Ljava/util/Map;
      54: invokeinterface #27,  1           // InterfaceMethod java/util/Map.size:()I
      59: aload         4
      61: aconst_null
      62: invokespecial #28                 // Method com/google/javascript/jscomp/Scope$Var."<init>":(ZLjava/lang/String;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/jscomp/Scope;ILcom/google/javascript/jscomp/CompilerInput;Lcom/google/javascript/jscomp/Scope$1;)V
      65: astore        6
      67: aload_0
      68: getfield      #5                  // Field vars:Ljava/util/Map;
      71: aload_1
      72: aload         6
      74: invokeinterface #29,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      79: pop
      80: aload         6
      82: areturn

  void undeclare(com.google.javascript.jscomp.Scope$Var);
    Code:
       0: aload_1
       1: getfield      #30                 // Field com/google/javascript/jscomp/Scope$Var.scope:Lcom/google/javascript/jscomp/Scope;
       4: aload_0
       5: if_acmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: invokestatic  #18                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      16: aload_0
      17: getfield      #5                  // Field vars:Ljava/util/Map;
      20: aload_1
      21: getfield      #31                 // Field com/google/javascript/jscomp/Scope$Var.name:Ljava/lang/String;
      24: invokeinterface #25,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: aload_1
      30: if_acmpne     37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: invokestatic  #18                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      41: aload_0
      42: getfield      #5                  // Field vars:Ljava/util/Map;
      45: aload_1
      46: getfield      #31                 // Field com/google/javascript/jscomp/Scope$Var.name:Ljava/lang/String;
      49: invokeinterface #32,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: return

  public com.google.javascript.jscomp.Scope$Var getSlot(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #33                 // Method getVar:(Ljava/lang/String;)Lcom/google/javascript/jscomp/Scope$Var;
       5: areturn

  public com.google.javascript.jscomp.Scope$Var getOwnSlot(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field vars:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #26                 // class com/google/javascript/jscomp/Scope$Var
      13: areturn

  public com.google.javascript.jscomp.Scope$Var getVar(java.lang.String);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: ifnull        34
       6: aload_2
       7: getfield      #5                  // Field vars:Ljava/util/Map;
      10: aload_1
      11: invokeinterface #25,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #26                 // class com/google/javascript/jscomp/Scope$Var
      19: astore_3
      20: aload_3
      21: ifnull        26
      24: aload_3
      25: areturn
      26: aload_2
      27: getfield      #8                  // Field parent:Lcom/google/javascript/jscomp/Scope;
      30: astore_2
      31: goto          2
      34: aconst_null
      35: areturn

  public com.google.javascript.jscomp.Scope$Var getArgumentsVar();
    Code:
       0: aload_0
       1: getfield      #34                 // Field arguments:Lcom/google/javascript/jscomp/Scope$Var;
       4: ifnonnull     19
       7: aload_0
       8: new           #35                 // class com/google/javascript/jscomp/Scope$Arguments
      11: dup
      12: aload_0
      13: invokespecial #36                 // Method com/google/javascript/jscomp/Scope$Arguments."<init>":(Lcom/google/javascript/jscomp/Scope;)V
      16: putfield      #34                 // Field arguments:Lcom/google/javascript/jscomp/Scope$Var;
      19: aload_0
      20: getfield      #34                 // Field arguments:Lcom/google/javascript/jscomp/Scope$Var;
      23: areturn

  public boolean isDeclared(java.lang.String, boolean);
    Code:
       0: aload_0
       1: astore_3
       2: aload_3
       3: getfield      #5                  // Field vars:Ljava/util/Map;
       6: aload_1
       7: invokeinterface #37,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      12: ifeq          17
      15: iconst_1
      16: ireturn
      17: aload_3
      18: getfield      #8                  // Field parent:Lcom/google/javascript/jscomp/Scope;
      21: ifnull        36
      24: iload_2
      25: ifeq          36
      28: aload_3
      29: getfield      #8                  // Field parent:Lcom/google/javascript/jscomp/Scope;
      32: astore_3
      33: goto          2
      36: iconst_0
      37: ireturn

  public java.util.Iterator<com.google.javascript.jscomp.Scope$Var> getVars();
    Code:
       0: aload_0
       1: getfield      #5                  // Field vars:Ljava/util/Map;
       4: invokeinterface #38,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #39,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: areturn

  java.lang.Iterable<com.google.javascript.jscomp.Scope$Var> getVarIterable();
    Code:
       0: aload_0
       1: getfield      #5                  // Field vars:Ljava/util/Map;
       4: invokeinterface #38,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  public java.lang.Iterable<com.google.javascript.jscomp.Scope$Var> getReferences(com.google.javascript.jscomp.Scope$Var);
    Code:
       0: aload_1
       1: invokestatic  #40                 // Method com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
       4: areturn

  public com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType> getScope(com.google.javascript.jscomp.Scope$Var);
    Code:
       0: aload_1
       1: getfield      #30                 // Field com/google/javascript/jscomp/Scope$Var.scope:Lcom/google/javascript/jscomp/Scope;
       4: areturn

  public java.lang.Iterable<com.google.javascript.jscomp.Scope$Var> getAllSymbols();
    Code:
       0: aload_0
       1: getfield      #5                  // Field vars:Ljava/util/Map;
       4: invokeinterface #38,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokestatic  #41                 // Method java/util/Collections.unmodifiableCollection:(Ljava/util/Collection;)Ljava/util/Collection;
      12: areturn

  public int getVarCount();
    Code:
       0: aload_0
       1: getfield      #5                  // Field vars:Ljava/util/Map;
       4: invokeinterface #27,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public boolean isGlobal();
    Code:
       0: aload_0
       1: getfield      #8                  // Field parent:Lcom/google/javascript/jscomp/Scope;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isLocal();
    Code:
       0: aload_0
       1: getfield      #8                  // Field parent:Lcom/google/javascript/jscomp/Scope;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.util.Iterator<com.google.javascript.jscomp.Scope$Var> getDeclarativelyUnboundVarsWithoutTypes();
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method getVars:()Ljava/util/Iterator;
       4: getstatic     #43                 // Field DECLARATIVELY_UNBOUND_VARS_WITHOUT_TYPES:Lcom/google/common/base/Predicate;
       7: invokestatic  #44                 // Method com/google/common/collect/Iterators.filter:(Ljava/util/Iterator;Lcom/google/common/base/Predicate;)Lcom/google/common/collect/UnmodifiableIterator;
      10: areturn

  void resolveTypes();
    Code:
       0: aload_0
       1: getfield      #45                 // Field typeResolver:Lcom/google/javascript/jscomp/Scope$TypeResolver;
       4: ifnull        21
       7: aload_0
       8: getfield      #45                 // Field typeResolver:Lcom/google/javascript/jscomp/Scope$TypeResolver;
      11: invokeinterface #46,  1           // InterfaceMethod com/google/javascript/jscomp/Scope$TypeResolver.resolveTypes:()V
      16: aload_0
      17: aconst_null
      18: putfield      #45                 // Field typeResolver:Lcom/google/javascript/jscomp/Scope$TypeResolver;
      21: return

  void setTypeResolver(com.google.javascript.jscomp.Scope$TypeResolver);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #45                 // Field typeResolver:Lcom/google/javascript/jscomp/Scope$TypeResolver;
       5: return

  public boolean isBlockScope();
    Code:
       0: aload_0
       1: getfield      #1                  // Field rootNode:Lcom/google/javascript/rhino/Node;
       4: invokestatic  #47                 // Method com/google/javascript/jscomp/NodeUtil.createsBlockScope:(Lcom/google/javascript/rhino/Node;)Z
       7: ireturn

  public boolean isHoistScope();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method isFunctionBlockScope:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #14                 // Method isGlobal:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public boolean isFunctionBlockScope();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method isBlockScope:()Z
       4: ifeq          31
       7: aload_0
       8: getfield      #8                  // Field parent:Lcom/google/javascript/jscomp/Scope;
      11: ifnull        31
      14: aload_0
      15: getfield      #8                  // Field parent:Lcom/google/javascript/jscomp/Scope;
      18: invokevirtual #50                 // Method getRootNode:()Lcom/google/javascript/rhino/Node;
      21: invokevirtual #17                 // Method com/google/javascript/rhino/Node.isFunction:()Z
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public com.google.javascript.jscomp.Scope getClosestHoistScope();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: ifnull        23
       6: aload_1
       7: invokevirtual #51                 // Method isHoistScope:()Z
      10: ifeq          15
      13: aload_1
      14: areturn
      15: aload_1
      16: getfield      #8                  // Field parent:Lcom/google/javascript/jscomp/Scope;
      19: astore_1
      20: goto          2
      23: aconst_null
      24: areturn

  public java.lang.Object getTypeOfThis();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method getTypeOfThis:()Lcom/google/javascript/rhino/jstype/JSType;
       4: areturn

  public com.google.javascript.rhino.jstype.StaticSlot getOwnSlot(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #52                 // Method getOwnSlot:(Ljava/lang/String;)Lcom/google/javascript/jscomp/Scope$Var;
       5: areturn

  public com.google.javascript.rhino.jstype.StaticSlot getSlot(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #53                 // Method getSlot:(Ljava/lang/String;)Lcom/google/javascript/jscomp/Scope$Var;
       5: areturn

  public com.google.javascript.rhino.jstype.StaticScope getScope(com.google.javascript.rhino.jstype.StaticSlot);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #26                 // class com/google/javascript/jscomp/Scope$Var
       5: invokevirtual #54                 // Method getScope:(Lcom/google/javascript/jscomp/Scope$Var;)Lcom/google/javascript/rhino/jstype/StaticScope;
       8: areturn

  public java.lang.Iterable getReferences(com.google.javascript.rhino.jstype.StaticSlot);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #26                 // class com/google/javascript/jscomp/Scope$Var
       5: invokevirtual #55                 // Method getReferences:(Lcom/google/javascript/jscomp/Scope$Var;)Ljava/lang/Iterable;
       8: areturn

  static com.google.javascript.rhino.Node access$100(com.google.javascript.jscomp.Scope);
    Code:
       0: aload_0
       1: getfield      #1                  // Field rootNode:Lcom/google/javascript/rhino/Node;
       4: areturn

  static {};
    Code:
       0: new           #56                 // class com/google/javascript/jscomp/Scope$1
       3: dup
       4: invokespecial #57                 // Method com/google/javascript/jscomp/Scope$1."<init>":()V
       7: putstatic     #43                 // Field DECLARATIVELY_UNBOUND_VARS_WITHOUT_TYPES:Lcom/google/common/base/Predicate;
      10: return
}
