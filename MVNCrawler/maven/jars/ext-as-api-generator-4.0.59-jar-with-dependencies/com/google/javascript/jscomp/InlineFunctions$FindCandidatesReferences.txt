Compiled from "InlineFunctions.java"
class com.google.javascript.jscomp.InlineFunctions$FindCandidatesReferences extends com.google.javascript.jscomp.InlineFunctions$CallVisitor implements com.google.javascript.jscomp.InlineFunctions$CallVisitorCallback {
  final com.google.javascript.jscomp.InlineFunctions this$0;

  com.google.javascript.jscomp.InlineFunctions$FindCandidatesReferences(java.util.Map<java.lang.String, com.google.javascript.jscomp.InlineFunctions$FunctionState>, java.util.Map<com.google.javascript.rhino.Node, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/InlineFunctions;
       5: aload_0
       6: aload_2
       7: aload_3
       8: aconst_null
       9: invokespecial #2                  // Method com/google/javascript/jscomp/InlineFunctions$CallVisitor."<init>":(Ljava/util/Map;Ljava/util/Map;Lcom/google/javascript/jscomp/InlineFunctions$CallVisitorCallback;)V
      12: aload_0
      13: aload_0
      14: putfield      #3                  // Field callback:Lcom/google/javascript/jscomp/InlineFunctions$CallVisitorCallback;
      17: return

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #4                  // Method com/google/javascript/jscomp/InlineFunctions$CallVisitor.visit:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
       7: aload_2
       8: invokevirtual #5                  // Method com/google/javascript/rhino/Node.isName:()Z
      11: ifeq          20
      14: aload_0
      15: aload_2
      16: aload_3
      17: invokespecial #6                  // Method checkNameUsage:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      20: return

  public void visitCallSite(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.jscomp.InlineFunctions$FunctionState);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload_2
       4: aload_1
       5: invokevirtual #7                  // Method com/google/javascript/jscomp/NodeTraversal.getModule:()Lcom/google/javascript/jscomp/JSModule;
       8: invokevirtual #8                  // Method maybeAddReference:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/jscomp/InlineFunctions$FunctionState;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/JSModule;)V
      11: return

  void maybeAddReference(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.jscomp.InlineFunctions$FunctionState, com.google.javascript.rhino.Node, com.google.javascript.jscomp.JSModule);
    Code:
       0: aload_2
       1: invokevirtual #9                  // Method com/google/javascript/jscomp/InlineFunctions$FunctionState.canInline:()Z
       4: ifne          8
       7: return
       8: iconst_0
       9: istore        5
      11: aload_2
      12: invokevirtual #10                 // Method com/google/javascript/jscomp/InlineFunctions$FunctionState.canInlineDirectly:()Z
      15: ifeq          24
      18: getstatic     #11                 // Field com/google/javascript/jscomp/FunctionInjector$InliningMode.DIRECT:Lcom/google/javascript/jscomp/FunctionInjector$InliningMode;
      21: goto          27
      24: getstatic     #12                 // Field com/google/javascript/jscomp/FunctionInjector$InliningMode.BLOCK:Lcom/google/javascript/jscomp/FunctionInjector$InliningMode;
      27: astore        6
      29: aload_0
      30: aload_1
      31: aload_2
      32: aload_3
      33: aload         4
      35: aload         6
      37: invokespecial #13                 // Method maybeAddReferenceUsingMode:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/jscomp/InlineFunctions$FunctionState;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/JSModule;Lcom/google/javascript/jscomp/FunctionInjector$InliningMode;)Z
      40: istore        5
      42: iload         5
      44: ifne          83
      47: aload         6
      49: getstatic     #11                 // Field com/google/javascript/jscomp/FunctionInjector$InliningMode.DIRECT:Lcom/google/javascript/jscomp/FunctionInjector$InliningMode;
      52: if_acmpne     83
      55: aload_0
      56: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/InlineFunctions;
      59: invokestatic  #14                 // Method com/google/javascript/jscomp/InlineFunctions.access$600:(Lcom/google/javascript/jscomp/InlineFunctions;)Z
      62: ifeq          83
      65: getstatic     #12                 // Field com/google/javascript/jscomp/FunctionInjector$InliningMode.BLOCK:Lcom/google/javascript/jscomp/FunctionInjector$InliningMode;
      68: astore        6
      70: aload_0
      71: aload_1
      72: aload_2
      73: aload_3
      74: aload         4
      76: aload         6
      78: invokespecial #13                 // Method maybeAddReferenceUsingMode:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/jscomp/InlineFunctions$FunctionState;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/JSModule;Lcom/google/javascript/jscomp/FunctionInjector$InliningMode;)Z
      81: istore        5
      83: iload         5
      85: ifne          93
      88: aload_2
      89: iconst_0
      90: invokevirtual #15                 // Method com/google/javascript/jscomp/InlineFunctions$FunctionState.setRemove:(Z)V
      93: return

  private boolean maybeAddReferenceUsingMode(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.jscomp.InlineFunctions$FunctionState, com.google.javascript.rhino.Node, com.google.javascript.jscomp.JSModule, com.google.javascript.jscomp.FunctionInjector$InliningMode);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/InlineFunctions;
       4: invokestatic  #16                 // Method com/google/javascript/jscomp/InlineFunctions.access$700:(Lcom/google/javascript/jscomp/InlineFunctions;)Z
       7: ifeq          24
      10: aload_0
      11: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/InlineFunctions;
      14: aload_1
      15: aload_2
      16: invokestatic  #17                 // Method com/google/javascript/jscomp/InlineFunctions.access$800:(Lcom/google/javascript/jscomp/InlineFunctions;Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/jscomp/InlineFunctions$FunctionState;)Z
      19: ifeq          24
      22: iconst_0
      23: ireturn
      24: new           #18                 // class com/google/javascript/jscomp/InlineFunctions$Reference
      27: dup
      28: aload_3
      29: aload_1
      30: invokevirtual #19                 // Method com/google/javascript/jscomp/NodeTraversal.getScope:()Lcom/google/javascript/jscomp/Scope;
      33: aload         4
      35: aload         5
      37: invokespecial #20                 // Method com/google/javascript/jscomp/InlineFunctions$Reference."<init>":(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/Scope;Lcom/google/javascript/jscomp/JSModule;Lcom/google/javascript/jscomp/FunctionInjector$InliningMode;)V
      40: astore        6
      42: aload_0
      43: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/InlineFunctions;
      46: invokestatic  #21                 // Method com/google/javascript/jscomp/InlineFunctions.access$900:(Lcom/google/javascript/jscomp/InlineFunctions;)Lcom/google/javascript/jscomp/FunctionInjector;
      49: aload         6
      51: aload_2
      52: invokevirtual #22                 // Method com/google/javascript/jscomp/InlineFunctions$FunctionState.getFn:()Lcom/google/javascript/jscomp/InlineFunctions$Function;
      55: invokeinterface #23,  1           // InterfaceMethod com/google/javascript/jscomp/InlineFunctions$Function.getFunctionNode:()Lcom/google/javascript/rhino/Node;
      60: aload_2
      61: invokevirtual #24                 // Method com/google/javascript/jscomp/InlineFunctions$FunctionState.getNamesToAlias:()Ljava/util/Set;
      64: aload_2
      65: invokevirtual #25                 // Method com/google/javascript/jscomp/InlineFunctions$FunctionState.getReferencesThis:()Z
      68: aload_2
      69: invokevirtual #26                 // Method com/google/javascript/jscomp/InlineFunctions$FunctionState.hasInnerFunctions:()Z
      72: invokevirtual #27                 // Method com/google/javascript/jscomp/FunctionInjector.canInlineReferenceToFunction:(Lcom/google/javascript/jscomp/FunctionInjector$Reference;Lcom/google/javascript/rhino/Node;Ljava/util/Set;ZZ)Lcom/google/javascript/jscomp/FunctionInjector$CanInlineResult;
      75: astore        7
      77: aload         7
      79: getstatic     #28                 // Field com/google/javascript/jscomp/FunctionInjector$CanInlineResult.NO:Lcom/google/javascript/jscomp/FunctionInjector$CanInlineResult;
      82: if_acmpeq     111
      85: aload         6
      87: aload         7
      89: getstatic     #29                 // Field com/google/javascript/jscomp/FunctionInjector$CanInlineResult.AFTER_PREPARATION:Lcom/google/javascript/jscomp/FunctionInjector$CanInlineResult;
      92: if_acmpne     99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: invokevirtual #30                 // Method com/google/javascript/jscomp/InlineFunctions$Reference.setRequiresDecomposition:(Z)V
     103: aload_2
     104: aload         6
     106: invokevirtual #31                 // Method com/google/javascript/jscomp/InlineFunctions$FunctionState.addReference:(Lcom/google/javascript/jscomp/InlineFunctions$Reference;)V
     109: iconst_1
     110: ireturn
     111: iconst_0
     112: ireturn

  private void checkNameUsage(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method com/google/javascript/rhino/Node.isName:()Z
       4: invokestatic  #32                 // Method com/google/common/base/Preconditions.checkState:(Z)V
       7: aload_1
       8: invokestatic  #33                 // Method com/google/javascript/jscomp/InlineFunctions.isCandidateUsage:(Lcom/google/javascript/rhino/Node;)Z
      11: ifeq          15
      14: return
      15: aload_1
      16: invokevirtual #34                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      19: astore_3
      20: aload_0
      21: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/InlineFunctions;
      24: invokestatic  #35                 // Method com/google/javascript/jscomp/InlineFunctions.access$1000:(Lcom/google/javascript/jscomp/InlineFunctions;)Ljava/util/Map;
      27: aload_3
      28: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #37                 // class com/google/javascript/jscomp/InlineFunctions$FunctionState
      36: astore        4
      38: aload         4
      40: ifnonnull     44
      43: return
      44: aload_2
      45: invokevirtual #38                 // Method com/google/javascript/rhino/Node.isNew:()Z
      48: ifeq          84
      51: aload_2
      52: invokevirtual #39                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      55: astore        5
      57: aload         5
      59: invokevirtual #5                  // Method com/google/javascript/rhino/Node.isName:()Z
      62: ifeq          84
      65: aload         5
      67: invokevirtual #34                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      70: ldc           #41                 // String JSCompiler_ObjectPropertyString
      72: invokevirtual #42                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifeq          84
      78: aload         4
      80: iconst_0
      81: invokevirtual #43                 // Method com/google/javascript/jscomp/InlineFunctions$FunctionState.setInline:(Z)V
      84: aload_2
      85: invokevirtual #44                 // Method com/google/javascript/rhino/Node.isAssign:()Z
      88: ifeq          108
      91: aload_2
      92: invokevirtual #39                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      95: aload_1
      96: if_acmpne     108
      99: aload         4
     101: iconst_0
     102: invokevirtual #43                 // Method com/google/javascript/jscomp/InlineFunctions$FunctionState.setInline:(Z)V
     105: goto          114
     108: aload         4
     110: iconst_0
     111: invokevirtual #15                 // Method com/google/javascript/jscomp/InlineFunctions$FunctionState.setRemove:(Z)V
     114: return
}
