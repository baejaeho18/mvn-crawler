Compiled from "SymbolTable.java"
public final class com.google.javascript.jscomp.SymbolTable$Symbol extends com.google.javascript.rhino.jstype.SimpleSlot {
  private final java.util.Map<com.google.javascript.rhino.Node, com.google.javascript.jscomp.SymbolTable$Reference> references;

  private final com.google.javascript.jscomp.SymbolTable$SymbolScope scope;

  private com.google.javascript.jscomp.SymbolTable$SymbolScope propertyScope;

  private com.google.javascript.jscomp.SymbolTable$Reference declaration;

  private com.google.javascript.rhino.JSDocInfo docInfo;

  private com.google.javascript.rhino.JSDocInfo$Visibility visibility;

  private com.google.javascript.jscomp.SymbolTable$SymbolScope docScope;

  com.google.javascript.jscomp.SymbolTable$Symbol(java.lang.String, com.google.javascript.rhino.jstype.JSType, boolean, com.google.javascript.jscomp.SymbolTable$SymbolScope);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #5                  // Method com/google/javascript/rhino/jstype/SimpleSlot."<init>":(Ljava/lang/String;Lcom/google/javascript/rhino/jstype/JSType;Z)V
       7: aload_0
       8: invokestatic  #6                  // Method com/google/common/collect/Maps.newLinkedHashMap:()Ljava/util/LinkedHashMap;
      11: putfield      #4                  // Field references:Ljava/util/Map;
      14: aload_0
      15: aconst_null
      16: putfield      #1                  // Field propertyScope:Lcom/google/javascript/jscomp/SymbolTable$SymbolScope;
      19: aload_0
      20: aconst_null
      21: putfield      #7                  // Field declaration:Lcom/google/javascript/jscomp/SymbolTable$Reference;
      24: aload_0
      25: aconst_null
      26: putfield      #8                  // Field docInfo:Lcom/google/javascript/rhino/JSDocInfo;
      29: aload_0
      30: aconst_null
      31: putfield      #9                  // Field visibility:Lcom/google/javascript/rhino/JSDocInfo$Visibility;
      34: aload_0
      35: aconst_null
      36: putfield      #2                  // Field docScope:Lcom/google/javascript/jscomp/SymbolTable$SymbolScope;
      39: aload_0
      40: aload         4
      42: putfield      #3                  // Field scope:Lcom/google/javascript/jscomp/SymbolTable$SymbolScope;
      45: return

  public com.google.javascript.jscomp.SymbolTable$Reference getDeclaration();
    Code:
       0: aload_0
       1: getfield      #7                  // Field declaration:Lcom/google/javascript/jscomp/SymbolTable$Reference;
       4: areturn

  public com.google.javascript.rhino.jstype.FunctionType getFunctionType();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getType:()Lcom/google/javascript/rhino/jstype/JSType;
       4: invokestatic  #11                 // Method com/google/javascript/rhino/jstype/JSType.toMaybeFunctionType:(Lcom/google/javascript/rhino/jstype/JSType;)Lcom/google/javascript/rhino/jstype/FunctionType;
       7: areturn

  public com.google.javascript.jscomp.SymbolTable$Reference defineReferenceAt(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #4                  // Field references:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #13                 // class com/google/javascript/jscomp/SymbolTable$Reference
      13: astore_2
      14: aload_2
      15: ifnonnull     40
      18: new           #13                 // class com/google/javascript/jscomp/SymbolTable$Reference
      21: dup
      22: aload_0
      23: aload_1
      24: invokespecial #14                 // Method com/google/javascript/jscomp/SymbolTable$Reference."<init>":(Lcom/google/javascript/jscomp/SymbolTable$Symbol;Lcom/google/javascript/rhino/Node;)V
      27: astore_2
      28: aload_0
      29: getfield      #4                  // Field references:Ljava/util/Map;
      32: aload_1
      33: aload_2
      34: invokeinterface #15,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: aload_2
      41: areturn

  void setDeclaration(com.google.javascript.jscomp.SymbolTable$Reference);
    Code:
       0: aload_0
       1: getfield      #7                  // Field declaration:Lcom/google/javascript/jscomp/SymbolTable$Reference;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: aload_1
      17: putfield      #7                  // Field declaration:Lcom/google/javascript/jscomp/SymbolTable$Reference;
      20: return

  public boolean inGlobalScope();
    Code:
       0: aload_0
       1: getfield      #3                  // Field scope:Lcom/google/javascript/jscomp/SymbolTable$SymbolScope;
       4: invokevirtual #17                 // Method com/google/javascript/jscomp/SymbolTable$SymbolScope.isGlobalScope:()Z
       7: ireturn

  public boolean inExterns();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getDeclarationNode:()Lcom/google/javascript/rhino/Node;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: iconst_0
      10: goto          17
      13: aload_1
      14: invokevirtual #19                 // Method com/google/javascript/rhino/Node.isFromExterns:()Z
      17: ireturn

  public com.google.javascript.rhino.Node getDeclarationNode();
    Code:
       0: aload_0
       1: getfield      #7                  // Field declaration:Lcom/google/javascript/jscomp/SymbolTable$Reference;
       4: ifnonnull     11
       7: aconst_null
       8: goto          18
      11: aload_0
      12: getfield      #7                  // Field declaration:Lcom/google/javascript/jscomp/SymbolTable$Reference;
      15: invokevirtual #20                 // Method com/google/javascript/jscomp/SymbolTable$Reference.getNode:()Lcom/google/javascript/rhino/Node;
      18: areturn

  public java.lang.String getSourceFileName();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getDeclarationNode:()Lcom/google/javascript/rhino/Node;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: aconst_null
      10: goto          17
      13: aload_1
      14: invokevirtual #21                 // Method com/google/javascript/rhino/Node.getSourceFileName:()Ljava/lang/String;
      17: areturn

  public com.google.javascript.jscomp.SymbolTable$SymbolScope getPropertyScope();
    Code:
       0: aload_0
       1: getfield      #1                  // Field propertyScope:Lcom/google/javascript/jscomp/SymbolTable$SymbolScope;
       4: areturn

  void setPropertyScope(com.google.javascript.jscomp.SymbolTable$SymbolScope);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field propertyScope:Lcom/google/javascript/jscomp/SymbolTable$SymbolScope;
       5: aload_1
       6: ifnull        17
       9: aload_0
      10: getfield      #1                  // Field propertyScope:Lcom/google/javascript/jscomp/SymbolTable$SymbolScope;
      13: aload_0
      14: invokevirtual #22                 // Method com/google/javascript/jscomp/SymbolTable$SymbolScope.setSymbolForScope:(Lcom/google/javascript/jscomp/SymbolTable$Symbol;)V
      17: return

  public com.google.javascript.rhino.JSDocInfo getJSDocInfo();
    Code:
       0: aload_0
       1: getfield      #8                  // Field docInfo:Lcom/google/javascript/rhino/JSDocInfo;
       4: areturn

  void setJSDocInfo(com.google.javascript.rhino.JSDocInfo);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field docInfo:Lcom/google/javascript/rhino/JSDocInfo;
       5: return

  public com.google.javascript.rhino.JSDocInfo$Visibility getVisibility();
    Code:
       0: aload_0
       1: getfield      #9                  // Field visibility:Lcom/google/javascript/rhino/JSDocInfo$Visibility;
       4: areturn

  void setVisibility(com.google.javascript.rhino.JSDocInfo$Visibility);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field visibility:Lcom/google/javascript/rhino/JSDocInfo$Visibility;
       5: return

  public boolean isProperty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field scope:Lcom/google/javascript/jscomp/SymbolTable$SymbolScope;
       4: invokevirtual #23                 // Method com/google/javascript/jscomp/SymbolTable$SymbolScope.isPropertyScope:()Z
       7: ireturn

  public boolean isLexicalVariable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field scope:Lcom/google/javascript/jscomp/SymbolTable$SymbolScope;
       4: invokevirtual #24                 // Method com/google/javascript/jscomp/SymbolTable$SymbolScope.isLexicalScope:()Z
       7: ireturn

  public boolean isDocOnlyParameter();
    Code:
       0: aload_0
       1: getfield      #3                  // Field scope:Lcom/google/javascript/jscomp/SymbolTable$SymbolScope;
       4: invokevirtual #25                 // Method com/google/javascript/jscomp/SymbolTable$SymbolScope.isDocScope:()Z
       7: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getDeclarationNode:()Lcom/google/javascript/rhino/Node;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: iconst_m1
      10: goto          17
      13: aload_1
      14: invokevirtual #26                 // Method com/google/javascript/rhino/Node.getLineno:()I
      17: istore_2
      18: new           #27                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      25: aload_0
      26: invokevirtual #29                 // Method getName:()Ljava/lang/String;
      29: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #31                 // String @
      34: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: invokevirtual #32                 // Method getSourceFileName:()Ljava/lang/String;
      41: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #33                 // String :
      46: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: iload_2
      50: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: areturn

  public com.google.javascript.rhino.jstype.StaticReference getDeclaration();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method getDeclaration:()Lcom/google/javascript/jscomp/SymbolTable$Reference;
       4: areturn

  static java.util.Map access$000(com.google.javascript.jscomp.SymbolTable$Symbol);
    Code:
       0: aload_0
       1: getfield      #4                  // Field references:Ljava/util/Map;
       4: areturn

  static com.google.javascript.jscomp.SymbolTable$SymbolScope access$100(com.google.javascript.jscomp.SymbolTable$Symbol);
    Code:
       0: aload_0
       1: getfield      #3                  // Field scope:Lcom/google/javascript/jscomp/SymbolTable$SymbolScope;
       4: areturn

  static com.google.javascript.jscomp.SymbolTable$SymbolScope access$600(com.google.javascript.jscomp.SymbolTable$Symbol);
    Code:
       0: aload_0
       1: getfield      #2                  // Field docScope:Lcom/google/javascript/jscomp/SymbolTable$SymbolScope;
       4: areturn

  static com.google.javascript.jscomp.SymbolTable$SymbolScope access$602(com.google.javascript.jscomp.SymbolTable$Symbol, com.google.javascript.jscomp.SymbolTable$SymbolScope);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field docScope:Lcom/google/javascript/jscomp/SymbolTable$SymbolScope;
       6: areturn

  static com.google.javascript.jscomp.SymbolTable$SymbolScope access$800(com.google.javascript.jscomp.SymbolTable$Symbol);
    Code:
       0: aload_0
       1: getfield      #1                  // Field propertyScope:Lcom/google/javascript/jscomp/SymbolTable$SymbolScope;
       4: areturn
}
