Compiled from "GlobalNamespace.java"
class com.google.javascript.jscomp.GlobalNamespace$Name implements com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType> {
  private final java.lang.String baseName;

  final com.google.javascript.jscomp.GlobalNamespace$Name parent;

  java.util.List<com.google.javascript.jscomp.GlobalNamespace$Name> props;

  private com.google.javascript.jscomp.GlobalNamespace$Ref declaration;

  private java.util.List<com.google.javascript.jscomp.GlobalNamespace$Ref> refs;

  com.google.javascript.jscomp.GlobalNamespace$Name$Type type;

  private boolean declaredType;

  private boolean hasDeclaredTypeDescendant;

  int globalSets;

  int localSets;

  int aliasingGets;

  int totalGets;

  int callGets;

  int deleteProps;

  final boolean inExterns;

  com.google.javascript.rhino.JSDocInfo docInfo;

  com.google.javascript.jscomp.GlobalNamespace$Name(java.lang.String, com.google.javascript.jscomp.GlobalNamespace$Name, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field declaredType:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field hasDeclaredTypeDescendant:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field globalSets:I
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field localSets:I
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field aliasingGets:I
      29: aload_0
      30: iconst_0
      31: putfield      #7                  // Field totalGets:I
      34: aload_0
      35: iconst_0
      36: putfield      #8                  // Field callGets:I
      39: aload_0
      40: iconst_0
      41: putfield      #9                  // Field deleteProps:I
      44: aload_0
      45: aconst_null
      46: putfield      #10                 // Field docInfo:Lcom/google/javascript/rhino/JSDocInfo;
      49: aload_0
      50: aload_1
      51: putfield      #11                 // Field baseName:Ljava/lang/String;
      54: aload_0
      55: aload_2
      56: putfield      #12                 // Field parent:Lcom/google/javascript/jscomp/GlobalNamespace$Name;
      59: aload_0
      60: getstatic     #13                 // Field com/google/javascript/jscomp/GlobalNamespace$Name$Type.OTHER:Lcom/google/javascript/jscomp/GlobalNamespace$Name$Type;
      63: putfield      #14                 // Field type:Lcom/google/javascript/jscomp/GlobalNamespace$Name$Type;
      66: aload_0
      67: iload_3
      68: putfield      #15                 // Field inExterns:Z
      71: return

  com.google.javascript.jscomp.GlobalNamespace$Name addProperty(java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #16                 // Field props:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #17                 // class java/util/ArrayList
      11: dup
      12: invokespecial #18                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #16                 // Field props:Ljava/util/List;
      18: new           #19                 // class com/google/javascript/jscomp/GlobalNamespace$Name
      21: dup
      22: aload_1
      23: aload_0
      24: iload_2
      25: invokespecial #20                 // Method "<init>":(Ljava/lang/String;Lcom/google/javascript/jscomp/GlobalNamespace$Name;Z)V
      28: astore_3
      29: aload_0
      30: getfield      #16                 // Field props:Ljava/util/List;
      33: aload_3
      34: invokeinterface #21,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      39: pop
      40: aload_3
      41: areturn

  java.lang.String getBaseName();
    Code:
       0: aload_0
       1: getfield      #11                 // Field baseName:Ljava/lang/String;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method getFullName:()Ljava/lang/String;
       4: areturn

  java.lang.String getFullName();
    Code:
       0: aload_0
       1: getfield      #12                 // Field parent:Lcom/google/javascript/jscomp/GlobalNamespace$Name;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #11                 // Field baseName:Ljava/lang/String;
      11: goto          46
      14: new           #23                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      21: aload_0
      22: getfield      #12                 // Field parent:Lcom/google/javascript/jscomp/GlobalNamespace$Name;
      25: invokevirtual #22                 // Method getFullName:()Ljava/lang/String;
      28: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: bipush        46
      33: invokevirtual #26                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #11                 // Field baseName:Ljava/lang/String;
      40: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: areturn

  public com.google.javascript.jscomp.GlobalNamespace$Ref getDeclaration();
    Code:
       0: aload_0
       1: getfield      #28                 // Field declaration:Lcom/google/javascript/jscomp/GlobalNamespace$Ref;
       4: areturn

  public boolean isTypeInferred();
    Code:
       0: iconst_0
       1: ireturn

  public com.google.javascript.rhino.jstype.JSType getType();
    Code:
       0: aconst_null
       1: areturn

  void addRef(com.google.javascript.jscomp.GlobalNamespace$Ref);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method addRefInternal:(Lcom/google/javascript/jscomp/GlobalNamespace$Ref;)V
       5: getstatic     #30                 // Field com/google/javascript/jscomp/GlobalNamespace$1.$SwitchMap$com$google$javascript$jscomp$GlobalNamespace$Ref$Type:[I
       8: aload_1
       9: getfield      #31                 // Field com/google/javascript/jscomp/GlobalNamespace$Ref.type:Lcom/google/javascript/jscomp/GlobalNamespace$Ref$Type;
      12: invokevirtual #32                 // Method com/google/javascript/jscomp/GlobalNamespace$Ref$Type.ordinal:()I
      15: iaload
      16: tableswitch   { // 1 to 7
                     1: 60
                     2: 93
                     3: 106
                     4: 106
                     5: 119
                     6: 142
                     7: 165
               default: 178
          }
      60: aload_0
      61: getfield      #28                 // Field declaration:Lcom/google/javascript/jscomp/GlobalNamespace$Ref;
      64: ifnonnull     80
      67: aload_0
      68: aload_1
      69: putfield      #28                 // Field declaration:Lcom/google/javascript/jscomp/GlobalNamespace$Ref;
      72: aload_0
      73: aload_1
      74: invokestatic  #33                 // Method getDocInfoForDeclaration:(Lcom/google/javascript/jscomp/GlobalNamespace$Ref;)Lcom/google/javascript/rhino/JSDocInfo;
      77: putfield      #10                 // Field docInfo:Lcom/google/javascript/rhino/JSDocInfo;
      80: aload_0
      81: dup
      82: getfield      #4                  // Field globalSets:I
      85: iconst_1
      86: iadd
      87: putfield      #4                  // Field globalSets:I
      90: goto          186
      93: aload_0
      94: dup
      95: getfield      #5                  // Field localSets:I
      98: iconst_1
      99: iadd
     100: putfield      #5                  // Field localSets:I
     103: goto          186
     106: aload_0
     107: dup
     108: getfield      #7                  // Field totalGets:I
     111: iconst_1
     112: iadd
     113: putfield      #7                  // Field totalGets:I
     116: goto          186
     119: aload_0
     120: dup
     121: getfield      #6                  // Field aliasingGets:I
     124: iconst_1
     125: iadd
     126: putfield      #6                  // Field aliasingGets:I
     129: aload_0
     130: dup
     131: getfield      #7                  // Field totalGets:I
     134: iconst_1
     135: iadd
     136: putfield      #7                  // Field totalGets:I
     139: goto          186
     142: aload_0
     143: dup
     144: getfield      #8                  // Field callGets:I
     147: iconst_1
     148: iadd
     149: putfield      #8                  // Field callGets:I
     152: aload_0
     153: dup
     154: getfield      #7                  // Field totalGets:I
     157: iconst_1
     158: iadd
     159: putfield      #7                  // Field totalGets:I
     162: goto          186
     165: aload_0
     166: dup
     167: getfield      #9                  // Field deleteProps:I
     170: iconst_1
     171: iadd
     172: putfield      #9                  // Field deleteProps:I
     175: goto          186
     178: new           #34                 // class java/lang/IllegalStateException
     181: dup
     182: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":()V
     185: athrow
     186: return

  void removeRef(com.google.javascript.jscomp.GlobalNamespace$Ref);
    Code:
       0: aload_0
       1: getfield      #36                 // Field refs:Ljava/util/List;
       4: ifnull        250
       7: aload_0
       8: getfield      #36                 // Field refs:Ljava/util/List;
      11: aload_1
      12: invokeinterface #37,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      17: ifeq          250
      20: aload_1
      21: aload_0
      22: getfield      #28                 // Field declaration:Lcom/google/javascript/jscomp/GlobalNamespace$Ref;
      25: if_acmpne     90
      28: aload_0
      29: aconst_null
      30: putfield      #28                 // Field declaration:Lcom/google/javascript/jscomp/GlobalNamespace$Ref;
      33: aload_0
      34: getfield      #36                 // Field refs:Ljava/util/List;
      37: ifnull        90
      40: aload_0
      41: getfield      #36                 // Field refs:Ljava/util/List;
      44: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      49: astore_2
      50: aload_2
      51: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      56: ifeq          90
      59: aload_2
      60: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      65: checkcast     #41                 // class com/google/javascript/jscomp/GlobalNamespace$Ref
      68: astore_3
      69: aload_3
      70: getfield      #31                 // Field com/google/javascript/jscomp/GlobalNamespace$Ref.type:Lcom/google/javascript/jscomp/GlobalNamespace$Ref$Type;
      73: getstatic     #42                 // Field com/google/javascript/jscomp/GlobalNamespace$Ref$Type.SET_FROM_GLOBAL:Lcom/google/javascript/jscomp/GlobalNamespace$Ref$Type;
      76: if_acmpne     87
      79: aload_0
      80: aload_3
      81: putfield      #28                 // Field declaration:Lcom/google/javascript/jscomp/GlobalNamespace$Ref;
      84: goto          90
      87: goto          50
      90: getstatic     #30                 // Field com/google/javascript/jscomp/GlobalNamespace$1.$SwitchMap$com$google$javascript$jscomp$GlobalNamespace$Ref$Type:[I
      93: aload_1
      94: getfield      #31                 // Field com/google/javascript/jscomp/GlobalNamespace$Ref.type:Lcom/google/javascript/jscomp/GlobalNamespace$Ref$Type;
      97: invokevirtual #32                 // Method com/google/javascript/jscomp/GlobalNamespace$Ref$Type.ordinal:()I
     100: iaload
     101: tableswitch   { // 1 to 7
                     1: 144
                     2: 157
                     3: 170
                     4: 170
                     5: 183
                     6: 206
                     7: 229
               default: 242
          }
     144: aload_0
     145: dup
     146: getfield      #4                  // Field globalSets:I
     149: iconst_1
     150: isub
     151: putfield      #4                  // Field globalSets:I
     154: goto          250
     157: aload_0
     158: dup
     159: getfield      #5                  // Field localSets:I
     162: iconst_1
     163: isub
     164: putfield      #5                  // Field localSets:I
     167: goto          250
     170: aload_0
     171: dup
     172: getfield      #7                  // Field totalGets:I
     175: iconst_1
     176: isub
     177: putfield      #7                  // Field totalGets:I
     180: goto          250
     183: aload_0
     184: dup
     185: getfield      #6                  // Field aliasingGets:I
     188: iconst_1
     189: isub
     190: putfield      #6                  // Field aliasingGets:I
     193: aload_0
     194: dup
     195: getfield      #7                  // Field totalGets:I
     198: iconst_1
     199: isub
     200: putfield      #7                  // Field totalGets:I
     203: goto          250
     206: aload_0
     207: dup
     208: getfield      #8                  // Field callGets:I
     211: iconst_1
     212: isub
     213: putfield      #8                  // Field callGets:I
     216: aload_0
     217: dup
     218: getfield      #7                  // Field totalGets:I
     221: iconst_1
     222: isub
     223: putfield      #7                  // Field totalGets:I
     226: goto          250
     229: aload_0
     230: dup
     231: getfield      #9                  // Field deleteProps:I
     234: iconst_1
     235: isub
     236: putfield      #9                  // Field deleteProps:I
     239: goto          250
     242: new           #34                 // class java/lang/IllegalStateException
     245: dup
     246: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":()V
     249: athrow
     250: return

  java.util.List<com.google.javascript.jscomp.GlobalNamespace$Ref> getRefs();
    Code:
       0: aload_0
       1: getfield      #36                 // Field refs:Ljava/util/List;
       4: ifnonnull     13
       7: invokestatic  #43                 // Method com/google/common/collect/ImmutableList.of:()Lcom/google/common/collect/ImmutableList;
      10: goto          17
      13: aload_0
      14: getfield      #36                 // Field refs:Ljava/util/List;
      17: areturn

  void addRefInternal(com.google.javascript.jscomp.GlobalNamespace$Ref);
    Code:
       0: aload_0
       1: getfield      #36                 // Field refs:Ljava/util/List;
       4: ifnonnull     14
       7: aload_0
       8: invokestatic  #44                 // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
      11: putfield      #36                 // Field refs:Ljava/util/List;
      14: aload_0
      15: getfield      #36                 // Field refs:Ljava/util/List;
      18: aload_1
      19: invokeinterface #21,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      24: pop
      25: return

  boolean canEliminate();
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method canCollapseUnannotatedChildNames:()Z
       4: ifeq          14
       7: aload_0
       8: getfield      #7                  // Field totalGets:I
      11: ifle          16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: getfield      #16                 // Field props:Ljava/util/List;
      20: ifnull        64
      23: aload_0
      24: getfield      #16                 // Field props:Ljava/util/List;
      27: invokeinterface #38,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      32: astore_1
      33: aload_1
      34: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          64
      42: aload_1
      43: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #19                 // class com/google/javascript/jscomp/GlobalNamespace$Name
      51: astore_2
      52: aload_2
      53: invokevirtual #46                 // Method canCollapse:()Z
      56: ifne          61
      59: iconst_0
      60: ireturn
      61: goto          33
      64: iconst_1
      65: ireturn

  boolean isSimpleStubDeclaration();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getRefs:()Ljava/util/List;
       4: invokeinterface #48,  1           // InterfaceMethod java/util/List.size:()I
       9: iconst_1
      10: if_icmpne     52
      13: aload_0
      14: getfield      #36                 // Field refs:Ljava/util/List;
      17: iconst_0
      18: invokeinterface #49,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      23: checkcast     #41                 // class com/google/javascript/jscomp/GlobalNamespace$Ref
      26: astore_1
      27: aload_1
      28: getfield      #50                 // Field com/google/javascript/jscomp/GlobalNamespace$Ref.node:Lcom/google/javascript/rhino/Node;
      31: invokevirtual #51                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      34: ifnull        52
      37: aload_1
      38: getfield      #50                 // Field com/google/javascript/jscomp/GlobalNamespace$Ref.node:Lcom/google/javascript/rhino/Node;
      41: invokevirtual #51                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      44: invokevirtual #52                 // Method com/google/javascript/rhino/Node.isExprResult:()Z
      47: ifeq          52
      50: iconst_1
      51: ireturn
      52: iconst_0
      53: ireturn

  boolean canCollapse();
    Code:
       0: aload_0
       1: getfield      #15                 // Field inExterns:Z
       4: ifne          63
       7: aload_0
       8: invokevirtual #53                 // Method isGetOrSetDefinition:()Z
      11: ifne          63
      14: aload_0
      15: getfield      #2                  // Field declaredType:Z
      18: ifne          59
      21: aload_0
      22: getfield      #12                 // Field parent:Lcom/google/javascript/jscomp/GlobalNamespace$Name;
      25: ifnull        38
      28: aload_0
      29: getfield      #12                 // Field parent:Lcom/google/javascript/jscomp/GlobalNamespace$Name;
      32: invokevirtual #45                 // Method canCollapseUnannotatedChildNames:()Z
      35: ifeq          63
      38: aload_0
      39: getfield      #4                  // Field globalSets:I
      42: ifgt          52
      45: aload_0
      46: getfield      #5                  // Field localSets:I
      49: ifle          63
      52: aload_0
      53: getfield      #9                  // Field deleteProps:I
      56: ifne          63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: ireturn

  boolean isGetOrSetDefinition();
    Code:
       0: aload_0
       1: getfield      #14                 // Field type:Lcom/google/javascript/jscomp/GlobalNamespace$Name$Type;
       4: getstatic     #54                 // Field com/google/javascript/jscomp/GlobalNamespace$Name$Type.GET:Lcom/google/javascript/jscomp/GlobalNamespace$Name$Type;
       7: if_acmpeq     20
      10: aload_0
      11: getfield      #14                 // Field type:Lcom/google/javascript/jscomp/GlobalNamespace$Name$Type;
      14: getstatic     #55                 // Field com/google/javascript/jscomp/GlobalNamespace$Name$Type.SET:Lcom/google/javascript/jscomp/GlobalNamespace$Name$Type;
      17: if_acmpne     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  boolean canCollapseUnannotatedChildNames();
    Code:
       0: aload_0
       1: getfield      #14                 // Field type:Lcom/google/javascript/jscomp/GlobalNamespace$Name$Type;
       4: getstatic     #13                 // Field com/google/javascript/jscomp/GlobalNamespace$Name$Type.OTHER:Lcom/google/javascript/jscomp/GlobalNamespace$Name$Type;
       7: if_acmpeq     39
      10: aload_0
      11: invokevirtual #53                 // Method isGetOrSetDefinition:()Z
      14: ifne          39
      17: aload_0
      18: getfield      #4                  // Field globalSets:I
      21: iconst_1
      22: if_icmpne     39
      25: aload_0
      26: getfield      #5                  // Field localSets:I
      29: ifne          39
      32: aload_0
      33: getfield      #9                  // Field deleteProps:I
      36: ifeq          41
      39: iconst_0
      40: ireturn
      41: aload_0
      42: getfield      #28                 // Field declaration:Lcom/google/javascript/jscomp/GlobalNamespace$Ref;
      45: invokestatic  #56                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: aload_0
      50: getfield      #28                 // Field declaration:Lcom/google/javascript/jscomp/GlobalNamespace$Ref;
      53: invokevirtual #57                 // Method com/google/javascript/jscomp/GlobalNamespace$Ref.getTwin:()Lcom/google/javascript/jscomp/GlobalNamespace$Ref;
      56: ifnull        61
      59: iconst_0
      60: ireturn
      61: aload_0
      62: getfield      #2                  // Field declaredType:Z
      65: ifeq          70
      68: iconst_1
      69: ireturn
      70: aload_0
      71: getfield      #12                 // Field parent:Lcom/google/javascript/jscomp/GlobalNamespace$Name;
      74: ifnull        89
      77: aload_0
      78: getfield      #12                 // Field parent:Lcom/google/javascript/jscomp/GlobalNamespace$Name;
      81: invokevirtual #58                 // Method shouldKeepKeys:()Z
      84: ifeq          89
      87: iconst_0
      88: ireturn
      89: aload_0
      90: getfield      #6                  // Field aliasingGets:I
      93: ifle          98
      96: iconst_0
      97: ireturn
      98: aload_0
      99: getfield      #12                 // Field parent:Lcom/google/javascript/jscomp/GlobalNamespace$Name;
     102: ifnull        115
     105: aload_0
     106: getfield      #12                 // Field parent:Lcom/google/javascript/jscomp/GlobalNamespace$Name;
     109: invokevirtual #45                 // Method canCollapseUnannotatedChildNames:()Z
     112: ifeq          119
     115: iconst_1
     116: goto          120
     119: iconst_0
     120: ireturn

  boolean shouldKeepKeys();
    Code:
       0: aload_0
       1: getfield      #14                 // Field type:Lcom/google/javascript/jscomp/GlobalNamespace$Name$Type;
       4: getstatic     #59                 // Field com/google/javascript/jscomp/GlobalNamespace$Name$Type.OBJECTLIT:Lcom/google/javascript/jscomp/GlobalNamespace$Name$Type;
       7: if_acmpne     21
      10: aload_0
      11: getfield      #6                  // Field aliasingGets:I
      14: ifle          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  boolean needsToBeStubbed();
    Code:
       0: aload_0
       1: getfield      #4                  // Field globalSets:I
       4: ifne          18
       7: aload_0
       8: getfield      #5                  // Field localSets:I
      11: ifle          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  void setDeclaredType();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field declaredType:Z
       5: aload_0
       6: getfield      #12                 // Field parent:Lcom/google/javascript/jscomp/GlobalNamespace$Name;
       9: astore_1
      10: aload_1
      11: ifnull        27
      14: aload_1
      15: iconst_1
      16: putfield      #3                  // Field hasDeclaredTypeDescendant:Z
      19: aload_1
      20: getfield      #12                 // Field parent:Lcom/google/javascript/jscomp/GlobalNamespace$Name;
      23: astore_1
      24: goto          10
      27: return

  boolean isDeclaredType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field declaredType:Z
       4: ireturn

  boolean isNamespace();
    Code:
       0: aload_0
       1: getfield      #3                  // Field hasDeclaredTypeDescendant:Z
       4: ifeq          21
       7: aload_0
       8: getfield      #14                 // Field type:Lcom/google/javascript/jscomp/GlobalNamespace$Name$Type;
      11: getstatic     #59                 // Field com/google/javascript/jscomp/GlobalNamespace$Name$Type.OBJECTLIT:Lcom/google/javascript/jscomp/GlobalNamespace$Name$Type;
      14: if_acmpne     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  boolean isSimpleName();
    Code:
       0: aload_0
       1: getfield      #12                 // Field parent:Lcom/google/javascript/jscomp/GlobalNamespace$Name;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.String toString();
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #22                 // Method getFullName:()Ljava/lang/String;
      11: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #60                 // String  (
      16: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #14                 // Field type:Lcom/google/javascript/jscomp/GlobalNamespace$Name$Type;
      23: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      26: ldc           #62                 // String ): globalSets=
      28: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #4                  // Field globalSets:I
      35: invokevirtual #63                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      38: ldc           #64                 // String , localSets=
      40: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: getfield      #5                  // Field localSets:I
      47: invokevirtual #63                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      50: ldc           #65                 // String , totalGets=
      52: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_0
      56: getfield      #7                  // Field totalGets:I
      59: invokevirtual #63                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      62: ldc           #66                 // String , aliasingGets=
      64: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_0
      68: getfield      #6                  // Field aliasingGets:I
      71: invokevirtual #63                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      74: ldc           #67                 // String , callGets=
      76: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_0
      80: getfield      #8                  // Field callGets:I
      83: invokevirtual #63                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      86: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: areturn

  public com.google.javascript.rhino.JSDocInfo getJSDocInfo();
    Code:
       0: aload_0
       1: getfield      #10                 // Field docInfo:Lcom/google/javascript/rhino/JSDocInfo;
       4: areturn

  private static com.google.javascript.rhino.JSDocInfo getDocInfoForDeclaration(com.google.javascript.jscomp.GlobalNamespace$Ref);
    Code:
       0: aload_0
       1: getfield      #50                 // Field com/google/javascript/jscomp/GlobalNamespace$Ref.node:Lcom/google/javascript/rhino/Node;
       4: ifnull        83
       7: aload_0
       8: getfield      #50                 // Field com/google/javascript/jscomp/GlobalNamespace$Ref.node:Lcom/google/javascript/rhino/Node;
      11: invokevirtual #51                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      14: astore_1
      15: aload_1
      16: invokevirtual #68                 // Method com/google/javascript/rhino/Node.getType:()I
      19: lookupswitch  { // 3
                    86: 52
                   105: 52
                   118: 57
               default: 83
          }
      52: aload_1
      53: invokevirtual #69                 // Method com/google/javascript/rhino/Node.getJSDocInfo:()Lcom/google/javascript/rhino/JSDocInfo;
      56: areturn
      57: aload_0
      58: getfield      #50                 // Field com/google/javascript/jscomp/GlobalNamespace$Ref.node:Lcom/google/javascript/rhino/Node;
      61: aload_1
      62: invokevirtual #70                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      65: if_acmpne     75
      68: aload_1
      69: invokevirtual #69                 // Method com/google/javascript/rhino/Node.getJSDocInfo:()Lcom/google/javascript/rhino/JSDocInfo;
      72: goto          82
      75: aload_0
      76: getfield      #50                 // Field com/google/javascript/jscomp/GlobalNamespace$Ref.node:Lcom/google/javascript/rhino/Node;
      79: invokevirtual #69                 // Method com/google/javascript/rhino/Node.getJSDocInfo:()Lcom/google/javascript/rhino/JSDocInfo;
      82: areturn
      83: aconst_null
      84: areturn

  public com.google.javascript.rhino.jstype.StaticReference getDeclaration();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method getDeclaration:()Lcom/google/javascript/jscomp/GlobalNamespace$Ref;
       4: areturn

  public java.lang.Object getType();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method getType:()Lcom/google/javascript/rhino/jstype/JSType;
       4: areturn
}
