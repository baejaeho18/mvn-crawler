Compiled from "FunctionInjector.java"
class com.google.javascript.jscomp.FunctionInjector$2 implements com.google.common.base.Predicate<com.google.javascript.rhino.Node> {
  final java.lang.String val$fnName;

  final java.lang.String val$fnRecursionName;

  final com.google.javascript.jscomp.FunctionInjector this$0;

  com.google.javascript.jscomp.FunctionInjector$2(com.google.javascript.jscomp.FunctionInjector, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/FunctionInjector;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$fnName:Ljava/lang/String;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$fnRecursionName:Ljava/lang/String;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  public boolean apply(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method com/google/javascript/rhino/Node.isName:()Z
       4: ifeq          73
       7: aload_1
       8: invokevirtual #6                  // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      11: ldc           #7                  // String eval
      13: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      16: ifne          67
      19: aload_0
      20: getfield      #2                  // Field val$fnName:Ljava/lang/String;
      23: invokevirtual #9                  // Method java/lang/String.isEmpty:()Z
      26: ifne          43
      29: aload_1
      30: invokevirtual #6                  // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      33: aload_0
      34: getfield      #2                  // Field val$fnName:Ljava/lang/String;
      37: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ifne          67
      43: aload_0
      44: getfield      #3                  // Field val$fnRecursionName:Ljava/lang/String;
      47: invokevirtual #9                  // Method java/lang/String.isEmpty:()Z
      50: ifne          71
      53: aload_1
      54: invokevirtual #6                  // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      57: aload_0
      58: getfield      #3                  // Field val$fnRecursionName:Ljava/lang/String;
      61: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      64: ifeq          71
      67: iconst_1
      68: goto          72
      71: iconst_0
      72: ireturn
      73: iconst_0
      74: ireturn

  public boolean apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #10                 // class com/google/javascript/rhino/Node
       5: invokevirtual #11                 // Method apply:(Lcom/google/javascript/rhino/Node;)Z
       8: ireturn
}
