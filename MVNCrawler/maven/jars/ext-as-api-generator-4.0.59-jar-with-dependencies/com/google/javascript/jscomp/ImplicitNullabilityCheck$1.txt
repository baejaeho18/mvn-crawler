Compiled from "ImplicitNullabilityCheck.java"
class com.google.javascript.jscomp.ImplicitNullabilityCheck$1 implements com.google.javascript.jscomp.NodeUtil$Visitor {
  final com.google.javascript.rhino.jstype.JSTypeRegistry val$registry;

  final com.google.javascript.jscomp.NodeTraversal val$t;

  final com.google.javascript.jscomp.ImplicitNullabilityCheck this$0;

  com.google.javascript.jscomp.ImplicitNullabilityCheck$1(com.google.javascript.jscomp.ImplicitNullabilityCheck, com.google.javascript.rhino.jstype.JSTypeRegistry, com.google.javascript.jscomp.NodeTraversal);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/ImplicitNullabilityCheck;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$registry:Lcom/google/javascript/rhino/jstype/JSTypeRegistry;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$t:Lcom/google/javascript/jscomp/NodeTraversal;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  public void visit(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method com/google/javascript/rhino/Node.isString:()Z
       4: ifne          8
       7: return
       8: aload_1
       9: invokevirtual #6                  // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      12: astore_2
      13: aload_2
      14: ifnull        65
      17: aload_2
      18: invokevirtual #7                  // Method com/google/javascript/rhino/Node.getType:()I
      21: lookupswitch  { // 4
                    30: 64
                    42: 64
                   304: 64
                   306: 64
               default: 65
          }
      64: return
      65: aload_1
      66: invokevirtual #8                  // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      69: astore_3
      70: aload_3
      71: ldc           #9                  // String null
      73: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      76: ifne          90
      79: aload_0
      80: getfield      #2                  // Field val$registry:Lcom/google/javascript/rhino/jstype/JSTypeRegistry;
      83: aload_3
      84: invokevirtual #11                 // Method com/google/javascript/rhino/jstype/JSTypeRegistry.getType:(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/JSType;
      87: ifnonnull     91
      90: return
      91: aload_0
      92: getfield      #2                  // Field val$registry:Lcom/google/javascript/rhino/jstype/JSTypeRegistry;
      95: aload_1
      96: ldc           #12                 // String [internal]
      98: aconst_null
      99: invokevirtual #13                 // Method com/google/javascript/rhino/jstype/JSTypeRegistry.createFromTypeNodes:(Lcom/google/javascript/rhino/Node;Ljava/lang/String;Lcom/google/javascript/rhino/jstype/StaticScope;)Lcom/google/javascript/rhino/jstype/JSType;
     102: astore        4
     104: aload         4
     106: invokevirtual #14                 // Method com/google/javascript/rhino/jstype/JSType.isNullable:()Z
     109: ifeq          125
     112: aload_0
     113: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/ImplicitNullabilityCheck;
     116: aload_0
     117: getfield      #3                  // Field val$t:Lcom/google/javascript/jscomp/NodeTraversal;
     120: aload_1
     121: aload_3
     122: invokevirtual #15                 // Method com/google/javascript/jscomp/ImplicitNullabilityCheck.reportWarning:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Ljava/lang/String;)V
     125: return
}
