Compiled from "SymbolTable.java"
class com.google.javascript.jscomp.SymbolTable$3 extends com.google.common.collect.Ordering<com.google.javascript.jscomp.SymbolTable$SymbolScope> {
  final com.google.javascript.jscomp.SymbolTable this$0;

  com.google.javascript.jscomp.SymbolTable$3(com.google.javascript.jscomp.SymbolTable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/SymbolTable;
       5: aload_0
       6: invokespecial #2                  // Method com/google/common/collect/Ordering."<init>":()V
       9: return

  public int compare(com.google.javascript.jscomp.SymbolTable$SymbolScope, com.google.javascript.jscomp.SymbolTable$SymbolScope);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method com/google/javascript/jscomp/SymbolTable$SymbolScope.isLexicalScope:()Z
       4: ifeq          18
       7: aload_2
       8: invokevirtual #3                  // Method com/google/javascript/jscomp/SymbolTable$SymbolScope.isLexicalScope:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #4                  // String We can only sort lexical scopes
      21: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      24: aload_0
      25: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/SymbolTable;
      28: invokestatic  #6                  // Method com/google/javascript/jscomp/SymbolTable.access$1800:(Lcom/google/javascript/jscomp/SymbolTable;)Lcom/google/common/collect/Ordering;
      31: aload_1
      32: invokevirtual #7                  // Method com/google/javascript/jscomp/SymbolTable$SymbolScope.getRootNode:()Lcom/google/javascript/rhino/Node;
      35: aload_2
      36: invokevirtual #7                  // Method com/google/javascript/jscomp/SymbolTable$SymbolScope.getRootNode:()Lcom/google/javascript/rhino/Node;
      39: invokevirtual #8                  // Method com/google/common/collect/Ordering.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      42: ireturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class com/google/javascript/jscomp/SymbolTable$SymbolScope
       5: aload_2
       6: checkcast     #9                  // class com/google/javascript/jscomp/SymbolTable$SymbolScope
       9: invokevirtual #10                 // Method compare:(Lcom/google/javascript/jscomp/SymbolTable$SymbolScope;Lcom/google/javascript/jscomp/SymbolTable$SymbolScope;)I
      12: ireturn
}
