Compiled from "CommandLineRunner.java"
class com.google.javascript.jscomp.CommandLineRunner$Flags {
  private static java.util.List<com.google.javascript.jscomp.CommandLineRunner$GuardLevel> guardLevels;

  private boolean displayHelp;

  private boolean printTree;

  private boolean printAst;

  private boolean printPassGraph;

  private com.google.javascript.jscomp.CompilerOptions$DevMode jscompDevMode;

  private java.lang.String loggingLevel;

  private java.util.List<java.lang.String> externs;

  private java.util.List<java.lang.String> js;

  private java.lang.String jsOutputFile;

  private java.util.List<java.lang.String> module;

  private java.lang.String variableMapOutputFile;

  private boolean createNameMapFiles;

  private java.lang.String propertyMapOutputFile;

  private boolean thirdParty;

  private int summaryDetailLevel;

  private java.lang.String outputWrapper;

  private java.lang.String outputWrapperFile;

  private java.util.List<java.lang.String> moduleWrapper;

  private java.lang.String moduleOutputPathPrefix;

  private java.lang.String createSourceMap;

  private com.google.javascript.jscomp.SourceMap$Format sourceMapFormat;

  private java.util.List<java.lang.String> sourceMapLocationMapping;

  private java.util.List<java.lang.String> jscompError;

  private java.util.List<java.lang.String> jscompWarning;

  private java.util.List<java.lang.String> jscompOff;

  private java.util.List<java.lang.String> define;

  private java.lang.String charset;

  private java.lang.String compilationLevel;

  private com.google.javascript.jscomp.CompilationLevel compilationLevelParsed;

  private boolean useTypesForOptimization;

  private com.google.javascript.jscomp.WarningLevel warningLevel;

  private boolean useOnlyCustomExterns;

  private boolean debug;

  private boolean generateExports;

  private java.util.List<com.google.javascript.jscomp.CommandLineRunner$FormattingOption> formatting;

  private boolean processCommonJsModules;

  private boolean rewriteEs6Modules;

  private boolean transpileOnly;

  private java.lang.String commonJsPathPrefix;

  private java.lang.String commonJsEntryModule;

  private boolean transformAmdModules;

  private boolean processClosurePrimitives;

  private boolean manageClosureDependencies;

  private boolean onlyClosureDependencies;

  private java.util.List<java.lang.String> closureEntryPoint;

  private boolean processJqueryPrimitives;

  private boolean angularPass;

  private java.lang.String outputManifest;

  private java.lang.String outputModuleDependencies;

  private boolean acceptConstKeyword;

  private java.lang.String languageIn;

  private java.lang.String languageOut;

  private boolean version;

  private java.lang.String translationsFile;

  private java.lang.String translationsProject;

  private java.lang.String flagFile;

  private java.lang.String warningsWhitelistFile;

  private java.util.List<java.lang.String> extraAnnotationName;

  private com.google.javascript.jscomp.CompilerOptions$TracerMode tracerMode;

  private boolean useNewTypeInference;

  private java.lang.String renamePrefixNamespace;

  private java.util.List<java.lang.String> conformanceConfigs;

  private java.util.List<java.lang.String> arguments;

  private static final java.util.Map<java.lang.String, com.google.javascript.jscomp.CompilationLevel> COMPILATION_LEVEL_MAP;

  private com.google.javascript.jscomp.CommandLineRunner$Flags();
    Code:
       0: aload_0
       1: invokespecial #62                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #49                 // Field displayHelp:Z
       9: aload_0
      10: iconst_0
      11: putfield      #12                 // Field printTree:Z
      14: aload_0
      15: iconst_0
      16: putfield      #13                 // Field printAst:Z
      19: aload_0
      20: iconst_0
      21: putfield      #14                 // Field printPassGraph:Z
      24: aload_0
      25: getstatic     #63                 // Field com/google/javascript/jscomp/CompilerOptions$DevMode.OFF:Lcom/google/javascript/jscomp/CompilerOptions$DevMode;
      28: putfield      #15                 // Field jscompDevMode:Lcom/google/javascript/jscomp/CompilerOptions$DevMode;
      31: aload_0
      32: getstatic     #64                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      35: invokevirtual #65                 // Method java/util/logging/Level.getName:()Ljava/lang/String;
      38: putfield      #16                 // Field loggingLevel:Ljava/lang/String;
      41: aload_0
      42: new           #66                 // class java/util/ArrayList
      45: dup
      46: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
      49: putfield      #17                 // Field externs:Ljava/util/List;
      52: aload_0
      53: new           #66                 // class java/util/ArrayList
      56: dup
      57: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
      60: putfield      #68                 // Field js:Ljava/util/List;
      63: aload_0
      64: ldc           #69                 // String
      66: putfield      #18                 // Field jsOutputFile:Ljava/lang/String;
      69: aload_0
      70: new           #66                 // class java/util/ArrayList
      73: dup
      74: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
      77: putfield      #19                 // Field module:Ljava/util/List;
      80: aload_0
      81: ldc           #69                 // String
      83: putfield      #20                 // Field variableMapOutputFile:Ljava/lang/String;
      86: aload_0
      87: iconst_0
      88: putfield      #21                 // Field createNameMapFiles:Z
      91: aload_0
      92: ldc           #69                 // String
      94: putfield      #22                 // Field propertyMapOutputFile:Ljava/lang/String;
      97: aload_0
      98: iconst_0
      99: putfield      #46                 // Field thirdParty:Z
     102: aload_0
     103: iconst_1
     104: putfield      #23                 // Field summaryDetailLevel:I
     107: aload_0
     108: ldc           #69                 // String
     110: putfield      #51                 // Field outputWrapper:Ljava/lang/String;
     113: aload_0
     114: ldc           #69                 // String
     116: putfield      #52                 // Field outputWrapperFile:Ljava/lang/String;
     119: aload_0
     120: new           #66                 // class java/util/ArrayList
     123: dup
     124: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
     127: putfield      #24                 // Field moduleWrapper:Ljava/util/List;
     130: aload_0
     131: ldc           #70                 // String ./
     133: putfield      #25                 // Field moduleOutputPathPrefix:Ljava/lang/String;
     136: aload_0
     137: ldc           #69                 // String
     139: putfield      #26                 // Field createSourceMap:Ljava/lang/String;
     142: aload_0
     143: getstatic     #71                 // Field com/google/javascript/jscomp/SourceMap$Format.DEFAULT:Lcom/google/javascript/jscomp/SourceMap$Format;
     146: putfield      #27                 // Field sourceMapFormat:Lcom/google/javascript/jscomp/SourceMap$Format;
     149: aload_0
     150: invokestatic  #72                 // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
     153: putfield      #73                 // Field sourceMapLocationMapping:Ljava/util/List;
     156: aload_0
     157: new           #66                 // class java/util/ArrayList
     160: dup
     161: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
     164: putfield      #74                 // Field jscompError:Ljava/util/List;
     167: aload_0
     168: new           #66                 // class java/util/ArrayList
     171: dup
     172: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
     175: putfield      #75                 // Field jscompWarning:Ljava/util/List;
     178: aload_0
     179: new           #66                 // class java/util/ArrayList
     182: dup
     183: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
     186: putfield      #76                 // Field jscompOff:Ljava/util/List;
     189: aload_0
     190: new           #66                 // class java/util/ArrayList
     193: dup
     194: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
     197: putfield      #28                 // Field define:Ljava/util/List;
     200: aload_0
     201: ldc           #69                 // String
     203: putfield      #29                 // Field charset:Ljava/lang/String;
     206: aload_0
     207: ldc           #77                 // String SIMPLE
     209: putfield      #78                 // Field compilationLevel:Ljava/lang/String;
     212: aload_0
     213: aconst_null
     214: putfield      #10                 // Field compilationLevelParsed:Lcom/google/javascript/jscomp/CompilationLevel;
     217: aload_0
     218: iconst_0
     219: putfield      #8                  // Field useTypesForOptimization:Z
     222: aload_0
     223: getstatic     #79                 // Field com/google/javascript/jscomp/WarningLevel.DEFAULT:Lcom/google/javascript/jscomp/WarningLevel;
     226: putfield      #6                  // Field warningLevel:Lcom/google/javascript/jscomp/WarningLevel;
     229: aload_0
     230: iconst_0
     231: putfield      #1                  // Field useOnlyCustomExterns:Z
     234: aload_0
     235: iconst_0
     236: putfield      #9                  // Field debug:Z
     239: aload_0
     240: iconst_0
     241: putfield      #7                  // Field generateExports:Z
     244: aload_0
     245: new           #66                 // class java/util/ArrayList
     248: dup
     249: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
     252: putfield      #5                  // Field formatting:Ljava/util/List;
     255: aload_0
     256: iconst_0
     257: putfield      #57                 // Field processCommonJsModules:Z
     260: aload_0
     261: iconst_0
     262: putfield      #36                 // Field rewriteEs6Modules:Z
     265: aload_0
     266: iconst_0
     267: putfield      #37                 // Field transpileOnly:Z
     270: aload_0
     271: ldc           #70                 // String ./
     273: putfield      #38                 // Field commonJsPathPrefix:Ljava/lang/String;
     276: aload_0
     277: iconst_0
     278: putfield      #39                 // Field transformAmdModules:Z
     281: aload_0
     282: iconst_1
     283: putfield      #56                 // Field processClosurePrimitives:Z
     286: aload_0
     287: iconst_0
     288: putfield      #55                 // Field manageClosureDependencies:Z
     291: aload_0
     292: iconst_0
     293: putfield      #30                 // Field onlyClosureDependencies:Z
     296: aload_0
     297: new           #66                 // class java/util/ArrayList
     300: dup
     301: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
     304: putfield      #53                 // Field closureEntryPoint:Ljava/util/List;
     307: aload_0
     308: iconst_0
     309: putfield      #45                 // Field processJqueryPrimitives:Z
     312: aload_0
     313: iconst_0
     314: putfield      #41                 // Field angularPass:Z
     317: aload_0
     318: ldc           #69                 // String
     320: putfield      #31                 // Field outputManifest:Ljava/lang/String;
     323: aload_0
     324: ldc           #69                 // String
     326: putfield      #32                 // Field outputModuleDependencies:Ljava/lang/String;
     329: aload_0
     330: iconst_0
     331: putfield      #33                 // Field acceptConstKeyword:Z
     334: aload_0
     335: ldc           #81                 // String ECMASCRIPT3
     337: putfield      #34                 // Field languageIn:Ljava/lang/String;
     340: aload_0
     341: ldc           #69                 // String
     343: putfield      #35                 // Field languageOut:Ljava/lang/String;
     346: aload_0
     347: iconst_0
     348: putfield      #47                 // Field version:Z
     351: aload_0
     352: ldc           #69                 // String
     354: putfield      #4                  // Field translationsFile:Ljava/lang/String;
     357: aload_0
     358: aconst_null
     359: putfield      #3                  // Field translationsProject:Ljava/lang/String;
     362: aload_0
     363: ldc           #69                 // String
     365: putfield      #59                 // Field flagFile:Ljava/lang/String;
     368: aload_0
     369: ldc           #69                 // String
     371: putfield      #40                 // Field warningsWhitelistFile:Ljava/lang/String;
     374: aload_0
     375: new           #66                 // class java/util/ArrayList
     378: dup
     379: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
     382: putfield      #11                 // Field extraAnnotationName:Ljava/util/List;
     385: aload_0
     386: getstatic     #82                 // Field com/google/javascript/jscomp/CompilerOptions$TracerMode.OFF:Lcom/google/javascript/jscomp/CompilerOptions$TracerMode;
     389: putfield      #42                 // Field tracerMode:Lcom/google/javascript/jscomp/CompilerOptions$TracerMode;
     392: aload_0
     393: iconst_0
     394: putfield      #43                 // Field useNewTypeInference:Z
     397: aload_0
     398: aconst_null
     399: putfield      #44                 // Field renamePrefixNamespace:Ljava/lang/String;
     402: aload_0
     403: new           #66                 // class java/util/ArrayList
     406: dup
     407: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
     410: putfield      #2                  // Field conformanceConfigs:Ljava/util/List;
     413: aload_0
     414: new           #66                 // class java/util/ArrayList
     417: dup
     418: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
     421: putfield      #83                 // Field arguments:Ljava/util/List;
     424: return

  private void parse(java.util.List<java.lang.String>) throws org.kohsuke.args4j.CmdLineException;
    Code:
       0: new           #84                 // class org/kohsuke/args4j/CmdLineParser
       3: dup
       4: aload_0
       5: invokespecial #85                 // Method org/kohsuke/args4j/CmdLineParser."<init>":(Ljava/lang/Object;)V
       8: astore_2
       9: aload_2
      10: aload_1
      11: iconst_0
      12: anewarray     #86                 // class java/lang/String
      15: invokeinterface #87,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      20: checkcast     #88                 // class "[Ljava/lang/String;"
      23: invokevirtual #89                 // Method org/kohsuke/args4j/CmdLineParser.parseArgument:([Ljava/lang/String;)V
      26: aload_0
      27: getstatic     #90                 // Field COMPILATION_LEVEL_MAP:Ljava/util/Map;
      30: aload_0
      31: getfield      #78                 // Field compilationLevel:Ljava/lang/String;
      34: invokevirtual #91                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      37: invokeinterface #92,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      42: checkcast     #93                 // class com/google/javascript/jscomp/CompilationLevel
      45: putfield      #10                 // Field compilationLevelParsed:Lcom/google/javascript/jscomp/CompilationLevel;
      48: aload_0
      49: getfield      #10                 // Field compilationLevelParsed:Lcom/google/javascript/jscomp/CompilationLevel;
      52: ifnonnull     86
      55: new           #94                 // class org/kohsuke/args4j/CmdLineException
      58: dup
      59: aload_2
      60: new           #95                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
      67: ldc           #97                 // String Bad value for --compilation_level:
      69: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #78                 // Field compilationLevel:Ljava/lang/String;
      76: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokespecial #100                // Method org/kohsuke/args4j/CmdLineException."<init>":(Lorg/kohsuke/args4j/CmdLineParser;Ljava/lang/String;)V
      85: athrow
      86: return

  private void printUsage(java.io.PrintStream);
    Code:
       0: new           #84                 // class org/kohsuke/args4j/CmdLineParser
       3: dup
       4: aload_0
       5: invokespecial #85                 // Method org/kohsuke/args4j/CmdLineParser."<init>":(Ljava/lang/Object;)V
       8: astore_2
       9: aload_2
      10: new           #101                // class java/io/OutputStreamWriter
      13: dup
      14: aload_1
      15: getstatic     #102                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      18: invokespecial #103                // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
      21: aconst_null
      22: getstatic     #104                // Field org/kohsuke/args4j/OptionHandlerFilter.ALL:Lorg/kohsuke/args4j/OptionHandlerFilter;
      25: invokevirtual #105                // Method org/kohsuke/args4j/CmdLineParser.printUsage:(Ljava/io/Writer;Ljava/util/ResourceBundle;Lorg/kohsuke/args4j/OptionHandlerFilter;)V
      28: aload_1
      29: invokevirtual #106                // Method java/io/PrintStream.flush:()V
      32: return

  private void printShortUsageAfterErrors(java.io.PrintStream);
    Code:
       0: aload_1
       1: ldc           #107                // String Sample usage:
       3: invokevirtual #108                // Method java/io/PrintStream.print:(Ljava/lang/String;)V
       6: aload_1
       7: new           #84                 // class org/kohsuke/args4j/CmdLineParser
      10: dup
      11: aload_0
      12: invokespecial #85                 // Method org/kohsuke/args4j/CmdLineParser."<init>":(Ljava/lang/Object;)V
      15: getstatic     #109                // Field org/kohsuke/args4j/OptionHandlerFilter.PUBLIC:Lorg/kohsuke/args4j/OptionHandlerFilter;
      18: aconst_null
      19: invokevirtual #110                // Method org/kohsuke/args4j/CmdLineParser.printExample:(Lorg/kohsuke/args4j/OptionHandlerFilter;Ljava/util/ResourceBundle;)Ljava/lang/String;
      22: invokevirtual #111                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      25: aload_1
      26: ldc           #112                // String Run with --help for all options and details
      28: invokevirtual #111                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      31: aload_1
      32: invokevirtual #106                // Method java/io/PrintStream.flush:()V
      35: return

  protected java.util.List<java.lang.String> getJsFiles() throws org.kohsuke.args4j.CmdLineException, java.io.IOException;
    Code:
       0: new           #66                 // class java/util/ArrayList
       3: dup
       4: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #68                 // Field js:Ljava/util/List;
      13: invokeinterface #113,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      18: pop
      19: aload_1
      20: aload_0
      21: getfield      #83                 // Field arguments:Ljava/util/List;
      24: invokeinterface #113,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      29: pop
      30: aload_1
      31: invokestatic  #114                // Method com/google/javascript/jscomp/CommandLineRunner.findJsFiles:(Ljava/util/Collection;)Ljava/util/List;
      34: astore_2
      35: aload_1
      36: invokeinterface #115,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      41: ifne          71
      44: aload_2
      45: invokeinterface #115,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      50: ifeq          71
      53: new           #94                 // class org/kohsuke/args4j/CmdLineException
      56: dup
      57: new           #84                 // class org/kohsuke/args4j/CmdLineParser
      60: dup
      61: aload_0
      62: invokespecial #85                 // Method org/kohsuke/args4j/CmdLineParser."<init>":(Ljava/lang/Object;)V
      65: ldc           #116                // String No inputs matched
      67: invokespecial #100                // Method org/kohsuke/args4j/CmdLineException."<init>":(Lorg/kohsuke/args4j/CmdLineParser;Ljava/lang/String;)V
      70: athrow
      71: aload_2
      72: areturn

  java.util.List<com.google.javascript.jscomp.SourceMap$LocationMapping> getSourceMapLocationMappings() throws org.kohsuke.args4j.CmdLineException;
    Code:
       0: invokestatic  #117                // Method com/google/common/collect/ImmutableList.builder:()Lcom/google/common/collect/ImmutableList$Builder;
       3: astore_1
       4: bipush        124
       6: invokestatic  #118                // Method com/google/common/base/Splitter.on:(C)Lcom/google/common/base/Splitter;
       9: iconst_2
      10: invokevirtual #119                // Method com/google/common/base/Splitter.limit:(I)Lcom/google/common/base/Splitter;
      13: astore_2
      14: aload_0
      15: getfield      #73                 // Field sourceMapLocationMapping:Ljava/util/List;
      18: invokeinterface #120,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          133
      33: aload_3
      34: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #86                 // class java/lang/String
      42: astore        4
      44: aload_2
      45: aload         4
      47: invokevirtual #123                // Method com/google/common/base/Splitter.splitToList:(Ljava/lang/CharSequence;)Ljava/util/List;
      50: astore        5
      52: aload         5
      54: invokeinterface #124,  1          // InterfaceMethod java/util/List.size:()I
      59: iconst_2
      60: if_icmpeq     96
      63: new           #94                 // class org/kohsuke/args4j/CmdLineException
      66: dup
      67: new           #95                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #125                // String Bad value for --source_map_location_mapping:
      76: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_0
      80: getfield      #73                 // Field sourceMapLocationMapping:Ljava/util/List;
      83: invokestatic  #126                // Method com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
      86: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      89: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: invokespecial #128                // Method org/kohsuke/args4j/CmdLineException."<init>":(Ljava/lang/String;)V
      95: athrow
      96: aload_1
      97: new           #129                // class com/google/javascript/jscomp/SourceMap$LocationMapping
     100: dup
     101: aload         5
     103: iconst_0
     104: invokeinterface #130,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     109: checkcast     #86                 // class java/lang/String
     112: aload         5
     114: iconst_1
     115: invokeinterface #130,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     120: checkcast     #86                 // class java/lang/String
     123: invokespecial #131                // Method com/google/javascript/jscomp/SourceMap$LocationMapping."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     126: invokevirtual #132                // Method com/google/common/collect/ImmutableList$Builder.add:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList$Builder;
     129: pop
     130: goto          24
     133: aload_1
     134: invokevirtual #133                // Method com/google/common/collect/ImmutableList$Builder.build:()Lcom/google/common/collect/ImmutableList;
     137: areturn

  public static com.google.javascript.jscomp.AbstractCommandLineRunner$WarningGuardSpec getWarningGuardSpec();
    Code:
       0: new           #134                // class com/google/javascript/jscomp/AbstractCommandLineRunner$WarningGuardSpec
       3: dup
       4: invokespecial #135                // Method com/google/javascript/jscomp/AbstractCommandLineRunner$WarningGuardSpec."<init>":()V
       7: astore_0
       8: getstatic     #61                 // Field guardLevels:Ljava/util/List;
      11: invokeinterface #120,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_1
      17: aload_1
      18: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          51
      26: aload_1
      27: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #136                // class com/google/javascript/jscomp/CommandLineRunner$GuardLevel
      35: astore_2
      36: aload_0
      37: aload_2
      38: getfield      #137                // Field com/google/javascript/jscomp/CommandLineRunner$GuardLevel.level:Lcom/google/javascript/jscomp/CheckLevel;
      41: aload_2
      42: getfield      #138                // Field com/google/javascript/jscomp/CommandLineRunner$GuardLevel.name:Ljava/lang/String;
      45: invokevirtual #139                // Method com/google/javascript/jscomp/AbstractCommandLineRunner$WarningGuardSpec.add:(Lcom/google/javascript/jscomp/CheckLevel;Ljava/lang/String;)V
      48: goto          17
      51: aload_0
      52: areturn

  static java.util.List access$100();
    Code:
       0: getstatic     #61                 // Field guardLevels:Ljava/util/List;
       3: areturn

  com.google.javascript.jscomp.CommandLineRunner$Flags(com.google.javascript.jscomp.CommandLineRunner$1);
    Code:
       0: aload_0
       1: invokespecial #60                 // Method "<init>":()V
       4: return

  static java.lang.String access$300(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #59                 // Field flagFile:Ljava/lang/String;
       4: areturn

  static java.lang.String access$302(com.google.javascript.jscomp.CommandLineRunner$Flags, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #59                 // Field flagFile:Ljava/lang/String;
       6: areturn

  static void access$400(com.google.javascript.jscomp.CommandLineRunner$Flags, java.util.List) throws org.kohsuke.args4j.CmdLineException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #58                 // Method parse:(Ljava/util/List;)V
       5: return

  static boolean access$500(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #57                 // Field processCommonJsModules:Z
       4: ireturn

  static boolean access$602(com.google.javascript.jscomp.CommandLineRunner$Flags, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #56                 // Field processClosurePrimitives:Z
       6: ireturn

  static boolean access$702(com.google.javascript.jscomp.CommandLineRunner$Flags, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #55                 // Field manageClosureDependencies:Z
       6: ireturn

  static java.lang.String access$800(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #54                 // Field commonJsEntryModule:Ljava/lang/String;
       4: areturn

  static java.util.List access$902(com.google.javascript.jscomp.CommandLineRunner$Flags, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #53                 // Field closureEntryPoint:Ljava/util/List;
       6: areturn

  static java.lang.String access$1000(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #52                 // Field outputWrapperFile:Ljava/lang/String;
       4: areturn

  static java.lang.String access$1102(com.google.javascript.jscomp.CommandLineRunner$Flags, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #51                 // Field outputWrapper:Ljava/lang/String;
       6: areturn

  static java.lang.String access$1100(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #51                 // Field outputWrapper:Ljava/lang/String;
       4: areturn

  static void access$1200(com.google.javascript.jscomp.CommandLineRunner$Flags, java.io.PrintStream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #50                 // Method printShortUsageAfterErrors:(Ljava/io/PrintStream;)V
       5: return

  static boolean access$1300(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #49                 // Field displayHelp:Z
       4: ireturn

  static void access$1400(com.google.javascript.jscomp.CommandLineRunner$Flags, java.io.PrintStream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #48                 // Method printUsage:(Ljava/io/PrintStream;)V
       5: return

  static boolean access$1500(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #47                 // Field version:Z
       4: ireturn

  static boolean access$1600(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #46                 // Field thirdParty:Z
       4: ireturn

  static boolean access$1700(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #45                 // Field processJqueryPrimitives:Z
       4: ireturn

  static java.lang.String access$1800(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #44                 // Field renamePrefixNamespace:Ljava/lang/String;
       4: areturn

  static boolean access$1900(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #43                 // Field useNewTypeInference:Z
       4: ireturn

  static com.google.javascript.jscomp.CompilerOptions$TracerMode access$2000(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #42                 // Field tracerMode:Lcom/google/javascript/jscomp/CompilerOptions$TracerMode;
       4: areturn

  static boolean access$2100(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #41                 // Field angularPass:Z
       4: ireturn

  static java.lang.String access$2200(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #40                 // Field warningsWhitelistFile:Ljava/lang/String;
       4: areturn

  static boolean access$2300(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #39                 // Field transformAmdModules:Z
       4: ireturn

  static java.lang.String access$2400(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #38                 // Field commonJsPathPrefix:Ljava/lang/String;
       4: areturn

  static boolean access$2500(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #37                 // Field transpileOnly:Z
       4: ireturn

  static boolean access$2600(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #36                 // Field rewriteEs6Modules:Z
       4: ireturn

  static java.lang.String access$2700(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #35                 // Field languageOut:Ljava/lang/String;
       4: areturn

  static java.lang.String access$2800(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #34                 // Field languageIn:Ljava/lang/String;
       4: areturn

  static boolean access$2900(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #33                 // Field acceptConstKeyword:Z
       4: ireturn

  static java.lang.String access$3000(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #32                 // Field outputModuleDependencies:Ljava/lang/String;
       4: areturn

  static java.lang.String access$3100(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #31                 // Field outputManifest:Ljava/lang/String;
       4: areturn

  static java.util.List access$900(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #53                 // Field closureEntryPoint:Ljava/util/List;
       4: areturn

  static boolean access$3200(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #30                 // Field onlyClosureDependencies:Z
       4: ireturn

  static boolean access$700(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #55                 // Field manageClosureDependencies:Z
       4: ireturn

  static java.lang.String access$3300(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #29                 // Field charset:Ljava/lang/String;
       4: areturn

  static java.util.List access$3400(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #28                 // Field define:Ljava/util/List;
       4: areturn

  static com.google.javascript.jscomp.SourceMap$Format access$3500(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #27                 // Field sourceMapFormat:Lcom/google/javascript/jscomp/SourceMap$Format;
       4: areturn

  static java.lang.String access$3600(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #26                 // Field createSourceMap:Ljava/lang/String;
       4: areturn

  static java.lang.String access$3700(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #25                 // Field moduleOutputPathPrefix:Ljava/lang/String;
       4: areturn

  static java.util.List access$3800(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #24                 // Field moduleWrapper:Ljava/util/List;
       4: areturn

  static int access$3900(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #23                 // Field summaryDetailLevel:I
       4: ireturn

  static java.lang.String access$4000(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #22                 // Field propertyMapOutputFile:Ljava/lang/String;
       4: areturn

  static boolean access$4100(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #21                 // Field createNameMapFiles:Z
       4: ireturn

  static java.lang.String access$4200(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #20                 // Field variableMapOutputFile:Ljava/lang/String;
       4: areturn

  static java.util.List access$4300(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #19                 // Field module:Ljava/util/List;
       4: areturn

  static java.lang.String access$4400(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #18                 // Field jsOutputFile:Ljava/lang/String;
       4: areturn

  static java.util.List access$4500(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #17                 // Field externs:Ljava/util/List;
       4: areturn

  static java.lang.String access$4600(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #16                 // Field loggingLevel:Ljava/lang/String;
       4: areturn

  static com.google.javascript.jscomp.CompilerOptions$DevMode access$4700(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #15                 // Field jscompDevMode:Lcom/google/javascript/jscomp/CompilerOptions$DevMode;
       4: areturn

  static boolean access$4800(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #14                 // Field printPassGraph:Z
       4: ireturn

  static boolean access$4900(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #13                 // Field printAst:Z
       4: ireturn

  static boolean access$5000(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #12                 // Field printTree:Z
       4: ireturn

  static java.util.List access$5100(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #11                 // Field extraAnnotationName:Ljava/util/List;
       4: areturn

  static com.google.javascript.jscomp.CompilationLevel access$5200(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #10                 // Field compilationLevelParsed:Lcom/google/javascript/jscomp/CompilationLevel;
       4: areturn

  static boolean access$5300(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #9                  // Field debug:Z
       4: ireturn

  static boolean access$5400(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #8                  // Field useTypesForOptimization:Z
       4: ireturn

  static boolean access$5500(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #7                  // Field generateExports:Z
       4: ireturn

  static com.google.javascript.jscomp.WarningLevel access$5600(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #6                  // Field warningLevel:Lcom/google/javascript/jscomp/WarningLevel;
       4: areturn

  static java.util.List access$5700(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #5                  // Field formatting:Ljava/util/List;
       4: areturn

  static boolean access$600(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #56                 // Field processClosurePrimitives:Z
       4: ireturn

  static java.lang.String access$5900(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #4                  // Field translationsFile:Ljava/lang/String;
       4: areturn

  static java.lang.String access$6000(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #3                  // Field translationsProject:Ljava/lang/String;
       4: areturn

  static java.util.List access$6100(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #2                  // Field conformanceConfigs:Ljava/util/List;
       4: areturn

  static boolean access$6200(com.google.javascript.jscomp.CommandLineRunner$Flags);
    Code:
       0: aload_0
       1: getfield      #1                  // Field useOnlyCustomExterns:Z
       4: ireturn

  static {};
    Code:
       0: new           #66                 // class java/util/ArrayList
       3: dup
       4: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
       7: putstatic     #61                 // Field guardLevels:Ljava/util/List;
      10: ldc           #140                // String WHITESPACE_ONLY
      12: getstatic     #141                // Field com/google/javascript/jscomp/CompilationLevel.WHITESPACE_ONLY:Lcom/google/javascript/jscomp/CompilationLevel;
      15: ldc           #77                 // String SIMPLE
      17: getstatic     #142                // Field com/google/javascript/jscomp/CompilationLevel.SIMPLE_OPTIMIZATIONS:Lcom/google/javascript/jscomp/CompilationLevel;
      20: ldc           #143                // String SIMPLE_OPTIMIZATIONS
      22: getstatic     #142                // Field com/google/javascript/jscomp/CompilationLevel.SIMPLE_OPTIMIZATIONS:Lcom/google/javascript/jscomp/CompilationLevel;
      25: ldc           #144                // String ADVANCED
      27: getstatic     #145                // Field com/google/javascript/jscomp/CompilationLevel.ADVANCED_OPTIMIZATIONS:Lcom/google/javascript/jscomp/CompilationLevel;
      30: ldc           #146                // String ADVANCED_OPTIMIZATIONS
      32: getstatic     #145                // Field com/google/javascript/jscomp/CompilationLevel.ADVANCED_OPTIMIZATIONS:Lcom/google/javascript/jscomp/CompilationLevel;
      35: invokestatic  #147                // Method com/google/common/collect/ImmutableMap.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;
      38: putstatic     #90                 // Field COMPILATION_LEVEL_MAP:Ljava/util/Map;
      41: return
}
