Compiled from "DisambiguateProperties.java"
class com.google.javascript.jscomp.DisambiguateProperties$Property {
  final java.lang.String name;

  private com.google.javascript.jscomp.graph.UnionFind<T> types;

  java.util.Set<T> typesToSkip;

  boolean skipRenaming;

  java.util.Set<com.google.javascript.rhino.Node> renameNodes;

  final java.util.Map<com.google.javascript.rhino.Node, T> rootTypes;

  final com.google.javascript.jscomp.DisambiguateProperties this$0;

  com.google.javascript.jscomp.DisambiguateProperties$Property(com.google.javascript.jscomp.DisambiguateProperties, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/DisambiguateProperties;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #3                  // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
      13: putfield      #4                  // Field typesToSkip:Ljava/util/Set;
      16: aload_0
      17: invokestatic  #3                  // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
      20: putfield      #5                  // Field renameNodes:Ljava/util/Set;
      23: aload_0
      24: invokestatic  #6                  // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
      27: putfield      #7                  // Field rootTypes:Ljava/util/Map;
      30: aload_0
      31: aload_2
      32: putfield      #8                  // Field name:Ljava/lang/String;
      35: return

  com.google.javascript.jscomp.graph.UnionFind<T> getTypes();
    Code:
       0: aload_0
       1: getfield      #9                  // Field types:Lcom/google/javascript/jscomp/graph/UnionFind;
       4: ifnonnull     18
       7: aload_0
       8: new           #10                 // class com/google/javascript/jscomp/graph/StandardUnionFind
      11: dup
      12: invokespecial #11                 // Method com/google/javascript/jscomp/graph/StandardUnionFind."<init>":()V
      15: putfield      #9                  // Field types:Lcom/google/javascript/jscomp/graph/UnionFind;
      18: aload_0
      19: getfield      #9                  // Field types:Lcom/google/javascript/jscomp/graph/UnionFind;
      22: areturn

  boolean addType(T, T, T);
    Code:
       0: aload_0
       1: getfield      #12                 // Field skipRenaming:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #13                 // String Attempt to record skipped property: %s
      14: iconst_1
      15: anewarray     #14                 // class java/lang/Object
      18: dup
      19: iconst_0
      20: aload_0
      21: getfield      #8                  // Field name:Ljava/lang/String;
      24: aastore
      25: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      28: aload_0
      29: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/DisambiguateProperties;
      32: invokestatic  #16                 // Method com/google/javascript/jscomp/DisambiguateProperties.access$000:(Lcom/google/javascript/jscomp/DisambiguateProperties;)Lcom/google/javascript/jscomp/DisambiguateProperties$TypeSystem;
      35: aload_2
      36: invokeinterface #17,  2           // InterfaceMethod com/google/javascript/jscomp/DisambiguateProperties$TypeSystem.isInvalidatingType:(Ljava/lang/Object;)Z
      41: ifeq          51
      44: aload_0
      45: invokevirtual #18                 // Method invalidate:()Z
      48: pop
      49: iconst_0
      50: ireturn
      51: aload_0
      52: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/DisambiguateProperties;
      55: invokestatic  #16                 // Method com/google/javascript/jscomp/DisambiguateProperties.access$000:(Lcom/google/javascript/jscomp/DisambiguateProperties;)Lcom/google/javascript/jscomp/DisambiguateProperties$TypeSystem;
      58: aload_2
      59: invokeinterface #19,  2           // InterfaceMethod com/google/javascript/jscomp/DisambiguateProperties$TypeSystem.isTypeToSkip:(Ljava/lang/Object;)Z
      64: ifeq          72
      67: aload_0
      68: aload_2
      69: invokevirtual #20                 // Method addTypeToSkip:(Ljava/lang/Object;)V
      72: aload_3
      73: ifnonnull     89
      76: aload_0
      77: invokevirtual #21                 // Method getTypes:()Lcom/google/javascript/jscomp/graph/UnionFind;
      80: aload_2
      81: invokeinterface #22,  2           // InterfaceMethod com/google/javascript/jscomp/graph/UnionFind.add:(Ljava/lang/Object;)V
      86: goto          101
      89: aload_0
      90: invokevirtual #21                 // Method getTypes:()Lcom/google/javascript/jscomp/graph/UnionFind;
      93: aload_2
      94: aload_3
      95: invokeinterface #23,  3           // InterfaceMethod com/google/javascript/jscomp/graph/UnionFind.union:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     100: pop
     101: aload_0
     102: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/DisambiguateProperties;
     105: invokestatic  #16                 // Method com/google/javascript/jscomp/DisambiguateProperties.access$000:(Lcom/google/javascript/jscomp/DisambiguateProperties;)Lcom/google/javascript/jscomp/DisambiguateProperties$TypeSystem;
     108: aload_1
     109: aload_2
     110: aload_0
     111: invokeinterface #24,  4           // InterfaceMethod com/google/javascript/jscomp/DisambiguateProperties$TypeSystem.recordInterfaces:(Ljava/lang/Object;Ljava/lang/Object;Lcom/google/javascript/jscomp/DisambiguateProperties$Property;)V
     116: iconst_1
     117: ireturn

  void addTypeToSkip(T);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/DisambiguateProperties;
       4: invokestatic  #16                 // Method com/google/javascript/jscomp/DisambiguateProperties.access$000:(Lcom/google/javascript/jscomp/DisambiguateProperties;)Lcom/google/javascript/jscomp/DisambiguateProperties$TypeSystem;
       7: aload_1
       8: invokeinterface #25,  2           // InterfaceMethod com/google/javascript/jscomp/DisambiguateProperties$TypeSystem.getTypesToSkipForType:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      13: invokevirtual #26                 // Method com/google/common/collect/ImmutableSet.iterator:()Lcom/google/common/collect/UnmodifiableIterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          59
      26: aload_2
      27: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: astore_3
      33: aload_0
      34: getfield      #4                  // Field typesToSkip:Ljava/util/Set;
      37: aload_3
      38: invokeinterface #29,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      43: pop
      44: aload_0
      45: invokevirtual #21                 // Method getTypes:()Lcom/google/javascript/jscomp/graph/UnionFind;
      48: aload_3
      49: aload_1
      50: invokeinterface #23,  3           // InterfaceMethod com/google/javascript/jscomp/graph/UnionFind.union:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: goto          17
      59: return

  void expandTypesToSkip();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method shouldRename:()Z
       4: ifeq          253
       7: iconst_0
       8: istore_1
       9: iinc          1, 1
      12: iload_1
      13: bipush        10
      15: if_icmpge     22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ldc           #31                 // String Stuck in loop expanding types to skip.
      25: invokestatic  #32                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      28: invokestatic  #3                  // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
      31: astore_2
      32: aload_0
      33: getfield      #4                  // Field typesToSkip:Ljava/util/Set;
      36: invokeinterface #33,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      41: astore_3
      42: aload_3
      43: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          80
      51: aload_3
      52: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: astore        4
      59: aload_2
      60: aload_0
      61: getfield      #9                  // Field types:Lcom/google/javascript/jscomp/graph/UnionFind;
      64: aload         4
      66: invokeinterface #34,  2           // InterfaceMethod com/google/javascript/jscomp/graph/UnionFind.find:(Ljava/lang/Object;)Ljava/lang/Object;
      71: invokeinterface #29,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      76: pop
      77: goto          42
      80: aload_0
      81: getfield      #4                  // Field typesToSkip:Ljava/util/Set;
      84: aload_2
      85: invokeinterface #35,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      90: pop
      91: invokestatic  #3                  // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
      94: astore_3
      95: aload_0
      96: getfield      #9                  // Field types:Lcom/google/javascript/jscomp/graph/UnionFind;
      99: invokeinterface #36,  1           // InterfaceMethod com/google/javascript/jscomp/graph/UnionFind.elements:()Ljava/util/Set;
     104: astore        4
     106: aload         4
     108: invokeinterface #37,  1           // InterfaceMethod java/util/Set.size:()I
     113: istore        5
     115: aload         4
     117: invokeinterface #33,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     122: astore        6
     124: aload         6
     126: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     131: ifeq          192
     134: aload         6
     136: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     141: astore        7
     143: aload_0
     144: getfield      #4                  // Field typesToSkip:Ljava/util/Set;
     147: aload         7
     149: invokeinterface #38,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     154: ifne          189
     157: aload_0
     158: getfield      #4                  // Field typesToSkip:Ljava/util/Set;
     161: aload_0
     162: getfield      #9                  // Field types:Lcom/google/javascript/jscomp/graph/UnionFind;
     165: aload         7
     167: invokeinterface #34,  2           // InterfaceMethod com/google/javascript/jscomp/graph/UnionFind.find:(Ljava/lang/Object;)Ljava/lang/Object;
     172: invokeinterface #38,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     177: ifeq          189
     180: aload_3
     181: aload         7
     183: invokeinterface #29,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     188: pop
     189: goto          124
     192: aload_3
     193: invokeinterface #33,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     198: astore        6
     200: aload         6
     202: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     207: ifeq          228
     210: aload         6
     212: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     217: astore        7
     219: aload_0
     220: aload         7
     222: invokevirtual #20                 // Method addTypeToSkip:(Ljava/lang/Object;)V
     225: goto          200
     228: aload_0
     229: getfield      #9                  // Field types:Lcom/google/javascript/jscomp/graph/UnionFind;
     232: invokeinterface #36,  1           // InterfaceMethod com/google/javascript/jscomp/graph/UnionFind.elements:()Ljava/util/Set;
     237: invokeinterface #37,  1           // InterfaceMethod java/util/Set.size:()I
     242: iload         5
     244: if_icmpne     250
     247: goto          253
     250: goto          9
     253: return

  boolean shouldRename();
    Code:
       0: aload_0
       1: getfield      #12                 // Field skipRenaming:Z
       4: ifne          36
       7: aload_0
       8: getfield      #9                  // Field types:Lcom/google/javascript/jscomp/graph/UnionFind;
      11: ifnull        36
      14: aload_0
      15: getfield      #9                  // Field types:Lcom/google/javascript/jscomp/graph/UnionFind;
      18: invokeinterface #39,  1           // InterfaceMethod com/google/javascript/jscomp/graph/UnionFind.allEquivalenceClasses:()Ljava/util/Collection;
      23: invokeinterface #40,  1           // InterfaceMethod java/util/Collection.size:()I
      28: iconst_1
      29: if_icmple     36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  boolean shouldRename(T);
    Code:
       0: aload_0
       1: getfield      #12                 // Field skipRenaming:Z
       4: ifne          24
       7: aload_0
       8: getfield      #4                  // Field typesToSkip:Ljava/util/Set;
      11: aload_1
      12: invokeinterface #38,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  boolean invalidate();
    Code:
       0: aload_0
       1: getfield      #12                 // Field skipRenaming:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: istore_1
      13: aload_0
      14: iconst_1
      15: putfield      #12                 // Field skipRenaming:Z
      18: aload_0
      19: aconst_null
      20: putfield      #9                  // Field types:Lcom/google/javascript/jscomp/graph/UnionFind;
      23: iload_1
      24: ireturn

  boolean scheduleRenaming(com.google.javascript.rhino.Node, T);
    Code:
       0: aload_0
       1: getfield      #12                 // Field skipRenaming:Z
       4: ifne          53
       7: aload_0
       8: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/DisambiguateProperties;
      11: invokestatic  #16                 // Method com/google/javascript/jscomp/DisambiguateProperties.access$000:(Lcom/google/javascript/jscomp/DisambiguateProperties;)Lcom/google/javascript/jscomp/DisambiguateProperties$TypeSystem;
      14: aload_2
      15: invokeinterface #17,  2           // InterfaceMethod com/google/javascript/jscomp/DisambiguateProperties$TypeSystem.isInvalidatingType:(Ljava/lang/Object;)Z
      20: ifeq          30
      23: aload_0
      24: invokevirtual #18                 // Method invalidate:()Z
      27: pop
      28: iconst_0
      29: ireturn
      30: aload_0
      31: getfield      #5                  // Field renameNodes:Ljava/util/Set;
      34: aload_1
      35: invokeinterface #29,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      40: pop
      41: aload_0
      42: getfield      #7                  // Field rootTypes:Ljava/util/Map;
      45: aload_1
      46: aload_2
      47: invokeinterface #41,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      52: pop
      53: iconst_1
      54: ireturn
}
