Compiled from "RuntimeTypeCheck.java"
class com.google.javascript.jscomp.RuntimeTypeCheck implements com.google.javascript.jscomp.CompilerPass {
  private static final java.util.Comparator<com.google.javascript.rhino.jstype.JSType> ALPHA;

  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  private final java.lang.String logFunction;

  com.google.javascript.jscomp.RuntimeTypeCheck(com.google.javascript.jscomp.AbstractCompiler, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       9: aload_0
      10: aload_2
      11: putfield      #5                  // Field logFunction:Ljava/lang/String;
      14: return

  public void process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: aload_2
       5: new           #6                  // class com/google/javascript/jscomp/RuntimeTypeCheck$AddMarkers
       8: dup
       9: aload_0
      10: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      13: aconst_null
      14: invokespecial #7                  // Method com/google/javascript/jscomp/RuntimeTypeCheck$AddMarkers."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/RuntimeTypeCheck$1;)V
      17: invokestatic  #8                  // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      20: aload_0
      21: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      24: aload_2
      25: new           #9                  // class com/google/javascript/jscomp/RuntimeTypeCheck$AddChecks
      28: dup
      29: aload_0
      30: aconst_null
      31: invokespecial #10                 // Method com/google/javascript/jscomp/RuntimeTypeCheck$AddChecks."<init>":(Lcom/google/javascript/jscomp/RuntimeTypeCheck;Lcom/google/javascript/jscomp/RuntimeTypeCheck$1;)V
      34: invokestatic  #8                  // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      37: aload_0
      38: invokespecial #11                 // Method addBoilerplateCode:()V
      41: new           #12                 // class com/google/javascript/jscomp/Normalize
      44: dup
      45: aload_0
      46: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      49: iconst_0
      50: invokespecial #13                 // Method com/google/javascript/jscomp/Normalize."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Z)V
      53: aload_1
      54: aload_2
      55: invokevirtual #14                 // Method com/google/javascript/jscomp/Normalize.process:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      58: return

  private void addBoilerplateCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: ldc           #15                 // String runtime_type_check
       6: iconst_1
       7: invokevirtual #16                 // Method com/google/javascript/jscomp/AbstractCompiler.ensureLibraryInjected:(Ljava/lang/String;Z)Lcom/google/javascript/rhino/Node;
      10: astore_1
      11: aload_1
      12: ifnull        65
      15: aload_0
      16: getfield      #5                  // Field logFunction:Ljava/lang/String;
      19: ifnull        65
      22: aload_0
      23: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      26: ldc           #17                 // String $jscomp.typecheck.log
      28: invokestatic  #18                 // Method com/google/javascript/jscomp/NodeUtil.newQName:(Lcom/google/javascript/jscomp/AbstractCompiler;Ljava/lang/String;)Lcom/google/javascript/rhino/Node;
      31: aload_0
      32: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      35: aload_0
      36: getfield      #5                  // Field logFunction:Ljava/lang/String;
      39: invokestatic  #18                 // Method com/google/javascript/jscomp/NodeUtil.newQName:(Lcom/google/javascript/jscomp/AbstractCompiler;Ljava/lang/String;)Lcom/google/javascript/rhino/Node;
      42: invokestatic  #19                 // Method com/google/javascript/rhino/IR.assign:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      45: invokestatic  #20                 // Method com/google/javascript/rhino/IR.exprResult:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      48: astore_2
      49: aload_1
      50: invokevirtual #21                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      53: aload_2
      54: aload_1
      55: invokevirtual #22                 // Method com/google/javascript/rhino/Node.addChildAfter:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      58: aload_0
      59: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      62: invokevirtual #23                 // Method com/google/javascript/jscomp/AbstractCompiler.reportCodeChange:()V
      65: return

  private com.google.javascript.rhino.Node jsCode(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: new           #24                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #26                 // String $jscomp.typecheck.
      13: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: invokestatic  #18                 // Method com/google/javascript/jscomp/NodeUtil.newQName:(Lcom/google/javascript/jscomp/AbstractCompiler;Ljava/lang/String;)Lcom/google/javascript/rhino/Node;
      26: areturn

  static java.util.Comparator access$200();
    Code:
       0: getstatic     #3                  // Field ALPHA:Ljava/util/Comparator;
       3: areturn

  static com.google.javascript.jscomp.AbstractCompiler access$300(com.google.javascript.jscomp.RuntimeTypeCheck);
    Code:
       0: aload_0
       1: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: areturn

  static com.google.javascript.rhino.Node access$400(com.google.javascript.jscomp.RuntimeTypeCheck, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method jsCode:(Ljava/lang/String;)Lcom/google/javascript/rhino/Node;
       5: areturn

  static {};
    Code:
       0: new           #29                 // class com/google/javascript/jscomp/RuntimeTypeCheck$1
       3: dup
       4: invokespecial #30                 // Method com/google/javascript/jscomp/RuntimeTypeCheck$1."<init>":()V
       7: putstatic     #3                  // Field ALPHA:Ljava/util/Comparator;
      10: return
}
