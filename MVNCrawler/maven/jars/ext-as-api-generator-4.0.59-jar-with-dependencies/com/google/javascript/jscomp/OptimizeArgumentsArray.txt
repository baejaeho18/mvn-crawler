Compiled from "OptimizeArgumentsArray.java"
class com.google.javascript.jscomp.OptimizeArgumentsArray implements com.google.javascript.jscomp.CompilerPass,com.google.javascript.jscomp.NodeTraversal$ScopedCallback {
  private static final java.lang.String ARGUMENTS;

  private static final java.lang.String PARAMETER_PREFIX;

  private final java.lang.String paramPredix;

  private int uniqueId;

  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  private final java.util.Deque<java.util.List<com.google.javascript.rhino.Node>> argumentsAccessStack;

  private java.util.List<com.google.javascript.rhino.Node> currentArgumentsAccess;

  com.google.javascript.jscomp.OptimizeArgumentsArray(com.google.javascript.jscomp.AbstractCompiler);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #2                  // String JSCompiler_OptimizeArgumentsArray_p
       4: invokespecial #3                  // Method "<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Ljava/lang/String;)V
       7: return

  com.google.javascript.jscomp.OptimizeArgumentsArray(com.google.javascript.jscomp.AbstractCompiler, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #5                  // Field uniqueId:I
       9: aload_0
      10: new           #6                  // class java/util/ArrayDeque
      13: dup
      14: invokespecial #7                  // Method java/util/ArrayDeque."<init>":()V
      17: putfield      #8                  // Field argumentsAccessStack:Ljava/util/Deque;
      20: aload_0
      21: aconst_null
      22: putfield      #9                  // Field currentArgumentsAccess:Ljava/util/List;
      25: aload_0
      26: aload_1
      27: invokestatic  #10                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #11                 // class com/google/javascript/jscomp/AbstractCompiler
      33: putfield      #12                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      36: aload_0
      37: aload_2
      38: invokestatic  #10                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #13                 // class java/lang/String
      44: putfield      #14                 // Field paramPredix:Ljava/lang/String;
      47: return

  public void process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #12                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: aload_2
       5: invokestatic  #10                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #15                 // class com/google/javascript/rhino/Node
      11: aload_0
      12: invokestatic  #16                 // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      15: return

  public void enterScope(com.google.javascript.jscomp.NodeTraversal);
    Code:
       0: aload_1
       1: invokestatic  #10                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokevirtual #17                 // Method com/google/javascript/jscomp/NodeTraversal.getScopeRoot:()Lcom/google/javascript/rhino/Node;
       9: astore_2
      10: aload_2
      11: invokevirtual #18                 // Method com/google/javascript/rhino/Node.isFunction:()Z
      14: ifne          18
      17: return
      18: aload_0
      19: getfield      #9                  // Field currentArgumentsAccess:Ljava/util/List;
      22: ifnull        38
      25: aload_0
      26: getfield      #8                  // Field argumentsAccessStack:Ljava/util/Deque;
      29: aload_0
      30: getfield      #9                  // Field currentArgumentsAccess:Ljava/util/List;
      33: invokeinterface #19,  2           // InterfaceMethod java/util/Deque.push:(Ljava/lang/Object;)V
      38: aload_0
      39: invokestatic  #20                 // Method com/google/common/collect/Lists.newLinkedList:()Ljava/util/LinkedList;
      42: putfield      #9                  // Field currentArgumentsAccess:Ljava/util/List;
      45: return

  public void exitScope(com.google.javascript.jscomp.NodeTraversal);
    Code:
       0: aload_1
       1: invokestatic  #10                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #9                  // Field currentArgumentsAccess:Ljava/util/List;
       9: ifnonnull     13
      12: return
      13: aload_0
      14: aload_1
      15: invokevirtual #21                 // Method com/google/javascript/jscomp/NodeTraversal.getScope:()Lcom/google/javascript/jscomp/Scope;
      18: invokespecial #22                 // Method tryReplaceArguments:(Lcom/google/javascript/jscomp/Scope;)Z
      21: ifeq          31
      24: aload_1
      25: invokevirtual #23                 // Method com/google/javascript/jscomp/NodeTraversal.getCompiler:()Lcom/google/javascript/jscomp/AbstractCompiler;
      28: invokevirtual #24                 // Method com/google/javascript/jscomp/AbstractCompiler.reportCodeChange:()V
      31: aload_0
      32: getfield      #8                  // Field argumentsAccessStack:Ljava/util/Deque;
      35: invokeinterface #25,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      40: ifne          62
      43: aload_0
      44: aload_0
      45: getfield      #8                  // Field argumentsAccessStack:Ljava/util/Deque;
      48: invokeinterface #26,  1           // InterfaceMethod java/util/Deque.pop:()Ljava/lang/Object;
      53: checkcast     #27                 // class java/util/List
      56: putfield      #9                  // Field currentArgumentsAccess:Ljava/util/List;
      59: goto          67
      62: aload_0
      63: aconst_null
      64: putfield      #9                  // Field currentArgumentsAccess:Ljava/util/List;
      67: return

  public boolean shouldTraverse(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: iconst_1
       1: ireturn

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokestatic  #10                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #10                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: getfield      #9                  // Field currentArgumentsAccess:Ljava/util/List;
      14: ifnonnull     18
      17: return
      18: aload_2
      19: invokevirtual #28                 // Method com/google/javascript/rhino/Node.isName:()Z
      22: ifeq          48
      25: ldc           #29                 // String arguments
      27: aload_2
      28: invokevirtual #30                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      31: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      34: ifeq          48
      37: aload_0
      38: getfield      #9                  // Field currentArgumentsAccess:Ljava/util/List;
      41: aload_2
      42: invokeinterface #32,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      47: pop
      48: return

  private boolean tryReplaceArguments(com.google.javascript.jscomp.Scope);
    Code:
       0: aload_1
       1: invokevirtual #33                 // Method com/google/javascript/jscomp/Scope.getRootNode:()Lcom/google/javascript/rhino/Node;
       4: invokevirtual #34                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
       7: invokevirtual #35                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      10: astore_2
      11: aload_2
      12: invokevirtual #36                 // Method com/google/javascript/rhino/Node.isParamList:()Z
      15: invokestatic  #37                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      18: iconst_0
      19: istore_3
      20: aload_2
      21: invokevirtual #38                 // Method com/google/javascript/rhino/Node.getChildCount:()I
      24: istore        4
      26: iload         4
      28: iconst_1
      29: isub
      30: istore        5
      32: aload_0
      33: getfield      #9                  // Field currentArgumentsAccess:Ljava/util/List;
      36: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      41: astore        6
      43: aload         6
      45: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifeq          158
      53: aload         6
      55: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      60: checkcast     #15                 // class com/google/javascript/rhino/Node
      63: astore        7
      65: aload         7
      67: invokevirtual #42                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      70: astore        8
      72: aload         8
      74: invokevirtual #43                 // Method com/google/javascript/rhino/Node.isGetElem:()Z
      77: ifeq          90
      80: aload         7
      82: aload         8
      84: invokevirtual #34                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      87: if_acmpeq     92
      90: iconst_0
      91: ireturn
      92: aload         7
      94: invokevirtual #35                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      97: astore        9
      99: aload         9
     101: invokevirtual #44                 // Method com/google/javascript/rhino/Node.isNumber:()Z
     104: ifne          109
     107: iconst_0
     108: ireturn
     109: aload         8
     111: invokevirtual #42                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
     114: astore        10
     116: aload         10
     118: invokevirtual #45                 // Method com/google/javascript/rhino/Node.isCall:()Z
     121: ifeq          136
     124: aload         10
     126: invokevirtual #34                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     129: aload         8
     131: if_acmpne     136
     134: iconst_0
     135: ireturn
     136: aload         9
     138: invokevirtual #46                 // Method com/google/javascript/rhino/Node.getDouble:()D
     141: d2i
     142: istore        11
     144: iload         11
     146: iload         5
     148: if_icmple     155
     151: iload         11
     153: istore        5
     155: goto          43
     158: iload         5
     160: iload         4
     162: isub
     163: iconst_1
     164: iadd
     165: istore        6
     167: iload         6
     169: anewarray     #13                 // class java/lang/String
     172: astore        7
     174: iconst_0
     175: istore        8
     177: iload         8
     179: iload         6
     181: if_icmpge     214
     184: aload_0
     185: invokespecial #47                 // Method getNewName:()Ljava/lang/String;
     188: astore        9
     190: aload         7
     192: iload         8
     194: aload         9
     196: aastore
     197: aload_2
     198: aload         9
     200: invokestatic  #48                 // Method com/google/javascript/rhino/IR.name:(Ljava/lang/String;)Lcom/google/javascript/rhino/Node;
     203: invokevirtual #49                 // Method com/google/javascript/rhino/Node.addChildrenToBack:(Lcom/google/javascript/rhino/Node;)V
     206: iconst_1
     207: istore_3
     208: iinc          8, 1
     211: goto          177
     214: aload_0
     215: getfield      #9                  // Field currentArgumentsAccess:Ljava/util/List;
     218: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     223: astore        8
     225: aload         8
     227: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     232: ifeq          368
     235: aload         8
     237: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     242: checkcast     #15                 // class com/google/javascript/rhino/Node
     245: astore        9
     247: aload         9
     249: invokevirtual #35                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
     252: astore        10
     254: aload         10
     256: invokevirtual #44                 // Method com/google/javascript/rhino/Node.isNumber:()Z
     259: ifne          265
     262: goto          225
     265: aload         10
     267: invokevirtual #46                 // Method com/google/javascript/rhino/Node.getDouble:()D
     270: d2i
     271: istore        11
     273: iload         11
     275: iload         4
     277: if_icmplt     310
     280: aload         9
     282: invokevirtual #42                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
     285: invokevirtual #42                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
     288: aload         9
     290: invokevirtual #42                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
     293: aload         7
     295: iload         11
     297: iload         4
     299: isub
     300: aaload
     301: invokestatic  #48                 // Method com/google/javascript/rhino/IR.name:(Ljava/lang/String;)Lcom/google/javascript/rhino/Node;
     304: invokevirtual #50                 // Method com/google/javascript/rhino/Node.replaceChild:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
     307: goto          363
     310: aload_2
     311: invokevirtual #34                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     314: astore        12
     316: iconst_0
     317: istore        13
     319: iload         13
     321: iload         11
     323: if_icmpge     339
     326: aload         12
     328: invokevirtual #35                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
     331: astore        12
     333: iinc          13, 1
     336: goto          319
     339: aload         9
     341: invokevirtual #42                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
     344: invokevirtual #42                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
     347: aload         9
     349: invokevirtual #42                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
     352: aload         12
     354: invokevirtual #30                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
     357: invokestatic  #48                 // Method com/google/javascript/rhino/IR.name:(Ljava/lang/String;)Lcom/google/javascript/rhino/Node;
     360: invokevirtual #50                 // Method com/google/javascript/rhino/Node.replaceChild:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
     363: iconst_1
     364: istore_3
     365: goto          225
     368: iload_3
     369: ireturn

  private java.lang.String getNewName();
    Code:
       0: new           #51                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #14                 // Field paramPredix:Ljava/lang/String;
      11: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: dup
      16: getfield      #5                  // Field uniqueId:I
      19: dup_x1
      20: iconst_1
      21: iadd
      22: putfield      #5                  // Field uniqueId:I
      25: invokevirtual #54                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: areturn
}
