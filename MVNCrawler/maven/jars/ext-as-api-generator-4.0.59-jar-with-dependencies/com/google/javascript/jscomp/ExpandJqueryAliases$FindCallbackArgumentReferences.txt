Compiled from "ExpandJqueryAliases.java"
class com.google.javascript.jscomp.ExpandJqueryAliases$FindCallbackArgumentReferences extends com.google.javascript.jscomp.NodeTraversal$AbstractPostOrderCallback implements com.google.javascript.jscomp.NodeTraversal$ScopedCallback {
  private final java.lang.String keyName;

  private final java.lang.String valueName;

  private com.google.javascript.jscomp.Scope startingScope;

  private java.util.List<com.google.javascript.rhino.Node> keyReferences;

  private java.util.List<com.google.javascript.rhino.Node> valueReferences;

  com.google.javascript.jscomp.ExpandJqueryAliases$FindCallbackArgumentReferences(com.google.javascript.rhino.Node, java.util.List<com.google.javascript.rhino.Node>, java.util.List<com.google.javascript.rhino.Node>, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/javascript/jscomp/NodeTraversal$AbstractPostOrderCallback."<init>":()V
       4: aload_1
       5: invokevirtual #2                  // Method com/google/javascript/rhino/Node.isFunction:()Z
       8: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkState:(Z)V
      11: aconst_null
      12: astore        5
      14: aconst_null
      15: astore        6
      17: aload_1
      18: invokestatic  #4                  // Method com/google/javascript/jscomp/NodeUtil.getFunctionParameters:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      21: astore        7
      23: aload         7
      25: invokevirtual #5                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      28: astore        8
      30: aload         8
      32: ifnull        77
      35: aload         8
      37: invokevirtual #6                  // Method com/google/javascript/rhino/Node.isName:()Z
      40: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkState:(Z)V
      43: aload         8
      45: invokevirtual #7                  // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      48: astore        5
      50: aload         8
      52: invokevirtual #8                  // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      55: astore        8
      57: aload         8
      59: ifnull        77
      62: aload         8
      64: invokevirtual #6                  // Method com/google/javascript/rhino/Node.isName:()Z
      67: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkState:(Z)V
      70: aload         8
      72: invokevirtual #7                  // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      75: astore        6
      77: aload_0
      78: aload         5
      80: putfield      #9                  // Field keyName:Ljava/lang/String;
      83: aload_0
      84: aload         6
      86: putfield      #10                 // Field valueName:Ljava/lang/String;
      89: iload         4
      91: ifeq          107
      94: aload_0
      95: aload_3
      96: putfield      #11                 // Field keyReferences:Ljava/util/List;
      99: aload_0
     100: aload_2
     101: putfield      #12                 // Field valueReferences:Ljava/util/List;
     104: goto          117
     107: aload_0
     108: aload_2
     109: putfield      #11                 // Field keyReferences:Ljava/util/List;
     112: aload_0
     113: aload_3
     114: putfield      #12                 // Field valueReferences:Ljava/util/List;
     117: aload_0
     118: aconst_null
     119: putfield      #13                 // Field startingScope:Lcom/google/javascript/jscomp/Scope;
     122: return

  private boolean isShadowed(java.lang.String, com.google.javascript.jscomp.Scope);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #14                 // Method com/google/javascript/jscomp/Scope.getVar:(Ljava/lang/String;)Lcom/google/javascript/jscomp/Scope$Var;
       5: astore_3
       6: aload_3
       7: ifnull        25
      10: aload_3
      11: invokevirtual #15                 // Method com/google/javascript/jscomp/Scope$Var.getScope:()Lcom/google/javascript/jscomp/Scope;
      14: aload_0
      15: getfield      #13                 // Field startingScope:Lcom/google/javascript/jscomp/Scope;
      18: if_acmpeq     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: iconst_0
       1: istore        4
       3: aload_1
       4: invokevirtual #16                 // Method com/google/javascript/jscomp/NodeTraversal.getScope:()Lcom/google/javascript/jscomp/Scope;
       7: aload_0
       8: getfield      #13                 // Field startingScope:Lcom/google/javascript/jscomp/Scope;
      11: if_acmpne     20
      14: aload_2
      15: invokevirtual #17                 // Method com/google/javascript/rhino/Node.isThis:()Z
      18: istore        4
      20: iload         4
      22: ifne          47
      25: aload_2
      26: invokevirtual #6                  // Method com/google/javascript/rhino/Node.isName:()Z
      29: ifeq          135
      32: aload_0
      33: aload_2
      34: invokevirtual #7                  // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      37: aload_1
      38: invokevirtual #16                 // Method com/google/javascript/jscomp/NodeTraversal.getScope:()Lcom/google/javascript/jscomp/Scope;
      41: invokespecial #18                 // Method isShadowed:(Ljava/lang/String;Lcom/google/javascript/jscomp/Scope;)Z
      44: ifne          135
      47: iload         4
      49: ifeq          56
      52: aconst_null
      53: goto          60
      56: aload_2
      57: invokevirtual #7                  // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      60: astore        5
      62: iload         4
      64: ifne          100
      67: aload_0
      68: getfield      #9                  // Field keyName:Ljava/lang/String;
      71: ifnull        100
      74: aload         5
      76: aload_0
      77: getfield      #9                  // Field keyName:Ljava/lang/String;
      80: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      83: ifeq          100
      86: aload_0
      87: getfield      #11                 // Field keyReferences:Ljava/util/List;
      90: aload_2
      91: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      96: pop
      97: goto          135
     100: iload         4
     102: ifne          124
     105: aload_0
     106: getfield      #10                 // Field valueName:Ljava/lang/String;
     109: ifnull        135
     112: aload         5
     114: aload_0
     115: getfield      #10                 // Field valueName:Ljava/lang/String;
     118: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     121: ifeq          135
     124: aload_0
     125: getfield      #12                 // Field valueReferences:Ljava/util/List;
     128: aload_2
     129: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     134: pop
     135: return

  public void enterScope(com.google.javascript.jscomp.NodeTraversal);
    Code:
       0: aload_0
       1: getfield      #13                 // Field startingScope:Lcom/google/javascript/jscomp/Scope;
       4: ifnonnull     15
       7: aload_0
       8: aload_1
       9: invokevirtual #16                 // Method com/google/javascript/jscomp/NodeTraversal.getScope:()Lcom/google/javascript/jscomp/Scope;
      12: putfield      #13                 // Field startingScope:Lcom/google/javascript/jscomp/Scope;
      15: return

  public void exitScope(com.google.javascript.jscomp.NodeTraversal);
    Code:
       0: return
}
