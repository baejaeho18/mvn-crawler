Compiled from "CleanupPasses.java"
class com.google.javascript.jscomp.CleanupPasses$MemoizedScopeCleanupPass implements com.google.javascript.jscomp.HotSwapCompilerPass {
  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  public com.google.javascript.jscomp.CleanupPasses$MemoizedScopeCleanupPass(com.google.javascript.jscomp.AbstractCompiler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       9: return

  public void hotSwapScript(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: invokevirtual #3                  // Method com/google/javascript/jscomp/AbstractCompiler.getTypedScopeCreator:()Lcom/google/javascript/jscomp/ScopeCreator;
       7: astore_3
       8: aload_3
       9: instanceof    #4                  // class com/google/javascript/jscomp/MemoizedScopeCreator
      12: ifeq          125
      15: aload_3
      16: checkcast     #4                  // class com/google/javascript/jscomp/MemoizedScopeCreator
      19: astore        4
      21: aload_1
      22: invokevirtual #5                  // Method com/google/javascript/rhino/Node.getSourceFileName:()Ljava/lang/String;
      25: astore        5
      27: aload         4
      29: invokevirtual #6                  // Method com/google/javascript/jscomp/MemoizedScopeCreator.getAllSymbols:()Ljava/lang/Iterable;
      32: invokeinterface #7,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      37: astore        6
      39: aload         6
      41: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          116
      49: aload         6
      51: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #10                 // class com/google/javascript/jscomp/Scope$Var
      59: astore        7
      61: aload         7
      63: invokevirtual #11                 // Method com/google/javascript/jscomp/Scope$Var.getType:()Lcom/google/javascript/rhino/jstype/JSType;
      66: astore        8
      68: aload         8
      70: ifnull        113
      73: aload         8
      75: invokeinterface #12,  1           // InterfaceMethod com/google/javascript/rhino/TypeI.toMaybeFunctionType:()Lcom/google/javascript/rhino/FunctionTypeI;
      80: astore        9
      82: aload         9
      84: ifnull        113
      87: aload         5
      89: aload         9
      91: invokeinterface #13,  1           // InterfaceMethod com/google/javascript/rhino/FunctionTypeI.getSource:()Lcom/google/javascript/rhino/Node;
      96: invokestatic  #14                 // Method com/google/javascript/jscomp/NodeUtil.getSourceName:(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;
      99: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     102: ifeq          113
     105: aload         9
     107: aconst_null
     108: invokeinterface #16,  2           // InterfaceMethod com/google/javascript/rhino/FunctionTypeI.setSource:(Lcom/google/javascript/rhino/Node;)V
     113: goto          39
     116: aload         4
     118: aload_2
     119: invokevirtual #5                  // Method com/google/javascript/rhino/Node.getSourceFileName:()Ljava/lang/String;
     122: invokevirtual #17                 // Method com/google/javascript/jscomp/MemoizedScopeCreator.removeScopesForScript:(Ljava/lang/String;)V
     125: return

  public void process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: return
}
