Compiled from "ChainCalls.java"
class com.google.javascript.jscomp.ChainCalls$GatherFunctions implements com.google.javascript.jscomp.NodeTraversal$ScopedCallback {
  final com.google.javascript.jscomp.ChainCalls this$0;

  private com.google.javascript.jscomp.ChainCalls$GatherFunctions(com.google.javascript.jscomp.ChainCalls);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/ChainCalls;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: return

  public void enterScope(com.google.javascript.jscomp.NodeTraversal);
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method com/google/javascript/jscomp/NodeTraversal.getControlFlowGraph:()Lcom/google/javascript/jscomp/ControlFlowGraph;
       4: astore_2
       5: aload_2
       6: invokevirtual #5                  // Method com/google/javascript/jscomp/ControlFlowGraph.getImplicitReturn:()Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;
       9: invokeinterface #6,  1            // InterfaceMethod com/google/javascript/jscomp/graph/DiGraph$DiGraphNode.getInEdges:()Ljava/util/List;
      14: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          105
      29: aload_3
      30: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #10                 // class com/google/javascript/jscomp/graph/DiGraph$DiGraphEdge
      38: astore        4
      40: aload         4
      42: invokeinterface #11,  1           // InterfaceMethod com/google/javascript/jscomp/graph/DiGraph$DiGraphEdge.getSource:()Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;
      47: invokeinterface #12,  1           // InterfaceMethod com/google/javascript/jscomp/graph/DiGraph$DiGraphNode.getValue:()Ljava/lang/Object;
      52: checkcast     #13                 // class com/google/javascript/rhino/Node
      55: astore        5
      57: aload         5
      59: invokevirtual #14                 // Method com/google/javascript/rhino/Node.isReturn:()Z
      62: ifeq          84
      65: aload         5
      67: invokevirtual #15                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      70: ifnull        84
      73: aload         5
      75: invokevirtual #15                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      78: invokevirtual #16                 // Method com/google/javascript/rhino/Node.isThis:()Z
      81: ifne          102
      84: aload_0
      85: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/ChainCalls;
      88: invokestatic  #17                 // Method com/google/javascript/jscomp/ChainCalls.access$200:(Lcom/google/javascript/jscomp/ChainCalls;)Ljava/util/Set;
      91: aload_1
      92: invokevirtual #18                 // Method com/google/javascript/jscomp/NodeTraversal.getScopeRoot:()Lcom/google/javascript/rhino/Node;
      95: invokeinterface #19,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     100: pop
     101: return
     102: goto          20
     105: aload_0
     106: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/ChainCalls;
     109: invokestatic  #20                 // Method com/google/javascript/jscomp/ChainCalls.access$300:(Lcom/google/javascript/jscomp/ChainCalls;)Ljava/util/Set;
     112: aload_1
     113: invokevirtual #18                 // Method com/google/javascript/jscomp/NodeTraversal.getScopeRoot:()Lcom/google/javascript/rhino/Node;
     116: invokeinterface #19,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     121: pop
     122: return

  public void exitScope(com.google.javascript.jscomp.NodeTraversal);
    Code:
       0: return

  public boolean shouldTraverse(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: iconst_1
       1: ireturn

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: return

  com.google.javascript.jscomp.ChainCalls$GatherFunctions(com.google.javascript.jscomp.ChainCalls, com.google.javascript.jscomp.ChainCalls$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lcom/google/javascript/jscomp/ChainCalls;)V
       5: return
}
