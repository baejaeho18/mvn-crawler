Compiled from "Tracer.java"
final class com.google.javascript.jscomp.Tracer$AtomicTracerStatMap {
  private final java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.Long> map;

  com.google.javascript.jscomp.Tracer$AtomicTracerStatMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      15: return

  void incrementBy(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #6                  // class java/lang/Long
      13: astore        4
      15: aload         4
      17: ifnonnull     45
      20: aload_0
      21: getfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      24: aload_1
      25: lload_2
      26: invokestatic  #7                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      29: invokeinterface #8,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #6                  // class java/lang/Long
      37: astore        4
      39: aload         4
      41: ifnonnull     45
      44: return
      45: aload_0
      46: getfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      49: aload_1
      50: aload         4
      52: aload         4
      54: invokevirtual #9                  // Method java/lang/Long.longValue:()J
      57: lload_2
      58: ladd
      59: invokestatic  #7                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      62: invokeinterface #10,  4           // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      67: ifeq          73
      70: goto          91
      73: aload_0
      74: getfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentMap;
      77: aload_1
      78: invokeinterface #5,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      83: checkcast     #6                  // class java/lang/Long
      86: astore        4
      88: goto          45
      91: return

  java.util.Map<java.lang.String, java.lang.Long> getMap();
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentMap;
       4: areturn
}
