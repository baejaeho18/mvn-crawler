Compiled from "CoalesceVariableNames.java"
class com.google.javascript.jscomp.CoalesceVariableNames extends com.google.javascript.jscomp.NodeTraversal$AbstractPostOrderCallback implements com.google.javascript.jscomp.CompilerPass,com.google.javascript.jscomp.NodeTraversal$ScopedCallback {
  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  private final java.util.Deque<com.google.javascript.jscomp.graph.GraphColoring<com.google.javascript.jscomp.Scope$Var, java.lang.Void>> colorings;

  private final boolean usePseudoNames;

  private static final java.util.Comparator<com.google.javascript.jscomp.Scope$Var> coloringTieBreaker;

  com.google.javascript.jscomp.CoalesceVariableNames(com.google.javascript.jscomp.AbstractCompiler, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/javascript/jscomp/NodeTraversal$AbstractPostOrderCallback."<init>":()V
       4: aload_1
       5: invokevirtual #2                  // Method com/google/javascript/jscomp/AbstractCompiler.getLifeCycleStage:()Lcom/google/javascript/jscomp/AbstractCompiler$LifeCycleStage;
       8: invokevirtual #3                  // Method com/google/javascript/jscomp/AbstractCompiler$LifeCycleStage.isNormalized:()Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkState:(Z)V
      22: aload_0
      23: aload_1
      24: putfield      #5                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      27: aload_0
      28: invokestatic  #6                  // Method com/google/common/collect/Lists.newLinkedList:()Ljava/util/LinkedList;
      31: putfield      #7                  // Field colorings:Ljava/util/Deque;
      34: aload_0
      35: iload_2
      36: putfield      #8                  // Field usePseudoNames:Z
      39: return

  public void process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #5                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: aload_2
       5: aload_0
       6: invokestatic  #9                  // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
       9: return

  private static boolean shouldOptimizeScope(com.google.javascript.jscomp.Scope);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method com/google/javascript/jscomp/Scope.isGlobal:()Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: bipush        100
      11: aload_0
      12: invokevirtual #12                 // Method com/google/javascript/jscomp/Scope.getVarCount:()I
      15: if_icmplt     22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public void enterScope(com.google.javascript.jscomp.NodeTraversal);
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method com/google/javascript/jscomp/NodeTraversal.getScope:()Lcom/google/javascript/jscomp/Scope;
       4: astore_2
       5: aload_2
       6: invokestatic  #14                 // Method shouldOptimizeScope:(Lcom/google/javascript/jscomp/Scope;)Z
       9: ifne          13
      12: return
      13: aload_1
      14: invokevirtual #15                 // Method com/google/javascript/jscomp/NodeTraversal.getControlFlowGraph:()Lcom/google/javascript/jscomp/ControlFlowGraph;
      17: astore_3
      18: new           #11                 // class com/google/javascript/jscomp/LiveVariablesAnalysis
      21: dup
      22: aload_3
      23: aload_2
      24: aload_0
      25: getfield      #5                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      28: invokespecial #16                 // Method com/google/javascript/jscomp/LiveVariablesAnalysis."<init>":(Lcom/google/javascript/jscomp/ControlFlowGraph;Lcom/google/javascript/jscomp/Scope;Lcom/google/javascript/jscomp/AbstractCompiler;)V
      31: astore        4
      33: aload_2
      34: invokevirtual #17                 // Method com/google/javascript/jscomp/Scope.getRootNode:()Lcom/google/javascript/rhino/Node;
      37: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      40: invokevirtual #19                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      43: invokevirtual #20                 // Method com/google/javascript/rhino/Node.getChildCount:()I
      46: iconst_2
      47: if_icmpne     55
      50: aload         4
      52: invokevirtual #21                 // Method com/google/javascript/jscomp/LiveVariablesAnalysis.markAllParametersEscaped:()V
      55: aload         4
      57: invokevirtual #22                 // Method com/google/javascript/jscomp/LiveVariablesAnalysis.analyze:()V
      60: aload_0
      61: aload_1
      62: aload_3
      63: aload         4
      65: invokevirtual #23                 // Method com/google/javascript/jscomp/LiveVariablesAnalysis.getEscapedLocals:()Ljava/util/Set;
      68: invokespecial #24                 // Method computeVariableNamesInterferenceGraph:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/jscomp/ControlFlowGraph;Ljava/util/Set;)Lcom/google/javascript/jscomp/graph/UndiGraph;
      71: astore        5
      73: new           #25                 // class com/google/javascript/jscomp/graph/GraphColoring$GreedyGraphColoring
      76: dup
      77: aload         5
      79: getstatic     #26                 // Field coloringTieBreaker:Ljava/util/Comparator;
      82: invokespecial #27                 // Method com/google/javascript/jscomp/graph/GraphColoring$GreedyGraphColoring."<init>":(Lcom/google/javascript/jscomp/graph/AdjacencyGraph;Ljava/util/Comparator;)V
      85: astore        6
      87: aload         6
      89: invokevirtual #28                 // Method com/google/javascript/jscomp/graph/GraphColoring.color:()I
      92: pop
      93: aload_0
      94: getfield      #7                  // Field colorings:Ljava/util/Deque;
      97: aload         6
      99: invokeinterface #29,  2           // InterfaceMethod java/util/Deque.push:(Ljava/lang/Object;)V
     104: return

  public void exitScope(com.google.javascript.jscomp.NodeTraversal);
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method com/google/javascript/jscomp/NodeTraversal.getScope:()Lcom/google/javascript/jscomp/Scope;
       4: invokestatic  #14                 // Method shouldOptimizeScope:(Lcom/google/javascript/jscomp/Scope;)Z
       7: ifne          11
      10: return
      11: aload_0
      12: getfield      #7                  // Field colorings:Ljava/util/Deque;
      15: invokeinterface #30,  1           // InterfaceMethod java/util/Deque.pop:()Ljava/lang/Object;
      20: pop
      21: return

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #7                  // Field colorings:Ljava/util/Deque;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
       9: ifne          26
      12: aload_2
      13: invokevirtual #32                 // Method com/google/javascript/rhino/Node.isName:()Z
      16: ifeq          26
      19: aload_3
      20: invokevirtual #33                 // Method com/google/javascript/rhino/Node.isFunction:()Z
      23: ifeq          27
      26: return
      27: aload_1
      28: invokevirtual #13                 // Method com/google/javascript/jscomp/NodeTraversal.getScope:()Lcom/google/javascript/jscomp/Scope;
      31: aload_2
      32: invokevirtual #34                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      35: invokevirtual #35                 // Method com/google/javascript/jscomp/Scope.getVar:(Ljava/lang/String;)Lcom/google/javascript/jscomp/Scope$Var;
      38: astore        4
      40: aload_0
      41: getfield      #7                  // Field colorings:Ljava/util/Deque;
      44: invokeinterface #36,  1           // InterfaceMethod java/util/Deque.peek:()Ljava/lang/Object;
      49: checkcast     #37                 // class com/google/javascript/jscomp/graph/GraphColoring
      52: invokevirtual #38                 // Method com/google/javascript/jscomp/graph/GraphColoring.getGraph:()Lcom/google/javascript/jscomp/graph/AdjacencyGraph;
      55: aload         4
      57: invokeinterface #39,  2           // InterfaceMethod com/google/javascript/jscomp/graph/AdjacencyGraph.getNode:(Ljava/lang/Object;)Lcom/google/javascript/jscomp/graph/GraphNode;
      62: astore        5
      64: aload         5
      66: ifnonnull     70
      69: return
      70: aload_0
      71: getfield      #7                  // Field colorings:Ljava/util/Deque;
      74: invokeinterface #36,  1           // InterfaceMethod java/util/Deque.peek:()Ljava/lang/Object;
      79: checkcast     #37                 // class com/google/javascript/jscomp/graph/GraphColoring
      82: aload         4
      84: invokevirtual #40                 // Method com/google/javascript/jscomp/graph/GraphColoring.getPartitionSuperNode:(Ljava/lang/Object;)Ljava/lang/Object;
      87: checkcast     #41                 // class com/google/javascript/jscomp/Scope$Var
      90: astore        6
      92: aload_0
      93: getfield      #8                  // Field usePseudoNames:Z
      96: ifne          148
      99: aload         5
     101: invokeinterface #42,  1           // InterfaceMethod com/google/javascript/jscomp/graph/GraphNode.getValue:()Ljava/lang/Object;
     106: checkcast     #41                 // class com/google/javascript/jscomp/Scope$Var
     109: aload         6
     111: invokevirtual #43                 // Method com/google/javascript/jscomp/Scope$Var.equals:(Ljava/lang/Object;)Z
     114: ifeq          118
     117: return
     118: aload_2
     119: aload         6
     121: getfield      #44                 // Field com/google/javascript/jscomp/Scope$Var.name:Ljava/lang/String;
     124: invokevirtual #45                 // Method com/google/javascript/rhino/Node.setString:(Ljava/lang/String;)V
     127: aload_0
     128: getfield      #5                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
     131: invokevirtual #46                 // Method com/google/javascript/jscomp/AbstractCompiler.reportCodeChange:()V
     134: aload_3
     135: invokevirtual #47                 // Method com/google/javascript/rhino/Node.isVar:()Z
     138: ifeq          357
     141: aload_2
     142: invokestatic  #48                 // Method removeVarDeclaration:(Lcom/google/javascript/rhino/Node;)V
     145: goto          357
     148: aconst_null
     149: astore        7
     151: invokestatic  #49                 // Method com/google/common/collect/Sets.newTreeSet:()Ljava/util/TreeSet;
     154: astore        8
     156: aload_1
     157: invokevirtual #13                 // Method com/google/javascript/jscomp/NodeTraversal.getScope:()Lcom/google/javascript/jscomp/Scope;
     160: invokevirtual #50                 // Method com/google/javascript/jscomp/Scope.getVars:()Ljava/util/Iterator;
     163: astore        9
     165: aload         9
     167: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     172: ifeq          253
     175: aload         9
     177: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     182: checkcast     #41                 // class com/google/javascript/jscomp/Scope$Var
     185: astore        10
     187: aload_0
     188: getfield      #7                  // Field colorings:Ljava/util/Deque;
     191: invokeinterface #36,  1           // InterfaceMethod java/util/Deque.peek:()Ljava/lang/Object;
     196: checkcast     #37                 // class com/google/javascript/jscomp/graph/GraphColoring
     199: invokevirtual #38                 // Method com/google/javascript/jscomp/graph/GraphColoring.getGraph:()Lcom/google/javascript/jscomp/graph/AdjacencyGraph;
     202: aload         10
     204: invokeinterface #39,  2           // InterfaceMethod com/google/javascript/jscomp/graph/AdjacencyGraph.getNode:(Ljava/lang/Object;)Lcom/google/javascript/jscomp/graph/GraphNode;
     209: ifnull        250
     212: aload         6
     214: aload_0
     215: getfield      #7                  // Field colorings:Ljava/util/Deque;
     218: invokeinterface #36,  1           // InterfaceMethod java/util/Deque.peek:()Ljava/lang/Object;
     223: checkcast     #37                 // class com/google/javascript/jscomp/graph/GraphColoring
     226: aload         10
     228: invokevirtual #40                 // Method com/google/javascript/jscomp/graph/GraphColoring.getPartitionSuperNode:(Ljava/lang/Object;)Ljava/lang/Object;
     231: invokevirtual #43                 // Method com/google/javascript/jscomp/Scope$Var.equals:(Ljava/lang/Object;)Z
     234: ifeq          250
     237: aload         8
     239: aload         10
     241: getfield      #44                 // Field com/google/javascript/jscomp/Scope$Var.name:Ljava/lang/String;
     244: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     249: pop
     250: goto          165
     253: aload         8
     255: invokeinterface #54,  1           // InterfaceMethod java/util/Set.size:()I
     260: iconst_1
     261: if_icmpne     265
     264: return
     265: ldc           #55                 // String _
     267: invokestatic  #56                 // Method com/google/common/base/Joiner.on:(Ljava/lang/String;)Lcom/google/common/base/Joiner;
     270: aload         8
     272: invokevirtual #57                 // Method com/google/common/base/Joiner.join:(Ljava/lang/Iterable;)Ljava/lang/String;
     275: astore        7
     277: aload_1
     278: invokevirtual #13                 // Method com/google/javascript/jscomp/NodeTraversal.getScope:()Lcom/google/javascript/jscomp/Scope;
     281: aload         7
     283: iconst_1
     284: invokevirtual #58                 // Method com/google/javascript/jscomp/Scope.isDeclared:(Ljava/lang/String;Z)Z
     287: ifeq          315
     290: new           #59                 // class java/lang/StringBuilder
     293: dup
     294: invokespecial #60                 // Method java/lang/StringBuilder."<init>":()V
     297: aload         7
     299: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     302: ldc           #62                 // String $
     304: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     307: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     310: astore        7
     312: goto          277
     315: aload_2
     316: aload         7
     318: invokevirtual #45                 // Method com/google/javascript/rhino/Node.setString:(Ljava/lang/String;)V
     321: aload_0
     322: getfield      #5                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
     325: invokevirtual #46                 // Method com/google/javascript/jscomp/AbstractCompiler.reportCodeChange:()V
     328: aload         5
     330: invokeinterface #42,  1           // InterfaceMethod com/google/javascript/jscomp/graph/GraphNode.getValue:()Ljava/lang/Object;
     335: checkcast     #41                 // class com/google/javascript/jscomp/Scope$Var
     338: aload         6
     340: invokevirtual #43                 // Method com/google/javascript/jscomp/Scope$Var.equals:(Ljava/lang/Object;)Z
     343: ifne          357
     346: aload_3
     347: invokevirtual #47                 // Method com/google/javascript/rhino/Node.isVar:()Z
     350: ifeq          357
     353: aload_2
     354: invokestatic  #48                 // Method removeVarDeclaration:(Lcom/google/javascript/rhino/Node;)V
     357: return

  private com.google.javascript.jscomp.graph.UndiGraph<com.google.javascript.jscomp.Scope$Var, java.lang.Void> computeVariableNamesInterferenceGraph(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.jscomp.ControlFlowGraph<com.google.javascript.rhino.Node>, java.util.Set<com.google.javascript.jscomp.Scope$Var>);
    Code:
       0: invokestatic  #64                 // Method com/google/javascript/jscomp/graph/LinkedUndirectedGraph.create:()Lcom/google/javascript/jscomp/graph/LinkedUndirectedGraph;
       3: astore        4
       5: aload_1
       6: invokevirtual #13                 // Method com/google/javascript/jscomp/NodeTraversal.getScope:()Lcom/google/javascript/jscomp/Scope;
       9: astore        5
      11: aload         5
      13: invokevirtual #50                 // Method com/google/javascript/jscomp/Scope.getVars:()Ljava/util/Iterator;
      16: astore        6
      18: aload         6
      20: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          73
      28: aload         6
      30: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #41                 // class com/google/javascript/jscomp/Scope$Var
      38: astore        7
      40: aload_3
      41: aload         7
      43: invokeinterface #65,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      48: ifne          70
      51: aload         7
      53: invokevirtual #66                 // Method com/google/javascript/jscomp/Scope$Var.getParentNode:()Lcom/google/javascript/rhino/Node;
      56: invokevirtual #33                 // Method com/google/javascript/rhino/Node.isFunction:()Z
      59: ifne          70
      62: aload         4
      64: aload         7
      66: invokevirtual #67                 // Method com/google/javascript/jscomp/graph/UndiGraph.createNode:(Ljava/lang/Object;)Lcom/google/javascript/jscomp/graph/GraphNode;
      69: pop
      70: goto          18
      73: aload         5
      75: invokevirtual #50                 // Method com/google/javascript/jscomp/Scope.getVars:()Ljava/util/Iterator;
      78: astore        6
      80: aload         6
      82: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      87: ifeq          519
      90: aload         6
      92: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      97: checkcast     #41                 // class com/google/javascript/jscomp/Scope$Var
     100: astore        7
     102: aload         5
     104: invokevirtual #50                 // Method com/google/javascript/jscomp/Scope.getVars:()Ljava/util/Iterator;
     107: astore        8
     109: aload         8
     111: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     116: ifeq          516
     119: aload         8
     121: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     126: checkcast     #41                 // class com/google/javascript/jscomp/Scope$Var
     129: astore        9
     131: aload         7
     133: getfield      #68                 // Field com/google/javascript/jscomp/Scope$Var.index:I
     136: aload         9
     138: getfield      #68                 // Field com/google/javascript/jscomp/Scope$Var.index:I
     141: if_icmplt     147
     144: goto          109
     147: aload         4
     149: aload         7
     151: invokevirtual #69                 // Method com/google/javascript/jscomp/graph/UndiGraph.hasNode:(Ljava/lang/Object;)Z
     154: ifeq          109
     157: aload         4
     159: aload         9
     161: invokevirtual #69                 // Method com/google/javascript/jscomp/graph/UndiGraph.hasNode:(Ljava/lang/Object;)Z
     164: ifne          170
     167: goto          109
     170: aload         7
     172: invokevirtual #66                 // Method com/google/javascript/jscomp/Scope$Var.getParentNode:()Lcom/google/javascript/rhino/Node;
     175: invokevirtual #70                 // Method com/google/javascript/rhino/Node.isParamList:()Z
     178: ifeq          205
     181: aload         9
     183: invokevirtual #66                 // Method com/google/javascript/jscomp/Scope$Var.getParentNode:()Lcom/google/javascript/rhino/Node;
     186: invokevirtual #70                 // Method com/google/javascript/rhino/Node.isParamList:()Z
     189: ifeq          205
     192: aload         4
     194: aload         7
     196: aconst_null
     197: aload         9
     199: invokevirtual #71                 // Method com/google/javascript/jscomp/graph/UndiGraph.connectIfNotFound:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     202: goto          109
     205: aload_2
     206: invokevirtual #72                 // Method com/google/javascript/jscomp/ControlFlowGraph.getDirectedGraphNodes:()Ljava/lang/Iterable;
     209: invokeinterface #73,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     214: astore        10
     216: aload         10
     218: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     223: ifeq          342
     226: aload         10
     228: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     233: checkcast     #74                 // class com/google/javascript/jscomp/graph/DiGraph$DiGraphNode
     236: astore        11
     238: aload_2
     239: aload         11
     241: invokevirtual #75                 // Method com/google/javascript/jscomp/ControlFlowGraph.isImplicitReturn:(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)Z
     244: ifeq          250
     247: goto          216
     250: aload         11
     252: invokeinterface #76,  1           // InterfaceMethod com/google/javascript/jscomp/graph/DiGraph$DiGraphNode.getAnnotation:()Lcom/google/javascript/jscomp/graph/Annotation;
     257: checkcast     #77                 // class com/google/javascript/jscomp/DataFlowAnalysis$FlowState
     260: astore        12
     262: aload         12
     264: invokevirtual #78                 // Method com/google/javascript/jscomp/DataFlowAnalysis$FlowState.getIn:()Lcom/google/javascript/jscomp/graph/LatticeElement;
     267: checkcast     #79                 // class com/google/javascript/jscomp/LiveVariablesAnalysis$LiveVariableLattice
     270: aload         7
     272: invokevirtual #80                 // Method com/google/javascript/jscomp/LiveVariablesAnalysis$LiveVariableLattice.isLive:(Lcom/google/javascript/jscomp/Scope$Var;)Z
     275: ifeq          294
     278: aload         12
     280: invokevirtual #78                 // Method com/google/javascript/jscomp/DataFlowAnalysis$FlowState.getIn:()Lcom/google/javascript/jscomp/graph/LatticeElement;
     283: checkcast     #79                 // class com/google/javascript/jscomp/LiveVariablesAnalysis$LiveVariableLattice
     286: aload         9
     288: invokevirtual #80                 // Method com/google/javascript/jscomp/LiveVariablesAnalysis$LiveVariableLattice.isLive:(Lcom/google/javascript/jscomp/Scope$Var;)Z
     291: ifne          326
     294: aload         12
     296: invokevirtual #81                 // Method com/google/javascript/jscomp/DataFlowAnalysis$FlowState.getOut:()Lcom/google/javascript/jscomp/graph/LatticeElement;
     299: checkcast     #79                 // class com/google/javascript/jscomp/LiveVariablesAnalysis$LiveVariableLattice
     302: aload         7
     304: invokevirtual #80                 // Method com/google/javascript/jscomp/LiveVariablesAnalysis$LiveVariableLattice.isLive:(Lcom/google/javascript/jscomp/Scope$Var;)Z
     307: ifeq          339
     310: aload         12
     312: invokevirtual #81                 // Method com/google/javascript/jscomp/DataFlowAnalysis$FlowState.getOut:()Lcom/google/javascript/jscomp/graph/LatticeElement;
     315: checkcast     #79                 // class com/google/javascript/jscomp/LiveVariablesAnalysis$LiveVariableLattice
     318: aload         9
     320: invokevirtual #80                 // Method com/google/javascript/jscomp/LiveVariablesAnalysis$LiveVariableLattice.isLive:(Lcom/google/javascript/jscomp/Scope$Var;)Z
     323: ifeq          339
     326: aload         4
     328: aload         7
     330: aconst_null
     331: aload         9
     333: invokevirtual #71                 // Method com/google/javascript/jscomp/graph/UndiGraph.connectIfNotFound:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     336: goto          109
     339: goto          216
     342: aload_2
     343: invokevirtual #72                 // Method com/google/javascript/jscomp/ControlFlowGraph.getDirectedGraphNodes:()Ljava/lang/Iterable;
     346: invokeinterface #73,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     351: astore        10
     353: aload         10
     355: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     360: ifeq          513
     363: aload         10
     365: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     370: checkcast     #74                 // class com/google/javascript/jscomp/graph/DiGraph$DiGraphNode
     373: astore        11
     375: aload_2
     376: aload         11
     378: invokevirtual #75                 // Method com/google/javascript/jscomp/ControlFlowGraph.isImplicitReturn:(Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;)Z
     381: ifeq          387
     384: goto          353
     387: aload         11
     389: invokeinterface #76,  1           // InterfaceMethod com/google/javascript/jscomp/graph/DiGraph$DiGraphNode.getAnnotation:()Lcom/google/javascript/jscomp/graph/Annotation;
     394: checkcast     #77                 // class com/google/javascript/jscomp/DataFlowAnalysis$FlowState
     397: astore        12
     399: aload         12
     401: invokevirtual #81                 // Method com/google/javascript/jscomp/DataFlowAnalysis$FlowState.getOut:()Lcom/google/javascript/jscomp/graph/LatticeElement;
     404: checkcast     #79                 // class com/google/javascript/jscomp/LiveVariablesAnalysis$LiveVariableLattice
     407: aload         7
     409: invokevirtual #80                 // Method com/google/javascript/jscomp/LiveVariablesAnalysis$LiveVariableLattice.isLive:(Lcom/google/javascript/jscomp/Scope$Var;)Z
     412: istore        13
     414: aload         12
     416: invokevirtual #81                 // Method com/google/javascript/jscomp/DataFlowAnalysis$FlowState.getOut:()Lcom/google/javascript/jscomp/graph/LatticeElement;
     419: checkcast     #79                 // class com/google/javascript/jscomp/LiveVariablesAnalysis$LiveVariableLattice
     422: aload         9
     424: invokevirtual #80                 // Method com/google/javascript/jscomp/LiveVariablesAnalysis$LiveVariableLattice.isLive:(Lcom/google/javascript/jscomp/Scope$Var;)Z
     427: istore        14
     429: new           #82                 // class com/google/javascript/jscomp/CoalesceVariableNames$CombinedLiveRangeChecker
     432: dup
     433: new           #83                 // class com/google/javascript/jscomp/CoalesceVariableNames$LiveRangeChecker
     436: dup
     437: aload         7
     439: iload         14
     441: ifeq          448
     444: aconst_null
     445: goto          450
     448: aload         9
     450: invokespecial #84                 // Method com/google/javascript/jscomp/CoalesceVariableNames$LiveRangeChecker."<init>":(Lcom/google/javascript/jscomp/Scope$Var;Lcom/google/javascript/jscomp/Scope$Var;)V
     453: new           #83                 // class com/google/javascript/jscomp/CoalesceVariableNames$LiveRangeChecker
     456: dup
     457: aload         9
     459: iload         13
     461: ifeq          468
     464: aconst_null
     465: goto          470
     468: aload         7
     470: invokespecial #84                 // Method com/google/javascript/jscomp/CoalesceVariableNames$LiveRangeChecker."<init>":(Lcom/google/javascript/jscomp/Scope$Var;Lcom/google/javascript/jscomp/Scope$Var;)V
     473: invokespecial #85                 // Method com/google/javascript/jscomp/CoalesceVariableNames$CombinedLiveRangeChecker."<init>":(Lcom/google/javascript/jscomp/CoalesceVariableNames$LiveRangeChecker;Lcom/google/javascript/jscomp/CoalesceVariableNames$LiveRangeChecker;)V
     476: astore        15
     478: aload_0
     479: getfield      #5                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
     482: aload         11
     484: invokeinterface #86,  1           // InterfaceMethod com/google/javascript/jscomp/graph/DiGraph$DiGraphNode.getValue:()Ljava/lang/Object;
     489: checkcast     #87                 // class com/google/javascript/rhino/Node
     492: aload         15
     494: invokestatic  #9                  // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
     497: aload         15
     499: aload         4
     501: invokevirtual #88                 // Method com/google/javascript/jscomp/CoalesceVariableNames$CombinedLiveRangeChecker.connectIfCrossed:(Lcom/google/javascript/jscomp/graph/UndiGraph;)Z
     504: ifeq          510
     507: goto          109
     510: goto          353
     513: goto          109
     516: goto          80
     519: aload         4
     521: areturn

  private static void removeVarDeclaration(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokevirtual #89                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
       4: astore_1
       5: aload_1
       6: invokevirtual #89                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
       9: astore_2
      10: aload_2
      11: invokestatic  #90                 // Method com/google/javascript/jscomp/NodeUtil.isForIn:(Lcom/google/javascript/rhino/Node;)Z
      14: ifeq          31
      17: aload_1
      18: aload_0
      19: invokevirtual #91                 // Method com/google/javascript/rhino/Node.removeChild:(Lcom/google/javascript/rhino/Node;)V
      22: aload_2
      23: aload_1
      24: aload_0
      25: invokevirtual #92                 // Method com/google/javascript/rhino/Node.replaceChild:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      28: goto          110
      31: aload_1
      32: invokevirtual #93                 // Method com/google/javascript/rhino/Node.hasOneChild:()Z
      35: ifeq          98
      38: aload_0
      39: invokevirtual #94                 // Method com/google/javascript/rhino/Node.hasChildren:()Z
      42: ifeq          90
      45: aload_0
      46: invokevirtual #95                 // Method com/google/javascript/rhino/Node.removeFirstChild:()Lcom/google/javascript/rhino/Node;
      49: astore_3
      50: aload_1
      51: aload_0
      52: invokevirtual #91                 // Method com/google/javascript/rhino/Node.removeChild:(Lcom/google/javascript/rhino/Node;)V
      55: aload_0
      56: aload_3
      57: invokestatic  #96                 // Method com/google/javascript/rhino/IR.assign:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      60: aload_0
      61: invokevirtual #97                 // Method com/google/javascript/rhino/Node.srcref:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      64: astore        4
      66: aload_2
      67: invokevirtual #98                 // Method com/google/javascript/rhino/Node.isFor:()Z
      70: ifne          80
      73: aload         4
      75: invokestatic  #99                 // Method com/google/javascript/jscomp/NodeUtil.newExpr:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      78: astore        4
      80: aload_2
      81: aload_1
      82: aload         4
      84: invokevirtual #92                 // Method com/google/javascript/rhino/Node.replaceChild:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      87: goto          110
      90: aload_2
      91: aload_1
      92: invokestatic  #100                // Method com/google/javascript/jscomp/NodeUtil.removeChild:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      95: goto          110
      98: aload_0
      99: invokevirtual #94                 // Method com/google/javascript/rhino/Node.hasChildren:()Z
     102: ifne          110
     105: aload_1
     106: aload_0
     107: invokevirtual #91                 // Method com/google/javascript/rhino/Node.removeChild:(Lcom/google/javascript/rhino/Node;)V
     110: return

  static {};
    Code:
       0: new           #101                // class com/google/javascript/jscomp/CoalesceVariableNames$1
       3: dup
       4: invokespecial #102                // Method com/google/javascript/jscomp/CoalesceVariableNames$1."<init>":()V
       7: putstatic     #26                 // Field coloringTieBreaker:Ljava/util/Comparator;
      10: return
}
