Compiled from "ConformanceRules.java"
public abstract class com.google.javascript.jscomp.ConformanceRules$AbstractRule implements com.google.javascript.jscomp.CheckConformance$Rule {
  final com.google.javascript.jscomp.AbstractCompiler compiler;

  final java.lang.String message;

  final com.google.common.collect.ImmutableList<java.lang.String> whitelist;

  final com.google.common.collect.ImmutableList<java.lang.String> onlyApplyTo;

  final java.util.regex.Pattern whitelistRegexp;

  final java.util.regex.Pattern onlyApplyToRegexp;

  public com.google.javascript.jscomp.ConformanceRules$AbstractRule(com.google.javascript.jscomp.AbstractCompiler, com.google.javascript.jscomp.Requirement) throws com.google.javascript.jscomp.CheckConformance$InvalidRequirementSpec;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_2
       5: invokevirtual #2                  // Method com/google/javascript/jscomp/Requirement.hasErrorMessage:()Z
       8: ifne          21
      11: new           #3                  // class com/google/javascript/jscomp/CheckConformance$InvalidRequirementSpec
      14: dup
      15: ldc           #4                  // String missing message
      17: invokespecial #5                  // Method com/google/javascript/jscomp/CheckConformance$InvalidRequirementSpec."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: aload_1
      23: putfield      #6                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      26: aload_0
      27: aload_2
      28: invokevirtual #7                  // Method com/google/javascript/jscomp/Requirement.getErrorMessage:()Ljava/lang/String;
      31: putfield      #8                  // Field message:Ljava/lang/String;
      34: aload_0
      35: aload_2
      36: invokevirtual #9                  // Method com/google/javascript/jscomp/Requirement.getWhitelistList:()Ljava/util/List;
      39: invokestatic  #10                 // Method com/google/common/collect/ImmutableList.copyOf:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;
      42: putfield      #11                 // Field whitelist:Lcom/google/common/collect/ImmutableList;
      45: aload_0
      46: aload_2
      47: invokevirtual #12                 // Method com/google/javascript/jscomp/Requirement.getWhitelistRegexpList:()Ljava/util/List;
      50: invokestatic  #13                 // Method buildPattern:(Ljava/util/List;)Ljava/util/regex/Pattern;
      53: putfield      #14                 // Field whitelistRegexp:Ljava/util/regex/Pattern;
      56: aload_0
      57: aload_2
      58: invokevirtual #15                 // Method com/google/javascript/jscomp/Requirement.getOnlyApplyToList:()Ljava/util/List;
      61: invokestatic  #10                 // Method com/google/common/collect/ImmutableList.copyOf:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;
      64: putfield      #16                 // Field onlyApplyTo:Lcom/google/common/collect/ImmutableList;
      67: aload_0
      68: aload_2
      69: invokevirtual #17                 // Method com/google/javascript/jscomp/Requirement.getOnlyApplyToRegexpList:()Ljava/util/List;
      72: invokestatic  #13                 // Method buildPattern:(Ljava/util/List;)Ljava/util/regex/Pattern;
      75: putfield      #18                 // Field onlyApplyToRegexp:Ljava/util/regex/Pattern;
      78: aload_0
      79: getfield      #11                 // Field whitelist:Lcom/google/common/collect/ImmutableList;
      82: invokevirtual #19                 // Method com/google/common/collect/ImmutableList.isEmpty:()Z
      85: ifeq          95
      88: aload_0
      89: getfield      #14                 // Field whitelistRegexp:Ljava/util/regex/Pattern;
      92: ifnull        99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: istore_3
     101: aload_0
     102: getfield      #16                 // Field onlyApplyTo:Lcom/google/common/collect/ImmutableList;
     105: invokevirtual #19                 // Method com/google/common/collect/ImmutableList.isEmpty:()Z
     108: ifeq          118
     111: aload_0
     112: getfield      #18                 // Field onlyApplyToRegexp:Ljava/util/regex/Pattern;
     115: ifnull        122
     118: iconst_1
     119: goto          123
     122: iconst_0
     123: istore        4
     125: iload_3
     126: ifeq          144
     129: iload         4
     131: ifeq          144
     134: new           #20                 // class java/lang/IllegalArgumentException
     137: dup
     138: ldc           #21                 // String It is an error to specify both whitelist and only_apply_to
     140: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     143: athrow
     144: return

  private static java.util.regex.Pattern buildPattern(java.util.List<java.lang.String>) throws com.google.javascript.jscomp.CheckConformance$InvalidRequirementSpec;
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: invokeinterface #23,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      10: ifeq          15
      13: aconst_null
      14: areturn
      15: aload_0
      16: invokeinterface #24,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      21: astore_1
      22: aload_1
      23: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          63
      31: aload_1
      32: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #27                 // class java/lang/String
      40: astore_2
      41: aload_2
      42: invokestatic  #28                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      45: pop
      46: goto          60
      49: astore_3
      50: new           #3                  // class com/google/javascript/jscomp/CheckConformance$InvalidRequirementSpec
      53: dup
      54: ldc           #30                 // String invalid regex pattern
      56: invokespecial #5                  // Method com/google/javascript/jscomp/CheckConformance$InvalidRequirementSpec."<init>":(Ljava/lang/String;)V
      59: athrow
      60: goto          22
      63: aconst_null
      64: astore_1
      65: new           #31                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      72: ldc           #33                 // String (
      74: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: ldc           #35                 // String |
      79: invokestatic  #36                 // Method com/google/common/base/Joiner.on:(Ljava/lang/String;)Lcom/google/common/base/Joiner;
      82: aload_0
      83: invokevirtual #37                 // Method com/google/common/base/Joiner.join:(Ljava/lang/Iterable;)Ljava/lang/String;
      86: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: ldc           #38                 // String )
      91: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: astore_2
      98: aload_2
      99: invokestatic  #28                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
     102: astore_1
     103: goto          118
     106: astore_2
     107: new           #40                 // class java/lang/RuntimeException
     110: dup
     111: ldc           #41                 // String bad joined regexp
     113: aload_2
     114: invokespecial #42                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     117: athrow
     118: aload_1
     119: areturn
    Exception table:
       from    to  target type
          41    46    49   Class java/util/regex/PatternSyntaxException
          65   103   106   Class java/util/regex/PatternSyntaxException

  protected abstract com.google.javascript.jscomp.ConformanceRules$ConformanceResult checkConformance(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node);

  private boolean shouldCheckConformance(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokestatic  #43                 // Method com/google/javascript/jscomp/NodeUtil.getSourceName:(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: iconst_1
      10: ireturn
      11: aload_0
      12: getfield      #16                 // Field onlyApplyTo:Lcom/google/common/collect/ImmutableList;
      15: invokevirtual #19                 // Method com/google/common/collect/ImmutableList.isEmpty:()Z
      18: ifeq          28
      21: aload_0
      22: getfield      #18                 // Field onlyApplyToRegexp:Ljava/util/regex/Pattern;
      25: ifnull        41
      28: aload_2
      29: aload_0
      30: getfield      #16                 // Field onlyApplyTo:Lcom/google/common/collect/ImmutableList;
      33: aload_0
      34: getfield      #18                 // Field onlyApplyToRegexp:Ljava/util/regex/Pattern;
      37: invokestatic  #44                 // Method pathIsInListOrRegexp:(Ljava/lang/String;Lcom/google/common/collect/ImmutableList;Ljava/util/regex/Pattern;)Z
      40: ireturn
      41: aload_2
      42: aload_0
      43: getfield      #11                 // Field whitelist:Lcom/google/common/collect/ImmutableList;
      46: aload_0
      47: getfield      #14                 // Field whitelistRegexp:Ljava/util/regex/Pattern;
      50: invokestatic  #44                 // Method pathIsInListOrRegexp:(Ljava/lang/String;Lcom/google/common/collect/ImmutableList;Ljava/util/regex/Pattern;)Z
      53: ifne          60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: ireturn

  private static boolean pathIsInListOrRegexp(java.lang.String, com.google.common.collect.ImmutableList<java.lang.String>, java.util.regex.Pattern);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: aload_1
       4: invokevirtual #45                 // Method com/google/common/collect/ImmutableList.size:()I
       7: if_icmpge     45
      10: aload_1
      11: iload_3
      12: invokevirtual #46                 // Method com/google/common/collect/ImmutableList.get:(I)Ljava/lang/Object;
      15: checkcast     #27                 // class java/lang/String
      18: astore        4
      20: aload         4
      22: invokevirtual #47                 // Method java/lang/String.isEmpty:()Z
      25: ifne          39
      28: aload_0
      29: aload         4
      31: invokevirtual #48                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      34: ifeq          39
      37: iconst_1
      38: ireturn
      39: iinc          3, 1
      42: goto          2
      45: aload_2
      46: ifnull        64
      49: aload_2
      50: aload_0
      51: invokevirtual #49                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      54: invokevirtual #50                 // Method java/util/regex/Matcher.find:()Z
      57: ifeq          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: ireturn

  public final void check(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #51                 // Method checkConformance:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/jscomp/ConformanceRules$ConformanceResult;
       6: astore_3
       7: aload_3
       8: getstatic     #52                 // Field com/google/javascript/jscomp/ConformanceRules$ConformanceResult.CONFORMANCE:Lcom/google/javascript/jscomp/ConformanceRules$ConformanceResult;
      11: if_acmpeq     29
      14: aload_0
      15: aload_2
      16: invokespecial #53                 // Method shouldCheckConformance:(Lcom/google/javascript/rhino/Node;)Z
      19: ifeq          29
      22: aload_0
      23: aload_1
      24: aload_2
      25: aload_3
      26: invokevirtual #54                 // Method report:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ConformanceRules$ConformanceResult;)V
      29: return

  protected void report(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.jscomp.ConformanceRules$ConformanceResult);
    Code:
       0: aload_3
       1: getstatic     #55                 // Field com/google/javascript/jscomp/ConformanceRules$ConformanceResult.VIOLATION:Lcom/google/javascript/jscomp/ConformanceRules$ConformanceResult;
       4: if_acmpne     13
       7: getstatic     #56                 // Field com/google/javascript/jscomp/CheckConformance.CONFORMANCE_VIOLATION:Lcom/google/javascript/jscomp/DiagnosticType;
      10: goto          16
      13: getstatic     #57                 // Field com/google/javascript/jscomp/CheckConformance.CONFORMANCE_POSSIBLE_VIOLATION:Lcom/google/javascript/jscomp/DiagnosticType;
      16: astore        4
      18: aload_1
      19: aload_2
      20: aload         4
      22: iconst_1
      23: anewarray     #27                 // class java/lang/String
      26: dup
      27: iconst_0
      28: aload_0
      29: getfield      #8                  // Field message:Ljava/lang/String;
      32: aastore
      33: invokevirtual #58                 // Method com/google/javascript/jscomp/NodeTraversal.report:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)V
      36: return
}
