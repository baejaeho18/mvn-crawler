Compiled from "WhitelistWarningsGuard.java"
public class com.google.javascript.jscomp.WhitelistWarningsGuard extends com.google.javascript.jscomp.WarningsGuard {
  private static final com.google.common.base.Splitter LINE_SPLITTER;

  private final java.util.Set<java.lang.String> whitelist;

  private static final java.util.regex.Pattern LINE_NUMBER;

  public com.google.javascript.jscomp.WhitelistWarningsGuard();
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/collect/ImmutableSet.of:()Lcom/google/common/collect/ImmutableSet;
       4: invokespecial #3                  // Method "<init>":(Ljava/util/Set;)V
       7: return

  public com.google.javascript.jscomp.WhitelistWarningsGuard(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method com/google/javascript/jscomp/WarningsGuard."<init>":()V
       4: aload_1
       5: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: aload_0
      10: aload_0
      11: aload_1
      12: invokevirtual #6                  // Method normalizeWhitelist:(Ljava/util/Set;)Ljava/util/Set;
      15: putfield      #7                  // Field whitelist:Ljava/util/Set;
      18: return

  protected java.util.Set<java.lang.String> normalizeWhitelist(java.util.Set<java.lang.String>);
    Code:
       0: invokestatic  #8                  // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
       3: astore_2
       4: aload_1
       5: invokeinterface #9,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      10: astore_3
      11: aload_3
      12: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          83
      20: aload_3
      21: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #12                 // class java/lang/String
      29: astore        4
      31: aload         4
      33: invokevirtual #13                 // Method java/lang/String.trim:()Ljava/lang/String;
      36: astore        5
      38: aload         5
      40: invokevirtual #14                 // Method java/lang/String.isEmpty:()Z
      43: ifne          11
      46: aload         5
      48: iconst_0
      49: invokevirtual #15                 // Method java/lang/String.charAt:(I)C
      52: bipush        35
      54: if_icmpne     60
      57: goto          11
      60: aload_2
      61: getstatic     #16                 // Field LINE_NUMBER:Ljava/util/regex/Pattern;
      64: aload         5
      66: invokevirtual #17                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      69: ldc           #18                 // String :
      71: invokevirtual #19                 // Method java/util/regex/Matcher.replaceFirst:(Ljava/lang/String;)Ljava/lang/String;
      74: invokeinterface #20,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      79: pop
      80: goto          11
      83: aload_2
      84: invokestatic  #21                 // Method com/google/common/collect/ImmutableSet.copyOf:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableSet;
      87: areturn

  public com.google.javascript.jscomp.CheckLevel level(com.google.javascript.jscomp.JSError);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #22                 // Method formatWarning:(Lcom/google/javascript/jscomp/JSError;)Ljava/lang/String;
       6: invokevirtual #23                 // Method containWarning:(Ljava/lang/String;)Z
       9: ifeq          16
      12: getstatic     #24                 // Field com/google/javascript/jscomp/CheckLevel.WARNING:Lcom/google/javascript/jscomp/CheckLevel;
      15: areturn
      16: aconst_null
      17: areturn

  protected boolean containWarning(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field whitelist:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public int getPriority();
    Code:
       0: getstatic     #26                 // Field com/google/javascript/jscomp/WarningsGuard$Priority.SUPPRESS_BY_WHITELIST:Lcom/google/javascript/jscomp/WarningsGuard$Priority;
       3: invokevirtual #27                 // Method com/google/javascript/jscomp/WarningsGuard$Priority.getValue:()I
       6: ireturn

  public static com.google.javascript.jscomp.WhitelistWarningsGuard fromFile(java.io.File);
    Code:
       0: new           #28                 // class com/google/javascript/jscomp/WhitelistWarningsGuard
       3: dup
       4: aload_0
       5: invokestatic  #29                 // Method loadWhitelistedJsWarnings:(Ljava/io/File;)Ljava/util/Set;
       8: invokespecial #3                  // Method "<init>":(Ljava/util/Set;)V
      11: areturn

  public static java.util.Set<java.lang.String> loadWhitelistedJsWarnings(java.io.File);
    Code:
       0: aload_0
       1: getstatic     #30                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       4: invokestatic  #31                 // Method com/google/common/io/Files.asCharSource:(Ljava/io/File;Ljava/nio/charset/Charset;)Lcom/google/common/io/CharSource;
       7: invokestatic  #32                 // Method loadWhitelistedJsWarnings:(Lcom/google/common/io/CharSource;)Ljava/util/Set;
      10: areturn

  protected static java.util.Set<java.lang.String> loadWhitelistedJsWarnings(com.google.common.io.CharSource);
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method com/google/common/io/CharSource.openStream:()Ljava/io/Reader;
       4: invokestatic  #34                 // Method loadWhitelistedJsWarnings:(Ljava/io/Reader;)Ljava/util/Set;
       7: areturn
       8: astore_1
       9: new           #36                 // class java/lang/RuntimeException
      12: dup
      13: aload_1
      14: invokespecial #37                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/io/IOException

  static java.util.Set<java.lang.String> loadWhitelistedJsWarnings(java.io.Reader) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: invokestatic  #8                  // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
       8: astore_1
       9: aload_1
      10: aload_0
      11: invokestatic  #38                 // Method com/google/common/io/CharStreams.readLines:(Ljava/lang/Readable;)Ljava/util/List;
      14: invokeinterface #39,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: aload_1
      21: areturn

  protected java.lang.String formatWarning(com.google.javascript.jscomp.JSError);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #40                 // Method formatWarning:(Lcom/google/javascript/jscomp/JSError;Z)Ljava/lang/String;
       6: areturn

  protected java.lang.String formatWarning(com.google.javascript.jscomp.JSError, boolean);
    Code:
       0: new           #41                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_1
      10: getfield      #43                 // Field com/google/javascript/jscomp/JSError.sourceName:Ljava/lang/String;
      13: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #18                 // String :
      18: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: pop
      22: iload_2
      23: ifeq          35
      26: aload_3
      27: aload_1
      28: getfield      #45                 // Field com/google/javascript/jscomp/JSError.lineNumber:I
      31: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: pop
      35: getstatic     #1                  // Field LINE_SPLITTER:Lcom/google/common/base/Splitter;
      38: aload_1
      39: getfield      #47                 // Field com/google/javascript/jscomp/JSError.description:Ljava/lang/String;
      42: invokevirtual #48                 // Method com/google/common/base/Splitter.splitToList:(Ljava/lang/CharSequence;)Ljava/util/List;
      45: astore        4
      47: aload_3
      48: ldc           #49                 // String
      50: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload         4
      55: iconst_0
      56: invokeinterface #50,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      61: checkcast     #12                 // class java/lang/String
      64: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: pop
      68: iload_2
      69: ifeq          122
      72: iconst_1
      73: istore        5
      75: iload         5
      77: aload         4
      79: invokeinterface #51,  1           // InterfaceMethod java/util/List.size:()I
      84: if_icmpge     115
      87: aload_3
      88: ldc           #52                 // String \n#
      90: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload         4
      95: iload         5
      97: invokeinterface #50,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     102: checkcast     #12                 // class java/lang/String
     105: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: pop
     109: iinc          5, 1
     112: goto          75
     115: aload_3
     116: ldc           #53                 // String \n
     118: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: pop
     122: aload_3
     123: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     126: areturn

  public static java.lang.String getFirstLine(java.lang.String);
    Code:
       0: aload_0
       1: bipush        10
       3: invokevirtual #55                 // Method java/lang/String.indexOf:(I)I
       6: istore_1
       7: iload_1
       8: ifle          18
      11: aload_0
      12: iconst_0
      13: iload_1
      14: invokevirtual #56                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      17: astore_0
      18: aload_0
      19: areturn

  static com.google.common.base.Splitter access$000();
    Code:
       0: getstatic     #1                  // Field LINE_SPLITTER:Lcom/google/common/base/Splitter;
       3: areturn

  static {};
    Code:
       0: bipush        10
       2: invokestatic  #57                 // Method com/google/common/base/Splitter.on:(C)Lcom/google/common/base/Splitter;
       5: putstatic     #1                  // Field LINE_SPLITTER:Lcom/google/common/base/Splitter;
       8: ldc           #58                 // String :-?\\d+
      10: invokestatic  #59                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      13: putstatic     #16                 // Field LINE_NUMBER:Ljava/util/regex/Pattern;
      16: return
}
