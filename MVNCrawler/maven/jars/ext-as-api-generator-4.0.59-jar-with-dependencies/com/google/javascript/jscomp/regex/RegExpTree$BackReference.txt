Compiled from "RegExpTree.java"
final class com.google.javascript.jscomp.regex.RegExpTree$BackReference extends com.google.javascript.jscomp.regex.RegExpTree$RegExpTreeAtom {
  final int groupIndex;

  com.google.javascript.jscomp.regex.RegExpTree$BackReference(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/javascript/jscomp/regex/RegExpTree$RegExpTreeAtom."<init>":()V
       4: iload_1
       5: iflt          18
       8: iload_1
       9: bipush        99
      11: if_icmpgt     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      22: aload_0
      23: iload_1
      24: putfield      #3                  // Field groupIndex:I
      27: return

  public com.google.javascript.jscomp.regex.RegExpTree simplify(java.lang.String);
    Code:
       0: aload_0
       1: areturn

  protected void appendSourceCode(java.lang.StringBuilder);
    Code:
       0: aload_1
       1: bipush        92
       3: invokevirtual #4                  // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       6: aload_0
       7: getfield      #3                  // Field groupIndex:I
      10: invokevirtual #5                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      13: pop
      14: return

  protected void appendDebugInfo(java.lang.StringBuilder);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field groupIndex:I
       5: invokevirtual #5                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
       8: pop
       9: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #6                  // class com/google/javascript/jscomp/regex/RegExpTree$BackReference
       4: ifeq          25
       7: aload_0
       8: getfield      #3                  // Field groupIndex:I
      11: aload_1
      12: checkcast     #6                  // class com/google/javascript/jscomp/regex/RegExpTree$BackReference
      15: getfield      #3                  // Field groupIndex:I
      18: if_icmpne     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public int hashCode();
    Code:
       0: ldc           #7                  // int -16308637
       2: aload_0
       3: getfield      #3                  // Field groupIndex:I
       6: ixor
       7: ireturn
}
