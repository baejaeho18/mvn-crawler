Compiled from "DotFormatter.java"
public class com.google.javascript.jscomp.DotFormatter {
  private static final java.lang.String INDENT;

  private static final java.lang.String ARROW;

  private static final java.lang.String LINE;

  private final java.util.HashMap<com.google.javascript.rhino.Node, java.lang.Integer> assignments;

  private int keyCount;

  private final java.lang.Appendable builder;

  private final com.google.javascript.jscomp.ControlFlowGraph<com.google.javascript.rhino.Node> cfg;

  private final boolean printAnnotations;

  private com.google.javascript.jscomp.DotFormatter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field assignments:Ljava/util/HashMap;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field keyCount:I
      20: aload_0
      21: new           #6                  // class java/lang/StringBuilder
      24: dup
      25: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      28: putfield      #8                  // Field builder:Ljava/lang/Appendable;
      31: aload_0
      32: aconst_null
      33: putfield      #9                  // Field cfg:Lcom/google/javascript/jscomp/ControlFlowGraph;
      36: aload_0
      37: iconst_0
      38: putfield      #10                 // Field printAnnotations:Z
      41: return

  private com.google.javascript.jscomp.DotFormatter(com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph<com.google.javascript.rhino.Node>, java.lang.Appendable, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field assignments:Ljava/util/HashMap;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field keyCount:I
      20: aload_0
      21: aload_2
      22: putfield      #9                  // Field cfg:Lcom/google/javascript/jscomp/ControlFlowGraph;
      25: aload_0
      26: aload_3
      27: putfield      #8                  // Field builder:Ljava/lang/Appendable;
      30: aload_0
      31: iload         4
      33: putfield      #10                 // Field printAnnotations:Z
      36: aload_0
      37: invokespecial #11                 // Method formatPreamble:()V
      40: aload_0
      41: aload_1
      42: invokespecial #12                 // Method traverseNodes:(Lcom/google/javascript/rhino/Node;)V
      45: aload_0
      46: invokespecial #13                 // Method formatConclusion:()V
      49: return

  public static java.lang.String toDot(com.google.javascript.rhino.Node) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #14                 // Method toDot:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowGraph;)Ljava/lang/String;
       5: areturn

  static java.lang.String toDot(com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph<com.google.javascript.rhino.Node>) throws java.io.IOException;
    Code:
       0: new           #6                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: new           #15                 // class com/google/javascript/jscomp/DotFormatter
      11: dup
      12: aload_0
      13: aload_1
      14: aload_2
      15: iconst_0
      16: invokespecial #16                 // Method "<init>":(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowGraph;Ljava/lang/Appendable;Z)V
      19: pop
      20: aload_2
      21: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: areturn

  static void appendDot(com.google.javascript.rhino.Node, com.google.javascript.jscomp.ControlFlowGraph<com.google.javascript.rhino.Node>, java.lang.Appendable) throws java.io.IOException;
    Code:
       0: new           #15                 // class com/google/javascript/jscomp/DotFormatter
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: iconst_0
       8: invokespecial #16                 // Method "<init>":(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/ControlFlowGraph;Ljava/lang/Appendable;Z)V
      11: pop
      12: return

  static com.google.javascript.jscomp.DotFormatter newInstanceForTesting();
    Code:
       0: new           #15                 // class com/google/javascript/jscomp/DotFormatter
       3: dup
       4: invokespecial #18                 // Method "<init>":()V
       7: areturn

  private void traverseNodes(com.google.javascript.rhino.Node) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method key:(Lcom/google/javascript/rhino/Node;)I
       5: istore_2
       6: aload_1
       7: invokevirtual #20                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      10: astore_3
      11: aload_3
      12: ifnull        106
      15: aload_0
      16: aload_3
      17: invokevirtual #19                 // Method key:(Lcom/google/javascript/rhino/Node;)I
      20: istore        4
      22: aload_0
      23: getfield      #8                  // Field builder:Ljava/lang/Appendable;
      26: ldc           #21                 // String
      28: invokeinterface #22,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      33: pop
      34: aload_0
      35: getfield      #8                  // Field builder:Ljava/lang/Appendable;
      38: iload_2
      39: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      42: invokestatic  #24                 // Method formatNodeName:(Ljava/lang/Integer;)Ljava/lang/String;
      45: invokeinterface #22,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      50: pop
      51: aload_0
      52: getfield      #8                  // Field builder:Ljava/lang/Appendable;
      55: ldc           #25                 // String  ->
      57: invokeinterface #22,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      62: pop
      63: aload_0
      64: getfield      #8                  // Field builder:Ljava/lang/Appendable;
      67: iload         4
      69: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      72: invokestatic  #24                 // Method formatNodeName:(Ljava/lang/Integer;)Ljava/lang/String;
      75: invokeinterface #22,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      80: pop
      81: aload_0
      82: getfield      #8                  // Field builder:Ljava/lang/Appendable;
      85: ldc           #26                 // String  [weight=1];\n
      87: invokeinterface #22,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      92: pop
      93: aload_0
      94: aload_3
      95: invokespecial #12                 // Method traverseNodes:(Lcom/google/javascript/rhino/Node;)V
      98: aload_3
      99: invokevirtual #27                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
     102: astore_3
     103: goto          11
     106: aload_0
     107: getfield      #9                  // Field cfg:Lcom/google/javascript/jscomp/ControlFlowGraph;
     110: ifnull        345
     113: aload_0
     114: getfield      #9                  // Field cfg:Lcom/google/javascript/jscomp/ControlFlowGraph;
     117: aload_1
     118: invokevirtual #28                 // Method com/google/javascript/jscomp/ControlFlowGraph.hasNode:(Ljava/lang/Object;)Z
     121: ifeq          345
     124: aload_0
     125: getfield      #9                  // Field cfg:Lcom/google/javascript/jscomp/ControlFlowGraph;
     128: aload_1
     129: invokevirtual #29                 // Method com/google/javascript/jscomp/ControlFlowGraph.getOutEdges:(Ljava/lang/Object;)Ljava/util/List;
     132: astore_3
     133: aload_3
     134: invokeinterface #30,  1           // InterfaceMethod java/util/List.size:()I
     139: anewarray     #31                 // class java/lang/String
     142: astore        4
     144: iconst_0
     145: istore        5
     147: iload         5
     149: aload         4
     151: arraylength
     152: if_icmpge     296
     155: aload_3
     156: iload         5
     158: invokeinterface #32,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     163: checkcast     #33                 // class com/google/javascript/jscomp/graph/DiGraph$DiGraphEdge
     166: astore        6
     168: aload         6
     170: invokeinterface #34,  1           // InterfaceMethod com/google/javascript/jscomp/graph/DiGraph$DiGraphEdge.getDestination:()Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;
     175: astore        7
     177: aconst_null
     178: astore        8
     180: aload         7
     182: aload_0
     183: getfield      #9                  // Field cfg:Lcom/google/javascript/jscomp/ControlFlowGraph;
     186: invokevirtual #35                 // Method com/google/javascript/jscomp/ControlFlowGraph.getImplicitReturn:()Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;
     189: if_acmpne     199
     192: ldc           #36                 // String RETURN
     194: astore        8
     196: goto          225
     199: aload_0
     200: aload         7
     202: invokeinterface #37,  1           // InterfaceMethod com/google/javascript/jscomp/graph/DiGraph$DiGraphNode.getValue:()Ljava/lang/Object;
     207: checkcast     #38                 // class com/google/javascript/rhino/Node
     210: invokevirtual #19                 // Method key:(Lcom/google/javascript/rhino/Node;)I
     213: istore        9
     215: iload         9
     217: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     220: invokestatic  #24                 // Method formatNodeName:(Ljava/lang/Integer;)Ljava/lang/String;
     223: astore        8
     225: aload         4
     227: iload         5
     229: new           #6                  // class java/lang/StringBuilder
     232: dup
     233: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
     236: iload_2
     237: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     240: invokestatic  #24                 // Method formatNodeName:(Ljava/lang/Integer;)Ljava/lang/String;
     243: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     246: ldc           #25                 // String  ->
     248: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     251: aload         8
     253: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     256: ldc           #40                 // String  [label=\"
     258: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     261: aload         6
     263: invokeinterface #41,  1           // InterfaceMethod com/google/javascript/jscomp/graph/DiGraph$DiGraphEdge.getValue:()Ljava/lang/Object;
     268: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     271: ldc           #43                 // String \",
     273: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     276: ldc           #44                 // String fontcolor=\"red\",
     278: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: ldc           #45                 // String weight=0.01, color=\"red\"];\n
     283: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     286: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     289: aastore
     290: iinc          5, 1
     293: goto          147
     296: aload         4
     298: invokestatic  #46                 // Method java/util/Arrays.sort:([Ljava/lang/Object;)V
     301: iconst_0
     302: istore        5
     304: iload         5
     306: aload         4
     308: arraylength
     309: if_icmpge     345
     312: aload_0
     313: getfield      #8                  // Field builder:Ljava/lang/Appendable;
     316: ldc           #21                 // String
     318: invokeinterface #22,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     323: pop
     324: aload_0
     325: getfield      #8                  // Field builder:Ljava/lang/Appendable;
     328: aload         4
     330: iload         5
     332: aaload
     333: invokeinterface #22,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     338: pop
     339: iinc          5, 1
     342: goto          304
     345: return

  int key(com.google.javascript.rhino.Node) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field assignments:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #47                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #48                 // class java/lang/Integer
      11: astore_2
      12: aload_2
      13: ifnonnull     243
      16: aload_0
      17: dup
      18: getfield      #5                  // Field keyCount:I
      21: dup_x1
      22: iconst_1
      23: iadd
      24: putfield      #5                  // Field keyCount:I
      27: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      30: astore_2
      31: aload_0
      32: getfield      #4                  // Field assignments:Ljava/util/HashMap;
      35: aload_1
      36: aload_2
      37: invokevirtual #49                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: aload_0
      42: getfield      #8                  // Field builder:Ljava/lang/Appendable;
      45: ldc           #21                 // String
      47: invokeinterface #22,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      52: pop
      53: aload_0
      54: getfield      #8                  // Field builder:Ljava/lang/Appendable;
      57: aload_2
      58: invokestatic  #24                 // Method formatNodeName:(Ljava/lang/Integer;)Ljava/lang/String;
      61: invokeinterface #22,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      66: pop
      67: aload_0
      68: getfield      #8                  // Field builder:Ljava/lang/Appendable;
      71: ldc           #40                 // String  [label=\"
      73: invokeinterface #22,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      78: pop
      79: aload_0
      80: getfield      #8                  // Field builder:Ljava/lang/Appendable;
      83: aload_1
      84: invokestatic  #50                 // Method name:(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;
      87: invokeinterface #22,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      92: pop
      93: aload_1
      94: invokevirtual #51                 // Method com/google/javascript/rhino/Node.getTypeI:()Lcom/google/javascript/rhino/TypeI;
      97: astore_3
      98: aload_3
      99: ifnull        128
     102: aload_0
     103: getfield      #8                  // Field builder:Ljava/lang/Appendable;
     106: ldc           #52                 // String  :
     108: invokeinterface #22,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     113: pop
     114: aload_0
     115: getfield      #8                  // Field builder:Ljava/lang/Appendable;
     118: aload_3
     119: invokevirtual #53                 // Method java/lang/Object.toString:()Ljava/lang/String;
     122: invokeinterface #22,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     127: pop
     128: aload_0
     129: getfield      #10                 // Field printAnnotations:Z
     132: ifeq          200
     135: aload_0
     136: getfield      #9                  // Field cfg:Lcom/google/javascript/jscomp/ControlFlowGraph;
     139: ifnull        200
     142: aload_0
     143: getfield      #9                  // Field cfg:Lcom/google/javascript/jscomp/ControlFlowGraph;
     146: aload_1
     147: invokevirtual #28                 // Method com/google/javascript/jscomp/ControlFlowGraph.hasNode:(Ljava/lang/Object;)Z
     150: ifeq          200
     153: aload_0
     154: getfield      #9                  // Field cfg:Lcom/google/javascript/jscomp/ControlFlowGraph;
     157: aload_1
     158: invokevirtual #54                 // Method com/google/javascript/jscomp/ControlFlowGraph.getNode:(Ljava/lang/Object;)Lcom/google/javascript/jscomp/graph/GraphNode;
     161: invokeinterface #55,  1           // InterfaceMethod com/google/javascript/jscomp/graph/GraphNode.getAnnotation:()Lcom/google/javascript/jscomp/graph/Annotation;
     166: astore        4
     168: aload         4
     170: ifnull        200
     173: aload_0
     174: getfield      #8                  // Field builder:Ljava/lang/Appendable;
     177: ldc           #56                 // String \\n
     179: invokeinterface #22,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     184: pop
     185: aload_0
     186: getfield      #8                  // Field builder:Ljava/lang/Appendable;
     189: aload         4
     191: invokevirtual #53                 // Method java/lang/Object.toString:()Ljava/lang/String;
     194: invokeinterface #22,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     199: pop
     200: aload_0
     201: getfield      #8                  // Field builder:Ljava/lang/Appendable;
     204: ldc           #57                 // String \"
     206: invokeinterface #22,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     211: pop
     212: aload_1
     213: invokevirtual #58                 // Method com/google/javascript/rhino/Node.getJSDocInfo:()Lcom/google/javascript/rhino/JSDocInfo;
     216: ifnull        231
     219: aload_0
     220: getfield      #8                  // Field builder:Ljava/lang/Appendable;
     223: ldc           #59                 // String  color=\"green\"
     225: invokeinterface #22,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     230: pop
     231: aload_0
     232: getfield      #8                  // Field builder:Ljava/lang/Appendable;
     235: ldc           #60                 // String ];\n
     237: invokeinterface #22,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     242: pop
     243: aload_2
     244: invokevirtual #61                 // Method java/lang/Integer.intValue:()I
     247: ireturn

  private static java.lang.String name(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method com/google/javascript/rhino/Node.getType:()I
       4: istore_1
       5: iload_1
       6: lookupswitch  { // 1
                   122: 24
               default: 27
          }
      24: ldc           #63                 // String VOID
      26: areturn
      27: iload_1
      28: invokestatic  #64                 // Method com/google/javascript/rhino/Token.name:(I)Ljava/lang/String;
      31: areturn

  private static java.lang.String formatNodeName(java.lang.Integer);
    Code:
       0: new           #6                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #65                 // String node
       9: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      16: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: areturn

  private void formatPreamble() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field builder:Ljava/lang/Appendable;
       4: ldc           #66                 // String digraph AST {\n
       6: invokeinterface #22,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      11: pop
      12: aload_0
      13: getfield      #8                  // Field builder:Ljava/lang/Appendable;
      16: ldc           #21                 // String
      18: invokeinterface #22,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      23: pop
      24: aload_0
      25: getfield      #8                  // Field builder:Ljava/lang/Appendable;
      28: ldc           #67                 // String node [color=lightblue2, style=filled];\n
      30: invokeinterface #22,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      35: pop
      36: return

  private void formatConclusion() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field builder:Ljava/lang/Appendable;
       4: ldc           #68                 // String }\n
       6: invokeinterface #22,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      11: pop
      12: return

  public static java.lang.String toDot(com.google.javascript.jscomp.graph.GraphvizGraph);
    Code:
       0: new           #6                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokeinterface #69,  1           // InterfaceMethod com/google/javascript/jscomp/graph/GraphvizGraph.isDirected:()Z
      15: ifeq          23
      18: ldc           #70                 // String digraph
      20: goto          25
      23: ldc           #71                 // String graph
      25: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: pop
      29: aload_1
      30: ldc           #21                 // String
      32: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: pop
      36: aload_1
      37: aload_0
      38: invokeinterface #72,  1           // InterfaceMethod com/google/javascript/jscomp/graph/GraphvizGraph.getName:()Ljava/lang/String;
      43: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: pop
      47: aload_1
      48: ldc           #73                 // String  {\n
      50: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_1
      55: ldc           #21                 // String
      57: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: pop
      61: aload_1
      62: ldc           #67                 // String node [color=lightblue2, style=filled];\n
      64: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: pop
      68: aload_0
      69: invokeinterface #69,  1           // InterfaceMethod com/google/javascript/jscomp/graph/GraphvizGraph.isDirected:()Z
      74: ifeq          82
      77: ldc           #25                 // String  ->
      79: goto          84
      82: ldc           #74                 // String  --
      84: astore_2
      85: aload_0
      86: invokeinterface #75,  1           // InterfaceMethod com/google/javascript/jscomp/graph/GraphvizGraph.getGraphvizNodes:()Ljava/util/List;
      91: astore_3
      92: aload_3
      93: invokeinterface #30,  1           // InterfaceMethod java/util/List.size:()I
      98: anewarray     #31                 // class java/lang/String
     101: astore        4
     103: iconst_0
     104: istore        5
     106: iload         5
     108: aload         4
     110: arraylength
     111: if_icmpge     193
     114: aload_3
     115: iload         5
     117: invokeinterface #32,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     122: checkcast     #76                 // class com/google/javascript/jscomp/graph/GraphvizGraph$GraphvizNode
     125: astore        6
     127: aload         4
     129: iload         5
     131: new           #6                  // class java/lang/StringBuilder
     134: dup
     135: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
     138: aload         6
     140: invokeinterface #77,  1           // InterfaceMethod com/google/javascript/jscomp/graph/GraphvizGraph$GraphvizNode.getId:()Ljava/lang/String;
     145: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: ldc           #40                 // String  [label=\"
     150: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     153: aload         6
     155: invokeinterface #78,  1           // InterfaceMethod com/google/javascript/jscomp/graph/GraphvizGraph$GraphvizNode.getLabel:()Ljava/lang/String;
     160: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     163: ldc           #79                 // String \" color=\"
     165: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: aload         6
     170: invokeinterface #80,  1           // InterfaceMethod com/google/javascript/jscomp/graph/GraphvizGraph$GraphvizNode.getColor:()Ljava/lang/String;
     175: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     178: ldc           #81                 // String \"]
     180: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     183: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     186: aastore
     187: iinc          5, 1
     190: goto          106
     193: aload         4
     195: invokestatic  #46                 // Method java/util/Arrays.sort:([Ljava/lang/Object;)V
     198: aload         4
     200: astore        5
     202: aload         5
     204: arraylength
     205: istore        6
     207: iconst_0
     208: istore        7
     210: iload         7
     212: iload         6
     214: if_icmpge     251
     217: aload         5
     219: iload         7
     221: aaload
     222: astore        8
     224: aload_1
     225: ldc           #21                 // String
     227: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: pop
     231: aload_1
     232: aload         8
     234: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     237: pop
     238: aload_1
     239: ldc           #82                 // String ;\n
     241: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     244: pop
     245: iinc          7, 1
     248: goto          210
     251: aload_0
     252: invokeinterface #83,  1           // InterfaceMethod com/google/javascript/jscomp/graph/GraphvizGraph.getGraphvizEdges:()Ljava/util/List;
     257: astore        5
     259: aload         5
     261: invokeinterface #30,  1           // InterfaceMethod java/util/List.size:()I
     266: anewarray     #31                 // class java/lang/String
     269: astore        6
     271: iconst_0
     272: istore        7
     274: iload         7
     276: aload         6
     278: arraylength
     279: if_icmpge     341
     282: aload         5
     284: iload         7
     286: invokeinterface #32,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     291: checkcast     #84                 // class com/google/javascript/jscomp/graph/GraphvizGraph$GraphvizEdge
     294: astore        8
     296: aload         6
     298: iload         7
     300: new           #6                  // class java/lang/StringBuilder
     303: dup
     304: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
     307: aload         8
     309: invokeinterface #85,  1           // InterfaceMethod com/google/javascript/jscomp/graph/GraphvizGraph$GraphvizEdge.getNode1Id:()Ljava/lang/String;
     314: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     317: aload_2
     318: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     321: aload         8
     323: invokeinterface #86,  1           // InterfaceMethod com/google/javascript/jscomp/graph/GraphvizGraph$GraphvizEdge.getNode2Id:()Ljava/lang/String;
     328: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     331: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     334: aastore
     335: iinc          7, 1
     338: goto          274
     341: aload         6
     343: invokestatic  #46                 // Method java/util/Arrays.sort:([Ljava/lang/Object;)V
     346: aload         6
     348: astore        7
     350: aload         7
     352: arraylength
     353: istore        8
     355: iconst_0
     356: istore        9
     358: iload         9
     360: iload         8
     362: if_icmpge     399
     365: aload         7
     367: iload         9
     369: aaload
     370: astore        10
     372: aload_1
     373: ldc           #21                 // String
     375: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     378: pop
     379: aload_1
     380: aload         10
     382: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     385: pop
     386: aload_1
     387: ldc           #82                 // String ;\n
     389: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     392: pop
     393: iinc          9, 1
     396: goto          358
     399: aload_1
     400: ldc           #68                 // String }\n
     402: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     405: pop
     406: aload_1
     407: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     410: areturn
}
