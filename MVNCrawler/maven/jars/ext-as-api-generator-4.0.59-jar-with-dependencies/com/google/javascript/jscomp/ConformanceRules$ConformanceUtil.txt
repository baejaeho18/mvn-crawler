Compiled from "ConformanceRules.java"
class com.google.javascript.jscomp.ConformanceRules$ConformanceUtil {
  private com.google.javascript.jscomp.ConformanceRules$ConformanceUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static boolean isCallTarget(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
       4: astore_1
       5: aload_1
       6: invokevirtual #3                  // Method com/google/javascript/rhino/Node.isCall:()Z
       9: ifne          19
      12: aload_1
      13: invokevirtual #4                  // Method com/google/javascript/rhino/Node.isNew:()Z
      16: ifeq          31
      19: aload_1
      20: invokevirtual #5                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      23: aload_0
      24: if_acmpne     31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  static com.google.javascript.rhino.jstype.JSType evaluateTypeString(com.google.javascript.jscomp.AbstractCompiler, java.lang.String) throws com.google.javascript.jscomp.CheckConformance$InvalidRequirementSpec;
    Code:
       0: aload_1
       1: invokestatic  #6                  // Method com/google/javascript/jscomp/parsing/JsDocInfoParser.parseTypeString:(Ljava/lang/String;)Lcom/google/javascript/rhino/Node;
       4: astore_2
       5: aload_2
       6: ifnonnull     19
       9: new           #7                  // class com/google/javascript/jscomp/CheckConformance$InvalidRequirementSpec
      12: dup
      13: ldc           #8                  // String bad type expression
      15: invokespecial #9                  // Method com/google/javascript/jscomp/CheckConformance$InvalidRequirementSpec."<init>":(Ljava/lang/String;)V
      18: athrow
      19: new           #10                 // class com/google/javascript/rhino/JSTypeExpression
      22: dup
      23: aload_2
      24: ldc           #11                 // String conformance
      26: invokespecial #12                 // Method com/google/javascript/rhino/JSTypeExpression."<init>":(Lcom/google/javascript/rhino/Node;Ljava/lang/String;)V
      29: astore_3
      30: aload_3
      31: aconst_null
      32: aload_0
      33: invokevirtual #13                 // Method com/google/javascript/jscomp/AbstractCompiler.getTypeRegistry:()Lcom/google/javascript/rhino/jstype/JSTypeRegistry;
      36: invokevirtual #14                 // Method com/google/javascript/rhino/JSTypeExpression.evaluate:(Lcom/google/javascript/rhino/jstype/StaticScope;Lcom/google/javascript/rhino/jstype/JSTypeRegistry;)Lcom/google/javascript/rhino/jstype/JSType;
      39: areturn

  static boolean validateCall(com.google.javascript.jscomp.AbstractCompiler, com.google.javascript.rhino.Node, com.google.javascript.rhino.jstype.FunctionType, boolean);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method com/google/javascript/rhino/Node.isCall:()Z
       4: ifne          14
       7: aload_1
       8: invokevirtual #4                  // Method com/google/javascript/rhino/Node.isNew:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      22: aload_0
      23: aload_1
      24: aload_2
      25: iload_3
      26: invokestatic  #16                 // Method validateParameterList:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/FunctionType;Z)Z
      29: ifeq          45
      32: aload_1
      33: aload_2
      34: iload_3
      35: invokestatic  #17                 // Method validateThis:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/jstype/FunctionType;Z)Z
      38: ifeq          45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: ireturn

  private static boolean validateThis(com.google.javascript.rhino.Node, com.google.javascript.rhino.jstype.FunctionType, boolean);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method com/google/javascript/rhino/Node.isNew:()Z
       4: ifeq          9
       7: iconst_1
       8: ireturn
       9: aload_1
      10: invokevirtual #18                 // Method com/google/javascript/rhino/jstype/FunctionType.getTypeOfThis:()Lcom/google/javascript/rhino/jstype/JSType;
      13: astore_3
      14: aload_3
      15: invokevirtual #19                 // Method com/google/javascript/rhino/jstype/JSType.isUnknownType:()Z
      18: ifeq          23
      21: iconst_1
      22: ireturn
      23: iload_2
      24: ifeq          37
      27: aload_0
      28: invokevirtual #5                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      31: invokevirtual #20                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      34: goto          44
      37: aload_0
      38: invokevirtual #5                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      41: invokevirtual #5                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      44: astore        4
      46: aload         4
      48: invokevirtual #21                 // Method com/google/javascript/rhino/Node.getJSType:()Lcom/google/javascript/rhino/jstype/JSType;
      51: invokevirtual #22                 // Method com/google/javascript/rhino/jstype/JSType.restrictByNotNullOrUndefined:()Lcom/google/javascript/rhino/jstype/JSType;
      54: astore        5
      56: aload         5
      58: aload_3
      59: invokevirtual #23                 // Method com/google/javascript/rhino/jstype/JSType.isSubtype:(Lcom/google/javascript/rhino/jstype/JSType;)Z
      62: ireturn

  private static boolean validateParameterList(com.google.javascript.jscomp.AbstractCompiler, com.google.javascript.rhino.Node, com.google.javascript.rhino.jstype.FunctionType, boolean);
    Code:
       0: aload_1
       1: invokevirtual #24                 // Method com/google/javascript/rhino/Node.children:()Ljava/lang/Iterable;
       4: invokeinterface #25,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       9: astore        4
      11: aload         4
      13: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      18: pop
      19: iload_3
      20: ifeq          41
      23: aload         4
      25: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          41
      33: aload         4
      35: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: pop
      41: aload_2
      42: invokevirtual #28                 // Method com/google/javascript/rhino/jstype/FunctionType.getParameters:()Ljava/lang/Iterable;
      45: invokeinterface #25,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      50: astore        5
      52: aconst_null
      53: astore        6
      55: aconst_null
      56: astore        7
      58: aload         4
      60: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      65: ifeq          145
      68: aload         5
      70: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      75: ifne          91
      78: aload         6
      80: ifnull        145
      83: aload         6
      85: invokevirtual #29                 // Method com/google/javascript/rhino/Node.isVarArgs:()Z
      88: ifeq          145
      91: aload         5
      93: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      98: ifeq          113
     101: aload         5
     103: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     108: checkcast     #30                 // class com/google/javascript/rhino/Node
     111: astore        6
     113: aload         4
     115: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     120: checkcast     #30                 // class com/google/javascript/rhino/Node
     123: astore        7
     125: aload_0
     126: aload         7
     128: invokestatic  #31                 // Method getJSType:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/jstype/JSType;
     131: aload_0
     132: aload         6
     134: invokestatic  #31                 // Method getJSType:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/jstype/JSType;
     137: invokestatic  #32                 // Method validateParameter:(Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z
     140: ifne          58
     143: iconst_0
     144: ireturn
     145: aload_1
     146: invokevirtual #33                 // Method com/google/javascript/rhino/Node.getChildCount:()I
     149: iconst_1
     150: isub
     151: istore        8
     153: iload_3
     154: ifeq          165
     157: iload         8
     159: ifle          165
     162: iinc          8, -1
     165: aload_2
     166: invokevirtual #34                 // Method com/google/javascript/rhino/jstype/FunctionType.getMinArguments:()I
     169: istore        9
     171: aload_2
     172: invokevirtual #35                 // Method com/google/javascript/rhino/jstype/FunctionType.getMaxArguments:()I
     175: istore        10
     177: iload         9
     179: iload         8
     181: if_icmpgt     195
     184: iload         8
     186: iload         10
     188: if_icmpgt     195
     191: iconst_1
     192: goto          196
     195: iconst_0
     196: ireturn

  static boolean validateParameter(com.google.javascript.rhino.jstype.JSType, com.google.javascript.rhino.jstype.JSType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method com/google/javascript/rhino/jstype/JSType.isSubtype:(Lcom/google/javascript/rhino/jstype/JSType;)Z
       5: ireturn

  static com.google.javascript.rhino.jstype.JSType getJSType(com.google.javascript.jscomp.AbstractCompiler, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #21                 // Method com/google/javascript/rhino/Node.getJSType:()Lcom/google/javascript/rhino/jstype/JSType;
       4: astore_2
       5: aload_2
       6: ifnonnull     17
       9: aload_0
      10: getstatic     #36                 // Field com/google/javascript/rhino/jstype/JSTypeNative.UNKNOWN_TYPE:Lcom/google/javascript/rhino/jstype/JSTypeNative;
      13: invokestatic  #37                 // Method getNativeType:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/JSType;
      16: areturn
      17: aload_2
      18: areturn

  static com.google.javascript.rhino.jstype.JSType getNativeType(com.google.javascript.jscomp.AbstractCompiler, com.google.javascript.rhino.jstype.JSTypeNative);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method com/google/javascript/jscomp/AbstractCompiler.getTypeRegistry:()Lcom/google/javascript/rhino/jstype/JSTypeRegistry;
       4: aload_1
       5: invokevirtual #38                 // Method com/google/javascript/rhino/jstype/JSTypeRegistry.getNativeType:(Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/JSType;
       8: areturn
}
