Compiled from "CodeConsumer.java"
abstract class com.google.javascript.jscomp.CodeConsumer {
  boolean statementNeedsEnded;

  boolean statementStarted;

  boolean sawFunction;

  com.google.javascript.jscomp.CodeConsumer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field statementNeedsEnded:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field statementStarted:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field sawFunction:Z
      19: return

  void startSourceMapping(com.google.javascript.rhino.Node);
    Code:
       0: return

  void endSourceMapping(com.google.javascript.rhino.Node);
    Code:
       0: return

  boolean continueProcessing();
    Code:
       0: iconst_1
       1: ireturn

  abstract char getLastChar();

  void addIdentifier(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method add:(Ljava/lang/String;)V
       5: return

  abstract void append(java.lang.String);

  void appendBlockStart();
    Code:
       0: aload_0
       1: ldc           #6                  // String {
       3: invokevirtual #7                  // Method append:(Ljava/lang/String;)V
       6: return

  void appendBlockEnd();
    Code:
       0: aload_0
       1: ldc           #8                  // String }
       3: invokevirtual #7                  // Method append:(Ljava/lang/String;)V
       6: return

  void startNewLine();
    Code:
       0: return

  void maybeLineBreak();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method maybeCutLine:()V
       4: return

  void maybeCutLine();
    Code:
       0: return

  void endLine();
    Code:
       0: return

  void notePreferredLineBreak();
    Code:
       0: return

  void beginBlock();
    Code:
       0: aload_0
       1: getfield      #2                  // Field statementNeedsEnded:Z
       4: ifeq          17
       7: aload_0
       8: ldc           #10                 // String ;
      10: invokevirtual #7                  // Method append:(Ljava/lang/String;)V
      13: aload_0
      14: invokevirtual #11                 // Method maybeLineBreak:()V
      17: aload_0
      18: invokevirtual #12                 // Method appendBlockStart:()V
      21: aload_0
      22: invokevirtual #13                 // Method endLine:()V
      25: aload_0
      26: iconst_0
      27: putfield      #2                  // Field statementNeedsEnded:Z
      30: return

  void endBlock();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #14                 // Method endBlock:(Z)V
       5: return

  void endBlock(boolean);
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method appendBlockEnd:()V
       4: iload_1
       5: ifeq          12
       8: aload_0
       9: invokevirtual #13                 // Method endLine:()V
      12: aload_0
      13: iconst_0
      14: putfield      #2                  // Field statementNeedsEnded:Z
      17: return

  void listSeparator();
    Code:
       0: aload_0
       1: ldc           #16                 // String ,
       3: invokevirtual #5                  // Method add:(Ljava/lang/String;)V
       6: aload_0
       7: invokevirtual #11                 // Method maybeLineBreak:()V
      10: return

  void endStatement();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #17                 // Method endStatement:(Z)V
       5: return

  void endStatement(boolean);
    Code:
       0: iload_1
       1: ifeq          22
       4: aload_0
       5: ldc           #10                 // String ;
       7: invokevirtual #7                  // Method append:(Ljava/lang/String;)V
      10: aload_0
      11: invokevirtual #11                 // Method maybeLineBreak:()V
      14: aload_0
      15: iconst_0
      16: putfield      #2                  // Field statementNeedsEnded:Z
      19: goto          34
      22: aload_0
      23: getfield      #3                  // Field statementStarted:Z
      26: ifeq          34
      29: aload_0
      30: iconst_1
      31: putfield      #2                  // Field statementNeedsEnded:Z
      34: return

  void maybeEndStatement();
    Code:
       0: aload_0
       1: getfield      #2                  // Field statementNeedsEnded:Z
       4: ifeq          26
       7: aload_0
       8: ldc           #10                 // String ;
      10: invokevirtual #7                  // Method append:(Ljava/lang/String;)V
      13: aload_0
      14: invokevirtual #11                 // Method maybeLineBreak:()V
      17: aload_0
      18: invokevirtual #13                 // Method endLine:()V
      21: aload_0
      22: iconst_0
      23: putfield      #2                  // Field statementNeedsEnded:Z
      26: aload_0
      27: iconst_1
      28: putfield      #3                  // Field statementStarted:Z
      31: return

  void endFunction(boolean);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field sawFunction:Z
       5: iload_1
       6: ifeq          13
       9: aload_0
      10: invokevirtual #13                 // Method endLine:()V
      13: return

  void endClass(boolean);
    Code:
       0: iload_1
       1: ifeq          8
       4: aload_0
       5: invokevirtual #13                 // Method endLine:()V
       8: return

  void beginCaseBody();
    Code:
       0: aload_0
       1: ldc           #18                 // String :
       3: invokevirtual #7                  // Method append:(Ljava/lang/String;)V
       6: return

  void endCaseBody();
    Code:
       0: return

  void add(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method maybeEndStatement:()V
       4: aload_1
       5: invokevirtual #20                 // Method java/lang/String.isEmpty:()Z
       8: ifeq          12
      11: return
      12: aload_1
      13: iconst_0
      14: invokevirtual #21                 // Method java/lang/String.charAt:(I)C
      17: istore_2
      18: iload_2
      19: invokestatic  #22                 // Method isWordChar:(C)Z
      22: ifne          31
      25: iload_2
      26: bipush        92
      28: if_icmpne     50
      31: aload_0
      32: invokevirtual #23                 // Method getLastChar:()C
      35: invokestatic  #22                 // Method isWordChar:(C)Z
      38: ifeq          50
      41: aload_0
      42: ldc           #24                 // String
      44: invokevirtual #7                  // Method append:(Ljava/lang/String;)V
      47: goto          94
      50: iload_2
      51: bipush        47
      53: if_icmpne     74
      56: aload_0
      57: invokevirtual #23                 // Method getLastChar:()C
      60: bipush        47
      62: if_icmpne     74
      65: aload_0
      66: ldc           #24                 // String
      68: invokevirtual #7                  // Method append:(Ljava/lang/String;)V
      71: goto          94
      74: iload_2
      75: bipush        34
      77: if_icmpne     94
      80: aload_0
      81: invokevirtual #23                 // Method getLastChar:()C
      84: invokestatic  #22                 // Method isWordChar:(C)Z
      87: ifeq          94
      90: aload_0
      91: invokevirtual #25                 // Method maybeInsertSpace:()V
      94: aload_0
      95: aload_1
      96: invokevirtual #7                  // Method append:(Ljava/lang/String;)V
      99: return

  void appendOp(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method append:(Ljava/lang/String;)V
       5: return

  void addOp(java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method maybeEndStatement:()V
       4: aload_1
       5: iconst_0
       6: invokevirtual #21                 // Method java/lang/String.charAt:(I)C
       9: istore_3
      10: aload_0
      11: invokevirtual #23                 // Method getLastChar:()C
      14: istore        4
      16: iload_3
      17: bipush        43
      19: if_icmpeq     28
      22: iload_3
      23: bipush        45
      25: if_icmpne     43
      28: iload         4
      30: iload_3
      31: if_icmpne     43
      34: aload_0
      35: ldc           #24                 // String
      37: invokevirtual #7                  // Method append:(Ljava/lang/String;)V
      40: goto          99
      43: iload_3
      44: invokestatic  #26                 // Method java/lang/Character.isLetter:(C)Z
      47: ifeq          67
      50: iload         4
      52: invokestatic  #22                 // Method isWordChar:(C)Z
      55: ifeq          67
      58: aload_0
      59: ldc           #24                 // String
      61: invokevirtual #7                  // Method append:(Ljava/lang/String;)V
      64: goto          99
      67: iload         4
      69: bipush        45
      71: if_icmpne     80
      74: iload_3
      75: bipush        62
      77: if_icmpeq     93
      80: iload         4
      82: bipush        60
      84: if_icmpne     99
      87: iload_3
      88: bipush        33
      90: if_icmpne     99
      93: aload_0
      94: ldc           #24                 // String
      96: invokevirtual #7                  // Method append:(Ljava/lang/String;)V
      99: aload_0
     100: aload_1
     101: iload_2
     102: invokevirtual #27                 // Method appendOp:(Ljava/lang/String;Z)V
     105: iload_2
     106: ifeq          113
     109: aload_0
     110: invokevirtual #9                  // Method maybeCutLine:()V
     113: return

  void addNumber(double);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getLastChar:()C
       4: istore_3
       5: dload_1
       6: invokestatic  #28                 // Method isNegativeZero:(D)Z
       9: istore        4
      11: dload_1
      12: dconst_0
      13: dcmpg
      14: iflt          22
      17: iload         4
      19: ifeq          34
      22: iload_3
      23: bipush        45
      25: if_icmpne     34
      28: aload_0
      29: ldc           #24                 // String
      31: invokevirtual #5                  // Method add:(Ljava/lang/String;)V
      34: iload         4
      36: ifeq          48
      39: aload_0
      40: ldc           #29                 // String -0
      42: invokevirtual #30                 // Method addConstant:(Ljava/lang/String;)V
      45: goto          273
      48: dload_1
      49: d2l
      50: l2d
      51: dload_1
      52: dcmpl
      53: ifne          251
      56: dload_1
      57: d2l
      58: lstore        5
      60: lload         5
      62: lstore        7
      64: iconst_0
      65: istore        9
      67: dload_1
      68: invokestatic  #31                 // Method java/lang/Math.abs:(D)D
      71: ldc2_w        #32                 // double 100.0d
      74: dcmpl
      75: iflt          117
      78: lload         7
      80: ldc2_w        #34                 // long 10l
      83: ldiv
      84: ldc2_w        #36                 // double 10.0d
      87: iload         9
      89: iconst_1
      90: iadd
      91: i2d
      92: invokestatic  #38                 // Method java/lang/Math.pow:(DD)D
      95: d2l
      96: lmul
      97: lload         5
      99: lcmp
     100: ifne          117
     103: lload         7
     105: ldc2_w        #34                 // long 10l
     108: ldiv
     109: lstore        7
     111: iinc          9, 1
     114: goto          78
     117: iload         9
     119: iconst_2
     120: if_icmple     155
     123: aload_0
     124: new           #39                 // class java/lang/StringBuilder
     127: dup
     128: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     131: lload         7
     133: invokevirtual #41                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     136: ldc           #42                 // String E
     138: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: iload         9
     143: invokevirtual #44                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     146: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     149: invokevirtual #30                 // Method addConstant:(Ljava/lang/String;)V
     152: goto          248
     155: lload         5
     157: invokestatic  #46                 // Method java/lang/Math.abs:(J)J
     160: lstore        10
     162: lload         10
     164: ldc2_w        #47                 // long 1000000000000l
     167: lcmp
     168: ifle          239
     171: lload         10
     173: invokestatic  #49                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
     176: invokevirtual #50                 // Method java/lang/String.length:()I
     179: iconst_2
     180: iadd
     181: lload         10
     183: invokestatic  #51                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
     186: invokevirtual #50                 // Method java/lang/String.length:()I
     189: if_icmpge     239
     192: aload_0
     193: new           #39                 // class java/lang/StringBuilder
     196: dup
     197: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
     200: lload         5
     202: lconst_0
     203: lcmp
     204: ifge          212
     207: ldc           #52                 // String -
     209: goto          214
     212: ldc           #53                 // String
     214: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     217: ldc           #54                 // String 0x
     219: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     222: lload         10
     224: invokestatic  #49                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;
     227: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     233: invokevirtual #30                 // Method addConstant:(Ljava/lang/String;)V
     236: goto          248
     239: aload_0
     240: lload         5
     242: invokestatic  #51                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
     245: invokevirtual #30                 // Method addConstant:(Ljava/lang/String;)V
     248: goto          273
     251: aload_0
     252: dload_1
     253: invokestatic  #55                 // Method java/lang/String.valueOf:(D)Ljava/lang/String;
     256: ldc           #56                 // String .0E
     258: ldc           #42                 // String E
     260: invokevirtual #57                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
     263: ldc           #58                 // String ^(-?)0\\.
     265: ldc           #59                 // String $1.
     267: invokevirtual #60                 // Method java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     270: invokevirtual #30                 // Method addConstant:(Ljava/lang/String;)V
     273: return

  void addConstant(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method add:(Ljava/lang/String;)V
       5: return

  static boolean isNegativeZero(double);
    Code:
       0: dload_0
       1: dconst_0
       2: dcmpl
       3: ifne          22
       6: dconst_1
       7: dload_0
       8: invokestatic  #61                 // Method java/lang/Math.copySign:(DD)D
      11: ldc2_w        #62                 // double -1.0d
      14: dcmpl
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  static boolean isWordChar(char);
    Code:
       0: iload_0
       1: bipush        95
       3: if_icmpeq     19
       6: iload_0
       7: bipush        36
       9: if_icmpeq     19
      12: iload_0
      13: invokestatic  #64                 // Method java/lang/Character.isLetterOrDigit:(C)Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  boolean shouldPreserveExtraBlocks();
    Code:
       0: iconst_0
       1: ireturn

  void maybeInsertSpace();
    Code:
       0: return

  boolean breakAfterBlockFor(com.google.javascript.rhino.Node, boolean);
    Code:
       0: iload_2
       1: ireturn

  void endFile();
    Code:
       0: return
}
