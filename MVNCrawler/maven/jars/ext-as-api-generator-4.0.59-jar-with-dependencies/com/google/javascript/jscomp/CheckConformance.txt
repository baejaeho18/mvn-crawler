Compiled from "CheckConformance.java"
public final class com.google.javascript.jscomp.CheckConformance extends com.google.javascript.jscomp.NodeTraversal$AbstractPostOrderCallback implements com.google.javascript.jscomp.CompilerPass {
  static final com.google.javascript.jscomp.DiagnosticType CONFORMANCE_VIOLATION;

  static final com.google.javascript.jscomp.DiagnosticType CONFORMANCE_POSSIBLE_VIOLATION;

  static final com.google.javascript.jscomp.DiagnosticType INVALID_REQUIREMENT_SPEC;

  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  private final com.google.common.collect.ImmutableList<com.google.javascript.jscomp.CheckConformance$Rule> rules;

  private static final java.util.Set<java.lang.String> EXTENDABLE_FIELDS;

  com.google.javascript.jscomp.CheckConformance(com.google.javascript.jscomp.AbstractCompiler, com.google.common.collect.ImmutableList<com.google.javascript.jscomp.ConformanceConfig>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/javascript/jscomp/NodeTraversal$AbstractPostOrderCallback."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokestatic  #3                  // Method initRules:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/common/collect/ImmutableList;)Lcom/google/common/collect/ImmutableList;
      15: putfield      #4                  // Field rules:Lcom/google/common/collect/ImmutableList;
      18: return

  public void process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #4                  // Field rules:Lcom/google/common/collect/ImmutableList;
       4: invokevirtual #5                  // Method com/google/common/collect/ImmutableList.isEmpty:()Z
       7: ifne          19
      10: aload_0
      11: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      14: aload_2
      15: aload_0
      16: invokestatic  #6                  // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      19: return

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #4                  // Field rules:Lcom/google/common/collect/ImmutableList;
       4: invokevirtual #7                  // Method com/google/common/collect/ImmutableList.iterator:()Lcom/google/common/collect/UnmodifiableIterator;
       7: astore        4
       9: aload         4
      11: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          43
      19: aload         4
      21: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #10                 // class com/google/javascript/jscomp/CheckConformance$Rule
      29: astore        5
      31: aload         5
      33: aload_1
      34: aload_2
      35: invokeinterface #11,  3           // InterfaceMethod com/google/javascript/jscomp/CheckConformance$Rule.check:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;)V
      40: goto          9
      43: return

  private static com.google.common.collect.ImmutableList<com.google.javascript.jscomp.CheckConformance$Rule> initRules(com.google.javascript.jscomp.AbstractCompiler, com.google.common.collect.ImmutableList<com.google.javascript.jscomp.ConformanceConfig>);
    Code:
       0: invokestatic  #12                 // Method com/google/common/collect/ImmutableList.builder:()Lcom/google/common/collect/ImmutableList$Builder;
       3: astore_2
       4: aload_0
       5: aload_1
       6: invokestatic  #13                 // Method mergeRequirements:(Lcom/google/javascript/jscomp/AbstractCompiler;Ljava/util/List;)Ljava/util/List;
       9: astore_3
      10: aload_3
      11: invokeinterface #14,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore        4
      18: aload         4
      20: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          63
      28: aload         4
      30: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #15                 // class com/google/javascript/jscomp/Requirement
      38: astore        5
      40: aload_0
      41: aload         5
      43: invokestatic  #16                 // Method initRule:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/Requirement;)Lcom/google/javascript/jscomp/CheckConformance$Rule;
      46: astore        6
      48: aload         6
      50: ifnull        60
      53: aload_2
      54: aload         6
      56: invokevirtual #17                 // Method com/google/common/collect/ImmutableList$Builder.add:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList$Builder;
      59: pop
      60: goto          18
      63: aload_2
      64: invokevirtual #18                 // Method com/google/common/collect/ImmutableList$Builder.build:()Lcom/google/common/collect/ImmutableList;
      67: areturn

  static java.util.List<com.google.javascript.jscomp.Requirement> mergeRequirements(com.google.javascript.jscomp.AbstractCompiler, java.util.List<com.google.javascript.jscomp.ConformanceConfig>);
    Code:
       0: new           #19                 // class java/util/ArrayList
       3: dup
       4: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: new           #21                 // class java/util/HashMap
      11: dup
      12: invokespecial #22                 // Method java/util/HashMap."<init>":()V
      15: astore_3
      16: aload_1
      17: invokeinterface #14,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      22: astore        4
      24: aload         4
      26: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          200
      34: aload         4
      36: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #23                 // class com/google/javascript/jscomp/ConformanceConfig
      44: astore        5
      46: aload         5
      48: invokevirtual #24                 // Method com/google/javascript/jscomp/ConformanceConfig.getRequirementList:()Ljava/util/List;
      51: invokeinterface #14,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      56: astore        6
      58: aload         6
      60: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      65: ifeq          197
      68: aload         6
      70: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #15                 // class com/google/javascript/jscomp/Requirement
      78: astore        7
      80: aload         7
      82: invokevirtual #25                 // Method com/google/javascript/jscomp/Requirement.toBuilder:()Lcom/google/javascript/jscomp/Requirement$Builder;
      85: astore        8
      87: aload         7
      89: invokevirtual #26                 // Method com/google/javascript/jscomp/Requirement.hasRuleId:()Z
      92: ifeq          177
      95: aload         7
      97: invokevirtual #27                 // Method com/google/javascript/jscomp/Requirement.getRuleId:()Ljava/lang/String;
     100: invokevirtual #28                 // Method java/lang/String.isEmpty:()Z
     103: ifeq          117
     106: aload_0
     107: aload         7
     109: ldc           #29                 // String empty rule_id
     111: invokestatic  #30                 // Method reportInvalidRequirement:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/Requirement;Ljava/lang/String;)V
     114: goto          58
     117: aload_3
     118: aload         7
     120: invokevirtual #27                 // Method com/google/javascript/jscomp/Requirement.getRuleId:()Ljava/lang/String;
     123: invokeinterface #31,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     128: ifeq          163
     131: aload_0
     132: aload         7
     134: new           #32                 // class java/lang/StringBuilder
     137: dup
     138: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     141: ldc           #34                 // String two requirements with the same rule_id:
     143: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: aload         7
     148: invokevirtual #27                 // Method com/google/javascript/jscomp/Requirement.getRuleId:()Ljava/lang/String;
     151: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     157: invokestatic  #30                 // Method reportInvalidRequirement:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/Requirement;Ljava/lang/String;)V
     160: goto          58
     163: aload_3
     164: aload         7
     166: invokevirtual #27                 // Method com/google/javascript/jscomp/Requirement.getRuleId:()Ljava/lang/String;
     169: aload         8
     171: invokeinterface #37,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     176: pop
     177: aload         7
     179: invokevirtual #38                 // Method com/google/javascript/jscomp/Requirement.hasExtends:()Z
     182: ifne          194
     185: aload_2
     186: aload         8
     188: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     193: pop
     194: goto          58
     197: goto          24
     200: aload_1
     201: invokeinterface #14,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     206: astore        4
     208: aload         4
     210: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     215: ifeq          460
     218: aload         4
     220: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     225: checkcast     #23                 // class com/google/javascript/jscomp/ConformanceConfig
     228: astore        5
     230: aload         5
     232: invokevirtual #24                 // Method com/google/javascript/jscomp/ConformanceConfig.getRequirementList:()Ljava/util/List;
     235: invokeinterface #14,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     240: astore        6
     242: aload         6
     244: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     249: ifeq          457
     252: aload         6
     254: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     259: checkcast     #15                 // class com/google/javascript/jscomp/Requirement
     262: astore        7
     264: aload         7
     266: invokevirtual #38                 // Method com/google/javascript/jscomp/Requirement.hasExtends:()Z
     269: ifeq          454
     272: aload_3
     273: aload         7
     275: invokevirtual #40                 // Method com/google/javascript/jscomp/Requirement.getExtends:()Ljava/lang/String;
     278: invokeinterface #41,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     283: checkcast     #42                 // class com/google/javascript/jscomp/Requirement$Builder
     286: astore        8
     288: aload         8
     290: ifnonnull     325
     293: aload_0
     294: aload         7
     296: new           #32                 // class java/lang/StringBuilder
     299: dup
     300: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     303: ldc           #43                 // String no requirement with rule_id:
     305: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     308: aload         7
     310: invokevirtual #40                 // Method com/google/javascript/jscomp/Requirement.getExtends:()Ljava/lang/String;
     313: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     316: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     319: invokestatic  #30                 // Method reportInvalidRequirement:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/Requirement;Ljava/lang/String;)V
     322: goto          242
     325: aload         7
     327: invokevirtual #44                 // Method com/google/javascript/jscomp/Requirement.getAllFields:()Ljava/util/Map;
     330: invokeinterface #45,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     335: invokeinterface #46,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     340: astore        9
     342: aload         9
     344: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     349: ifeq          410
     352: aload         9
     354: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     359: checkcast     #47                 // class com/google/protobuf/Descriptors$FieldDescriptor
     362: astore        10
     364: getstatic     #48                 // Field EXTENDABLE_FIELDS:Ljava/util/Set;
     367: aload         10
     369: invokevirtual #49                 // Method com/google/protobuf/Descriptors$FieldDescriptor.getName:()Ljava/lang/String;
     372: invokeinterface #50,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     377: ifne          407
     380: aload_0
     381: aload         7
     383: new           #32                 // class java/lang/StringBuilder
     386: dup
     387: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     390: ldc           #51                 // String extending rules allow only
     392: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     395: getstatic     #48                 // Field EXTENDABLE_FIELDS:Ljava/util/Set;
     398: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     401: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     404: invokestatic  #30                 // Method reportInvalidRequirement:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/Requirement;Ljava/lang/String;)V
     407: goto          342
     410: aload         8
     412: aload         7
     414: invokevirtual #53                 // Method com/google/javascript/jscomp/Requirement.getWhitelistList:()Ljava/util/List;
     417: invokevirtual #54                 // Method com/google/javascript/jscomp/Requirement$Builder.addAllWhitelist:(Ljava/lang/Iterable;)Lcom/google/javascript/jscomp/Requirement$Builder;
     420: pop
     421: aload         8
     423: aload         7
     425: invokevirtual #55                 // Method com/google/javascript/jscomp/Requirement.getWhitelistRegexpList:()Ljava/util/List;
     428: invokevirtual #56                 // Method com/google/javascript/jscomp/Requirement$Builder.addAllWhitelistRegexp:(Ljava/lang/Iterable;)Lcom/google/javascript/jscomp/Requirement$Builder;
     431: pop
     432: aload         8
     434: aload         7
     436: invokevirtual #57                 // Method com/google/javascript/jscomp/Requirement.getOnlyApplyToList:()Ljava/util/List;
     439: invokevirtual #58                 // Method com/google/javascript/jscomp/Requirement$Builder.addAllOnlyApplyTo:(Ljava/lang/Iterable;)Lcom/google/javascript/jscomp/Requirement$Builder;
     442: pop
     443: aload         8
     445: aload         7
     447: invokevirtual #59                 // Method com/google/javascript/jscomp/Requirement.getOnlyApplyToRegexpList:()Ljava/util/List;
     450: invokevirtual #60                 // Method com/google/javascript/jscomp/Requirement$Builder.addAllOnlyApplyToRegexp:(Ljava/lang/Iterable;)Lcom/google/javascript/jscomp/Requirement$Builder;
     453: pop
     454: goto          242
     457: goto          208
     460: new           #19                 // class java/util/ArrayList
     463: dup
     464: aload_2
     465: invokeinterface #61,  1           // InterfaceMethod java/util/List.size:()I
     470: invokespecial #62                 // Method java/util/ArrayList."<init>":(I)V
     473: astore        4
     475: aload_2
     476: invokeinterface #14,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     481: astore        5
     483: aload         5
     485: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     490: ifeq          557
     493: aload         5
     495: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     500: checkcast     #42                 // class com/google/javascript/jscomp/Requirement$Builder
     503: astore        6
     505: aload         6
     507: invokevirtual #63                 // Method com/google/javascript/jscomp/Requirement$Builder.build:()Lcom/google/javascript/jscomp/Requirement;
     510: astore        7
     512: aload_0
     513: aload         7
     515: ldc           #64                 // String whitelist
     517: invokestatic  #65                 // Method checkRequirementList:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/Requirement;Ljava/lang/String;)V
     520: aload_0
     521: aload         7
     523: ldc           #66                 // String whitelist_regexp
     525: invokestatic  #65                 // Method checkRequirementList:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/Requirement;Ljava/lang/String;)V
     528: aload_0
     529: aload         7
     531: ldc           #67                 // String only_apply_to
     533: invokestatic  #65                 // Method checkRequirementList:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/Requirement;Ljava/lang/String;)V
     536: aload_0
     537: aload         7
     539: ldc           #68                 // String only_apply_to_regexp
     541: invokestatic  #65                 // Method checkRequirementList:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/Requirement;Ljava/lang/String;)V
     544: aload         4
     546: aload         7
     548: invokeinterface #39,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     553: pop
     554: goto          483
     557: aload         4
     559: areturn

  private static void checkRequirementList(com.google.javascript.jscomp.AbstractCompiler, com.google.javascript.jscomp.Requirement, java.lang.String);
    Code:
       0: new           #69                 // class java/util/HashSet
       3: dup
       4: invokespecial #70                 // Method java/util/HashSet."<init>":()V
       7: astore_3
       8: aload_1
       9: aload_2
      10: invokestatic  #71                 // Method getRequirementList:(Lcom/google/javascript/jscomp/Requirement;Ljava/lang/String;)Ljava/util/List;
      13: invokeinterface #14,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore        4
      20: aload         4
      22: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          90
      30: aload         4
      32: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #72                 // class java/lang/String
      40: astore        5
      42: aload_3
      43: aload         5
      45: invokeinterface #73,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      50: ifne          87
      53: aload_0
      54: aload_1
      55: new           #32                 // class java/lang/StringBuilder
      58: dup
      59: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      62: ldc           #74                 // String duplicate
      64: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_2
      68: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: ldc           #75                 // String  value:
      73: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload         5
      78: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokestatic  #30                 // Method reportInvalidRequirement:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/Requirement;Ljava/lang/String;)V
      87: goto          20
      90: return

  private static java.util.List<java.lang.String> getRequirementList(com.google.javascript.jscomp.Requirement, java.lang.String);
    Code:
       0: aload_1
       1: astore_2
       2: iconst_m1
       3: istore_3
       4: aload_2
       5: invokevirtual #76                 // Method java/lang/String.hashCode:()I
       8: lookupswitch  { // 4
           -1653850041: 52
           -1317076695: 94
             897009665: 66
            1276183583: 80
               default: 105
          }
      52: aload_2
      53: ldc           #64                 // String whitelist
      55: invokevirtual #77                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      58: ifeq          105
      61: iconst_0
      62: istore_3
      63: goto          105
      66: aload_2
      67: ldc           #66                 // String whitelist_regexp
      69: invokevirtual #77                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      72: ifeq          105
      75: iconst_1
      76: istore_3
      77: goto          105
      80: aload_2
      81: ldc           #67                 // String only_apply_to
      83: invokevirtual #77                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      86: ifeq          105
      89: iconst_2
      90: istore_3
      91: goto          105
      94: aload_2
      95: ldc           #68                 // String only_apply_to_regexp
      97: invokevirtual #77                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     100: ifeq          105
     103: iconst_3
     104: istore_3
     105: iload_3
     106: tableswitch   { // 0 to 3
                     0: 136
                     1: 141
                     2: 146
                     3: 151
               default: 156
          }
     136: aload_0
     137: invokevirtual #53                 // Method com/google/javascript/jscomp/Requirement.getWhitelistList:()Ljava/util/List;
     140: areturn
     141: aload_0
     142: invokevirtual #55                 // Method com/google/javascript/jscomp/Requirement.getWhitelistRegexpList:()Ljava/util/List;
     145: areturn
     146: aload_0
     147: invokevirtual #57                 // Method com/google/javascript/jscomp/Requirement.getOnlyApplyToList:()Ljava/util/List;
     150: areturn
     151: aload_0
     152: invokevirtual #59                 // Method com/google/javascript/jscomp/Requirement.getOnlyApplyToRegexpList:()Ljava/util/List;
     155: areturn
     156: new           #78                 // class java/lang/AssertionError
     159: dup
     160: new           #32                 // class java/lang/StringBuilder
     163: dup
     164: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     167: ldc           #79                 // String Unrecognized field:
     169: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: aload_1
     173: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     179: invokespecial #80                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     182: athrow

  private static com.google.javascript.jscomp.CheckConformance$Rule initRule(com.google.javascript.jscomp.AbstractCompiler, com.google.javascript.jscomp.Requirement);
    Code:
       0: getstatic     #81                 // Field com/google/javascript/jscomp/CheckConformance$1.$SwitchMap$com$google$javascript$jscomp$Requirement$Type:[I
       3: aload_1
       4: invokevirtual #82                 // Method com/google/javascript/jscomp/Requirement.getType:()Lcom/google/javascript/jscomp/Requirement$Type;
       7: invokevirtual #83                 // Method com/google/javascript/jscomp/Requirement$Type.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 10
                     1: 64
                     2: 74
                     3: 84
                     4: 94
                     5: 104
                     6: 104
                     7: 104
                     8: 104
                     9: 114
                    10: 124
               default: 134
          }
      64: new           #84                 // class com/google/javascript/jscomp/ConformanceRules$CustomRuleProxy
      67: dup
      68: aload_0
      69: aload_1
      70: invokespecial #85                 // Method com/google/javascript/jscomp/ConformanceRules$CustomRuleProxy."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/Requirement;)V
      73: areturn
      74: new           #86                 // class com/google/javascript/jscomp/ConformanceRules$BannedCodePattern
      77: dup
      78: aload_0
      79: aload_1
      80: invokespecial #87                 // Method com/google/javascript/jscomp/ConformanceRules$BannedCodePattern."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/Requirement;)V
      83: areturn
      84: new           #88                 // class com/google/javascript/jscomp/ConformanceRules$BannedDependency
      87: dup
      88: aload_0
      89: aload_1
      90: invokespecial #89                 // Method com/google/javascript/jscomp/ConformanceRules$BannedDependency."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/Requirement;)V
      93: areturn
      94: new           #90                 // class com/google/javascript/jscomp/ConformanceRules$BannedName
      97: dup
      98: aload_0
      99: aload_1
     100: invokespecial #91                 // Method com/google/javascript/jscomp/ConformanceRules$BannedName."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/Requirement;)V
     103: areturn
     104: new           #92                 // class com/google/javascript/jscomp/ConformanceRules$BannedProperty
     107: dup
     108: aload_0
     109: aload_1
     110: invokespecial #93                 // Method com/google/javascript/jscomp/ConformanceRules$BannedProperty."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/Requirement;)V
     113: areturn
     114: new           #94                 // class com/google/javascript/jscomp/ConformanceRules$RestrictedNameCall
     117: dup
     118: aload_0
     119: aload_1
     120: invokespecial #95                 // Method com/google/javascript/jscomp/ConformanceRules$RestrictedNameCall."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/Requirement;)V
     123: areturn
     124: new           #96                 // class com/google/javascript/jscomp/ConformanceRules$RestrictedMethodCall
     127: dup
     128: aload_0
     129: aload_1
     130: invokespecial #97                 // Method com/google/javascript/jscomp/ConformanceRules$RestrictedMethodCall."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/Requirement;)V
     133: areturn
     134: aload_0
     135: aload_1
     136: ldc           #98                 // String unknown requirement type
     138: invokestatic  #30                 // Method reportInvalidRequirement:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/Requirement;Ljava/lang/String;)V
     141: aconst_null
     142: areturn
     143: astore_2
     144: aload_0
     145: aload_1
     146: aload_2
     147: invokevirtual #100                // Method com/google/javascript/jscomp/CheckConformance$InvalidRequirementSpec.getMessage:()Ljava/lang/String;
     150: invokestatic  #30                 // Method reportInvalidRequirement:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/Requirement;Ljava/lang/String;)V
     153: aconst_null
     154: areturn
    Exception table:
       from    to  target type
           0    73   143   Class com/google/javascript/jscomp/CheckConformance$InvalidRequirementSpec
          74    83   143   Class com/google/javascript/jscomp/CheckConformance$InvalidRequirementSpec
          84    93   143   Class com/google/javascript/jscomp/CheckConformance$InvalidRequirementSpec
          94   103   143   Class com/google/javascript/jscomp/CheckConformance$InvalidRequirementSpec
         104   113   143   Class com/google/javascript/jscomp/CheckConformance$InvalidRequirementSpec
         114   123   143   Class com/google/javascript/jscomp/CheckConformance$InvalidRequirementSpec
         124   133   143   Class com/google/javascript/jscomp/CheckConformance$InvalidRequirementSpec
         134   142   143   Class com/google/javascript/jscomp/CheckConformance$InvalidRequirementSpec

  private static void reportInvalidRequirement(com.google.javascript.jscomp.AbstractCompiler, com.google.javascript.jscomp.Requirement, java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #101                // Field INVALID_REQUIREMENT_SPEC:Lcom/google/javascript/jscomp/DiagnosticType;
       4: iconst_2
       5: anewarray     #72                 // class java/lang/String
       8: dup
       9: iconst_0
      10: aload_2
      11: aastore
      12: dup
      13: iconst_1
      14: aload_1
      15: invokestatic  #102                // Method com/google/protobuf/TextFormat.printToString:(Lcom/google/protobuf/MessageOrBuilder;)Ljava/lang/String;
      18: aastore
      19: invokestatic  #103                // Method com/google/javascript/jscomp/JSError.make:(Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)Lcom/google/javascript/jscomp/JSError;
      22: invokevirtual #104                // Method com/google/javascript/jscomp/AbstractCompiler.report:(Lcom/google/javascript/jscomp/JSError;)V
      25: return

  static {};
    Code:
       0: ldc           #105                // String JSC_CONFORMANCE_VIOLATION
       2: ldc           #106                // String Violation: {0}
       4: invokestatic  #107                // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
       7: putstatic     #108                // Field CONFORMANCE_VIOLATION:Lcom/google/javascript/jscomp/DiagnosticType;
      10: ldc           #109                // String JSC_CONFORMANCE_POSSIBLE_VIOLATION
      12: ldc           #110                // String Possible violation: {0}
      14: invokestatic  #107                // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      17: putstatic     #111                // Field CONFORMANCE_POSSIBLE_VIOLATION:Lcom/google/javascript/jscomp/DiagnosticType;
      20: ldc           #112                // String JSC_INVALID_REQUIREMENT_SPEC
      22: ldc           #113                // String Invalid requirement. Reason: {0}\nRequirement spec:\n{1}
      24: invokestatic  #114                // Method com/google/javascript/jscomp/DiagnosticType.error:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      27: putstatic     #101                // Field INVALID_REQUIREMENT_SPEC:Lcom/google/javascript/jscomp/DiagnosticType;
      30: ldc           #115                // String extends
      32: ldc           #64                 // String whitelist
      34: ldc           #66                 // String whitelist_regexp
      36: ldc           #67                 // String only_apply_to
      38: ldc           #68                 // String only_apply_to_regexp
      40: invokestatic  #116                // Method com/google/common/collect/ImmutableSet.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      43: putstatic     #48                 // Field EXTENDABLE_FIELDS:Ljava/util/Set;
      46: return
}
