Compiled from "RenamePrototypes.java"
class com.google.javascript.jscomp.RenamePrototypes implements com.google.javascript.jscomp.CompilerPass {
  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  private final boolean aggressiveRenaming;

  private final char[] reservedCharacters;

  private final com.google.javascript.jscomp.VariableMap prevUsedRenameMap;

  private static final java.util.Comparator<com.google.javascript.jscomp.RenamePrototypes$Property> FREQUENCY_COMPARATOR;

  private final java.util.Set<com.google.javascript.rhino.Node> stringNodes;

  private final java.util.Map<java.lang.String, com.google.javascript.jscomp.RenamePrototypes$Property> properties;

  private final java.util.Set<java.lang.String> reservedNames;

  private final java.util.Set<com.google.javascript.rhino.Node> prototypeObjLits;

  com.google.javascript.jscomp.RenamePrototypes(com.google.javascript.jscomp.AbstractCompiler, boolean, char[], com.google.javascript.jscomp.VariableMap);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #8                  // class java/util/HashSet
       8: dup
       9: invokespecial #9                  // Method java/util/HashSet."<init>":()V
      12: putfield      #2                  // Field stringNodes:Ljava/util/Set;
      15: aload_0
      16: new           #10                 // class java/util/HashMap
      19: dup
      20: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      23: putfield      #1                  // Field properties:Ljava/util/Map;
      26: aload_0
      27: new           #8                  // class java/util/HashSet
      30: dup
      31: iconst_4
      32: anewarray     #12                 // class java/lang/String
      35: dup
      36: iconst_0
      37: ldc           #13                 // String indexOf
      39: aastore
      40: dup
      41: iconst_1
      42: ldc           #14                 // String lastIndexOf
      44: aastore
      45: dup
      46: iconst_2
      47: ldc           #15                 // String toString
      49: aastore
      50: dup
      51: iconst_3
      52: ldc           #16                 // String valueOf
      54: aastore
      55: invokestatic  #17                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      58: invokespecial #18                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      61: putfield      #4                  // Field reservedNames:Ljava/util/Set;
      64: aload_0
      65: new           #8                  // class java/util/HashSet
      68: dup
      69: invokespecial #9                  // Method java/util/HashSet."<init>":()V
      72: putfield      #3                  // Field prototypeObjLits:Ljava/util/Set;
      75: aload_0
      76: aload_1
      77: putfield      #6                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      80: aload_0
      81: iload_2
      82: putfield      #5                  // Field aggressiveRenaming:Z
      85: aload_0
      86: aload_3
      87: putfield      #19                 // Field reservedCharacters:[C
      90: aload_0
      91: aload         4
      93: putfield      #20                 // Field prevUsedRenameMap:Lcom/google/javascript/jscomp/VariableMap;
      96: return

  public void process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #6                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: invokevirtual #21                 // Method com/google/javascript/jscomp/AbstractCompiler.getLifeCycleStage:()Lcom/google/javascript/jscomp/AbstractCompiler$LifeCycleStage;
       7: invokevirtual #22                 // Method com/google/javascript/jscomp/AbstractCompiler$LifeCycleStage.isNormalized:()Z
      10: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      13: aload_0
      14: getfield      #6                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      17: aload_1
      18: new           #24                 // class com/google/javascript/jscomp/RenamePrototypes$ProcessExternedProperties
      21: dup
      22: aload_0
      23: aconst_null
      24: invokespecial #25                 // Method com/google/javascript/jscomp/RenamePrototypes$ProcessExternedProperties."<init>":(Lcom/google/javascript/jscomp/RenamePrototypes;Lcom/google/javascript/jscomp/RenamePrototypes$1;)V
      27: invokestatic  #26                 // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      30: aload_0
      31: getfield      #6                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      34: aload_2
      35: new           #27                 // class com/google/javascript/jscomp/RenamePrototypes$ProcessProperties
      38: dup
      39: aload_0
      40: aconst_null
      41: invokespecial #28                 // Method com/google/javascript/jscomp/RenamePrototypes$ProcessProperties."<init>":(Lcom/google/javascript/jscomp/RenamePrototypes;Lcom/google/javascript/jscomp/RenamePrototypes$1;)V
      44: invokestatic  #26                 // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      47: new           #29                 // class java/util/TreeSet
      50: dup
      51: getstatic     #30                 // Field FREQUENCY_COMPARATOR:Ljava/util/Comparator;
      54: invokespecial #31                 // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
      57: astore_3
      58: aload_0
      59: getfield      #1                  // Field properties:Ljava/util/Map;
      62: invokeinterface #32,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      67: invokeinterface #33,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      72: astore        4
      74: aload         4
      76: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      81: ifeq          166
      84: aload         4
      86: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      91: checkcast     #36                 // class java/util/Map$Entry
      94: invokeinterface #37,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      99: checkcast     #38                 // class com/google/javascript/jscomp/RenamePrototypes$Property
     102: astore        5
     104: aload         5
     106: invokevirtual #39                 // Method com/google/javascript/jscomp/RenamePrototypes$Property.canRename:()Z
     109: ifeq          141
     112: aload_0
     113: getfield      #4                  // Field reservedNames:Ljava/util/Set;
     116: aload         5
     118: getfield      #40                 // Field com/google/javascript/jscomp/RenamePrototypes$Property.oldName:Ljava/lang/String;
     121: invokeinterface #41,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     126: ifne          141
     129: aload_3
     130: aload         5
     132: invokeinterface #42,  2           // InterfaceMethod java/util/SortedSet.add:(Ljava/lang/Object;)Z
     137: pop
     138: goto          163
     141: aload         4
     143: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.remove:()V
     148: aload_0
     149: getfield      #4                  // Field reservedNames:Ljava/util/Set;
     152: aload         5
     154: getfield      #40                 // Field com/google/javascript/jscomp/RenamePrototypes$Property.oldName:Ljava/lang/String;
     157: invokeinterface #44,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     162: pop
     163: goto          74
     166: aload_0
     167: getfield      #20                 // Field prevUsedRenameMap:Lcom/google/javascript/jscomp/VariableMap;
     170: ifnull        178
     173: aload_0
     174: aload_3
     175: invokespecial #45                 // Method reusePrototypeNames:(Ljava/util/Set;)V
     178: new           #46                 // class com/google/javascript/jscomp/NameGenerator
     181: dup
     182: aload_0
     183: getfield      #4                  // Field reservedNames:Ljava/util/Set;
     186: ldc           #47                 // String
     188: aload_0
     189: getfield      #19                 // Field reservedCharacters:[C
     192: invokespecial #48                 // Method com/google/javascript/jscomp/NameGenerator."<init>":(Ljava/util/Set;Ljava/lang/String;[C)V
     195: astore        4
     197: new           #49                 // class java/lang/StringBuilder
     200: dup
     201: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
     204: astore        5
     206: aload_3
     207: invokeinterface #51,  1           // InterfaceMethod java/util/SortedSet.iterator:()Ljava/util/Iterator;
     212: astore        6
     214: aload         6
     216: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     221: ifeq          301
     224: aload         6
     226: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     231: checkcast     #38                 // class com/google/javascript/jscomp/RenamePrototypes$Property
     234: astore        7
     236: aload         7
     238: getfield      #52                 // Field com/google/javascript/jscomp/RenamePrototypes$Property.newName:Ljava/lang/String;
     241: ifnonnull     269
     244: aload         7
     246: aload         4
     248: invokevirtual #53                 // Method com/google/javascript/jscomp/NameGenerator.generateNextName:()Ljava/lang/String;
     251: putfield      #52                 // Field com/google/javascript/jscomp/RenamePrototypes$Property.newName:Ljava/lang/String;
     254: aload_0
     255: getfield      #4                  // Field reservedNames:Ljava/util/Set;
     258: aload         7
     260: getfield      #52                 // Field com/google/javascript/jscomp/RenamePrototypes$Property.newName:Ljava/lang/String;
     263: invokeinterface #44,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     268: pop
     269: aload         5
     271: aload         7
     273: getfield      #40                 // Field com/google/javascript/jscomp/RenamePrototypes$Property.oldName:Ljava/lang/String;
     276: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     279: ldc           #55                 // String  =>
     281: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     284: aload         7
     286: getfield      #52                 // Field com/google/javascript/jscomp/RenamePrototypes$Property.newName:Ljava/lang/String;
     289: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     292: bipush        10
     294: invokevirtual #56                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     297: pop
     298: goto          214
     301: aload_0
     302: getfield      #6                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
     305: new           #49                 // class java/lang/StringBuilder
     308: dup
     309: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
     312: ldc           #57                 // String JS property assignments:\n
     314: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     317: aload         5
     319: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     322: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     325: invokevirtual #60                 // Method com/google/javascript/jscomp/AbstractCompiler.addToDebugLog:(Ljava/lang/String;)V
     328: iconst_0
     329: istore        6
     331: aload_0
     332: getfield      #2                  // Field stringNodes:Ljava/util/Set;
     335: invokeinterface #33,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     340: astore        7
     342: aload         7
     344: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     349: ifeq          438
     352: aload         7
     354: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     359: checkcast     #61                 // class com/google/javascript/rhino/Node
     362: astore        8
     364: aload         8
     366: invokevirtual #62                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
     369: astore        9
     371: aload_0
     372: getfield      #1                  // Field properties:Ljava/util/Map;
     375: aload         9
     377: invokeinterface #63,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     382: checkcast     #38                 // class com/google/javascript/jscomp/RenamePrototypes$Property
     385: astore        10
     387: aload         10
     389: ifnull        435
     392: aload         10
     394: getfield      #52                 // Field com/google/javascript/jscomp/RenamePrototypes$Property.newName:Ljava/lang/String;
     397: ifnull        435
     400: aload         8
     402: aload         10
     404: getfield      #52                 // Field com/google/javascript/jscomp/RenamePrototypes$Property.newName:Ljava/lang/String;
     407: invokevirtual #64                 // Method com/google/javascript/rhino/Node.setString:(Ljava/lang/String;)V
     410: iload         6
     412: ifne          428
     415: aload         10
     417: getfield      #52                 // Field com/google/javascript/jscomp/RenamePrototypes$Property.newName:Ljava/lang/String;
     420: aload         9
     422: invokevirtual #65                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     425: ifne          432
     428: iconst_1
     429: goto          433
     432: iconst_0
     433: istore        6
     435: goto          342
     438: iload         6
     440: ifeq          450
     443: aload_0
     444: getfield      #6                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
     447: invokevirtual #66                 // Method com/google/javascript/jscomp/AbstractCompiler.reportCodeChange:()V
     450: aload_0
     451: getfield      #6                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
     454: getstatic     #67                 // Field com/google/javascript/jscomp/AbstractCompiler$LifeCycleStage.NORMALIZED_OBFUSCATED:Lcom/google/javascript/jscomp/AbstractCompiler$LifeCycleStage;
     457: invokevirtual #68                 // Method com/google/javascript/jscomp/AbstractCompiler.setLifeCycleStage:(Lcom/google/javascript/jscomp/AbstractCompiler$LifeCycleStage;)V
     460: return

  private void reusePrototypeNames(java.util.Set<com.google.javascript.jscomp.RenamePrototypes$Property>);
    Code:
       0: aload_1
       1: invokeinterface #33,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          82
      16: aload_2
      17: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #38                 // class com/google/javascript/jscomp/RenamePrototypes$Property
      25: astore_3
      26: aload_0
      27: getfield      #20                 // Field prevUsedRenameMap:Lcom/google/javascript/jscomp/VariableMap;
      30: aload_3
      31: getfield      #40                 // Field com/google/javascript/jscomp/RenamePrototypes$Property.oldName:Ljava/lang/String;
      34: invokevirtual #69                 // Method com/google/javascript/jscomp/VariableMap.lookupNewName:(Ljava/lang/String;)Ljava/lang/String;
      37: astore        4
      39: aload         4
      41: ifnull        79
      44: aload_0
      45: getfield      #4                  // Field reservedNames:Ljava/util/Set;
      48: aload         4
      50: invokeinterface #41,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      55: ifeq          61
      58: goto          7
      61: aload_3
      62: aload         4
      64: putfield      #52                 // Field com/google/javascript/jscomp/RenamePrototypes$Property.newName:Ljava/lang/String;
      67: aload_0
      68: getfield      #4                  // Field reservedNames:Ljava/util/Set;
      71: aload         4
      73: invokeinterface #44,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      78: pop
      79: goto          7
      82: return

  com.google.javascript.jscomp.VariableMap getPropertyMap();
    Code:
       0: invokestatic  #70                 // Method com/google/common/collect/ImmutableMap.builder:()Lcom/google/common/collect/ImmutableMap$Builder;
       3: astore_1
       4: aload_0
       5: getfield      #1                  // Field properties:Ljava/util/Map;
       8: invokeinterface #71,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      13: invokeinterface #72,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          61
      28: aload_2
      29: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #38                 // class com/google/javascript/jscomp/RenamePrototypes$Property
      37: astore_3
      38: aload_3
      39: getfield      #52                 // Field com/google/javascript/jscomp/RenamePrototypes$Property.newName:Ljava/lang/String;
      42: ifnull        58
      45: aload_1
      46: aload_3
      47: getfield      #40                 // Field com/google/javascript/jscomp/RenamePrototypes$Property.oldName:Ljava/lang/String;
      50: aload_3
      51: getfield      #52                 // Field com/google/javascript/jscomp/RenamePrototypes$Property.newName:Ljava/lang/String;
      54: invokevirtual #73                 // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
      57: pop
      58: goto          19
      61: new           #74                 // class com/google/javascript/jscomp/VariableMap
      64: dup
      65: aload_1
      66: invokevirtual #75                 // Method com/google/common/collect/ImmutableMap$Builder.build:()Lcom/google/common/collect/ImmutableMap;
      69: invokespecial #76                 // Method com/google/javascript/jscomp/VariableMap."<init>":(Ljava/util/Map;)V
      72: areturn

  static com.google.javascript.jscomp.AbstractCompiler access$000(com.google.javascript.jscomp.RenamePrototypes);
    Code:
       0: aload_0
       1: getfield      #6                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: areturn

  static boolean access$100(com.google.javascript.jscomp.RenamePrototypes);
    Code:
       0: aload_0
       1: getfield      #5                  // Field aggressiveRenaming:Z
       4: ireturn

  static java.util.Set access$400(com.google.javascript.jscomp.RenamePrototypes);
    Code:
       0: aload_0
       1: getfield      #4                  // Field reservedNames:Ljava/util/Set;
       4: areturn

  static java.util.Set access$500(com.google.javascript.jscomp.RenamePrototypes);
    Code:
       0: aload_0
       1: getfield      #3                  // Field prototypeObjLits:Ljava/util/Set;
       4: areturn

  static java.util.Set access$600(com.google.javascript.jscomp.RenamePrototypes);
    Code:
       0: aload_0
       1: getfield      #2                  // Field stringNodes:Ljava/util/Set;
       4: areturn

  static java.util.Map access$700(com.google.javascript.jscomp.RenamePrototypes);
    Code:
       0: aload_0
       1: getfield      #1                  // Field properties:Ljava/util/Map;
       4: areturn

  static {};
    Code:
       0: new           #77                 // class com/google/javascript/jscomp/RenamePrototypes$1
       3: dup
       4: invokespecial #78                 // Method com/google/javascript/jscomp/RenamePrototypes$1."<init>":()V
       7: putstatic     #30                 // Field FREQUENCY_COMPARATOR:Ljava/util/Comparator;
      10: return
}
