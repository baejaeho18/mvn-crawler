Compiled from "CallGraph.java"
public class com.google.javascript.jscomp.CallGraph$Function {
  private final com.google.javascript.rhino.Node astNode;

  private boolean isAliased;

  private boolean isExposedToCallOrApply;

  private java.util.Collection<com.google.javascript.jscomp.CallGraph$Callsite> callsitesInFunction;

  private java.util.Collection<com.google.javascript.jscomp.CallGraph$Callsite> callsitesPossiblyTargetingFunction;

  final com.google.javascript.jscomp.CallGraph this$0;

  private com.google.javascript.jscomp.CallGraph$Function(com.google.javascript.jscomp.CallGraph, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field this$0:Lcom/google/javascript/jscomp/CallGraph;
       5: aload_0
       6: invokespecial #8                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iconst_0
      11: putfield      #2                  // Field isAliased:Z
      14: aload_0
      15: iconst_0
      16: putfield      #3                  // Field isExposedToCallOrApply:Z
      19: aload_0
      20: aload_2
      21: putfield      #9                  // Field astNode:Lcom/google/javascript/rhino/Node;
      24: return

  public boolean isMain();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field this$0:Lcom/google/javascript/jscomp/CallGraph;
       5: invokestatic  #10                 // Method com/google/javascript/jscomp/CallGraph.access$1400:(Lcom/google/javascript/jscomp/CallGraph;)Lcom/google/javascript/jscomp/CallGraph$Function;
       8: if_acmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public com.google.javascript.rhino.Node getAstNode();
    Code:
       0: aload_0
       1: getfield      #9                  // Field astNode:Lcom/google/javascript/rhino/Node;
       4: areturn

  public com.google.javascript.rhino.Node getBodyNode();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method isMain:()Z
       4: ifeq          12
       7: aload_0
       8: getfield      #9                  // Field astNode:Lcom/google/javascript/rhino/Node;
      11: areturn
      12: aload_0
      13: getfield      #9                  // Field astNode:Lcom/google/javascript/rhino/Node;
      16: invokestatic  #12                 // Method com/google/javascript/jscomp/NodeUtil.getFunctionBody:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      19: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method isMain:()Z
       4: ifeq          10
       7: ldc           #13                 // String {main}
       9: areturn
      10: aload_0
      11: getfield      #9                  // Field astNode:Lcom/google/javascript/rhino/Node;
      14: invokestatic  #14                 // Method com/google/javascript/jscomp/NodeUtil.getFunctionName:(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;
      17: areturn

  public java.util.Collection<com.google.javascript.jscomp.CallGraph$Callsite> getCallsitesInFunction();
    Code:
       0: aload_0
       1: getfield      #15                 // Field callsitesInFunction:Ljava/util/Collection;
       4: ifnull        12
       7: aload_0
       8: getfield      #15                 // Field callsitesInFunction:Ljava/util/Collection;
      11: areturn
      12: invokestatic  #16                 // Method com/google/common/collect/ImmutableList.of:()Lcom/google/common/collect/ImmutableList;
      15: areturn

  private void addCallsiteInFunction(com.google.javascript.jscomp.CallGraph$Callsite);
    Code:
       0: aload_0
       1: getfield      #15                 // Field callsitesInFunction:Ljava/util/Collection;
       4: ifnonnull     18
       7: aload_0
       8: new           #17                 // class java/util/LinkedList
      11: dup
      12: invokespecial #18                 // Method java/util/LinkedList."<init>":()V
      15: putfield      #15                 // Field callsitesInFunction:Ljava/util/Collection;
      18: aload_0
      19: getfield      #15                 // Field callsitesInFunction:Ljava/util/Collection;
      22: aload_1
      23: invokeinterface #19,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      28: pop
      29: return

  public java.util.Collection<com.google.javascript.jscomp.CallGraph$Callsite> getCallsitesPossiblyTargetingFunction();
    Code:
       0: aload_0
       1: getfield      #7                  // Field this$0:Lcom/google/javascript/jscomp/CallGraph;
       4: invokestatic  #20                 // Method com/google/javascript/jscomp/CallGraph.access$1500:(Lcom/google/javascript/jscomp/CallGraph;)Z
       7: ifeq          26
      10: aload_0
      11: getfield      #21                 // Field callsitesPossiblyTargetingFunction:Ljava/util/Collection;
      14: ifnull        22
      17: aload_0
      18: getfield      #21                 // Field callsitesPossiblyTargetingFunction:Ljava/util/Collection;
      21: areturn
      22: invokestatic  #16                 // Method com/google/common/collect/ImmutableList.of:()Lcom/google/common/collect/ImmutableList;
      25: areturn
      26: new           #22                 // class java/lang/UnsupportedOperationException
      29: dup
      30: ldc           #23                 // String Cannot call getCallsitesPossiblyTargetingFunction() on a Function from a non-backward CallGraph
      32: invokespecial #24                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      35: athrow

  private void addCallsitePossiblyTargetingFunction(com.google.javascript.jscomp.CallGraph$Callsite);
    Code:
       0: aload_0
       1: getfield      #7                  // Field this$0:Lcom/google/javascript/jscomp/CallGraph;
       4: invokestatic  #20                 // Method com/google/javascript/jscomp/CallGraph.access$1500:(Lcom/google/javascript/jscomp/CallGraph;)Z
       7: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      10: aload_0
      11: getfield      #21                 // Field callsitesPossiblyTargetingFunction:Ljava/util/Collection;
      14: ifnonnull     28
      17: aload_0
      18: new           #17                 // class java/util/LinkedList
      21: dup
      22: invokespecial #18                 // Method java/util/LinkedList."<init>":()V
      25: putfield      #21                 // Field callsitesPossiblyTargetingFunction:Ljava/util/Collection;
      28: aload_0
      29: getfield      #21                 // Field callsitesPossiblyTargetingFunction:Ljava/util/Collection;
      32: aload_1
      33: invokeinterface #19,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      38: pop
      39: return

  public boolean isAliased();
    Code:
       0: aload_0
       1: getfield      #2                  // Field isAliased:Z
       4: ireturn

  public boolean isExposedToCallOrApply();
    Code:
       0: aload_0
       1: getfield      #3                  // Field isExposedToCallOrApply:Z
       4: ireturn

  static void access$400(com.google.javascript.jscomp.CallGraph$Function, com.google.javascript.jscomp.CallGraph$Callsite);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method addCallsiteInFunction:(Lcom/google/javascript/jscomp/CallGraph$Callsite;)V
       5: return

  com.google.javascript.jscomp.CallGraph$Function(com.google.javascript.jscomp.CallGraph, com.google.javascript.rhino.Node, com.google.javascript.jscomp.CallGraph$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #5                  // Method "<init>":(Lcom/google/javascript/jscomp/CallGraph;Lcom/google/javascript/rhino/Node;)V
       6: return

  static void access$1100(com.google.javascript.jscomp.CallGraph$Function, com.google.javascript.jscomp.CallGraph$Callsite);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method addCallsitePossiblyTargetingFunction:(Lcom/google/javascript/jscomp/CallGraph$Callsite;)V
       5: return

  static boolean access$1202(com.google.javascript.jscomp.CallGraph$Function, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #3                  // Field isExposedToCallOrApply:Z
       6: ireturn

  static boolean access$1302(com.google.javascript.jscomp.CallGraph$Function, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #2                  // Field isAliased:Z
       6: ireturn
}
