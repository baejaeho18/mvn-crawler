Compiled from "CompilerInput.java"
class com.google.javascript.jscomp.CompilerInput$DepsFinder {
  private boolean isModuleFile;

  private final java.util.List<java.lang.String> provides;

  private final java.util.List<java.lang.String> requires;

  private final com.google.javascript.jscomp.CodingConvention codingConvention;

  private com.google.javascript.jscomp.CompilerInput$DepsFinder();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #6                  // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
       8: putfield      #2                  // Field provides:Ljava/util/List;
      11: aload_0
      12: invokestatic  #6                  // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
      15: putfield      #1                  // Field requires:Ljava/util/List;
      18: aload_0
      19: new           #7                  // class com/google/javascript/jscomp/ClosureCodingConvention
      22: dup
      23: invokespecial #8                  // Method com/google/javascript/jscomp/ClosureCodingConvention."<init>":()V
      26: putfield      #9                  // Field codingConvention:Lcom/google/javascript/jscomp/CodingConvention;
      29: return

  void visitTree(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #10                 // Method visitSubtree:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
       6: return

  void visitSubtree(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method com/google/javascript/rhino/Node.isCall:()Z
       4: ifeq          89
       7: aload_0
       8: getfield      #9                  // Field codingConvention:Lcom/google/javascript/jscomp/CodingConvention;
      11: aload_1
      12: aload_2
      13: invokeinterface #12,  3           // InterfaceMethod com/google/javascript/jscomp/CodingConvention.extractIsModuleFile:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z
      18: istore_3
      19: iload_3
      20: ifeq          28
      23: aload_0
      24: iconst_1
      25: putfield      #3                  // Field isModuleFile:Z
      28: aload_0
      29: getfield      #9                  // Field codingConvention:Lcom/google/javascript/jscomp/CodingConvention;
      32: aload_1
      33: aload_2
      34: invokeinterface #13,  3           // InterfaceMethod com/google/javascript/jscomp/CodingConvention.extractClassNameIfRequire:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Ljava/lang/String;
      39: astore        4
      41: aload         4
      43: ifnull        58
      46: aload_0
      47: getfield      #1                  // Field requires:Ljava/util/List;
      50: aload         4
      52: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      57: pop
      58: aload_0
      59: getfield      #9                  // Field codingConvention:Lcom/google/javascript/jscomp/CodingConvention;
      62: aload_1
      63: aload_2
      64: invokeinterface #15,  3           // InterfaceMethod com/google/javascript/jscomp/CodingConvention.extractClassNameIfProvide:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Ljava/lang/String;
      69: astore        5
      71: aload         5
      73: ifnull        88
      76: aload_0
      77: getfield      #2                  // Field provides:Ljava/util/List;
      80: aload         5
      82: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      87: pop
      88: return
      89: aload_2
      90: ifnull        108
      93: aload_2
      94: invokevirtual #16                 // Method com/google/javascript/rhino/Node.isExprResult:()Z
      97: ifne          108
     100: aload_2
     101: invokevirtual #17                 // Method com/google/javascript/rhino/Node.isScript:()Z
     104: ifne          108
     107: return
     108: aload_1
     109: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     112: astore_3
     113: aload_3
     114: ifnull        131
     117: aload_0
     118: aload_3
     119: aload_1
     120: invokevirtual #10                 // Method visitSubtree:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
     123: aload_3
     124: invokevirtual #19                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
     127: astore_3
     128: goto          113
     131: return

  com.google.javascript.jscomp.CompilerInput$DepsFinder(com.google.javascript.jscomp.CompilerInput$1);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method "<init>":()V
       4: return

  static boolean access$100(com.google.javascript.jscomp.CompilerInput$DepsFinder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field isModuleFile:Z
       4: ireturn

  static java.util.List access$200(com.google.javascript.jscomp.CompilerInput$DepsFinder);
    Code:
       0: aload_0
       1: getfield      #2                  // Field provides:Ljava/util/List;
       4: areturn

  static java.util.List access$300(com.google.javascript.jscomp.CompilerInput$DepsFinder);
    Code:
       0: aload_0
       1: getfield      #1                  // Field requires:Ljava/util/List;
       4: areturn
}
