Compiled from "ChainableReverseAbstractInterpreter.java"
public abstract class com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter implements com.google.javascript.jscomp.type.ReverseAbstractInterpreter {
  final com.google.javascript.rhino.jstype.JSTypeRegistry typeRegistry;

  private com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter firstLink;

  private com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter nextLink;

  private final com.google.javascript.rhino.jstype.Visitor<com.google.javascript.rhino.jstype.JSType> restrictUndefinedVisitor;

  private final com.google.javascript.rhino.jstype.Visitor<com.google.javascript.rhino.jstype.JSType> restrictNullVisitor;

  public com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter(com.google.javascript.rhino.jstype.JSTypeRegistry);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter$1
       8: dup
       9: aload_0
      10: invokespecial #4                  // Method com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter$1."<init>":(Lcom/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter;)V
      13: putfield      #5                  // Field restrictUndefinedVisitor:Lcom/google/javascript/rhino/jstype/Visitor;
      16: aload_0
      17: new           #6                  // class com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter$2
      20: dup
      21: aload_0
      22: invokespecial #7                  // Method com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter$2."<init>":(Lcom/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter;)V
      25: putfield      #8                  // Field restrictNullVisitor:Lcom/google/javascript/rhino/jstype/Visitor;
      28: aload_0
      29: aload_1
      30: putfield      #9                  // Field typeRegistry:Lcom/google/javascript/rhino/jstype/JSTypeRegistry;
      33: aload_0
      34: aload_0
      35: putfield      #10                 // Field firstLink:Lcom/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter;
      38: aload_0
      39: aconst_null
      40: putfield      #11                 // Field nextLink:Lcom/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter;
      43: return

  public com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter append(com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter);
    Code:
       0: aload_1
       1: getfield      #11                 // Field nextLink:Lcom/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      15: aload_0
      16: aload_1
      17: putfield      #11                 // Field nextLink:Lcom/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter;
      20: aload_1
      21: aload_0
      22: getfield      #10                 // Field firstLink:Lcom/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter;
      25: putfield      #10                 // Field firstLink:Lcom/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter;
      28: aload_1
      29: areturn

  public com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter getFirst();
    Code:
       0: aload_0
       1: getfield      #10                 // Field firstLink:Lcom/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter;
       4: areturn

  protected com.google.javascript.jscomp.type.FlowScope firstPreciserScopeKnowingConditionOutcome(com.google.javascript.rhino.Node, com.google.javascript.jscomp.type.FlowScope, boolean);
    Code:
       0: aload_0
       1: getfield      #10                 // Field firstLink:Lcom/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter;
       4: aload_1
       5: aload_2
       6: iload_3
       7: invokevirtual #13                 // Method getPreciserScopeKnowingConditionOutcome:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;
      10: areturn

  protected com.google.javascript.jscomp.type.FlowScope nextPreciserScopeKnowingConditionOutcome(com.google.javascript.rhino.Node, com.google.javascript.jscomp.type.FlowScope, boolean);
    Code:
       0: aload_0
       1: getfield      #11                 // Field nextLink:Lcom/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter;
       4: ifnull        20
       7: aload_0
       8: getfield      #11                 // Field nextLink:Lcom/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter;
      11: aload_1
      12: aload_2
      13: iload_3
      14: invokevirtual #13                 // Method getPreciserScopeKnowingConditionOutcome:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/type/FlowScope;Z)Lcom/google/javascript/jscomp/type/FlowScope;
      17: goto          21
      20: aload_2
      21: areturn

  protected com.google.javascript.rhino.jstype.JSType getTypeIfRefinable(com.google.javascript.rhino.Node, com.google.javascript.jscomp.type.FlowScope);
    Code:
       0: aload_1
       1: invokevirtual #14                 // Method com/google/javascript/rhino/Node.getType:()I
       4: lookupswitch  { // 2
                    33: 74
                    38: 32
               default: 145
          }
      32: aload_2
      33: aload_1
      34: invokevirtual #15                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      37: invokeinterface #16,  2           // InterfaceMethod com/google/javascript/jscomp/type/FlowScope.getSlot:(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/StaticSlot;
      42: astore_3
      43: aload_3
      44: ifnull        72
      47: aload_3
      48: invokeinterface #17,  1           // InterfaceMethod com/google/javascript/rhino/jstype/StaticSlot.getType:()Ljava/lang/Object;
      53: checkcast     #18                 // class com/google/javascript/rhino/jstype/JSType
      56: astore        4
      58: aload         4
      60: ifnonnull     69
      63: aload_1
      64: invokevirtual #19                 // Method com/google/javascript/rhino/Node.getJSType:()Lcom/google/javascript/rhino/jstype/JSType;
      67: astore        4
      69: aload         4
      71: areturn
      72: aconst_null
      73: areturn
      74: aload_1
      75: invokevirtual #20                 // Method com/google/javascript/rhino/Node.getQualifiedName:()Ljava/lang/String;
      78: astore        4
      80: aload         4
      82: ifnonnull     87
      85: aconst_null
      86: areturn
      87: aload_2
      88: aload         4
      90: invokeinterface #16,  2           // InterfaceMethod com/google/javascript/jscomp/type/FlowScope.getSlot:(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/StaticSlot;
      95: astore        5
      97: aconst_null
      98: astore        6
     100: aload         5
     102: ifnull        117
     105: aload         5
     107: invokeinterface #17,  1           // InterfaceMethod com/google/javascript/rhino/jstype/StaticSlot.getType:()Ljava/lang/Object;
     112: checkcast     #18                 // class com/google/javascript/rhino/jstype/JSType
     115: astore        6
     117: aload         6
     119: ifnonnull     128
     122: aload_1
     123: invokevirtual #19                 // Method com/google/javascript/rhino/Node.getJSType:()Lcom/google/javascript/rhino/jstype/JSType;
     126: astore        6
     128: aload         6
     130: ifnonnull     142
     133: aload_0
     134: getstatic     #21                 // Field com/google/javascript/rhino/jstype/JSTypeNative.UNKNOWN_TYPE:Lcom/google/javascript/rhino/jstype/JSTypeNative;
     137: invokevirtual #22                 // Method getNativeType:(Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/JSType;
     140: astore        6
     142: aload         6
     144: areturn
     145: aconst_null
     146: areturn

  protected void declareNameInScope(com.google.javascript.jscomp.type.FlowScope, com.google.javascript.rhino.Node, com.google.javascript.rhino.jstype.JSType);
    Code:
       0: aload_2
       1: invokevirtual #14                 // Method com/google/javascript/rhino/Node.getType:()I
       4: lookupswitch  { // 3
                    33: 54
                    38: 40
                    42: 106
               default: 109
          }
      40: aload_1
      41: aload_2
      42: invokevirtual #15                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      45: aload_3
      46: invokeinterface #23,  3           // InterfaceMethod com/google/javascript/jscomp/type/FlowScope.inferSlotType:(Ljava/lang/String;Lcom/google/javascript/rhino/jstype/JSType;)V
      51: goto          139
      54: aload_2
      55: invokevirtual #20                 // Method com/google/javascript/rhino/Node.getQualifiedName:()Ljava/lang/String;
      58: astore        4
      60: aload         4
      62: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: aload_2
      67: invokevirtual #19                 // Method com/google/javascript/rhino/Node.getJSType:()Lcom/google/javascript/rhino/jstype/JSType;
      70: astore        5
      72: aload         5
      74: ifnonnull     87
      77: aload_0
      78: getstatic     #21                 // Field com/google/javascript/rhino/jstype/JSTypeNative.UNKNOWN_TYPE:Lcom/google/javascript/rhino/jstype/JSTypeNative;
      81: invokevirtual #22                 // Method getNativeType:(Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/JSType;
      84: goto          89
      87: aload         5
      89: astore        5
      91: aload_1
      92: aload_2
      93: aload         4
      95: aload         5
      97: aload_3
      98: invokeinterface #25,  5           // InterfaceMethod com/google/javascript/jscomp/type/FlowScope.inferQualifiedSlot:(Lcom/google/javascript/rhino/Node;Ljava/lang/String;Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)V
     103: goto          139
     106: goto          139
     109: new           #26                 // class java/lang/IllegalArgumentException
     112: dup
     113: new           #27                 // class java/lang/StringBuilder
     116: dup
     117: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
     120: ldc           #29                 // String Node cannot be refined. \n
     122: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload_2
     126: invokevirtual #31                 // Method com/google/javascript/rhino/Node.toStringTree:()Ljava/lang/String;
     129: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     135: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     138: athrow
     139: return

  protected final com.google.javascript.rhino.jstype.JSType getRestrictedWithoutUndefined(com.google.javascript.rhino.jstype.JSType);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: aconst_null
       5: goto          19
       8: aload_1
       9: aload_0
      10: getfield      #5                  // Field restrictUndefinedVisitor:Lcom/google/javascript/rhino/jstype/Visitor;
      13: invokevirtual #34                 // Method com/google/javascript/rhino/jstype/JSType.visit:(Lcom/google/javascript/rhino/jstype/Visitor;)Ljava/lang/Object;
      16: checkcast     #18                 // class com/google/javascript/rhino/jstype/JSType
      19: areturn

  protected final com.google.javascript.rhino.jstype.JSType getRestrictedWithoutNull(com.google.javascript.rhino.jstype.JSType);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: aconst_null
       5: goto          19
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field restrictNullVisitor:Lcom/google/javascript/rhino/jstype/Visitor;
      13: invokevirtual #34                 // Method com/google/javascript/rhino/jstype/JSType.visit:(Lcom/google/javascript/rhino/jstype/Visitor;)Ljava/lang/Object;
      16: checkcast     #18                 // class com/google/javascript/rhino/jstype/JSType
      19: areturn

  com.google.javascript.rhino.jstype.JSType getRestrictedByTypeOfResult(com.google.javascript.rhino.jstype.JSType, java.lang.String, boolean);
    Code:
       0: aload_1
       1: ifnonnull     35
       4: iload_3
       5: ifeq          33
       8: aload_0
       9: aload_2
      10: invokespecial #1                  // Method getNativeTypeForTypeOf:(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/JSType;
      13: astore        4
      15: aload         4
      17: ifnonnull     30
      20: aload_0
      21: getstatic     #35                 // Field com/google/javascript/rhino/jstype/JSTypeNative.CHECKED_UNKNOWN_TYPE:Lcom/google/javascript/rhino/jstype/JSTypeNative;
      24: invokevirtual #22                 // Method getNativeType:(Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/JSType;
      27: goto          32
      30: aload         4
      32: areturn
      33: aconst_null
      34: areturn
      35: aload_1
      36: new           #36                 // class com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter$RestrictByOneTypeOfResultVisitor
      39: dup
      40: aload_0
      41: aload_2
      42: iload_3
      43: invokespecial #37                 // Method com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter$RestrictByOneTypeOfResultVisitor."<init>":(Lcom/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter;Ljava/lang/String;Z)V
      46: invokevirtual #34                 // Method com/google/javascript/rhino/jstype/JSType.visit:(Lcom/google/javascript/rhino/jstype/Visitor;)Ljava/lang/Object;
      49: checkcast     #18                 // class com/google/javascript/rhino/jstype/JSType
      52: areturn

  com.google.javascript.rhino.jstype.JSType getNativeType(com.google.javascript.rhino.jstype.JSTypeNative);
    Code:
       0: aload_0
       1: getfield      #9                  // Field typeRegistry:Lcom/google/javascript/rhino/jstype/JSTypeRegistry;
       4: aload_1
       5: invokevirtual #38                 // Method com/google/javascript/rhino/jstype/JSTypeRegistry.getNativeType:(Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/JSType;
       8: areturn

  private com.google.javascript.rhino.jstype.JSType getNativeTypeForTypeOf(java.lang.String);
    Code:
       0: aload_1
       1: astore_2
       2: iconst_m1
       3: istore_3
       4: aload_2
       5: invokevirtual #39                 // Method java/lang/String.hashCode:()I
       8: lookupswitch  { // 5
           -1038130864: 102
           -1034364087: 60
            -891985903: 88
              64711720: 74
            1380938712: 116
               default: 127
          }
      60: aload_2
      61: ldc           #40                 // String number
      63: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      66: ifeq          127
      69: iconst_0
      70: istore_3
      71: goto          127
      74: aload_2
      75: ldc           #42                 // String boolean
      77: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      80: ifeq          127
      83: iconst_1
      84: istore_3
      85: goto          127
      88: aload_2
      89: ldc           #43                 // String string
      91: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      94: ifeq          127
      97: iconst_2
      98: istore_3
      99: goto          127
     102: aload_2
     103: ldc           #44                 // String undefined
     105: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     108: ifeq          127
     111: iconst_3
     112: istore_3
     113: goto          127
     116: aload_2
     117: ldc           #45                 // String function
     119: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     122: ifeq          127
     125: iconst_4
     126: istore_3
     127: iload_3
     128: tableswitch   { // 0 to 4
                     0: 164
                     1: 172
                     2: 180
                     3: 188
                     4: 196
               default: 204
          }
     164: aload_0
     165: getstatic     #46                 // Field com/google/javascript/rhino/jstype/JSTypeNative.NUMBER_TYPE:Lcom/google/javascript/rhino/jstype/JSTypeNative;
     168: invokevirtual #22                 // Method getNativeType:(Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/JSType;
     171: areturn
     172: aload_0
     173: getstatic     #47                 // Field com/google/javascript/rhino/jstype/JSTypeNative.BOOLEAN_TYPE:Lcom/google/javascript/rhino/jstype/JSTypeNative;
     176: invokevirtual #22                 // Method getNativeType:(Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/JSType;
     179: areturn
     180: aload_0
     181: getstatic     #48                 // Field com/google/javascript/rhino/jstype/JSTypeNative.STRING_TYPE:Lcom/google/javascript/rhino/jstype/JSTypeNative;
     184: invokevirtual #22                 // Method getNativeType:(Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/JSType;
     187: areturn
     188: aload_0
     189: getstatic     #49                 // Field com/google/javascript/rhino/jstype/JSTypeNative.VOID_TYPE:Lcom/google/javascript/rhino/jstype/JSTypeNative;
     192: invokevirtual #22                 // Method getNativeType:(Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/JSType;
     195: areturn
     196: aload_0
     197: getstatic     #50                 // Field com/google/javascript/rhino/jstype/JSTypeNative.U2U_CONSTRUCTOR_TYPE:Lcom/google/javascript/rhino/jstype/JSTypeNative;
     200: invokevirtual #22                 // Method getNativeType:(Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/JSType;
     203: areturn
     204: aconst_null
     205: areturn

  static com.google.javascript.rhino.jstype.JSType access$000(com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method getNativeTypeForTypeOf:(Ljava/lang/String;)Lcom/google/javascript/rhino/jstype/JSType;
       5: areturn
}
