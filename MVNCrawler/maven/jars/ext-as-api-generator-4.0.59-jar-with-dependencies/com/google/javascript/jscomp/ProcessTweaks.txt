Compiled from "ProcessTweaks.java"
class com.google.javascript.jscomp.ProcessTweaks implements com.google.javascript.jscomp.CompilerPass {
  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  private final boolean stripTweaks;

  private final java.util.SortedMap<java.lang.String, com.google.javascript.rhino.Node> compilerDefaultValueOverrides;

  private static final com.google.common.base.CharMatcher ID_MATCHER;

  static final com.google.javascript.jscomp.DiagnosticType UNKNOWN_TWEAK_WARNING;

  static final com.google.javascript.jscomp.DiagnosticType TWEAK_MULTIPLY_REGISTERED_ERROR;

  static final com.google.javascript.jscomp.DiagnosticType NON_LITERAL_TWEAK_ID_ERROR;

  static final com.google.javascript.jscomp.DiagnosticType INVALID_TWEAK_DEFAULT_VALUE_WARNING;

  static final com.google.javascript.jscomp.DiagnosticType NON_GLOBAL_TWEAK_INIT_ERROR;

  static final com.google.javascript.jscomp.DiagnosticType TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR;

  static final com.google.javascript.jscomp.DiagnosticType TWEAK_WRONG_GETTER_TYPE_WARNING;

  static final com.google.javascript.jscomp.DiagnosticType INVALID_TWEAK_ID_ERROR;

  private static final java.util.Map<java.lang.String, com.google.javascript.jscomp.ProcessTweaks$TweakFunction> TWEAK_FUNCTIONS_MAP;

  com.google.javascript.jscomp.ProcessTweaks(com.google.javascript.jscomp.AbstractCompiler, boolean, java.util.Map<java.lang.String, com.google.javascript.rhino.Node>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       9: aload_0
      10: iload_2
      11: putfield      #5                  // Field stripTweaks:Z
      14: aload_0
      15: invokestatic  #6                  // Method com/google/common/collect/Maps.newTreeMap:()Ljava/util/TreeMap;
      18: putfield      #7                  // Field compilerDefaultValueOverrides:Ljava/util/SortedMap;
      21: aload_0
      22: getfield      #7                  // Field compilerDefaultValueOverrides:Ljava/util/SortedMap;
      25: aload_3
      26: invokeinterface #8,  2            // InterfaceMethod java/util/SortedMap.putAll:(Ljava/util/Map;)V
      31: return

  public void process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #9                  // Method collectTweaks:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/jscomp/ProcessTweaks$CollectTweaksResult;
       5: astore_3
       6: aload_0
       7: aload_3
       8: getfield      #10                 // Field com/google/javascript/jscomp/ProcessTweaks$CollectTweaksResult.tweakInfos:Ljava/util/Map;
      11: invokespecial #11                 // Method applyCompilerDefaultValueOverrides:(Ljava/util/Map;)V
      14: iconst_0
      15: istore        4
      17: aload_0
      18: getfield      #5                  // Field stripTweaks:Z
      21: ifeq          37
      24: aload_0
      25: aload_3
      26: getfield      #10                 // Field com/google/javascript/jscomp/ProcessTweaks$CollectTweaksResult.tweakInfos:Ljava/util/Map;
      29: invokespecial #12                 // Method stripAllCalls:(Ljava/util/Map;)Z
      32: istore        4
      34: goto          59
      37: aload_0
      38: getfield      #7                  // Field compilerDefaultValueOverrides:Ljava/util/SortedMap;
      41: invokeinterface #13,  1           // InterfaceMethod java/util/SortedMap.isEmpty:()Z
      46: ifne          59
      49: aload_0
      50: aload_3
      51: getfield      #14                 // Field com/google/javascript/jscomp/ProcessTweaks$CollectTweaksResult.getOverridesCalls:Ljava/util/List;
      54: invokespecial #15                 // Method replaceGetCompilerOverridesCalls:(Ljava/util/List;)Z
      57: istore        4
      59: iload         4
      61: ifeq          71
      64: aload_0
      65: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      68: invokevirtual #16                 // Method com/google/javascript/jscomp/AbstractCompiler.reportCodeChange:()V
      71: return

  private boolean replaceGetCompilerOverridesCalls(java.util.List<com.google.javascript.jscomp.ProcessTweaks$TweakFunctionCall>);
    Code:
       0: aload_1
       1: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          55
      16: aload_2
      17: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #20                 // class com/google/javascript/jscomp/ProcessTweaks$TweakFunctionCall
      25: astore_3
      26: aload_3
      27: getfield      #21                 // Field com/google/javascript/jscomp/ProcessTweaks$TweakFunctionCall.callNode:Lcom/google/javascript/rhino/Node;
      30: astore        4
      32: aload_0
      33: aload         4
      35: invokespecial #22                 // Method createCompilerDefaultValueOverridesVarNode:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      38: astore        5
      40: aload         4
      42: invokevirtual #23                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      45: aload         4
      47: aload         5
      49: invokevirtual #24                 // Method com/google/javascript/rhino/Node.replaceChild:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      52: goto          7
      55: aload_1
      56: invokeinterface #25,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      61: ifne          68
      64: iconst_1
      65: goto          69
      68: iconst_0
      69: ireturn

  private boolean stripAllCalls(java.util.Map<java.lang.String, com.google.javascript.jscomp.ProcessTweaks$TweakInfo>);
    Code:
       0: aload_1
       1: invokeinterface #26,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       6: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          175
      21: aload_2
      22: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #28                 // class com/google/javascript/jscomp/ProcessTweaks$TweakInfo
      30: astore_3
      31: aload_3
      32: invokevirtual #29                 // Method com/google/javascript/jscomp/ProcessTweaks$TweakInfo.isRegistered:()Z
      35: istore        4
      37: aload_3
      38: getfield      #30                 // Field com/google/javascript/jscomp/ProcessTweaks$TweakInfo.functionCalls:Ljava/util/List;
      41: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      46: astore        5
      48: aload         5
      50: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      55: ifeq          172
      58: aload         5
      60: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      65: checkcast     #20                 // class com/google/javascript/jscomp/ProcessTweaks$TweakFunctionCall
      68: astore        6
      70: aload         6
      72: getfield      #21                 // Field com/google/javascript/jscomp/ProcessTweaks$TweakFunctionCall.callNode:Lcom/google/javascript/rhino/Node;
      75: astore        7
      77: aload         7
      79: invokevirtual #23                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      82: astore        8
      84: aload         6
      86: getfield      #31                 // Field com/google/javascript/jscomp/ProcessTweaks$TweakFunctionCall.tweakFunc:Lcom/google/javascript/jscomp/ProcessTweaks$TweakFunction;
      89: invokevirtual #32                 // Method com/google/javascript/jscomp/ProcessTweaks$TweakFunction.isGetterFunction:()Z
      92: ifeq          141
      95: iload         4
      97: ifeq          112
     100: aload_3
     101: invokevirtual #33                 // Method com/google/javascript/jscomp/ProcessTweaks$TweakInfo.getDefaultValueNode:()Lcom/google/javascript/rhino/Node;
     104: invokevirtual #34                 // Method com/google/javascript/rhino/Node.cloneNode:()Lcom/google/javascript/rhino/Node;
     107: astore        9
     109: goto          129
     112: aload         6
     114: getfield      #31                 // Field com/google/javascript/jscomp/ProcessTweaks$TweakFunctionCall.tweakFunc:Lcom/google/javascript/jscomp/ProcessTweaks$TweakFunction;
     117: getfield      #35                 // Field com/google/javascript/jscomp/ProcessTweaks$TweakFunction.registerFunction:Lcom/google/javascript/jscomp/ProcessTweaks$TweakFunction;
     120: astore        10
     122: aload         10
     124: invokevirtual #36                 // Method com/google/javascript/jscomp/ProcessTweaks$TweakFunction.createDefaultValueNode:()Lcom/google/javascript/rhino/Node;
     127: astore        9
     129: aload         8
     131: aload         7
     133: aload         9
     135: invokevirtual #24                 // Method com/google/javascript/rhino/Node.replaceChild:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
     138: goto          169
     141: dconst_0
     142: invokestatic  #37                 // Method com/google/javascript/rhino/IR.number:(D)Lcom/google/javascript/rhino/Node;
     145: aload         7
     147: invokevirtual #38                 // Method com/google/javascript/rhino/Node.srcref:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
     150: invokestatic  #39                 // Method com/google/javascript/rhino/IR.voidNode:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
     153: aload         7
     155: invokevirtual #38                 // Method com/google/javascript/rhino/Node.srcref:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
     158: astore        9
     160: aload         8
     162: aload         7
     164: aload         9
     166: invokevirtual #24                 // Method com/google/javascript/rhino/Node.replaceChild:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
     169: goto          48
     172: goto          12
     175: aload_1
     176: invokeinterface #40,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     181: ifne          188
     184: iconst_1
     185: goto          189
     188: iconst_0
     189: ireturn

  private com.google.javascript.rhino.Node createCompilerDefaultValueOverridesVarNode(com.google.javascript.rhino.Node);
    Code:
       0: iconst_0
       1: anewarray     #41                 // class com/google/javascript/rhino/Node
       4: invokestatic  #42                 // Method com/google/javascript/rhino/IR.objectlit:([Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
       7: aload_1
       8: invokevirtual #38                 // Method com/google/javascript/rhino/Node.srcref:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      11: astore_2
      12: aload_0
      13: getfield      #7                  // Field compilerDefaultValueOverrides:Ljava/util/SortedMap;
      16: invokeinterface #43,  1           // InterfaceMethod java/util/SortedMap.entrySet:()Ljava/util/Set;
      21: invokeinterface #44,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      26: astore_3
      27: aload_3
      28: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          101
      36: aload_3
      37: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #45                 // class java/util/Map$Entry
      45: astore        4
      47: aload         4
      49: invokeinterface #46,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      54: checkcast     #47                 // class java/lang/String
      57: invokestatic  #48                 // Method com/google/javascript/rhino/IR.stringKey:(Ljava/lang/String;)Lcom/google/javascript/rhino/Node;
      60: aload_1
      61: invokevirtual #49                 // Method com/google/javascript/rhino/Node.copyInformationFrom:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      64: astore        5
      66: aload         4
      68: invokeinterface #50,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      73: checkcast     #41                 // class com/google/javascript/rhino/Node
      76: invokevirtual #34                 // Method com/google/javascript/rhino/Node.cloneNode:()Lcom/google/javascript/rhino/Node;
      79: aload_1
      80: invokevirtual #49                 // Method com/google/javascript/rhino/Node.copyInformationFrom:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      83: astore        6
      85: aload         5
      87: aload         6
      89: invokevirtual #51                 // Method com/google/javascript/rhino/Node.addChildToBack:(Lcom/google/javascript/rhino/Node;)V
      92: aload_2
      93: aload         5
      95: invokevirtual #51                 // Method com/google/javascript/rhino/Node.addChildToBack:(Lcom/google/javascript/rhino/Node;)V
      98: goto          27
     101: aload_2
     102: areturn

  private void applyCompilerDefaultValueOverrides(java.util.Map<java.lang.String, com.google.javascript.jscomp.ProcessTweaks$TweakInfo>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field compilerDefaultValueOverrides:Ljava/util/SortedMap;
       4: invokeinterface #43,  1           // InterfaceMethod java/util/SortedMap.entrySet:()Ljava/util/Set;
       9: invokeinterface #44,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          173
      24: aload_2
      25: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #45                 // class java/util/Map$Entry
      33: astore_3
      34: aload_3
      35: invokeinterface #46,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      40: checkcast     #47                 // class java/lang/String
      43: astore        4
      45: aload_1
      46: aload         4
      48: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      53: checkcast     #28                 // class com/google/javascript/jscomp/ProcessTweaks$TweakInfo
      56: astore        5
      58: aload         5
      60: ifnonnull     88
      63: aload_0
      64: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      67: getstatic     #53                 // Field UNKNOWN_TWEAK_WARNING:Lcom/google/javascript/jscomp/DiagnosticType;
      70: iconst_1
      71: anewarray     #47                 // class java/lang/String
      74: dup
      75: iconst_0
      76: aload         4
      78: aastore
      79: invokestatic  #54                 // Method com/google/javascript/jscomp/JSError.make:(Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)Lcom/google/javascript/jscomp/JSError;
      82: invokevirtual #55                 // Method com/google/javascript/jscomp/AbstractCompiler.report:(Lcom/google/javascript/jscomp/JSError;)V
      85: goto          170
      88: aload         5
      90: getfield      #56                 // Field com/google/javascript/jscomp/ProcessTweaks$TweakInfo.registerCall:Lcom/google/javascript/jscomp/ProcessTweaks$TweakFunctionCall;
      93: getfield      #31                 // Field com/google/javascript/jscomp/ProcessTweaks$TweakFunctionCall.tweakFunc:Lcom/google/javascript/jscomp/ProcessTweaks$TweakFunction;
      96: astore        6
      98: aload_3
      99: invokeinterface #50,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     104: checkcast     #41                 // class com/google/javascript/rhino/Node
     107: astore        7
     109: aload         6
     111: aload         7
     113: invokevirtual #57                 // Method com/google/javascript/rhino/Node.getType:()I
     116: invokevirtual #58                 // Method com/google/javascript/jscomp/ProcessTweaks$TweakFunction.isValidNodeType:(I)Z
     119: ifne          163
     122: aload_0
     123: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
     126: getstatic     #59                 // Field INVALID_TWEAK_DEFAULT_VALUE_WARNING:Lcom/google/javascript/jscomp/DiagnosticType;
     129: iconst_3
     130: anewarray     #47                 // class java/lang/String
     133: dup
     134: iconst_0
     135: aload         4
     137: aastore
     138: dup
     139: iconst_1
     140: aload         6
     142: invokevirtual #60                 // Method com/google/javascript/jscomp/ProcessTweaks$TweakFunction.getName:()Ljava/lang/String;
     145: aastore
     146: dup
     147: iconst_2
     148: aload         6
     150: invokevirtual #61                 // Method com/google/javascript/jscomp/ProcessTweaks$TweakFunction.getExpectedTypeName:()Ljava/lang/String;
     153: aastore
     154: invokestatic  #54                 // Method com/google/javascript/jscomp/JSError.make:(Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)Lcom/google/javascript/jscomp/JSError;
     157: invokevirtual #55                 // Method com/google/javascript/jscomp/AbstractCompiler.report:(Lcom/google/javascript/jscomp/JSError;)V
     160: goto          170
     163: aload         5
     165: aload         7
     167: putfield      #62                 // Field com/google/javascript/jscomp/ProcessTweaks$TweakInfo.defaultValueNode:Lcom/google/javascript/rhino/Node;
     170: goto          15
     173: return

  private com.google.javascript.jscomp.ProcessTweaks$CollectTweaksResult collectTweaks(com.google.javascript.rhino.Node);
    Code:
       0: new           #63                 // class com/google/javascript/jscomp/ProcessTweaks$CollectTweaks
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #64                 // Method com/google/javascript/jscomp/ProcessTweaks$CollectTweaks."<init>":(Lcom/google/javascript/jscomp/ProcessTweaks;Lcom/google/javascript/jscomp/ProcessTweaks$1;)V
       9: astore_2
      10: aload_0
      11: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      14: aload_1
      15: aload_2
      16: invokestatic  #65                 // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      19: aload_2
      20: getfield      #66                 // Field com/google/javascript/jscomp/ProcessTweaks$CollectTweaks.allTweaks:Ljava/util/Map;
      23: astore_3
      24: aload_3
      25: invokeinterface #26,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      30: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      35: astore        4
      37: aload         4
      39: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          67
      47: aload         4
      49: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #28                 // class com/google/javascript/jscomp/ProcessTweaks$TweakInfo
      57: astore        5
      59: aload         5
      61: invokevirtual #67                 // Method com/google/javascript/jscomp/ProcessTweaks$TweakInfo.emitAllWarnings:()V
      64: goto          37
      67: new           #68                 // class com/google/javascript/jscomp/ProcessTweaks$CollectTweaksResult
      70: dup
      71: aload_3
      72: aload_2
      73: getfield      #69                 // Field com/google/javascript/jscomp/ProcessTweaks$CollectTweaks.getOverridesCalls:Ljava/util/List;
      76: invokespecial #70                 // Method com/google/javascript/jscomp/ProcessTweaks$CollectTweaksResult."<init>":(Ljava/util/Map;Ljava/util/List;)V
      79: areturn

  static java.util.Map access$100();
    Code:
       0: getstatic     #3                  // Field TWEAK_FUNCTIONS_MAP:Ljava/util/Map;
       3: areturn

  static com.google.javascript.jscomp.AbstractCompiler access$200(com.google.javascript.jscomp.ProcessTweaks);
    Code:
       0: aload_0
       1: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: areturn

  static com.google.common.base.CharMatcher access$300();
    Code:
       0: getstatic     #1                  // Field ID_MATCHER:Lcom/google/common/base/CharMatcher;
       3: areturn

  static {};
    Code:
       0: bipush        97
       2: bipush        122
       4: invokestatic  #71                 // Method com/google/common/base/CharMatcher.inRange:(CC)Lcom/google/common/base/CharMatcher;
       7: bipush        65
       9: bipush        90
      11: invokestatic  #71                 // Method com/google/common/base/CharMatcher.inRange:(CC)Lcom/google/common/base/CharMatcher;
      14: invokevirtual #72                 // Method com/google/common/base/CharMatcher.or:(Lcom/google/common/base/CharMatcher;)Lcom/google/common/base/CharMatcher;
      17: ldc           #73                 // String 0123456789_.
      19: invokestatic  #74                 // Method com/google/common/base/CharMatcher.anyOf:(Ljava/lang/CharSequence;)Lcom/google/common/base/CharMatcher;
      22: invokevirtual #72                 // Method com/google/common/base/CharMatcher.or:(Lcom/google/common/base/CharMatcher;)Lcom/google/common/base/CharMatcher;
      25: putstatic     #1                  // Field ID_MATCHER:Lcom/google/common/base/CharMatcher;
      28: ldc           #75                 // String JSC_UNKNOWN_TWEAK_WARNING
      30: ldc           #76                 // String no tweak registered with ID {0}
      32: invokestatic  #77                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      35: putstatic     #53                 // Field UNKNOWN_TWEAK_WARNING:Lcom/google/javascript/jscomp/DiagnosticType;
      38: ldc           #78                 // String JSC_TWEAK_MULTIPLY_REGISTERED_ERROR
      40: ldc           #79                 // String Tweak {0} has already been registered.
      42: invokestatic  #80                 // Method com/google/javascript/jscomp/DiagnosticType.error:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      45: putstatic     #81                 // Field TWEAK_MULTIPLY_REGISTERED_ERROR:Lcom/google/javascript/jscomp/DiagnosticType;
      48: ldc           #82                 // String JSC_NON_LITERAL_TWEAK_ID_ERROR
      50: ldc           #83                 // String tweak ID must be a string literal
      52: invokestatic  #80                 // Method com/google/javascript/jscomp/DiagnosticType.error:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      55: putstatic     #84                 // Field NON_LITERAL_TWEAK_ID_ERROR:Lcom/google/javascript/jscomp/DiagnosticType;
      58: ldc           #85                 // String JSC_INVALID_TWEAK_DEFAULT_VALUE_WARNING
      60: ldc           #86                 // String tweak {0} registered with {1} must have a default value that is a literal of type {2}
      62: invokestatic  #77                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      65: putstatic     #59                 // Field INVALID_TWEAK_DEFAULT_VALUE_WARNING:Lcom/google/javascript/jscomp/DiagnosticType;
      68: ldc           #87                 // String JSC_NON_GLOBAL_TWEAK_INIT_ERROR
      70: ldc           #88                 // String tweak declaration {0} must occur in the global scope
      72: invokestatic  #80                 // Method com/google/javascript/jscomp/DiagnosticType.error:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      75: putstatic     #89                 // Field NON_GLOBAL_TWEAK_INIT_ERROR:Lcom/google/javascript/jscomp/DiagnosticType;
      78: ldc           #90                 // String JSC_TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR
      80: ldc           #91                 // String Cannot override the default value of tweak {0} after it has been registered
      82: invokestatic  #80                 // Method com/google/javascript/jscomp/DiagnosticType.error:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      85: putstatic     #92                 // Field TWEAK_OVERRIDE_AFTER_REGISTERED_ERROR:Lcom/google/javascript/jscomp/DiagnosticType;
      88: ldc           #93                 // String JSC_TWEAK_WRONG_GETTER_TYPE_WARNING
      90: ldc           #94                 // String tweak getter function {0} used for tweak registered using {1}
      92: invokestatic  #77                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      95: putstatic     #95                 // Field TWEAK_WRONG_GETTER_TYPE_WARNING:Lcom/google/javascript/jscomp/DiagnosticType;
      98: ldc           #96                 // String JSC_INVALID_TWEAK_ID_ERROR
     100: ldc           #97                 // String tweak ID contains illegal characters. Only letters, numbers, _ and . are allowed
     102: invokestatic  #80                 // Method com/google/javascript/jscomp/DiagnosticType.error:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
     105: putstatic     #98                 // Field INVALID_TWEAK_ID_ERROR:Lcom/google/javascript/jscomp/DiagnosticType;
     108: invokestatic  #99                 // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
     111: putstatic     #3                  // Field TWEAK_FUNCTIONS_MAP:Ljava/util/Map;
     114: invokestatic  #100                // Method com/google/javascript/jscomp/ProcessTweaks$TweakFunction.values:()[Lcom/google/javascript/jscomp/ProcessTweaks$TweakFunction;
     117: astore_0
     118: aload_0
     119: arraylength
     120: istore_1
     121: iconst_0
     122: istore_2
     123: iload_2
     124: iload_1
     125: if_icmpge     152
     128: aload_0
     129: iload_2
     130: aaload
     131: astore_3
     132: getstatic     #3                  // Field TWEAK_FUNCTIONS_MAP:Ljava/util/Map;
     135: aload_3
     136: invokevirtual #60                 // Method com/google/javascript/jscomp/ProcessTweaks$TweakFunction.getName:()Ljava/lang/String;
     139: aload_3
     140: invokeinterface #101,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     145: pop
     146: iinc          2, 1
     149: goto          123
     152: return
}
