Compiled from "MakeDeclaredNamesUnique.java"
class com.google.javascript.jscomp.MakeDeclaredNamesUnique$InlineRenamer implements com.google.javascript.jscomp.MakeDeclaredNamesUnique$Renamer {
  private final java.util.Map<java.lang.String, java.lang.String> declarations;

  private final com.google.common.base.Supplier<java.lang.String> uniqueIdSupplier;

  private final java.lang.String idPrefix;

  private final boolean removeConstness;

  private final com.google.javascript.jscomp.CodingConvention convention;

  com.google.javascript.jscomp.MakeDeclaredNamesUnique$InlineRenamer(com.google.javascript.jscomp.CodingConvention, com.google.common.base.Supplier<java.lang.String>, java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #3                  // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
       8: putfield      #4                  // Field declarations:Ljava/util/Map;
      11: aload_0
      12: aload_1
      13: putfield      #5                  // Field convention:Lcom/google/javascript/jscomp/CodingConvention;
      16: aload_0
      17: aload_2
      18: putfield      #6                  // Field uniqueIdSupplier:Lcom/google/common/base/Supplier;
      21: aload_3
      22: invokevirtual #7                  // Method java/lang/String.isEmpty:()Z
      25: ifne          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      36: aload_0
      37: aload_3
      38: putfield      #9                  // Field idPrefix:Ljava/lang/String;
      41: aload_0
      42: iload         4
      44: putfield      #10                 // Field removeConstness:Z
      47: return

  public void addDeclaredName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #11                 // String arguments
       3: invokevirtual #12                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      17: aload_0
      18: getfield      #4                  // Field declarations:Ljava/util/Map;
      21: aload_1
      22: invokeinterface #14,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      27: ifne          46
      30: aload_0
      31: getfield      #4                  // Field declarations:Ljava/util/Map;
      34: aload_1
      35: aload_0
      36: aload_1
      37: invokespecial #15                 // Method getUniqueName:(Ljava/lang/String;)Ljava/lang/String;
      40: invokeinterface #16,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: return

  private java.lang.String getUniqueName(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method java/lang/String.isEmpty:()Z
       4: ifeq          9
       7: aload_1
       8: areturn
       9: aload_1
      10: ldc           #18                 // String $$
      12: invokevirtual #19                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      15: ifeq          30
      18: aload_1
      19: iconst_0
      20: aload_1
      21: ldc           #18                 // String $$
      23: invokevirtual #20                 // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
      26: invokevirtual #21                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      29: astore_1
      30: aload_0
      31: getfield      #5                  // Field convention:Lcom/google/javascript/jscomp/CodingConvention;
      34: aload_1
      35: invokeinterface #22,  2           // InterfaceMethod com/google/javascript/jscomp/CodingConvention.isExported:(Ljava/lang/String;)Z
      40: ifeq          63
      43: new           #23                 // class java/lang/StringBuilder
      46: dup
      47: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      50: ldc           #25                 // String JSCompiler_
      52: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_1
      56: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: astore_1
      63: new           #23                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      70: aload_1
      71: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: ldc           #18                 // String $$
      76: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_0
      80: getfield      #9                  // Field idPrefix:Ljava/lang/String;
      83: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_0
      87: getfield      #6                  // Field uniqueIdSupplier:Lcom/google/common/base/Supplier;
      90: invokeinterface #28,  1           // InterfaceMethod com/google/common/base/Supplier.get:()Ljava/lang/Object;
      95: checkcast     #29                 // class java/lang/String
      98: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: areturn

  public java.lang.String getReplacementName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field declarations:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #29                 // class java/lang/String
      13: areturn

  public com.google.javascript.jscomp.MakeDeclaredNamesUnique$Renamer forChildScope();
    Code:
       0: new           #31                 // class com/google/javascript/jscomp/MakeDeclaredNamesUnique$InlineRenamer
       3: dup
       4: aload_0
       5: getfield      #5                  // Field convention:Lcom/google/javascript/jscomp/CodingConvention;
       8: aload_0
       9: getfield      #6                  // Field uniqueIdSupplier:Lcom/google/common/base/Supplier;
      12: aload_0
      13: getfield      #9                  // Field idPrefix:Ljava/lang/String;
      16: aload_0
      17: getfield      #10                 // Field removeConstness:Z
      20: invokespecial #32                 // Method "<init>":(Lcom/google/javascript/jscomp/CodingConvention;Lcom/google/common/base/Supplier;Ljava/lang/String;Z)V
      23: areturn

  public boolean stripConstIfReplaced();
    Code:
       0: aload_0
       1: getfield      #10                 // Field removeConstness:Z
       4: ireturn
}
