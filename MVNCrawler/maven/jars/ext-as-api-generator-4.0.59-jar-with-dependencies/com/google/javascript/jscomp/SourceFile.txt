Compiled from "SourceFile.java"
public class com.google.javascript.jscomp.SourceFile implements com.google.javascript.rhino.jstype.StaticSourceFile,java.io.Serializable {
  private static final long serialVersionUID;

  private static final int SOURCE_EXCERPT_REGION_LENGTH;

  private final java.lang.String fileName;

  private boolean isExternFile;

  private java.lang.String originalPath;

  private int[] lineOffsets;

  private java.lang.String code;

  public com.google.javascript.jscomp.SourceFile(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field isExternFile:Z
       9: aload_0
      10: aconst_null
      11: putfield      #4                  // Field originalPath:Ljava/lang/String;
      14: aload_0
      15: aconst_null
      16: putfield      #5                  // Field lineOffsets:[I
      19: aload_0
      20: aconst_null
      21: putfield      #6                  // Field code:Ljava/lang/String;
      24: aload_1
      25: ifnull        35
      28: aload_1
      29: invokevirtual #7                  // Method java/lang/String.isEmpty:()Z
      32: ifeq          45
      35: new           #8                  // class java/lang/IllegalArgumentException
      38: dup
      39: ldc           #9                  // String a source must have a name
      41: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: aload_1
      47: putfield      #11                 // Field fileName:Ljava/lang/String;
      50: return

  public int getLineOffset(int);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method findLineOffsets:()V
       4: iload_1
       5: iconst_1
       6: if_icmplt     18
       9: iload_1
      10: aload_0
      11: getfield      #5                  // Field lineOffsets:[I
      14: arraylength
      15: if_icmple     58
      18: new           #8                  // class java/lang/IllegalArgumentException
      21: dup
      22: new           #13                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #15                 // String Expected line number between 1 and
      31: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #5                  // Field lineOffsets:[I
      38: arraylength
      39: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      42: ldc           #18                 // String \nActual:
      44: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: iload_1
      48: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      51: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aload_0
      59: getfield      #5                  // Field lineOffsets:[I
      62: iload_1
      63: iconst_1
      64: isub
      65: iaload
      66: ireturn

  int getNumLines();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method findLineOffsets:()V
       4: aload_0
       5: getfield      #5                  // Field lineOffsets:[I
       8: arraylength
       9: ireturn

  private void findLineOffsets();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lineOffsets:[I
       4: ifnull        8
       7: return
       8: aload_0
       9: invokevirtual #20                 // Method getCode:()Ljava/lang/String;
      12: ldc           #21                 // String \n
      14: invokevirtual #22                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      17: astore_1
      18: aload_0
      19: aload_1
      20: arraylength
      21: newarray       int
      23: putfield      #5                  // Field lineOffsets:[I
      26: iconst_1
      27: istore_2
      28: iload_2
      29: aload_1
      30: arraylength
      31: if_icmpge     65
      34: aload_0
      35: getfield      #5                  // Field lineOffsets:[I
      38: iload_2
      39: aload_0
      40: getfield      #5                  // Field lineOffsets:[I
      43: iload_2
      44: iconst_1
      45: isub
      46: iaload
      47: aload_1
      48: iload_2
      49: iconst_1
      50: isub
      51: aaload
      52: invokevirtual #23                 // Method java/lang/String.length:()I
      55: iadd
      56: iconst_1
      57: iadd
      58: iastore
      59: iinc          2, 1
      62: goto          28
      65: goto          83
      68: astore_1
      69: aload_0
      70: iconst_1
      71: newarray       int
      73: putfield      #5                  // Field lineOffsets:[I
      76: aload_0
      77: getfield      #5                  // Field lineOffsets:[I
      80: iconst_0
      81: iconst_0
      82: iastore
      83: return
    Exception table:
       from    to  target type
           8    65    68   Class java/io/IOException

  public java.lang.String getCode() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field code:Ljava/lang/String;
       4: areturn

  public java.io.Reader getCodeReader() throws java.io.IOException;
    Code:
       0: new           #25                 // class java/io/StringReader
       3: dup
       4: aload_0
       5: invokevirtual #20                 // Method getCode:()Ljava/lang/String;
       8: invokespecial #26                 // Method java/io/StringReader."<init>":(Ljava/lang/String;)V
      11: areturn

  java.lang.String getCodeNoCache();
    Code:
       0: aload_0
       1: getfield      #6                  // Field code:Ljava/lang/String;
       4: areturn

  private void setCode(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field code:Ljava/lang/String;
       5: return

  public java.lang.String getOriginalPath();
    Code:
       0: aload_0
       1: getfield      #4                  // Field originalPath:Ljava/lang/String;
       4: ifnull        14
       7: aload_0
       8: getfield      #4                  // Field originalPath:Ljava/lang/String;
      11: goto          18
      14: aload_0
      15: getfield      #11                 // Field fileName:Ljava/lang/String;
      18: areturn

  public void setOriginalPath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field originalPath:Ljava/lang/String;
       5: return

  public void clearCachedSource();
    Code:
       0: return

  boolean hasSourceInMemory();
    Code:
       0: aload_0
       1: getfield      #6                  // Field code:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #11                 // Field fileName:Ljava/lang/String;
       4: areturn

  public boolean isExtern();
    Code:
       0: aload_0
       1: getfield      #3                  // Field isExternFile:Z
       4: ireturn

  void setIsExtern(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field isExternFile:Z
       5: return

  public int getLineOfOffset(int);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method findLineOffsets:()V
       4: aload_0
       5: getfield      #5                  // Field lineOffsets:[I
       8: iload_1
       9: invokestatic  #27                 // Method java/util/Arrays.binarySearch:([II)I
      12: istore_2
      13: iload_2
      14: iflt          21
      17: iload_2
      18: iconst_1
      19: iadd
      20: ireturn
      21: iconst_m1
      22: iload_2
      23: iconst_1
      24: iadd
      25: imul
      26: istore_3
      27: iload_3
      28: iconst_1
      29: isub
      30: aload_0
      31: getfield      #5                  // Field lineOffsets:[I
      34: arraylength
      35: iconst_1
      36: isub
      37: invokestatic  #28                 // Method java/lang/Math.min:(II)I
      40: iconst_1
      41: iadd
      42: ireturn

  public int getColumnOfOffset(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #29                 // Method getLineOfOffset:(I)I
       5: istore_2
       6: iload_1
       7: aload_0
       8: getfield      #5                  // Field lineOffsets:[I
      11: iload_2
      12: iconst_1
      13: isub
      14: iaload
      15: isub
      16: ireturn

  public java.lang.String getLine(int);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method findLineOffsets:()V
       4: iload_1
       5: aload_0
       6: getfield      #5                  // Field lineOffsets:[I
       9: arraylength
      10: if_icmple     15
      13: aconst_null
      14: areturn
      15: iload_1
      16: iconst_1
      17: if_icmpge     22
      20: iconst_1
      21: istore_1
      22: aload_0
      23: getfield      #5                  // Field lineOffsets:[I
      26: iload_1
      27: iconst_1
      28: isub
      29: iaload
      30: istore_2
      31: ldc           #30                 // String
      33: astore_3
      34: aload_0
      35: invokevirtual #20                 // Method getCode:()Ljava/lang/String;
      38: astore_3
      39: goto          46
      42: astore        4
      44: aconst_null
      45: areturn
      46: aload_3
      47: bipush        10
      49: iload_2
      50: invokevirtual #31                 // Method java/lang/String.indexOf:(II)I
      53: iconst_m1
      54: if_icmpne     77
      57: iload_2
      58: aload_3
      59: invokevirtual #23                 // Method java/lang/String.length:()I
      62: if_icmplt     67
      65: aconst_null
      66: areturn
      67: aload_3
      68: iload_2
      69: aload_3
      70: invokevirtual #23                 // Method java/lang/String.length:()I
      73: invokevirtual #32                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      76: areturn
      77: aload_3
      78: iload_2
      79: aload_3
      80: bipush        10
      82: iload_2
      83: invokevirtual #31                 // Method java/lang/String.indexOf:(II)I
      86: invokevirtual #32                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      89: areturn
    Exception table:
       from    to  target type
          34    39    42   Class java/io/IOException

  public com.google.javascript.jscomp.Region getRegion(int);
    Code:
       0: ldc           #30                 // String
       2: astore_2
       3: aload_0
       4: invokevirtual #20                 // Method getCode:()Ljava/lang/String;
       7: astore_2
       8: goto          14
      11: astore_3
      12: aconst_null
      13: areturn
      14: iconst_0
      15: istore_3
      16: iconst_1
      17: iload_1
      18: iconst_3
      19: isub
      20: iconst_1
      21: iadd
      22: invokestatic  #34                 // Method java/lang/Math.max:(II)I
      25: istore        4
      27: iconst_1
      28: istore        5
      30: iload         5
      32: iload         4
      34: if_icmpge     66
      37: aload_2
      38: bipush        10
      40: iload_3
      41: invokevirtual #31                 // Method java/lang/String.indexOf:(II)I
      44: istore        6
      46: iload         6
      48: iconst_m1
      49: if_icmpne     55
      52: goto          66
      55: iload         6
      57: iconst_1
      58: iadd
      59: istore_3
      60: iinc          5, 1
      63: goto          30
      66: iload_3
      67: istore        5
      69: iload         4
      71: istore        6
      73: iconst_0
      74: istore        7
      76: iload         7
      78: iconst_5
      79: if_icmpge     113
      82: aload_2
      83: bipush        10
      85: iload         5
      87: invokevirtual #31                 // Method java/lang/String.indexOf:(II)I
      90: istore        5
      92: iload         5
      94: iconst_m1
      95: if_icmpne     101
      98: goto          113
     101: iinc          5, 1
     104: iinc          7, 1
     107: iinc          6, 1
     110: goto          76
     113: iload_1
     114: iload         6
     116: if_icmplt     121
     119: aconst_null
     120: areturn
     121: iload         5
     123: iconst_m1
     124: if_icmpne     182
     127: aload_2
     128: invokevirtual #23                 // Method java/lang/String.length:()I
     131: iconst_1
     132: isub
     133: istore        7
     135: aload_2
     136: iload         7
     138: invokevirtual #35                 // Method java/lang/String.charAt:(I)C
     141: bipush        10
     143: if_icmpne     165
     146: new           #36                 // class com/google/javascript/jscomp/SimpleRegion
     149: dup
     150: iload         4
     152: iload         6
     154: aload_2
     155: iload_3
     156: iload         7
     158: invokevirtual #32                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     161: invokespecial #37                 // Method com/google/javascript/jscomp/SimpleRegion."<init>":(IILjava/lang/String;)V
     164: areturn
     165: new           #36                 // class com/google/javascript/jscomp/SimpleRegion
     168: dup
     169: iload         4
     171: iload         6
     173: aload_2
     174: iload_3
     175: invokevirtual #38                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     178: invokespecial #37                 // Method com/google/javascript/jscomp/SimpleRegion."<init>":(IILjava/lang/String;)V
     181: areturn
     182: new           #36                 // class com/google/javascript/jscomp/SimpleRegion
     185: dup
     186: iload         4
     188: iload         6
     190: aload_2
     191: iload_3
     192: iload         5
     194: invokevirtual #32                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     197: invokespecial #37                 // Method com/google/javascript/jscomp/SimpleRegion."<init>":(IILjava/lang/String;)V
     200: areturn
    Exception table:
       from    to  target type
           3     8    11   Class java/io/IOException

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #11                 // Field fileName:Ljava/lang/String;
       4: areturn

  public static com.google.javascript.jscomp.SourceFile fromFile(java.lang.String, java.nio.charset.Charset);
    Code:
       0: invokestatic  #39                 // Method builder:()Lcom/google/javascript/jscomp/SourceFile$Builder;
       3: aload_1
       4: invokevirtual #40                 // Method com/google/javascript/jscomp/SourceFile$Builder.withCharset:(Ljava/nio/charset/Charset;)Lcom/google/javascript/jscomp/SourceFile$Builder;
       7: aload_0
       8: invokevirtual #41                 // Method com/google/javascript/jscomp/SourceFile$Builder.buildFromFile:(Ljava/lang/String;)Lcom/google/javascript/jscomp/SourceFile;
      11: areturn

  public static com.google.javascript.jscomp.SourceFile fromFile(java.lang.String);
    Code:
       0: invokestatic  #39                 // Method builder:()Lcom/google/javascript/jscomp/SourceFile$Builder;
       3: aload_0
       4: invokevirtual #41                 // Method com/google/javascript/jscomp/SourceFile$Builder.buildFromFile:(Ljava/lang/String;)Lcom/google/javascript/jscomp/SourceFile;
       7: areturn

  public static com.google.javascript.jscomp.SourceFile fromFile(java.io.File, java.nio.charset.Charset);
    Code:
       0: invokestatic  #39                 // Method builder:()Lcom/google/javascript/jscomp/SourceFile$Builder;
       3: aload_1
       4: invokevirtual #40                 // Method com/google/javascript/jscomp/SourceFile$Builder.withCharset:(Ljava/nio/charset/Charset;)Lcom/google/javascript/jscomp/SourceFile$Builder;
       7: aload_0
       8: invokevirtual #42                 // Method com/google/javascript/jscomp/SourceFile$Builder.buildFromFile:(Ljava/io/File;)Lcom/google/javascript/jscomp/SourceFile;
      11: areturn

  public static com.google.javascript.jscomp.SourceFile fromFile(java.io.File);
    Code:
       0: invokestatic  #39                 // Method builder:()Lcom/google/javascript/jscomp/SourceFile$Builder;
       3: aload_0
       4: invokevirtual #42                 // Method com/google/javascript/jscomp/SourceFile$Builder.buildFromFile:(Ljava/io/File;)Lcom/google/javascript/jscomp/SourceFile;
       7: areturn

  public static com.google.javascript.jscomp.SourceFile fromCode(java.lang.String, java.lang.String);
    Code:
       0: invokestatic  #39                 // Method builder:()Lcom/google/javascript/jscomp/SourceFile$Builder;
       3: aload_0
       4: aload_1
       5: invokevirtual #43                 // Method com/google/javascript/jscomp/SourceFile$Builder.buildFromCode:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/SourceFile;
       8: areturn

  public static com.google.javascript.jscomp.SourceFile fromInputStream(java.lang.String, java.io.InputStream) throws java.io.IOException;
    Code:
       0: invokestatic  #39                 // Method builder:()Lcom/google/javascript/jscomp/SourceFile$Builder;
       3: aload_0
       4: aload_1
       5: invokevirtual #44                 // Method com/google/javascript/jscomp/SourceFile$Builder.buildFromInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lcom/google/javascript/jscomp/SourceFile;
       8: areturn

  public static com.google.javascript.jscomp.SourceFile fromInputStream(java.lang.String, java.io.InputStream, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: invokestatic  #39                 // Method builder:()Lcom/google/javascript/jscomp/SourceFile$Builder;
       3: aload_2
       4: invokevirtual #40                 // Method com/google/javascript/jscomp/SourceFile$Builder.withCharset:(Ljava/nio/charset/Charset;)Lcom/google/javascript/jscomp/SourceFile$Builder;
       7: aload_0
       8: aload_1
       9: invokevirtual #44                 // Method com/google/javascript/jscomp/SourceFile$Builder.buildFromInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lcom/google/javascript/jscomp/SourceFile;
      12: areturn

  public static com.google.javascript.jscomp.SourceFile fromReader(java.lang.String, java.io.Reader) throws java.io.IOException;
    Code:
       0: invokestatic  #39                 // Method builder:()Lcom/google/javascript/jscomp/SourceFile$Builder;
       3: aload_0
       4: aload_1
       5: invokevirtual #45                 // Method com/google/javascript/jscomp/SourceFile$Builder.buildFromReader:(Ljava/lang/String;Ljava/io/Reader;)Lcom/google/javascript/jscomp/SourceFile;
       8: areturn

  public static com.google.javascript.jscomp.SourceFile fromGenerator(java.lang.String, com.google.javascript.jscomp.SourceFile$Generator);
    Code:
       0: invokestatic  #39                 // Method builder:()Lcom/google/javascript/jscomp/SourceFile$Builder;
       3: aload_0
       4: aload_1
       5: invokevirtual #46                 // Method com/google/javascript/jscomp/SourceFile$Builder.buildFromGenerator:(Ljava/lang/String;Lcom/google/javascript/jscomp/SourceFile$Generator;)Lcom/google/javascript/jscomp/SourceFile;
       8: areturn

  public static com.google.javascript.jscomp.SourceFile$Builder builder();
    Code:
       0: new           #47                 // class com/google/javascript/jscomp/SourceFile$Builder
       3: dup
       4: invokespecial #48                 // Method com/google/javascript/jscomp/SourceFile$Builder."<init>":()V
       7: areturn

  static void access$000(com.google.javascript.jscomp.SourceFile, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method setCode:(Ljava/lang/String;)V
       5: return
}
