Compiled from "InlineFunctions.java"
class com.google.javascript.jscomp.InlineFunctions$Inline implements com.google.javascript.jscomp.InlineFunctions$CallVisitorCallback {
  private final com.google.javascript.jscomp.FunctionInjector injector;

  final com.google.javascript.jscomp.InlineFunctions this$0;

  com.google.javascript.jscomp.InlineFunctions$Inline(com.google.javascript.jscomp.InlineFunctions, com.google.javascript.jscomp.FunctionInjector);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/InlineFunctions;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field injector:Lcom/google/javascript/jscomp/FunctionInjector;
      14: return

  public void visitCallSite(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.jscomp.InlineFunctions$FunctionState);
    Code:
       0: aload_3
       1: invokevirtual #4                  // Method com/google/javascript/jscomp/InlineFunctions$FunctionState.hasExistingFunctionDefinition:()Z
       4: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkState:(Z)V
       7: aload_3
       8: invokevirtual #6                  // Method com/google/javascript/jscomp/InlineFunctions$FunctionState.canInline:()Z
      11: ifeq          40
      14: aload_3
      15: aload_2
      16: invokevirtual #7                  // Method com/google/javascript/jscomp/InlineFunctions$FunctionState.getReference:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/jscomp/InlineFunctions$Reference;
      19: astore        4
      21: aload         4
      23: ifnull        40
      26: aload_0
      27: aload_1
      28: aload         4
      30: aload_3
      31: invokespecial #8                  // Method inlineFunction:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/jscomp/InlineFunctions$Reference;Lcom/google/javascript/jscomp/InlineFunctions$FunctionState;)V
      34: aload         4
      36: iconst_1
      37: putfield      #9                  // Field com/google/javascript/jscomp/InlineFunctions$Reference.inlined:Z
      40: return

  private void inlineFunction(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.jscomp.InlineFunctions$Reference, com.google.javascript.jscomp.InlineFunctions$FunctionState);
    Code:
       0: aload_3
       1: invokevirtual #10                 // Method com/google/javascript/jscomp/InlineFunctions$FunctionState.getFn:()Lcom/google/javascript/jscomp/InlineFunctions$Function;
       4: astore        4
       6: aload         4
       8: invokeinterface #11,  1           // InterfaceMethod com/google/javascript/jscomp/InlineFunctions$Function.getName:()Ljava/lang/String;
      13: astore        5
      15: aload_3
      16: invokevirtual #12                 // Method com/google/javascript/jscomp/InlineFunctions$FunctionState.getSafeFnNode:()Lcom/google/javascript/rhino/Node;
      19: astore        6
      21: aload_0
      22: getfield      #3                  // Field injector:Lcom/google/javascript/jscomp/FunctionInjector;
      25: aload_2
      26: aload         5
      28: aload         6
      30: invokevirtual #13                 // Method com/google/javascript/jscomp/FunctionInjector.inline:(Lcom/google/javascript/jscomp/FunctionInjector$Reference;Ljava/lang/String;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      33: astore        7
      35: aload         7
      37: aload_2
      38: getfield      #14                 // Field com/google/javascript/jscomp/InlineFunctions$Reference.callNode:Lcom/google/javascript/rhino/Node;
      41: invokevirtual #15                 // Method com/google/javascript/rhino/Node.isEquivalentTo:(Lcom/google/javascript/rhino/Node;)Z
      44: ifne          56
      47: aload_1
      48: invokevirtual #16                 // Method com/google/javascript/jscomp/NodeTraversal.getCompiler:()Lcom/google/javascript/jscomp/AbstractCompiler;
      51: aload         7
      53: invokevirtual #17                 // Method com/google/javascript/jscomp/AbstractCompiler.reportChangeToEnclosingScope:(Lcom/google/javascript/rhino/Node;)V
      56: aload_1
      57: invokevirtual #16                 // Method com/google/javascript/jscomp/NodeTraversal.getCompiler:()Lcom/google/javascript/jscomp/AbstractCompiler;
      60: new           #18                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      67: ldc           #20                 // String Inlined function:
      69: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload         4
      74: invokeinterface #11,  1           // InterfaceMethod com/google/javascript/jscomp/InlineFunctions$Function.getName:()Ljava/lang/String;
      79: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokevirtual #23                 // Method com/google/javascript/jscomp/AbstractCompiler.addToDebugLog:(Ljava/lang/String;)V
      88: return
}
