Compiled from "MaybeReachingVariableUse.java"
class com.google.javascript.jscomp.MaybeReachingVariableUse extends com.google.javascript.jscomp.DataFlowAnalysis<com.google.javascript.rhino.Node, com.google.javascript.jscomp.MaybeReachingVariableUse$ReachingUses> {
  private final com.google.javascript.jscomp.Scope jsScope;

  private final java.util.Set<com.google.javascript.jscomp.Scope$Var> escaped;

  com.google.javascript.jscomp.MaybeReachingVariableUse(com.google.javascript.jscomp.ControlFlowGraph<com.google.javascript.rhino.Node>, com.google.javascript.jscomp.Scope, com.google.javascript.jscomp.AbstractCompiler);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class com/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUsesJoinOp
       5: dup
       6: aconst_null
       7: invokespecial #2                  // Method com/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUsesJoinOp."<init>":(Lcom/google/javascript/jscomp/MaybeReachingVariableUse$1;)V
      10: invokespecial #3                  // Method com/google/javascript/jscomp/DataFlowAnalysis."<init>":(Lcom/google/javascript/jscomp/ControlFlowGraph;Lcom/google/javascript/jscomp/JoinOp;)V
      13: aload_0
      14: aload_2
      15: putfield      #4                  // Field jsScope:Lcom/google/javascript/jscomp/Scope;
      18: aload_0
      19: invokestatic  #5                  // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
      22: putfield      #6                  // Field escaped:Ljava/util/Set;
      25: aload_2
      26: aload_0
      27: getfield      #6                  // Field escaped:Ljava/util/Set;
      30: aload_3
      31: invokestatic  #7                  // Method computeEscaped:(Lcom/google/javascript/jscomp/Scope;Ljava/util/Set;Lcom/google/javascript/jscomp/AbstractCompiler;)V
      34: return

  boolean isForward();
    Code:
       0: iconst_0
       1: ireturn

  com.google.javascript.jscomp.MaybeReachingVariableUse$ReachingUses createEntryLattice();
    Code:
       0: new           #8                  // class com/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses
       3: dup
       4: invokespecial #9                  // Method com/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses."<init>":()V
       7: areturn

  com.google.javascript.jscomp.MaybeReachingVariableUse$ReachingUses createInitialEstimateLattice();
    Code:
       0: new           #8                  // class com/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses
       3: dup
       4: invokespecial #9                  // Method com/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses."<init>":()V
       7: areturn

  com.google.javascript.jscomp.MaybeReachingVariableUse$ReachingUses flowThrough(com.google.javascript.rhino.Node, com.google.javascript.jscomp.MaybeReachingVariableUse$ReachingUses);
    Code:
       0: new           #8                  // class com/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses
       3: dup
       4: aload_2
       5: invokespecial #10                 // Method com/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses."<init>":(Lcom/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses;)V
       8: astore_3
       9: aload_0
      10: aload_1
      11: invokespecial #11                 // Method hasExceptionHandler:(Lcom/google/javascript/rhino/Node;)Z
      14: istore        4
      16: aload_0
      17: aload_1
      18: aload_1
      19: aload_3
      20: iload         4
      22: invokespecial #12                 // Method computeMayUse:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses;Z)V
      25: aload_3
      26: areturn

  private boolean hasExceptionHandler(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getCfg:()Lcom/google/javascript/jscomp/ControlFlowGraph;
       4: aload_1
       5: invokevirtual #14                 // Method com/google/javascript/jscomp/ControlFlowGraph.getOutEdges:(Ljava/lang/Object;)Ljava/util/List;
       8: astore_2
       9: aload_2
      10: invokeinterface #15,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      15: astore_3
      16: aload_3
      17: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          54
      25: aload_3
      26: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #18                 // class com/google/javascript/jscomp/graph/DiGraph$DiGraphEdge
      34: astore        4
      36: aload         4
      38: invokeinterface #19,  1           // InterfaceMethod com/google/javascript/jscomp/graph/DiGraph$DiGraphEdge.getValue:()Ljava/lang/Object;
      43: getstatic     #20                 // Field com/google/javascript/jscomp/ControlFlowGraph$Branch.ON_EX:Lcom/google/javascript/jscomp/ControlFlowGraph$Branch;
      46: if_acmpne     51
      49: iconst_1
      50: ireturn
      51: goto          16
      54: iconst_0
      55: ireturn

  private void computeMayUse(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.jscomp.MaybeReachingVariableUse$ReachingUses, boolean);
    Code:
       0: aload_1
       1: invokevirtual #21                 // Method com/google/javascript/rhino/Node.getType:()I
       4: lookupswitch  { // 11
                    38: 105
                    98: 237
                   100: 213
                   101: 213
                   105: 104
                   108: 116
                   113: 116
                   114: 116
                   115: 129
                   118: 275
                   125: 104
               default: 327
          }
     104: return
     105: aload_0
     106: aload_1
     107: invokevirtual #22                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
     110: aload_2
     111: aload_3
     112: invokespecial #23                 // Method addToUseIfLocal:(Ljava/lang/String;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses;)V
     115: return
     116: aload_0
     117: aload_1
     118: invokestatic  #24                 // Method com/google/javascript/jscomp/NodeUtil.getConditionExpression:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
     121: aload_2
     122: aload_3
     123: iload         4
     125: invokespecial #12                 // Method computeMayUse:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses;Z)V
     128: return
     129: aload_1
     130: invokestatic  #25                 // Method com/google/javascript/jscomp/NodeUtil.isForIn:(Lcom/google/javascript/rhino/Node;)Z
     133: ifne          151
     136: aload_0
     137: aload_1
     138: invokestatic  #24                 // Method com/google/javascript/jscomp/NodeUtil.getConditionExpression:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
     141: aload_2
     142: aload_3
     143: iload         4
     145: invokespecial #12                 // Method computeMayUse:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses;Z)V
     148: goto          212
     151: aload_1
     152: invokevirtual #26                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     155: astore        5
     157: aload         5
     159: invokevirtual #27                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
     162: astore        6
     164: aload         5
     166: invokevirtual #28                 // Method com/google/javascript/rhino/Node.isVar:()Z
     169: ifeq          179
     172: aload         5
     174: invokevirtual #29                 // Method com/google/javascript/rhino/Node.getLastChild:()Lcom/google/javascript/rhino/Node;
     177: astore        5
     179: aload         5
     181: invokevirtual #30                 // Method com/google/javascript/rhino/Node.isName:()Z
     184: ifeq          202
     187: iload         4
     189: ifne          202
     192: aload_0
     193: aload         5
     195: invokevirtual #22                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
     198: aload_3
     199: invokespecial #31                 // Method removeFromUseIfLocal:(Ljava/lang/String;Lcom/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses;)V
     202: aload_0
     203: aload         6
     205: aload_2
     206: aload_3
     207: iload         4
     209: invokespecial #12                 // Method computeMayUse:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses;Z)V
     212: return
     213: aload_0
     214: aload_1
     215: invokevirtual #29                 // Method com/google/javascript/rhino/Node.getLastChild:()Lcom/google/javascript/rhino/Node;
     218: aload_2
     219: aload_3
     220: iconst_1
     221: invokespecial #12                 // Method computeMayUse:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses;Z)V
     224: aload_0
     225: aload_1
     226: invokevirtual #26                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     229: aload_2
     230: aload_3
     231: iload         4
     233: invokespecial #12                 // Method computeMayUse:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses;Z)V
     236: return
     237: aload_0
     238: aload_1
     239: invokevirtual #29                 // Method com/google/javascript/rhino/Node.getLastChild:()Lcom/google/javascript/rhino/Node;
     242: aload_2
     243: aload_3
     244: iconst_1
     245: invokespecial #12                 // Method computeMayUse:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses;Z)V
     248: aload_0
     249: aload_1
     250: invokevirtual #26                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     253: invokevirtual #27                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
     256: aload_2
     257: aload_3
     258: iconst_1
     259: invokespecial #12                 // Method computeMayUse:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses;Z)V
     262: aload_0
     263: aload_1
     264: invokevirtual #26                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     267: aload_2
     268: aload_3
     269: iload         4
     271: invokespecial #12                 // Method computeMayUse:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses;Z)V
     274: return
     275: aload_1
     276: invokevirtual #26                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     279: astore        5
     281: aload_1
     282: invokevirtual #32                 // Method com/google/javascript/rhino/Node.hasChildren:()Z
     285: ldc           #33                 // String AST should be normalized
     287: invokestatic  #34                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
     290: aload         5
     292: invokevirtual #32                 // Method com/google/javascript/rhino/Node.hasChildren:()Z
     295: ifeq          326
     298: aload_0
     299: aload         5
     301: invokevirtual #26                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     304: aload_2
     305: aload_3
     306: iload         4
     308: invokespecial #12                 // Method computeMayUse:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses;Z)V
     311: iload         4
     313: ifne          326
     316: aload_0
     317: aload         5
     319: invokevirtual #22                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
     322: aload_3
     323: invokespecial #31                 // Method removeFromUseIfLocal:(Ljava/lang/String;Lcom/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses;)V
     326: return
     327: aload_1
     328: invokestatic  #35                 // Method com/google/javascript/jscomp/NodeUtil.isAssignmentOp:(Lcom/google/javascript/rhino/Node;)Z
     331: ifeq          399
     334: aload_1
     335: invokevirtual #26                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     338: invokevirtual #30                 // Method com/google/javascript/rhino/Node.isName:()Z
     341: ifeq          399
     344: aload_1
     345: invokevirtual #26                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     348: astore        6
     350: iload         4
     352: ifne          365
     355: aload_0
     356: aload         6
     358: invokevirtual #22                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
     361: aload_3
     362: invokespecial #31                 // Method removeFromUseIfLocal:(Ljava/lang/String;Lcom/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses;)V
     365: aload_1
     366: invokevirtual #36                 // Method com/google/javascript/rhino/Node.isAssign:()Z
     369: ifne          383
     372: aload_0
     373: aload         6
     375: invokevirtual #22                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
     378: aload_2
     379: aload_3
     380: invokespecial #23                 // Method addToUseIfLocal:(Ljava/lang/String;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses;)V
     383: aload_0
     384: aload         6
     386: invokevirtual #27                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
     389: aload_2
     390: aload_3
     391: iload         4
     393: invokespecial #12                 // Method computeMayUse:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses;Z)V
     396: goto          431
     399: aload_1
     400: invokevirtual #29                 // Method com/google/javascript/rhino/Node.getLastChild:()Lcom/google/javascript/rhino/Node;
     403: astore        6
     405: aload         6
     407: ifnull        431
     410: aload_0
     411: aload         6
     413: aload_2
     414: aload_3
     415: iload         4
     417: invokespecial #12                 // Method computeMayUse:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses;Z)V
     420: aload_1
     421: aload         6
     423: invokevirtual #37                 // Method com/google/javascript/rhino/Node.getChildBefore:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
     426: astore        6
     428: goto          405
     431: return

  private void addToUseIfLocal(java.lang.String, com.google.javascript.rhino.Node, com.google.javascript.jscomp.MaybeReachingVariableUse$ReachingUses);
    Code:
       0: aload_0
       1: getfield      #4                  // Field jsScope:Lcom/google/javascript/jscomp/Scope;
       4: aload_1
       5: invokevirtual #38                 // Method com/google/javascript/jscomp/Scope.getVar:(Ljava/lang/String;)Lcom/google/javascript/jscomp/Scope$Var;
       8: astore        4
      10: aload         4
      12: ifnull        27
      15: aload         4
      17: getfield      #39                 // Field com/google/javascript/jscomp/Scope$Var.scope:Lcom/google/javascript/jscomp/Scope;
      20: aload_0
      21: getfield      #4                  // Field jsScope:Lcom/google/javascript/jscomp/Scope;
      24: if_acmpeq     28
      27: return
      28: aload_0
      29: getfield      #6                  // Field escaped:Ljava/util/Set;
      32: aload         4
      34: invokeinterface #40,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      39: ifne          55
      42: aload_3
      43: getfield      #41                 // Field com/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses.mayUseMap:Lcom/google/common/collect/Multimap;
      46: aload         4
      48: aload_2
      49: invokeinterface #42,  3           // InterfaceMethod com/google/common/collect/Multimap.put:(Ljava/lang/Object;Ljava/lang/Object;)Z
      54: pop
      55: return

  private void removeFromUseIfLocal(java.lang.String, com.google.javascript.jscomp.MaybeReachingVariableUse$ReachingUses);
    Code:
       0: aload_0
       1: getfield      #4                  // Field jsScope:Lcom/google/javascript/jscomp/Scope;
       4: aload_1
       5: invokevirtual #38                 // Method com/google/javascript/jscomp/Scope.getVar:(Ljava/lang/String;)Lcom/google/javascript/jscomp/Scope$Var;
       8: astore_3
       9: aload_3
      10: ifnull        24
      13: aload_3
      14: getfield      #39                 // Field com/google/javascript/jscomp/Scope$Var.scope:Lcom/google/javascript/jscomp/Scope;
      17: aload_0
      18: getfield      #4                  // Field jsScope:Lcom/google/javascript/jscomp/Scope;
      21: if_acmpeq     25
      24: return
      25: aload_0
      26: getfield      #6                  // Field escaped:Ljava/util/Set;
      29: aload_3
      30: invokeinterface #40,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      35: ifne          49
      38: aload_2
      39: getfield      #41                 // Field com/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses.mayUseMap:Lcom/google/common/collect/Multimap;
      42: aload_3
      43: invokeinterface #43,  2           // InterfaceMethod com/google/common/collect/Multimap.removeAll:(Ljava/lang/Object;)Ljava/util/Collection;
      48: pop
      49: return

  java.util.Collection<com.google.javascript.rhino.Node> getUses(java.lang.String, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getCfg:()Lcom/google/javascript/jscomp/ControlFlowGraph;
       4: aload_2
       5: invokevirtual #44                 // Method com/google/javascript/jscomp/ControlFlowGraph.getNode:(Ljava/lang/Object;)Lcom/google/javascript/jscomp/graph/GraphNode;
       8: astore_3
       9: aload_3
      10: invokestatic  #45                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_3
      15: invokeinterface #46,  1           // InterfaceMethod com/google/javascript/jscomp/graph/GraphNode.getAnnotation:()Lcom/google/javascript/jscomp/graph/Annotation;
      20: checkcast     #47                 // class com/google/javascript/jscomp/DataFlowAnalysis$FlowState
      23: astore        4
      25: aload         4
      27: invokevirtual #48                 // Method com/google/javascript/jscomp/DataFlowAnalysis$FlowState.getOut:()Lcom/google/javascript/jscomp/graph/LatticeElement;
      30: checkcast     #8                  // class com/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses
      33: getfield      #41                 // Field com/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses.mayUseMap:Lcom/google/common/collect/Multimap;
      36: aload_0
      37: getfield      #4                  // Field jsScope:Lcom/google/javascript/jscomp/Scope;
      40: aload_1
      41: invokevirtual #38                 // Method com/google/javascript/jscomp/Scope.getVar:(Ljava/lang/String;)Lcom/google/javascript/jscomp/Scope$Var;
      44: invokeinterface #49,  2           // InterfaceMethod com/google/common/collect/Multimap.get:(Ljava/lang/Object;)Ljava/util/Collection;
      49: areturn

  com.google.javascript.jscomp.graph.LatticeElement createEntryLattice();
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method createEntryLattice:()Lcom/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses;
       4: areturn

  com.google.javascript.jscomp.graph.LatticeElement createInitialEstimateLattice();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method createInitialEstimateLattice:()Lcom/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses;
       4: areturn

  com.google.javascript.jscomp.graph.LatticeElement flowThrough(java.lang.Object, com.google.javascript.jscomp.graph.LatticeElement);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #52                 // class com/google/javascript/rhino/Node
       5: aload_2
       6: checkcast     #8                  // class com/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses
       9: invokevirtual #53                 // Method flowThrough:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses;)Lcom/google/javascript/jscomp/MaybeReachingVariableUse$ReachingUses;
      12: areturn
}
