Compiled from "CallGraph.java"
public class com.google.javascript.jscomp.CallGraph implements com.google.javascript.jscomp.CompilerPass {
  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  private final java.util.Map<com.google.javascript.rhino.Node, com.google.javascript.jscomp.CallGraph$Callsite> callsitesByNode;

  private final java.util.Map<com.google.javascript.rhino.Node, com.google.javascript.jscomp.CallGraph$Function> functionsByNode;

  private final boolean computeBackwardGraph;

  private final boolean computeForwardGraph;

  private boolean alreadyRun;

  public static final java.lang.String MAIN_FUNCTION_NAME;

  private com.google.javascript.jscomp.CallGraph$Function mainFunction;

  public com.google.javascript.jscomp.CallGraph(com.google.javascript.jscomp.AbstractCompiler, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #9                  // Field alreadyRun:Z
       9: iload_2
      10: ifne          17
      13: iload_3
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: invokestatic  #10                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      25: aload_0
      26: aload_1
      27: putfield      #11                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      30: aload_0
      31: iload_2
      32: putfield      #1                  // Field computeForwardGraph:Z
      35: aload_0
      36: iload_3
      37: putfield      #2                  // Field computeBackwardGraph:Z
      40: aload_0
      41: invokestatic  #12                 // Method com/google/common/collect/Maps.newLinkedHashMap:()Ljava/util/LinkedHashMap;
      44: putfield      #13                 // Field callsitesByNode:Ljava/util/Map;
      47: aload_0
      48: invokestatic  #12                 // Method com/google/common/collect/Maps.newLinkedHashMap:()Ljava/util/LinkedHashMap;
      51: putfield      #6                  // Field functionsByNode:Ljava/util/Map;
      54: return

  public com.google.javascript.jscomp.CallGraph(com.google.javascript.jscomp.AbstractCompiler);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: iconst_1
       4: invokespecial #14                 // Method "<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;ZZ)V
       7: return

  public void process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #9                  // Field alreadyRun:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: aload_1
      17: aload_2
      18: invokespecial #16                 // Method constructDefinitionProvider:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/jscomp/DefinitionProvider;
      21: astore_3
      22: aload_0
      23: aload_2
      24: aload_3
      25: invokespecial #17                 // Method createFunctionsAndCallsites:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/DefinitionProvider;)V
      28: aload_0
      29: aload_3
      30: invokespecial #18                 // Method fillInFunctionInformation:(Lcom/google/javascript/jscomp/DefinitionProvider;)V
      33: aload_0
      34: iconst_1
      35: putfield      #9                  // Field alreadyRun:Z
      38: return

  public com.google.javascript.jscomp.CallGraph$Function getFunctionForAstNode(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #19                 // Method com/google/javascript/rhino/Node.isFunction:()Z
       4: invokestatic  #10                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
       7: aload_0
       8: getfield      #6                  // Field functionsByNode:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #20,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #21                 // class com/google/javascript/jscomp/CallGraph$Function
      20: areturn

  public com.google.javascript.jscomp.CallGraph$Function getMainFunction();
    Code:
       0: aload_0
       1: getfield      #3                  // Field mainFunction:Lcom/google/javascript/jscomp/CallGraph$Function;
       4: areturn

  public java.util.Collection<com.google.javascript.jscomp.CallGraph$Function> getAllFunctions();
    Code:
       0: aload_0
       1: getfield      #6                  // Field functionsByNode:Ljava/util/Map;
       4: invokeinterface #22,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  public com.google.javascript.jscomp.CallGraph$Function getUniqueFunctionWithName(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getAllFunctions:()Ljava/util/Collection;
       4: new           #24                 // class com/google/javascript/jscomp/CallGraph$1
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #25                 // Method com/google/javascript/jscomp/CallGraph$1."<init>":(Lcom/google/javascript/jscomp/CallGraph;Ljava/lang/String;)V
      13: invokestatic  #26                 // Method com/google/common/collect/Collections2.filter:(Ljava/util/Collection;Lcom/google/common/base/Predicate;)Ljava/util/Collection;
      16: astore_2
      17: aload_2
      18: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.size:()I
      23: iconst_1
      24: if_icmpne     42
      27: aload_2
      28: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      33: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #21                 // class com/google/javascript/jscomp/CallGraph$Function
      41: areturn
      42: new           #30                 // class java/lang/IllegalStateException
      45: dup
      46: new           #31                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #33                 // String Found
      55: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_2
      59: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.size:()I
      64: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: ldc           #36                 // String  functions with name
      69: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_1
      73: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokespecial #38                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      82: athrow

  public com.google.javascript.jscomp.CallGraph$Callsite getCallsiteForAstNode(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #39                 // Method com/google/javascript/rhino/Node.isCall:()Z
       4: ifne          14
       7: aload_1
       8: invokevirtual #40                 // Method com/google/javascript/rhino/Node.isNew:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokestatic  #10                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      22: aload_0
      23: getfield      #13                 // Field callsitesByNode:Ljava/util/Map;
      26: aload_1
      27: invokeinterface #20,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #41                 // class com/google/javascript/jscomp/CallGraph$Callsite
      35: areturn

  public java.util.Collection<com.google.javascript.jscomp.CallGraph$Callsite> getAllCallsites();
    Code:
       0: aload_0
       1: getfield      #13                 // Field callsitesByNode:Ljava/util/Map;
       4: invokeinterface #22,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  private void createFunctionsAndCallsites(com.google.javascript.rhino.Node, com.google.javascript.jscomp.DefinitionProvider);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokespecial #5                  // Method createFunction:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/jscomp/CallGraph$Function;
       6: putfield      #3                  // Field mainFunction:Lcom/google/javascript/jscomp/CallGraph$Function;
       9: aload_0
      10: getfield      #11                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      13: aload_1
      14: new           #42                 // class com/google/javascript/jscomp/CallGraph$2
      17: dup
      18: aload_0
      19: aload_2
      20: invokespecial #43                 // Method com/google/javascript/jscomp/CallGraph$2."<init>":(Lcom/google/javascript/jscomp/CallGraph;Lcom/google/javascript/jscomp/DefinitionProvider;)V
      23: invokestatic  #44                 // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      26: return

  private com.google.javascript.jscomp.CallGraph$Function createFunction(com.google.javascript.rhino.Node);
    Code:
       0: new           #21                 // class com/google/javascript/jscomp/CallGraph$Function
       3: dup
       4: aload_0
       5: aload_1
       6: aconst_null
       7: invokespecial #45                 // Method com/google/javascript/jscomp/CallGraph$Function."<init>":(Lcom/google/javascript/jscomp/CallGraph;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/CallGraph$1;)V
      10: astore_2
      11: aload_0
      12: getfield      #6                  // Field functionsByNode:Ljava/util/Map;
      15: aload_1
      16: aload_2
      17: invokeinterface #46,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: aload_2
      24: areturn

  private com.google.javascript.jscomp.CallGraph$Callsite createCallsite(com.google.javascript.rhino.Node);
    Code:
       0: new           #41                 // class com/google/javascript/jscomp/CallGraph$Callsite
       3: dup
       4: aload_0
       5: aload_1
       6: aconst_null
       7: invokespecial #47                 // Method com/google/javascript/jscomp/CallGraph$Callsite."<init>":(Lcom/google/javascript/jscomp/CallGraph;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/CallGraph$1;)V
      10: astore_2
      11: aload_0
      12: getfield      #13                 // Field callsitesByNode:Ljava/util/Map;
      15: aload_1
      16: aload_2
      17: invokeinterface #46,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: aload_2
      24: areturn

  private void connectCallsiteToTargets(com.google.javascript.jscomp.CallGraph$Callsite, com.google.javascript.jscomp.DefinitionProvider);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #48                 // Method com/google/javascript/jscomp/CallGraph$Callsite.getAstNode:()Lcom/google/javascript/rhino/Node;
       5: aload_2
       6: invokespecial #49                 // Method lookupDefinitionsForTargetsOfCall:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/DefinitionProvider;)Ljava/util/Collection;
       9: astore_3
      10: aload_3
      11: ifnonnull     23
      14: aload_1
      15: iconst_1
      16: invokestatic  #50                 // Method com/google/javascript/jscomp/CallGraph$Callsite.access$802:(Lcom/google/javascript/jscomp/CallGraph$Callsite;Z)Z
      19: pop
      20: goto          157
      23: aload_3
      24: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      29: astore        4
      31: aload         4
      33: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          157
      41: aload         4
      43: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #52                 // class com/google/javascript/jscomp/DefinitionsRemover$Definition
      51: astore        5
      53: aload         5
      55: invokevirtual #53                 // Method com/google/javascript/jscomp/DefinitionsRemover$Definition.isExtern:()Z
      58: ifeq          70
      61: aload_1
      62: iconst_1
      63: invokestatic  #54                 // Method com/google/javascript/jscomp/CallGraph$Callsite.access$902:(Lcom/google/javascript/jscomp/CallGraph$Callsite;Z)Z
      66: pop
      67: goto          154
      70: aload         5
      72: invokevirtual #55                 // Method com/google/javascript/jscomp/DefinitionsRemover$Definition.getRValue:()Lcom/google/javascript/rhino/Node;
      75: astore        6
      77: aload         6
      79: ifnull        148
      82: aload         6
      84: invokevirtual #19                 // Method com/google/javascript/rhino/Node.isFunction:()Z
      87: ifeq          148
      90: aload_0
      91: getfield      #6                  // Field functionsByNode:Ljava/util/Map;
      94: aload         6
      96: invokeinterface #20,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     101: checkcast     #21                 // class com/google/javascript/jscomp/CallGraph$Function
     104: astore        7
     106: aload         7
     108: ifnonnull     119
     111: aload_0
     112: aload         6
     114: invokespecial #5                  // Method createFunction:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/jscomp/CallGraph$Function;
     117: astore        7
     119: aload_0
     120: getfield      #1                  // Field computeForwardGraph:Z
     123: ifeq          132
     126: aload_1
     127: aload         7
     129: invokestatic  #56                 // Method com/google/javascript/jscomp/CallGraph$Callsite.access$1000:(Lcom/google/javascript/jscomp/CallGraph$Callsite;Lcom/google/javascript/jscomp/CallGraph$Function;)V
     132: aload_0
     133: getfield      #2                  // Field computeBackwardGraph:Z
     136: ifeq          145
     139: aload         7
     141: aload_1
     142: invokestatic  #57                 // Method com/google/javascript/jscomp/CallGraph$Function.access$1100:(Lcom/google/javascript/jscomp/CallGraph$Function;Lcom/google/javascript/jscomp/CallGraph$Callsite;)V
     145: goto          154
     148: aload_1
     149: iconst_1
     150: invokestatic  #50                 // Method com/google/javascript/jscomp/CallGraph$Callsite.access$802:(Lcom/google/javascript/jscomp/CallGraph$Callsite;Z)Z
     153: pop
     154: goto          31
     157: return

  private void fillInFunctionInformation(com.google.javascript.jscomp.DefinitionProvider);
    Code:
       0: aload_1
       1: checkcast     #58                 // class com/google/javascript/jscomp/SimpleDefinitionFinder
       4: astore_2
       5: aload_2
       6: invokevirtual #59                 // Method com/google/javascript/jscomp/SimpleDefinitionFinder.getDefinitionSites:()Ljava/util/Collection;
       9: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          107
      24: aload_3
      25: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #60                 // class com/google/javascript/jscomp/DefinitionSite
      33: astore        4
      35: aload         4
      37: getfield      #61                 // Field com/google/javascript/jscomp/DefinitionSite.definition:Lcom/google/javascript/jscomp/DefinitionsRemover$Definition;
      40: astore        5
      42: aload_0
      43: aload         5
      45: invokespecial #62                 // Method lookupFunctionForDefinition:(Lcom/google/javascript/jscomp/DefinitionsRemover$Definition;)Lcom/google/javascript/jscomp/CallGraph$Function;
      48: astore        6
      50: aload         6
      52: ifnull        104
      55: aload_2
      56: aload         5
      58: invokevirtual #63                 // Method com/google/javascript/jscomp/SimpleDefinitionFinder.getUseSites:(Lcom/google/javascript/jscomp/DefinitionsRemover$Definition;)Ljava/util/Collection;
      61: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      66: astore        7
      68: aload         7
      70: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      75: ifeq          104
      78: aload         7
      80: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      85: checkcast     #64                 // class com/google/javascript/jscomp/UseSite
      88: astore        8
      90: aload_0
      91: aload         6
      93: aload         8
      95: getfield      #65                 // Field com/google/javascript/jscomp/UseSite.node:Lcom/google/javascript/rhino/Node;
      98: invokespecial #66                 // Method updateFunctionForUse:(Lcom/google/javascript/jscomp/CallGraph$Function;Lcom/google/javascript/rhino/Node;)V
     101: goto          68
     104: goto          15
     107: return

  private void updateFunctionForUse(com.google.javascript.jscomp.CallGraph$Function, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: invokevirtual #67                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
       4: astore_3
       5: aload_3
       6: invokevirtual #68                 // Method com/google/javascript/rhino/Node.getType:()I
       9: istore        4
      11: iload         4
      13: bipush        37
      15: if_icmpeq     25
      18: iload         4
      20: bipush        30
      22: if_icmpne     36
      25: aload_3
      26: invokevirtual #70                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      29: aload_2
      30: if_acmpne     36
      33: goto          87
      36: aload_3
      37: invokestatic  #71                 // Method com/google/javascript/jscomp/NodeUtil.isGet:(Lcom/google/javascript/rhino/Node;)Z
      40: ifeq          81
      43: aload_3
      44: invokevirtual #72                 // Method com/google/javascript/rhino/Node.isGetProp:()Z
      47: ifeq          87
      50: aload_3
      51: invokevirtual #67                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      54: astore        5
      56: aload         5
      58: invokestatic  #73                 // Method com/google/javascript/jscomp/NodeUtil.isFunctionObjectApply:(Lcom/google/javascript/rhino/Node;)Z
      61: ifne          72
      64: aload         5
      66: invokestatic  #74                 // Method com/google/javascript/jscomp/NodeUtil.isFunctionObjectCall:(Lcom/google/javascript/rhino/Node;)Z
      69: ifeq          78
      72: aload_1
      73: iconst_1
      74: invokestatic  #75                 // Method com/google/javascript/jscomp/CallGraph$Function.access$1202:(Lcom/google/javascript/jscomp/CallGraph$Function;Z)Z
      77: pop
      78: goto          87
      81: aload_1
      82: iconst_1
      83: invokestatic  #76                 // Method com/google/javascript/jscomp/CallGraph$Function.access$1302:(Lcom/google/javascript/jscomp/CallGraph$Function;Z)Z
      86: pop
      87: return

  private com.google.javascript.jscomp.CallGraph$Function lookupFunctionForDefinition(com.google.javascript.jscomp.DefinitionsRemover$Definition);
    Code:
       0: aload_1
       1: ifnull        48
       4: aload_1
       5: invokevirtual #53                 // Method com/google/javascript/jscomp/DefinitionsRemover$Definition.isExtern:()Z
       8: ifne          48
      11: aload_1
      12: invokevirtual #55                 // Method com/google/javascript/jscomp/DefinitionsRemover$Definition.getRValue:()Lcom/google/javascript/rhino/Node;
      15: astore_2
      16: aload_2
      17: ifnull        48
      20: aload_2
      21: invokevirtual #19                 // Method com/google/javascript/rhino/Node.isFunction:()Z
      24: ifeq          48
      27: aload_0
      28: getfield      #6                  // Field functionsByNode:Ljava/util/Map;
      31: aload_2
      32: invokeinterface #20,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #21                 // class com/google/javascript/jscomp/CallGraph$Function
      40: astore_3
      41: aload_3
      42: invokestatic  #77                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload_3
      47: areturn
      48: aconst_null
      49: areturn

  public com.google.javascript.jscomp.graph.DiGraph<com.google.javascript.jscomp.CallGraph$Function, com.google.javascript.jscomp.CallGraph$Callsite> getForwardDirectedGraph();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #78                 // Method constructDirectedGraph:(Z)Lcom/google/javascript/jscomp/graph/DiGraph;
       5: areturn

  public com.google.javascript.jscomp.graph.DiGraph<com.google.javascript.jscomp.CallGraph$Function, com.google.javascript.jscomp.CallGraph$Callsite> getBackwardDirectedGraph();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #78                 // Method constructDirectedGraph:(Z)Lcom/google/javascript/jscomp/graph/DiGraph;
       5: areturn

  private static void digraphConnect(com.google.javascript.jscomp.graph.DiGraph<com.google.javascript.jscomp.CallGraph$Function, com.google.javascript.jscomp.CallGraph$Callsite>, com.google.javascript.jscomp.CallGraph$Function, com.google.javascript.jscomp.CallGraph$Callsite, com.google.javascript.jscomp.CallGraph$Function, boolean);
    Code:
       0: iload         4
       2: ifeq          14
       5: aload_1
       6: astore        5
       8: aload_3
       9: astore        6
      11: goto          20
      14: aload_3
      15: astore        5
      17: aload_1
      18: astore        6
      20: aload_0
      21: aload         5
      23: aload_2
      24: aload         6
      26: invokevirtual #79                 // Method com/google/javascript/jscomp/graph/DiGraph.connect:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      29: return

  private com.google.javascript.jscomp.graph.DiGraph<com.google.javascript.jscomp.CallGraph$Function, com.google.javascript.jscomp.CallGraph$Callsite> constructDirectedGraph(boolean);
    Code:
       0: invokestatic  #80                 // Method com/google/javascript/jscomp/graph/LinkedDirectedGraph.createWithoutAnnotations:()Lcom/google/javascript/jscomp/graph/LinkedDirectedGraph;
       3: astore_2
       4: aload_0
       5: invokevirtual #23                 // Method getAllFunctions:()Ljava/util/Collection;
       8: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      13: astore_3
      14: aload_3
      15: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          44
      23: aload_3
      24: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #21                 // class com/google/javascript/jscomp/CallGraph$Function
      32: astore        4
      34: aload_2
      35: aload         4
      37: invokevirtual #81                 // Method com/google/javascript/jscomp/graph/DiGraph.createNode:(Ljava/lang/Object;)Lcom/google/javascript/jscomp/graph/GraphNode;
      40: pop
      41: goto          14
      44: aload_0
      45: getfield      #1                  // Field computeForwardGraph:Z
      48: ifeq          172
      51: aload_0
      52: invokevirtual #23                 // Method getAllFunctions:()Ljava/util/Collection;
      55: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      60: astore_3
      61: aload_3
      62: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      67: ifeq          169
      70: aload_3
      71: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      76: checkcast     #21                 // class com/google/javascript/jscomp/CallGraph$Function
      79: astore        4
      81: aload         4
      83: invokevirtual #82                 // Method com/google/javascript/jscomp/CallGraph$Function.getCallsitesInFunction:()Ljava/util/Collection;
      86: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      91: astore        5
      93: aload         5
      95: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     100: ifeq          166
     103: aload         5
     105: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     110: checkcast     #41                 // class com/google/javascript/jscomp/CallGraph$Callsite
     113: astore        6
     115: aload         6
     117: invokevirtual #83                 // Method com/google/javascript/jscomp/CallGraph$Callsite.getPossibleTargets:()Ljava/util/Collection;
     120: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     125: astore        7
     127: aload         7
     129: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     134: ifeq          163
     137: aload         7
     139: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     144: checkcast     #21                 // class com/google/javascript/jscomp/CallGraph$Function
     147: astore        8
     149: aload_2
     150: aload         4
     152: aload         6
     154: aload         8
     156: iload_1
     157: invokestatic  #84                 // Method digraphConnect:(Lcom/google/javascript/jscomp/graph/DiGraph;Lcom/google/javascript/jscomp/CallGraph$Function;Lcom/google/javascript/jscomp/CallGraph$Callsite;Lcom/google/javascript/jscomp/CallGraph$Function;Z)V
     160: goto          127
     163: goto          93
     166: goto          61
     169: goto          260
     172: aload_0
     173: invokevirtual #23                 // Method getAllFunctions:()Ljava/util/Collection;
     176: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     181: astore_3
     182: aload_3
     183: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     188: ifeq          260
     191: aload_3
     192: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     197: checkcast     #21                 // class com/google/javascript/jscomp/CallGraph$Function
     200: astore        4
     202: aload         4
     204: invokevirtual #85                 // Method com/google/javascript/jscomp/CallGraph$Function.getCallsitesPossiblyTargetingFunction:()Ljava/util/Collection;
     207: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     212: astore        5
     214: aload         5
     216: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     221: ifeq          257
     224: aload         5
     226: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     231: checkcast     #41                 // class com/google/javascript/jscomp/CallGraph$Callsite
     234: astore        6
     236: aload         6
     238: invokevirtual #86                 // Method com/google/javascript/jscomp/CallGraph$Callsite.getContainingFunction:()Lcom/google/javascript/jscomp/CallGraph$Function;
     241: astore        7
     243: aload_2
     244: aload         7
     246: aload         6
     248: aload         4
     250: iload_1
     251: invokestatic  #84                 // Method digraphConnect:(Lcom/google/javascript/jscomp/graph/DiGraph;Lcom/google/javascript/jscomp/CallGraph$Function;Lcom/google/javascript/jscomp/CallGraph$Callsite;Lcom/google/javascript/jscomp/CallGraph$Function;Z)V
     254: goto          214
     257: goto          182
     260: aload_2
     261: areturn

  private com.google.javascript.jscomp.DefinitionProvider constructDefinitionProvider(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: new           #58                 // class com/google/javascript/jscomp/SimpleDefinitionFinder
       3: dup
       4: aload_0
       5: getfield      #11                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       8: invokespecial #87                 // Method com/google/javascript/jscomp/SimpleDefinitionFinder."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;)V
      11: astore_3
      12: aload_3
      13: aload_1
      14: aload_2
      15: invokevirtual #88                 // Method com/google/javascript/jscomp/SimpleDefinitionFinder.process:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      18: aload_3
      19: areturn

  private java.util.Collection<com.google.javascript.jscomp.DefinitionsRemover$Definition> lookupDefinitionsForTargetsOfCall(com.google.javascript.rhino.Node, com.google.javascript.jscomp.DefinitionProvider);
    Code:
       0: aload_1
       1: invokevirtual #39                 // Method com/google/javascript/rhino/Node.isCall:()Z
       4: ifne          14
       7: aload_1
       8: invokevirtual #40                 // Method com/google/javascript/rhino/Node.isNew:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokestatic  #10                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      22: aload_1
      23: invokevirtual #70                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      26: astore_3
      27: aload_2
      28: aload_3
      29: invokeinterface #89,  2           // InterfaceMethod com/google/javascript/jscomp/DefinitionProvider.getDefinitionsReferencedAt:(Lcom/google/javascript/rhino/Node;)Ljava/util/Collection;
      34: astore        4
      36: aload         4
      38: ifnull        54
      41: aload         4
      43: invokeinterface #90,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      48: ifne          54
      51: aload         4
      53: areturn
      54: aconst_null
      55: areturn

  static com.google.javascript.jscomp.CallGraph$Callsite access$000(com.google.javascript.jscomp.CallGraph, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method createCallsite:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/jscomp/CallGraph$Callsite;
       5: areturn

  static java.util.Map access$100(com.google.javascript.jscomp.CallGraph);
    Code:
       0: aload_0
       1: getfield      #6                  // Field functionsByNode:Ljava/util/Map;
       4: areturn

  static com.google.javascript.jscomp.CallGraph$Function access$200(com.google.javascript.jscomp.CallGraph, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method createFunction:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/jscomp/CallGraph$Function;
       5: areturn

  static void access$500(com.google.javascript.jscomp.CallGraph, com.google.javascript.jscomp.CallGraph$Callsite, com.google.javascript.jscomp.DefinitionProvider);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #4                  // Method connectCallsiteToTargets:(Lcom/google/javascript/jscomp/CallGraph$Callsite;Lcom/google/javascript/jscomp/DefinitionProvider;)V
       6: return

  static com.google.javascript.jscomp.CallGraph$Function access$1400(com.google.javascript.jscomp.CallGraph);
    Code:
       0: aload_0
       1: getfield      #3                  // Field mainFunction:Lcom/google/javascript/jscomp/CallGraph$Function;
       4: areturn

  static boolean access$1500(com.google.javascript.jscomp.CallGraph);
    Code:
       0: aload_0
       1: getfield      #2                  // Field computeBackwardGraph:Z
       4: ireturn

  static boolean access$1600(com.google.javascript.jscomp.CallGraph);
    Code:
       0: aload_0
       1: getfield      #1                  // Field computeForwardGraph:Z
       4: ireturn
}
