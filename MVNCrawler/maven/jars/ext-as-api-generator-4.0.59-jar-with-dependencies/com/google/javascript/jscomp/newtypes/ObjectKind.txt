Compiled from "ObjectKind.java"
class com.google.javascript.jscomp.newtypes.ObjectKind {
  private static final int UNRESTRICTED_MASK;

  private static final int STRUCT_MASK;

  private static final int DICT_MASK;

  private static final int BOTH_MASK;

  private int mask;

  static final com.google.javascript.jscomp.newtypes.ObjectKind UNRESTRICTED;

  static final com.google.javascript.jscomp.newtypes.ObjectKind STRUCT;

  static final com.google.javascript.jscomp.newtypes.ObjectKind DICT;

  private static final com.google.javascript.jscomp.newtypes.ObjectKind BOTH;

  private static final com.google.javascript.jscomp.newtypes.ObjectKind[] vals;

  private com.google.javascript.jscomp.newtypes.ObjectKind(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field mask:I
       9: return

  static com.google.javascript.jscomp.newtypes.ObjectKind meet(com.google.javascript.jscomp.newtypes.ObjectKind, com.google.javascript.jscomp.newtypes.ObjectKind);
    Code:
       0: getstatic     #3                  // Field vals:[Lcom/google/javascript/jscomp/newtypes/ObjectKind;
       3: aload_0
       4: getfield      #2                  // Field mask:I
       7: aload_1
       8: getfield      #2                  // Field mask:I
      11: iand
      12: aaload
      13: areturn

  static com.google.javascript.jscomp.newtypes.ObjectKind join(com.google.javascript.jscomp.newtypes.ObjectKind, com.google.javascript.jscomp.newtypes.ObjectKind);
    Code:
       0: getstatic     #3                  // Field vals:[Lcom/google/javascript/jscomp/newtypes/ObjectKind;
       3: aload_0
       4: getfield      #2                  // Field mask:I
       7: aload_1
       8: getfield      #2                  // Field mask:I
      11: ior
      12: aaload
      13: areturn

  boolean isStruct();
    Code:
       0: aload_0
       1: getfield      #2                  // Field mask:I
       4: iconst_1
       5: iand
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  boolean isDict();
    Code:
       0: aload_0
       1: getfield      #2                  // Field mask:I
       4: iconst_2
       5: iand
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  boolean isSubtypeOf(com.google.javascript.jscomp.newtypes.ObjectKind);
    Code:
       0: aload_0
       1: getfield      #2                  // Field mask:I
       4: aload_0
       5: getfield      #2                  // Field mask:I
       8: aload_1
       9: getfield      #2                  // Field mask:I
      12: iand
      13: if_icmpne     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  static {};
    Code:
       0: new           #4                  // class com/google/javascript/jscomp/newtypes/ObjectKind
       3: dup
       4: iconst_0
       5: invokespecial #5                  // Method "<init>":(I)V
       8: putstatic     #6                  // Field UNRESTRICTED:Lcom/google/javascript/jscomp/newtypes/ObjectKind;
      11: new           #4                  // class com/google/javascript/jscomp/newtypes/ObjectKind
      14: dup
      15: iconst_1
      16: invokespecial #5                  // Method "<init>":(I)V
      19: putstatic     #7                  // Field STRUCT:Lcom/google/javascript/jscomp/newtypes/ObjectKind;
      22: new           #4                  // class com/google/javascript/jscomp/newtypes/ObjectKind
      25: dup
      26: iconst_2
      27: invokespecial #5                  // Method "<init>":(I)V
      30: putstatic     #8                  // Field DICT:Lcom/google/javascript/jscomp/newtypes/ObjectKind;
      33: new           #4                  // class com/google/javascript/jscomp/newtypes/ObjectKind
      36: dup
      37: iconst_3
      38: invokespecial #5                  // Method "<init>":(I)V
      41: putstatic     #9                  // Field BOTH:Lcom/google/javascript/jscomp/newtypes/ObjectKind;
      44: iconst_4
      45: anewarray     #4                  // class com/google/javascript/jscomp/newtypes/ObjectKind
      48: dup
      49: iconst_0
      50: getstatic     #6                  // Field UNRESTRICTED:Lcom/google/javascript/jscomp/newtypes/ObjectKind;
      53: aastore
      54: dup
      55: iconst_1
      56: getstatic     #7                  // Field STRUCT:Lcom/google/javascript/jscomp/newtypes/ObjectKind;
      59: aastore
      60: dup
      61: iconst_2
      62: getstatic     #8                  // Field DICT:Lcom/google/javascript/jscomp/newtypes/ObjectKind;
      65: aastore
      66: dup
      67: iconst_3
      68: getstatic     #9                  // Field BOTH:Lcom/google/javascript/jscomp/newtypes/ObjectKind;
      71: aastore
      72: putstatic     #3                  // Field vals:[Lcom/google/javascript/jscomp/newtypes/ObjectKind;
      75: return
}
