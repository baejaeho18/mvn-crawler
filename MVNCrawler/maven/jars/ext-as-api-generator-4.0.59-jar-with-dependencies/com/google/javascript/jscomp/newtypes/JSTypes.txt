Compiled from "JSTypes.java"
public class com.google.javascript.jscomp.newtypes.JSTypes {
  private com.google.javascript.jscomp.newtypes.JSType numberInstance;

  private com.google.javascript.jscomp.newtypes.JSType booleanInstance;

  private com.google.javascript.jscomp.newtypes.JSType stringInstance;

  private com.google.javascript.jscomp.newtypes.ObjectType numberInstanceObjtype;

  private com.google.javascript.jscomp.newtypes.ObjectType booleanInstanceObjtype;

  private com.google.javascript.jscomp.newtypes.ObjectType stringInstanceObjtype;

  private com.google.javascript.jscomp.newtypes.JSType numberOrNumber;

  private com.google.javascript.jscomp.newtypes.JSType stringOrString;

  private com.google.javascript.jscomp.newtypes.JSType anyNumOrStr;

  private com.google.javascript.jscomp.newtypes.JSType regexpType;

  private com.google.javascript.jscomp.newtypes.NominalType$RawNominalType arrayType;

  private com.google.javascript.jscomp.newtypes.NominalType$RawNominalType builtinObject;

  private com.google.javascript.jscomp.newtypes.NominalType$RawNominalType builtinFunction;

  private com.google.javascript.jscomp.newtypes.JSTypes();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static com.google.javascript.jscomp.newtypes.JSTypes make();
    Code:
       0: new           #2                  // class com/google/javascript/jscomp/newtypes/JSTypes
       3: dup
       4: invokespecial #3                  // Method "<init>":()V
       7: areturn

  public com.google.javascript.jscomp.newtypes.JSType fromFunctionType(com.google.javascript.jscomp.newtypes.FunctionType);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #4                  // Method getFunctionType:()Lcom/google/javascript/jscomp/newtypes/NominalType;
       5: invokestatic  #5                  // Method com/google/javascript/jscomp/newtypes/JSType.fromFunctionType:(Lcom/google/javascript/jscomp/newtypes/FunctionType;Lcom/google/javascript/jscomp/newtypes/NominalType;)Lcom/google/javascript/jscomp/newtypes/JSType;
       8: areturn

  public com.google.javascript.jscomp.newtypes.NominalType getFunctionType();
    Code:
       0: aload_0
       1: getfield      #6                  // Field builtinFunction:Lcom/google/javascript/jscomp/newtypes/NominalType$RawNominalType;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #6                  // Field builtinFunction:Lcom/google/javascript/jscomp/newtypes/NominalType$RawNominalType;
      13: invokevirtual #7                  // Method com/google/javascript/jscomp/newtypes/NominalType$RawNominalType.getAsNominalType:()Lcom/google/javascript/jscomp/newtypes/NominalType;
      16: areturn

  public com.google.javascript.jscomp.newtypes.JSType looseTopFunction();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method topFunction:()Lcom/google/javascript/jscomp/newtypes/JSType;
       4: invokevirtual #9                  // Method com/google/javascript/jscomp/newtypes/JSType.withLoose:()Lcom/google/javascript/jscomp/newtypes/JSType;
       7: areturn

  public com.google.javascript.jscomp.newtypes.JSType topFunction();
    Code:
       0: aload_0
       1: getstatic     #10                 // Field com/google/javascript/jscomp/newtypes/FunctionType.TOP_FUNCTION:Lcom/google/javascript/jscomp/newtypes/FunctionType;
       4: invokevirtual #11                 // Method fromFunctionType:(Lcom/google/javascript/jscomp/newtypes/FunctionType;)Lcom/google/javascript/jscomp/newtypes/JSType;
       7: areturn

  com.google.javascript.jscomp.newtypes.JSType qmarkFunction();
    Code:
       0: aload_0
       1: getstatic     #12                 // Field com/google/javascript/jscomp/newtypes/FunctionType.QMARK_FUNCTION:Lcom/google/javascript/jscomp/newtypes/FunctionType;
       4: invokevirtual #11                 // Method fromFunctionType:(Lcom/google/javascript/jscomp/newtypes/FunctionType;)Lcom/google/javascript/jscomp/newtypes/JSType;
       7: areturn

  public com.google.javascript.jscomp.newtypes.JSType getArrayInstance();
    Code:
       0: aload_0
       1: getstatic     #13                 // Field com/google/javascript/jscomp/newtypes/JSType.UNKNOWN:Lcom/google/javascript/jscomp/newtypes/JSType;
       4: invokevirtual #14                 // Method getArrayInstance:(Lcom/google/javascript/jscomp/newtypes/JSType;)Lcom/google/javascript/jscomp/newtypes/JSType;
       7: areturn

  public com.google.javascript.jscomp.newtypes.NominalType getObjectType();
    Code:
       0: aload_0
       1: getfield      #15                 // Field builtinObject:Lcom/google/javascript/jscomp/newtypes/NominalType$RawNominalType;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #15                 // Field builtinObject:Lcom/google/javascript/jscomp/newtypes/NominalType$RawNominalType;
      13: invokevirtual #7                  // Method com/google/javascript/jscomp/newtypes/NominalType$RawNominalType.getAsNominalType:()Lcom/google/javascript/jscomp/newtypes/NominalType;
      16: areturn

  public com.google.javascript.jscomp.newtypes.JSType getArrayInstance(com.google.javascript.jscomp.newtypes.JSType);
    Code:
       0: aload_0
       1: getfield      #16                 // Field arrayType:Lcom/google/javascript/jscomp/newtypes/NominalType$RawNominalType;
       4: ifnonnull     11
       7: getstatic     #13                 // Field com/google/javascript/jscomp/newtypes/JSType.UNKNOWN:Lcom/google/javascript/jscomp/newtypes/JSType;
      10: areturn
      11: aload_0
      12: getfield      #16                 // Field arrayType:Lcom/google/javascript/jscomp/newtypes/NominalType$RawNominalType;
      15: invokevirtual #17                 // Method com/google/javascript/jscomp/newtypes/NominalType$RawNominalType.getTypeParameters:()Lcom/google/common/collect/ImmutableList;
      18: astore_2
      19: aload_0
      20: getfield      #16                 // Field arrayType:Lcom/google/javascript/jscomp/newtypes/NominalType$RawNominalType;
      23: invokevirtual #18                 // Method com/google/javascript/jscomp/newtypes/NominalType$RawNominalType.getInstanceAsJSType:()Lcom/google/javascript/jscomp/newtypes/JSType;
      26: astore_3
      27: aload_2
      28: invokevirtual #19                 // Method com/google/common/collect/ImmutableList.size:()I
      31: iconst_1
      32: if_icmpne     55
      35: aload_2
      36: invokestatic  #20                 // Method com/google/common/collect/Iterables.getOnlyElement:(Ljava/lang/Iterable;)Ljava/lang/Object;
      39: checkcast     #21                 // class java/lang/String
      42: astore        4
      44: aload_3
      45: aload         4
      47: aload_1
      48: invokestatic  #22                 // Method com/google/common/collect/ImmutableMap.of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;
      51: invokevirtual #23                 // Method com/google/javascript/jscomp/newtypes/JSType.substituteGenerics:(Ljava/util/Map;)Lcom/google/javascript/jscomp/newtypes/JSType;
      54: astore_3
      55: aload_3
      56: areturn

  public com.google.javascript.jscomp.newtypes.JSType getRegexpType();
    Code:
       0: aload_0
       1: getfield      #24                 // Field regexpType:Lcom/google/javascript/jscomp/newtypes/JSType;
       4: ifnull        14
       7: aload_0
       8: getfield      #24                 // Field regexpType:Lcom/google/javascript/jscomp/newtypes/JSType;
      11: goto          17
      14: getstatic     #13                 // Field com/google/javascript/jscomp/newtypes/JSType.UNKNOWN:Lcom/google/javascript/jscomp/newtypes/JSType;
      17: areturn

  com.google.javascript.jscomp.newtypes.JSType getNumberInstance();
    Code:
       0: aload_0
       1: getfield      #25                 // Field numberInstance:Lcom/google/javascript/jscomp/newtypes/JSType;
       4: ifnull        14
       7: aload_0
       8: getfield      #25                 // Field numberInstance:Lcom/google/javascript/jscomp/newtypes/JSType;
      11: goto          17
      14: getstatic     #26                 // Field com/google/javascript/jscomp/newtypes/JSType.NUMBER:Lcom/google/javascript/jscomp/newtypes/JSType;
      17: areturn

  com.google.javascript.jscomp.newtypes.JSType getBooleanInstance();
    Code:
       0: aload_0
       1: getfield      #27                 // Field booleanInstance:Lcom/google/javascript/jscomp/newtypes/JSType;
       4: ifnull        14
       7: aload_0
       8: getfield      #27                 // Field booleanInstance:Lcom/google/javascript/jscomp/newtypes/JSType;
      11: goto          17
      14: getstatic     #28                 // Field com/google/javascript/jscomp/newtypes/JSType.BOOLEAN:Lcom/google/javascript/jscomp/newtypes/JSType;
      17: areturn

  com.google.javascript.jscomp.newtypes.JSType getStringInstance();
    Code:
       0: aload_0
       1: getfield      #29                 // Field stringInstance:Lcom/google/javascript/jscomp/newtypes/JSType;
       4: ifnull        14
       7: aload_0
       8: getfield      #29                 // Field stringInstance:Lcom/google/javascript/jscomp/newtypes/JSType;
      11: goto          17
      14: getstatic     #30                 // Field com/google/javascript/jscomp/newtypes/JSType.STRING:Lcom/google/javascript/jscomp/newtypes/JSType;
      17: areturn

  com.google.javascript.jscomp.newtypes.ObjectType getNumberInstanceObjType();
    Code:
       0: aload_0
       1: getfield      #31                 // Field numberInstanceObjtype:Lcom/google/javascript/jscomp/newtypes/ObjectType;
       4: ifnull        14
       7: aload_0
       8: getfield      #31                 // Field numberInstanceObjtype:Lcom/google/javascript/jscomp/newtypes/ObjectType;
      11: goto          17
      14: getstatic     #32                 // Field com/google/javascript/jscomp/newtypes/ObjectType.TOP_OBJECT:Lcom/google/javascript/jscomp/newtypes/ObjectType;
      17: areturn

  com.google.javascript.jscomp.newtypes.ObjectType getBooleanInstanceObjType();
    Code:
       0: aload_0
       1: getfield      #33                 // Field booleanInstanceObjtype:Lcom/google/javascript/jscomp/newtypes/ObjectType;
       4: ifnull        14
       7: aload_0
       8: getfield      #33                 // Field booleanInstanceObjtype:Lcom/google/javascript/jscomp/newtypes/ObjectType;
      11: goto          17
      14: getstatic     #32                 // Field com/google/javascript/jscomp/newtypes/ObjectType.TOP_OBJECT:Lcom/google/javascript/jscomp/newtypes/ObjectType;
      17: areturn

  com.google.javascript.jscomp.newtypes.ObjectType getStringInstanceObjType();
    Code:
       0: aload_0
       1: getfield      #34                 // Field stringInstanceObjtype:Lcom/google/javascript/jscomp/newtypes/ObjectType;
       4: ifnull        14
       7: aload_0
       8: getfield      #34                 // Field stringInstanceObjtype:Lcom/google/javascript/jscomp/newtypes/ObjectType;
      11: goto          17
      14: getstatic     #32                 // Field com/google/javascript/jscomp/newtypes/ObjectType.TOP_OBJECT:Lcom/google/javascript/jscomp/newtypes/ObjectType;
      17: areturn

  public void setFunctionType(com.google.javascript.jscomp.newtypes.NominalType$RawNominalType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field builtinFunction:Lcom/google/javascript/jscomp/newtypes/NominalType$RawNominalType;
       5: return

  public void setObjectType(com.google.javascript.jscomp.newtypes.NominalType$RawNominalType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field builtinObject:Lcom/google/javascript/jscomp/newtypes/NominalType$RawNominalType;
       5: return

  public void setArrayType(com.google.javascript.jscomp.newtypes.NominalType$RawNominalType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field arrayType:Lcom/google/javascript/jscomp/newtypes/NominalType$RawNominalType;
       5: return

  public void setRegexpInstance(com.google.javascript.jscomp.newtypes.JSType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field regexpType:Lcom/google/javascript/jscomp/newtypes/JSType;
       5: return

  public void setNumberInstance(com.google.javascript.jscomp.newtypes.JSType);
    Code:
       0: aload_0
       1: getfield      #25                 // Field numberInstance:Lcom/google/javascript/jscomp/newtypes/JSType;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #35                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_1
      16: invokestatic  #36                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_0
      21: aload_1
      22: putfield      #25                 // Field numberInstance:Lcom/google/javascript/jscomp/newtypes/JSType;
      25: aload_0
      26: getstatic     #26                 // Field com/google/javascript/jscomp/newtypes/JSType.NUMBER:Lcom/google/javascript/jscomp/newtypes/JSType;
      29: aload_0
      30: getfield      #25                 // Field numberInstance:Lcom/google/javascript/jscomp/newtypes/JSType;
      33: invokestatic  #37                 // Method com/google/javascript/jscomp/newtypes/JSType.join:(Lcom/google/javascript/jscomp/newtypes/JSType;Lcom/google/javascript/jscomp/newtypes/JSType;)Lcom/google/javascript/jscomp/newtypes/JSType;
      36: putfield      #38                 // Field numberOrNumber:Lcom/google/javascript/jscomp/newtypes/JSType;
      39: aload_0
      40: aload_1
      41: invokevirtual #39                 // Method com/google/javascript/jscomp/newtypes/JSType.getObjs:()Lcom/google/common/collect/ImmutableSet;
      44: invokestatic  #20                 // Method com/google/common/collect/Iterables.getOnlyElement:(Ljava/lang/Iterable;)Ljava/lang/Object;
      47: checkcast     #40                 // class com/google/javascript/jscomp/newtypes/ObjectType
      50: putfield      #31                 // Field numberInstanceObjtype:Lcom/google/javascript/jscomp/newtypes/ObjectType;
      53: aload_0
      54: getfield      #29                 // Field stringInstance:Lcom/google/javascript/jscomp/newtypes/JSType;
      57: ifnull        75
      60: aload_0
      61: aload_0
      62: getfield      #38                 // Field numberOrNumber:Lcom/google/javascript/jscomp/newtypes/JSType;
      65: aload_0
      66: getfield      #41                 // Field stringOrString:Lcom/google/javascript/jscomp/newtypes/JSType;
      69: invokestatic  #37                 // Method com/google/javascript/jscomp/newtypes/JSType.join:(Lcom/google/javascript/jscomp/newtypes/JSType;Lcom/google/javascript/jscomp/newtypes/JSType;)Lcom/google/javascript/jscomp/newtypes/JSType;
      72: putfield      #42                 // Field anyNumOrStr:Lcom/google/javascript/jscomp/newtypes/JSType;
      75: return

  public void setBooleanInstance(com.google.javascript.jscomp.newtypes.JSType);
    Code:
       0: aload_0
       1: getfield      #27                 // Field booleanInstance:Lcom/google/javascript/jscomp/newtypes/JSType;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #35                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_1
      16: invokestatic  #36                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_0
      21: aload_1
      22: putfield      #27                 // Field booleanInstance:Lcom/google/javascript/jscomp/newtypes/JSType;
      25: aload_0
      26: aload_1
      27: invokevirtual #39                 // Method com/google/javascript/jscomp/newtypes/JSType.getObjs:()Lcom/google/common/collect/ImmutableSet;
      30: invokestatic  #20                 // Method com/google/common/collect/Iterables.getOnlyElement:(Ljava/lang/Iterable;)Ljava/lang/Object;
      33: checkcast     #40                 // class com/google/javascript/jscomp/newtypes/ObjectType
      36: putfield      #33                 // Field booleanInstanceObjtype:Lcom/google/javascript/jscomp/newtypes/ObjectType;
      39: return

  public void setStringInstance(com.google.javascript.jscomp.newtypes.JSType);
    Code:
       0: aload_0
       1: getfield      #29                 // Field stringInstance:Lcom/google/javascript/jscomp/newtypes/JSType;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #35                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_1
      16: invokestatic  #36                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_0
      21: aload_1
      22: putfield      #29                 // Field stringInstance:Lcom/google/javascript/jscomp/newtypes/JSType;
      25: aload_0
      26: getstatic     #30                 // Field com/google/javascript/jscomp/newtypes/JSType.STRING:Lcom/google/javascript/jscomp/newtypes/JSType;
      29: aload_0
      30: getfield      #29                 // Field stringInstance:Lcom/google/javascript/jscomp/newtypes/JSType;
      33: invokestatic  #37                 // Method com/google/javascript/jscomp/newtypes/JSType.join:(Lcom/google/javascript/jscomp/newtypes/JSType;Lcom/google/javascript/jscomp/newtypes/JSType;)Lcom/google/javascript/jscomp/newtypes/JSType;
      36: putfield      #41                 // Field stringOrString:Lcom/google/javascript/jscomp/newtypes/JSType;
      39: aload_0
      40: aload_1
      41: invokevirtual #39                 // Method com/google/javascript/jscomp/newtypes/JSType.getObjs:()Lcom/google/common/collect/ImmutableSet;
      44: invokestatic  #20                 // Method com/google/common/collect/Iterables.getOnlyElement:(Ljava/lang/Iterable;)Ljava/lang/Object;
      47: checkcast     #40                 // class com/google/javascript/jscomp/newtypes/ObjectType
      50: putfield      #34                 // Field stringInstanceObjtype:Lcom/google/javascript/jscomp/newtypes/ObjectType;
      53: aload_0
      54: getfield      #25                 // Field numberInstance:Lcom/google/javascript/jscomp/newtypes/JSType;
      57: ifnull        75
      60: aload_0
      61: aload_0
      62: getfield      #38                 // Field numberOrNumber:Lcom/google/javascript/jscomp/newtypes/JSType;
      65: aload_0
      66: getfield      #41                 // Field stringOrString:Lcom/google/javascript/jscomp/newtypes/JSType;
      69: invokestatic  #37                 // Method com/google/javascript/jscomp/newtypes/JSType.join:(Lcom/google/javascript/jscomp/newtypes/JSType;Lcom/google/javascript/jscomp/newtypes/JSType;)Lcom/google/javascript/jscomp/newtypes/JSType;
      72: putfield      #42                 // Field anyNumOrStr:Lcom/google/javascript/jscomp/newtypes/JSType;
      75: return

  public boolean isNumberScalarOrObj(com.google.javascript.jscomp.newtypes.JSType);
    Code:
       0: aload_0
       1: getfield      #38                 // Field numberOrNumber:Lcom/google/javascript/jscomp/newtypes/JSType;
       4: ifnonnull     15
       7: aload_1
       8: getstatic     #26                 // Field com/google/javascript/jscomp/newtypes/JSType.NUMBER:Lcom/google/javascript/jscomp/newtypes/JSType;
      11: invokevirtual #43                 // Method com/google/javascript/jscomp/newtypes/JSType.isSubtypeOf:(Lcom/google/javascript/jscomp/newtypes/JSType;)Z
      14: ireturn
      15: aload_1
      16: aload_0
      17: getfield      #38                 // Field numberOrNumber:Lcom/google/javascript/jscomp/newtypes/JSType;
      20: invokevirtual #43                 // Method com/google/javascript/jscomp/newtypes/JSType.isSubtypeOf:(Lcom/google/javascript/jscomp/newtypes/JSType;)Z
      23: ireturn

  public boolean isStringScalarOrObj(com.google.javascript.jscomp.newtypes.JSType);
    Code:
       0: aload_0
       1: getfield      #38                 // Field numberOrNumber:Lcom/google/javascript/jscomp/newtypes/JSType;
       4: ifnonnull     15
       7: aload_1
       8: getstatic     #30                 // Field com/google/javascript/jscomp/newtypes/JSType.STRING:Lcom/google/javascript/jscomp/newtypes/JSType;
      11: invokevirtual #43                 // Method com/google/javascript/jscomp/newtypes/JSType.isSubtypeOf:(Lcom/google/javascript/jscomp/newtypes/JSType;)Z
      14: ireturn
      15: aload_1
      16: aload_0
      17: getfield      #41                 // Field stringOrString:Lcom/google/javascript/jscomp/newtypes/JSType;
      20: invokevirtual #43                 // Method com/google/javascript/jscomp/newtypes/JSType.isSubtypeOf:(Lcom/google/javascript/jscomp/newtypes/JSType;)Z
      23: ireturn

  public boolean isNumStrScalarOrObj(com.google.javascript.jscomp.newtypes.JSType);
    Code:
       0: aload_0
       1: getfield      #42                 // Field anyNumOrStr:Lcom/google/javascript/jscomp/newtypes/JSType;
       4: ifnonnull     15
       7: aload_1
       8: getstatic     #44                 // Field com/google/javascript/jscomp/newtypes/JSType.NUM_OR_STR:Lcom/google/javascript/jscomp/newtypes/JSType;
      11: invokevirtual #43                 // Method com/google/javascript/jscomp/newtypes/JSType.isSubtypeOf:(Lcom/google/javascript/jscomp/newtypes/JSType;)Z
      14: ireturn
      15: aload_1
      16: aload_0
      17: getfield      #42                 // Field anyNumOrStr:Lcom/google/javascript/jscomp/newtypes/JSType;
      20: invokevirtual #43                 // Method com/google/javascript/jscomp/newtypes/JSType.isSubtypeOf:(Lcom/google/javascript/jscomp/newtypes/JSType;)Z
      23: ireturn
}
