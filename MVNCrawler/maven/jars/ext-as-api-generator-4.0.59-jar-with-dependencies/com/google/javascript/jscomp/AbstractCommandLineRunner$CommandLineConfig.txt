Compiled from "AbstractCommandLineRunner.java"
class com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig {
  private boolean printTree;

  private boolean printAst;

  private boolean printPassGraph;

  private com.google.javascript.jscomp.CompilerOptions$DevMode jscompDevMode;

  private java.lang.String loggingLevel;

  private final java.util.List<java.lang.String> externs;

  private final java.util.List<java.lang.String> js;

  private java.lang.String jsOutputFile;

  private final java.util.List<java.lang.String> module;

  private java.util.Map<java.lang.String, java.lang.String> sourceMapInputFiles;

  private java.lang.String variableMapInputFile;

  private java.lang.String propertyMapInputFile;

  private java.lang.String variableMapOutputFile;

  private boolean createNameMapFiles;

  private java.lang.String propertyMapOutputFile;

  private com.google.javascript.jscomp.CodingConvention codingConvention;

  private int summaryDetailLevel;

  private java.lang.String outputWrapper;

  private final java.util.List<java.lang.String> moduleWrapper;

  private java.lang.String moduleOutputPathPrefix;

  private java.lang.String createSourceMap;

  private com.google.javascript.jscomp.SourceMap$DetailLevel sourceMapDetailLevel;

  private com.google.javascript.jscomp.SourceMap$Format sourceMapFormat;

  private com.google.common.collect.ImmutableList<com.google.javascript.jscomp.SourceMap$LocationMapping> sourceMapLocationMappings;

  private com.google.javascript.jscomp.AbstractCommandLineRunner$WarningGuardSpec warningGuards;

  private final java.util.List<java.lang.String> define;

  private final java.util.List<java.lang.String> tweak;

  private com.google.javascript.jscomp.CompilerOptions$TweakProcessing tweakProcessing;

  private java.lang.String charset;

  private boolean manageClosureDependencies;

  private boolean onlyClosureDependencies;

  private java.util.List<java.lang.String> closureEntryPoints;

  private java.util.List<java.lang.String> outputManifests;

  private java.lang.String outputModuleDependencies;

  private java.util.List<java.lang.String> outputBundles;

  private boolean acceptConstKeyword;

  private java.lang.String languageIn;

  private java.lang.String languageOut;

  private boolean skipNormalOutputs;

  private java.util.List<java.lang.String> manifestMaps;

  private boolean transformAMDToCJSModules;

  private boolean processCommonJSModules;

  private boolean rewriteEs6Modules;

  private boolean transpileOnly;

  private java.lang.String commonJSModulePathPrefix;

  private java.lang.String warningsWhitelistFile;

  private boolean angularPass;

  private com.google.javascript.jscomp.CompilerOptions$TracerMode tracerMode;

  private boolean useNewTypeInference;

  private java.lang.String renamePrefixNamespace;

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig();
    Code:
       0: aload_0
       1: invokespecial #50                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #33                 // Field printTree:Z
       9: aload_0
      10: iconst_0
      11: putfield      #34                 // Field printAst:Z
      14: aload_0
      15: iconst_0
      16: putfield      #9                  // Field printPassGraph:Z
      19: aload_0
      20: getstatic     #51                 // Field com/google/javascript/jscomp/CompilerOptions$DevMode.OFF:Lcom/google/javascript/jscomp/CompilerOptions$DevMode;
      23: putfield      #39                 // Field jscompDevMode:Lcom/google/javascript/jscomp/CompilerOptions$DevMode;
      26: aload_0
      27: getstatic     #52                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      30: invokevirtual #53                 // Method java/util/logging/Level.getName:()Ljava/lang/String;
      33: putfield      #12                 // Field loggingLevel:Ljava/lang/String;
      36: aload_0
      37: invokestatic  #54                 // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
      40: putfield      #6                  // Field externs:Ljava/util/List;
      43: aload_0
      44: invokestatic  #54                 // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
      47: putfield      #11                 // Field js:Ljava/util/List;
      50: aload_0
      51: ldc           #55                 // String
      53: putfield      #36                 // Field jsOutputFile:Ljava/lang/String;
      56: aload_0
      57: invokestatic  #54                 // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
      60: putfield      #10                 // Field module:Ljava/util/List;
      63: aload_0
      64: new           #56                 // class java/util/HashMap
      67: dup
      68: invokespecial #57                 // Method java/util/HashMap."<init>":()V
      71: putfield      #28                 // Field sourceMapInputFiles:Ljava/util/Map;
      74: aload_0
      75: ldc           #55                 // String
      77: putfield      #27                 // Field variableMapInputFile:Ljava/lang/String;
      80: aload_0
      81: ldc           #55                 // String
      83: putfield      #26                 // Field propertyMapInputFile:Ljava/lang/String;
      86: aload_0
      87: ldc           #55                 // String
      89: putfield      #4                  // Field variableMapOutputFile:Ljava/lang/String;
      92: aload_0
      93: iconst_0
      94: putfield      #5                  // Field createNameMapFiles:Z
      97: aload_0
      98: ldc           #55                 // String
     100: putfield      #3                  // Field propertyMapOutputFile:Ljava/lang/String;
     103: aload_0
     104: invokestatic  #58                 // Method com/google/javascript/jscomp/CodingConventions.getDefault:()Lcom/google/javascript/jscomp/CodingConvention;
     107: putfield      #38                 // Field codingConvention:Lcom/google/javascript/jscomp/CodingConvention;
     110: aload_0
     111: iconst_1
     112: putfield      #37                 // Field summaryDetailLevel:I
     115: aload_0
     116: ldc           #55                 // String
     118: putfield      #8                  // Field outputWrapper:Ljava/lang/String;
     121: aload_0
     122: invokestatic  #54                 // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
     125: putfield      #13                 // Field moduleWrapper:Ljava/util/List;
     128: aload_0
     129: ldc           #55                 // String
     131: putfield      #14                 // Field moduleOutputPathPrefix:Ljava/lang/String;
     134: aload_0
     135: ldc           #55                 // String
     137: putfield      #32                 // Field createSourceMap:Ljava/lang/String;
     140: aload_0
     141: getstatic     #59                 // Field com/google/javascript/jscomp/SourceMap$DetailLevel.ALL:Lcom/google/javascript/jscomp/SourceMap$DetailLevel;
     144: putfield      #31                 // Field sourceMapDetailLevel:Lcom/google/javascript/jscomp/SourceMap$DetailLevel;
     147: aload_0
     148: getstatic     #60                 // Field com/google/javascript/jscomp/SourceMap$Format.DEFAULT:Lcom/google/javascript/jscomp/SourceMap$Format;
     151: putfield      #30                 // Field sourceMapFormat:Lcom/google/javascript/jscomp/SourceMap$Format;
     154: aload_0
     155: invokestatic  #61                 // Method com/google/common/collect/ImmutableList.of:()Lcom/google/common/collect/ImmutableList;
     158: putfield      #29                 // Field sourceMapLocationMappings:Lcom/google/common/collect/ImmutableList;
     161: aload_0
     162: aconst_null
     163: putfield      #49                 // Field warningGuards:Lcom/google/javascript/jscomp/AbstractCommandLineRunner$WarningGuardSpec;
     166: aload_0
     167: invokestatic  #54                 // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
     170: putfield      #47                 // Field define:Ljava/util/List;
     173: aload_0
     174: invokestatic  #54                 // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
     177: putfield      #45                 // Field tweak:Ljava/util/List;
     180: aload_0
     181: getstatic     #62                 // Field com/google/javascript/jscomp/CompilerOptions$TweakProcessing.OFF:Lcom/google/javascript/jscomp/CompilerOptions$TweakProcessing;
     184: putfield      #46                 // Field tweakProcessing:Lcom/google/javascript/jscomp/CompilerOptions$TweakProcessing;
     187: aload_0
     188: ldc           #55                 // String
     190: putfield      #7                  // Field charset:Ljava/lang/String;
     193: aload_0
     194: iconst_0
     195: putfield      #44                 // Field manageClosureDependencies:Z
     198: aload_0
     199: iconst_0
     200: putfield      #43                 // Field onlyClosureDependencies:Z
     203: aload_0
     204: invokestatic  #61                 // Method com/google/common/collect/ImmutableList.of:()Lcom/google/common/collect/ImmutableList;
     207: putfield      #40                 // Field closureEntryPoints:Ljava/util/List;
     210: aload_0
     211: invokestatic  #61                 // Method com/google/common/collect/ImmutableList.of:()Lcom/google/common/collect/ImmutableList;
     214: putfield      #23                 // Field outputManifests:Ljava/util/List;
     217: aload_0
     218: aconst_null
     219: putfield      #2                  // Field outputModuleDependencies:Ljava/lang/String;
     222: aload_0
     223: invokestatic  #61                 // Method com/google/common/collect/ImmutableList.of:()Lcom/google/common/collect/ImmutableList;
     226: putfield      #22                 // Field outputBundles:Ljava/util/List;
     229: aload_0
     230: iconst_0
     231: putfield      #21                 // Field acceptConstKeyword:Z
     234: aload_0
     235: ldc           #55                 // String
     237: putfield      #25                 // Field languageIn:Ljava/lang/String;
     240: aload_0
     241: ldc           #55                 // String
     243: putfield      #24                 // Field languageOut:Ljava/lang/String;
     246: aload_0
     247: iconst_0
     248: putfield      #35                 // Field skipNormalOutputs:Z
     251: aload_0
     252: invokestatic  #61                 // Method com/google/common/collect/ImmutableList.of:()Lcom/google/common/collect/ImmutableList;
     255: putfield      #1                  // Field manifestMaps:Ljava/util/List;
     258: aload_0
     259: iconst_0
     260: putfield      #20                 // Field transformAMDToCJSModules:Z
     263: aload_0
     264: iconst_0
     265: putfield      #42                 // Field processCommonJSModules:Z
     268: aload_0
     269: iconst_0
     270: putfield      #41                 // Field rewriteEs6Modules:Z
     273: aload_0
     274: iconst_0
     275: putfield      #19                 // Field transpileOnly:Z
     278: aload_0
     279: ldc           #64                 // String ./
     281: putfield      #18                 // Field commonJSModulePathPrefix:Ljava/lang/String;
     284: aload_0
     285: ldc           #55                 // String
     287: putfield      #48                 // Field warningsWhitelistFile:Ljava/lang/String;
     290: aload_0
     291: iconst_0
     292: putfield      #17                 // Field angularPass:Z
     295: aload_0
     296: getstatic     #65                 // Field com/google/javascript/jscomp/CompilerOptions$TracerMode.OFF:Lcom/google/javascript/jscomp/CompilerOptions$TracerMode;
     299: putfield      #16                 // Field tracerMode:Lcom/google/javascript/jscomp/CompilerOptions$TracerMode;
     302: aload_0
     303: iconst_0
     304: putfield      #15                 // Field useNewTypeInference:Z
     307: aload_0
     308: aconst_null
     309: putfield      #66                 // Field renamePrefixNamespace:Ljava/lang/String;
     312: return

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setPrintTree(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #33                 // Field printTree:Z
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setPrintAst(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #34                 // Field printAst:Z
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setPrintPassGraph(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field printPassGraph:Z
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setJscompDevMode(com.google.javascript.jscomp.CompilerOptions$DevMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field jscompDevMode:Lcom/google/javascript/jscomp/CompilerOptions$DevMode;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setLoggingLevel(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field loggingLevel:Ljava/lang/String;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setExterns(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field externs:Ljava/util/List;
       4: invokeinterface #67,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: getfield      #6                  // Field externs:Ljava/util/List;
      13: aload_1
      14: invokeinterface #68,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: aload_0
      21: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setJs(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #11                 // Field js:Ljava/util/List;
       4: invokeinterface #67,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: getfield      #11                 // Field js:Ljava/util/List;
      13: aload_1
      14: invokeinterface #68,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: aload_0
      21: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setJsOutputFile(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field jsOutputFile:Ljava/lang/String;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setModule(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field module:Ljava/util/List;
       4: invokeinterface #67,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: getfield      #10                 // Field module:Ljava/util/List;
      13: aload_1
      14: invokeinterface #68,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: aload_0
      21: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setSourceMapInputFiles(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field sourceMapInputFiles:Ljava/util/Map;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setVariableMapInputFile(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field variableMapInputFile:Ljava/lang/String;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setPropertyMapInputFile(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field propertyMapInputFile:Ljava/lang/String;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setVariableMapOutputFile(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field variableMapOutputFile:Ljava/lang/String;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setCreateNameMapFiles(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field createNameMapFiles:Z
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setPropertyMapOutputFile(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field propertyMapOutputFile:Ljava/lang/String;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setCodingConvention(com.google.javascript.jscomp.CodingConvention);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field codingConvention:Lcom/google/javascript/jscomp/CodingConvention;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setSummaryDetailLevel(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #37                 // Field summaryDetailLevel:I
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setOutputWrapper(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field outputWrapper:Ljava/lang/String;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setModuleWrapper(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field moduleWrapper:Ljava/util/List;
       4: invokeinterface #67,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: getfield      #13                 // Field moduleWrapper:Ljava/util/List;
      13: aload_1
      14: invokeinterface #68,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: aload_0
      21: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setModuleOutputPathPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field moduleOutputPathPrefix:Ljava/lang/String;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setCreateSourceMap(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field createSourceMap:Ljava/lang/String;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setSourceMapDetailLevel(com.google.javascript.jscomp.SourceMap$DetailLevel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field sourceMapDetailLevel:Lcom/google/javascript/jscomp/SourceMap$DetailLevel;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setSourceMapFormat(com.google.javascript.jscomp.SourceMap$Format);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field sourceMapFormat:Lcom/google/javascript/jscomp/SourceMap$Format;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setSourceMapLocationMappings(java.util.List<com.google.javascript.jscomp.SourceMap$LocationMapping>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #69                 // Method com/google/common/collect/ImmutableList.copyOf:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;
       5: putfield      #29                 // Field sourceMapLocationMappings:Lcom/google/common/collect/ImmutableList;
       8: aload_0
       9: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setWarningGuardSpec(com.google.javascript.jscomp.AbstractCommandLineRunner$WarningGuardSpec);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field warningGuards:Lcom/google/javascript/jscomp/AbstractCommandLineRunner$WarningGuardSpec;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setDefine(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #47                 // Field define:Ljava/util/List;
       4: invokeinterface #67,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: getfield      #47                 // Field define:Ljava/util/List;
      13: aload_1
      14: invokeinterface #68,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: aload_0
      21: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setTweak(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #45                 // Field tweak:Ljava/util/List;
       4: invokeinterface #67,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: getfield      #45                 // Field tweak:Ljava/util/List;
      13: aload_1
      14: invokeinterface #68,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      19: pop
      20: aload_0
      21: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setTweakProcessing(com.google.javascript.jscomp.CompilerOptions$TweakProcessing);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #46                 // Field tweakProcessing:Lcom/google/javascript/jscomp/CompilerOptions$TweakProcessing;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setCharset(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field charset:Ljava/lang/String;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setManageClosureDependencies(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #44                 // Field manageClosureDependencies:Z
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setOnlyClosureDependencies(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #43                 // Field onlyClosureDependencies:Z
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setClosureEntryPoints(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: invokestatic  #70                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: putfield      #40                 // Field closureEntryPoints:Ljava/util/List;
      10: aload_0
      11: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setOutputManifest(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: invokestatic  #54                 // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
       4: putfield      #23                 // Field outputManifests:Ljava/util/List;
       7: aload_1
       8: invokeinterface #71,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      13: astore_2
      14: aload_2
      15: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          54
      23: aload_2
      24: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #74                 // class java/lang/String
      32: astore_3
      33: aload_3
      34: invokevirtual #75                 // Method java/lang/String.isEmpty:()Z
      37: ifne          51
      40: aload_0
      41: getfield      #23                 // Field outputManifests:Ljava/util/List;
      44: aload_3
      45: invokeinterface #76,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      50: pop
      51: goto          14
      54: aload_0
      55: aload_0
      56: getfield      #23                 // Field outputManifests:Ljava/util/List;
      59: invokestatic  #69                 // Method com/google/common/collect/ImmutableList.copyOf:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;
      62: putfield      #23                 // Field outputManifests:Ljava/util/List;
      65: aload_0
      66: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setOutputModuleDependencies(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field outputModuleDependencies:Ljava/lang/String;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setOutputBundle(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field outputBundles:Ljava/util/List;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setAcceptConstKeyword(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field acceptConstKeyword:Z
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setLanguageIn(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field languageIn:Ljava/lang/String;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setLanguageOut(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field languageOut:Ljava/lang/String;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setSkipNormalOutputs(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #35                 // Field skipNormalOutputs:Z
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setManifestMaps(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field manifestMaps:Ljava/util/List;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setTransformAMDToCJSModules(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field transformAMDToCJSModules:Z
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setProcessCommonJSModules(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #42                 // Field processCommonJSModules:Z
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setRewriteEs6Modules(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #41                 // Field rewriteEs6Modules:Z
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setTranspileOnly(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field transpileOnly:Z
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setCommonJSModulePathPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field commonJSModulePathPrefix:Ljava/lang/String;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setWarningsWhitelistFile(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #48                 // Field warningsWhitelistFile:Ljava/lang/String;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setAngularPass(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field angularPass:Z
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setTracerMode(com.google.javascript.jscomp.CompilerOptions$TracerMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field tracerMode:Lcom/google/javascript/jscomp/CompilerOptions$TracerMode;
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setNewTypeInference(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field useNewTypeInference:Z
       5: aload_0
       6: areturn

  com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig setRenamePrefixNamespace(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #66                 // Field renamePrefixNamespace:Ljava/lang/String;
       5: aload_0
       6: areturn

  static com.google.javascript.jscomp.AbstractCommandLineRunner$WarningGuardSpec access$000(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #49                 // Field warningGuards:Lcom/google/javascript/jscomp/AbstractCommandLineRunner$WarningGuardSpec;
       4: areturn

  static java.lang.String access$400(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #48                 // Field warningsWhitelistFile:Ljava/lang/String;
       4: areturn

  static java.util.List access$500(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #47                 // Field define:Ljava/util/List;
       4: areturn

  static com.google.javascript.jscomp.CompilerOptions$TweakProcessing access$600(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #46                 // Field tweakProcessing:Lcom/google/javascript/jscomp/CompilerOptions$TweakProcessing;
       4: areturn

  static java.util.List access$700(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #45                 // Field tweak:Ljava/util/List;
       4: areturn

  static boolean access$800(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #44                 // Field manageClosureDependencies:Z
       4: ireturn

  static boolean access$900(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #43                 // Field onlyClosureDependencies:Z
       4: ireturn

  static boolean access$1000(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #42                 // Field processCommonJSModules:Z
       4: ireturn

  static boolean access$1100(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #41                 // Field rewriteEs6Modules:Z
       4: ireturn

  static java.util.List access$1200(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #40                 // Field closureEntryPoints:Ljava/util/List;
       4: areturn

  static com.google.javascript.jscomp.CompilerOptions$DevMode access$1300(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #39                 // Field jscompDevMode:Lcom/google/javascript/jscomp/CompilerOptions$DevMode;
       4: areturn

  static com.google.javascript.jscomp.CodingConvention access$1400(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #38                 // Field codingConvention:Lcom/google/javascript/jscomp/CodingConvention;
       4: areturn

  static int access$1500(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #37                 // Field summaryDetailLevel:I
       4: ireturn

  static java.lang.String access$1600(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #36                 // Field jsOutputFile:Ljava/lang/String;
       4: areturn

  static boolean access$1700(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #35                 // Field skipNormalOutputs:Z
       4: ireturn

  static boolean access$1800(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #34                 // Field printAst:Z
       4: ireturn

  static boolean access$1900(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #33                 // Field printTree:Z
       4: ireturn

  static java.lang.String access$2000(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #32                 // Field createSourceMap:Ljava/lang/String;
       4: areturn

  static com.google.javascript.jscomp.SourceMap$DetailLevel access$2100(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #31                 // Field sourceMapDetailLevel:Lcom/google/javascript/jscomp/SourceMap$DetailLevel;
       4: areturn

  static com.google.javascript.jscomp.SourceMap$Format access$2200(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #30                 // Field sourceMapFormat:Lcom/google/javascript/jscomp/SourceMap$Format;
       4: areturn

  static com.google.common.collect.ImmutableList access$2300(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #29                 // Field sourceMapLocationMappings:Lcom/google/common/collect/ImmutableList;
       4: areturn

  static java.util.Map access$2400(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #28                 // Field sourceMapInputFiles:Ljava/util/Map;
       4: areturn

  static java.lang.String access$2500(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #27                 // Field variableMapInputFile:Ljava/lang/String;
       4: areturn

  static java.lang.String access$2600(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #26                 // Field propertyMapInputFile:Ljava/lang/String;
       4: areturn

  static java.lang.String access$2700(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #25                 // Field languageIn:Ljava/lang/String;
       4: areturn

  static java.lang.String access$2800(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #24                 // Field languageOut:Ljava/lang/String;
       4: areturn

  static java.util.List access$2900(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #23                 // Field outputManifests:Ljava/util/List;
       4: areturn

  static java.util.List access$3000(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #22                 // Field outputBundles:Ljava/util/List;
       4: areturn

  static boolean access$3100(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #21                 // Field acceptConstKeyword:Z
       4: ireturn

  static boolean access$3200(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #20                 // Field transformAMDToCJSModules:Z
       4: ireturn

  static boolean access$3300(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #19                 // Field transpileOnly:Z
       4: ireturn

  static java.lang.String access$3400(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #18                 // Field commonJSModulePathPrefix:Ljava/lang/String;
       4: areturn

  static boolean access$3500(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #17                 // Field angularPass:Z
       4: ireturn

  static com.google.javascript.jscomp.CompilerOptions$TracerMode access$3600(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #16                 // Field tracerMode:Lcom/google/javascript/jscomp/CompilerOptions$TracerMode;
       4: areturn

  static boolean access$3700(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #15                 // Field useNewTypeInference:Z
       4: ireturn

  static java.lang.String access$3800(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #14                 // Field moduleOutputPathPrefix:Ljava/lang/String;
       4: areturn

  static java.util.List access$3900(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #13                 // Field moduleWrapper:Ljava/util/List;
       4: areturn

  static java.lang.String access$4000(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #12                 // Field loggingLevel:Ljava/lang/String;
       4: areturn

  static java.util.List access$4100(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #11                 // Field js:Ljava/util/List;
       4: areturn

  static java.util.List access$4200(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #10                 // Field module:Ljava/util/List;
       4: areturn

  static boolean access$4300(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #9                  // Field printPassGraph:Z
       4: ireturn

  static java.lang.String access$4400(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #8                  // Field outputWrapper:Ljava/lang/String;
       4: areturn

  static java.lang.String access$4500(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #7                  // Field charset:Ljava/lang/String;
       4: areturn

  static java.util.List access$4600(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #6                  // Field externs:Ljava/util/List;
       4: areturn

  static boolean access$4700(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #5                  // Field createNameMapFiles:Z
       4: ireturn

  static java.lang.String access$4800(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #4                  // Field variableMapOutputFile:Ljava/lang/String;
       4: areturn

  static java.lang.String access$4900(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #3                  // Field propertyMapOutputFile:Ljava/lang/String;
       4: areturn

  static java.lang.String access$5000(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #2                  // Field outputModuleDependencies:Ljava/lang/String;
       4: areturn

  static java.util.List access$5100(com.google.javascript.jscomp.AbstractCommandLineRunner$CommandLineConfig);
    Code:
       0: aload_0
       1: getfield      #1                  // Field manifestMaps:Ljava/util/List;
       4: areturn
}
