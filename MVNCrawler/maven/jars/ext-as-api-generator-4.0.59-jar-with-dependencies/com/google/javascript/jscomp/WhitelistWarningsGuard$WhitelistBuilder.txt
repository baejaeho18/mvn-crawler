Compiled from "WhitelistWarningsGuard.java"
public class com.google.javascript.jscomp.WhitelistWarningsGuard$WhitelistBuilder implements com.google.javascript.jscomp.ErrorHandler {
  private final java.util.Set<com.google.javascript.jscomp.JSError> warnings;

  private java.lang.String productName;

  private java.lang.String generatorTarget;

  private java.lang.String headerNote;

  final com.google.javascript.jscomp.WhitelistWarningsGuard this$0;

  public com.google.javascript.jscomp.WhitelistWarningsGuard$WhitelistBuilder(com.google.javascript.jscomp.WhitelistWarningsGuard);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/WhitelistWarningsGuard;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #3                  // Method com/google/common/collect/Sets.newLinkedHashSet:()Ljava/util/LinkedHashSet;
      13: putfield      #4                  // Field warnings:Ljava/util/Set;
      16: aload_0
      17: aconst_null
      18: putfield      #5                  // Field productName:Ljava/lang/String;
      21: aload_0
      22: aconst_null
      23: putfield      #6                  // Field generatorTarget:Ljava/lang/String;
      26: aload_0
      27: aconst_null
      28: putfield      #7                  // Field headerNote:Ljava/lang/String;
      31: return

  public com.google.javascript.jscomp.WhitelistWarningsGuard$WhitelistBuilder setProductName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field productName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public com.google.javascript.jscomp.WhitelistWarningsGuard$WhitelistBuilder setGeneratorTarget(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field generatorTarget:Ljava/lang/String;
       5: aload_0
       6: areturn

  public com.google.javascript.jscomp.WhitelistWarningsGuard$WhitelistBuilder setNote(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field headerNote:Ljava/lang/String;
       5: aload_0
       6: areturn

  public void report(com.google.javascript.jscomp.CheckLevel, com.google.javascript.jscomp.JSError);
    Code:
       0: aload_0
       1: getfield      #4                  // Field warnings:Ljava/util/Set;
       4: aload_2
       5: invokeinterface #8,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void writeWhitelist(java.io.File) throws java.io.IOException;
    Code:
       0: new           #9                  // class java/io/PrintStream
       3: dup
       4: aload_1
       5: invokespecial #10                 // Method java/io/PrintStream."<init>":(Ljava/io/File;)V
       8: astore_2
       9: aconst_null
      10: astore_3
      11: aload_0
      12: aload_2
      13: invokevirtual #11                 // Method appendWhitelist:(Ljava/io/PrintStream;)V
      16: aload_2
      17: ifnull        92
      20: aload_3
      21: ifnull        42
      24: aload_2
      25: invokevirtual #12                 // Method java/io/PrintStream.close:()V
      28: goto          92
      31: astore        4
      33: aload_3
      34: aload         4
      36: invokevirtual #14                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      39: goto          92
      42: aload_2
      43: invokevirtual #12                 // Method java/io/PrintStream.close:()V
      46: goto          92
      49: astore        4
      51: aload         4
      53: astore_3
      54: aload         4
      56: athrow
      57: astore        5
      59: aload_2
      60: ifnull        89
      63: aload_3
      64: ifnull        85
      67: aload_2
      68: invokevirtual #12                 // Method java/io/PrintStream.close:()V
      71: goto          89
      74: astore        6
      76: aload_3
      77: aload         6
      79: invokevirtual #14                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      82: goto          89
      85: aload_2
      86: invokevirtual #12                 // Method java/io/PrintStream.close:()V
      89: aload         5
      91: athrow
      92: return
    Exception table:
       from    to  target type
          24    28    31   Class java/lang/Throwable
          11    16    49   Class java/lang/Throwable
          11    16    57   any
          67    71    74   Class java/lang/Throwable
          49    59    57   any

  public void appendWhitelist(java.io.PrintStream);
    Code:
       0: aload_1
       1: ldc           #15                 // String # This is a list of legacy warnings that have yet to be fixed.\n
       3: invokevirtual #16                 // Method java/io/PrintStream.append:(Ljava/lang/CharSequence;)Ljava/io/PrintStream;
       6: pop
       7: aload_0
       8: getfield      #5                  // Field productName:Ljava/lang/String;
      11: ifnull        68
      14: aload_0
      15: getfield      #5                  // Field productName:Ljava/lang/String;
      18: invokevirtual #17                 // Method java/lang/String.isEmpty:()Z
      21: ifne          68
      24: aload_0
      25: getfield      #4                  // Field warnings:Ljava/util/Set;
      28: invokeinterface #18,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      33: ifne          68
      36: aload_1
      37: new           #19                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #21                 // String # Please find some time and fix at least one of them and it will be the happiest day for
      46: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_0
      50: getfield      #5                  // Field productName:Ljava/lang/String;
      53: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: ldc           #23                 // String .\n
      58: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokevirtual #16                 // Method java/io/PrintStream.append:(Ljava/lang/CharSequence;)Ljava/io/PrintStream;
      67: pop
      68: aload_0
      69: getfield      #6                  // Field generatorTarget:Ljava/lang/String;
      72: ifnull        117
      75: aload_0
      76: getfield      #6                  // Field generatorTarget:Ljava/lang/String;
      79: invokevirtual #17                 // Method java/lang/String.isEmpty:()Z
      82: ifne          117
      85: aload_1
      86: new           #19                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #25                 // String # When you fix any of these warnings, run
      95: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: getfield      #6                  // Field generatorTarget:Ljava/lang/String;
     102: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: ldc           #26                 // String  task.\n
     107: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: invokevirtual #16                 // Method java/io/PrintStream.append:(Ljava/lang/CharSequence;)Ljava/io/PrintStream;
     116: pop
     117: aload_0
     118: getfield      #7                  // Field headerNote:Ljava/lang/String;
     121: ifnull        172
     124: aload_1
     125: new           #19                 // class java/lang/StringBuilder
     128: dup
     129: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     132: ldc           #27                 // String #
     134: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: ldc           #28                 // String \n#
     139: invokestatic  #29                 // Method com/google/common/base/Joiner.on:(Ljava/lang/String;)Lcom/google/common/base/Joiner;
     142: bipush        10
     144: invokestatic  #30                 // Method com/google/common/base/Splitter.on:(C)Lcom/google/common/base/Splitter;
     147: aload_0
     148: getfield      #7                  // Field headerNote:Ljava/lang/String;
     151: invokevirtual #31                 // Method com/google/common/base/Splitter.split:(Ljava/lang/CharSequence;)Ljava/lang/Iterable;
     154: invokevirtual #32                 // Method com/google/common/base/Joiner.join:(Ljava/lang/Iterable;)Ljava/lang/String;
     157: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: ldc           #33                 // String \n
     162: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     168: invokevirtual #16                 // Method java/io/PrintStream.append:(Ljava/lang/CharSequence;)Ljava/io/PrintStream;
     171: pop
     172: invokestatic  #34                 // Method com/google/common/collect/TreeMultimap.create:()Lcom/google/common/collect/TreeMultimap;
     175: astore_2
     176: aload_0
     177: getfield      #4                  // Field warnings:Ljava/util/Set;
     180: invokeinterface #35,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     185: astore_3
     186: aload_3
     187: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     192: ifeq          231
     195: aload_3
     196: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     201: checkcast     #38                 // class com/google/javascript/jscomp/JSError
     204: astore        4
     206: aload_2
     207: aload         4
     209: invokevirtual #39                 // Method com/google/javascript/jscomp/JSError.getType:()Lcom/google/javascript/jscomp/DiagnosticType;
     212: aload_0
     213: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/WhitelistWarningsGuard;
     216: aload         4
     218: iconst_1
     219: invokevirtual #40                 // Method com/google/javascript/jscomp/WhitelistWarningsGuard.formatWarning:(Lcom/google/javascript/jscomp/JSError;Z)Ljava/lang/String;
     222: invokeinterface #41,  3           // InterfaceMethod com/google/common/collect/Multimap.put:(Ljava/lang/Object;Ljava/lang/Object;)Z
     227: pop
     228: goto          186
     231: aload_2
     232: invokeinterface #42,  1           // InterfaceMethod com/google/common/collect/Multimap.keySet:()Ljava/util/Set;
     237: invokeinterface #35,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     242: astore_3
     243: aload_3
     244: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     249: ifeq          355
     252: aload_3
     253: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     258: checkcast     #43                 // class com/google/javascript/jscomp/DiagnosticType
     261: astore        4
     263: aload_1
     264: ldc           #44                 // String \n# Warning
     266: invokevirtual #16                 // Method java/io/PrintStream.append:(Ljava/lang/CharSequence;)Ljava/io/PrintStream;
     269: aload         4
     271: getfield      #45                 // Field com/google/javascript/jscomp/DiagnosticType.key:Ljava/lang/String;
     274: invokevirtual #16                 // Method java/io/PrintStream.append:(Ljava/lang/CharSequence;)Ljava/io/PrintStream;
     277: ldc           #46                 // String :
     279: invokevirtual #16                 // Method java/io/PrintStream.append:(Ljava/lang/CharSequence;)Ljava/io/PrintStream;
     282: invokestatic  #47                 // Method com/google/javascript/jscomp/WhitelistWarningsGuard.access$000:()Lcom/google/common/base/Splitter;
     285: aload         4
     287: getfield      #48                 // Field com/google/javascript/jscomp/DiagnosticType.format:Ljava/text/MessageFormat;
     290: invokevirtual #49                 // Method java/text/MessageFormat.toPattern:()Ljava/lang/String;
     293: invokevirtual #31                 // Method com/google/common/base/Splitter.split:(Ljava/lang/CharSequence;)Ljava/lang/Iterable;
     296: iconst_0
     297: invokestatic  #50                 // Method com/google/common/collect/Iterables.get:(Ljava/lang/Iterable;I)Ljava/lang/Object;
     300: checkcast     #51                 // class java/lang/String
     303: invokevirtual #52                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     306: aload_2
     307: aload         4
     309: invokeinterface #53,  2           // InterfaceMethod com/google/common/collect/Multimap.get:(Ljava/lang/Object;)Ljava/util/Collection;
     314: invokeinterface #54,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     319: astore        5
     321: aload         5
     323: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     328: ifeq          352
     331: aload         5
     333: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     338: checkcast     #51                 // class java/lang/String
     341: astore        6
     343: aload_1
     344: aload         6
     346: invokevirtual #52                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     349: goto          321
     352: goto          243
     355: aload_1
     356: invokevirtual #55                 // Method java/io/PrintStream.flush:()V
     359: return
}
