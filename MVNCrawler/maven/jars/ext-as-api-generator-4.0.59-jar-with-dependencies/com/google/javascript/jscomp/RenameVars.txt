Compiled from "RenameVars.java"
final class com.google.javascript.jscomp.RenameVars implements com.google.javascript.jscomp.CompilerPass {
  private static final int MAX_LOCALS_IN_SCOPE_TO_TEMP_RENAME;

  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  private final java.util.ArrayList<com.google.javascript.rhino.Node> globalNameNodes;

  private final java.util.ArrayList<com.google.javascript.rhino.Node> localNameNodes;

  private final java.util.Map<com.google.javascript.rhino.Node, java.lang.String> pseudoNameMap;

  private final java.util.Set<java.lang.String> externNames;

  private final java.util.Set<java.lang.String> reservedNames;

  private final java.util.Map<java.lang.String, java.lang.String> renameMap;

  private final com.google.javascript.jscomp.VariableMap prevUsedRenameMap;

  private final java.lang.String prefix;

  private int assignmentCount;

  private java.lang.StringBuilder assignmentLog;

  private final java.util.Set<com.google.javascript.jscomp.Scope$Var> localBleedingFunctions;

  private final com.google.common.collect.ArrayListMultimap<com.google.javascript.jscomp.Scope, com.google.javascript.jscomp.Scope$Var> localBleedingFunctionsPerScope;

  private final java.util.Map<java.lang.String, com.google.javascript.jscomp.RenameVars$Assignment> assignments;

  private final boolean localRenamingOnly;

  private final boolean preserveFunctionExpressionNames;

  private final boolean shouldShadow;

  private final boolean preferStableNames;

  private final char[] reservedCharacters;

  public static final java.lang.String LOCAL_VAR_PREFIX;

  private final com.google.javascript.jscomp.NameGenerator nameGeneratorGiven;

  private static final java.util.Comparator<com.google.javascript.jscomp.RenameVars$Assignment> FREQUENCY_COMPARATOR;

  private static final java.util.Comparator<com.google.javascript.jscomp.RenameVars$Assignment> ORDER_OF_OCCURRENCE_COMPARATOR;

  com.google.javascript.jscomp.RenameVars(com.google.javascript.jscomp.AbstractCompiler, java.lang.String, boolean, boolean, boolean, boolean, boolean, com.google.javascript.jscomp.VariableMap, char[], java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: iload         6
      10: iload         7
      12: aload         8
      14: aload         9
      16: aload         10
      18: aconst_null
      19: invokespecial #17                 // Method "<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Ljava/lang/String;ZZZZZLcom/google/javascript/jscomp/VariableMap;[CLjava/util/Set;Lcom/google/javascript/jscomp/NameGenerator;)V
      22: return

  com.google.javascript.jscomp.RenameVars(com.google.javascript.jscomp.AbstractCompiler, java.lang.String, boolean, boolean, boolean, boolean, boolean, com.google.javascript.jscomp.VariableMap, char[], java.util.Set<java.lang.String>, com.google.javascript.jscomp.NameGenerator);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #19                 // class java/util/ArrayList
       8: dup
       9: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #3                  // Field globalNameNodes:Ljava/util/ArrayList;
      15: aload_0
      16: new           #19                 // class java/util/ArrayList
      19: dup
      20: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #4                  // Field localNameNodes:Ljava/util/ArrayList;
      26: aload_0
      27: new           #21                 // class java/util/HashSet
      30: dup
      31: invokespecial #22                 // Method java/util/HashSet."<init>":()V
      34: putfield      #8                  // Field externNames:Ljava/util/Set;
      37: aload_0
      38: new           #23                 // class java/util/HashMap
      41: dup
      42: invokespecial #24                 // Method java/util/HashMap."<init>":()V
      45: putfield      #25                 // Field renameMap:Ljava/util/Map;
      48: aload_0
      49: iconst_0
      50: putfield      #16                 // Field assignmentCount:I
      53: aload_0
      54: invokestatic  #26                 // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
      57: putfield      #14                 // Field localBleedingFunctions:Ljava/util/Set;
      60: aload_0
      61: invokestatic  #27                 // Method com/google/common/collect/ArrayListMultimap.create:()Lcom/google/common/collect/ArrayListMultimap;
      64: putfield      #13                 // Field localBleedingFunctionsPerScope:Lcom/google/common/collect/ArrayListMultimap;
      67: aload_0
      68: new           #23                 // class java/util/HashMap
      71: dup
      72: invokespecial #24                 // Method java/util/HashMap."<init>":()V
      75: putfield      #2                  // Field assignments:Ljava/util/Map;
      78: aload_0
      79: aload_1
      80: putfield      #28                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      83: aload_0
      84: aload_2
      85: ifnonnull     93
      88: ldc           #29                 // String
      90: goto          94
      93: aload_2
      94: putfield      #30                 // Field prefix:Ljava/lang/String;
      97: aload_0
      98: iload_3
      99: putfield      #12                 // Field localRenamingOnly:Z
     102: aload_0
     103: iload         4
     105: putfield      #10                 // Field preserveFunctionExpressionNames:Z
     108: iload         5
     110: ifeq          123
     113: aload_0
     114: invokestatic  #31                 // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
     117: putfield      #7                  // Field pseudoNameMap:Ljava/util/Map;
     120: goto          128
     123: aload_0
     124: aconst_null
     125: putfield      #7                  // Field pseudoNameMap:Ljava/util/Map;
     128: aload_0
     129: aload         8
     131: putfield      #32                 // Field prevUsedRenameMap:Lcom/google/javascript/jscomp/VariableMap;
     134: aload_0
     135: aload         9
     137: putfield      #33                 // Field reservedCharacters:[C
     140: aload_0
     141: iload         6
     143: putfield      #34                 // Field shouldShadow:Z
     146: aload_0
     147: iload         7
     149: putfield      #35                 // Field preferStableNames:Z
     152: aload         10
     154: ifnonnull     167
     157: aload_0
     158: invokestatic  #26                 // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
     161: putfield      #11                 // Field reservedNames:Ljava/util/Set;
     164: goto          176
     167: aload_0
     168: aload         10
     170: invokestatic  #36                 // Method com/google/common/collect/Sets.newHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;
     173: putfield      #11                 // Field reservedNames:Ljava/util/Set;
     176: aload_0
     177: aload         11
     179: putfield      #37                 // Field nameGeneratorGiven:Lcom/google/javascript/jscomp/NameGenerator;
     182: return

  public void process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: new           #38                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
       8: putfield      #40                 // Field assignmentLog:Ljava/lang/StringBuilder;
      11: aload_0
      12: getfield      #28                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      15: aload_1
      16: new           #41                 // class com/google/javascript/jscomp/RenameVars$ProcessVars
      19: dup
      20: aload_0
      21: iconst_1
      22: invokespecial #42                 // Method com/google/javascript/jscomp/RenameVars$ProcessVars."<init>":(Lcom/google/javascript/jscomp/RenameVars;Z)V
      25: invokestatic  #43                 // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      28: aload_0
      29: getfield      #28                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      32: aload_2
      33: new           #41                 // class com/google/javascript/jscomp/RenameVars$ProcessVars
      36: dup
      37: aload_0
      38: iconst_0
      39: invokespecial #42                 // Method com/google/javascript/jscomp/RenameVars$ProcessVars."<init>":(Lcom/google/javascript/jscomp/RenameVars;Z)V
      42: invokestatic  #43                 // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      45: aload_0
      46: getfield      #11                 // Field reservedNames:Ljava/util/Set;
      49: aload_0
      50: getfield      #8                  // Field externNames:Ljava/util/Set;
      53: invokeinterface #44,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      58: pop
      59: new           #45                 // class java/util/TreeSet
      62: dup
      63: getstatic     #46                 // Field FREQUENCY_COMPARATOR:Ljava/util/Comparator;
      66: invokespecial #47                 // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
      69: astore_3
      70: aload_3
      71: aload_0
      72: getfield      #2                  // Field assignments:Ljava/util/Map;
      75: invokeinterface #48,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      80: invokeinterface #49,  2           // InterfaceMethod java/util/SortedSet.addAll:(Ljava/util/Collection;)Z
      85: pop
      86: aload_0
      87: getfield      #34                 // Field shouldShadow:Z
      90: ifeq          118
      93: new           #50                 // class com/google/javascript/jscomp/ShadowVariables
      96: dup
      97: aload_0
      98: getfield      #28                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
     101: aload_0
     102: getfield      #2                  // Field assignments:Ljava/util/Map;
     105: aload_3
     106: aload_0
     107: getfield      #7                  // Field pseudoNameMap:Ljava/util/Map;
     110: invokespecial #51                 // Method com/google/javascript/jscomp/ShadowVariables."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Ljava/util/Map;Ljava/util/SortedSet;Ljava/util/Map;)V
     113: aload_1
     114: aload_2
     115: invokevirtual #52                 // Method com/google/javascript/jscomp/ShadowVariables.process:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
     118: aload_0
     119: getfield      #32                 // Field prevUsedRenameMap:Lcom/google/javascript/jscomp/VariableMap;
     122: ifnull        129
     125: aload_0
     126: invokespecial #53                 // Method reusePreviouslyUsedVariableMap:()V
     129: aload_0
     130: aload_3
     131: invokespecial #54                 // Method assignNames:(Ljava/util/SortedSet;)V
     134: iconst_0
     135: istore        4
     137: aload_0
     138: getfield      #3                  // Field globalNameNodes:Ljava/util/ArrayList;
     141: invokevirtual #55                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     144: astore        5
     146: aload         5
     148: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     153: ifeq          194
     156: aload         5
     158: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     163: checkcast     #58                 // class com/google/javascript/rhino/Node
     166: astore        6
     168: aload_0
     169: aload         6
     171: invokespecial #59                 // Method getNewGlobalName:(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;
     174: astore        7
     176: aload         7
     178: ifnull        191
     181: aload         6
     183: aload         7
     185: invokevirtual #60                 // Method com/google/javascript/rhino/Node.setString:(Ljava/lang/String;)V
     188: iconst_1
     189: istore        4
     191: goto          146
     194: aload_0
     195: getfield      #4                  // Field localNameNodes:Ljava/util/ArrayList;
     198: invokevirtual #55                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     201: astore        5
     203: aload         5
     205: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     210: ifeq          251
     213: aload         5
     215: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     220: checkcast     #58                 // class com/google/javascript/rhino/Node
     223: astore        6
     225: aload_0
     226: aload         6
     228: invokespecial #61                 // Method getNewLocalName:(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;
     231: astore        7
     233: aload         7
     235: ifnull        248
     238: aload         6
     240: aload         7
     242: invokevirtual #60                 // Method com/google/javascript/rhino/Node.setString:(Ljava/lang/String;)V
     245: iconst_1
     246: istore        4
     248: goto          203
     251: iload         4
     253: ifeq          263
     256: aload_0
     257: getfield      #28                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
     260: invokevirtual #62                 // Method com/google/javascript/jscomp/AbstractCompiler.reportCodeChange:()V
     263: aload_0
     264: getfield      #28                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
     267: new           #38                 // class java/lang/StringBuilder
     270: dup
     271: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     274: ldc           #63                 // String JS var assignments:\n
     276: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     279: aload_0
     280: getfield      #40                 // Field assignmentLog:Ljava/lang/StringBuilder;
     283: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     286: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     289: invokevirtual #67                 // Method com/google/javascript/jscomp/AbstractCompiler.addToDebugLog:(Ljava/lang/String;)V
     292: aload_0
     293: aconst_null
     294: putfield      #40                 // Field assignmentLog:Ljava/lang/StringBuilder;
     297: return

  private java.lang.String getNewGlobalName(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #68                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #2                  // Field assignments:Ljava/util/Map;
       9: aload_2
      10: invokeinterface #69,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #70                 // class com/google/javascript/jscomp/RenameVars$Assignment
      18: astore_3
      19: aload_3
      20: getfield      #71                 // Field com/google/javascript/jscomp/RenameVars$Assignment.newName:Ljava/lang/String;
      23: ifnull        63
      26: aload_3
      27: getfield      #71                 // Field com/google/javascript/jscomp/RenameVars$Assignment.newName:Ljava/lang/String;
      30: aload_2
      31: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      34: ifne          63
      37: aload_0
      38: getfield      #7                  // Field pseudoNameMap:Ljava/util/Map;
      41: ifnull        58
      44: aload_0
      45: getfield      #7                  // Field pseudoNameMap:Ljava/util/Map;
      48: aload_1
      49: invokeinterface #69,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      54: checkcast     #73                 // class java/lang/String
      57: areturn
      58: aload_3
      59: getfield      #71                 // Field com/google/javascript/jscomp/RenameVars$Assignment.newName:Ljava/lang/String;
      62: areturn
      63: aconst_null
      64: areturn

  private java.lang.String getNewLocalName(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #68                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #2                  // Field assignments:Ljava/util/Map;
       9: aload_2
      10: invokeinterface #69,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #70                 // class com/google/javascript/jscomp/RenameVars$Assignment
      18: astore_3
      19: aload_3
      20: getfield      #71                 // Field com/google/javascript/jscomp/RenameVars$Assignment.newName:Ljava/lang/String;
      23: aload_2
      24: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ifne          56
      30: aload_0
      31: getfield      #7                  // Field pseudoNameMap:Ljava/util/Map;
      34: ifnull        51
      37: aload_0
      38: getfield      #7                  // Field pseudoNameMap:Ljava/util/Map;
      41: aload_1
      42: invokeinterface #69,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #73                 // class java/lang/String
      50: areturn
      51: aload_3
      52: getfield      #71                 // Field com/google/javascript/jscomp/RenameVars$Assignment.newName:Ljava/lang/String;
      55: areturn
      56: aconst_null
      57: areturn

  private void recordPseudoName(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #7                  // Field pseudoNameMap:Ljava/util/Map;
       4: aload_1
       5: new           #38                 // class java/lang/StringBuilder
       8: dup
       9: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      12: bipush        36
      14: invokevirtual #74                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      17: aload_1
      18: invokevirtual #68                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      21: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #75                 // String $$
      26: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokeinterface #76,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: return

  private void reusePreviouslyUsedVariableMap();
    Code:
       0: aload_0
       1: getfield      #32                 // Field prevUsedRenameMap:Lcom/google/javascript/jscomp/VariableMap;
       4: invokevirtual #77                 // Method com/google/javascript/jscomp/VariableMap.getNewNameToOriginalNameMap:()Ljava/util/Map;
       7: invokestatic  #78                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: getfield      #2                  // Field assignments:Ljava/util/Map;
      15: invokeinterface #48,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      20: invokeinterface #79,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      25: astore_1
      26: aload_1
      27: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          136
      35: aload_1
      36: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #70                 // class com/google/javascript/jscomp/RenameVars$Assignment
      44: astore_2
      45: aload_0
      46: getfield      #32                 // Field prevUsedRenameMap:Lcom/google/javascript/jscomp/VariableMap;
      49: aload_2
      50: getfield      #80                 // Field com/google/javascript/jscomp/RenameVars$Assignment.oldName:Ljava/lang/String;
      53: invokevirtual #81                 // Method com/google/javascript/jscomp/VariableMap.lookupNewName:(Ljava/lang/String;)Ljava/lang/String;
      56: astore_3
      57: aload_3
      58: ifnull        26
      61: aload_0
      62: getfield      #11                 // Field reservedNames:Ljava/util/Set;
      65: aload_3
      66: invokeinterface #82,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      71: ifeq          77
      74: goto          26
      77: aload_2
      78: getfield      #80                 // Field com/google/javascript/jscomp/RenameVars$Assignment.oldName:Ljava/lang/String;
      81: ldc           #84                 // String L
      83: invokevirtual #85                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      86: ifne          116
      89: aload_0
      90: getfield      #8                  // Field externNames:Ljava/util/Set;
      93: aload_2
      94: getfield      #80                 // Field com/google/javascript/jscomp/RenameVars$Assignment.oldName:Ljava/lang/String;
      97: invokeinterface #82,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     102: ifne          133
     105: aload_3
     106: aload_0
     107: getfield      #30                 // Field prefix:Ljava/lang/String;
     110: invokevirtual #85                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     113: ifeq          133
     116: aload_0
     117: getfield      #11                 // Field reservedNames:Ljava/util/Set;
     120: aload_3
     121: invokeinterface #86,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     126: pop
     127: aload_0
     128: aload_2
     129: aload_3
     130: invokespecial #87                 // Method finalizeNameAssignment:(Lcom/google/javascript/jscomp/RenameVars$Assignment;Ljava/lang/String;)V
     133: goto          26
     136: return

  private void assignNames(java.util.SortedSet<com.google.javascript.jscomp.RenameVars$Assignment>);
    Code:
       0: aconst_null
       1: astore_2
       2: aconst_null
       3: astore_3
       4: aload_0
       5: getfield      #37                 // Field nameGeneratorGiven:Lcom/google/javascript/jscomp/NameGenerator;
       8: ifnull        28
      11: aload_0
      12: getfield      #37                 // Field nameGeneratorGiven:Lcom/google/javascript/jscomp/NameGenerator;
      15: dup
      16: astore_3
      17: astore_2
      18: aload_0
      19: getfield      #37                 // Field nameGeneratorGiven:Lcom/google/javascript/jscomp/NameGenerator;
      22: invokevirtual #88                 // Method com/google/javascript/jscomp/NameGenerator.restartNaming:()V
      25: goto          80
      28: new           #89                 // class com/google/javascript/jscomp/NameGenerator
      31: dup
      32: aload_0
      33: getfield      #11                 // Field reservedNames:Ljava/util/Set;
      36: aload_0
      37: getfield      #30                 // Field prefix:Ljava/lang/String;
      40: aload_0
      41: getfield      #33                 // Field reservedCharacters:[C
      44: invokespecial #90                 // Method com/google/javascript/jscomp/NameGenerator."<init>":(Ljava/util/Set;Ljava/lang/String;[C)V
      47: astore_2
      48: aload_0
      49: getfield      #30                 // Field prefix:Ljava/lang/String;
      52: invokevirtual #91                 // Method java/lang/String.isEmpty:()Z
      55: ifeq          62
      58: aload_2
      59: goto          79
      62: new           #89                 // class com/google/javascript/jscomp/NameGenerator
      65: dup
      66: aload_0
      67: getfield      #11                 // Field reservedNames:Ljava/util/Set;
      70: ldc           #29                 // String
      72: aload_0
      73: getfield      #33                 // Field reservedCharacters:[C
      76: invokespecial #90                 // Method com/google/javascript/jscomp/NameGenerator."<init>":(Ljava/util/Set;Ljava/lang/String;[C)V
      79: astore_3
      80: new           #19                 // class java/util/ArrayList
      83: dup
      84: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
      87: astore        4
      89: new           #19                 // class java/util/ArrayList
      92: dup
      93: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
      96: astore        5
      98: aload_1
      99: invokeinterface #92,  1           // InterfaceMethod java/util/SortedSet.iterator:()Ljava/util/Iterator;
     104: astore        6
     106: aload         6
     108: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     113: ifeq          230
     116: aload         6
     118: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     123: checkcast     #70                 // class com/google/javascript/jscomp/RenameVars$Assignment
     126: astore        7
     128: aload         7
     130: getfield      #71                 // Field com/google/javascript/jscomp/RenameVars$Assignment.newName:Ljava/lang/String;
     133: ifnull        139
     136: goto          106
     139: aload_0
     140: getfield      #8                  // Field externNames:Ljava/util/Set;
     143: aload         7
     145: getfield      #80                 // Field com/google/javascript/jscomp/RenameVars$Assignment.oldName:Ljava/lang/String;
     148: invokeinterface #82,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     153: ifeq          159
     156: goto          106
     159: aload         7
     161: getfield      #80                 // Field com/google/javascript/jscomp/RenameVars$Assignment.oldName:Ljava/lang/String;
     164: ldc           #84                 // String L
     166: invokevirtual #85                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     169: ifeq          189
     172: aload_3
     173: invokevirtual #93                 // Method com/google/javascript/jscomp/NameGenerator.generateNextName:()Ljava/lang/String;
     176: astore        8
     178: aload_0
     179: aload         7
     181: aload         8
     183: invokespecial #87                 // Method finalizeNameAssignment:(Lcom/google/javascript/jscomp/RenameVars$Assignment;Ljava/lang/String;)V
     186: goto          215
     189: aload_2
     190: invokevirtual #93                 // Method com/google/javascript/jscomp/NameGenerator.generateNextName:()Ljava/lang/String;
     193: astore        8
     195: aload         4
     197: aload         7
     199: invokeinterface #94,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     204: pop
     205: aload         5
     207: aload         8
     209: invokeinterface #94,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     214: pop
     215: aload_0
     216: getfield      #11                 // Field reservedNames:Ljava/util/Set;
     219: aload         8
     221: invokeinterface #86,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     226: pop
     227: goto          106
     230: aload         5
     232: invokeinterface #95,  1           // InterfaceMethod java/util/List.size:()I
     237: istore        6
     239: iconst_0
     240: istore        7
     242: iload         7
     244: iload         6
     246: if_icmpge     390
     249: new           #45                 // class java/util/TreeSet
     252: dup
     253: getstatic     #1                  // Field ORDER_OF_OCCURRENCE_COMPARATOR:Ljava/util/Comparator;
     256: invokespecial #47                 // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
     259: astore        8
     261: aload         5
     263: iload         7
     265: invokeinterface #96,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     270: checkcast     #73                 // class java/lang/String
     273: invokevirtual #97                 // Method java/lang/String.length:()I
     276: istore        9
     278: iload         7
     280: istore        10
     282: iload         10
     284: iload         6
     286: if_icmpge     332
     289: aload         5
     291: iload         10
     293: invokeinterface #96,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     298: checkcast     #73                 // class java/lang/String
     301: invokevirtual #97                 // Method java/lang/String.length:()I
     304: iload         9
     306: if_icmpne     332
     309: aload         8
     311: aload         4
     313: iload         10
     315: invokeinterface #96,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     320: invokeinterface #98,  2           // InterfaceMethod java/util/SortedSet.add:(Ljava/lang/Object;)Z
     325: pop
     326: iinc          10, 1
     329: goto          282
     332: aload         8
     334: invokeinterface #92,  1           // InterfaceMethod java/util/SortedSet.iterator:()Ljava/util/Iterator;
     339: astore        10
     341: aload         10
     343: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     348: ifeq          387
     351: aload         10
     353: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     358: checkcast     #70                 // class com/google/javascript/jscomp/RenameVars$Assignment
     361: astore        11
     363: aload_0
     364: aload         11
     366: aload         5
     368: iload         7
     370: invokeinterface #96,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     375: checkcast     #73                 // class java/lang/String
     378: invokespecial #87                 // Method finalizeNameAssignment:(Lcom/google/javascript/jscomp/RenameVars$Assignment;Ljava/lang/String;)V
     381: iinc          7, 1
     384: goto          341
     387: goto          242
     390: return

  private void finalizeNameAssignment(com.google.javascript.jscomp.RenameVars$Assignment, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #99                 // Method com/google/javascript/jscomp/RenameVars$Assignment.setNewName:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #25                 // Field renameMap:Ljava/util/Map;
       9: aload_1
      10: getfield      #80                 // Field com/google/javascript/jscomp/RenameVars$Assignment.oldName:Ljava/lang/String;
      13: aload_2
      14: invokeinterface #76,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_0
      21: getfield      #40                 // Field assignmentLog:Ljava/lang/StringBuilder;
      24: aload_1
      25: getfield      #80                 // Field com/google/javascript/jscomp/RenameVars$Assignment.oldName:Ljava/lang/String;
      28: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #100                // String  =>
      33: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_2
      37: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: bipush        10
      42: invokevirtual #74                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      45: pop
      46: return

  com.google.javascript.jscomp.VariableMap getVariableMap();
    Code:
       0: new           #101                // class com/google/javascript/jscomp/VariableMap
       3: dup
       4: aload_0
       5: getfield      #25                 // Field renameMap:Ljava/util/Map;
       8: invokestatic  #102                // Method com/google/common/collect/ImmutableMap.copyOf:(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;
      11: invokespecial #103                // Method com/google/javascript/jscomp/VariableMap."<init>":(Ljava/util/Map;)V
      14: areturn

  private boolean okToRenameVar(java.lang.String, boolean);
    Code:
       0: aload_0
       1: getfield      #28                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: invokevirtual #104                // Method com/google/javascript/jscomp/AbstractCompiler.getCodingConvention:()Lcom/google/javascript/jscomp/CodingConvention;
       7: aload_1
       8: iload_2
       9: invokeinterface #105,  3          // InterfaceMethod com/google/javascript/jscomp/CodingConvention.isExported:(Ljava/lang/String;Z)Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  private int getLocalVarIndex(com.google.javascript.jscomp.Scope$Var);
    Code:
       0: aload_1
       1: getfield      #106                // Field com/google/javascript/jscomp/Scope$Var.index:I
       4: istore_2
       5: aload_1
       6: getfield      #107                // Field com/google/javascript/jscomp/Scope$Var.scope:Lcom/google/javascript/jscomp/Scope;
       9: invokevirtual #108                // Method com/google/javascript/jscomp/Scope.getParent:()Lcom/google/javascript/jscomp/Scope;
      12: astore_3
      13: aload_3
      14: ifnonnull     27
      17: new           #109                // class java/lang/IllegalArgumentException
      20: dup
      21: ldc           #110                // String Var is not local
      23: invokespecial #111                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_3
      28: invokevirtual #108                // Method com/google/javascript/jscomp/Scope.getParent:()Lcom/google/javascript/jscomp/Scope;
      31: ifnull        51
      34: aload_0
      35: getfield      #14                 // Field localBleedingFunctions:Ljava/util/Set;
      38: aload_1
      39: invokeinterface #82,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      44: ifeq          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: istore        4
      54: aload_3
      55: invokevirtual #108                // Method com/google/javascript/jscomp/Scope.getParent:()Lcom/google/javascript/jscomp/Scope;
      58: ifnull        130
      61: iload         4
      63: ifeq          91
      66: iload_2
      67: aload_0
      68: getfield      #13                 // Field localBleedingFunctionsPerScope:Lcom/google/common/collect/ArrayListMultimap;
      71: aload_3
      72: invokevirtual #112                // Method com/google/common/collect/ArrayListMultimap.get:(Ljava/lang/Object;)Ljava/util/List;
      75: aload_1
      76: invokeinterface #113,  2          // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
      81: iconst_1
      82: iadd
      83: iadd
      84: istore_2
      85: iconst_0
      86: istore        4
      88: goto          107
      91: iload_2
      92: aload_0
      93: getfield      #13                 // Field localBleedingFunctionsPerScope:Lcom/google/common/collect/ArrayListMultimap;
      96: aload_3
      97: invokevirtual #112                // Method com/google/common/collect/ArrayListMultimap.get:(Ljava/lang/Object;)Ljava/util/List;
     100: invokeinterface #95,  1           // InterfaceMethod java/util/List.size:()I
     105: iadd
     106: istore_2
     107: aload_0
     108: aload_3
     109: invokespecial #15                 // Method shouldTemporarilyRenameLocalsInScope:(Lcom/google/javascript/jscomp/Scope;)Z
     112: ifeq          122
     115: iload_2
     116: aload_3
     117: invokevirtual #114                // Method com/google/javascript/jscomp/Scope.getVarCount:()I
     120: iadd
     121: istore_2
     122: aload_3
     123: invokevirtual #108                // Method com/google/javascript/jscomp/Scope.getParent:()Lcom/google/javascript/jscomp/Scope;
     126: astore_3
     127: goto          54
     130: iload_2
     131: ireturn

  private boolean shouldTemporarilyRenameLocalsInScope(com.google.javascript.jscomp.Scope);
    Code:
       0: aload_0
       1: getfield      #35                 // Field preferStableNames:Z
       4: ifeq          17
       7: aload_1
       8: invokevirtual #114                // Method com/google/javascript/jscomp/Scope.getVarCount:()I
      11: sipush        1000
      14: if_icmpgt     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  static int access$008(com.google.javascript.jscomp.RenameVars);
    Code:
       0: aload_0
       1: dup
       2: getfield      #16                 // Field assignmentCount:I
       5: dup_x1
       6: iconst_1
       7: iadd
       8: putfield      #16                 // Field assignmentCount:I
      11: ireturn

  static boolean access$100(com.google.javascript.jscomp.RenameVars, com.google.javascript.jscomp.Scope);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method shouldTemporarilyRenameLocalsInScope:(Lcom/google/javascript/jscomp/Scope;)Z
       5: ireturn

  static java.util.Set access$200(com.google.javascript.jscomp.RenameVars);
    Code:
       0: aload_0
       1: getfield      #14                 // Field localBleedingFunctions:Ljava/util/Set;
       4: areturn

  static com.google.common.collect.ArrayListMultimap access$300(com.google.javascript.jscomp.RenameVars);
    Code:
       0: aload_0
       1: getfield      #13                 // Field localBleedingFunctionsPerScope:Lcom/google/common/collect/ArrayListMultimap;
       4: areturn

  static boolean access$400(com.google.javascript.jscomp.RenameVars);
    Code:
       0: aload_0
       1: getfield      #12                 // Field localRenamingOnly:Z
       4: ireturn

  static java.util.Set access$500(com.google.javascript.jscomp.RenameVars);
    Code:
       0: aload_0
       1: getfield      #11                 // Field reservedNames:Ljava/util/Set;
       4: areturn

  static boolean access$600(com.google.javascript.jscomp.RenameVars);
    Code:
       0: aload_0
       1: getfield      #10                 // Field preserveFunctionExpressionNames:Z
       4: ireturn

  static boolean access$700(com.google.javascript.jscomp.RenameVars, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #9                  // Method okToRenameVar:(Ljava/lang/String;Z)Z
       6: ireturn

  static java.util.Set access$800(com.google.javascript.jscomp.RenameVars);
    Code:
       0: aload_0
       1: getfield      #8                  // Field externNames:Ljava/util/Set;
       4: areturn

  static java.util.Map access$900(com.google.javascript.jscomp.RenameVars);
    Code:
       0: aload_0
       1: getfield      #7                  // Field pseudoNameMap:Ljava/util/Map;
       4: areturn

  static void access$1000(com.google.javascript.jscomp.RenameVars, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method recordPseudoName:(Lcom/google/javascript/rhino/Node;)V
       5: return

  static int access$1100(com.google.javascript.jscomp.RenameVars, com.google.javascript.jscomp.Scope$Var);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method getLocalVarIndex:(Lcom/google/javascript/jscomp/Scope$Var;)I
       5: ireturn

  static java.util.ArrayList access$1200(com.google.javascript.jscomp.RenameVars);
    Code:
       0: aload_0
       1: getfield      #4                  // Field localNameNodes:Ljava/util/ArrayList;
       4: areturn

  static java.util.ArrayList access$1300(com.google.javascript.jscomp.RenameVars);
    Code:
       0: aload_0
       1: getfield      #3                  // Field globalNameNodes:Ljava/util/ArrayList;
       4: areturn

  static java.util.Map access$1400(com.google.javascript.jscomp.RenameVars);
    Code:
       0: aload_0
       1: getfield      #2                  // Field assignments:Ljava/util/Map;
       4: areturn

  static java.util.Comparator access$1500();
    Code:
       0: getstatic     #1                  // Field ORDER_OF_OCCURRENCE_COMPARATOR:Ljava/util/Comparator;
       3: areturn

  static {};
    Code:
       0: new           #115                // class com/google/javascript/jscomp/RenameVars$1
       3: dup
       4: invokespecial #116                // Method com/google/javascript/jscomp/RenameVars$1."<init>":()V
       7: putstatic     #46                 // Field FREQUENCY_COMPARATOR:Ljava/util/Comparator;
      10: new           #117                // class com/google/javascript/jscomp/RenameVars$2
      13: dup
      14: invokespecial #118                // Method com/google/javascript/jscomp/RenameVars$2."<init>":()V
      17: putstatic     #1                  // Field ORDER_OF_OCCURRENCE_COMPARATOR:Ljava/util/Comparator;
      20: return
}
