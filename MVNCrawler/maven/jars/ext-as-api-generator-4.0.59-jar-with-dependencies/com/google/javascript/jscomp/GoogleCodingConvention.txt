Compiled from "GoogleCodingConvention.java"
public class com.google.javascript.jscomp.GoogleCodingConvention extends com.google.javascript.jscomp.CodingConventions$Proxy {
  private static final long serialVersionUID;

  private static final java.lang.String OPTIONAL_ARG_PREFIX;

  private static final java.lang.String VAR_ARGS_NAME;

  private static final java.util.regex.Pattern ENUM_KEY_PATTERN;

  private static final java.util.regex.Pattern PACKAGE_WITH_TEST_DIR;

  public com.google.javascript.jscomp.GoogleCodingConvention();
    Code:
       0: aload_0
       1: new           #1                  // class com/google/javascript/jscomp/ClosureCodingConvention
       4: dup
       5: invokespecial #2                  // Method com/google/javascript/jscomp/ClosureCodingConvention."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Lcom/google/javascript/jscomp/CodingConvention;)V
      11: return

  public com.google.javascript.jscomp.GoogleCodingConvention(com.google.javascript.jscomp.CodingConvention);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method com/google/javascript/jscomp/CodingConventions$Proxy."<init>":(Lcom/google/javascript/jscomp/CodingConvention;)V
       5: return

  public boolean isConstant(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method java/lang/String.length:()I
       4: iconst_1
       5: if_icmpgt     10
       8: iconst_0
       9: ireturn
      10: aload_1
      11: bipush        36
      13: invokevirtual #6                  // Method java/lang/String.lastIndexOf:(I)I
      16: istore_2
      17: iload_2
      18: iflt          38
      21: aload_1
      22: iload_2
      23: iconst_1
      24: iadd
      25: invokevirtual #7                  // Method java/lang/String.substring:(I)Ljava/lang/String;
      28: astore_1
      29: aload_1
      30: invokevirtual #8                  // Method java/lang/String.isEmpty:()Z
      33: ifeq          38
      36: iconst_0
      37: ireturn
      38: aload_0
      39: aload_1
      40: invokevirtual #9                  // Method isConstantKey:(Ljava/lang/String;)Z
      43: ireturn

  public boolean isConstantKey(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method java/lang/String.isEmpty:()Z
       4: ifne          18
       7: aload_1
       8: iconst_0
       9: invokevirtual #10                 // Method java/lang/String.charAt:(I)C
      12: invokestatic  #11                 // Method java/lang/Character.isUpperCase:(C)Z
      15: ifne          20
      18: iconst_0
      19: ireturn
      20: aload_1
      21: invokevirtual #12                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      24: aload_1
      25: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: ireturn

  public boolean isValidEnumKey(java.lang.String);
    Code:
       0: getstatic     #14                 // Field ENUM_KEY_PATTERN:Ljava/util/regex/Pattern;
       3: aload_1
       4: invokevirtual #15                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: invokevirtual #16                 // Method java/util/regex/Matcher.matches:()Z
      10: ireturn

  public boolean isOptionalParameter(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #17                 // Method com/google/javascript/jscomp/CodingConventions$Proxy.isOptionalParameter:(Lcom/google/javascript/rhino/Node;)Z
       5: ifne          20
       8: aload_1
       9: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      12: ldc           #20                 // String opt_
      14: invokevirtual #21                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean isVarArgsParameter(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #22                 // Method com/google/javascript/jscomp/CodingConventions$Proxy.isVarArgsParameter:(Lcom/google/javascript/rhino/Node;)Z
       5: ifne          20
       8: ldc           #23                 // String var_args
      10: aload_1
      11: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      14: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean isExported(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #24                 // Method com/google/javascript/jscomp/CodingConventions$Proxy.isExported:(Ljava/lang/String;Z)Z
       6: ifne          22
       9: iload_2
      10: ifne          26
      13: aload_1
      14: ldc           #25                 // String _
      16: invokevirtual #21                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public java.lang.String getPackageName(com.google.javascript.rhino.jstype.StaticSourceFile);
    Code:
       0: aload_1
       1: invokeinterface #26,  1           // InterfaceMethod com/google/javascript/rhino/jstype/StaticSourceFile.getName:()Ljava/lang/String;
       6: astore_2
       7: getstatic     #27                 // Field PACKAGE_WITH_TEST_DIR:Ljava/util/regex/Pattern;
      10: aload_2
      11: invokevirtual #15                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      14: astore_3
      15: aload_3
      16: invokevirtual #28                 // Method java/util/regex/Matcher.find:()Z
      19: ifeq          28
      22: aload_3
      23: iconst_1
      24: invokevirtual #29                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      27: areturn
      28: aload_2
      29: bipush        47
      31: invokevirtual #6                  // Method java/lang/String.lastIndexOf:(I)I
      34: istore        4
      36: iload         4
      38: iconst_m1
      39: if_icmpne     47
      42: ldc           #30                 // String
      44: goto          54
      47: aload_2
      48: iconst_0
      49: iload         4
      51: invokevirtual #31                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      54: areturn

  public boolean isPrivate(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #25                 // String _
       3: invokevirtual #32                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
       6: ifeq          21
       9: aload_0
      10: aload_1
      11: invokevirtual #33                 // Method isExported:(Ljava/lang/String;)Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  static {};
    Code:
       0: ldc           #34                 // String [A-Z0-9][A-Z0-9_]*
       2: invokestatic  #35                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #14                 // Field ENUM_KEY_PATTERN:Ljava/util/regex/Pattern;
       8: ldc           #36                 // String ^(.*)/(?:test|tests|testing)/(?:[^/]+)$
      10: invokestatic  #35                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      13: putstatic     #27                 // Field PACKAGE_WITH_TEST_DIR:Ljava/util/regex/Pattern;
      16: return
}
