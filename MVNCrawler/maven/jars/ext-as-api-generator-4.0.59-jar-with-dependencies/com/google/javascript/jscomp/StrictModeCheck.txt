Compiled from "StrictModeCheck.java"
class com.google.javascript.jscomp.StrictModeCheck extends com.google.javascript.jscomp.NodeTraversal$AbstractPostOrderCallback implements com.google.javascript.jscomp.CompilerPass {
  static final com.google.javascript.jscomp.DiagnosticType USE_OF_WITH;

  static final com.google.javascript.jscomp.DiagnosticType UNKNOWN_VARIABLE;

  static final com.google.javascript.jscomp.DiagnosticType EVAL_DECLARATION;

  static final com.google.javascript.jscomp.DiagnosticType EVAL_ASSIGNMENT;

  static final com.google.javascript.jscomp.DiagnosticType ARGUMENTS_DECLARATION;

  static final com.google.javascript.jscomp.DiagnosticType ARGUMENTS_ASSIGNMENT;

  static final com.google.javascript.jscomp.DiagnosticType ARGUMENTS_CALLEE_FORBIDDEN;

  static final com.google.javascript.jscomp.DiagnosticType ARGUMENTS_CALLER_FORBIDDEN;

  static final com.google.javascript.jscomp.DiagnosticType FUNCTION_CALLER_FORBIDDEN;

  static final com.google.javascript.jscomp.DiagnosticType FUNCTION_ARGUMENTS_PROP_FORBIDDEN;

  static final com.google.javascript.jscomp.DiagnosticType DELETE_VARIABLE;

  static final com.google.javascript.jscomp.DiagnosticType DUPLICATE_OBJECT_KEY;

  static final com.google.javascript.jscomp.DiagnosticType BAD_FUNCTION_DECLARATION;

  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  private final boolean noVarCheck;

  com.google.javascript.jscomp.StrictModeCheck(com.google.javascript.jscomp.AbstractCompiler);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #3                  // Method "<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Z)V
       6: return

  com.google.javascript.jscomp.StrictModeCheck(com.google.javascript.jscomp.AbstractCompiler, boolean);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method com/google/javascript/jscomp/NodeTraversal$AbstractPostOrderCallback."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       9: aload_0
      10: iload_2
      11: putfield      #6                  // Field noVarCheck:Z
      14: return

  public void process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #5                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: iconst_2
       5: anewarray     #7                  // class com/google/javascript/rhino/Node
       8: dup
       9: iconst_0
      10: aload_1
      11: aastore
      12: dup
      13: iconst_1
      14: aload_2
      15: aastore
      16: invokestatic  #8                  // Method com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      19: aload_0
      20: invokestatic  #9                  // Method com/google/javascript/jscomp/NodeTraversal.traverseRoots:(Lcom/google/javascript/jscomp/AbstractCompiler;Ljava/util/List;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      23: aload_0
      24: getfield      #5                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      27: aload_2
      28: new           #10                 // class com/google/javascript/jscomp/StrictModeCheck$NonExternChecks
      31: dup
      32: aconst_null
      33: invokespecial #11                 // Method com/google/javascript/jscomp/StrictModeCheck$NonExternChecks."<init>":(Lcom/google/javascript/jscomp/StrictModeCheck$1;)V
      36: invokestatic  #12                 // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      39: return

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: invokevirtual #13                 // Method com/google/javascript/rhino/Node.isFunction:()Z
       4: ifeq          15
       7: aload_1
       8: aload_2
       9: invokestatic  #14                 // Method checkFunctionUse:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;)V
      12: goto          95
      15: aload_2
      16: invokevirtual #15                 // Method com/google/javascript/rhino/Node.isName:()Z
      19: ifeq          38
      22: aload_2
      23: invokestatic  #2                  // Method isDeclaration:(Lcom/google/javascript/rhino/Node;)Z
      26: ifne          95
      29: aload_0
      30: aload_1
      31: aload_2
      32: invokespecial #16                 // Method checkNameUse:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;)V
      35: goto          95
      38: aload_2
      39: invokevirtual #17                 // Method com/google/javascript/rhino/Node.isAssign:()Z
      42: ifeq          53
      45: aload_1
      46: aload_2
      47: invokestatic  #18                 // Method checkAssignment:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;)V
      50: goto          95
      53: aload_2
      54: invokevirtual #19                 // Method com/google/javascript/rhino/Node.isDelProp:()Z
      57: ifeq          68
      60: aload_1
      61: aload_2
      62: invokestatic  #20                 // Method checkDelete:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;)V
      65: goto          95
      68: aload_2
      69: invokevirtual #21                 // Method com/google/javascript/rhino/Node.isObjectLit:()Z
      72: ifeq          83
      75: aload_1
      76: aload_2
      77: invokestatic  #22                 // Method checkObjectLiteral:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;)V
      80: goto          95
      83: aload_2
      84: invokevirtual #23                 // Method com/google/javascript/rhino/Node.isWith:()Z
      87: ifeq          95
      90: aload_1
      91: aload_2
      92: invokestatic  #24                 // Method checkWith:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;)V
      95: return

  private static void checkWith(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #25                 // Method com/google/javascript/rhino/Node.getJSDocInfo:()Lcom/google/javascript/rhino/JSDocInfo;
       4: astore_2
       5: aload_2
       6: ifnull        27
       9: aload_2
      10: invokevirtual #26                 // Method com/google/javascript/rhino/JSDocInfo.getSuppressions:()Ljava/util/Set;
      13: ldc           #27                 // String with
      15: invokeinterface #28,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: istore_3
      29: iload_3
      30: ifne          45
      33: aload_0
      34: aload_1
      35: getstatic     #29                 // Field USE_OF_WITH:Lcom/google/javascript/jscomp/DiagnosticType;
      38: iconst_0
      39: anewarray     #30                 // class java/lang/String
      42: invokevirtual #31                 // Method com/google/javascript/jscomp/NodeTraversal.report:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)V
      45: return

  private static void checkFunctionUse(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokestatic  #32                 // Method com/google/javascript/jscomp/NodeUtil.isFunctionDeclaration:(Lcom/google/javascript/rhino/Node;)Z
       4: ifeq          26
       7: aload_1
       8: invokestatic  #33                 // Method com/google/javascript/jscomp/NodeUtil.isHoistedFunctionDeclaration:(Lcom/google/javascript/rhino/Node;)Z
      11: ifne          26
      14: aload_0
      15: aload_1
      16: getstatic     #34                 // Field BAD_FUNCTION_DECLARATION:Lcom/google/javascript/jscomp/DiagnosticType;
      19: iconst_0
      20: anewarray     #30                 // class java/lang/String
      23: invokevirtual #31                 // Method com/google/javascript/jscomp/NodeTraversal.report:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)V
      26: return

  private static boolean isDeclaration(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
       4: invokevirtual #36                 // Method com/google/javascript/rhino/Node.getType:()I
       7: lookupswitch  { // 4
                    83: 50
                   105: 48
                   118: 48
                   120: 48
               default: 61
          }
      48: iconst_1
      49: ireturn
      50: aload_0
      51: invokevirtual #35                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      54: invokevirtual #35                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      57: invokevirtual #13                 // Method com/google/javascript/rhino/Node.isFunction:()Z
      60: ireturn
      61: iconst_0
      62: ireturn

  private void checkNameUse(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #37                 // Method com/google/javascript/jscomp/NodeTraversal.getScope:()Lcom/google/javascript/jscomp/Scope;
       4: aload_2
       5: invokevirtual #38                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
       8: invokevirtual #39                 // Method com/google/javascript/jscomp/Scope.getVar:(Ljava/lang/String;)Lcom/google/javascript/jscomp/Scope$Var;
      11: astore_3
      12: aload_3
      13: ifnonnull     42
      16: aload_0
      17: getfield      #6                  // Field noVarCheck:Z
      20: ifne          42
      23: aload_1
      24: aload_2
      25: getstatic     #40                 // Field UNKNOWN_VARIABLE:Lcom/google/javascript/jscomp/DiagnosticType;
      28: iconst_1
      29: anewarray     #30                 // class java/lang/String
      32: dup
      33: iconst_0
      34: aload_2
      35: invokevirtual #38                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      38: aastore
      39: invokevirtual #31                 // Method com/google/javascript/jscomp/NodeTraversal.report:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)V
      42: return

  private static void checkAssignment(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #41                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
       4: invokevirtual #15                 // Method com/google/javascript/rhino/Node.isName:()Z
       7: ifeq          67
      10: ldc           #42                 // String arguments
      12: aload_1
      13: invokevirtual #41                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      16: invokevirtual #38                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      19: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      22: ifeq          40
      25: aload_0
      26: aload_1
      27: getstatic     #44                 // Field ARGUMENTS_ASSIGNMENT:Lcom/google/javascript/jscomp/DiagnosticType;
      30: iconst_0
      31: anewarray     #30                 // class java/lang/String
      34: invokevirtual #31                 // Method com/google/javascript/jscomp/NodeTraversal.report:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)V
      37: goto          67
      40: ldc           #45                 // String eval
      42: aload_1
      43: invokevirtual #41                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      46: invokevirtual #38                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      49: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      52: ifeq          67
      55: aload_0
      56: aload_1
      57: getstatic     #46                 // Field EVAL_ASSIGNMENT:Lcom/google/javascript/jscomp/DiagnosticType;
      60: iconst_0
      61: anewarray     #30                 // class java/lang/String
      64: invokevirtual #31                 // Method com/google/javascript/jscomp/NodeTraversal.report:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)V
      67: return

  private static void checkDelete(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #41                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
       4: invokevirtual #15                 // Method com/google/javascript/rhino/Node.isName:()Z
       7: ifeq          41
      10: aload_0
      11: invokevirtual #37                 // Method com/google/javascript/jscomp/NodeTraversal.getScope:()Lcom/google/javascript/jscomp/Scope;
      14: aload_1
      15: invokevirtual #41                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      18: invokevirtual #38                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      21: invokevirtual #39                 // Method com/google/javascript/jscomp/Scope.getVar:(Ljava/lang/String;)Lcom/google/javascript/jscomp/Scope$Var;
      24: astore_2
      25: aload_2
      26: ifnull        41
      29: aload_0
      30: aload_1
      31: getstatic     #47                 // Field DELETE_VARIABLE:Lcom/google/javascript/jscomp/DiagnosticType;
      34: iconst_0
      35: anewarray     #30                 // class java/lang/String
      38: invokevirtual #31                 // Method com/google/javascript/jscomp/NodeTraversal.report:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)V
      41: return

  private static void checkObjectLiteral(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node);
    Code:
       0: invokestatic  #48                 // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
       3: astore_2
       4: invokestatic  #48                 // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
       7: astore_3
       8: aload_1
       9: invokevirtual #41                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      12: astore        4
      14: aload         4
      16: ifnull        99
      19: aload         4
      21: invokevirtual #49                 // Method com/google/javascript/rhino/Node.isSetterDef:()Z
      24: ifne          54
      27: aload_2
      28: aload         4
      30: invokevirtual #38                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      33: invokeinterface #50,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      38: ifne          54
      41: aload_0
      42: aload         4
      44: getstatic     #51                 // Field DUPLICATE_OBJECT_KEY:Lcom/google/javascript/jscomp/DiagnosticType;
      47: iconst_0
      48: anewarray     #30                 // class java/lang/String
      51: invokevirtual #31                 // Method com/google/javascript/jscomp/NodeTraversal.report:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)V
      54: aload         4
      56: invokevirtual #52                 // Method com/google/javascript/rhino/Node.isGetterDef:()Z
      59: ifne          89
      62: aload_3
      63: aload         4
      65: invokevirtual #38                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      68: invokeinterface #50,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      73: ifne          89
      76: aload_0
      77: aload         4
      79: getstatic     #51                 // Field DUPLICATE_OBJECT_KEY:Lcom/google/javascript/jscomp/DiagnosticType;
      82: iconst_0
      83: anewarray     #30                 // class java/lang/String
      86: invokevirtual #31                 // Method com/google/javascript/jscomp/NodeTraversal.report:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)V
      89: aload         4
      91: invokevirtual #53                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      94: astore        4
      96: goto          14
      99: return

  private static boolean isFunctionType(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method com/google/javascript/rhino/Node.getTypeI:()Lcom/google/javascript/rhino/TypeI;
       4: astore_1
       5: aload_1
       6: ifnull        22
       9: aload_1
      10: invokeinterface #55,  1           // InterfaceMethod com/google/javascript/rhino/TypeI.isFunctionType:()Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  static boolean access$100(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method isDeclaration:(Lcom/google/javascript/rhino/Node;)Z
       4: ireturn

  static boolean access$200(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method isFunctionType:(Lcom/google/javascript/rhino/Node;)Z
       4: ireturn

  static {};
    Code:
       0: ldc           #56                 // String JSC_USE_OF_WITH
       2: ldc           #57                 // String The \'with\' statement cannot be used in ES5 strict mode.
       4: invokestatic  #58                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
       7: putstatic     #29                 // Field USE_OF_WITH:Lcom/google/javascript/jscomp/DiagnosticType;
      10: ldc           #59                 // String JSC_UNKNOWN_VARIABLE
      12: ldc           #60                 // String unknown variable {0}
      14: invokestatic  #58                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      17: putstatic     #40                 // Field UNKNOWN_VARIABLE:Lcom/google/javascript/jscomp/DiagnosticType;
      20: ldc           #61                 // String JSC_EVAL_DECLARATION
      22: ldc           #62                 // String \"eval\" cannot be redeclared in ES5 strict mode
      24: invokestatic  #58                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      27: putstatic     #63                 // Field EVAL_DECLARATION:Lcom/google/javascript/jscomp/DiagnosticType;
      30: ldc           #64                 // String JSC_EVAL_ASSIGNMENT
      32: ldc           #65                 // String the \"eval\" object cannot be reassigned in ES5 strict mode
      34: invokestatic  #58                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      37: putstatic     #46                 // Field EVAL_ASSIGNMENT:Lcom/google/javascript/jscomp/DiagnosticType;
      40: ldc           #66                 // String JSC_ARGUMENTS_DECLARATION
      42: ldc           #67                 // String \"arguments\" cannot be redeclared in ES5 strict mode
      44: invokestatic  #58                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      47: putstatic     #68                 // Field ARGUMENTS_DECLARATION:Lcom/google/javascript/jscomp/DiagnosticType;
      50: ldc           #69                 // String JSC_ARGUMENTS_ASSIGNMENT
      52: ldc           #70                 // String the \"arguments\" object cannot be reassigned in ES5 strict mode
      54: invokestatic  #58                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      57: putstatic     #44                 // Field ARGUMENTS_ASSIGNMENT:Lcom/google/javascript/jscomp/DiagnosticType;
      60: ldc           #71                 // String JSC_ARGUMENTS_CALLEE_FORBIDDEN
      62: ldc           #72                 // String \"arguments.callee\" cannot be used in ES5 strict mode
      64: invokestatic  #58                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      67: putstatic     #73                 // Field ARGUMENTS_CALLEE_FORBIDDEN:Lcom/google/javascript/jscomp/DiagnosticType;
      70: ldc           #74                 // String JSC_ARGUMENTS_CALLER_FORBIDDEN
      72: ldc           #75                 // String \"arguments.caller\" cannot be used in ES5 strict mode
      74: invokestatic  #58                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      77: putstatic     #76                 // Field ARGUMENTS_CALLER_FORBIDDEN:Lcom/google/javascript/jscomp/DiagnosticType;
      80: ldc           #77                 // String JSC_FUNCTION_CALLER_FORBIDDEN
      82: ldc           #78                 // String A function\'\'s \"caller\" property cannot be used in ES5 strict mode
      84: invokestatic  #58                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      87: putstatic     #79                 // Field FUNCTION_CALLER_FORBIDDEN:Lcom/google/javascript/jscomp/DiagnosticType;
      90: ldc           #80                 // String JSC_FUNCTION_ARGUMENTS_PROP_FORBIDDEN
      92: ldc           #81                 // String A function\'\'s \"arguments\" property cannot be used in ES5 strict mode
      94: invokestatic  #58                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      97: putstatic     #82                 // Field FUNCTION_ARGUMENTS_PROP_FORBIDDEN:Lcom/google/javascript/jscomp/DiagnosticType;
     100: ldc           #83                 // String JSC_DELETE_VARIABLE
     102: ldc           #84                 // String variables, functions, and arguments cannot be deleted in ES5 strict mode
     104: invokestatic  #58                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
     107: putstatic     #47                 // Field DELETE_VARIABLE:Lcom/google/javascript/jscomp/DiagnosticType;
     110: ldc           #85                 // String JSC_DUPLICATE_OBJECT_KEY
     112: ldc           #86                 // String object literals cannot contain duplicate keys in ES5 strict mode
     114: invokestatic  #58                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
     117: putstatic     #51                 // Field DUPLICATE_OBJECT_KEY:Lcom/google/javascript/jscomp/DiagnosticType;
     120: ldc           #87                 // String JSC_BAD_FUNCTION_DECLARATION
     122: ldc           #88                 // String functions can only be declared at top level or immediately within another function in ES5 strict mode
     124: invokestatic  #89                 // Method com/google/javascript/jscomp/DiagnosticType.error:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
     127: putstatic     #34                 // Field BAD_FUNCTION_DECLARATION:Lcom/google/javascript/jscomp/DiagnosticType;
     130: return
}
