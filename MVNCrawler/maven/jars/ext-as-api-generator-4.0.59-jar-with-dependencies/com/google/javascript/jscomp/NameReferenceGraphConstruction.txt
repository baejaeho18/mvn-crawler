Compiled from "NameReferenceGraphConstruction.java"
class com.google.javascript.jscomp.NameReferenceGraphConstruction implements com.google.javascript.jscomp.CompilerPass {
  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  private final com.google.javascript.jscomp.NameReferenceGraph graph;

  private final com.google.common.collect.Multimap<java.lang.String, com.google.javascript.jscomp.NameReferenceGraphConstruction$NameUse> unknownNameUse;

  private static final boolean CONSERVATIVE;

  private final java.util.ArrayList<com.google.javascript.jscomp.NameReferenceGraph$Name> currentFunctionStack;

  com.google.javascript.jscomp.NameReferenceGraphConstruction(com.google.javascript.jscomp.AbstractCompiler);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #10                 // Method com/google/common/collect/HashMultimap.create:()Lcom/google/common/collect/HashMultimap;
       8: putfield      #2                  // Field unknownNameUse:Lcom/google/common/collect/Multimap;
      11: aload_0
      12: new           #11                 // class java/util/ArrayList
      15: dup
      16: invokespecial #12                 // Method java/util/ArrayList."<init>":()V
      19: putfield      #13                 // Field currentFunctionStack:Ljava/util/ArrayList;
      22: aload_0
      23: aload_1
      24: putfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      27: aload_0
      28: new           #14                 // class com/google/javascript/jscomp/NameReferenceGraph
      31: dup
      32: aload_1
      33: invokespecial #15                 // Method com/google/javascript/jscomp/NameReferenceGraph."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;)V
      36: putfield      #8                  // Field graph:Lcom/google/javascript/jscomp/NameReferenceGraph;
      39: return

  com.google.javascript.jscomp.NameReferenceGraph getNameReferenceGraph();
    Code:
       0: aload_0
       1: getfield      #8                  // Field graph:Lcom/google/javascript/jscomp/NameReferenceGraph;
       4: areturn

  public void process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: invokevirtual #16                 // Method com/google/javascript/jscomp/AbstractCompiler.getTypedScopeCreator:()Lcom/google/javascript/jscomp/ScopeCreator;
       7: astore_3
       8: aload_3
       9: ifnonnull     31
      12: new           #17                 // class com/google/javascript/jscomp/MemoizedScopeCreator
      15: dup
      16: new           #18                 // class com/google/javascript/jscomp/TypedScopeCreator
      19: dup
      20: aload_0
      21: getfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      24: invokespecial #19                 // Method com/google/javascript/jscomp/TypedScopeCreator."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;)V
      27: invokespecial #20                 // Method com/google/javascript/jscomp/MemoizedScopeCreator."<init>":(Lcom/google/javascript/jscomp/ScopeCreator;)V
      30: astore_3
      31: new           #21                 // class com/google/javascript/jscomp/NodeTraversal
      34: dup
      35: aload_0
      36: getfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      39: new           #22                 // class com/google/javascript/jscomp/NameReferenceGraphConstruction$Traversal
      42: dup
      43: aload_0
      44: iconst_1
      45: aconst_null
      46: invokespecial #23                 // Method com/google/javascript/jscomp/NameReferenceGraphConstruction$Traversal."<init>":(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;ZLcom/google/javascript/jscomp/NameReferenceGraphConstruction$1;)V
      49: aload_3
      50: invokespecial #24                 // Method com/google/javascript/jscomp/NodeTraversal."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/NodeTraversal$Callback;Lcom/google/javascript/jscomp/ScopeCreator;)V
      53: astore        4
      55: new           #21                 // class com/google/javascript/jscomp/NodeTraversal
      58: dup
      59: aload_0
      60: getfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      63: new           #22                 // class com/google/javascript/jscomp/NameReferenceGraphConstruction$Traversal
      66: dup
      67: aload_0
      68: iconst_0
      69: aconst_null
      70: invokespecial #23                 // Method com/google/javascript/jscomp/NameReferenceGraphConstruction$Traversal."<init>":(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction;ZLcom/google/javascript/jscomp/NameReferenceGraphConstruction$1;)V
      73: aload_3
      74: invokespecial #24                 // Method com/google/javascript/jscomp/NodeTraversal."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/NodeTraversal$Callback;Lcom/google/javascript/jscomp/ScopeCreator;)V
      77: astore        5
      79: aload_0
      80: getfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      83: invokevirtual #25                 // Method com/google/javascript/jscomp/AbstractCompiler.getTopScope:()Lcom/google/javascript/jscomp/Scope;
      86: astore        6
      88: aload         6
      90: ifnull        112
      93: aload         4
      95: aload_1
      96: aload         6
      98: invokevirtual #26                 // Method com/google/javascript/jscomp/NodeTraversal.traverseWithScope:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/Scope;)V
     101: aload         5
     103: aload_2
     104: aload         6
     106: invokevirtual #26                 // Method com/google/javascript/jscomp/NodeTraversal.traverseWithScope:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/Scope;)V
     109: goto          124
     112: aload         4
     114: aload_1
     115: invokevirtual #27                 // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/rhino/Node;)V
     118: aload         5
     120: aload_2
     121: invokevirtual #27                 // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/rhino/Node;)V
     124: aload_0
     125: invokespecial #28                 // Method connectUnknowns:()V
     128: return

  private void connectUnknowns();
    Code:
       0: aload_0
       1: getfield      #8                  // Field graph:Lcom/google/javascript/jscomp/NameReferenceGraph;
       4: invokevirtual #29                 // Method com/google/javascript/jscomp/NameReferenceGraph.getNodes:()Ljava/util/Collection;
       7: invokeinterface #30,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      12: astore_1
      13: aload_1
      14: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          129
      22: aload_1
      23: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #33                 // class com/google/javascript/jscomp/graph/GraphNode
      31: astore_2
      32: aload_2
      33: invokeinterface #34,  1           // InterfaceMethod com/google/javascript/jscomp/graph/GraphNode.getValue:()Ljava/lang/Object;
      38: checkcast     #35                 // class com/google/javascript/jscomp/NameReferenceGraph$Name
      41: astore_3
      42: aload_3
      43: invokevirtual #36                 // Method com/google/javascript/jscomp/NameReferenceGraph$Name.getPropertyName:()Ljava/lang/String;
      46: astore        4
      48: aload         4
      50: ifnonnull     56
      53: goto          13
      56: aload_0
      57: getfield      #2                  // Field unknownNameUse:Lcom/google/common/collect/Multimap;
      60: aload         4
      62: invokeinterface #37,  2           // InterfaceMethod com/google/common/collect/Multimap.get:(Ljava/lang/Object;)Ljava/util/Collection;
      67: astore        5
      69: aload         5
      71: ifnull        126
      74: aload         5
      76: invokeinterface #30,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      81: astore        6
      83: aload         6
      85: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      90: ifeq          126
      93: aload         6
      95: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     100: checkcast     #38                 // class com/google/javascript/jscomp/NameReferenceGraphConstruction$NameUse
     103: astore        7
     105: aload_0
     106: getfield      #8                  // Field graph:Lcom/google/javascript/jscomp/NameReferenceGraph;
     109: aload         7
     111: invokestatic  #39                 // Method com/google/javascript/jscomp/NameReferenceGraphConstruction$NameUse.access$900:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction$NameUse;)Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
     114: aload         7
     116: invokestatic  #40                 // Method com/google/javascript/jscomp/NameReferenceGraphConstruction$NameUse.access$1000:(Lcom/google/javascript/jscomp/NameReferenceGraphConstruction$NameUse;)Lcom/google/javascript/jscomp/NameReferenceGraph$Reference;
     119: aload_3
     120: invokevirtual #41                 // Method com/google/javascript/jscomp/NameReferenceGraph.connect:(Lcom/google/javascript/jscomp/NameReferenceGraph$Name;Lcom/google/javascript/jscomp/NameReferenceGraph$Reference;Lcom/google/javascript/jscomp/NameReferenceGraph$Name;)V
     123: goto          83
     126: goto          13
     129: return

  private com.google.javascript.rhino.jstype.JSType getType(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #42                 // Method com/google/javascript/rhino/Node.getJSType:()Lcom/google/javascript/rhino/jstype/JSType;
       4: astore_2
       5: aload_2
       6: ifnonnull     23
       9: aload_0
      10: getfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      13: invokevirtual #43                 // Method com/google/javascript/jscomp/AbstractCompiler.getTypeRegistry:()Lcom/google/javascript/rhino/jstype/JSTypeRegistry;
      16: getstatic     #44                 // Field com/google/javascript/rhino/jstype/JSTypeNative.UNKNOWN_TYPE:Lcom/google/javascript/rhino/jstype/JSTypeNative;
      19: invokevirtual #45                 // Method com/google/javascript/rhino/jstype/JSTypeRegistry.getNativeType:(Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/JSType;
      22: areturn
      23: aload_2
      24: invokevirtual #46                 // Method com/google/javascript/rhino/jstype/JSType.restrictByNotNullOrUndefined:()Lcom/google/javascript/rhino/jstype/JSType;
      27: areturn

  private void pushContainingFunction(com.google.javascript.jscomp.NameReferenceGraph$Name);
    Code:
       0: aload_0
       1: getfield      #13                 // Field currentFunctionStack:Ljava/util/ArrayList;
       4: aload_1
       5: invokevirtual #47                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  private void popContainingFunction();
    Code:
       0: aload_0
       1: getfield      #13                 // Field currentFunctionStack:Ljava/util/ArrayList;
       4: aload_0
       5: getfield      #13                 // Field currentFunctionStack:Ljava/util/ArrayList;
       8: invokevirtual #48                 // Method java/util/ArrayList.size:()I
      11: iconst_1
      12: isub
      13: invokevirtual #49                 // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;
      16: pop
      17: return

  private com.google.javascript.jscomp.NameReferenceGraph$Name getNamedContainingFunction();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #13                 // Field currentFunctionStack:Ljava/util/ArrayList;
       6: invokevirtual #48                 // Method java/util/ArrayList.size:()I
       9: iconst_1
      10: isub
      11: istore_2
      12: iload_2
      13: iflt          51
      16: aload_0
      17: getfield      #13                 // Field currentFunctionStack:Ljava/util/ArrayList;
      20: iload_2
      21: invokevirtual #50                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      24: checkcast     #35                 // class com/google/javascript/jscomp/NameReferenceGraph$Name
      27: astore_3
      28: aload_3
      29: aload_0
      30: getfield      #8                  // Field graph:Lcom/google/javascript/jscomp/NameReferenceGraph;
      33: getfield      #51                 // Field com/google/javascript/jscomp/NameReferenceGraph.unknown:Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
      36: if_acmpeq     44
      39: aload_3
      40: astore_1
      41: goto          51
      44: iload_2
      45: iconst_1
      46: isub
      47: istore_2
      48: goto          12
      51: aload_1
      52: invokestatic  #52                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: aload_1
      57: areturn

  static com.google.javascript.jscomp.NameReferenceGraph access$100(com.google.javascript.jscomp.NameReferenceGraphConstruction);
    Code:
       0: aload_0
       1: getfield      #8                  // Field graph:Lcom/google/javascript/jscomp/NameReferenceGraph;
       4: areturn

  static void access$200(com.google.javascript.jscomp.NameReferenceGraphConstruction, com.google.javascript.jscomp.NameReferenceGraph$Name);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method pushContainingFunction:(Lcom/google/javascript/jscomp/NameReferenceGraph$Name;)V
       5: return

  static com.google.javascript.rhino.jstype.JSType access$300(com.google.javascript.jscomp.NameReferenceGraphConstruction, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method getType:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/jstype/JSType;
       5: areturn

  static void access$400(com.google.javascript.jscomp.NameReferenceGraphConstruction);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method popContainingFunction:()V
       4: return

  static com.google.javascript.jscomp.NameReferenceGraph$Name access$500(com.google.javascript.jscomp.NameReferenceGraphConstruction);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method getNamedContainingFunction:()Lcom/google/javascript/jscomp/NameReferenceGraph$Name;
       4: areturn

  static com.google.javascript.jscomp.AbstractCompiler access$600(com.google.javascript.jscomp.NameReferenceGraphConstruction);
    Code:
       0: aload_0
       1: getfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: areturn

  static com.google.common.collect.Multimap access$800(com.google.javascript.jscomp.NameReferenceGraphConstruction);
    Code:
       0: aload_0
       1: getfield      #2                  // Field unknownNameUse:Lcom/google/common/collect/Multimap;
       4: areturn
}
