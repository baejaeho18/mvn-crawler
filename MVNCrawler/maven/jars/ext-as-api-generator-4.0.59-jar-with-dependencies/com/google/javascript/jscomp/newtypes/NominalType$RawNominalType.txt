Compiled from "NominalType.java"
public class com.google.javascript.jscomp.newtypes.NominalType$RawNominalType extends com.google.javascript.jscomp.newtypes.Namespace {
  private final java.lang.String name;

  private com.google.javascript.jscomp.newtypes.PersistentMap<java.lang.String, com.google.javascript.jscomp.newtypes.Property> classProps;

  private com.google.javascript.jscomp.newtypes.PersistentMap<java.lang.String, com.google.javascript.jscomp.newtypes.Property> protoProps;

  boolean isFinalized;

  private com.google.javascript.jscomp.newtypes.NominalType superClass;

  private com.google.common.collect.ImmutableSet<com.google.javascript.jscomp.newtypes.NominalType> interfaces;

  private final boolean isInterface;

  private com.google.common.collect.ImmutableSet<java.lang.String> allProps;

  private final com.google.javascript.jscomp.newtypes.NominalType wrappedAsNominal;

  private final com.google.javascript.jscomp.newtypes.JSType wrappedAsJSType;

  private final com.google.javascript.jscomp.newtypes.JSType wrappedAsNullableJSType;

  private final com.google.common.collect.ImmutableList<java.lang.String> typeParameters;

  private final com.google.javascript.jscomp.newtypes.ObjectKind objectKind;

  private com.google.javascript.jscomp.newtypes.FunctionType ctorFn;

  private com.google.javascript.jscomp.newtypes.NominalType builtinFunction;

  private com.google.javascript.jscomp.newtypes.NominalType$RawNominalType(java.lang.String, com.google.common.collect.ImmutableList<java.lang.String>, boolean, com.google.javascript.jscomp.newtypes.ObjectKind);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method com/google/javascript/jscomp/newtypes/Namespace."<init>":()V
       4: aload_0
       5: invokestatic  #14                 // Method com/google/javascript/jscomp/newtypes/PersistentMap.create:()Lcom/google/javascript/jscomp/newtypes/PersistentMap;
       8: putfield      #15                 // Field classProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      11: aload_0
      12: invokestatic  #14                 // Method com/google/javascript/jscomp/newtypes/PersistentMap.create:()Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      15: putfield      #16                 // Field protoProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      18: aload_0
      19: iconst_0
      20: putfield      #17                 // Field isFinalized:Z
      23: aload_0
      24: aconst_null
      25: putfield      #6                  // Field superClass:Lcom/google/javascript/jscomp/newtypes/NominalType;
      28: aload_0
      29: aconst_null
      30: putfield      #5                  // Field interfaces:Lcom/google/common/collect/ImmutableSet;
      33: aload_0
      34: aconst_null
      35: putfield      #18                 // Field allProps:Lcom/google/common/collect/ImmutableSet;
      38: aload         4
      40: invokestatic  #19                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: aload_2
      45: ifnonnull     52
      48: invokestatic  #20                 // Method com/google/common/collect/ImmutableList.of:()Lcom/google/common/collect/ImmutableList;
      51: astore_2
      52: aload_0
      53: aload_1
      54: putfield      #10                 // Field name:Ljava/lang/String;
      57: aload_0
      58: aload_2
      59: putfield      #12                 // Field typeParameters:Lcom/google/common/collect/ImmutableList;
      62: aload_0
      63: iload_3
      64: putfield      #2                  // Field isInterface:Z
      67: aload_0
      68: aload         4
      70: putfield      #11                 // Field objectKind:Lcom/google/javascript/jscomp/newtypes/ObjectKind;
      73: aload_0
      74: new           #21                 // class com/google/javascript/jscomp/newtypes/NominalType
      77: dup
      78: invokestatic  #22                 // Method com/google/common/collect/ImmutableMap.of:()Lcom/google/common/collect/ImmutableMap;
      81: aload_0
      82: aconst_null
      83: invokespecial #23                 // Method com/google/javascript/jscomp/newtypes/NominalType."<init>":(Lcom/google/common/collect/ImmutableMap;Lcom/google/javascript/jscomp/newtypes/NominalType$RawNominalType;Lcom/google/javascript/jscomp/newtypes/NominalType$1;)V
      86: putfield      #9                  // Field wrappedAsNominal:Lcom/google/javascript/jscomp/newtypes/NominalType;
      89: ldc           #24                 // String Function
      91: aload_1
      92: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      95: ifeq          111
      98: getstatic     #26                 // Field com/google/javascript/jscomp/newtypes/FunctionType.TOP_FUNCTION:Lcom/google/javascript/jscomp/newtypes/FunctionType;
     101: aload_0
     102: getfield      #9                  // Field wrappedAsNominal:Lcom/google/javascript/jscomp/newtypes/NominalType;
     105: invokestatic  #27                 // Method com/google/javascript/jscomp/newtypes/ObjectType.fromFunction:(Lcom/google/javascript/jscomp/newtypes/FunctionType;Lcom/google/javascript/jscomp/newtypes/NominalType;)Lcom/google/javascript/jscomp/newtypes/ObjectType;
     108: goto          118
     111: aload_0
     112: getfield      #9                  // Field wrappedAsNominal:Lcom/google/javascript/jscomp/newtypes/NominalType;
     115: invokestatic  #28                 // Method com/google/javascript/jscomp/newtypes/ObjectType.fromNominalType:(Lcom/google/javascript/jscomp/newtypes/NominalType;)Lcom/google/javascript/jscomp/newtypes/ObjectType;
     118: astore        5
     120: aload_0
     121: aload         5
     123: invokestatic  #29                 // Method com/google/javascript/jscomp/newtypes/JSType.fromObjectType:(Lcom/google/javascript/jscomp/newtypes/ObjectType;)Lcom/google/javascript/jscomp/newtypes/JSType;
     126: putfield      #30                 // Field wrappedAsJSType:Lcom/google/javascript/jscomp/newtypes/JSType;
     129: aload_0
     130: getstatic     #31                 // Field com/google/javascript/jscomp/newtypes/JSType.NULL:Lcom/google/javascript/jscomp/newtypes/JSType;
     133: aload_0
     134: getfield      #30                 // Field wrappedAsJSType:Lcom/google/javascript/jscomp/newtypes/JSType;
     137: invokestatic  #32                 // Method com/google/javascript/jscomp/newtypes/JSType.join:(Lcom/google/javascript/jscomp/newtypes/JSType;Lcom/google/javascript/jscomp/newtypes/JSType;)Lcom/google/javascript/jscomp/newtypes/JSType;
     140: putfield      #33                 // Field wrappedAsNullableJSType:Lcom/google/javascript/jscomp/newtypes/JSType;
     143: return

  public static com.google.javascript.jscomp.newtypes.NominalType$RawNominalType makeUnrestrictedClass(com.google.javascript.jscomp.newtypes.QualifiedName, com.google.common.collect.ImmutableList<java.lang.String>);
    Code:
       0: new           #34                 // class com/google/javascript/jscomp/newtypes/NominalType$RawNominalType
       3: dup
       4: aload_0
       5: invokevirtual #35                 // Method com/google/javascript/jscomp/newtypes/QualifiedName.toString:()Ljava/lang/String;
       8: aload_1
       9: iconst_0
      10: getstatic     #36                 // Field com/google/javascript/jscomp/newtypes/ObjectKind.UNRESTRICTED:Lcom/google/javascript/jscomp/newtypes/ObjectKind;
      13: invokespecial #37                 // Method "<init>":(Ljava/lang/String;Lcom/google/common/collect/ImmutableList;ZLcom/google/javascript/jscomp/newtypes/ObjectKind;)V
      16: areturn

  public static com.google.javascript.jscomp.newtypes.NominalType$RawNominalType makeStructClass(com.google.javascript.jscomp.newtypes.QualifiedName, com.google.common.collect.ImmutableList<java.lang.String>);
    Code:
       0: new           #34                 // class com/google/javascript/jscomp/newtypes/NominalType$RawNominalType
       3: dup
       4: aload_0
       5: invokevirtual #35                 // Method com/google/javascript/jscomp/newtypes/QualifiedName.toString:()Ljava/lang/String;
       8: aload_1
       9: iconst_0
      10: getstatic     #38                 // Field com/google/javascript/jscomp/newtypes/ObjectKind.STRUCT:Lcom/google/javascript/jscomp/newtypes/ObjectKind;
      13: invokespecial #37                 // Method "<init>":(Ljava/lang/String;Lcom/google/common/collect/ImmutableList;ZLcom/google/javascript/jscomp/newtypes/ObjectKind;)V
      16: areturn

  public static com.google.javascript.jscomp.newtypes.NominalType$RawNominalType makeDictClass(com.google.javascript.jscomp.newtypes.QualifiedName, com.google.common.collect.ImmutableList<java.lang.String>);
    Code:
       0: new           #34                 // class com/google/javascript/jscomp/newtypes/NominalType$RawNominalType
       3: dup
       4: aload_0
       5: invokevirtual #35                 // Method com/google/javascript/jscomp/newtypes/QualifiedName.toString:()Ljava/lang/String;
       8: aload_1
       9: iconst_0
      10: getstatic     #39                 // Field com/google/javascript/jscomp/newtypes/ObjectKind.DICT:Lcom/google/javascript/jscomp/newtypes/ObjectKind;
      13: invokespecial #37                 // Method "<init>":(Ljava/lang/String;Lcom/google/common/collect/ImmutableList;ZLcom/google/javascript/jscomp/newtypes/ObjectKind;)V
      16: areturn

  public static com.google.javascript.jscomp.newtypes.NominalType$RawNominalType makeInterface(com.google.javascript.jscomp.newtypes.QualifiedName, com.google.common.collect.ImmutableList<java.lang.String>);
    Code:
       0: new           #34                 // class com/google/javascript/jscomp/newtypes/NominalType$RawNominalType
       3: dup
       4: aload_0
       5: invokevirtual #35                 // Method com/google/javascript/jscomp/newtypes/QualifiedName.toString:()Ljava/lang/String;
       8: aload_1
       9: iconst_1
      10: getstatic     #38                 // Field com/google/javascript/jscomp/newtypes/ObjectKind.STRUCT:Lcom/google/javascript/jscomp/newtypes/ObjectKind;
      13: invokespecial #37                 // Method "<init>":(Ljava/lang/String;Lcom/google/common/collect/ImmutableList;ZLcom/google/javascript/jscomp/newtypes/ObjectKind;)V
      16: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #10                 // Field name:Ljava/lang/String;
       4: areturn

  public boolean isClass();
    Code:
       0: aload_0
       1: getfield      #2                  // Field isInterface:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isInterface();
    Code:
       0: aload_0
       1: getfield      #2                  // Field isInterface:Z
       4: ireturn

  boolean isGeneric();
    Code:
       0: aload_0
       1: getfield      #12                 // Field typeParameters:Lcom/google/common/collect/ImmutableList;
       4: invokevirtual #40                 // Method com/google/common/collect/ImmutableList.isEmpty:()Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isStruct();
    Code:
       0: aload_0
       1: getfield      #11                 // Field objectKind:Lcom/google/javascript/jscomp/newtypes/ObjectKind;
       4: invokevirtual #41                 // Method com/google/javascript/jscomp/newtypes/ObjectKind.isStruct:()Z
       7: ireturn

  public boolean isDict();
    Code:
       0: aload_0
       1: getfield      #11                 // Field objectKind:Lcom/google/javascript/jscomp/newtypes/ObjectKind;
       4: invokevirtual #42                 // Method com/google/javascript/jscomp/newtypes/ObjectKind.isDict:()Z
       7: ireturn

  com.google.common.collect.ImmutableList<java.lang.String> getTypeParameters();
    Code:
       0: aload_0
       1: getfield      #12                 // Field typeParameters:Lcom/google/common/collect/ImmutableList;
       4: areturn

  public void setCtorFunction(com.google.javascript.jscomp.newtypes.FunctionType, com.google.javascript.jscomp.newtypes.NominalType);
    Code:
       0: aload_0
       1: getfield      #17                 // Field isFinalized:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: aload_1
      17: putfield      #44                 // Field ctorFn:Lcom/google/javascript/jscomp/newtypes/FunctionType;
      20: aload_0
      21: aload_2
      22: putfield      #45                 // Field builtinFunction:Lcom/google/javascript/jscomp/newtypes/NominalType;
      25: return

  private boolean hasAncestorClass(com.google.javascript.jscomp.newtypes.NominalType$RawNominalType);
    Code:
       0: aload_1
       1: invokevirtual #46                 // Method isClass:()Z
       4: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkState:(Z)V
       7: aload_0
       8: aload_1
       9: if_acmpne     14
      12: iconst_1
      13: ireturn
      14: aload_0
      15: getfield      #6                  // Field superClass:Lcom/google/javascript/jscomp/newtypes/NominalType;
      18: ifnonnull     23
      21: iconst_0
      22: ireturn
      23: aload_0
      24: getfield      #6                  // Field superClass:Lcom/google/javascript/jscomp/newtypes/NominalType;
      27: invokestatic  #47                 // Method com/google/javascript/jscomp/newtypes/NominalType.access$1300:(Lcom/google/javascript/jscomp/newtypes/NominalType;)Lcom/google/javascript/jscomp/newtypes/NominalType$RawNominalType;
      30: aload_1
      31: invokespecial #48                 // Method hasAncestorClass:(Lcom/google/javascript/jscomp/newtypes/NominalType$RawNominalType;)Z
      34: ireturn

  public boolean addSuperClass(com.google.javascript.jscomp.newtypes.NominalType);
    Code:
       0: aload_0
       1: getfield      #17                 // Field isFinalized:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: getfield      #6                  // Field superClass:Lcom/google/javascript/jscomp/newtypes/NominalType;
      19: ifnonnull     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      30: aload_1
      31: invokestatic  #47                 // Method com/google/javascript/jscomp/newtypes/NominalType.access$1300:(Lcom/google/javascript/jscomp/newtypes/NominalType;)Lcom/google/javascript/jscomp/newtypes/NominalType$RawNominalType;
      34: aload_0
      35: invokespecial #48                 // Method hasAncestorClass:(Lcom/google/javascript/jscomp/newtypes/NominalType$RawNominalType;)Z
      38: ifeq          43
      41: iconst_0
      42: ireturn
      43: aload_0
      44: aload_1
      45: putfield      #6                  // Field superClass:Lcom/google/javascript/jscomp/newtypes/NominalType;
      48: iconst_1
      49: ireturn

  private boolean hasAncestorInterface(com.google.javascript.jscomp.newtypes.NominalType$RawNominalType);
    Code:
       0: aload_1
       1: getfield      #2                  // Field isInterface:Z
       4: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkState:(Z)V
       7: aload_0
       8: aload_1
       9: if_acmpne     14
      12: iconst_1
      13: ireturn
      14: aload_0
      15: getfield      #5                  // Field interfaces:Lcom/google/common/collect/ImmutableSet;
      18: ifnonnull     23
      21: iconst_0
      22: ireturn
      23: aload_0
      24: getfield      #5                  // Field interfaces:Lcom/google/common/collect/ImmutableSet;
      27: invokevirtual #49                 // Method com/google/common/collect/ImmutableSet.iterator:()Lcom/google/common/collect/UnmodifiableIterator;
      30: astore_2
      31: aload_2
      32: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          66
      40: aload_2
      41: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #21                 // class com/google/javascript/jscomp/newtypes/NominalType
      49: astore_3
      50: aload_3
      51: invokestatic  #47                 // Method com/google/javascript/jscomp/newtypes/NominalType.access$1300:(Lcom/google/javascript/jscomp/newtypes/NominalType;)Lcom/google/javascript/jscomp/newtypes/NominalType$RawNominalType;
      54: aload_1
      55: invokespecial #52                 // Method hasAncestorInterface:(Lcom/google/javascript/jscomp/newtypes/NominalType$RawNominalType;)Z
      58: ifeq          63
      61: iconst_1
      62: ireturn
      63: goto          31
      66: iconst_0
      67: ireturn

  public boolean addInterfaces(com.google.common.collect.ImmutableSet<com.google.javascript.jscomp.newtypes.NominalType>);
    Code:
       0: aload_0
       1: getfield      #17                 // Field isFinalized:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: getfield      #5                  // Field interfaces:Lcom/google/common/collect/ImmutableSet;
      19: ifnonnull     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      30: aload_1
      31: invokestatic  #19                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: aload_0
      36: getfield      #2                  // Field isInterface:Z
      39: ifeq          89
      42: aload_1
      43: invokevirtual #49                 // Method com/google/common/collect/ImmutableSet.iterator:()Lcom/google/common/collect/UnmodifiableIterator;
      46: astore_2
      47: aload_2
      48: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      53: ifeq          89
      56: aload_2
      57: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      62: checkcast     #21                 // class com/google/javascript/jscomp/newtypes/NominalType
      65: astore_3
      66: aload_3
      67: invokestatic  #47                 // Method com/google/javascript/jscomp/newtypes/NominalType.access$1300:(Lcom/google/javascript/jscomp/newtypes/NominalType;)Lcom/google/javascript/jscomp/newtypes/NominalType$RawNominalType;
      70: aload_0
      71: invokespecial #52                 // Method hasAncestorInterface:(Lcom/google/javascript/jscomp/newtypes/NominalType$RawNominalType;)Z
      74: ifeq          86
      77: aload_0
      78: invokestatic  #53                 // Method com/google/common/collect/ImmutableSet.of:()Lcom/google/common/collect/ImmutableSet;
      81: putfield      #5                  // Field interfaces:Lcom/google/common/collect/ImmutableSet;
      84: iconst_0
      85: ireturn
      86: goto          47
      89: aload_0
      90: aload_1
      91: putfield      #5                  // Field interfaces:Lcom/google/common/collect/ImmutableSet;
      94: iconst_1
      95: ireturn

  public com.google.javascript.jscomp.newtypes.NominalType getSuperClass();
    Code:
       0: aload_0
       1: getfield      #6                  // Field superClass:Lcom/google/javascript/jscomp/newtypes/NominalType;
       4: areturn

  public com.google.common.collect.ImmutableSet<com.google.javascript.jscomp.newtypes.NominalType> getInterfaces();
    Code:
       0: aload_0
       1: getfield      #5                  // Field interfaces:Lcom/google/common/collect/ImmutableSet;
       4: areturn

  private com.google.javascript.jscomp.newtypes.Property getOwnProp(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field classProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
       4: aload_1
       5: invokevirtual #54                 // Method com/google/javascript/jscomp/newtypes/PersistentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #55                 // class com/google/javascript/jscomp/newtypes/Property
      11: astore_2
      12: aload_2
      13: ifnull        18
      16: aload_2
      17: areturn
      18: aload_0
      19: getfield      #16                 // Field protoProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      22: aload_1
      23: invokevirtual #54                 // Method com/google/javascript/jscomp/newtypes/PersistentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #55                 // class com/google/javascript/jscomp/newtypes/Property
      29: areturn

  private com.google.javascript.jscomp.newtypes.Property getPropFromClass(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field isInterface:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: aload_1
      17: invokespecial #56                 // Method getOwnProp:(Ljava/lang/String;)Lcom/google/javascript/jscomp/newtypes/Property;
      20: astore_2
      21: aload_2
      22: ifnull        27
      25: aload_2
      26: areturn
      27: aload_0
      28: getfield      #6                  // Field superClass:Lcom/google/javascript/jscomp/newtypes/NominalType;
      31: ifnull        49
      34: aload_0
      35: getfield      #6                  // Field superClass:Lcom/google/javascript/jscomp/newtypes/NominalType;
      38: aload_1
      39: invokevirtual #57                 // Method com/google/javascript/jscomp/newtypes/NominalType.getProp:(Ljava/lang/String;)Lcom/google/javascript/jscomp/newtypes/Property;
      42: astore_2
      43: aload_2
      44: ifnull        49
      47: aload_2
      48: areturn
      49: aconst_null
      50: areturn

  private com.google.javascript.jscomp.newtypes.Property getPropFromInterface(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field isInterface:Z
       4: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkState:(Z)V
       7: aload_0
       8: getfield      #16                 // Field protoProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      11: aload_1
      12: invokevirtual #54                 // Method com/google/javascript/jscomp/newtypes/PersistentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #55                 // class com/google/javascript/jscomp/newtypes/Property
      18: astore_2
      19: aload_2
      20: ifnull        25
      23: aload_2
      24: areturn
      25: aload_0
      26: getfield      #5                  // Field interfaces:Lcom/google/common/collect/ImmutableSet;
      29: ifnull        76
      32: aload_0
      33: getfield      #5                  // Field interfaces:Lcom/google/common/collect/ImmutableSet;
      36: invokevirtual #49                 // Method com/google/common/collect/ImmutableSet.iterator:()Lcom/google/common/collect/UnmodifiableIterator;
      39: astore_3
      40: aload_3
      41: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          76
      49: aload_3
      50: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #21                 // class com/google/javascript/jscomp/newtypes/NominalType
      58: astore        4
      60: aload         4
      62: aload_1
      63: invokevirtual #57                 // Method com/google/javascript/jscomp/newtypes/NominalType.getProp:(Ljava/lang/String;)Lcom/google/javascript/jscomp/newtypes/Property;
      66: astore_2
      67: aload_2
      68: ifnull        73
      71: aload_2
      72: areturn
      73: goto          40
      76: aconst_null
      77: areturn

  private com.google.javascript.jscomp.newtypes.Property getProp(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field isInterface:Z
       4: ifeq          13
       7: aload_0
       8: aload_1
       9: invokespecial #58                 // Method getPropFromInterface:(Ljava/lang/String;)Lcom/google/javascript/jscomp/newtypes/Property;
      12: areturn
      13: aload_0
      14: aload_1
      15: invokespecial #59                 // Method getPropFromClass:(Ljava/lang/String;)Lcom/google/javascript/jscomp/newtypes/Property;
      18: areturn

  public boolean mayHaveOwnProp(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #56                 // Method getOwnProp:(Ljava/lang/String;)Lcom/google/javascript/jscomp/newtypes/Property;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean mayHaveProp(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method getProp:(Ljava/lang/String;)Lcom/google/javascript/jscomp/newtypes/Property;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public com.google.javascript.jscomp.newtypes.JSType getInstancePropDeclaredType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method getProp:(Ljava/lang/String;)Lcom/google/javascript/jscomp/newtypes/Property;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_2
      13: invokevirtual #60                 // Method com/google/javascript/jscomp/newtypes/Property.getDeclaredType:()Lcom/google/javascript/jscomp/newtypes/JSType;
      16: ifnonnull     35
      19: aload_0
      20: getfield      #6                  // Field superClass:Lcom/google/javascript/jscomp/newtypes/NominalType;
      23: ifnull        35
      26: aload_0
      27: getfield      #6                  // Field superClass:Lcom/google/javascript/jscomp/newtypes/NominalType;
      30: aload_1
      31: invokevirtual #61                 // Method com/google/javascript/jscomp/newtypes/NominalType.getPropDeclaredType:(Ljava/lang/String;)Lcom/google/javascript/jscomp/newtypes/JSType;
      34: areturn
      35: aload_2
      36: invokevirtual #60                 // Method com/google/javascript/jscomp/newtypes/Property.getDeclaredType:()Lcom/google/javascript/jscomp/newtypes/JSType;
      39: areturn

  public java.util.Set<java.lang.String> getAllOwnProps();
    Code:
       0: new           #62                 // class java/util/HashSet
       3: dup
       4: invokespecial #63                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #15                 // Field classProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      13: invokevirtual #64                 // Method com/google/javascript/jscomp/newtypes/PersistentMap.keySet:()Ljava/util/Set;
      16: invokeinterface #65,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      21: pop
      22: aload_1
      23: aload_0
      24: getfield      #16                 // Field protoProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      27: invokevirtual #64                 // Method com/google/javascript/jscomp/newtypes/PersistentMap.keySet:()Ljava/util/Set;
      30: invokeinterface #65,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      35: pop
      36: aload_1
      37: areturn

  private com.google.common.collect.ImmutableSet<java.lang.String> getAllPropsOfInterface();
    Code:
       0: aload_0
       1: getfield      #2                  // Field isInterface:Z
       4: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkState:(Z)V
       7: aload_0
       8: getfield      #17                 // Field isFinalized:Z
      11: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      14: aload_0
      15: getfield      #18                 // Field allProps:Lcom/google/common/collect/ImmutableSet;
      18: ifnonnull     92
      21: invokestatic  #66                 // Method com/google/common/collect/ImmutableSet.builder:()Lcom/google/common/collect/ImmutableSet$Builder;
      24: astore_1
      25: aload_0
      26: getfield      #5                  // Field interfaces:Lcom/google/common/collect/ImmutableSet;
      29: ifnull        74
      32: aload_0
      33: getfield      #5                  // Field interfaces:Lcom/google/common/collect/ImmutableSet;
      36: invokevirtual #49                 // Method com/google/common/collect/ImmutableSet.iterator:()Lcom/google/common/collect/UnmodifiableIterator;
      39: astore_2
      40: aload_2
      41: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          74
      49: aload_2
      50: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #21                 // class com/google/javascript/jscomp/newtypes/NominalType
      58: astore_3
      59: aload_1
      60: aload_3
      61: invokestatic  #47                 // Method com/google/javascript/jscomp/newtypes/NominalType.access$1300:(Lcom/google/javascript/jscomp/newtypes/NominalType;)Lcom/google/javascript/jscomp/newtypes/NominalType$RawNominalType;
      64: invokespecial #8                  // Method getAllPropsOfInterface:()Lcom/google/common/collect/ImmutableSet;
      67: invokevirtual #67                 // Method com/google/common/collect/ImmutableSet$Builder.addAll:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableSet$Builder;
      70: pop
      71: goto          40
      74: aload_0
      75: aload_1
      76: aload_0
      77: getfield      #16                 // Field protoProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      80: invokevirtual #64                 // Method com/google/javascript/jscomp/newtypes/PersistentMap.keySet:()Ljava/util/Set;
      83: invokevirtual #67                 // Method com/google/common/collect/ImmutableSet$Builder.addAll:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableSet$Builder;
      86: invokevirtual #68                 // Method com/google/common/collect/ImmutableSet$Builder.build:()Lcom/google/common/collect/ImmutableSet;
      89: putfield      #18                 // Field allProps:Lcom/google/common/collect/ImmutableSet;
      92: aload_0
      93: getfield      #18                 // Field allProps:Lcom/google/common/collect/ImmutableSet;
      96: areturn

  private com.google.common.collect.ImmutableSet<java.lang.String> getAllPropsOfClass();
    Code:
       0: aload_0
       1: getfield      #2                  // Field isInterface:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: getfield      #17                 // Field isFinalized:Z
      19: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      22: aload_0
      23: getfield      #18                 // Field allProps:Lcom/google/common/collect/ImmutableSet;
      26: ifnonnull     83
      29: invokestatic  #66                 // Method com/google/common/collect/ImmutableSet.builder:()Lcom/google/common/collect/ImmutableSet$Builder;
      32: astore_1
      33: aload_0
      34: getfield      #6                  // Field superClass:Lcom/google/javascript/jscomp/newtypes/NominalType;
      37: ifnull        55
      40: aload_1
      41: aload_0
      42: getfield      #6                  // Field superClass:Lcom/google/javascript/jscomp/newtypes/NominalType;
      45: invokestatic  #47                 // Method com/google/javascript/jscomp/newtypes/NominalType.access$1300:(Lcom/google/javascript/jscomp/newtypes/NominalType;)Lcom/google/javascript/jscomp/newtypes/NominalType$RawNominalType;
      48: invokespecial #7                  // Method getAllPropsOfClass:()Lcom/google/common/collect/ImmutableSet;
      51: invokevirtual #67                 // Method com/google/common/collect/ImmutableSet$Builder.addAll:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableSet$Builder;
      54: pop
      55: aload_0
      56: aload_1
      57: aload_0
      58: getfield      #15                 // Field classProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      61: invokevirtual #64                 // Method com/google/javascript/jscomp/newtypes/PersistentMap.keySet:()Ljava/util/Set;
      64: invokevirtual #67                 // Method com/google/common/collect/ImmutableSet$Builder.addAll:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableSet$Builder;
      67: aload_0
      68: getfield      #16                 // Field protoProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      71: invokevirtual #64                 // Method com/google/javascript/jscomp/newtypes/PersistentMap.keySet:()Ljava/util/Set;
      74: invokevirtual #67                 // Method com/google/common/collect/ImmutableSet$Builder.addAll:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableSet$Builder;
      77: invokevirtual #68                 // Method com/google/common/collect/ImmutableSet$Builder.build:()Lcom/google/common/collect/ImmutableSet;
      80: putfield      #18                 // Field allProps:Lcom/google/common/collect/ImmutableSet;
      83: aload_0
      84: getfield      #18                 // Field allProps:Lcom/google/common/collect/ImmutableSet;
      87: areturn

  public void addClassProperty(java.lang.String, com.google.javascript.jscomp.newtypes.JSType, boolean);
    Code:
       0: aload_0
       1: getfield      #17                 // Field isFinalized:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_2
      16: ifnonnull     27
      19: iload_3
      20: ifeq          27
      23: getstatic     #69                 // Field com/google/javascript/jscomp/newtypes/JSType.UNKNOWN:Lcom/google/javascript/jscomp/newtypes/JSType;
      26: astore_2
      27: aload_0
      28: aload_0
      29: getfield      #15                 // Field classProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      32: aload_1
      33: iload_3
      34: ifeq          45
      37: aload_2
      38: aload_2
      39: invokestatic  #70                 // Method com/google/javascript/jscomp/newtypes/Property.makeConstant:(Lcom/google/javascript/jscomp/newtypes/JSType;Lcom/google/javascript/jscomp/newtypes/JSType;)Lcom/google/javascript/jscomp/newtypes/Property;
      42: goto          50
      45: aload_2
      46: aload_2
      47: invokestatic  #71                 // Method com/google/javascript/jscomp/newtypes/Property.make:(Lcom/google/javascript/jscomp/newtypes/JSType;Lcom/google/javascript/jscomp/newtypes/JSType;)Lcom/google/javascript/jscomp/newtypes/Property;
      50: invokevirtual #72                 // Method com/google/javascript/jscomp/newtypes/PersistentMap.with:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      53: putfield      #15                 // Field classProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      56: aload_0
      57: getfield      #16                 // Field protoProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      60: aload_1
      61: invokevirtual #73                 // Method com/google/javascript/jscomp/newtypes/PersistentMap.containsKey:(Ljava/lang/Object;)Z
      64: ifeq          74
      67: aload_0
      68: aload_1
      69: aload_2
      70: iload_3
      71: invokevirtual #74                 // Method addProtoProperty:(Ljava/lang/String;Lcom/google/javascript/jscomp/newtypes/JSType;Z)V
      74: return

  public void addUndeclaredClassProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #17                 // Field isFinalized:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: aload_1
      17: invokevirtual #75                 // Method mayHaveProp:(Ljava/lang/String;)Z
      20: ifeq          24
      23: return
      24: aload_0
      25: aload_0
      26: getfield      #15                 // Field classProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      29: aload_1
      30: getstatic     #69                 // Field com/google/javascript/jscomp/newtypes/JSType.UNKNOWN:Lcom/google/javascript/jscomp/newtypes/JSType;
      33: aconst_null
      34: invokestatic  #71                 // Method com/google/javascript/jscomp/newtypes/Property.make:(Lcom/google/javascript/jscomp/newtypes/JSType;Lcom/google/javascript/jscomp/newtypes/JSType;)Lcom/google/javascript/jscomp/newtypes/Property;
      37: invokevirtual #72                 // Method com/google/javascript/jscomp/newtypes/PersistentMap.with:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      40: putfield      #15                 // Field classProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      43: return

  public void addProtoProperty(java.lang.String, com.google.javascript.jscomp.newtypes.JSType, boolean);
    Code:
       0: aload_0
       1: getfield      #17                 // Field isFinalized:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_2
      16: ifnonnull     27
      19: iload_3
      20: ifeq          27
      23: getstatic     #69                 // Field com/google/javascript/jscomp/newtypes/JSType.UNKNOWN:Lcom/google/javascript/jscomp/newtypes/JSType;
      26: astore_2
      27: aload_0
      28: getfield      #15                 // Field classProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      31: aload_1
      32: invokevirtual #73                 // Method com/google/javascript/jscomp/newtypes/PersistentMap.containsKey:(Ljava/lang/Object;)Z
      35: ifeq          67
      38: aload_0
      39: getfield      #15                 // Field classProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      42: aload_1
      43: invokevirtual #54                 // Method com/google/javascript/jscomp/newtypes/PersistentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #55                 // class com/google/javascript/jscomp/newtypes/Property
      49: invokevirtual #60                 // Method com/google/javascript/jscomp/newtypes/Property.getDeclaredType:()Lcom/google/javascript/jscomp/newtypes/JSType;
      52: ifnonnull     67
      55: aload_0
      56: aload_0
      57: getfield      #15                 // Field classProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      60: aload_1
      61: invokevirtual #76                 // Method com/google/javascript/jscomp/newtypes/PersistentMap.without:(Ljava/lang/Object;)Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      64: putfield      #15                 // Field classProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      67: aload_0
      68: aload_0
      69: getfield      #16                 // Field protoProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      72: aload_1
      73: iload_3
      74: ifeq          85
      77: aload_2
      78: aload_2
      79: invokestatic  #70                 // Method com/google/javascript/jscomp/newtypes/Property.makeConstant:(Lcom/google/javascript/jscomp/newtypes/JSType;Lcom/google/javascript/jscomp/newtypes/JSType;)Lcom/google/javascript/jscomp/newtypes/Property;
      82: goto          90
      85: aload_2
      86: aload_2
      87: invokestatic  #71                 // Method com/google/javascript/jscomp/newtypes/Property.make:(Lcom/google/javascript/jscomp/newtypes/JSType;Lcom/google/javascript/jscomp/newtypes/JSType;)Lcom/google/javascript/jscomp/newtypes/Property;
      90: invokevirtual #72                 // Method com/google/javascript/jscomp/newtypes/PersistentMap.with:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      93: putfield      #16                 // Field protoProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      96: return

  public void addUndeclaredProtoProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #17                 // Field isFinalized:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: getfield      #16                 // Field protoProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      19: aload_1
      20: invokevirtual #73                 // Method com/google/javascript/jscomp/newtypes/PersistentMap.containsKey:(Ljava/lang/Object;)Z
      23: ifeq          43
      26: aload_0
      27: getfield      #16                 // Field protoProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      30: aload_1
      31: invokevirtual #54                 // Method com/google/javascript/jscomp/newtypes/PersistentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #55                 // class com/google/javascript/jscomp/newtypes/Property
      37: invokevirtual #60                 // Method com/google/javascript/jscomp/newtypes/Property.getDeclaredType:()Lcom/google/javascript/jscomp/newtypes/JSType;
      40: ifnonnull     62
      43: aload_0
      44: aload_0
      45: getfield      #16                 // Field protoProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      48: aload_1
      49: getstatic     #69                 // Field com/google/javascript/jscomp/newtypes/JSType.UNKNOWN:Lcom/google/javascript/jscomp/newtypes/JSType;
      52: aconst_null
      53: invokestatic  #71                 // Method com/google/javascript/jscomp/newtypes/Property.make:(Lcom/google/javascript/jscomp/newtypes/JSType;Lcom/google/javascript/jscomp/newtypes/JSType;)Lcom/google/javascript/jscomp/newtypes/Property;
      56: invokevirtual #72                 // Method com/google/javascript/jscomp/newtypes/PersistentMap.with:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      59: putfield      #16                 // Field protoProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
      62: return

  private com.google.javascript.jscomp.newtypes.JSType createProtoObject();
    Code:
       0: aload_0
       1: getfield      #6                  // Field superClass:Lcom/google/javascript/jscomp/newtypes/NominalType;
       4: aload_0
       5: getfield      #16                 // Field protoProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
       8: aconst_null
       9: iconst_0
      10: getstatic     #36                 // Field com/google/javascript/jscomp/newtypes/ObjectKind.UNRESTRICTED:Lcom/google/javascript/jscomp/newtypes/ObjectKind;
      13: invokestatic  #77                 // Method com/google/javascript/jscomp/newtypes/ObjectType.makeObjectType:(Lcom/google/javascript/jscomp/newtypes/NominalType;Lcom/google/javascript/jscomp/newtypes/PersistentMap;Lcom/google/javascript/jscomp/newtypes/FunctionType;ZLcom/google/javascript/jscomp/newtypes/ObjectKind;)Lcom/google/javascript/jscomp/newtypes/ObjectType;
      16: invokestatic  #29                 // Method com/google/javascript/jscomp/newtypes/JSType.fromObjectType:(Lcom/google/javascript/jscomp/newtypes/ObjectType;)Lcom/google/javascript/jscomp/newtypes/JSType;
      19: areturn

  public boolean hasCtorProp(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #78                 // Method com/google/javascript/jscomp/newtypes/Namespace.hasProp:(Ljava/lang/String;)Z
       5: ireturn

  public void addCtorProperty(java.lang.String, com.google.javascript.jscomp.newtypes.JSType, boolean);
    Code:
       0: aload_0
       1: getfield      #17                 // Field isFinalized:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: aload_1
      17: aload_2
      18: iload_3
      19: invokespecial #79                 // Method com/google/javascript/jscomp/newtypes/Namespace.addProperty:(Ljava/lang/String;Lcom/google/javascript/jscomp/newtypes/JSType;Z)V
      22: return

  public void addUndeclaredCtorProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #17                 // Field isFinalized:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: aload_1
      17: getstatic     #69                 // Field com/google/javascript/jscomp/newtypes/JSType.UNKNOWN:Lcom/google/javascript/jscomp/newtypes/JSType;
      20: iconst_0
      21: invokespecial #80                 // Method com/google/javascript/jscomp/newtypes/Namespace.addUndeclaredProperty:(Ljava/lang/String;Lcom/google/javascript/jscomp/newtypes/JSType;Z)V
      24: return

  public com.google.javascript.jscomp.newtypes.JSType getCtorPropDeclaredType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #81                 // Method com/google/javascript/jscomp/newtypes/Namespace.getPropDeclaredType:(Ljava/lang/String;)Lcom/google/javascript/jscomp/newtypes/JSType;
       5: areturn

  private com.google.javascript.jscomp.newtypes.JSType createConstructorObject(com.google.javascript.jscomp.newtypes.FunctionType, com.google.javascript.jscomp.newtypes.NominalType);
    Code:
       0: aload_0
       1: aload_2
       2: aload_0
       3: getfield      #82                 // Field otherProps:Lcom/google/javascript/jscomp/newtypes/PersistentMap;
       6: aload_1
       7: aload_1
       8: invokevirtual #83                 // Method com/google/javascript/jscomp/newtypes/FunctionType.isLoose:()Z
      11: getstatic     #36                 // Field com/google/javascript/jscomp/newtypes/ObjectKind.UNRESTRICTED:Lcom/google/javascript/jscomp/newtypes/ObjectKind;
      14: invokestatic  #77                 // Method com/google/javascript/jscomp/newtypes/ObjectType.makeObjectType:(Lcom/google/javascript/jscomp/newtypes/NominalType;Lcom/google/javascript/jscomp/newtypes/PersistentMap;Lcom/google/javascript/jscomp/newtypes/FunctionType;ZLcom/google/javascript/jscomp/newtypes/ObjectKind;)Lcom/google/javascript/jscomp/newtypes/ObjectType;
      17: invokevirtual #84                 // Method withNamedTypes:(Lcom/google/javascript/jscomp/newtypes/ObjectType;)Lcom/google/javascript/jscomp/newtypes/JSType;
      20: areturn

  private java.lang.StringBuilder appendGenericSuffixTo(java.lang.StringBuilder, java.util.Map<java.lang.String, com.google.javascript.jscomp.newtypes.JSType>);
    Code:
       0: aload_2
       1: invokeinterface #85,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       6: ifne          27
       9: aload_2
      10: invokeinterface #86,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      15: aload_0
      16: getfield      #12                 // Field typeParameters:Lcom/google/common/collect/ImmutableList;
      19: invokeinterface #87,  2           // InterfaceMethod java/util/Set.containsAll:(Ljava/util/Collection;)Z
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      35: aload_0
      36: getfield      #12                 // Field typeParameters:Lcom/google/common/collect/ImmutableList;
      39: invokevirtual #40                 // Method com/google/common/collect/ImmutableList.isEmpty:()Z
      42: ifeq          47
      45: aload_1
      46: areturn
      47: iconst_1
      48: istore_3
      49: aload_1
      50: ldc           #88                 // String <
      52: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: pop
      56: aload_0
      57: getfield      #12                 // Field typeParameters:Lcom/google/common/collect/ImmutableList;
      60: invokevirtual #90                 // Method com/google/common/collect/ImmutableList.iterator:()Lcom/google/common/collect/UnmodifiableIterator;
      63: astore        4
      65: aload         4
      67: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      72: ifeq          136
      75: aload         4
      77: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      82: checkcast     #91                 // class java/lang/String
      85: astore        5
      87: iload_3
      88: ifne          98
      91: aload_1
      92: bipush        44
      94: invokevirtual #92                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      97: pop
      98: aload_2
      99: aload         5
     101: invokeinterface #93,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     106: checkcast     #94                 // class com/google/javascript/jscomp/newtypes/JSType
     109: astore        6
     111: aload         6
     113: ifnull        126
     116: aload         6
     118: aload_1
     119: invokevirtual #95                 // Method com/google/javascript/jscomp/newtypes/JSType.appendTo:(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;
     122: pop
     123: goto          133
     126: aload_1
     127: aload         5
     129: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: pop
     133: goto          65
     136: aload_1
     137: bipush        62
     139: invokevirtual #92                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     142: pop
     143: aload_1
     144: areturn

  public com.google.javascript.jscomp.newtypes.NominalType$RawNominalType finalizeNominalType();
    Code:
       0: aload_0
       1: getfield      #44                 // Field ctorFn:Lcom/google/javascript/jscomp/newtypes/FunctionType;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: getfield      #5                  // Field interfaces:Lcom/google/common/collect/ImmutableSet;
      19: ifnonnull     29
      22: aload_0
      23: invokestatic  #53                 // Method com/google/common/collect/ImmutableSet.of:()Lcom/google/common/collect/ImmutableSet;
      26: putfield      #5                  // Field interfaces:Lcom/google/common/collect/ImmutableSet;
      29: aload_0
      30: ldc           #96                 // String prototype
      32: aload_0
      33: invokespecial #97                 // Method createProtoObject:()Lcom/google/javascript/jscomp/newtypes/JSType;
      36: iconst_0
      37: invokevirtual #98                 // Method addCtorProperty:(Ljava/lang/String;Lcom/google/javascript/jscomp/newtypes/JSType;Z)V
      40: aload_0
      41: iconst_1
      42: putfield      #17                 // Field isFinalized:Z
      45: aload_0
      46: areturn

  public java.lang.String toString();
    Code:
       0: new           #99                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: getfield      #10                 // Field name:Ljava/lang/String;
       8: invokespecial #100                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      11: astore_1
      12: aload_0
      13: aload_1
      14: invokestatic  #22                 // Method com/google/common/collect/ImmutableMap.of:()Lcom/google/common/collect/ImmutableMap;
      17: invokespecial #1                  // Method appendGenericSuffixTo:(Ljava/lang/StringBuilder;Ljava/util/Map;)Ljava/lang/StringBuilder;
      20: pop
      21: aload_1
      22: invokevirtual #101                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: areturn

  public com.google.javascript.jscomp.newtypes.JSType toJSType();
    Code:
       0: aload_0
       1: getfield      #17                 // Field isFinalized:Z
       4: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkState:(Z)V
       7: aload_0
       8: aload_0
       9: getfield      #44                 // Field ctorFn:Lcom/google/javascript/jscomp/newtypes/FunctionType;
      12: aload_0
      13: getfield      #45                 // Field builtinFunction:Lcom/google/javascript/jscomp/newtypes/NominalType;
      16: invokespecial #3                  // Method createConstructorObject:(Lcom/google/javascript/jscomp/newtypes/FunctionType;Lcom/google/javascript/jscomp/newtypes/NominalType;)Lcom/google/javascript/jscomp/newtypes/JSType;
      19: areturn

  public com.google.javascript.jscomp.newtypes.NominalType getAsNominalType();
    Code:
       0: aload_0
       1: getfield      #9                  // Field wrappedAsNominal:Lcom/google/javascript/jscomp/newtypes/NominalType;
       4: areturn

  public com.google.javascript.jscomp.newtypes.JSType getInstanceAsJSType();
    Code:
       0: aload_0
       1: getfield      #30                 // Field wrappedAsJSType:Lcom/google/javascript/jscomp/newtypes/JSType;
       4: areturn

  public com.google.javascript.jscomp.newtypes.JSType getInstanceAsNullableJSType();
    Code:
       0: aload_0
       1: getfield      #33                 // Field wrappedAsNullableJSType:Lcom/google/javascript/jscomp/newtypes/JSType;
       4: areturn

  static com.google.common.collect.ImmutableList access$000(com.google.javascript.jscomp.newtypes.NominalType$RawNominalType);
    Code:
       0: aload_0
       1: getfield      #12                 // Field typeParameters:Lcom/google/common/collect/ImmutableList;
       4: areturn

  static com.google.javascript.jscomp.newtypes.ObjectKind access$100(com.google.javascript.jscomp.newtypes.NominalType$RawNominalType);
    Code:
       0: aload_0
       1: getfield      #11                 // Field objectKind:Lcom/google/javascript/jscomp/newtypes/ObjectKind;
       4: areturn

  static java.lang.String access$200(com.google.javascript.jscomp.newtypes.NominalType$RawNominalType);
    Code:
       0: aload_0
       1: getfield      #10                 // Field name:Ljava/lang/String;
       4: areturn

  static com.google.javascript.jscomp.newtypes.NominalType access$300(com.google.javascript.jscomp.newtypes.NominalType$RawNominalType);
    Code:
       0: aload_0
       1: getfield      #9                  // Field wrappedAsNominal:Lcom/google/javascript/jscomp/newtypes/NominalType;
       4: areturn

  static com.google.common.collect.ImmutableSet access$400(com.google.javascript.jscomp.newtypes.NominalType$RawNominalType);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method getAllPropsOfInterface:()Lcom/google/common/collect/ImmutableSet;
       4: areturn

  static com.google.common.collect.ImmutableSet access$500(com.google.javascript.jscomp.newtypes.NominalType$RawNominalType);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method getAllPropsOfClass:()Lcom/google/common/collect/ImmutableSet;
       4: areturn

  static com.google.javascript.jscomp.newtypes.NominalType access$600(com.google.javascript.jscomp.newtypes.NominalType$RawNominalType);
    Code:
       0: aload_0
       1: getfield      #6                  // Field superClass:Lcom/google/javascript/jscomp/newtypes/NominalType;
       4: areturn

  static com.google.common.collect.ImmutableSet access$700(com.google.javascript.jscomp.newtypes.NominalType$RawNominalType);
    Code:
       0: aload_0
       1: getfield      #5                  // Field interfaces:Lcom/google/common/collect/ImmutableSet;
       4: areturn

  static com.google.javascript.jscomp.newtypes.Property access$800(com.google.javascript.jscomp.newtypes.NominalType$RawNominalType, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method getProp:(Ljava/lang/String;)Lcom/google/javascript/jscomp/newtypes/Property;
       5: areturn

  static com.google.javascript.jscomp.newtypes.JSType access$900(com.google.javascript.jscomp.newtypes.NominalType$RawNominalType, com.google.javascript.jscomp.newtypes.FunctionType, com.google.javascript.jscomp.newtypes.NominalType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #3                  // Method createConstructorObject:(Lcom/google/javascript/jscomp/newtypes/FunctionType;Lcom/google/javascript/jscomp/newtypes/NominalType;)Lcom/google/javascript/jscomp/newtypes/JSType;
       6: areturn

  static boolean access$1000(com.google.javascript.jscomp.newtypes.NominalType$RawNominalType);
    Code:
       0: aload_0
       1: getfield      #2                  // Field isInterface:Z
       4: ireturn

  static java.lang.StringBuilder access$1100(com.google.javascript.jscomp.newtypes.NominalType$RawNominalType, java.lang.StringBuilder, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method appendGenericSuffixTo:(Ljava/lang/StringBuilder;Ljava/util/Map;)Ljava/lang/StringBuilder;
       6: areturn
}
