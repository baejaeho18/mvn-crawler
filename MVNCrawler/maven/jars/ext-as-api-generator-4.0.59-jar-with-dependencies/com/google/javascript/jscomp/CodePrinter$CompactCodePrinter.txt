Compiled from "CodePrinter.java"
class com.google.javascript.jscomp.CodePrinter$CompactCodePrinter extends com.google.javascript.jscomp.CodePrinter$MappedCodePrinter {
  private final boolean lineBreak;

  private final boolean preferLineBreakAtEndOfFile;

  private int lineStartPosition;

  private int preferredBreakPosition;

  private int prevCutPosition;

  private int prevLineStartPosition;

  private com.google.javascript.jscomp.CodePrinter$CompactCodePrinter(boolean, boolean, int, boolean, com.google.javascript.jscomp.SourceMap$DetailLevel);
    Code:
       0: aload_0
       1: iload_3
       2: iload         4
       4: aload         5
       6: invokespecial #2                  // Method com/google/javascript/jscomp/CodePrinter$MappedCodePrinter."<init>":(IZLcom/google/javascript/jscomp/SourceMap$DetailLevel;)V
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field lineStartPosition:I
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field preferredBreakPosition:I
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field prevCutPosition:I
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field prevLineStartPosition:I
      29: aload_0
      30: iload_1
      31: putfield      #7                  // Field lineBreak:Z
      34: aload_0
      35: iload_2
      36: putfield      #8                  // Field preferLineBreakAtEndOfFile:Z
      39: return

  void append(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field code:Ljava/lang/StringBuilder;
       4: aload_1
       5: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       8: pop
       9: aload_0
      10: dup
      11: getfield      #11                 // Field lineLength:I
      14: aload_1
      15: invokevirtual #12                 // Method java/lang/String.length:()I
      18: iadd
      19: putfield      #11                 // Field lineLength:I
      22: return

  void startNewLine();
    Code:
       0: aload_0
       1: getfield      #11                 // Field lineLength:I
       4: ifle          62
       7: aload_0
       8: aload_0
       9: getfield      #9                  // Field code:Ljava/lang/StringBuilder;
      12: invokevirtual #13                 // Method java/lang/StringBuilder.length:()I
      15: putfield      #5                  // Field prevCutPosition:I
      18: aload_0
      19: aload_0
      20: getfield      #3                  // Field lineStartPosition:I
      23: putfield      #6                  // Field prevLineStartPosition:I
      26: aload_0
      27: getfield      #9                  // Field code:Ljava/lang/StringBuilder;
      30: bipush        10
      32: invokevirtual #14                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      35: pop
      36: aload_0
      37: iconst_0
      38: putfield      #11                 // Field lineLength:I
      41: aload_0
      42: dup
      43: getfield      #15                 // Field lineIndex:I
      46: iconst_1
      47: iadd
      48: putfield      #15                 // Field lineIndex:I
      51: aload_0
      52: aload_0
      53: getfield      #9                  // Field code:Ljava/lang/StringBuilder;
      56: invokevirtual #13                 // Method java/lang/StringBuilder.length:()I
      59: putfield      #3                  // Field lineStartPosition:I
      62: return

  void maybeLineBreak();
    Code:
       0: aload_0
       1: getfield      #7                  // Field lineBreak:Z
       4: ifeq          23
       7: aload_0
       8: getfield      #16                 // Field sawFunction:Z
      11: ifeq          23
      14: aload_0
      15: invokevirtual #17                 // Method startNewLine:()V
      18: aload_0
      19: iconst_0
      20: putfield      #16                 // Field sawFunction:Z
      23: aload_0
      24: getfield      #9                  // Field code:Ljava/lang/StringBuilder;
      27: invokevirtual #13                 // Method java/lang/StringBuilder.length:()I
      30: istore_1
      31: aload_0
      32: getfield      #4                  // Field preferredBreakPosition:I
      35: iload_1
      36: iconst_1
      37: isub
      38: if_icmpne     63
      41: aload_0
      42: getfield      #9                  // Field code:Ljava/lang/StringBuilder;
      45: iload_1
      46: iconst_1
      47: isub
      48: invokevirtual #18                 // Method java/lang/StringBuilder.charAt:(I)C
      51: istore_2
      52: iload_2
      53: bipush        59
      55: if_icmpne     63
      58: aload_0
      59: iload_1
      60: putfield      #4                  // Field preferredBreakPosition:I
      63: aload_0
      64: invokevirtual #19                 // Method maybeCutLine:()V
      67: return

  void maybeCutLine();
    Code:
       0: aload_0
       1: getfield      #11                 // Field lineLength:I
       4: aload_0
       5: getfield      #20                 // Field lineLengthThreshold:I
       8: if_icmple     113
      11: aload_0
      12: getfield      #4                  // Field preferredBreakPosition:I
      15: aload_0
      16: getfield      #3                  // Field lineStartPosition:I
      19: if_icmple     109
      22: aload_0
      23: getfield      #4                  // Field preferredBreakPosition:I
      26: aload_0
      27: getfield      #3                  // Field lineStartPosition:I
      30: aload_0
      31: getfield      #11                 // Field lineLength:I
      34: iadd
      35: if_icmpge     109
      38: aload_0
      39: getfield      #4                  // Field preferredBreakPosition:I
      42: istore_1
      43: aload_0
      44: getfield      #9                  // Field code:Ljava/lang/StringBuilder;
      47: iload_1
      48: bipush        10
      50: invokevirtual #21                 // Method java/lang/StringBuilder.insert:(IC)Ljava/lang/StringBuilder;
      53: pop
      54: aload_0
      55: iload_1
      56: putfield      #5                  // Field prevCutPosition:I
      59: aload_0
      60: aload_0
      61: getfield      #15                 // Field lineIndex:I
      64: iload_1
      65: aload_0
      66: getfield      #3                  // Field lineStartPosition:I
      69: isub
      70: iconst_1
      71: invokevirtual #22                 // Method reportLineCut:(IIZ)V
      74: aload_0
      75: dup
      76: getfield      #15                 // Field lineIndex:I
      79: iconst_1
      80: iadd
      81: putfield      #15                 // Field lineIndex:I
      84: aload_0
      85: dup
      86: getfield      #11                 // Field lineLength:I
      89: iload_1
      90: aload_0
      91: getfield      #3                  // Field lineStartPosition:I
      94: isub
      95: isub
      96: putfield      #11                 // Field lineLength:I
      99: aload_0
     100: iload_1
     101: iconst_1
     102: iadd
     103: putfield      #3                  // Field lineStartPosition:I
     106: goto          113
     109: aload_0
     110: invokevirtual #17                 // Method startNewLine:()V
     113: return

  void notePreferredLineBreak();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field code:Ljava/lang/StringBuilder;
       5: invokevirtual #13                 // Method java/lang/StringBuilder.length:()I
       8: putfield      #4                  // Field preferredBreakPosition:I
      11: return

  void endFile();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method com/google/javascript/jscomp/CodePrinter$MappedCodePrinter.endFile:()V
       4: aload_0
       5: getfield      #8                  // Field preferLineBreakAtEndOfFile:Z
       8: ifne          12
      11: return
      12: aload_0
      13: getfield      #11                 // Field lineLength:I
      16: aload_0
      17: getfield      #20                 // Field lineLengthThreshold:I
      20: iconst_2
      21: idiv
      22: if_icmple     38
      25: aload_0
      26: ldc           #24                 // String ;
      28: invokevirtual #25                 // Method append:(Ljava/lang/String;)V
      31: aload_0
      32: invokevirtual #17                 // Method startNewLine:()V
      35: goto          127
      38: aload_0
      39: getfield      #5                  // Field prevCutPosition:I
      42: ifle          127
      45: aload_0
      46: getfield      #9                  // Field code:Ljava/lang/StringBuilder;
      49: aload_0
      50: getfield      #5                  // Field prevCutPosition:I
      53: bipush        32
      55: invokevirtual #26                 // Method java/lang/StringBuilder.setCharAt:(IC)V
      58: aload_0
      59: aload_0
      60: getfield      #6                  // Field prevLineStartPosition:I
      63: putfield      #3                  // Field lineStartPosition:I
      66: aload_0
      67: aload_0
      68: getfield      #9                  // Field code:Ljava/lang/StringBuilder;
      71: invokevirtual #13                 // Method java/lang/StringBuilder.length:()I
      74: aload_0
      75: getfield      #3                  // Field lineStartPosition:I
      78: isub
      79: putfield      #11                 // Field lineLength:I
      82: aload_0
      83: aload_0
      84: getfield      #15                 // Field lineIndex:I
      87: aload_0
      88: getfield      #5                  // Field prevCutPosition:I
      91: iconst_1
      92: iadd
      93: iconst_0
      94: invokevirtual #22                 // Method reportLineCut:(IIZ)V
      97: aload_0
      98: dup
      99: getfield      #15                 // Field lineIndex:I
     102: iconst_1
     103: isub
     104: putfield      #15                 // Field lineIndex:I
     107: aload_0
     108: iconst_0
     109: putfield      #5                  // Field prevCutPosition:I
     112: aload_0
     113: iconst_0
     114: putfield      #6                  // Field prevLineStartPosition:I
     117: aload_0
     118: ldc           #24                 // String ;
     120: invokevirtual #25                 // Method append:(Ljava/lang/String;)V
     123: aload_0
     124: invokevirtual #17                 // Method startNewLine:()V
     127: return

  com.google.javascript.jscomp.CodePrinter$CompactCodePrinter(boolean, boolean, int, boolean, com.google.javascript.jscomp.SourceMap$DetailLevel, com.google.javascript.jscomp.CodePrinter$1);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: aload         5
       8: invokespecial #1                  // Method "<init>":(ZZIZLcom/google/javascript/jscomp/SourceMap$DetailLevel;)V
      11: return
}
