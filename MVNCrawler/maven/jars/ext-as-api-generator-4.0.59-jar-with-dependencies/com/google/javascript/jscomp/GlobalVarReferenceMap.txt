Compiled from "GlobalVarReferenceMap.java"
class com.google.javascript.jscomp.GlobalVarReferenceMap implements com.google.javascript.jscomp.ReferenceCollectingCallback$ReferenceMap {
  private java.util.Map<java.lang.String, com.google.javascript.jscomp.ReferenceCollectingCallback$ReferenceCollection> refMap;

  private final java.util.Map<com.google.javascript.rhino.InputId, java.lang.Integer> inputOrder;

  com.google.javascript.jscomp.GlobalVarReferenceMap(java.util.List<com.google.javascript.jscomp.CompilerInput>, java.util.List<com.google.javascript.jscomp.CompilerInput>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field refMap:Ljava/util/Map;
       9: aload_0
      10: invokestatic  #3                  // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
      13: putfield      #4                  // Field inputOrder:Ljava/util/Map;
      16: iconst_0
      17: istore_3
      18: aload_2
      19: invokeinterface #5,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      24: astore        4
      26: aload         4
      28: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          73
      36: aload         4
      38: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #8                  // class com/google/javascript/jscomp/CompilerInput
      46: astore        5
      48: aload_0
      49: getfield      #4                  // Field inputOrder:Ljava/util/Map;
      52: aload         5
      54: invokevirtual #9                  // Method com/google/javascript/jscomp/CompilerInput.getInputId:()Lcom/google/javascript/rhino/InputId;
      57: iload_3
      58: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      61: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      66: pop
      67: iinc          3, 1
      70: goto          26
      73: aload_1
      74: invokeinterface #5,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      79: astore        4
      81: aload         4
      83: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      88: ifeq          128
      91: aload         4
      93: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      98: checkcast     #8                  // class com/google/javascript/jscomp/CompilerInput
     101: astore        5
     103: aload_0
     104: getfield      #4                  // Field inputOrder:Ljava/util/Map;
     107: aload         5
     109: invokevirtual #9                  // Method com/google/javascript/jscomp/CompilerInput.getInputId:()Lcom/google/javascript/rhino/InputId;
     112: iload_3
     113: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     116: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     121: pop
     122: iinc          3, 1
     125: goto          81
     128: return

  public com.google.javascript.jscomp.ReferenceCollectingCallback$ReferenceCollection getReferences(com.google.javascript.jscomp.Scope$Var);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method com/google/javascript/jscomp/Scope$Var.isGlobal:()Z
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #2                  // Field refMap:Ljava/util/Map;
      13: aload_1
      14: invokevirtual #13                 // Method com/google/javascript/jscomp/Scope$Var.getName:()Ljava/lang/String;
      17: invokeinterface #14,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #15                 // class com/google/javascript/jscomp/ReferenceCollectingCallback$ReferenceCollection
      25: areturn

  private void resetGlobalVarReferences(java.util.Map<com.google.javascript.jscomp.Scope$Var, com.google.javascript.jscomp.ReferenceCollectingCallback$ReferenceCollection>);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
       4: putfield      #2                  // Field refMap:Ljava/util/Map;
       7: aload_1
       8: invokeinterface #16,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      13: invokeinterface #17,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          81
      28: aload_2
      29: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #18                 // class java/util/Map$Entry
      37: astore_3
      38: aload_3
      39: invokeinterface #19,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      44: checkcast     #20                 // class com/google/javascript/jscomp/Scope$Var
      47: astore        4
      49: aload         4
      51: invokevirtual #12                 // Method com/google/javascript/jscomp/Scope$Var.isGlobal:()Z
      54: ifeq          78
      57: aload_0
      58: getfield      #2                  // Field refMap:Ljava/util/Map;
      61: aload         4
      63: invokevirtual #13                 // Method com/google/javascript/jscomp/Scope$Var.getName:()Ljava/lang/String;
      66: aload_3
      67: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      72: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      77: pop
      78: goto          19
      81: return

  void updateGlobalVarReferences(java.util.Map<com.google.javascript.jscomp.Scope$Var, com.google.javascript.jscomp.ReferenceCollectingCallback$ReferenceCollection>, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #2                  // Field refMap:Ljava/util/Map;
       4: ifnull        14
       7: aload_2
       8: invokevirtual #22                 // Method com/google/javascript/rhino/Node.isScript:()Z
      11: ifne          20
      14: aload_0
      15: aload_1
      16: invokespecial #23                 // Method resetGlobalVarReferences:(Ljava/util/Map;)V
      19: return
      20: aload_2
      21: invokevirtual #24                 // Method com/google/javascript/rhino/Node.getInputId:()Lcom/google/javascript/rhino/InputId;
      24: astore_3
      25: aload_3
      26: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_0
      31: aload_3
      32: invokespecial #26                 // Method removeScriptReferences:(Lcom/google/javascript/rhino/InputId;)V
      35: aload_1
      36: invokeinterface #16,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      41: invokeinterface #17,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      46: astore        4
      48: aload         4
      50: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      55: ifeq          113
      58: aload         4
      60: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      65: checkcast     #18                 // class java/util/Map$Entry
      68: astore        5
      70: aload         5
      72: invokeinterface #19,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      77: checkcast     #20                 // class com/google/javascript/jscomp/Scope$Var
      80: astore        6
      82: aload         6
      84: invokevirtual #12                 // Method com/google/javascript/jscomp/Scope$Var.isGlobal:()Z
      87: ifeq          110
      90: aload_0
      91: aload         6
      93: invokevirtual #13                 // Method com/google/javascript/jscomp/Scope$Var.getName:()Ljava/lang/String;
      96: aload_3
      97: aload         5
      99: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     104: checkcast     #15                 // class com/google/javascript/jscomp/ReferenceCollectingCallback$ReferenceCollection
     107: invokespecial #27                 // Method replaceReferences:(Ljava/lang/String;Lcom/google/javascript/rhino/InputId;Lcom/google/javascript/jscomp/ReferenceCollectingCallback$ReferenceCollection;)V
     110: goto          48
     113: return

  private void removeScriptReferences(com.google.javascript.rhino.InputId);
    Code:
       0: aload_1
       1: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #4                  // Field inputOrder:Ljava/util/Map;
       9: aload_1
      10: invokeinterface #28,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      15: ifne          19
      18: return
      19: aload_0
      20: getfield      #2                  // Field refMap:Ljava/util/Map;
      23: invokeinterface #29,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      28: invokeinterface #30,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      33: astore_2
      34: aload_2
      35: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          107
      43: aload_2
      44: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #15                 // class com/google/javascript/jscomp/ReferenceCollectingCallback$ReferenceCollection
      52: astore_3
      53: aload_3
      54: ifnonnull     60
      57: goto          34
      60: aload_3
      61: getfield      #31                 // Field com/google/javascript/jscomp/ReferenceCollectingCallback$ReferenceCollection.references:Ljava/util/List;
      64: astore        4
      66: aload_0
      67: aload         4
      69: aload_1
      70: invokespecial #32                 // Method findSourceRefRange:(Ljava/util/List;Lcom/google/javascript/rhino/InputId;)Lcom/google/javascript/jscomp/GlobalVarReferenceMap$SourceRefRange;
      73: astore        5
      75: aload         5
      77: invokevirtual #33                 // Method com/google/javascript/jscomp/GlobalVarReferenceMap$SourceRefRange.refsBefore:()Ljava/util/List;
      80: invokestatic  #34                 // Method com/google/common/collect/Lists.newArrayList:(Ljava/lang/Iterable;)Ljava/util/ArrayList;
      83: astore        6
      85: aload         6
      87: aload         5
      89: invokevirtual #35                 // Method com/google/javascript/jscomp/GlobalVarReferenceMap$SourceRefRange.refsAfter:()Ljava/util/List;
      92: invokeinterface #36,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      97: pop
      98: aload_3
      99: aload         6
     101: putfield      #31                 // Field com/google/javascript/jscomp/ReferenceCollectingCallback$ReferenceCollection.references:Ljava/util/List;
     104: goto          34
     107: return

  private void replaceReferences(java.lang.String, com.google.javascript.rhino.InputId, com.google.javascript.jscomp.ReferenceCollectingCallback$ReferenceCollection);
    Code:
       0: new           #15                 // class com/google/javascript/jscomp/ReferenceCollectingCallback$ReferenceCollection
       3: dup
       4: invokespecial #37                 // Method com/google/javascript/jscomp/ReferenceCollectingCallback$ReferenceCollection."<init>":()V
       7: astore        4
       9: aload         4
      11: getfield      #31                 // Field com/google/javascript/jscomp/ReferenceCollectingCallback$ReferenceCollection.references:Ljava/util/List;
      14: astore        5
      16: aload_0
      17: getfield      #2                  // Field refMap:Ljava/util/Map;
      20: aload_1
      21: invokeinterface #14,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #15                 // class com/google/javascript/jscomp/ReferenceCollectingCallback$ReferenceCollection
      29: astore        6
      31: aload_0
      32: getfield      #2                  // Field refMap:Ljava/util/Map;
      35: aload_1
      36: aload         4
      38: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: aload         6
      46: ifnonnull     62
      49: aload         5
      51: aload_3
      52: getfield      #31                 // Field com/google/javascript/jscomp/ReferenceCollectingCallback$ReferenceCollection.references:Ljava/util/List;
      55: invokeinterface #36,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      60: pop
      61: return
      62: aload_0
      63: aload         6
      65: getfield      #31                 // Field com/google/javascript/jscomp/ReferenceCollectingCallback$ReferenceCollection.references:Ljava/util/List;
      68: aload_2
      69: invokespecial #32                 // Method findSourceRefRange:(Ljava/util/List;Lcom/google/javascript/rhino/InputId;)Lcom/google/javascript/jscomp/GlobalVarReferenceMap$SourceRefRange;
      72: astore        7
      74: aload         5
      76: aload         7
      78: invokevirtual #33                 // Method com/google/javascript/jscomp/GlobalVarReferenceMap$SourceRefRange.refsBefore:()Ljava/util/List;
      81: invokeinterface #36,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      86: pop
      87: aload         5
      89: aload_3
      90: getfield      #31                 // Field com/google/javascript/jscomp/ReferenceCollectingCallback$ReferenceCollection.references:Ljava/util/List;
      93: invokeinterface #36,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      98: pop
      99: aload         5
     101: aload         7
     103: invokevirtual #35                 // Method com/google/javascript/jscomp/GlobalVarReferenceMap$SourceRefRange.refsAfter:()Ljava/util/List;
     106: invokeinterface #36,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     111: pop
     112: return

  private com.google.javascript.jscomp.GlobalVarReferenceMap$SourceRefRange findSourceRefRange(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback$Reference>, com.google.javascript.rhino.InputId);
    Code:
       0: aload_2
       1: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iconst_m1
       6: istore_3
       7: aload_1
       8: invokeinterface #38,  1           // InterfaceMethod java/util/List.size:()I
      13: istore        4
      15: iconst_0
      16: istore        5
      18: aload_0
      19: getfield      #4                  // Field inputOrder:Ljava/util/Map;
      22: aload_2
      23: invokeinterface #28,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      28: aload_2
      29: invokevirtual #39                 // Method com/google/javascript/rhino/InputId.getIdName:()Ljava/lang/String;
      32: invokestatic  #40                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      35: aload_0
      36: getfield      #4                  // Field inputOrder:Ljava/util/Map;
      39: aload_2
      40: invokeinterface #14,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #41                 // class java/lang/Integer
      48: invokevirtual #42                 // Method java/lang/Integer.intValue:()I
      51: istore        6
      53: aload_1
      54: invokeinterface #5,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      59: astore        7
      61: aload         7
      63: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      68: ifeq          147
      71: aload         7
      73: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      78: checkcast     #43                 // class com/google/javascript/jscomp/ReferenceCollectingCallback$Reference
      81: astore        8
      83: aload         8
      85: invokevirtual #44                 // Method com/google/javascript/jscomp/ReferenceCollectingCallback$Reference.getInputId:()Lcom/google/javascript/rhino/InputId;
      88: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      91: pop
      92: aload_0
      93: getfield      #4                  // Field inputOrder:Ljava/util/Map;
      96: aload         8
      98: invokevirtual #44                 // Method com/google/javascript/jscomp/ReferenceCollectingCallback$Reference.getInputId:()Lcom/google/javascript/rhino/InputId;
     101: invokeinterface #14,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     106: checkcast     #41                 // class java/lang/Integer
     109: invokevirtual #42                 // Method java/lang/Integer.intValue:()I
     112: istore        9
     114: iload         9
     116: iload         6
     118: if_icmpge     127
     121: iload         5
     123: istore_3
     124: goto          141
     127: iload         9
     129: iload         6
     131: if_icmple     141
     134: iload         5
     136: istore        4
     138: goto          147
     141: iinc          5, 1
     144: goto          61
     147: new           #45                 // class com/google/javascript/jscomp/GlobalVarReferenceMap$SourceRefRange
     150: dup
     151: aload_1
     152: iload_3
     153: iload         4
     155: invokespecial #46                 // Method com/google/javascript/jscomp/GlobalVarReferenceMap$SourceRefRange."<init>":(Ljava/util/List;II)V
     158: areturn

  public void updateReferencesWithGlobalScope(com.google.javascript.jscomp.Scope);
    Code:
       0: aload_0
       1: getfield      #2                  // Field refMap:Ljava/util/Map;
       4: invokeinterface #29,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #30,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          129
      24: aload_2
      25: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #15                 // class com/google/javascript/jscomp/ReferenceCollectingCallback$ReferenceCollection
      33: astore_3
      34: aload_3
      35: getfield      #31                 // Field com/google/javascript/jscomp/ReferenceCollectingCallback$ReferenceCollection.references:Ljava/util/List;
      38: invokeinterface #38,  1           // InterfaceMethod java/util/List.size:()I
      43: invokestatic  #47                 // Method com/google/common/collect/Lists.newArrayListWithCapacity:(I)Ljava/util/ArrayList;
      46: astore        4
      48: aload_3
      49: getfield      #31                 // Field com/google/javascript/jscomp/ReferenceCollectingCallback$ReferenceCollection.references:Ljava/util/List;
      52: invokeinterface #5,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      57: astore        5
      59: aload         5
      61: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      66: ifeq          120
      69: aload         5
      71: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      76: checkcast     #43                 // class com/google/javascript/jscomp/ReferenceCollectingCallback$Reference
      79: astore        6
      81: aload         6
      83: invokevirtual #48                 // Method com/google/javascript/jscomp/ReferenceCollectingCallback$Reference.getScope:()Lcom/google/javascript/jscomp/Scope;
      86: aload_1
      87: if_acmpeq     107
      90: aload         4
      92: aload         6
      94: aload_1
      95: invokevirtual #49                 // Method com/google/javascript/jscomp/ReferenceCollectingCallback$Reference.cloneWithNewScope:(Lcom/google/javascript/jscomp/Scope;)Lcom/google/javascript/jscomp/ReferenceCollectingCallback$Reference;
      98: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     103: pop
     104: goto          117
     107: aload         4
     109: aload         6
     111: invokeinterface #50,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     116: pop
     117: goto          59
     120: aload_3
     121: aload         4
     123: putfield      #31                 // Field com/google/javascript/jscomp/ReferenceCollectingCallback$ReferenceCollection.references:Ljava/util/List;
     126: goto          15
     129: return
}
