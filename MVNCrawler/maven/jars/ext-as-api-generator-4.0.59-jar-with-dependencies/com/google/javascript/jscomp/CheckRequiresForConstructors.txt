Compiled from "CheckRequiresForConstructors.java"
class com.google.javascript.jscomp.CheckRequiresForConstructors implements com.google.javascript.jscomp.HotSwapCompilerPass {
  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  private final com.google.javascript.jscomp.CodingConvention codingConvention;

  private final com.google.javascript.jscomp.CheckLevel level;

  static final com.google.javascript.jscomp.DiagnosticType MISSING_REQUIRE_WARNING;

  com.google.javascript.jscomp.CheckRequiresForConstructors(com.google.javascript.jscomp.AbstractCompiler, com.google.javascript.jscomp.CheckLevel);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       9: aload_0
      10: aload_1
      11: invokevirtual #6                  // Method com/google/javascript/jscomp/AbstractCompiler.getCodingConvention:()Lcom/google/javascript/jscomp/CodingConvention;
      14: putfield      #1                  // Field codingConvention:Lcom/google/javascript/jscomp/CodingConvention;
      17: aload_0
      18: aload_2
      19: putfield      #3                  // Field level:Lcom/google/javascript/jscomp/CheckLevel;
      22: return

  public void process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: new           #7                  // class com/google/javascript/jscomp/CheckRequiresForConstructors$CheckRequiresForConstructorsCallback
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #8                  // Method com/google/javascript/jscomp/CheckRequiresForConstructors$CheckRequiresForConstructorsCallback."<init>":(Lcom/google/javascript/jscomp/CheckRequiresForConstructors;Lcom/google/javascript/jscomp/CheckRequiresForConstructors$1;)V
       9: astore_3
      10: new           #9                  // class com/google/javascript/jscomp/NodeTraversal
      13: dup
      14: aload_0
      15: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      18: aload_3
      19: invokespecial #10                 // Method com/google/javascript/jscomp/NodeTraversal."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      22: iconst_2
      23: anewarray     #11                 // class com/google/javascript/rhino/Node
      26: dup
      27: iconst_0
      28: aload_1
      29: aastore
      30: dup
      31: iconst_1
      32: aload_2
      33: aastore
      34: invokevirtual #12                 // Method com/google/javascript/jscomp/NodeTraversal.traverseRoots:([Lcom/google/javascript/rhino/Node;)V
      37: return

  public void hotSwapScript(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: new           #7                  // class com/google/javascript/jscomp/CheckRequiresForConstructors$CheckRequiresForConstructorsCallback
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #8                  // Method com/google/javascript/jscomp/CheckRequiresForConstructors$CheckRequiresForConstructorsCallback."<init>":(Lcom/google/javascript/jscomp/CheckRequiresForConstructors;Lcom/google/javascript/jscomp/CheckRequiresForConstructors$1;)V
       9: astore_3
      10: new           #9                  // class com/google/javascript/jscomp/NodeTraversal
      13: dup
      14: aload_0
      15: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      18: aload_3
      19: invokespecial #10                 // Method com/google/javascript/jscomp/NodeTraversal."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      22: aload_1
      23: aload_0
      24: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      27: invokestatic  #13                 // Method com/google/javascript/jscomp/SyntacticScopeCreator.generateUntypedTopScope:(Lcom/google/javascript/jscomp/AbstractCompiler;)Lcom/google/javascript/jscomp/Scope;
      30: invokevirtual #14                 // Method com/google/javascript/jscomp/NodeTraversal.traverseWithScope:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/Scope;)V
      33: return

  private static boolean isClassName(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        38
       4: aload_0
       5: invokevirtual #15                 // Method java/lang/String.length:()I
       8: iconst_1
       9: if_icmple     38
      12: aload_0
      13: iconst_0
      14: invokevirtual #16                 // Method java/lang/String.charAt:(I)C
      17: invokestatic  #17                 // Method java/lang/Character.isUpperCase:(C)Z
      20: ifeq          38
      23: aload_0
      24: aload_0
      25: invokevirtual #18                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      28: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      31: ifne          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn

  private static java.lang.String getOutermostClassName(java.lang.String);
    Code:
       0: bipush        46
       2: invokestatic  #20                 // Method com/google/common/base/Splitter.on:(C)Lcom/google/common/base/Splitter;
       5: aload_0
       6: invokevirtual #21                 // Method com/google/common/base/Splitter.split:(Ljava/lang/CharSequence;)Ljava/lang/Iterable;
       9: invokeinterface #22,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          60
      24: aload_1
      25: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #25                 // class java/lang/String
      33: astore_2
      34: aload_2
      35: invokestatic  #26                 // Method isClassName:(Ljava/lang/String;)Z
      38: ifeq          57
      41: aload_0
      42: iconst_0
      43: aload_0
      44: aload_2
      45: invokevirtual #27                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      48: aload_2
      49: invokevirtual #15                 // Method java/lang/String.length:()I
      52: iadd
      53: invokevirtual #28                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      56: areturn
      57: goto          15
      60: aconst_null
      61: areturn

  static java.lang.String access$100(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method getOutermostClassName:(Ljava/lang/String;)Ljava/lang/String;
       4: areturn

  static com.google.javascript.jscomp.CheckLevel access$200(com.google.javascript.jscomp.CheckRequiresForConstructors);
    Code:
       0: aload_0
       1: getfield      #3                  // Field level:Lcom/google/javascript/jscomp/CheckLevel;
       4: areturn

  static com.google.javascript.jscomp.AbstractCompiler access$300(com.google.javascript.jscomp.CheckRequiresForConstructors);
    Code:
       0: aload_0
       1: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: areturn

  static com.google.javascript.jscomp.CodingConvention access$400(com.google.javascript.jscomp.CheckRequiresForConstructors);
    Code:
       0: aload_0
       1: getfield      #1                  // Field codingConvention:Lcom/google/javascript/jscomp/CodingConvention;
       4: areturn

  static {};
    Code:
       0: ldc           #29                 // String JSC_MISSING_REQUIRE_WARNING
       2: ldc           #30                 // String \'\'{0}\'\' used but not goog.require\'\'d
       4: invokestatic  #31                 // Method com/google/javascript/jscomp/DiagnosticType.disabled:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
       7: putstatic     #32                 // Field MISSING_REQUIRE_WARNING:Lcom/google/javascript/jscomp/DiagnosticType;
      10: return
}
