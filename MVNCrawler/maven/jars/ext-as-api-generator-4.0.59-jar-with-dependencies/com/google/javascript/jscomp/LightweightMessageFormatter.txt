Compiled from "LightweightMessageFormatter.java"
public class com.google.javascript.jscomp.LightweightMessageFormatter extends com.google.javascript.jscomp.AbstractMessageFormatter {
  private com.google.javascript.jscomp.SourceExcerptProvider$SourceExcerpt excerpt;

  private static final com.google.javascript.jscomp.SourceExcerptProvider$ExcerptFormatter excerptFormatter;

  private com.google.javascript.jscomp.LightweightMessageFormatter();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method com/google/javascript/jscomp/AbstractMessageFormatter."<init>":(Lcom/google/javascript/jscomp/SourceExcerptProvider;)V
       5: aload_0
       6: getstatic     #2                  // Field com/google/javascript/jscomp/SourceExcerptProvider$SourceExcerpt.LINE:Lcom/google/javascript/jscomp/SourceExcerptProvider$SourceExcerpt;
       9: putfield      #3                  // Field excerpt:Lcom/google/javascript/jscomp/SourceExcerptProvider$SourceExcerpt;
      12: return

  public com.google.javascript.jscomp.LightweightMessageFormatter(com.google.javascript.jscomp.SourceExcerptProvider);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #2                  // Field com/google/javascript/jscomp/SourceExcerptProvider$SourceExcerpt.LINE:Lcom/google/javascript/jscomp/SourceExcerptProvider$SourceExcerpt;
       5: invokespecial #4                  // Method "<init>":(Lcom/google/javascript/jscomp/SourceExcerptProvider;Lcom/google/javascript/jscomp/SourceExcerptProvider$SourceExcerpt;)V
       8: return

  public com.google.javascript.jscomp.LightweightMessageFormatter(com.google.javascript.jscomp.SourceExcerptProvider, com.google.javascript.jscomp.SourceExcerptProvider$SourceExcerpt);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method com/google/javascript/jscomp/AbstractMessageFormatter."<init>":(Lcom/google/javascript/jscomp/SourceExcerptProvider;)V
       5: aload_1
       6: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: aload_2
      12: putfield      #3                  // Field excerpt:Lcom/google/javascript/jscomp/SourceExcerptProvider$SourceExcerpt;
      15: return

  static com.google.javascript.jscomp.LightweightMessageFormatter withoutSource();
    Code:
       0: new           #6                  // class com/google/javascript/jscomp/LightweightMessageFormatter
       3: dup
       4: invokespecial #7                  // Method "<init>":()V
       7: areturn

  public java.lang.String formatError(com.google.javascript.jscomp.JSError);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #8                  // Method format:(Lcom/google/javascript/jscomp/JSError;Z)Ljava/lang/String;
       6: areturn

  public java.lang.String formatWarning(com.google.javascript.jscomp.JSError);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #8                  // Method format:(Lcom/google/javascript/jscomp/JSError;Z)Ljava/lang/String;
       6: areturn

  private java.lang.String format(com.google.javascript.jscomp.JSError, boolean);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getSource:()Lcom/google/javascript/jscomp/SourceExcerptProvider;
       4: astore_3
       5: aload_1
       6: getfield      #10                 // Field com/google/javascript/jscomp/JSError.sourceName:Ljava/lang/String;
       9: astore        4
      11: aload_1
      12: getfield      #11                 // Field com/google/javascript/jscomp/JSError.lineNumber:I
      15: istore        5
      17: aload_1
      18: invokevirtual #12                 // Method com/google/javascript/jscomp/JSError.getCharno:()I
      21: istore        6
      23: new           #13                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      30: astore        7
      32: new           #13                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      39: astore        8
      41: aload_0
      42: aload         4
      44: iload         5
      46: invokespecial #15                 // Method formatPosition:(Ljava/lang/String;I)Ljava/lang/String;
      49: astore        9
      51: aload_3
      52: ifnonnull     59
      55: aconst_null
      56: goto          77
      59: aload_3
      60: aload_1
      61: getfield      #10                 // Field com/google/javascript/jscomp/JSError.sourceName:Ljava/lang/String;
      64: aload_1
      65: getfield      #11                 // Field com/google/javascript/jscomp/JSError.lineNumber:I
      68: aload_1
      69: invokevirtual #12                 // Method com/google/javascript/jscomp/JSError.getCharno:()I
      72: invokeinterface #16,  4           // InterfaceMethod com/google/javascript/jscomp/SourceExcerptProvider.getSourceMapping:(Ljava/lang/String;II)Lcom/google/debugging/sourcemap/proto/Mapping$OriginalMapping;
      77: astore        10
      79: aload         10
      81: ifnonnull     95
      84: aload         8
      86: aload         9
      88: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: pop
      92: goto          146
      95: aload         10
      97: invokevirtual #18                 // Method com/google/debugging/sourcemap/proto/Mapping$OriginalMapping.getOriginalFile:()Ljava/lang/String;
     100: astore        4
     102: aload         10
     104: invokevirtual #19                 // Method com/google/debugging/sourcemap/proto/Mapping$OriginalMapping.getLineNumber:()I
     107: istore        5
     109: aload         10
     111: invokevirtual #20                 // Method com/google/debugging/sourcemap/proto/Mapping$OriginalMapping.getColumnPosition:()I
     114: istore        6
     116: aload         7
     118: aload         9
     120: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: pop
     124: aload         7
     126: ldc           #21                 // String \nOriginally at:\n
     128: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload         8
     134: aload_0
     135: aload         4
     137: iload         5
     139: invokespecial #15                 // Method formatPosition:(Ljava/lang/String;I)Ljava/lang/String;
     142: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: pop
     146: aload_3
     147: ifnonnull     154
     150: aconst_null
     151: goto          169
     154: aload_0
     155: getfield      #3                  // Field excerpt:Lcom/google/javascript/jscomp/SourceExcerptProvider$SourceExcerpt;
     158: aload_3
     159: aload         4
     161: iload         5
     163: getstatic     #22                 // Field excerptFormatter:Lcom/google/javascript/jscomp/SourceExcerptProvider$ExcerptFormatter;
     166: invokevirtual #23                 // Method com/google/javascript/jscomp/SourceExcerptProvider$SourceExcerpt.get:(Lcom/google/javascript/jscomp/SourceExcerptProvider;Ljava/lang/String;ILcom/google/javascript/jscomp/SourceExcerptProvider$ExcerptFormatter;)Ljava/lang/String;
     169: astore        11
     171: aload         8
     173: aload_0
     174: iload_2
     175: ifeq          184
     178: getstatic     #24                 // Field com/google/javascript/jscomp/CheckLevel.WARNING:Lcom/google/javascript/jscomp/CheckLevel;
     181: goto          187
     184: getstatic     #25                 // Field com/google/javascript/jscomp/CheckLevel.ERROR:Lcom/google/javascript/jscomp/CheckLevel;
     187: invokevirtual #26                 // Method getLevelName:(Lcom/google/javascript/jscomp/CheckLevel;)Ljava/lang/String;
     190: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     193: pop
     194: aload         8
     196: ldc           #27                 // String  -
     198: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     201: pop
     202: aload         8
     204: aload_1
     205: getfield      #28                 // Field com/google/javascript/jscomp/JSError.description:Ljava/lang/String;
     208: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     211: pop
     212: aload         7
     214: aload_0
     215: aload         8
     217: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     220: invokevirtual #30                 // Method maybeEmbolden:(Ljava/lang/String;)Ljava/lang/String;
     223: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     226: pop
     227: aload         7
     229: bipush        10
     231: invokevirtual #31                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     234: pop
     235: aload         11
     237: ifnull        345
     240: aload         7
     242: aload         11
     244: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     247: pop
     248: aload         7
     250: bipush        10
     252: invokevirtual #31                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     255: pop
     256: aload_0
     257: getfield      #3                  // Field excerpt:Lcom/google/javascript/jscomp/SourceExcerptProvider$SourceExcerpt;
     260: getstatic     #2                  // Field com/google/javascript/jscomp/SourceExcerptProvider$SourceExcerpt.LINE:Lcom/google/javascript/jscomp/SourceExcerptProvider$SourceExcerpt;
     263: invokevirtual #32                 // Method com/google/javascript/jscomp/SourceExcerptProvider$SourceExcerpt.equals:(Ljava/lang/Object;)Z
     266: ifeq          345
     269: iconst_0
     270: iload         6
     272: if_icmpgt     345
     275: iload         6
     277: aload         11
     279: invokevirtual #33                 // Method java/lang/String.length:()I
     282: if_icmpgt     345
     285: iconst_0
     286: istore        12
     288: iload         12
     290: iload         6
     292: if_icmpge     337
     295: aload         11
     297: iload         12
     299: invokevirtual #34                 // Method java/lang/String.charAt:(I)C
     302: istore        13
     304: iload         13
     306: invokestatic  #35                 // Method java/lang/Character.isWhitespace:(C)Z
     309: ifeq          323
     312: aload         7
     314: iload         13
     316: invokevirtual #31                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     319: pop
     320: goto          331
     323: aload         7
     325: bipush        32
     327: invokevirtual #31                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     330: pop
     331: iinc          12, 1
     334: goto          288
     337: aload         7
     339: ldc           #36                 // String ^\n
     341: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     344: pop
     345: aload         7
     347: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     350: areturn

  private java.lang.String formatPosition(java.lang.String, int);
    Code:
       0: new           #13                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_3
       8: aload_1
       9: ifnull        42
      12: aload_3
      13: aload_1
      14: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: pop
      18: iload_2
      19: ifle          35
      22: aload_3
      23: bipush        58
      25: invokevirtual #31                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      28: pop
      29: aload_3
      30: iload_2
      31: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: pop
      35: aload_3
      36: ldc           #38                 // String :
      38: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: pop
      42: aload_3
      43: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: areturn

  static {};
    Code:
       0: new           #39                 // class com/google/javascript/jscomp/LightweightMessageFormatter$LineNumberingFormatter
       3: dup
       4: invokespecial #40                 // Method com/google/javascript/jscomp/LightweightMessageFormatter$LineNumberingFormatter."<init>":()V
       7: putstatic     #22                 // Field excerptFormatter:Lcom/google/javascript/jscomp/SourceExcerptProvider$ExcerptFormatter;
      10: return
}
