Compiled from "FieldCleanupPass.java"
class com.google.javascript.jscomp.FieldCleanupPass$QualifiedNameSearchTraversal extends com.google.javascript.jscomp.NodeTraversal$AbstractShallowCallback {
  private final com.google.javascript.rhino.jstype.JSTypeRegistry typeRegistry;

  private final java.lang.String srcName;

  public com.google.javascript.jscomp.FieldCleanupPass$QualifiedNameSearchTraversal(com.google.javascript.rhino.jstype.JSTypeRegistry, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/javascript/jscomp/NodeTraversal$AbstractShallowCallback."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field typeRegistry:Lcom/google/javascript/rhino/jstype/JSTypeRegistry;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field srcName:Ljava/lang/String;
      14: return

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: invokevirtual #4                  // Method com/google/javascript/rhino/Node.isGetProp:()Z
       4: ifeq          54
       7: aload_3
       8: invokevirtual #4                  // Method com/google/javascript/rhino/Node.isGetProp:()Z
      11: ifne          54
      14: aload_2
      15: invokestatic  #5                  // Method getFieldName:(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;
      18: astore        4
      20: aload_2
      21: invokevirtual #6                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      24: invokevirtual #7                  // Method com/google/javascript/rhino/Node.getJSType:()Lcom/google/javascript/rhino/jstype/JSType;
      27: astore        5
      29: aload         5
      31: ifnull        42
      34: aload         5
      36: invokevirtual #8                  // Method com/google/javascript/rhino/jstype/JSType.toObjectType:()Lcom/google/javascript/rhino/jstype/ObjectType;
      39: ifnonnull     43
      42: return
      43: aload_0
      44: aload         5
      46: invokevirtual #8                  // Method com/google/javascript/rhino/jstype/JSType.toObjectType:()Lcom/google/javascript/rhino/jstype/ObjectType;
      49: aload         4
      51: invokespecial #9                  // Method removeProperty:(Lcom/google/javascript/rhino/jstype/ObjectType;Ljava/lang/String;)V
      54: aload_2
      55: invokevirtual #10                 // Method com/google/javascript/rhino/Node.getJSDocInfo:()Lcom/google/javascript/rhino/JSDocInfo;
      58: ifnull        69
      61: aload_2
      62: invokevirtual #10                 // Method com/google/javascript/rhino/Node.getJSDocInfo:()Lcom/google/javascript/rhino/JSDocInfo;
      65: aconst_null
      66: invokevirtual #11                 // Method com/google/javascript/rhino/JSDocInfo.setAssociatedNode:(Lcom/google/javascript/rhino/Node;)V
      69: return

  private void removeProperty(com.google.javascript.rhino.jstype.ObjectType, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #12                 // Method com/google/javascript/rhino/jstype/ObjectType.getPropertyNode:(Ljava/lang/String;)Lcom/google/javascript/rhino/Node;
       5: astore_3
       6: aload_3
       7: ifnull        39
      10: aload_0
      11: getfield      #3                  // Field srcName:Ljava/lang/String;
      14: aload_3
      15: invokevirtual #13                 // Method com/google/javascript/rhino/Node.getSourceFileName:()Ljava/lang/String;
      18: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ifeq          39
      24: aload_0
      25: getfield      #2                  // Field typeRegistry:Lcom/google/javascript/rhino/jstype/JSTypeRegistry;
      28: aload_2
      29: aload_1
      30: invokevirtual #15                 // Method com/google/javascript/rhino/jstype/JSTypeRegistry.unregisterPropertyOnType:(Ljava/lang/String;Lcom/google/javascript/rhino/jstype/JSType;)V
      33: aload_1
      34: aload_2
      35: invokevirtual #16                 // Method com/google/javascript/rhino/jstype/ObjectType.removeProperty:(Ljava/lang/String;)Z
      38: pop
      39: return

  private static java.lang.String getFieldName(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method com/google/javascript/rhino/Node.getLastChild:()Lcom/google/javascript/rhino/Node;
       4: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
       7: areturn
}
