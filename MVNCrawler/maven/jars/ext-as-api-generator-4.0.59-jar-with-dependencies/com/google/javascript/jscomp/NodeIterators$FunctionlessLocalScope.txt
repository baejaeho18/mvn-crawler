Compiled from "NodeIterators.java"
class com.google.javascript.jscomp.NodeIterators$FunctionlessLocalScope implements java.util.Iterator<com.google.javascript.rhino.Node> {
  private final java.util.Stack<com.google.javascript.rhino.Node> ancestors;

  com.google.javascript.jscomp.NodeIterators$FunctionlessLocalScope(com.google.javascript.rhino.Node...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/Stack
       8: dup
       9: invokespecial #3                  // Method java/util/Stack."<init>":()V
      12: putfield      #4                  // Field ancestors:Ljava/util/Stack;
      15: aload_1
      16: arraylength
      17: ifle          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      28: aload_1
      29: astore_2
      30: aload_2
      31: arraylength
      32: istore_3
      33: iconst_0
      34: istore        4
      36: iload         4
      38: iload_3
      39: if_icmpge     75
      42: aload_2
      43: iload         4
      45: aaload
      46: astore        5
      48: aload         5
      50: invokevirtual #6                  // Method com/google/javascript/rhino/Node.isFunction:()Z
      53: ifeq          59
      56: goto          75
      59: aload_0
      60: getfield      #4                  // Field ancestors:Ljava/util/Stack;
      63: iconst_0
      64: aload         5
      66: invokevirtual #7                  // Method java/util/Stack.add:(ILjava/lang/Object;)V
      69: iinc          4, 1
      72: goto          36
      75: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ancestors:Ljava/util/Stack;
       4: invokevirtual #8                  // Method java/util/Stack.size:()I
       7: iconst_1
       8: if_icmpne     27
      11: aload_0
      12: getfield      #4                  // Field ancestors:Ljava/util/Stack;
      15: invokevirtual #9                  // Method java/util/Stack.peek:()Ljava/lang/Object;
      18: checkcast     #10                 // class com/google/javascript/rhino/Node
      21: invokevirtual #11                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      24: ifnull        31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public com.google.javascript.rhino.Node next();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ancestors:Ljava/util/Stack;
       4: invokevirtual #12                 // Method java/util/Stack.pop:()Ljava/lang/Object;
       7: checkcast     #10                 // class com/google/javascript/rhino/Node
      10: astore_1
      11: aload_1
      12: invokevirtual #11                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      15: ifnonnull     41
      18: aload_0
      19: getfield      #4                  // Field ancestors:Ljava/util/Stack;
      22: invokevirtual #9                  // Method java/util/Stack.peek:()Ljava/lang/Object;
      25: checkcast     #10                 // class com/google/javascript/rhino/Node
      28: astore_1
      29: aload_1
      30: invokevirtual #6                  // Method com/google/javascript/rhino/Node.isFunction:()Z
      33: ifeq          100
      36: aload_0
      37: invokevirtual #13                 // Method next:()Lcom/google/javascript/rhino/Node;
      40: areturn
      41: aload_1
      42: invokevirtual #11                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      45: astore_1
      46: aload_0
      47: getfield      #4                  // Field ancestors:Ljava/util/Stack;
      50: aload_1
      51: invokevirtual #14                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: aload_1
      56: invokevirtual #6                  // Method com/google/javascript/rhino/Node.isFunction:()Z
      59: ifeq          67
      62: aload_0
      63: invokevirtual #13                 // Method next:()Lcom/google/javascript/rhino/Node;
      66: areturn
      67: aload_1
      68: invokevirtual #15                 // Method com/google/javascript/rhino/Node.hasChildren:()Z
      71: ifeq          100
      74: aload_1
      75: invokevirtual #16                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      78: astore_1
      79: aload_0
      80: getfield      #4                  // Field ancestors:Ljava/util/Stack;
      83: aload_1
      84: invokevirtual #14                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: aload_1
      89: invokevirtual #6                  // Method com/google/javascript/rhino/Node.isFunction:()Z
      92: ifeq          67
      95: aload_0
      96: invokevirtual #13                 // Method next:()Lcom/google/javascript/rhino/Node;
      99: areturn
     100: aload_1
     101: areturn

  public void remove();
    Code:
       0: new           #17                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #18                 // String Not implemented
       6: invokespecial #19                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  protected com.google.javascript.rhino.Node current();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ancestors:Ljava/util/Stack;
       4: invokevirtual #9                  // Method java/util/Stack.peek:()Ljava/lang/Object;
       7: checkcast     #10                 // class com/google/javascript/rhino/Node
      10: areturn

  protected com.google.javascript.rhino.Node currentParent();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ancestors:Ljava/util/Stack;
       4: invokevirtual #8                  // Method java/util/Stack.size:()I
       7: iconst_2
       8: if_icmplt     33
      11: aload_0
      12: getfield      #4                  // Field ancestors:Ljava/util/Stack;
      15: aload_0
      16: getfield      #4                  // Field ancestors:Ljava/util/Stack;
      19: invokevirtual #8                  // Method java/util/Stack.size:()I
      22: iconst_2
      23: isub
      24: invokevirtual #20                 // Method java/util/Stack.get:(I)Ljava/lang/Object;
      27: checkcast     #10                 // class com/google/javascript/rhino/Node
      30: goto          34
      33: aconst_null
      34: areturn

  java.util.List<com.google.javascript.rhino.Node> currentAncestors();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ancestors:Ljava/util/Stack;
       4: invokestatic  #21                 // Method com/google/common/collect/Lists.newArrayList:(Ljava/lang/Iterable;)Ljava/util/ArrayList;
       7: astore_1
       8: aload_1
       9: invokestatic  #22                 // Method java/util/Collections.reverse:(Ljava/util/List;)V
      12: aload_1
      13: areturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method next:()Lcom/google/javascript/rhino/Node;
       4: areturn
}
