Compiled from "DataFlowAnalysis.java"
final class com.google.javascript.jscomp.DataFlowAnalysis$1 extends com.google.javascript.jscomp.NodeTraversal$AbstractPostOrderCallback {
  final com.google.javascript.jscomp.Scope val$jsScope;

  final java.util.Set val$escaped;

  com.google.javascript.jscomp.DataFlowAnalysis$1(com.google.javascript.jscomp.Scope, java.util.Set);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$jsScope:Lcom/google/javascript/jscomp/Scope;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$escaped:Ljava/util/Set;
      10: aload_0
      11: invokespecial #3                  // Method com/google/javascript/jscomp/NodeTraversal$AbstractPostOrderCallback."<init>":()V
      14: return

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$jsScope:Lcom/google/javascript/jscomp/Scope;
       4: aload_1
       5: invokevirtual #4                  // Method com/google/javascript/jscomp/NodeTraversal.getScope:()Lcom/google/javascript/jscomp/Scope;
       8: if_acmpeq     25
      11: aload_2
      12: invokevirtual #5                  // Method com/google/javascript/rhino/Node.isName:()Z
      15: ifeq          25
      18: aload_3
      19: invokevirtual #6                  // Method com/google/javascript/rhino/Node.isFunction:()Z
      22: ifeq          26
      25: return
      26: aload_2
      27: invokevirtual #7                  // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      30: astore        4
      32: aload_1
      33: invokevirtual #4                  // Method com/google/javascript/jscomp/NodeTraversal.getScope:()Lcom/google/javascript/jscomp/Scope;
      36: aload         4
      38: invokevirtual #8                  // Method com/google/javascript/jscomp/Scope.getVar:(Ljava/lang/String;)Lcom/google/javascript/jscomp/Scope$Var;
      41: astore        5
      43: aload         5
      45: ifnull        79
      48: aload         5
      50: getfield      #9                  // Field com/google/javascript/jscomp/Scope$Var.scope:Lcom/google/javascript/jscomp/Scope;
      53: aload_0
      54: getfield      #1                  // Field val$jsScope:Lcom/google/javascript/jscomp/Scope;
      57: if_acmpne     79
      60: aload_0
      61: getfield      #2                  // Field val$escaped:Ljava/util/Set;
      64: aload_0
      65: getfield      #1                  // Field val$jsScope:Lcom/google/javascript/jscomp/Scope;
      68: aload         4
      70: invokevirtual #8                  // Method com/google/javascript/jscomp/Scope.getVar:(Ljava/lang/String;)Lcom/google/javascript/jscomp/Scope$Var;
      73: invokeinterface #10,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      78: pop
      79: return
}
