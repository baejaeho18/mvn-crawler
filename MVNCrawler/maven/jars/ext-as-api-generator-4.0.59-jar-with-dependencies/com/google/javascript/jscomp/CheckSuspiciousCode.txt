Compiled from "CheckSuspiciousCode.java"
final class com.google.javascript.jscomp.CheckSuspiciousCode extends com.google.javascript.jscomp.NodeTraversal$AbstractPostOrderCallback {
  static final com.google.javascript.jscomp.DiagnosticType SUSPICIOUS_SEMICOLON;

  static final com.google.javascript.jscomp.DiagnosticType SUSPICIOUS_COMPARISON_WITH_NAN;

  static final com.google.javascript.jscomp.DiagnosticType SUSPICIOUS_IN_OPERATOR;

  static final com.google.javascript.jscomp.DiagnosticType SUSPICIOUS_INSTANCEOF_LEFT_OPERAND;

  com.google.javascript.jscomp.CheckSuspiciousCode();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/javascript/jscomp/NodeTraversal$AbstractPostOrderCallback."<init>":()V
       4: return

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method checkMissingSemicolon:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokespecial #3                  // Method checkNaN:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;)V
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokespecial #4                  // Method checkInvalidIn:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;)V
      18: aload_0
      19: aload_1
      20: aload_2
      21: invokespecial #5                  // Method checkNonObjectInstanceOf:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;)V
      24: return

  private void checkMissingSemicolon(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: invokevirtual #6                  // Method com/google/javascript/rhino/Node.getType:()I
       4: lookupswitch  { // 3
                   108: 40
                   113: 73
                   115: 73
               default: 81
          }
      40: aload_2
      41: invokevirtual #7                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      44: invokevirtual #8                  // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      47: astore_3
      48: aload_1
      49: aload_3
      50: invokestatic  #9                  // Method reportIfWasEmpty:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;)V
      53: aload_3
      54: invokevirtual #8                  // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      57: astore        4
      59: aload         4
      61: ifnull        81
      64: aload_1
      65: aload         4
      67: invokestatic  #9                  // Method reportIfWasEmpty:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;)V
      70: goto          81
      73: aload_1
      74: aload_2
      75: invokestatic  #10                 // Method com/google/javascript/jscomp/NodeUtil.getLoopCodeBlock:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      78: invokestatic  #9                  // Method reportIfWasEmpty:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;)V
      81: return

  private static void reportIfWasEmpty(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method com/google/javascript/rhino/Node.isBlock:()Z
       4: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkState:(Z)V
       7: aload_1
       8: invokevirtual #13                 // Method com/google/javascript/rhino/Node.hasChildren:()Z
      11: ifne          40
      14: aload_1
      15: invokevirtual #14                 // Method com/google/javascript/rhino/Node.isAddedBlock:()Z
      18: ifeq          40
      21: aload_0
      22: invokevirtual #15                 // Method com/google/javascript/jscomp/NodeTraversal.getCompiler:()Lcom/google/javascript/jscomp/AbstractCompiler;
      25: aload_0
      26: aload_1
      27: getstatic     #16                 // Field SUSPICIOUS_SEMICOLON:Lcom/google/javascript/jscomp/DiagnosticType;
      30: iconst_0
      31: anewarray     #17                 // class java/lang/String
      34: invokevirtual #18                 // Method com/google/javascript/jscomp/NodeTraversal.makeError:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)Lcom/google/javascript/jscomp/JSError;
      37: invokevirtual #19                 // Method com/google/javascript/jscomp/AbstractCompiler.report:(Lcom/google/javascript/jscomp/JSError;)V
      40: return

  private void checkNaN(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: invokevirtual #6                  // Method com/google/javascript/rhino/Node.getType:()I
       4: lookupswitch  { // 8
                    12: 80
                    13: 80
                    14: 80
                    15: 80
                    16: 80
                    17: 80
                    45: 80
                    46: 80
               default: 96
          }
      80: aload_1
      81: aload_2
      82: invokevirtual #7                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      85: invokestatic  #20                 // Method reportIfNaN:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;)V
      88: aload_1
      89: aload_2
      90: invokevirtual #21                 // Method com/google/javascript/rhino/Node.getLastChild:()Lcom/google/javascript/rhino/Node;
      93: invokestatic  #20                 // Method reportIfNaN:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;)V
      96: return

  private static void reportIfNaN(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokestatic  #22                 // Method com/google/javascript/jscomp/NodeUtil.isNaN:(Lcom/google/javascript/rhino/Node;)Z
       4: ifeq          29
       7: aload_0
       8: invokevirtual #15                 // Method com/google/javascript/jscomp/NodeTraversal.getCompiler:()Lcom/google/javascript/jscomp/AbstractCompiler;
      11: aload_0
      12: aload_1
      13: invokevirtual #23                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      16: getstatic     #24                 // Field SUSPICIOUS_COMPARISON_WITH_NAN:Lcom/google/javascript/jscomp/DiagnosticType;
      19: iconst_0
      20: anewarray     #17                 // class java/lang/String
      23: invokevirtual #18                 // Method com/google/javascript/jscomp/NodeTraversal.makeError:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)Lcom/google/javascript/jscomp/JSError;
      26: invokevirtual #19                 // Method com/google/javascript/jscomp/AbstractCompiler.report:(Lcom/google/javascript/jscomp/JSError;)V
      29: return

  private void checkInvalidIn(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: invokevirtual #6                  // Method com/google/javascript/rhino/Node.getType:()I
       4: bipush        51
       6: if_icmpne     21
       9: aload_1
      10: aload_2
      11: invokevirtual #21                 // Method com/google/javascript/rhino/Node.getLastChild:()Lcom/google/javascript/rhino/Node;
      14: getstatic     #26                 // Field SUSPICIOUS_IN_OPERATOR:Lcom/google/javascript/jscomp/DiagnosticType;
      17: invokestatic  #27                 // Method reportIfNonObject:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/DiagnosticType;)Z
      20: pop
      21: return

  private void checkNonObjectInstanceOf(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: invokevirtual #6                  // Method com/google/javascript/rhino/Node.getType:()I
       4: bipush        52
       6: if_icmpne     21
       9: aload_1
      10: aload_2
      11: invokevirtual #7                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      14: getstatic     #28                 // Field SUSPICIOUS_INSTANCEOF_LEFT_OPERAND:Lcom/google/javascript/jscomp/DiagnosticType;
      17: invokestatic  #27                 // Method reportIfNonObject:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/DiagnosticType;)Z
      20: pop
      21: return

  private static boolean reportIfNonObject(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.jscomp.DiagnosticType);
    Code:
       0: aload_1
       1: invokestatic  #29                 // Method com/google/javascript/jscomp/NodeUtil.isImmutableResult:(Lcom/google/javascript/rhino/Node;)Z
       4: ifne          16
       7: aload_1
       8: invokevirtual #6                  // Method com/google/javascript/rhino/Node.getType:()I
      11: bipush        26
      13: if_icmpne     38
      16: aload_0
      17: invokevirtual #15                 // Method com/google/javascript/jscomp/NodeTraversal.getCompiler:()Lcom/google/javascript/jscomp/AbstractCompiler;
      20: aload_0
      21: aload_1
      22: invokevirtual #23                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      25: aload_2
      26: iconst_0
      27: anewarray     #17                 // class java/lang/String
      30: invokevirtual #18                 // Method com/google/javascript/jscomp/NodeTraversal.makeError:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)Lcom/google/javascript/jscomp/JSError;
      33: invokevirtual #19                 // Method com/google/javascript/jscomp/AbstractCompiler.report:(Lcom/google/javascript/jscomp/JSError;)V
      36: iconst_1
      37: ireturn
      38: iconst_0
      39: ireturn

  static {};
    Code:
       0: ldc           #30                 // String JSC_SUSPICIOUS_SEMICOLON
       2: ldc           #31                 // String If this if/for/while really shouldn\'\'t have a body, use \'{}\'
       4: invokestatic  #32                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
       7: putstatic     #16                 // Field SUSPICIOUS_SEMICOLON:Lcom/google/javascript/jscomp/DiagnosticType;
      10: ldc           #33                 // String JSC_SUSPICIOUS_NAN
      12: ldc           #34                 // String Comparison against NaN is always false. Did you mean isNaN()?
      14: invokestatic  #32                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      17: putstatic     #24                 // Field SUSPICIOUS_COMPARISON_WITH_NAN:Lcom/google/javascript/jscomp/DiagnosticType;
      20: ldc           #35                 // String JSC_SUSPICIOUS_IN
      22: ldc           #36                 // String Use of the \"in\" keyword on non-object types throws an exception.
      24: invokestatic  #32                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      27: putstatic     #26                 // Field SUSPICIOUS_IN_OPERATOR:Lcom/google/javascript/jscomp/DiagnosticType;
      30: ldc           #37                 // String JSC_SUSPICIOUS_INSTANCEOF_LEFT
      32: ldc           #38                 // String \"instanceof\" with left non-object operand is always false.
      34: invokestatic  #32                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      37: putstatic     #28                 // Field SUSPICIOUS_INSTANCEOF_LEFT_OPERAND:Lcom/google/javascript/jscomp/DiagnosticType;
      40: return
}
