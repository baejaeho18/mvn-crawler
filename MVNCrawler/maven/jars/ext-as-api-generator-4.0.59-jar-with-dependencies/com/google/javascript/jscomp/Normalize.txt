Compiled from "Normalize.java"
class com.google.javascript.jscomp.Normalize implements com.google.javascript.jscomp.CompilerPass {
  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  private final boolean assertOnChange;

  private static final boolean CONVERT_WHILE_TO_FOR;

  static final boolean MAKE_LOCAL_NAMES_UNIQUE;

  public static final com.google.javascript.jscomp.DiagnosticType CATCH_BLOCK_VAR_ERROR;

  com.google.javascript.jscomp.Normalize(com.google.javascript.jscomp.AbstractCompiler, boolean);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       9: aload_0
      10: iload_2
      11: putfield      #5                  // Field assertOnChange:Z
      14: return

  static void normalizeSyntheticCode(com.google.javascript.jscomp.AbstractCompiler, com.google.javascript.rhino.Node, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #6                  // class com/google/javascript/jscomp/Normalize$NormalizeStatements
       5: dup
       6: aload_0
       7: iconst_0
       8: invokespecial #7                  // Method com/google/javascript/jscomp/Normalize$NormalizeStatements."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Z)V
      11: invokestatic  #8                  // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      14: aload_0
      15: aload_1
      16: new           #9                  // class com/google/javascript/jscomp/MakeDeclaredNamesUnique
      19: dup
      20: new           #10                 // class com/google/javascript/jscomp/MakeDeclaredNamesUnique$BoilerplateRenamer
      23: dup
      24: aload_0
      25: invokevirtual #11                 // Method com/google/javascript/jscomp/AbstractCompiler.getCodingConvention:()Lcom/google/javascript/jscomp/CodingConvention;
      28: aload_0
      29: invokevirtual #12                 // Method com/google/javascript/jscomp/AbstractCompiler.getUniqueNameIdSupplier:()Lcom/google/common/base/Supplier;
      32: aload_2
      33: invokespecial #13                 // Method com/google/javascript/jscomp/MakeDeclaredNamesUnique$BoilerplateRenamer."<init>":(Lcom/google/javascript/jscomp/CodingConvention;Lcom/google/common/base/Supplier;Ljava/lang/String;)V
      36: invokespecial #14                 // Method com/google/javascript/jscomp/MakeDeclaredNamesUnique."<init>":(Lcom/google/javascript/jscomp/MakeDeclaredNamesUnique$Renamer;)V
      39: invokestatic  #8                  // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      42: return

  static com.google.javascript.rhino.Node parseAndNormalizeTestCode(com.google.javascript.jscomp.AbstractCompiler, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method com/google/javascript/jscomp/AbstractCompiler.parseTestCode:(Ljava/lang/String;)Lcom/google/javascript/rhino/Node;
       5: astore_2
       6: aload_0
       7: aload_2
       8: new           #6                  // class com/google/javascript/jscomp/Normalize$NormalizeStatements
      11: dup
      12: aload_0
      13: iconst_0
      14: invokespecial #7                  // Method com/google/javascript/jscomp/Normalize$NormalizeStatements."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Z)V
      17: invokestatic  #8                  // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      20: aload_2
      21: areturn

  private void reportCodeChange(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field assertOnChange:Z
       4: ifeq          34
       7: new           #16                 // class java/lang/IllegalStateException
      10: dup
      11: new           #17                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #19                 // String Normalize constraints violated:\n
      20: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: getfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      38: invokevirtual #23                 // Method com/google/javascript/jscomp/AbstractCompiler.reportCodeChange:()V
      41: return

  public void process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: new           #24                 // class com/google/javascript/jscomp/NodeTraversal
       3: dup
       4: aload_0
       5: getfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       8: new           #6                  // class com/google/javascript/jscomp/Normalize$NormalizeStatements
      11: dup
      12: aload_0
      13: getfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      16: aload_0
      17: getfield      #5                  // Field assertOnChange:Z
      20: invokespecial #7                  // Method com/google/javascript/jscomp/Normalize$NormalizeStatements."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Z)V
      23: invokespecial #25                 // Method com/google/javascript/jscomp/NodeTraversal."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      26: iconst_2
      27: anewarray     #26                 // class com/google/javascript/rhino/Node
      30: dup
      31: iconst_0
      32: aload_1
      33: aastore
      34: dup
      35: iconst_1
      36: aload_2
      37: aastore
      38: invokevirtual #27                 // Method com/google/javascript/jscomp/NodeTraversal.traverseRoots:([Lcom/google/javascript/rhino/Node;)V
      41: new           #9                  // class com/google/javascript/jscomp/MakeDeclaredNamesUnique
      44: dup
      45: invokespecial #28                 // Method com/google/javascript/jscomp/MakeDeclaredNamesUnique."<init>":()V
      48: astore_3
      49: new           #24                 // class com/google/javascript/jscomp/NodeTraversal
      52: dup
      53: aload_0
      54: getfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      57: aload_3
      58: invokespecial #25                 // Method com/google/javascript/jscomp/NodeTraversal."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      61: astore        4
      63: aload         4
      65: iconst_2
      66: anewarray     #26                 // class com/google/javascript/rhino/Node
      69: dup
      70: iconst_0
      71: aload_1
      72: aastore
      73: dup
      74: iconst_1
      75: aload_2
      76: aastore
      77: invokevirtual #27                 // Method com/google/javascript/jscomp/NodeTraversal.traverseRoots:([Lcom/google/javascript/rhino/Node;)V
      80: aload_0
      81: aload_1
      82: aload_2
      83: invokespecial #29                 // Method removeDuplicateDeclarations:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      86: new           #30                 // class com/google/javascript/jscomp/Normalize$PropagateConstantAnnotationsOverVars
      89: dup
      90: aload_0
      91: getfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      94: aload_0
      95: getfield      #5                  // Field assertOnChange:Z
      98: invokespecial #31                 // Method com/google/javascript/jscomp/Normalize$PropagateConstantAnnotationsOverVars."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Z)V
     101: aload_1
     102: aload_2
     103: invokevirtual #32                 // Method com/google/javascript/jscomp/Normalize$PropagateConstantAnnotationsOverVars.process:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
     106: new           #33                 // class com/google/javascript/jscomp/Normalize$FindExposeAnnotations
     109: dup
     110: aconst_null
     111: invokespecial #34                 // Method com/google/javascript/jscomp/Normalize$FindExposeAnnotations."<init>":(Lcom/google/javascript/jscomp/Normalize$1;)V
     114: astore_3
     115: aload_0
     116: getfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
     119: aload_2
     120: aload_3
     121: invokestatic  #8                  // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
     124: aload_3
     125: invokestatic  #35                 // Method com/google/javascript/jscomp/Normalize$FindExposeAnnotations.access$100:(Lcom/google/javascript/jscomp/Normalize$FindExposeAnnotations;)Ljava/util/Set;
     128: invokeinterface #36,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     133: ifne          156
     136: aload_0
     137: getfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
     140: aload_2
     141: new           #37                 // class com/google/javascript/jscomp/Normalize$RewriteExposedProperties
     144: dup
     145: aload_0
     146: aload_3
     147: invokestatic  #35                 // Method com/google/javascript/jscomp/Normalize$FindExposeAnnotations.access$100:(Lcom/google/javascript/jscomp/Normalize$FindExposeAnnotations;)Ljava/util/Set;
     150: invokespecial #38                 // Method com/google/javascript/jscomp/Normalize$RewriteExposedProperties."<init>":(Lcom/google/javascript/jscomp/Normalize;Ljava/util/Set;)V
     153: invokestatic  #8                  // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
     156: aload_0
     157: getfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
     160: invokevirtual #39                 // Method com/google/javascript/jscomp/AbstractCompiler.getLifeCycleStage:()Lcom/google/javascript/jscomp/AbstractCompiler$LifeCycleStage;
     163: invokevirtual #40                 // Method com/google/javascript/jscomp/AbstractCompiler$LifeCycleStage.isNormalized:()Z
     166: ifne          179
     169: aload_0
     170: getfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
     173: getstatic     #41                 // Field com/google/javascript/jscomp/AbstractCompiler$LifeCycleStage.NORMALIZED:Lcom/google/javascript/jscomp/AbstractCompiler$LifeCycleStage;
     176: invokevirtual #42                 // Method com/google/javascript/jscomp/AbstractCompiler.setLifeCycleStage:(Lcom/google/javascript/jscomp/AbstractCompiler$LifeCycleStage;)V
     179: return

  private void removeDuplicateDeclarations(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: new           #43                 // class com/google/javascript/jscomp/Normalize$ScopeTicklingCallback
       3: dup
       4: aconst_null
       5: invokespecial #44                 // Method com/google/javascript/jscomp/Normalize$ScopeTicklingCallback."<init>":(Lcom/google/javascript/jscomp/Normalize$1;)V
       8: astore_3
       9: new           #45                 // class com/google/javascript/jscomp/SyntacticScopeCreator
      12: dup
      13: aload_0
      14: getfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      17: new           #46                 // class com/google/javascript/jscomp/Normalize$DuplicateDeclarationHandler
      20: dup
      21: aload_0
      22: aconst_null
      23: invokespecial #47                 // Method com/google/javascript/jscomp/Normalize$DuplicateDeclarationHandler."<init>":(Lcom/google/javascript/jscomp/Normalize;Lcom/google/javascript/jscomp/Normalize$1;)V
      26: invokespecial #48                 // Method com/google/javascript/jscomp/SyntacticScopeCreator."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/SyntacticScopeCreator$RedeclarationHandler;)V
      29: astore        4
      31: new           #24                 // class com/google/javascript/jscomp/NodeTraversal
      34: dup
      35: aload_0
      36: getfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      39: aload_3
      40: aload         4
      42: invokespecial #49                 // Method com/google/javascript/jscomp/NodeTraversal."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/NodeTraversal$Callback;Lcom/google/javascript/jscomp/ScopeCreator;)V
      45: astore        5
      47: aload         5
      49: iconst_2
      50: anewarray     #26                 // class com/google/javascript/rhino/Node
      53: dup
      54: iconst_0
      55: aload_1
      56: aastore
      57: dup
      58: iconst_1
      59: aload_2
      60: aastore
      61: invokevirtual #27                 // Method com/google/javascript/jscomp/NodeTraversal.traverseRoots:([Lcom/google/javascript/rhino/Node;)V
      64: return

  static com.google.javascript.jscomp.AbstractCompiler access$200(com.google.javascript.jscomp.Normalize);
    Code:
       0: aload_0
       1: getfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: areturn

  static void access$500(com.google.javascript.jscomp.Normalize, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method reportCodeChange:(Ljava/lang/String;)V
       5: return

  static {};
    Code:
       0: ldc           #50                 // String JSC_CATCH_BLOCK_VAR_ERROR
       2: ldc           #51                 // String The use of scope variable {0} is not allowed within a catch block with a catch exception of the same name.
       4: invokestatic  #52                 // Method com/google/javascript/jscomp/DiagnosticType.error:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
       7: putstatic     #53                 // Field CATCH_BLOCK_VAR_ERROR:Lcom/google/javascript/jscomp/DiagnosticType;
      10: return
}
