Compiled from "RenamePrototypes.java"
class com.google.javascript.jscomp.RenamePrototypes$Property {
  java.lang.String oldName;

  java.lang.String newName;

  int prototypeCount;

  int objLitCount;

  int refCount;

  final com.google.javascript.jscomp.RenamePrototypes this$0;

  com.google.javascript.jscomp.RenamePrototypes$Property(com.google.javascript.jscomp.RenamePrototypes, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/RenamePrototypes;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field oldName:Ljava/lang/String;
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field newName:Ljava/lang/String;
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field prototypeCount:I
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field objLitCount:I
      29: aload_0
      30: iconst_0
      31: putfield      #7                  // Field refCount:I
      34: return

  int count();
    Code:
       0: aload_0
       1: getfield      #5                  // Field prototypeCount:I
       4: aload_0
       5: getfield      #6                  // Field objLitCount:I
       8: iadd
       9: aload_0
      10: getfield      #7                  // Field refCount:I
      13: iadd
      14: ireturn

  boolean canRename();
    Code:
       0: aload_0
       1: getfield      #5                  // Field prototypeCount:I
       4: ifle          19
       7: aload_0
       8: getfield      #6                  // Field objLitCount:I
      11: ifne          19
      14: aload_0
      15: invokespecial #8                  // Method canRenamePrototypeProperty:()Z
      18: ireturn
      19: aload_0
      20: getfield      #6                  // Field objLitCount:I
      23: ifle          38
      26: aload_0
      27: getfield      #5                  // Field prototypeCount:I
      30: ifne          38
      33: aload_0
      34: invokespecial #9                  // Method canRenameObjLitProperty:()Z
      37: ireturn
      38: aload_0
      39: invokespecial #8                  // Method canRenamePrototypeProperty:()Z
      42: ifeq          56
      45: aload_0
      46: invokespecial #9                  // Method canRenameObjLitProperty:()Z
      49: ifeq          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: ireturn

  private boolean canRenamePrototypeProperty();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/RenamePrototypes;
       4: invokestatic  #10                 // Method com/google/javascript/jscomp/RenamePrototypes.access$000:(Lcom/google/javascript/jscomp/RenamePrototypes;)Lcom/google/javascript/jscomp/AbstractCompiler;
       7: invokevirtual #11                 // Method com/google/javascript/jscomp/AbstractCompiler.getCodingConvention:()Lcom/google/javascript/jscomp/CodingConvention;
      10: aload_0
      11: getfield      #3                  // Field oldName:Ljava/lang/String;
      14: invokeinterface #12,  2           // InterfaceMethod com/google/javascript/jscomp/CodingConvention.isExported:(Ljava/lang/String;)Z
      19: ifeq          24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/RenamePrototypes;
      28: invokestatic  #10                 // Method com/google/javascript/jscomp/RenamePrototypes.access$000:(Lcom/google/javascript/jscomp/RenamePrototypes;)Lcom/google/javascript/jscomp/AbstractCompiler;
      31: invokevirtual #11                 // Method com/google/javascript/jscomp/AbstractCompiler.getCodingConvention:()Lcom/google/javascript/jscomp/CodingConvention;
      34: aload_0
      35: getfield      #3                  // Field oldName:Ljava/lang/String;
      38: invokeinterface #13,  2           // InterfaceMethod com/google/javascript/jscomp/CodingConvention.isPrivate:(Ljava/lang/String;)Z
      43: ifeq          48
      46: iconst_1
      47: ireturn
      48: aload_0
      49: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/RenamePrototypes;
      52: invokestatic  #14                 // Method com/google/javascript/jscomp/RenamePrototypes.access$100:(Lcom/google/javascript/jscomp/RenamePrototypes;)Z
      55: ifeq          60
      58: iconst_1
      59: ireturn
      60: iconst_0
      61: istore_1
      62: aload_0
      63: getfield      #3                  // Field oldName:Ljava/lang/String;
      66: invokevirtual #15                 // Method java/lang/String.length:()I
      69: istore_2
      70: iload_1
      71: iload_2
      72: if_icmpge     106
      75: aload_0
      76: getfield      #3                  // Field oldName:Ljava/lang/String;
      79: iload_1
      80: invokevirtual #16                 // Method java/lang/String.charAt:(I)C
      83: istore_3
      84: iload_3
      85: invokestatic  #17                 // Method java/lang/Character.isUpperCase:(C)Z
      88: ifne          98
      91: iload_3
      92: invokestatic  #18                 // Method java/lang/Character.isLetter:(C)Z
      95: ifne          100
      98: iconst_1
      99: ireturn
     100: iinc          1, 1
     103: goto          70
     106: iconst_0
     107: ireturn

  private boolean canRenameObjLitProperty();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/RenamePrototypes;
       4: invokestatic  #10                 // Method com/google/javascript/jscomp/RenamePrototypes.access$000:(Lcom/google/javascript/jscomp/RenamePrototypes;)Lcom/google/javascript/jscomp/AbstractCompiler;
       7: invokevirtual #11                 // Method com/google/javascript/jscomp/AbstractCompiler.getCodingConvention:()Lcom/google/javascript/jscomp/CodingConvention;
      10: aload_0
      11: getfield      #3                  // Field oldName:Ljava/lang/String;
      14: invokeinterface #12,  2           // InterfaceMethod com/google/javascript/jscomp/CodingConvention.isExported:(Ljava/lang/String;)Z
      19: ifeq          24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/RenamePrototypes;
      28: invokestatic  #10                 // Method com/google/javascript/jscomp/RenamePrototypes.access$000:(Lcom/google/javascript/jscomp/RenamePrototypes;)Lcom/google/javascript/jscomp/AbstractCompiler;
      31: invokevirtual #11                 // Method com/google/javascript/jscomp/AbstractCompiler.getCodingConvention:()Lcom/google/javascript/jscomp/CodingConvention;
      34: aload_0
      35: getfield      #3                  // Field oldName:Ljava/lang/String;
      38: invokeinterface #13,  2           // InterfaceMethod com/google/javascript/jscomp/CodingConvention.isPrivate:(Ljava/lang/String;)Z
      43: ifeq          48
      46: iconst_1
      47: ireturn
      48: iconst_0
      49: ireturn
}
