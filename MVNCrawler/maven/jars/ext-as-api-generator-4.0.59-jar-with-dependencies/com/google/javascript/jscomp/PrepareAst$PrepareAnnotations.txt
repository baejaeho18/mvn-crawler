Compiled from "PrepareAst.java"
class com.google.javascript.jscomp.PrepareAst$PrepareAnnotations implements com.google.javascript.jscomp.NodeTraversal$Callback {
  com.google.javascript.jscomp.PrepareAst$PrepareAnnotations();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean shouldTraverse(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: invokevirtual #2                  // Method com/google/javascript/rhino/Node.isObjectLit:()Z
       4: ifeq          12
       7: aload_0
       8: aload_2
       9: invokespecial #3                  // Method normalizeObjectLiteralAnnotations:(Lcom/google/javascript/rhino/Node;)V
      12: iconst_1
      13: ireturn

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: invokevirtual #4                  // Method com/google/javascript/rhino/Node.getType:()I
       4: lookupswitch  { // 1
                    37: 24
               default: 28
          }
      24: aload_2
      25: invokestatic  #5                  // Method annotateCalls:(Lcom/google/javascript/rhino/Node;)V
      28: return

  private void normalizeObjectLiteralAnnotations(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method com/google/javascript/rhino/Node.isObjectLit:()Z
       4: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkState:(Z)V
       7: aload_1
       8: invokevirtual #7                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      11: astore_2
      12: aload_2
      13: ifnull        35
      16: aload_2
      17: invokevirtual #7                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      20: astore_3
      21: aload_1
      22: aload_2
      23: aload_3
      24: invokestatic  #8                  // Method normalizeObjectLiteralKeyAnnotations:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      27: aload_2
      28: invokevirtual #9                  // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      31: astore_2
      32: goto          12
      35: return

  private static void annotateCalls(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method com/google/javascript/rhino/Node.isCall:()Z
       4: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkState:(Z)V
       7: aload_0
       8: invokevirtual #7                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      11: astore_1
      12: aload_1
      13: invokevirtual #11                 // Method com/google/javascript/rhino/Node.isCast:()Z
      16: ifeq          27
      19: aload_1
      20: invokevirtual #7                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      23: astore_1
      24: goto          12
      27: aload_1
      28: invokestatic  #12                 // Method com/google/javascript/jscomp/NodeUtil.isGet:(Lcom/google/javascript/rhino/Node;)Z
      31: ifne          41
      34: aload_0
      35: bipush        50
      37: iconst_1
      38: invokevirtual #14                 // Method com/google/javascript/rhino/Node.putBooleanProp:(IZ)V
      41: aload_1
      42: invokevirtual #15                 // Method com/google/javascript/rhino/Node.isName:()Z
      45: ifeq          67
      48: ldc           #16                 // String eval
      50: aload_1
      51: invokevirtual #17                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      54: invokevirtual #18                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      57: ifeq          67
      60: aload_1
      61: bipush        49
      63: iconst_1
      64: invokevirtual #14                 // Method com/google/javascript/rhino/Node.putBooleanProp:(IZ)V
      67: return

  private static void normalizeObjectLiteralKeyAnnotations(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method com/google/javascript/rhino/Node.isObjectLit:()Z
       4: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkState:(Z)V
       7: aload_1
       8: invokevirtual #19                 // Method com/google/javascript/rhino/Node.getJSDocInfo:()Lcom/google/javascript/rhino/JSDocInfo;
      11: ifnull        30
      14: aload_2
      15: invokevirtual #20                 // Method com/google/javascript/rhino/Node.isFunction:()Z
      18: ifeq          30
      21: aload_2
      22: aload_1
      23: invokevirtual #19                 // Method com/google/javascript/rhino/Node.getJSDocInfo:()Lcom/google/javascript/rhino/JSDocInfo;
      26: invokevirtual #21                 // Method com/google/javascript/rhino/Node.setJSDocInfo:(Lcom/google/javascript/rhino/JSDocInfo;)Lcom/google/javascript/rhino/Node;
      29: pop
      30: return
}
