Compiled from "FlowSensitiveInlineVariables.java"
class com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate$4 extends com.google.javascript.jscomp.ControlFlowGraph$AbstractCfgNodeTraversalCallback {
  final com.google.javascript.rhino.Node val$cfgNode;

  final com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate this$1;

  com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate$4(com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lcom/google/javascript/jscomp/FlowSensitiveInlineVariables$Candidate;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$cfgNode:Lcom/google/javascript/rhino/Node;
      10: aload_0
      11: invokespecial #3                  // Method com/google/javascript/jscomp/ControlFlowGraph$AbstractCfgNodeTraversalCallback."<init>":()V
      14: return

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: invokevirtual #4                  // Method com/google/javascript/rhino/Node.isName:()Z
       4: ifeq          60
       7: aload_2
       8: invokevirtual #5                  // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      11: aload_0
      12: getfield      #1                  // Field this$1:Lcom/google/javascript/jscomp/FlowSensitiveInlineVariables$Candidate;
      15: invokestatic  #6                  // Method com/google/javascript/jscomp/FlowSensitiveInlineVariables$Candidate.access$400:(Lcom/google/javascript/jscomp/FlowSensitiveInlineVariables$Candidate;)Ljava/lang/String;
      18: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ifeq          60
      24: aload_3
      25: invokevirtual #8                  // Method com/google/javascript/rhino/Node.isAssign:()Z
      28: ifeq          52
      31: aload_3
      32: invokevirtual #9                  // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      35: aload_2
      36: if_acmpne     52
      39: aload_0
      40: aload_3
      41: aload_0
      42: getfield      #2                  // Field val$cfgNode:Lcom/google/javascript/rhino/Node;
      45: invokespecial #10                 // Method isAssignChain:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z
      48: ifeq          52
      51: return
      52: aload_0
      53: getfield      #1                  // Field this$1:Lcom/google/javascript/jscomp/FlowSensitiveInlineVariables$Candidate;
      56: invokestatic  #11                 // Method com/google/javascript/jscomp/FlowSensitiveInlineVariables$Candidate.access$1508:(Lcom/google/javascript/jscomp/FlowSensitiveInlineVariables$Candidate;)I
      59: pop
      60: return

  private boolean isAssignChain(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: aload_2
       4: if_acmpeq     24
       7: aload_3
       8: invokevirtual #8                  // Method com/google/javascript/rhino/Node.isAssign:()Z
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_3
      17: invokevirtual #12                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      20: astore_3
      21: goto          2
      24: iconst_1
      25: ireturn
}
