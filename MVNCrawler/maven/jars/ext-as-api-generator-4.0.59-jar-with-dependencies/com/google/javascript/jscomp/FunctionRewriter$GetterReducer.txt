Compiled from "FunctionRewriter.java"
class com.google.javascript.jscomp.FunctionRewriter$GetterReducer extends com.google.javascript.jscomp.FunctionRewriter$SingleReturnStatementReducer {
  static final java.lang.String FACTORY_METHOD_NAME;

  static final java.lang.String HELPER_SOURCE;

  private com.google.javascript.jscomp.FunctionRewriter$GetterReducer();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/google/javascript/jscomp/FunctionRewriter$SingleReturnStatementReducer."<init>":()V
       4: return

  public java.lang.String getHelperSource();
    Code:
       0: ldc           #4                  // String function JSCompiler_get(JSCompiler_get_name) {  return function() {return this[JSCompiler_get_name]}}
       2: areturn

  public com.google.javascript.rhino.Node reduce(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokestatic  #5                  // Method com/google/javascript/jscomp/FunctionRewriter.access$600:(Lcom/google/javascript/rhino/Node;)Z
       4: ifne          9
       7: aload_1
       8: areturn
       9: aload_0
      10: aload_1
      11: invokespecial #6                  // Method getGetPropertyName:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      14: astore_2
      15: aload_2
      16: ifnull        68
      19: aload_2
      20: invokevirtual #7                  // Method com/google/javascript/rhino/Node.isString:()Z
      23: ifne          59
      26: new           #8                  // class java/lang/IllegalStateException
      29: dup
      30: new           #9                  // class java/lang/StringBuilder
      33: dup
      34: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #11                 // String Expected STRING, got
      39: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_2
      43: invokevirtual #13                 // Method com/google/javascript/rhino/Node.getType:()I
      46: invokestatic  #14                 // Method com/google/javascript/rhino/Token.name:(I)Ljava/lang/String;
      49: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: aload_0
      60: ldc           #17                 // String JSCompiler_get
      62: aload_2
      63: aload_1
      64: invokevirtual #18                 // Method buildCallNode:(Ljava/lang/String;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      67: areturn
      68: aload_1
      69: areturn

  private com.google.javascript.rhino.Node getGetPropertyName(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method maybeGetSingleReturnRValue:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
       5: astore_2
       6: aload_2
       7: ifnull        32
      10: aload_2
      11: invokevirtual #20                 // Method com/google/javascript/rhino/Node.isGetProp:()Z
      14: ifeq          32
      17: aload_2
      18: invokevirtual #21                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      21: invokevirtual #22                 // Method com/google/javascript/rhino/Node.isThis:()Z
      24: ifeq          32
      27: aload_2
      28: invokevirtual #23                 // Method com/google/javascript/rhino/Node.getLastChild:()Lcom/google/javascript/rhino/Node;
      31: areturn
      32: aconst_null
      33: areturn

  com.google.javascript.jscomp.FunctionRewriter$GetterReducer(com.google.javascript.jscomp.FunctionRewriter$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
