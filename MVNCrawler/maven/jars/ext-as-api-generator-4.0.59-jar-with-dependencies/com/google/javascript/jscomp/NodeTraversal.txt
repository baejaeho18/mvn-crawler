Compiled from "NodeTraversal.java"
public class com.google.javascript.jscomp.NodeTraversal {
  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  private final com.google.javascript.jscomp.NodeTraversal$Callback callback;

  private com.google.javascript.rhino.Node curNode;

  public static final com.google.javascript.jscomp.DiagnosticType NODE_TRAVERSAL_ERROR;

  private final java.util.Deque<com.google.javascript.jscomp.Scope> scopes;

  private final java.util.Deque<com.google.javascript.rhino.Node> scopeRoots;

  java.util.Deque<com.google.javascript.jscomp.ControlFlowGraph<com.google.javascript.rhino.Node>> cfgs;

  private java.lang.String sourceName;

  private com.google.javascript.rhino.InputId inputId;

  private final com.google.javascript.jscomp.ScopeCreator scopeCreator;

  private final boolean useBlockScope;

  private com.google.javascript.jscomp.NodeTraversal$ScopedCallback scopeCallback;

  private static final java.lang.String MISSING_SOURCE;

  public com.google.javascript.jscomp.NodeTraversal(com.google.javascript.jscomp.AbstractCompiler, com.google.javascript.jscomp.NodeTraversal$Callback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_1
       4: invokevirtual #1                  // Method com/google/javascript/jscomp/AbstractCompiler.getLanguageMode:()Lcom/google/javascript/jscomp/CompilerOptions$LanguageMode;
       7: invokevirtual #2                  // Method com/google/javascript/jscomp/CompilerOptions$LanguageMode.isEs6OrHigher:()Z
      10: ifeq          24
      13: new           #3                  // class com/google/javascript/jscomp/Es6SyntacticScopeCreator
      16: dup
      17: aload_1
      18: invokespecial #4                  // Method com/google/javascript/jscomp/Es6SyntacticScopeCreator."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;)V
      21: goto          32
      24: new           #5                  // class com/google/javascript/jscomp/SyntacticScopeCreator
      27: dup
      28: aload_1
      29: invokespecial #6                  // Method com/google/javascript/jscomp/SyntacticScopeCreator."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;)V
      32: invokespecial #7                  // Method "<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/NodeTraversal$Callback;Lcom/google/javascript/jscomp/ScopeCreator;)V
      35: return

  public com.google.javascript.jscomp.NodeTraversal(com.google.javascript.jscomp.AbstractCompiler, com.google.javascript.jscomp.NodeTraversal$Callback, com.google.javascript.jscomp.ScopeCreator);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #9                  // class java/util/ArrayDeque
       8: dup
       9: invokespecial #10                 // Method java/util/ArrayDeque."<init>":()V
      12: putfield      #11                 // Field scopes:Ljava/util/Deque;
      15: aload_0
      16: new           #9                  // class java/util/ArrayDeque
      19: dup
      20: invokespecial #10                 // Method java/util/ArrayDeque."<init>":()V
      23: putfield      #12                 // Field scopeRoots:Ljava/util/Deque;
      26: aload_0
      27: new           #13                 // class java/util/LinkedList
      30: dup
      31: invokespecial #14                 // Method java/util/LinkedList."<init>":()V
      34: putfield      #15                 // Field cfgs:Ljava/util/Deque;
      37: aload_0
      38: aload_2
      39: putfield      #16                 // Field callback:Lcom/google/javascript/jscomp/NodeTraversal$Callback;
      42: aload_2
      43: instanceof    #17                 // class com/google/javascript/jscomp/NodeTraversal$ScopedCallback
      46: ifeq          57
      49: aload_0
      50: aload_2
      51: checkcast     #17                 // class com/google/javascript/jscomp/NodeTraversal$ScopedCallback
      54: putfield      #18                 // Field scopeCallback:Lcom/google/javascript/jscomp/NodeTraversal$ScopedCallback;
      57: aload_0
      58: aload_1
      59: putfield      #19                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      62: aload_0
      63: aconst_null
      64: putfield      #20                 // Field inputId:Lcom/google/javascript/rhino/InputId;
      67: aload_0
      68: ldc           #21                 // String
      70: putfield      #22                 // Field sourceName:Ljava/lang/String;
      73: aload_0
      74: aload_3
      75: putfield      #23                 // Field scopeCreator:Lcom/google/javascript/jscomp/ScopeCreator;
      78: aload_0
      79: aload_3
      80: invokeinterface #24,  1           // InterfaceMethod com/google/javascript/jscomp/ScopeCreator.hasBlockScope:()Z
      85: putfield      #25                 // Field useBlockScope:Z
      88: return

  private void throwUnexpectedException(java.lang.Exception);
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #20                 // Field inputId:Lcom/google/javascript/rhino/InputId;
       9: ifnull        76
      12: new           #27                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      19: aload_1
      20: invokevirtual #26                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      23: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #30                 // String \n
      28: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: ldc           #31                 // String Node
      34: aload_0
      35: getfield      #32                 // Field curNode:Lcom/google/javascript/rhino/Node;
      38: invokespecial #33                 // Method formatNodeContext:(Ljava/lang/String;Lcom/google/javascript/rhino/Node;)Ljava/lang/String;
      41: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: getfield      #32                 // Field curNode:Lcom/google/javascript/rhino/Node;
      48: ifnonnull     56
      51: ldc           #21                 // String
      53: goto          69
      56: aload_0
      57: ldc           #34                 // String Parent
      59: aload_0
      60: getfield      #32                 // Field curNode:Lcom/google/javascript/rhino/Node;
      63: invokevirtual #35                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      66: invokespecial #33                 // Method formatNodeContext:(Ljava/lang/String;Lcom/google/javascript/rhino/Node;)Ljava/lang/String;
      69: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: astore_2
      76: aload_0
      77: getfield      #19                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      80: aload_2
      81: aload_1
      82: invokevirtual #37                 // Method com/google/javascript/jscomp/AbstractCompiler.throwInternalError:(Ljava/lang/String;Ljava/lang/Exception;)V
      85: return

  private java.lang.String formatNodeContext(java.lang.String, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: ifnonnull     29
       4: new           #27                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #38                 // String
      13: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #39                 // String : NULL
      22: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: areturn
      29: new           #27                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #38                 // String
      38: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_1
      42: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc           #40                 // String (
      47: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_2
      51: iconst_0
      52: iconst_0
      53: iconst_0
      54: invokevirtual #41                 // Method com/google/javascript/rhino/Node.toString:(ZZZ)Ljava/lang/String;
      57: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: ldc           #42                 // String ):
      62: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_0
      66: aload_2
      67: invokespecial #43                 // Method formatNodePosition:(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;
      70: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: areturn

  public void traverse(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #44                 // Method com/google/javascript/jscomp/NodeUtil.getInputId:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/InputId;
       5: putfield      #20                 // Field inputId:Lcom/google/javascript/rhino/InputId;
       8: aload_0
       9: ldc           #21                 // String
      11: putfield      #22                 // Field sourceName:Ljava/lang/String;
      14: aload_0
      15: aload_1
      16: putfield      #32                 // Field curNode:Lcom/google/javascript/rhino/Node;
      19: aload_0
      20: aload_1
      21: invokespecial #45                 // Method pushScope:(Lcom/google/javascript/rhino/Node;)V
      24: aload_0
      25: aload_1
      26: aconst_null
      27: invokespecial #46                 // Method traverseBranch:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      30: aload_0
      31: invokespecial #47                 // Method popScope:()V
      34: goto          43
      37: astore_2
      38: aload_0
      39: aload_2
      40: invokespecial #49                 // Method throwUnexpectedException:(Ljava/lang/Exception;)V
      43: return
    Exception table:
       from    to  target type
           0    34    37   Class java/lang/Exception

  public void traverseRoots(com.google.javascript.rhino.Node...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #50                 // Method com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
       5: invokevirtual #51                 // Method traverseRoots:(Ljava/util/List;)V
       8: return

  public void traverseRoots(java.util.List<com.google.javascript.rhino.Node>);
    Code:
       0: aload_1
       1: invokeinterface #52,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       6: ifeq          10
       9: return
      10: aload_1
      11: iconst_0
      12: invokeinterface #53,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      17: checkcast     #54                 // class com/google/javascript/rhino/Node
      20: invokevirtual #35                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      23: astore_2
      24: aload_2
      25: ifnull        32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      36: aload_0
      37: aload_2
      38: invokestatic  #44                 // Method com/google/javascript/jscomp/NodeUtil.getInputId:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/InputId;
      41: putfield      #20                 // Field inputId:Lcom/google/javascript/rhino/InputId;
      44: aload_0
      45: ldc           #21                 // String
      47: putfield      #22                 // Field sourceName:Ljava/lang/String;
      50: aload_0
      51: aload_2
      52: putfield      #32                 // Field curNode:Lcom/google/javascript/rhino/Node;
      55: aload_0
      56: aload_2
      57: invokespecial #45                 // Method pushScope:(Lcom/google/javascript/rhino/Node;)V
      60: aload_1
      61: invokeinterface #56,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      66: astore_3
      67: aload_3
      68: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      73: ifeq          114
      76: aload_3
      77: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      82: checkcast     #54                 // class com/google/javascript/rhino/Node
      85: astore        4
      87: aload         4
      89: invokevirtual #35                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      92: aload_2
      93: if_acmpne     100
      96: iconst_1
      97: goto          101
     100: iconst_0
     101: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkState:(Z)V
     104: aload_0
     105: aload         4
     107: aload_2
     108: invokespecial #46                 // Method traverseBranch:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
     111: goto          67
     114: aload_0
     115: invokespecial #47                 // Method popScope:()V
     118: goto          127
     121: astore_2
     122: aload_0
     123: aload_2
     124: invokespecial #49                 // Method throwUnexpectedException:(Ljava/lang/Exception;)V
     127: return
    Exception table:
       from    to  target type
          10   118   121   Class java/lang/Exception

  private java.lang.String formatNodePosition(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #59                 // Method getBestSourceFileName:(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnonnull     13
      10: ldc           #61                 // String [source unknown]\n
      12: areturn
      13: aload_1
      14: invokevirtual #62                 // Method com/google/javascript/rhino/Node.getLineno:()I
      17: istore_3
      18: aload_1
      19: invokevirtual #63                 // Method com/google/javascript/rhino/Node.getCharno:()I
      22: istore        4
      24: aload_0
      25: getfield      #19                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      28: aload_2
      29: iload_3
      30: invokevirtual #64                 // Method com/google/javascript/jscomp/AbstractCompiler.getSourceLine:(Ljava/lang/String;I)Ljava/lang/String;
      33: astore        5
      35: aload         5
      37: ifnonnull     44
      40: ldc           #65                 // String [source unknown]
      42: astore        5
      44: new           #27                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      51: aload_2
      52: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #66                 // String :
      57: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: iload_3
      61: invokevirtual #67                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      64: ldc           #66                 // String :
      66: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: iload         4
      71: invokevirtual #67                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      74: ldc           #30                 // String \n
      76: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload         5
      81: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: ldc           #30                 // String \n
      86: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: areturn

  void traverseWithScope(com.google.javascript.rhino.Node, com.google.javascript.jscomp.Scope);
    Code:
       0: aload_2
       1: invokevirtual #68                 // Method com/google/javascript/jscomp/Scope.isGlobal:()Z
       4: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkState:(Z)V
       7: aload_0
       8: aconst_null
       9: putfield      #20                 // Field inputId:Lcom/google/javascript/rhino/InputId;
      12: aload_0
      13: ldc           #21                 // String
      15: putfield      #22                 // Field sourceName:Ljava/lang/String;
      18: aload_0
      19: aload_1
      20: putfield      #32                 // Field curNode:Lcom/google/javascript/rhino/Node;
      23: aload_0
      24: aload_2
      25: invokespecial #69                 // Method pushScope:(Lcom/google/javascript/jscomp/Scope;)V
      28: aload_0
      29: aload_1
      30: aconst_null
      31: invokespecial #46                 // Method traverseBranch:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      34: aload_0
      35: invokespecial #47                 // Method popScope:()V
      38: goto          47
      41: astore_3
      42: aload_0
      43: aload_3
      44: invokespecial #49                 // Method throwUnexpectedException:(Ljava/lang/Exception;)V
      47: return
    Exception table:
       from    to  target type
           7    38    41   Class java/lang/Exception

  void traverseAtScope(com.google.javascript.jscomp.Scope);
    Code:
       0: aload_1
       1: invokevirtual #70                 // Method com/google/javascript/jscomp/Scope.getRootNode:()Lcom/google/javascript/rhino/Node;
       4: astore_2
       5: aload_2
       6: invokevirtual #71                 // Method com/google/javascript/rhino/Node.isFunction:()Z
       9: ifeq          79
      12: aload_0
      13: getfield      #20                 // Field inputId:Lcom/google/javascript/rhino/InputId;
      16: ifnonnull     27
      19: aload_0
      20: aload_2
      21: invokestatic  #44                 // Method com/google/javascript/jscomp/NodeUtil.getInputId:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/InputId;
      24: putfield      #20                 // Field inputId:Lcom/google/javascript/rhino/InputId;
      27: aload_0
      28: aload_2
      29: invokestatic  #72                 // Method getSourceName:(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;
      32: putfield      #22                 // Field sourceName:Ljava/lang/String;
      35: aload_0
      36: aload_2
      37: putfield      #32                 // Field curNode:Lcom/google/javascript/rhino/Node;
      40: aload_0
      41: aload_1
      42: invokespecial #69                 // Method pushScope:(Lcom/google/javascript/jscomp/Scope;)V
      45: aload_2
      46: invokevirtual #73                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      49: invokevirtual #74                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      52: astore_3
      53: aload_3
      54: invokevirtual #74                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      57: astore        4
      59: aload_0
      60: aload_3
      61: aload_2
      62: invokespecial #46                 // Method traverseBranch:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      65: aload_0
      66: aload         4
      68: aload_2
      69: invokespecial #46                 // Method traverseBranch:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      72: aload_0
      73: invokespecial #47                 // Method popScope:()V
      76: goto          85
      79: aload_0
      80: aload_2
      81: aload_1
      82: invokevirtual #75                 // Method traverseWithScope:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/Scope;)V
      85: return

  void traverseFunctionOutOfBand(com.google.javascript.rhino.Node, com.google.javascript.jscomp.Scope);
    Code:
       0: aload_2
       1: invokestatic  #76                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokevirtual #71                 // Method com/google/javascript/rhino/Node.isFunction:()Z
       9: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      12: aload_2
      13: invokevirtual #70                 // Method com/google/javascript/jscomp/Scope.getRootNode:()Lcom/google/javascript/rhino/Node;
      16: ifnull        23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      27: aload_0
      28: getfield      #20                 // Field inputId:Lcom/google/javascript/rhino/InputId;
      31: ifnonnull     42
      34: aload_0
      35: aload_1
      36: invokestatic  #44                 // Method com/google/javascript/jscomp/NodeUtil.getInputId:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/InputId;
      39: putfield      #20                 // Field inputId:Lcom/google/javascript/rhino/InputId;
      42: aload_0
      43: aload_1
      44: invokevirtual #35                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      47: putfield      #32                 // Field curNode:Lcom/google/javascript/rhino/Node;
      50: aload_0
      51: aload_2
      52: iconst_1
      53: invokespecial #77                 // Method pushScope:(Lcom/google/javascript/jscomp/Scope;Z)V
      56: aload_0
      57: aload_1
      58: aload_0
      59: getfield      #32                 // Field curNode:Lcom/google/javascript/rhino/Node;
      62: invokespecial #46                 // Method traverseBranch:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      65: aload_0
      66: iconst_1
      67: invokespecial #78                 // Method popScope:(Z)V
      70: return

  protected void traverseInnerNode(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node, com.google.javascript.jscomp.Scope);
    Code:
       0: aload_2
       1: invokestatic  #76                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #20                 // Field inputId:Lcom/google/javascript/rhino/InputId;
       9: ifnonnull     20
      12: aload_0
      13: aload_1
      14: invokestatic  #44                 // Method com/google/javascript/jscomp/NodeUtil.getInputId:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/InputId;
      17: putfield      #20                 // Field inputId:Lcom/google/javascript/rhino/InputId;
      20: aload_3
      21: ifnull        55
      24: aload_0
      25: invokevirtual #79                 // Method getScope:()Lcom/google/javascript/jscomp/Scope;
      28: aload_3
      29: if_acmpeq     55
      32: aload_0
      33: aload_1
      34: putfield      #32                 // Field curNode:Lcom/google/javascript/rhino/Node;
      37: aload_0
      38: aload_3
      39: invokespecial #69                 // Method pushScope:(Lcom/google/javascript/jscomp/Scope;)V
      42: aload_0
      43: aload_1
      44: aload_2
      45: invokespecial #46                 // Method traverseBranch:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      48: aload_0
      49: invokespecial #47                 // Method popScope:()V
      52: goto          61
      55: aload_0
      56: aload_1
      57: aload_2
      58: invokespecial #46                 // Method traverseBranch:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      61: return

  public com.google.javascript.jscomp.AbstractCompiler getCompiler();
    Code:
       0: aload_0
       1: getfield      #19                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: areturn

  public int getLineNumber();
    Code:
       0: aload_0
       1: getfield      #32                 // Field curNode:Lcom/google/javascript/rhino/Node;
       4: astore_1
       5: aload_1
       6: ifnull        28
       9: aload_1
      10: invokevirtual #62                 // Method com/google/javascript/rhino/Node.getLineno:()I
      13: istore_2
      14: iload_2
      15: iflt          20
      18: iload_2
      19: ireturn
      20: aload_1
      21: invokevirtual #35                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      24: astore_1
      25: goto          5
      28: iconst_0
      29: ireturn

  public int getCharno();
    Code:
       0: aload_0
       1: getfield      #32                 // Field curNode:Lcom/google/javascript/rhino/Node;
       4: astore_1
       5: aload_1
       6: ifnull        28
       9: aload_1
      10: invokevirtual #63                 // Method com/google/javascript/rhino/Node.getCharno:()I
      13: istore_2
      14: iload_2
      15: iflt          20
      18: iload_2
      19: ireturn
      20: aload_1
      21: invokevirtual #35                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      24: astore_1
      25: goto          5
      28: iconst_0
      29: ireturn

  public java.lang.String getSourceName();
    Code:
       0: aload_0
       1: getfield      #22                 // Field sourceName:Ljava/lang/String;
       4: areturn

  public com.google.javascript.jscomp.CompilerInput getInput();
    Code:
       0: aload_0
       1: getfield      #19                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: aload_0
       5: getfield      #20                 // Field inputId:Lcom/google/javascript/rhino/InputId;
       8: invokevirtual #80                 // Method com/google/javascript/jscomp/AbstractCompiler.getInput:(Lcom/google/javascript/rhino/InputId;)Lcom/google/javascript/jscomp/CompilerInput;
      11: areturn

  public com.google.javascript.jscomp.JSModule getModule();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method getInput:()Lcom/google/javascript/jscomp/CompilerInput;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: aconst_null
      10: goto          17
      13: aload_1
      14: invokevirtual #82                 // Method com/google/javascript/jscomp/CompilerInput.getModule:()Lcom/google/javascript/jscomp/JSModule;
      17: areturn

  public com.google.javascript.rhino.Node getCurrentNode();
    Code:
       0: aload_0
       1: getfield      #32                 // Field curNode:Lcom/google/javascript/rhino/Node;
       4: areturn

  public static void traverseChangedFunctions(com.google.javascript.jscomp.AbstractCompiler, com.google.javascript.jscomp.NodeTraversal$FunctionCallback);
    Code:
       0: aload_0
       1: astore_2
       2: aload_1
       3: astore_3
       4: aload_2
       5: invokevirtual #83                 // Method com/google/javascript/jscomp/AbstractCompiler.getJsRoot:()Lcom/google/javascript/rhino/Node;
       8: astore        4
      10: new           #60                 // class com/google/javascript/jscomp/NodeTraversal
      13: dup
      14: aload_2
      15: new           #84                 // class com/google/javascript/jscomp/NodeTraversal$1
      18: dup
      19: aload         4
      21: aload_2
      22: aload_3
      23: invokespecial #85                 // Method com/google/javascript/jscomp/NodeTraversal$1."<init>":(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/NodeTraversal$FunctionCallback;)V
      26: invokespecial #86                 // Method "<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      29: astore        5
      31: aload         5
      33: aload         4
      35: invokevirtual #87                 // Method traverse:(Lcom/google/javascript/rhino/Node;)V
      38: return

  public static void traverse(com.google.javascript.jscomp.AbstractCompiler, com.google.javascript.rhino.Node, com.google.javascript.jscomp.NodeTraversal$Callback);
    Code:
       0: new           #60                 // class com/google/javascript/jscomp/NodeTraversal
       3: dup
       4: aload_0
       5: aload_2
       6: invokespecial #86                 // Method "<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
       9: astore_3
      10: aload_3
      11: aload_1
      12: invokevirtual #87                 // Method traverse:(Lcom/google/javascript/rhino/Node;)V
      15: return

  public static void traverseRoots(com.google.javascript.jscomp.AbstractCompiler, java.util.List<com.google.javascript.rhino.Node>, com.google.javascript.jscomp.NodeTraversal$Callback);
    Code:
       0: new           #60                 // class com/google/javascript/jscomp/NodeTraversal
       3: dup
       4: aload_0
       5: aload_2
       6: invokespecial #86                 // Method "<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
       9: astore_3
      10: aload_3
      11: aload_1
      12: invokevirtual #51                 // Method traverseRoots:(Ljava/util/List;)V
      15: return

  public static void traverseRoots(com.google.javascript.jscomp.AbstractCompiler, com.google.javascript.jscomp.NodeTraversal$Callback, com.google.javascript.rhino.Node...);
    Code:
       0: new           #60                 // class com/google/javascript/jscomp/NodeTraversal
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #86                 // Method "<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
       9: astore_3
      10: aload_3
      11: aload_2
      12: invokevirtual #88                 // Method traverseRoots:([Lcom/google/javascript/rhino/Node;)V
      15: return

  private void traverseBranch(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #89                 // Method com/google/javascript/rhino/Node.getType:()I
       4: istore_3
       5: iload_3
       6: sipush        132
       9: if_icmpne     28
      12: aload_0
      13: aload_1
      14: invokevirtual #91                 // Method com/google/javascript/rhino/Node.getInputId:()Lcom/google/javascript/rhino/InputId;
      17: putfield      #20                 // Field inputId:Lcom/google/javascript/rhino/InputId;
      20: aload_0
      21: aload_1
      22: invokestatic  #72                 // Method getSourceName:(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;
      25: putfield      #22                 // Field sourceName:Ljava/lang/String;
      28: aload_0
      29: aload_1
      30: putfield      #32                 // Field curNode:Lcom/google/javascript/rhino/Node;
      33: aload_0
      34: getfield      #16                 // Field callback:Lcom/google/javascript/jscomp/NodeTraversal$Callback;
      37: aload_0
      38: aload_1
      39: aload_2
      40: invokeinterface #92,  4           // InterfaceMethod com/google/javascript/jscomp/NodeTraversal$Callback.shouldTraverse:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z
      45: ifne          49
      48: return
      49: iload_3
      50: bipush        105
      52: if_icmpne     64
      55: aload_0
      56: aload_1
      57: aload_2
      58: invokespecial #93                 // Method traverseFunction:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      61: goto          118
      64: aload_0
      65: getfield      #25                 // Field useBlockScope:Z
      68: ifeq          86
      71: aload_1
      72: invokestatic  #94                 // Method com/google/javascript/jscomp/NodeUtil.createsBlockScope:(Lcom/google/javascript/rhino/Node;)Z
      75: ifeq          86
      78: aload_0
      79: aload_1
      80: invokespecial #95                 // Method traverseBlockScope:(Lcom/google/javascript/rhino/Node;)V
      83: goto          118
      86: aload_1
      87: invokevirtual #73                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      90: astore        4
      92: aload         4
      94: ifnull        118
      97: aload         4
      99: invokevirtual #74                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
     102: astore        5
     104: aload_0
     105: aload         4
     107: aload_1
     108: invokespecial #46                 // Method traverseBranch:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
     111: aload         5
     113: astore        4
     115: goto          92
     118: aload_0
     119: aload_1
     120: putfield      #32                 // Field curNode:Lcom/google/javascript/rhino/Node;
     123: aload_0
     124: getfield      #16                 // Field callback:Lcom/google/javascript/jscomp/NodeTraversal$Callback;
     127: aload_0
     128: aload_1
     129: aload_2
     130: invokeinterface #96,  4           // InterfaceMethod com/google/javascript/jscomp/NodeTraversal$Callback.visit:(Lcom/google/javascript/jscomp/NodeTraversal;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
     135: return

  private void traverseFunction(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #97                 // Method com/google/javascript/rhino/Node.getChildCount:()I
       4: iconst_3
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      16: aload_1
      17: invokevirtual #71                 // Method com/google/javascript/rhino/Node.isFunction:()Z
      20: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      23: aload_1
      24: invokevirtual #73                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      27: astore_3
      28: aload_2
      29: ifnull        43
      32: aload_1
      33: invokestatic  #98                 // Method com/google/javascript/jscomp/NodeUtil.isFunctionExpression:(Lcom/google/javascript/rhino/Node;)Z
      36: ifeq          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: istore        4
      46: iload         4
      48: ifne          57
      51: aload_0
      52: aload_3
      53: aload_1
      54: invokespecial #46                 // Method traverseBranch:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      57: aload_0
      58: aload_1
      59: putfield      #32                 // Field curNode:Lcom/google/javascript/rhino/Node;
      62: aload_0
      63: aload_1
      64: invokespecial #45                 // Method pushScope:(Lcom/google/javascript/rhino/Node;)V
      67: iload         4
      69: ifeq          78
      72: aload_0
      73: aload_3
      74: aload_1
      75: invokespecial #46                 // Method traverseBranch:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      78: aload_3
      79: invokevirtual #74                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      82: astore        5
      84: aload         5
      86: invokevirtual #74                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      89: astore        6
      91: aload_0
      92: aload         5
      94: aload_1
      95: invokespecial #46                 // Method traverseBranch:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      98: aload_0
      99: aload         6
     101: aload_1
     102: invokespecial #46                 // Method traverseBranch:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
     105: aload_0
     106: invokespecial #47                 // Method popScope:()V
     109: return

  private void traverseBlockScope(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #45                 // Method pushScope:(Lcom/google/javascript/rhino/Node;)V
       5: aload_1
       6: invokevirtual #99                 // Method com/google/javascript/rhino/Node.children:()Ljava/lang/Iterable;
       9: invokeinterface #100,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          43
      24: aload_2
      25: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #54                 // class com/google/javascript/rhino/Node
      33: astore_3
      34: aload_0
      35: aload_3
      36: aload_1
      37: invokespecial #46                 // Method traverseBranch:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      40: goto          15
      43: aload_0
      44: invokespecial #47                 // Method popScope:()V
      47: return

  public com.google.javascript.rhino.Node getEnclosingFunction();
    Code:
       0: aload_0
       1: getfield      #11                 // Field scopes:Ljava/util/Deque;
       4: invokeinterface #101,  1          // InterfaceMethod java/util/Deque.size:()I
       9: aload_0
      10: getfield      #12                 // Field scopeRoots:Ljava/util/Deque;
      13: invokeinterface #101,  1          // InterfaceMethod java/util/Deque.size:()I
      18: iadd
      19: iconst_2
      20: if_icmpge     25
      23: aconst_null
      24: areturn
      25: aload_0
      26: getfield      #12                 // Field scopeRoots:Ljava/util/Deque;
      29: invokeinterface #102,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
      34: ifeq          53
      37: aload_0
      38: getfield      #11                 // Field scopes:Ljava/util/Deque;
      41: invokeinterface #103,  1          // InterfaceMethod java/util/Deque.peek:()Ljava/lang/Object;
      46: checkcast     #104                // class com/google/javascript/jscomp/Scope
      49: invokevirtual #70                 // Method com/google/javascript/jscomp/Scope.getRootNode:()Lcom/google/javascript/rhino/Node;
      52: areturn
      53: aload_0
      54: getfield      #12                 // Field scopeRoots:Ljava/util/Deque;
      57: invokeinterface #103,  1          // InterfaceMethod java/util/Deque.peek:()Ljava/lang/Object;
      62: checkcast     #54                 // class com/google/javascript/rhino/Node
      65: areturn

  private void pushScope(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #32                 // Field curNode:Lcom/google/javascript/rhino/Node;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: getfield      #19                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      19: aload_1
      20: invokevirtual #105                // Method com/google/javascript/jscomp/AbstractCompiler.setScope:(Lcom/google/javascript/rhino/Node;)V
      23: aload_0
      24: getfield      #12                 // Field scopeRoots:Ljava/util/Deque;
      27: aload_1
      28: invokeinterface #106,  2          // InterfaceMethod java/util/Deque.push:(Ljava/lang/Object;)V
      33: aload_0
      34: getfield      #15                 // Field cfgs:Ljava/util/Deque;
      37: aconst_null
      38: invokeinterface #106,  2          // InterfaceMethod java/util/Deque.push:(Ljava/lang/Object;)V
      43: aload_0
      44: getfield      #18                 // Field scopeCallback:Lcom/google/javascript/jscomp/NodeTraversal$ScopedCallback;
      47: ifnull        60
      50: aload_0
      51: getfield      #18                 // Field scopeCallback:Lcom/google/javascript/jscomp/NodeTraversal$ScopedCallback;
      54: aload_0
      55: invokeinterface #107,  2          // InterfaceMethod com/google/javascript/jscomp/NodeTraversal$ScopedCallback.enterScope:(Lcom/google/javascript/jscomp/NodeTraversal;)V
      60: return

  private void pushScope(com.google.javascript.jscomp.Scope);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #77                 // Method pushScope:(Lcom/google/javascript/jscomp/Scope;Z)V
       6: return

  private void pushScope(com.google.javascript.jscomp.Scope, boolean);
    Code:
       0: aload_0
       1: getfield      #32                 // Field curNode:Lcom/google/javascript/rhino/Node;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #55                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: getfield      #19                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      19: aload_1
      20: invokevirtual #70                 // Method com/google/javascript/jscomp/Scope.getRootNode:()Lcom/google/javascript/rhino/Node;
      23: invokevirtual #105                // Method com/google/javascript/jscomp/AbstractCompiler.setScope:(Lcom/google/javascript/rhino/Node;)V
      26: aload_0
      27: getfield      #11                 // Field scopes:Ljava/util/Deque;
      30: aload_1
      31: invokeinterface #106,  2          // InterfaceMethod java/util/Deque.push:(Ljava/lang/Object;)V
      36: aload_0
      37: getfield      #15                 // Field cfgs:Ljava/util/Deque;
      40: aconst_null
      41: invokeinterface #106,  2          // InterfaceMethod java/util/Deque.push:(Ljava/lang/Object;)V
      46: iload_2
      47: ifne          67
      50: aload_0
      51: getfield      #18                 // Field scopeCallback:Lcom/google/javascript/jscomp/NodeTraversal$ScopedCallback;
      54: ifnull        67
      57: aload_0
      58: getfield      #18                 // Field scopeCallback:Lcom/google/javascript/jscomp/NodeTraversal$ScopedCallback;
      61: aload_0
      62: invokeinterface #107,  2          // InterfaceMethod com/google/javascript/jscomp/NodeTraversal$ScopedCallback.enterScope:(Lcom/google/javascript/jscomp/NodeTraversal;)V
      67: return

  private void popScope();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #78                 // Method popScope:(Z)V
       5: return

  private void popScope(boolean);
    Code:
       0: iload_1
       1: ifne          21
       4: aload_0
       5: getfield      #18                 // Field scopeCallback:Lcom/google/javascript/jscomp/NodeTraversal$ScopedCallback;
       8: ifnull        21
      11: aload_0
      12: getfield      #18                 // Field scopeCallback:Lcom/google/javascript/jscomp/NodeTraversal$ScopedCallback;
      15: aload_0
      16: invokeinterface #108,  2          // InterfaceMethod com/google/javascript/jscomp/NodeTraversal$ScopedCallback.exitScope:(Lcom/google/javascript/jscomp/NodeTraversal;)V
      21: aload_0
      22: getfield      #12                 // Field scopeRoots:Ljava/util/Deque;
      25: invokeinterface #102,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
      30: ifeq          46
      33: aload_0
      34: getfield      #11                 // Field scopes:Ljava/util/Deque;
      37: invokeinterface #109,  1          // InterfaceMethod java/util/Deque.pop:()Ljava/lang/Object;
      42: pop
      43: goto          56
      46: aload_0
      47: getfield      #12                 // Field scopeRoots:Ljava/util/Deque;
      50: invokeinterface #109,  1          // InterfaceMethod java/util/Deque.pop:()Ljava/lang/Object;
      55: pop
      56: aload_0
      57: getfield      #15                 // Field cfgs:Ljava/util/Deque;
      60: invokeinterface #109,  1          // InterfaceMethod java/util/Deque.pop:()Ljava/lang/Object;
      65: pop
      66: aload_0
      67: invokevirtual #110                // Method hasScope:()Z
      70: ifeq          84
      73: aload_0
      74: getfield      #19                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      77: aload_0
      78: invokevirtual #111                // Method getScopeRoot:()Lcom/google/javascript/rhino/Node;
      81: invokevirtual #105                // Method com/google/javascript/jscomp/AbstractCompiler.setScope:(Lcom/google/javascript/rhino/Node;)V
      84: return

  public com.google.javascript.jscomp.Scope getScope();
    Code:
       0: aload_0
       1: getfield      #11                 // Field scopes:Ljava/util/Deque;
       4: invokeinterface #102,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
       9: ifeq          16
      12: aconst_null
      13: goto          28
      16: aload_0
      17: getfield      #11                 // Field scopes:Ljava/util/Deque;
      20: invokeinterface #103,  1          // InterfaceMethod java/util/Deque.peek:()Ljava/lang/Object;
      25: checkcast     #104                // class com/google/javascript/jscomp/Scope
      28: astore_1
      29: aload_0
      30: getfield      #12                 // Field scopeRoots:Ljava/util/Deque;
      33: invokeinterface #102,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
      38: ifeq          43
      41: aload_1
      42: areturn
      43: aload_0
      44: getfield      #12                 // Field scopeRoots:Ljava/util/Deque;
      47: invokeinterface #112,  1          // InterfaceMethod java/util/Deque.descendingIterator:()Ljava/util/Iterator;
      52: astore_2
      53: aload_2
      54: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          95
      62: aload_0
      63: getfield      #23                 // Field scopeCreator:Lcom/google/javascript/jscomp/ScopeCreator;
      66: aload_2
      67: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      72: checkcast     #54                 // class com/google/javascript/rhino/Node
      75: aload_1
      76: invokeinterface #113,  3          // InterfaceMethod com/google/javascript/jscomp/ScopeCreator.createScope:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/Scope;)Lcom/google/javascript/jscomp/Scope;
      81: astore_1
      82: aload_0
      83: getfield      #11                 // Field scopes:Ljava/util/Deque;
      86: aload_1
      87: invokeinterface #106,  2          // InterfaceMethod java/util/Deque.push:(Ljava/lang/Object;)V
      92: goto          53
      95: aload_0
      96: getfield      #12                 // Field scopeRoots:Ljava/util/Deque;
      99: invokeinterface #114,  1          // InterfaceMethod java/util/Deque.clear:()V
     104: aload_1
     105: areturn

  public com.google.javascript.jscomp.ControlFlowGraph<com.google.javascript.rhino.Node> getControlFlowGraph();
    Code:
       0: aload_0
       1: getfield      #15                 // Field cfgs:Ljava/util/Deque;
       4: invokeinterface #103,  1          // InterfaceMethod java/util/Deque.peek:()Ljava/lang/Object;
       9: ifnonnull     58
      12: new           #115                // class com/google/javascript/jscomp/ControlFlowAnalysis
      15: dup
      16: aload_0
      17: getfield      #19                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      20: iconst_0
      21: iconst_1
      22: invokespecial #116                // Method com/google/javascript/jscomp/ControlFlowAnalysis."<init>":(Lcom/google/javascript/jscomp/AbstractCompiler;ZZ)V
      25: astore_1
      26: aload_1
      27: aconst_null
      28: aload_0
      29: invokevirtual #111                // Method getScopeRoot:()Lcom/google/javascript/rhino/Node;
      32: invokevirtual #117                // Method com/google/javascript/jscomp/ControlFlowAnalysis.process:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      35: aload_0
      36: getfield      #15                 // Field cfgs:Ljava/util/Deque;
      39: invokeinterface #109,  1          // InterfaceMethod java/util/Deque.pop:()Ljava/lang/Object;
      44: pop
      45: aload_0
      46: getfield      #15                 // Field cfgs:Ljava/util/Deque;
      49: aload_1
      50: invokevirtual #118                // Method com/google/javascript/jscomp/ControlFlowAnalysis.getCfg:()Lcom/google/javascript/jscomp/ControlFlowGraph;
      53: invokeinterface #106,  2          // InterfaceMethod java/util/Deque.push:(Ljava/lang/Object;)V
      58: aload_0
      59: getfield      #15                 // Field cfgs:Ljava/util/Deque;
      62: invokeinterface #103,  1          // InterfaceMethod java/util/Deque.peek:()Ljava/lang/Object;
      67: checkcast     #119                // class com/google/javascript/jscomp/ControlFlowGraph
      70: areturn

  public com.google.javascript.rhino.Node getScopeRoot();
    Code:
       0: aload_0
       1: getfield      #12                 // Field scopeRoots:Ljava/util/Deque;
       4: invokeinterface #102,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
       9: ifeq          28
      12: aload_0
      13: getfield      #11                 // Field scopes:Ljava/util/Deque;
      16: invokeinterface #103,  1          // InterfaceMethod java/util/Deque.peek:()Ljava/lang/Object;
      21: checkcast     #104                // class com/google/javascript/jscomp/Scope
      24: invokevirtual #70                 // Method com/google/javascript/jscomp/Scope.getRootNode:()Lcom/google/javascript/rhino/Node;
      27: areturn
      28: aload_0
      29: getfield      #12                 // Field scopeRoots:Ljava/util/Deque;
      32: invokeinterface #103,  1          // InterfaceMethod java/util/Deque.peek:()Ljava/lang/Object;
      37: checkcast     #54                 // class com/google/javascript/rhino/Node
      40: areturn

  boolean inGlobalScope();
    Code:
       0: aload_0
       1: invokevirtual #120                // Method getScopeDepth:()I
       4: iconst_1
       5: if_icmpgt     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  int getScopeDepth();
    Code:
       0: aload_0
       1: getfield      #11                 // Field scopes:Ljava/util/Deque;
       4: invokeinterface #101,  1          // InterfaceMethod java/util/Deque.size:()I
       9: aload_0
      10: getfield      #12                 // Field scopeRoots:Ljava/util/Deque;
      13: invokeinterface #101,  1          // InterfaceMethod java/util/Deque.size:()I
      18: iadd
      19: ireturn

  public boolean hasScope();
    Code:
       0: aload_0
       1: getfield      #11                 // Field scopes:Ljava/util/Deque;
       4: invokeinterface #102,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
       9: ifeq          24
      12: aload_0
      13: getfield      #12                 // Field scopeRoots:Ljava/util/Deque;
      16: invokeinterface #102,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public void report(com.google.javascript.rhino.Node, com.google.javascript.jscomp.DiagnosticType, java.lang.String...);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokestatic  #121                // Method com/google/javascript/jscomp/JSError.make:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)Lcom/google/javascript/jscomp/JSError;
       6: astore        4
       8: aload_0
       9: getfield      #19                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      12: aload         4
      14: invokevirtual #122                // Method com/google/javascript/jscomp/AbstractCompiler.report:(Lcom/google/javascript/jscomp/JSError;)V
      17: return

  private static java.lang.String getSourceName(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: invokevirtual #123                // Method com/google/javascript/rhino/Node.getSourceFileName:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     14
       9: ldc           #21                 // String
      11: goto          15
      14: aload_1
      15: areturn

  com.google.javascript.rhino.InputId getInputId();
    Code:
       0: aload_0
       1: getfield      #20                 // Field inputId:Lcom/google/javascript/rhino/InputId;
       4: areturn

  public com.google.javascript.jscomp.JSError makeError(com.google.javascript.rhino.Node, com.google.javascript.jscomp.CheckLevel, com.google.javascript.jscomp.DiagnosticType, java.lang.String...);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: aload         4
       5: invokestatic  #124                // Method com/google/javascript/jscomp/JSError.make:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/CheckLevel;Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)Lcom/google/javascript/jscomp/JSError;
       8: areturn

  public com.google.javascript.jscomp.JSError makeError(com.google.javascript.rhino.Node, com.google.javascript.jscomp.DiagnosticType, java.lang.String...);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokestatic  #121                // Method com/google/javascript/jscomp/JSError.make:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)Lcom/google/javascript/jscomp/JSError;
       6: areturn

  private java.lang.String getBestSourceFileName(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: ifnonnull     11
       4: aload_0
       5: getfield      #22                 // Field sourceName:Ljava/lang/String;
       8: goto          15
      11: aload_1
      12: invokevirtual #123                // Method com/google/javascript/rhino/Node.getSourceFileName:()Ljava/lang/String;
      15: areturn

  static {};
    Code:
       0: ldc           #125                // String JSC_NODE_TRAVERSAL_ERROR
       2: ldc           #126                // String {0}
       4: invokestatic  #127                // Method com/google/javascript/jscomp/DiagnosticType.error:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
       7: putstatic     #128                // Field NODE_TRAVERSAL_ERROR:Lcom/google/javascript/jscomp/DiagnosticType;
      10: return
}
