Compiled from "NameReferenceGraph.java"
class com.google.javascript.jscomp.NameReferenceGraph$Name {
  private final java.lang.String qName;

  private com.google.javascript.rhino.jstype.JSType type;

  private java.util.List<com.google.javascript.jscomp.DefinitionsRemover$Definition> declarations;

  final boolean isExtern;

  private boolean isExported;

  private boolean isAliased;

  private boolean exposedToCallOrApply;

  final com.google.javascript.jscomp.NameReferenceGraph this$0;

  public com.google.javascript.jscomp.NameReferenceGraph$Name(com.google.javascript.jscomp.NameReferenceGraph, java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field this$0:Lcom/google/javascript/jscomp/NameReferenceGraph;
       5: aload_0
       6: invokespecial #5                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #6                  // Method com/google/common/collect/Lists.newLinkedList:()Ljava/util/LinkedList;
      13: putfield      #7                  // Field declarations:Ljava/util/List;
      16: aload_0
      17: iconst_0
      18: putfield      #8                  // Field isExported:Z
      21: aload_0
      22: iconst_0
      23: putfield      #3                  // Field isAliased:Z
      26: aload_0
      27: iconst_0
      28: putfield      #9                  // Field exposedToCallOrApply:Z
      31: aload_0
      32: aload_2
      33: putfield      #1                  // Field qName:Ljava/lang/String;
      36: aload_0
      37: iload_3
      38: putfield      #10                 // Field isExtern:Z
      41: aload_2
      42: bipush        46
      44: invokevirtual #11                 // Method java/lang/String.lastIndexOf:(I)I
      47: istore        4
      49: iload         4
      51: iconst_m1
      52: if_icmpne     59
      55: aload_2
      56: goto          67
      59: aload_2
      60: iload         4
      62: iconst_1
      63: iadd
      64: invokevirtual #12                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      67: astore        5
      69: aload_0
      70: aload_1
      71: getfield      #13                 // Field com/google/javascript/jscomp/NameReferenceGraph.compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      74: invokevirtual #14                 // Method com/google/javascript/jscomp/AbstractCompiler.getCodingConvention:()Lcom/google/javascript/jscomp/CodingConvention;
      77: aload         5
      79: invokeinterface #15,  2           // InterfaceMethod com/google/javascript/jscomp/CodingConvention.isExported:(Ljava/lang/String;)Z
      84: putfield      #8                  // Field isExported:Z
      87: aload_0
      88: aload_1
      89: getfield      #13                 // Field com/google/javascript/jscomp/NameReferenceGraph.compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      92: invokevirtual #16                 // Method com/google/javascript/jscomp/AbstractCompiler.getTypeRegistry:()Lcom/google/javascript/rhino/jstype/JSTypeRegistry;
      95: getstatic     #17                 // Field com/google/javascript/rhino/jstype/JSTypeNative.UNKNOWN_TYPE:Lcom/google/javascript/rhino/jstype/JSTypeNative;
      98: invokevirtual #18                 // Method com/google/javascript/rhino/jstype/JSTypeRegistry.getNativeType:(Lcom/google/javascript/rhino/jstype/JSTypeNative;)Lcom/google/javascript/rhino/jstype/JSType;
     101: putfield      #2                  // Field type:Lcom/google/javascript/rhino/jstype/JSType;
     104: return

  public com.google.javascript.rhino.jstype.JSType getType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field type:Lcom/google/javascript/rhino/jstype/JSType;
       4: areturn

  public void setType(com.google.javascript.rhino.jstype.JSType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field type:Lcom/google/javascript/rhino/jstype/JSType;
       5: return

  public java.util.List<com.google.javascript.jscomp.DefinitionsRemover$Definition> getDeclarations();
    Code:
       0: aload_0
       1: getfield      #7                  // Field declarations:Ljava/util/List;
       4: areturn

  public void addAssignmentDeclaration(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #7                  // Field declarations:Ljava/util/List;
       4: new           #19                 // class com/google/javascript/jscomp/DefinitionsRemover$AssignmentDefinition
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #10                 // Field isExtern:Z
      13: invokespecial #20                 // Method com/google/javascript/jscomp/DefinitionsRemover$AssignmentDefinition."<init>":(Lcom/google/javascript/rhino/Node;Z)V
      16: invokeinterface #21,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: return

  public void addFunctionDeclaration(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #7                  // Field declarations:Ljava/util/List;
       4: new           #22                 // class com/google/javascript/jscomp/DefinitionsRemover$NamedFunctionDefinition
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #10                 // Field isExtern:Z
      13: invokespecial #23                 // Method com/google/javascript/jscomp/DefinitionsRemover$NamedFunctionDefinition."<init>":(Lcom/google/javascript/rhino/Node;Z)V
      16: invokeinterface #21,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      21: pop
      22: return

  public boolean isExtern();
    Code:
       0: aload_0
       1: getfield      #10                 // Field isExtern:Z
       4: ireturn

  public void markExported();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #8                  // Field isExported:Z
       5: return

  public boolean isExported();
    Code:
       0: aload_0
       1: getfield      #8                  // Field isExported:Z
       4: ireturn

  public final void remove();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getDeclarations:()Ljava/util/List;
       4: invokeinterface #25,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          36
      19: aload_1
      20: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #28                 // class com/google/javascript/jscomp/DefinitionsRemover$Definition
      28: astore_2
      29: aload_2
      30: invokevirtual #29                 // Method com/google/javascript/jscomp/DefinitionsRemover$Definition.remove:()V
      33: goto          10
      36: return

  public boolean isAliased();
    Code:
       0: aload_0
       1: getfield      #3                  // Field isAliased:Z
       4: ireturn

  public void setAliased(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field isAliased:Z
       5: return

  public java.lang.String getQualifiedName();
    Code:
       0: aload_0
       1: getfield      #1                  // Field qName:Ljava/lang/String;
       4: areturn

  public java.lang.String getPropertyName();
    Code:
       0: aload_0
       1: getfield      #1                  // Field qName:Ljava/lang/String;
       4: bipush        46
       6: invokevirtual #11                 // Method java/lang/String.lastIndexOf:(I)I
       9: istore_1
      10: iload_1
      11: iconst_m1
      12: if_icmpne     17
      15: aconst_null
      16: areturn
      17: aload_0
      18: getfield      #1                  // Field qName:Ljava/lang/String;
      21: iload_1
      22: iconst_1
      23: iadd
      24: invokevirtual #12                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      27: areturn

  public boolean exposedToCallOrApply();
    Code:
       0: aload_0
       1: getfield      #9                  // Field exposedToCallOrApply:Z
       4: ireturn

  public void markExposedToCallOrApply();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #9                  // Field exposedToCallOrApply:Z
       5: return

  public java.lang.String toString();
    Code:
       0: new           #30                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #1                  // Field qName:Ljava/lang/String;
      11: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #33                 // String  :
      16: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #2                  // Field type:Lcom/google/javascript/rhino/jstype/JSType;
      23: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      26: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #1                  // Field qName:Ljava/lang/String;
       4: invokevirtual #36                 // Method java/lang/String.hashCode:()I
       7: ireturn

  static boolean access$002(com.google.javascript.jscomp.NameReferenceGraph$Name, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #3                  // Field isAliased:Z
       6: ireturn

  static com.google.javascript.rhino.jstype.JSType access$102(com.google.javascript.jscomp.NameReferenceGraph$Name, com.google.javascript.rhino.jstype.JSType);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field type:Lcom/google/javascript/rhino/jstype/JSType;
       6: areturn

  static java.lang.String access$200(com.google.javascript.jscomp.NameReferenceGraph$Name);
    Code:
       0: aload_0
       1: getfield      #1                  // Field qName:Ljava/lang/String;
       4: areturn
}
