Compiled from "CommandLineRunner.java"
class com.google.javascript.jscomp.CommandLineRunner$Flags$WarningGuardSetter implements org.kohsuke.args4j.spi.Setter<java.lang.String> {
  private final org.kohsuke.args4j.spi.Setter<? super java.lang.String> proxy;

  private final com.google.javascript.jscomp.CheckLevel level;

  private com.google.javascript.jscomp.CommandLineRunner$Flags$WarningGuardSetter(org.kohsuke.args4j.spi.Setter<? super java.lang.String>, com.google.javascript.jscomp.CheckLevel);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field proxy:Lorg/kohsuke/args4j/spi/Setter;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field level:Lcom/google/javascript/jscomp/CheckLevel;
      14: return

  public boolean isMultiValued();
    Code:
       0: aload_0
       1: getfield      #3                  // Field proxy:Lorg/kohsuke/args4j/spi/Setter;
       4: invokeinterface #5,  1            // InterfaceMethod org/kohsuke/args4j/spi/Setter.isMultiValued:()Z
       9: ireturn

  public java.lang.Class<java.lang.String> getType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field proxy:Lorg/kohsuke/args4j/spi/Setter;
       4: invokeinterface #6,  1            // InterfaceMethod org/kohsuke/args4j/spi/Setter.getType:()Ljava/lang/Class;
       9: areturn

  public void addValue(java.lang.String) throws org.kohsuke.args4j.CmdLineException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field proxy:Lorg/kohsuke/args4j/spi/Setter;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod org/kohsuke/args4j/spi/Setter.addValue:(Ljava/lang/Object;)V
      10: invokestatic  #8                  // Method com/google/javascript/jscomp/CommandLineRunner$Flags.access$100:()Ljava/util/List;
      13: new           #9                  // class com/google/javascript/jscomp/CommandLineRunner$GuardLevel
      16: dup
      17: aload_1
      18: aload_0
      19: getfield      #4                  // Field level:Lcom/google/javascript/jscomp/CheckLevel;
      22: invokespecial #10                 // Method com/google/javascript/jscomp/CommandLineRunner$GuardLevel."<init>":(Ljava/lang/String;Lcom/google/javascript/jscomp/CheckLevel;)V
      25: invokeinterface #11,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      30: pop
      31: return

  public org.kohsuke.args4j.spi.FieldSetter asFieldSetter();
    Code:
       0: aload_0
       1: getfield      #3                  // Field proxy:Lorg/kohsuke/args4j/spi/Setter;
       4: invokeinterface #12,  1           // InterfaceMethod org/kohsuke/args4j/spi/Setter.asFieldSetter:()Lorg/kohsuke/args4j/spi/FieldSetter;
       9: areturn

  public java.lang.reflect.AnnotatedElement asAnnotatedElement();
    Code:
       0: aload_0
       1: getfield      #3                  // Field proxy:Lorg/kohsuke/args4j/spi/Setter;
       4: invokeinterface #13,  1           // InterfaceMethod org/kohsuke/args4j/spi/Setter.asAnnotatedElement:()Ljava/lang/reflect/AnnotatedElement;
       9: areturn

  public void addValue(java.lang.Object) throws org.kohsuke.args4j.CmdLineException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #14                 // class java/lang/String
       5: invokevirtual #15                 // Method addValue:(Ljava/lang/String;)V
       8: return

  com.google.javascript.jscomp.CommandLineRunner$Flags$WarningGuardSetter(org.kohsuke.args4j.spi.Setter, com.google.javascript.jscomp.CheckLevel, com.google.javascript.jscomp.CommandLineRunner$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method "<init>":(Lorg/kohsuke/args4j/spi/Setter;Lcom/google/javascript/jscomp/CheckLevel;)V
       6: return
}
