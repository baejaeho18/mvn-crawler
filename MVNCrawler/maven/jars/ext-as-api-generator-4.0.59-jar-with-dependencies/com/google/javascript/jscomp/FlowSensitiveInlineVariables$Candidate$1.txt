Compiled from "FlowSensitiveInlineVariables.java"
class com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate$1 implements com.google.common.base.Predicate<com.google.javascript.rhino.Node> {
  final com.google.javascript.jscomp.Scope val$scope;

  final com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate this$1;

  com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate$1(com.google.javascript.jscomp.FlowSensitiveInlineVariables$Candidate, com.google.javascript.jscomp.Scope);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lcom/google/javascript/jscomp/FlowSensitiveInlineVariables$Candidate;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$scope:Lcom/google/javascript/jscomp/Scope;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public boolean apply(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method com/google/javascript/rhino/Node.getType:()I
       4: lookupswitch  { // 7
                    30: 72
                    33: 72
                    35: 72
                    38: 74
                    47: 72
                    63: 72
                    64: 72
               default: 102
          }
      72: iconst_1
      73: ireturn
      74: aload_0
      75: getfield      #2                  // Field val$scope:Lcom/google/javascript/jscomp/Scope;
      78: aload_1
      79: invokevirtual #5                  // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      82: invokevirtual #6                  // Method com/google/javascript/jscomp/Scope.getOwnSlot:(Ljava/lang/String;)Lcom/google/javascript/jscomp/Scope$Var;
      85: astore_2
      86: aload_2
      87: ifnull        102
      90: aload_2
      91: invokevirtual #7                  // Method com/google/javascript/jscomp/Scope$Var.getParentNode:()Lcom/google/javascript/rhino/Node;
      94: invokevirtual #8                  // Method com/google/javascript/rhino/Node.isCatch:()Z
      97: ifeq          102
     100: iconst_1
     101: ireturn
     102: iconst_0
     103: ireturn

  public boolean apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class com/google/javascript/rhino/Node
       5: invokevirtual #10                 // Method apply:(Lcom/google/javascript/rhino/Node;)Z
       8: ireturn
}
