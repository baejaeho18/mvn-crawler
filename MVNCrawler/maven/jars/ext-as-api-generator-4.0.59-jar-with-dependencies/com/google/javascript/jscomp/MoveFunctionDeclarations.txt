Compiled from "MoveFunctionDeclarations.java"
class com.google.javascript.jscomp.MoveFunctionDeclarations implements com.google.javascript.jscomp.NodeTraversal$Callback,com.google.javascript.jscomp.CompilerPass {
  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  private final java.util.Map<com.google.javascript.jscomp.JSModule, java.util.List<com.google.javascript.rhino.Node>> functions;

  com.google.javascript.jscomp.MoveFunctionDeclarations(com.google.javascript.jscomp.AbstractCompiler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       9: aload_0
      10: invokestatic  #3                  // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
      13: putfield      #4                  // Field functions:Ljava/util/Map;
      16: return

  public void process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: aload_2
       5: aload_0
       6: invokestatic  #5                  // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
       9: aload_0
      10: getfield      #4                  // Field functions:Ljava/util/Map;
      13: invokeinterface #6,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      18: invokeinterface #7,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          122
      33: aload_3
      34: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #10                 // class java/util/Map$Entry
      42: astore        4
      44: aload         4
      46: invokeinterface #11,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      51: checkcast     #12                 // class com/google/javascript/jscomp/JSModule
      54: astore        5
      56: aload_0
      57: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      60: aload         5
      62: invokevirtual #13                 // Method com/google/javascript/jscomp/AbstractCompiler.getNodeForCodeInsertion:(Lcom/google/javascript/jscomp/JSModule;)Lcom/google/javascript/rhino/Node;
      65: astore        6
      67: aload         4
      69: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      74: checkcast     #15                 // class java/util/List
      77: invokestatic  #16                 // Method com/google/common/collect/Lists.reverse:(Ljava/util/List;)Ljava/util/List;
      80: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      85: astore        7
      87: aload         7
      89: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      94: ifeq          119
      97: aload         7
      99: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     104: checkcast     #18                 // class com/google/javascript/rhino/Node
     107: astore        8
     109: aload         6
     111: aload         8
     113: invokevirtual #19                 // Method com/google/javascript/rhino/Node.addChildToFront:(Lcom/google/javascript/rhino/Node;)V
     116: goto          87
     119: goto          24
     122: return

  public boolean shouldTraverse(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: iconst_2
       2: invokevirtual #20                 // Method com/google/javascript/rhino/Node.getAncestor:(I)Lcom/google/javascript/rhino/Node;
       5: astore        4
       7: aload         4
       9: ifnull        20
      12: aload         4
      14: invokevirtual #21                 // Method com/google/javascript/rhino/Node.isScript:()Z
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_3
       1: ifnull        11
       4: aload_3
       5: invokevirtual #21                 // Method com/google/javascript/rhino/Node.isScript:()Z
       8: ifne          12
      11: return
      12: aload_2
      13: invokestatic  #22                 // Method com/google/javascript/jscomp/NodeUtil.isFunctionDeclaration:(Lcom/google/javascript/rhino/Node;)Z
      16: ifeq          86
      19: aload_3
      20: aload_2
      21: invokevirtual #23                 // Method com/google/javascript/rhino/Node.removeChild:(Lcom/google/javascript/rhino/Node;)V
      24: aload_0
      25: getfield      #2                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      28: invokevirtual #24                 // Method com/google/javascript/jscomp/AbstractCompiler.reportCodeChange:()V
      31: aload_1
      32: invokevirtual #25                 // Method com/google/javascript/jscomp/NodeTraversal.getModule:()Lcom/google/javascript/jscomp/JSModule;
      35: astore        4
      37: aload_0
      38: getfield      #4                  // Field functions:Ljava/util/Map;
      41: aload         4
      43: invokeinterface #26,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      48: checkcast     #15                 // class java/util/List
      51: astore        5
      53: aload         5
      55: ifnonnull     77
      58: invokestatic  #27                 // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
      61: astore        5
      63: aload_0
      64: getfield      #4                  // Field functions:Ljava/util/Map;
      67: aload         4
      69: aload         5
      71: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      76: pop
      77: aload         5
      79: aload_2
      80: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      85: pop
      86: return
}
