Compiled from "RegExpTree.java"
class com.google.javascript.jscomp.regex.RegExpTree$1Parser {
  int pos;

  int numCapturingGroups;

  final int limit;

  final java.lang.String val$pattern;

  final java.lang.String val$flags;

  com.google.javascript.jscomp.regex.RegExpTree$1Parser();
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$pattern:Ljava/lang/String;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$flags:Ljava/lang/String;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field numCapturingGroups:I
      19: aload_0
      20: aload_0
      21: getfield      #1                  // Field val$pattern:Ljava/lang/String;
      24: invokevirtual #5                  // Method java/lang/String.length:()I
      27: putfield      #6                  // Field limit:I
      30: return

  com.google.javascript.jscomp.regex.RegExpTree parseTopLevel();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #7                  // Field pos:I
       5: aload_0
       6: invokevirtual #8                  // Method parse:()Lcom/google/javascript/jscomp/regex/RegExpTree;
       9: astore_1
      10: aload_0
      11: getfield      #7                  // Field pos:I
      14: aload_0
      15: getfield      #6                  // Field limit:I
      18: if_icmpge     40
      21: new           #9                  // class java/lang/IllegalArgumentException
      24: dup
      25: aload_0
      26: getfield      #1                  // Field val$pattern:Ljava/lang/String;
      29: aload_0
      30: getfield      #7                  // Field pos:I
      33: invokevirtual #10                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      36: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_1
      41: areturn

  com.google.javascript.jscomp.regex.RegExpTree parse();
    Code:
       0: aconst_null
       1: astore_1
       2: aconst_null
       3: astore_2
       4: aload_0
       5: getfield      #7                  // Field pos:I
       8: aload_0
       9: getfield      #6                  // Field limit:I
      12: if_icmpge     498
      15: aload_0
      16: getfield      #1                  // Field val$pattern:Ljava/lang/String;
      19: aload_0
      20: getfield      #7                  // Field pos:I
      23: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
      26: istore_3
      27: iload_3
      28: lookupswitch  { // 8
                    36: 134
                    40: 113
                    41: 122
                    46: 157
                    91: 104
                    92: 125
                    94: 134
                   124: 175
               default: 183
          }
     104: aload_0
     105: invokespecial #13                 // Method parseCharset:()Lcom/google/javascript/jscomp/regex/RegExpTree;
     108: astore        4
     110: goto          384
     113: aload_0
     114: invokespecial #14                 // Method parseParenthetical:()Lcom/google/javascript/jscomp/regex/RegExpTree;
     117: astore        4
     119: goto          384
     122: goto          498
     125: aload_0
     126: invokespecial #15                 // Method parseEscape:()Lcom/google/javascript/jscomp/regex/RegExpTree;
     129: astore        4
     131: goto          384
     134: new           #16                 // class com/google/javascript/jscomp/regex/RegExpTree$Anchor
     137: dup
     138: iload_3
     139: invokespecial #17                 // Method com/google/javascript/jscomp/regex/RegExpTree$Anchor."<init>":(C)V
     142: astore        4
     144: aload_0
     145: dup
     146: getfield      #7                  // Field pos:I
     149: iconst_1
     150: iadd
     151: putfield      #7                  // Field pos:I
     154: goto          384
     157: invokestatic  #18                 // Method com/google/javascript/jscomp/regex/RegExpTree.access$000:()Lcom/google/javascript/jscomp/regex/RegExpTree$Charset;
     160: astore        4
     162: aload_0
     163: dup
     164: getfield      #7                  // Field pos:I
     167: iconst_1
     168: iadd
     169: putfield      #7                  // Field pos:I
     172: goto          384
     175: getstatic     #19                 // Field com/google/javascript/jscomp/regex/RegExpTree$Empty.INSTANCE:Lcom/google/javascript/jscomp/regex/RegExpTree$Empty;
     178: astore        4
     180: goto          384
     183: aload_0
     184: getfield      #7                  // Field pos:I
     187: istore        5
     189: aload_0
     190: getfield      #7                  // Field pos:I
     193: iconst_1
     194: iadd
     195: istore        6
     197: iload         6
     199: aload_0
     200: getfield      #6                  // Field limit:I
     203: if_icmpge     358
     206: aload_0
     207: getfield      #1                  // Field val$pattern:Ljava/lang/String;
     210: iload         6
     212: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
     215: lookupswitch  { // 12
                    36: 320
                    40: 320
                    41: 320
                    42: 320
                    43: 320
                    46: 320
                    63: 320
                    91: 320
                    92: 320
                    94: 320
                   123: 320
                   124: 320
               default: 323
          }
     320: goto          358
     323: iload         6
     325: iconst_1
     326: iadd
     327: aload_0
     328: getfield      #6                  // Field limit:I
     331: if_icmpge     352
     334: aload_0
     335: aload_0
     336: getfield      #1                  // Field val$pattern:Ljava/lang/String;
     339: iload         6
     341: iconst_1
     342: iadd
     343: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
     346: invokespecial #20                 // Method isRepetitionStart:(C)Z
     349: ifne          358
     352: iinc          6, 1
     355: goto          197
     358: new           #21                 // class com/google/javascript/jscomp/regex/RegExpTree$Text
     361: dup
     362: aload_0
     363: getfield      #1                  // Field val$pattern:Ljava/lang/String;
     366: iload         5
     368: iload         6
     370: invokevirtual #22                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     373: invokespecial #23                 // Method com/google/javascript/jscomp/regex/RegExpTree$Text."<init>":(Ljava/lang/String;)V
     376: astore        4
     378: aload_0
     379: iload         6
     381: putfield      #7                  // Field pos:I
     384: aload_0
     385: getfield      #7                  // Field pos:I
     388: aload_0
     389: getfield      #6                  // Field limit:I
     392: if_icmpge     421
     395: aload_0
     396: aload_0
     397: getfield      #1                  // Field val$pattern:Ljava/lang/String;
     400: aload_0
     401: getfield      #7                  // Field pos:I
     404: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
     407: invokespecial #20                 // Method isRepetitionStart:(C)Z
     410: ifeq          421
     413: aload_0
     414: aload         4
     416: invokespecial #24                 // Method parseRepetition:(Lcom/google/javascript/jscomp/regex/RegExpTree;)Lcom/google/javascript/jscomp/regex/RegExpTree;
     419: astore        4
     421: aload_2
     422: ifnonnull     431
     425: aload         4
     427: astore_2
     428: goto          442
     431: new           #25                 // class com/google/javascript/jscomp/regex/RegExpTree$Concatenation
     434: dup
     435: aload_2
     436: aload         4
     438: invokespecial #26                 // Method com/google/javascript/jscomp/regex/RegExpTree$Concatenation."<init>":(Lcom/google/javascript/jscomp/regex/RegExpTree;Lcom/google/javascript/jscomp/regex/RegExpTree;)V
     441: astore_2
     442: aload_0
     443: getfield      #7                  // Field pos:I
     446: aload_0
     447: getfield      #6                  // Field limit:I
     450: if_icmpge     495
     453: aload_0
     454: getfield      #1                  // Field val$pattern:Ljava/lang/String;
     457: aload_0
     458: getfield      #7                  // Field pos:I
     461: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
     464: bipush        124
     466: if_icmpne     495
     469: aload_1
     470: ifnonnull     477
     473: invokestatic  #27                 // Method com/google/common/collect/ImmutableList.builder:()Lcom/google/common/collect/ImmutableList$Builder;
     476: astore_1
     477: aload_1
     478: aload_2
     479: invokevirtual #28                 // Method com/google/common/collect/ImmutableList$Builder.add:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList$Builder;
     482: pop
     483: aconst_null
     484: astore_2
     485: aload_0
     486: dup
     487: getfield      #7                  // Field pos:I
     490: iconst_1
     491: iadd
     492: putfield      #7                  // Field pos:I
     495: goto          4
     498: aload_2
     499: ifnonnull     506
     502: getstatic     #19                 // Field com/google/javascript/jscomp/regex/RegExpTree$Empty.INSTANCE:Lcom/google/javascript/jscomp/regex/RegExpTree$Empty;
     505: astore_2
     506: aload_1
     507: ifnull        528
     510: aload_1
     511: aload_2
     512: invokevirtual #28                 // Method com/google/common/collect/ImmutableList$Builder.add:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList$Builder;
     515: pop
     516: new           #29                 // class com/google/javascript/jscomp/regex/RegExpTree$Alternation
     519: dup
     520: aload_1
     521: invokevirtual #30                 // Method com/google/common/collect/ImmutableList$Builder.build:()Lcom/google/common/collect/ImmutableList;
     524: invokespecial #31                 // Method com/google/javascript/jscomp/regex/RegExpTree$Alternation."<init>":(Ljava/util/List;)V
     527: areturn
     528: aload_2
     529: areturn

  private com.google.javascript.jscomp.regex.RegExpTree parseParenthetical();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$pattern:Ljava/lang/String;
       4: aload_0
       5: getfield      #7                  // Field pos:I
       8: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
      11: bipush        40
      13: if_icmpne     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: invokestatic  #32                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      24: aload_0
      25: getfield      #7                  // Field pos:I
      28: istore_1
      29: aload_0
      30: dup
      31: getfield      #7                  // Field pos:I
      34: iconst_1
      35: iadd
      36: putfield      #7                  // Field pos:I
      39: iconst_1
      40: istore_2
      41: iconst_0
      42: istore_3
      43: aload_0
      44: getfield      #7                  // Field pos:I
      47: aload_0
      48: getfield      #6                  // Field limit:I
      51: if_icmpge     199
      54: aload_0
      55: getfield      #1                  // Field val$pattern:Ljava/lang/String;
      58: aload_0
      59: getfield      #7                  // Field pos:I
      62: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
      65: bipush        63
      67: if_icmpne     199
      70: aload_0
      71: getfield      #7                  // Field pos:I
      74: iconst_1
      75: iadd
      76: aload_0
      77: getfield      #6                  // Field limit:I
      80: if_icmpge     199
      83: iconst_0
      84: istore_2
      85: aload_0
      86: getfield      #1                  // Field val$pattern:Ljava/lang/String;
      89: aload_0
      90: getfield      #7                  // Field pos:I
      93: iconst_1
      94: iadd
      95: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
      98: istore        4
     100: iload         4
     102: lookupswitch  { // 3
                    33: 149
                    58: 136
                    61: 149
               default: 165
          }
     136: aload_0
     137: dup
     138: getfield      #7                  // Field pos:I
     141: iconst_2
     142: iadd
     143: putfield      #7                  // Field pos:I
     146: goto          199
     149: aload_0
     150: dup
     151: getfield      #7                  // Field pos:I
     154: iconst_2
     155: iadd
     156: putfield      #7                  // Field pos:I
     159: iload         4
     161: istore_3
     162: goto          199
     165: new           #9                  // class java/lang/IllegalArgumentException
     168: dup
     169: new           #33                 // class java/lang/StringBuilder
     172: dup
     173: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     176: ldc           #35                 // String Malformed parenthetical:
     178: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     181: aload_0
     182: getfield      #1                  // Field val$pattern:Ljava/lang/String;
     185: iload_1
     186: invokevirtual #10                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     189: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     195: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     198: athrow
     199: aload_0
     200: invokevirtual #8                  // Method parse:()Lcom/google/javascript/jscomp/regex/RegExpTree;
     203: astore        4
     205: aload_0
     206: getfield      #7                  // Field pos:I
     209: aload_0
     210: getfield      #6                  // Field limit:I
     213: if_icmpge     245
     216: aload_0
     217: getfield      #1                  // Field val$pattern:Ljava/lang/String;
     220: aload_0
     221: getfield      #7                  // Field pos:I
     224: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
     227: bipush        41
     229: if_icmpne     245
     232: aload_0
     233: dup
     234: getfield      #7                  // Field pos:I
     237: iconst_1
     238: iadd
     239: putfield      #7                  // Field pos:I
     242: goto          279
     245: new           #9                  // class java/lang/IllegalArgumentException
     248: dup
     249: new           #33                 // class java/lang/StringBuilder
     252: dup
     253: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     256: ldc           #38                 // String Unclosed parenthetical group:
     258: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     261: aload_0
     262: getfield      #1                  // Field val$pattern:Ljava/lang/String;
     265: iload_1
     266: invokevirtual #10                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     269: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     272: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     275: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     278: athrow
     279: iload_2
     280: ifeq          303
     283: aload_0
     284: dup
     285: getfield      #4                  // Field numCapturingGroups:I
     288: iconst_1
     289: iadd
     290: putfield      #4                  // Field numCapturingGroups:I
     293: new           #39                 // class com/google/javascript/jscomp/regex/RegExpTree$CapturingGroup
     296: dup
     297: aload         4
     299: invokespecial #40                 // Method com/google/javascript/jscomp/regex/RegExpTree$CapturingGroup."<init>":(Lcom/google/javascript/jscomp/regex/RegExpTree;)V
     302: areturn
     303: iload_3
     304: ifeq          328
     307: new           #41                 // class com/google/javascript/jscomp/regex/RegExpTree$LookaheadAssertion
     310: dup
     311: aload         4
     313: iload_3
     314: bipush        61
     316: if_icmpne     323
     319: iconst_1
     320: goto          324
     323: iconst_0
     324: invokespecial #42                 // Method com/google/javascript/jscomp/regex/RegExpTree$LookaheadAssertion."<init>":(Lcom/google/javascript/jscomp/regex/RegExpTree;Z)V
     327: areturn
     328: aload         4
     330: areturn

  private com.google.javascript.jscomp.regex.RegExpTree parseCharset();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$pattern:Ljava/lang/String;
       4: aload_0
       5: getfield      #7                  // Field pos:I
       8: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
      11: bipush        91
      13: if_icmpne     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: invokestatic  #32                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      24: aload_0
      25: dup
      26: getfield      #7                  // Field pos:I
      29: iconst_1
      30: iadd
      31: putfield      #7                  // Field pos:I
      34: aload_0
      35: getfield      #2                  // Field val$flags:Ljava/lang/String;
      38: bipush        105
      40: invokevirtual #43                 // Method java/lang/String.indexOf:(I)I
      43: iflt          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: istore_1
      52: aload_0
      53: getfield      #7                  // Field pos:I
      56: aload_0
      57: getfield      #6                  // Field limit:I
      60: if_icmpge     83
      63: aload_0
      64: getfield      #1                  // Field val$pattern:Ljava/lang/String;
      67: aload_0
      68: getfield      #7                  // Field pos:I
      71: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
      74: bipush        94
      76: if_icmpne     83
      79: iconst_1
      80: goto          84
      83: iconst_0
      84: istore_2
      85: iload_2
      86: ifeq          99
      89: aload_0
      90: dup
      91: getfield      #7                  // Field pos:I
      94: iconst_1
      95: iadd
      96: putfield      #7                  // Field pos:I
      99: getstatic     #44                 // Field com/google/javascript/jscomp/regex/CharRanges.EMPTY:Lcom/google/javascript/jscomp/regex/CharRanges;
     102: astore_3
     103: getstatic     #44                 // Field com/google/javascript/jscomp/regex/CharRanges.EMPTY:Lcom/google/javascript/jscomp/regex/CharRanges;
     106: astore        4
     108: aload_0
     109: getfield      #7                  // Field pos:I
     112: aload_0
     113: getfield      #6                  // Field limit:I
     116: if_icmpge     421
     119: aload_0
     120: getfield      #1                  // Field val$pattern:Ljava/lang/String;
     123: aload_0
     124: getfield      #7                  // Field pos:I
     127: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
     130: bipush        93
     132: if_icmpeq     421
     135: aload_0
     136: getfield      #1                  // Field val$pattern:Ljava/lang/String;
     139: aload_0
     140: getfield      #7                  // Field pos:I
     143: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
     146: istore        5
     148: iload         5
     150: bipush        92
     152: if_icmpne     228
     155: aload_0
     156: dup
     157: getfield      #7                  // Field pos:I
     160: iconst_1
     161: iadd
     162: putfield      #7                  // Field pos:I
     165: aload_0
     166: getfield      #1                  // Field val$pattern:Ljava/lang/String;
     169: aload_0
     170: getfield      #7                  // Field pos:I
     173: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
     176: istore        7
     178: invokestatic  #45                 // Method com/google/javascript/jscomp/regex/RegExpTree.access$100:()Lcom/google/common/collect/ImmutableMap;
     181: iload         7
     183: invokestatic  #46                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     186: invokevirtual #47                 // Method com/google/common/collect/ImmutableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     189: checkcast     #48                 // class com/google/javascript/jscomp/regex/CharRanges
     192: astore        8
     194: aload         8
     196: ifnull        219
     199: aload_0
     200: dup
     201: getfield      #7                  // Field pos:I
     204: iconst_1
     205: iadd
     206: putfield      #7                  // Field pos:I
     209: aload_3
     210: aload         8
     212: invokevirtual #49                 // Method com/google/javascript/jscomp/regex/CharRanges.union:(Lcom/google/javascript/jscomp/regex/CharRanges;)Lcom/google/javascript/jscomp/regex/CharRanges;
     215: astore_3
     216: goto          108
     219: aload_0
     220: invokespecial #50                 // Method parseEscapeChar:()C
     223: istore        6
     225: goto          242
     228: iload         5
     230: istore        6
     232: aload_0
     233: dup
     234: getfield      #7                  // Field pos:I
     237: iconst_1
     238: iadd
     239: putfield      #7                  // Field pos:I
     242: iload         6
     244: istore        7
     246: aload_0
     247: getfield      #7                  // Field pos:I
     250: iconst_1
     251: iadd
     252: aload_0
     253: getfield      #6                  // Field limit:I
     256: if_icmpge     356
     259: aload_0
     260: getfield      #1                  // Field val$pattern:Ljava/lang/String;
     263: aload_0
     264: getfield      #7                  // Field pos:I
     267: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
     270: bipush        45
     272: if_icmpne     356
     275: aload_0
     276: getfield      #1                  // Field val$pattern:Ljava/lang/String;
     279: aload_0
     280: getfield      #7                  // Field pos:I
     283: iconst_1
     284: iadd
     285: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
     288: bipush        93
     290: if_icmpeq     356
     293: aload_0
     294: dup
     295: getfield      #7                  // Field pos:I
     298: iconst_1
     299: iadd
     300: putfield      #7                  // Field pos:I
     303: aload_0
     304: getfield      #1                  // Field val$pattern:Ljava/lang/String;
     307: aload_0
     308: getfield      #7                  // Field pos:I
     311: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
     314: istore        5
     316: iload         5
     318: bipush        92
     320: if_icmpne     342
     323: aload_0
     324: dup
     325: getfield      #7                  // Field pos:I
     328: iconst_1
     329: iadd
     330: putfield      #7                  // Field pos:I
     333: aload_0
     334: invokespecial #50                 // Method parseEscapeChar:()C
     337: istore        7
     339: goto          356
     342: iload         5
     344: istore        7
     346: aload_0
     347: dup
     348: getfield      #7                  // Field pos:I
     351: iconst_1
     352: iadd
     353: putfield      #7                  // Field pos:I
     356: iload         6
     358: iload         7
     360: invokestatic  #51                 // Method com/google/javascript/jscomp/regex/CharRanges.inclusive:(II)Lcom/google/javascript/jscomp/regex/CharRanges;
     363: astore        8
     365: aload_3
     366: aload         8
     368: invokevirtual #49                 // Method com/google/javascript/jscomp/regex/CharRanges.union:(Lcom/google/javascript/jscomp/regex/CharRanges;)Lcom/google/javascript/jscomp/regex/CharRanges;
     371: astore_3
     372: invokestatic  #52                 // Method com/google/javascript/jscomp/regex/RegExpTree.access$200:()Lcom/google/javascript/jscomp/regex/CharRanges;
     375: iload         6
     377: invokevirtual #53                 // Method com/google/javascript/jscomp/regex/CharRanges.contains:(I)Z
     380: ifeq          409
     383: invokestatic  #52                 // Method com/google/javascript/jscomp/regex/RegExpTree.access$200:()Lcom/google/javascript/jscomp/regex/CharRanges;
     386: iload         7
     388: invokevirtual #53                 // Method com/google/javascript/jscomp/regex/CharRanges.contains:(I)Z
     391: ifeq          409
     394: aload         4
     396: aload         8
     398: invokestatic  #52                 // Method com/google/javascript/jscomp/regex/RegExpTree.access$200:()Lcom/google/javascript/jscomp/regex/CharRanges;
     401: invokevirtual #54                 // Method com/google/javascript/jscomp/regex/CharRanges.intersection:(Lcom/google/javascript/jscomp/regex/CharRanges;)Lcom/google/javascript/jscomp/regex/CharRanges;
     404: invokevirtual #49                 // Method com/google/javascript/jscomp/regex/CharRanges.union:(Lcom/google/javascript/jscomp/regex/CharRanges;)Lcom/google/javascript/jscomp/regex/CharRanges;
     407: astore        4
     409: iload_1
     410: ifeq          418
     413: aload_3
     414: invokestatic  #55                 // Method com/google/javascript/jscomp/regex/CaseCanonicalize.expandToAllMatched:(Lcom/google/javascript/jscomp/regex/CharRanges;)Lcom/google/javascript/jscomp/regex/CharRanges;
     417: astore_3
     418: goto          108
     421: aload_0
     422: dup
     423: getfield      #7                  // Field pos:I
     426: iconst_1
     427: iadd
     428: putfield      #7                  // Field pos:I
     431: iload_2
     432: ifeq          443
     435: getstatic     #56                 // Field com/google/javascript/jscomp/regex/CharRanges.ALL_CODE_UNITS:Lcom/google/javascript/jscomp/regex/CharRanges;
     438: aload_3
     439: invokevirtual #57                 // Method com/google/javascript/jscomp/regex/CharRanges.difference:(Lcom/google/javascript/jscomp/regex/CharRanges;)Lcom/google/javascript/jscomp/regex/CharRanges;
     442: astore_3
     443: new           #58                 // class com/google/javascript/jscomp/regex/RegExpTree$Charset
     446: dup
     447: aload_3
     448: aload         4
     450: invokespecial #59                 // Method com/google/javascript/jscomp/regex/RegExpTree$Charset."<init>":(Lcom/google/javascript/jscomp/regex/CharRanges;Lcom/google/javascript/jscomp/regex/CharRanges;)V
     453: areturn

  private char parseEscapeChar();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$pattern:Ljava/lang/String;
       4: aload_0
       5: dup
       6: getfield      #7                  // Field pos:I
       9: dup_x1
      10: iconst_1
      11: iadd
      12: putfield      #7                  // Field pos:I
      15: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
      18: istore_1
      19: iload_1
      20: tableswitch   { // 98 to 120
                    98: 128
                    99: 158
                   100: 158
                   101: 158
                   102: 131
                   103: 158
                   104: 158
                   105: 158
                   106: 158
                   107: 158
                   108: 158
                   109: 158
                   110: 134
                   111: 158
                   112: 158
                   113: 158
                   114: 137
                   115: 158
                   116: 140
                   117: 143
                   118: 149
                   119: 158
                   120: 152
               default: 158
          }
     128: bipush        8
     130: ireturn
     131: bipush        12
     133: ireturn
     134: bipush        10
     136: ireturn
     137: bipush        13
     139: ireturn
     140: bipush        9
     142: ireturn
     143: aload_0
     144: iconst_4
     145: invokespecial #60                 // Method parseHex:(I)C
     148: ireturn
     149: bipush        11
     151: ireturn
     152: aload_0
     153: iconst_2
     154: invokespecial #60                 // Method parseHex:(I)C
     157: ireturn
     158: bipush        48
     160: iload_1
     161: if_icmpgt     269
     164: iload_1
     165: bipush        55
     167: if_icmpgt     269
     170: iload_1
     171: bipush        48
     173: isub
     174: i2c
     175: istore_2
     176: aload_0
     177: getfield      #6                  // Field limit:I
     180: aload_0
     181: getfield      #7                  // Field pos:I
     184: iload_1
     185: bipush        51
     187: if_icmpgt     194
     190: iconst_2
     191: goto          195
     194: iconst_1
     195: iadd
     196: iload_1
     197: bipush        48
     199: if_icmpne     206
     202: iconst_1
     203: goto          207
     206: iconst_0
     207: iadd
     208: invokestatic  #61                 // Method java/lang/Math.min:(II)I
     211: istore_3
     212: aload_0
     213: getfield      #7                  // Field pos:I
     216: iload_3
     217: if_icmpge     267
     220: aload_0
     221: getfield      #1                  // Field val$pattern:Ljava/lang/String;
     224: aload_0
     225: getfield      #7                  // Field pos:I
     228: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
     231: istore_1
     232: bipush        48
     234: iload_1
     235: if_icmpgt     267
     238: iload_1
     239: bipush        55
     241: if_icmpgt     267
     244: iload_2
     245: iconst_3
     246: ishl
     247: iload_1
     248: bipush        48
     250: isub
     251: iadd
     252: i2c
     253: istore_2
     254: aload_0
     255: dup
     256: getfield      #7                  // Field pos:I
     259: iconst_1
     260: iadd
     261: putfield      #7                  // Field pos:I
     264: goto          212
     267: iload_2
     268: ireturn
     269: iload_1
     270: ireturn

  private com.google.javascript.jscomp.regex.RegExpTree parseEscape();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$pattern:Ljava/lang/String;
       4: aload_0
       5: getfield      #7                  // Field pos:I
       8: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
      11: bipush        92
      13: if_icmpne     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: invokestatic  #32                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      24: aload_0
      25: dup
      26: getfield      #7                  // Field pos:I
      29: iconst_1
      30: iadd
      31: putfield      #7                  // Field pos:I
      34: aload_0
      35: getfield      #1                  // Field val$pattern:Ljava/lang/String;
      38: aload_0
      39: getfield      #7                  // Field pos:I
      42: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
      45: istore_1
      46: iload_1
      47: bipush        98
      49: if_icmpeq     58
      52: iload_1
      53: bipush        66
      55: if_icmpne     77
      58: aload_0
      59: dup
      60: getfield      #7                  // Field pos:I
      63: iconst_1
      64: iadd
      65: putfield      #7                  // Field pos:I
      68: new           #62                 // class com/google/javascript/jscomp/regex/RegExpTree$WordBoundary
      71: dup
      72: iload_1
      73: invokespecial #63                 // Method com/google/javascript/jscomp/regex/RegExpTree$WordBoundary."<init>":(C)V
      76: areturn
      77: bipush        49
      79: iload_1
      80: if_icmpgt     212
      83: iload_1
      84: bipush        57
      86: if_icmpgt     212
      89: aload_0
      90: dup
      91: getfield      #7                  // Field pos:I
      94: iconst_1
      95: iadd
      96: putfield      #7                  // Field pos:I
      99: iload_1
     100: bipush        48
     102: isub
     103: istore_2
     104: aload_0
     105: getfield      #4                  // Field numCapturingGroups:I
     108: iload_2
     109: if_icmplt     189
     112: aload_0
     113: getfield      #7                  // Field pos:I
     116: aload_0
     117: getfield      #6                  // Field limit:I
     120: if_icmpge     180
     123: aload_0
     124: getfield      #1                  // Field val$pattern:Ljava/lang/String;
     127: aload_0
     128: getfield      #7                  // Field pos:I
     131: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
     134: istore_3
     135: bipush        48
     137: iload_3
     138: if_icmpgt     180
     141: iload_3
     142: bipush        57
     144: if_icmpgt     180
     147: iload_2
     148: bipush        10
     150: imul
     151: iload_3
     152: bipush        48
     154: isub
     155: iadd
     156: istore        4
     158: aload_0
     159: getfield      #4                  // Field numCapturingGroups:I
     162: iload         4
     164: if_icmplt     180
     167: aload_0
     168: dup
     169: getfield      #7                  // Field pos:I
     172: iconst_1
     173: iadd
     174: putfield      #7                  // Field pos:I
     177: iload         4
     179: istore_2
     180: new           #64                 // class com/google/javascript/jscomp/regex/RegExpTree$BackReference
     183: dup
     184: iload_2
     185: invokespecial #65                 // Method com/google/javascript/jscomp/regex/RegExpTree$BackReference."<init>":(I)V
     188: areturn
     189: new           #21                 // class com/google/javascript/jscomp/regex/RegExpTree$Text
     192: dup
     193: iload_2
     194: bipush        7
     196: if_icmpgt     204
     199: iload_2
     200: i2c
     201: goto          205
     204: iload_1
     205: invokestatic  #66                 // Method java/lang/Character.toString:(C)Ljava/lang/String;
     208: invokespecial #23                 // Method com/google/javascript/jscomp/regex/RegExpTree$Text."<init>":(Ljava/lang/String;)V
     211: areturn
     212: invokestatic  #45                 // Method com/google/javascript/jscomp/regex/RegExpTree.access$100:()Lcom/google/common/collect/ImmutableMap;
     215: iload_1
     216: invokestatic  #46                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     219: invokevirtual #47                 // Method com/google/common/collect/ImmutableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     222: checkcast     #48                 // class com/google/javascript/jscomp/regex/CharRanges
     225: astore_2
     226: aload_2
     227: ifnull        252
     230: aload_0
     231: dup
     232: getfield      #7                  // Field pos:I
     235: iconst_1
     236: iadd
     237: putfield      #7                  // Field pos:I
     240: new           #58                 // class com/google/javascript/jscomp/regex/RegExpTree$Charset
     243: dup
     244: aload_2
     245: getstatic     #44                 // Field com/google/javascript/jscomp/regex/CharRanges.EMPTY:Lcom/google/javascript/jscomp/regex/CharRanges;
     248: invokespecial #59                 // Method com/google/javascript/jscomp/regex/RegExpTree$Charset."<init>":(Lcom/google/javascript/jscomp/regex/CharRanges;Lcom/google/javascript/jscomp/regex/CharRanges;)V
     251: areturn
     252: new           #21                 // class com/google/javascript/jscomp/regex/RegExpTree$Text
     255: dup
     256: new           #33                 // class java/lang/StringBuilder
     259: dup
     260: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     263: ldc           #67                 // String
     265: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     268: aload_0
     269: invokespecial #50                 // Method parseEscapeChar:()C
     272: invokevirtual #68                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     275: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     278: invokespecial #23                 // Method com/google/javascript/jscomp/regex/RegExpTree$Text."<init>":(Ljava/lang/String;)V
     281: areturn

  private char parseHex(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field pos:I
       4: iload_1
       5: iadd
       6: aload_0
       7: getfield      #6                  // Field limit:I
      10: if_icmple     50
      13: new           #9                  // class java/lang/IllegalArgumentException
      16: dup
      17: new           #33                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #69                 // String Abbreviated hex escape
      26: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #1                  // Field val$pattern:Ljava/lang/String;
      33: aload_0
      34: getfield      #7                  // Field pos:I
      37: invokevirtual #10                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      40: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: iconst_0
      51: istore_2
      52: iinc          1, -1
      55: iload_1
      56: iflt          173
      59: aload_0
      60: getfield      #1                  // Field val$pattern:Ljava/lang/String;
      63: aload_0
      64: getfield      #7                  // Field pos:I
      67: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
      70: istore_3
      71: bipush        48
      73: iload_3
      74: if_icmpgt     92
      77: iload_3
      78: bipush        57
      80: if_icmpgt     92
      83: iload_3
      84: bipush        48
      86: isub
      87: istore        4
      89: goto          153
      92: bipush        97
      94: iload_3
      95: if_icmpgt     113
      98: iload_3
      99: bipush        102
     101: if_icmpgt     113
     104: iload_3
     105: bipush        -87
     107: iadd
     108: istore        4
     110: goto          153
     113: bipush        65
     115: iload_3
     116: if_icmpgt     134
     119: iload_3
     120: bipush        70
     122: if_icmpgt     134
     125: iload_3
     126: bipush        -55
     128: iadd
     129: istore        4
     131: goto          153
     134: new           #9                  // class java/lang/IllegalArgumentException
     137: dup
     138: aload_0
     139: getfield      #1                  // Field val$pattern:Ljava/lang/String;
     142: aload_0
     143: getfield      #7                  // Field pos:I
     146: invokevirtual #10                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     149: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     152: athrow
     153: aload_0
     154: dup
     155: getfield      #7                  // Field pos:I
     158: iconst_1
     159: iadd
     160: putfield      #7                  // Field pos:I
     163: iload_2
     164: iconst_4
     165: ishl
     166: iload         4
     168: ior
     169: istore_2
     170: goto          52
     173: iload_2
     174: i2c
     175: ireturn

  private boolean isRepetitionStart(char);
    Code:
       0: iload_1
       1: lookupswitch  { // 4
                    42: 44
                    43: 44
                    63: 44
                   123: 44
               default: 46
          }
      44: iconst_1
      45: ireturn
      46: iconst_0
      47: ireturn

  private com.google.javascript.jscomp.regex.RegExpTree parseRepetition(com.google.javascript.jscomp.regex.RegExpTree);
    Code:
       0: aload_0
       1: getfield      #7                  // Field pos:I
       4: aload_0
       5: getfield      #6                  // Field limit:I
       8: if_icmpne     13
      11: aload_1
      12: areturn
      13: aload_0
      14: getfield      #1                  // Field val$pattern:Ljava/lang/String;
      17: aload_0
      18: getfield      #7                  // Field pos:I
      21: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
      24: lookupswitch  { // 4
                    42: 86
                    43: 68
                    63: 104
                   123: 121
               default: 284
          }
      68: aload_0
      69: dup
      70: getfield      #7                  // Field pos:I
      73: iconst_1
      74: iadd
      75: putfield      #7                  // Field pos:I
      78: iconst_1
      79: istore_2
      80: ldc           #71                 // int 2147483647
      82: istore_3
      83: goto          286
      86: aload_0
      87: dup
      88: getfield      #7                  // Field pos:I
      91: iconst_1
      92: iadd
      93: putfield      #7                  // Field pos:I
      96: iconst_0
      97: istore_2
      98: ldc           #71                 // int 2147483647
     100: istore_3
     101: goto          286
     104: aload_0
     105: dup
     106: getfield      #7                  // Field pos:I
     109: iconst_1
     110: iadd
     111: putfield      #7                  // Field pos:I
     114: iconst_0
     115: istore_2
     116: iconst_1
     117: istore_3
     118: goto          286
     121: aload_0
     122: dup
     123: getfield      #7                  // Field pos:I
     126: iconst_1
     127: iadd
     128: putfield      #7                  // Field pos:I
     131: aload_0
     132: getfield      #7                  // Field pos:I
     135: istore        4
     137: aload_0
     138: getfield      #1                  // Field val$pattern:Ljava/lang/String;
     141: bipush        125
     143: iload         4
     145: invokevirtual #72                 // Method java/lang/String.indexOf:(II)I
     148: istore        5
     150: iload         5
     152: ifge          165
     155: aload_0
     156: iload         4
     158: iconst_1
     159: isub
     160: putfield      #7                  // Field pos:I
     163: aload_1
     164: areturn
     165: aload_0
     166: getfield      #1                  // Field val$pattern:Ljava/lang/String;
     169: iload         4
     171: iload         5
     173: invokevirtual #22                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     176: astore        6
     178: aload_0
     179: iload         5
     181: iconst_1
     182: iadd
     183: putfield      #7                  // Field pos:I
     186: aload         6
     188: bipush        44
     190: invokevirtual #43                 // Method java/lang/String.indexOf:(I)I
     193: istore        7
     195: iload         7
     197: iflt          211
     200: aload         6
     202: iconst_0
     203: iload         7
     205: invokevirtual #22                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     208: goto          213
     211: aload         6
     213: invokestatic  #73                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     216: istore_2
     217: iload         7
     219: iflt          254
     222: iload         7
     224: iconst_1
     225: iadd
     226: aload         6
     228: invokevirtual #5                  // Method java/lang/String.length:()I
     231: if_icmpeq     249
     234: aload         6
     236: iload         7
     238: iconst_1
     239: iadd
     240: invokevirtual #10                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     243: invokestatic  #73                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     246: goto          255
     249: ldc           #71                 // int 2147483647
     251: goto          255
     254: iload_2
     255: istore_3
     256: goto          265
     259: astore        8
     261: iconst_m1
     262: dup
     263: istore_3
     264: istore_2
     265: iload_2
     266: iflt          274
     269: iload_2
     270: iload_3
     271: if_icmple     286
     274: aload_0
     275: iload         4
     277: iconst_1
     278: isub
     279: putfield      #7                  // Field pos:I
     282: aload_1
     283: areturn
     284: aload_1
     285: areturn
     286: iconst_1
     287: istore        4
     289: aload_0
     290: getfield      #7                  // Field pos:I
     293: aload_0
     294: getfield      #6                  // Field limit:I
     297: if_icmpge     329
     300: aload_0
     301: getfield      #1                  // Field val$pattern:Ljava/lang/String;
     304: aload_0
     305: getfield      #7                  // Field pos:I
     308: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
     311: bipush        63
     313: if_icmpne     329
     316: iconst_0
     317: istore        4
     319: aload_0
     320: dup
     321: getfield      #7                  // Field pos:I
     324: iconst_1
     325: iadd
     326: putfield      #7                  // Field pos:I
     329: new           #75                 // class com/google/javascript/jscomp/regex/RegExpTree$Repetition
     332: dup
     333: aload_1
     334: iload_2
     335: iload_3
     336: iload         4
     338: invokespecial #76                 // Method com/google/javascript/jscomp/regex/RegExpTree$Repetition."<init>":(Lcom/google/javascript/jscomp/regex/RegExpTree;IIZ)V
     341: areturn
    Exception table:
       from    to  target type
         195   256   259   Class java/lang/NumberFormatException
}
