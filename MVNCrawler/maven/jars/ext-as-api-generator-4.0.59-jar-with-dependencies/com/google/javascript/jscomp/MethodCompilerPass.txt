Compiled from "MethodCompilerPass.java"
abstract class com.google.javascript.jscomp.MethodCompilerPass implements com.google.javascript.jscomp.CompilerPass {
  final java.util.Set<java.lang.String> externMethods;

  final java.util.Set<java.lang.String> externMethodsWithoutSignatures;

  final java.util.Set<java.lang.String> nonMethodProperties;

  final com.google.common.collect.Multimap<java.lang.String, com.google.javascript.rhino.Node> methodDefinitions;

  final com.google.javascript.jscomp.AbstractCompiler compiler;

  com.google.javascript.jscomp.MethodCompilerPass(com.google.javascript.jscomp.AbstractCompiler);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #4                  // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
       8: putfield      #5                  // Field externMethods:Ljava/util/Set;
      11: aload_0
      12: invokestatic  #4                  // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
      15: putfield      #6                  // Field externMethodsWithoutSignatures:Ljava/util/Set;
      18: aload_0
      19: invokestatic  #4                  // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
      22: putfield      #7                  // Field nonMethodProperties:Ljava/util/Set;
      25: aload_0
      26: invokestatic  #8                  // Method com/google/common/collect/LinkedHashMultimap.create:()Lcom/google/common/collect/LinkedHashMultimap;
      29: putfield      #9                  // Field methodDefinitions:Lcom/google/common/collect/Multimap;
      32: aload_0
      33: aload_1
      34: putfield      #10                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      37: return

  public void process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #5                  // Field externMethods:Ljava/util/Set;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/Set.clear:()V
       9: aload_0
      10: getfield      #6                  // Field externMethodsWithoutSignatures:Ljava/util/Set;
      13: invokeinterface #11,  1           // InterfaceMethod java/util/Set.clear:()V
      18: aload_0
      19: invokevirtual #12                 // Method getSignatureStore:()Lcom/google/javascript/jscomp/MethodCompilerPass$SignatureStore;
      22: invokeinterface #13,  1           // InterfaceMethod com/google/javascript/jscomp/MethodCompilerPass$SignatureStore.reset:()V
      27: aload_0
      28: getfield      #9                  // Field methodDefinitions:Lcom/google/common/collect/Multimap;
      31: invokeinterface #14,  1           // InterfaceMethod com/google/common/collect/Multimap.clear:()V
      36: aload_1
      37: ifnull        57
      40: aload_0
      41: getfield      #10                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      44: aload_1
      45: new           #15                 // class com/google/javascript/jscomp/MethodCompilerPass$GetExternMethods
      48: dup
      49: aload_0
      50: aconst_null
      51: invokespecial #16                 // Method com/google/javascript/jscomp/MethodCompilerPass$GetExternMethods."<init>":(Lcom/google/javascript/jscomp/MethodCompilerPass;Lcom/google/javascript/jscomp/MethodCompilerPass$1;)V
      54: invokestatic  #17                 // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      57: iconst_2
      58: anewarray     #18                 // class com/google/javascript/rhino/Node
      61: dup
      62: iconst_0
      63: aload_1
      64: aastore
      65: dup
      66: iconst_1
      67: aload_2
      68: aastore
      69: invokestatic  #19                 // Method com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      72: astore_3
      73: aload_0
      74: getfield      #10                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      77: iconst_2
      78: anewarray     #18                 // class com/google/javascript/rhino/Node
      81: dup
      82: iconst_0
      83: aload_1
      84: aastore
      85: dup
      86: iconst_1
      87: aload_2
      88: aastore
      89: invokestatic  #19                 // Method com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
      92: new           #20                 // class com/google/javascript/jscomp/MethodCompilerPass$GatherSignatures
      95: dup
      96: aload_0
      97: aconst_null
      98: invokespecial #21                 // Method com/google/javascript/jscomp/MethodCompilerPass$GatherSignatures."<init>":(Lcom/google/javascript/jscomp/MethodCompilerPass;Lcom/google/javascript/jscomp/MethodCompilerPass$1;)V
     101: invokestatic  #22                 // Method com/google/javascript/jscomp/NodeTraversal.traverseRoots:(Lcom/google/javascript/jscomp/AbstractCompiler;Ljava/util/List;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
     104: aload_0
     105: getfield      #10                 // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
     108: aload_3
     109: aload_0
     110: invokevirtual #23                 // Method getActingCallback:()Lcom/google/javascript/jscomp/NodeTraversal$Callback;
     113: invokestatic  #22                 // Method com/google/javascript/jscomp/NodeTraversal.traverseRoots:(Lcom/google/javascript/jscomp/AbstractCompiler;Ljava/util/List;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
     116: return

  abstract com.google.javascript.jscomp.NodeTraversal$Callback getActingCallback();

  abstract com.google.javascript.jscomp.MethodCompilerPass$SignatureStore getSignatureStore();

  private void addPossibleSignature(java.lang.String, com.google.javascript.rhino.Node, com.google.javascript.jscomp.NodeTraversal);
    Code:
       0: aload_2
       1: invokevirtual #24                 // Method com/google/javascript/rhino/Node.isFunction:()Z
       4: ifeq          20
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokevirtual #25                 // Method com/google/javascript/jscomp/NodeTraversal.getSourceName:()Ljava/lang/String;
      14: invokespecial #2                  // Method addSignature:(Ljava/lang/String;Lcom/google/javascript/rhino/Node;Ljava/lang/String;)V
      17: goto          31
      20: aload_0
      21: getfield      #7                  // Field nonMethodProperties:Ljava/util/Set;
      24: aload_1
      25: invokeinterface #26,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      30: pop
      31: return

  private void addSignature(java.lang.String, com.google.javascript.rhino.Node, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field externMethodsWithoutSignatures:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ifeq          14
      13: return
      14: aload_0
      15: invokevirtual #12                 // Method getSignatureStore:()Lcom/google/javascript/jscomp/MethodCompilerPass$SignatureStore;
      18: aload_1
      19: aload_2
      20: aload_3
      21: invokeinterface #28,  4           // InterfaceMethod com/google/javascript/jscomp/MethodCompilerPass$SignatureStore.addSignature:(Ljava/lang/String;Lcom/google/javascript/rhino/Node;Ljava/lang/String;)V
      26: aload_0
      27: getfield      #9                  // Field methodDefinitions:Lcom/google/common/collect/Multimap;
      30: aload_1
      31: aload_2
      32: invokeinterface #29,  3           // InterfaceMethod com/google/common/collect/Multimap.put:(Ljava/lang/Object;Ljava/lang/Object;)Z
      37: pop
      38: return

  static void access$200(com.google.javascript.jscomp.MethodCompilerPass, java.lang.String, com.google.javascript.rhino.Node, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #2                  // Method addSignature:(Ljava/lang/String;Lcom/google/javascript/rhino/Node;Ljava/lang/String;)V
       7: return

  static void access$300(com.google.javascript.jscomp.MethodCompilerPass, java.lang.String, com.google.javascript.rhino.Node, com.google.javascript.jscomp.NodeTraversal);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method addPossibleSignature:(Ljava/lang/String;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal;)V
       7: return
}
