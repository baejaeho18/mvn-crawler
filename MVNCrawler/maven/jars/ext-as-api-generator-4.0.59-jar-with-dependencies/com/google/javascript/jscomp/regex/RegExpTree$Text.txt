Compiled from "RegExpTree.java"
final class com.google.javascript.jscomp.regex.RegExpTree$Text extends com.google.javascript.jscomp.regex.RegExpTree$RegExpTreeAtom {
  final java.lang.String text;

  com.google.javascript.jscomp.regex.RegExpTree$Text(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/javascript/jscomp/regex/RegExpTree$RegExpTreeAtom."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field text:Ljava/lang/String;
       9: return

  private static void escapeRegularCharOnto(char, int, java.lang.StringBuilder);
    Code:
       0: iload_0
       1: lookupswitch  { // 12
                    36: 108
                    40: 108
                    41: 108
                    42: 108
                    43: 108
                    46: 108
                    47: 108
                    63: 108
                    91: 108
                    94: 108
                   123: 122
                   124: 108
               default: 150
          }
     108: aload_2
     109: bipush        92
     111: invokevirtual #3                  // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     114: iload_0
     115: invokevirtual #3                  // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     118: pop
     119: goto          155
     122: bipush        48
     124: iload_1
     125: if_icmpgt     141
     128: iload_1
     129: bipush        57
     131: if_icmpgt     141
     134: aload_2
     135: bipush        92
     137: invokevirtual #3                  // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     140: pop
     141: aload_2
     142: iload_0
     143: invokevirtual #3                  // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     146: pop
     147: goto          155
     150: iload_0
     151: aload_2
     152: invokestatic  #4                  // Method escapeCharOnto:(CLjava/lang/StringBuilder;)V
     155: return

  public com.google.javascript.jscomp.regex.RegExpTree simplify(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field text:Ljava/lang/String;
       4: invokevirtual #5                  // Method java/lang/String.length:()I
       7: istore_2
       8: iload_2
       9: ifne          16
      12: getstatic     #6                  // Field com/google/javascript/jscomp/regex/RegExpTree$Empty.INSTANCE:Lcom/google/javascript/jscomp/regex/RegExpTree$Empty;
      15: areturn
      16: aload_1
      17: bipush        105
      19: invokevirtual #7                  // Method java/lang/String.indexOf:(I)I
      22: iflt          50
      25: aload_0
      26: getfield      #2                  // Field text:Ljava/lang/String;
      29: invokestatic  #8                  // Method com/google/javascript/jscomp/regex/CaseCanonicalize.caseCanonicalize:(Ljava/lang/String;)Ljava/lang/String;
      32: astore_3
      33: aload_0
      34: getfield      #2                  // Field text:Ljava/lang/String;
      37: aload_3
      38: if_acmpeq     50
      41: new           #9                  // class com/google/javascript/jscomp/regex/RegExpTree$Text
      44: dup
      45: aload_3
      46: invokespecial #10                 // Method "<init>":(Ljava/lang/String;)V
      49: areturn
      50: aload_0
      51: areturn

  public boolean isCaseSensitive();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #2                  // Field text:Ljava/lang/String;
       6: invokevirtual #5                  // Method java/lang/String.length:()I
       9: istore_2
      10: iload_1
      11: iload_2
      12: if_icmpge     40
      15: getstatic     #11                 // Field com/google/javascript/jscomp/regex/CaseCanonicalize.CASE_SENSITIVE:Lcom/google/javascript/jscomp/regex/CharRanges;
      18: aload_0
      19: getfield      #2                  // Field text:Ljava/lang/String;
      22: iload_1
      23: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
      26: invokevirtual #13                 // Method com/google/javascript/jscomp/regex/CharRanges.contains:(I)Z
      29: ifeq          34
      32: iconst_1
      33: ireturn
      34: iinc          1, 1
      37: goto          10
      40: iconst_0
      41: ireturn

  protected void appendSourceCode(java.lang.StringBuilder);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #2                  // Field text:Ljava/lang/String;
       6: invokevirtual #5                  // Method java/lang/String.length:()I
       9: istore_3
      10: iload_2
      11: iload_3
      12: if_icmpge     54
      15: aload_0
      16: getfield      #2                  // Field text:Ljava/lang/String;
      19: iload_2
      20: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
      23: iload_2
      24: iconst_1
      25: iadd
      26: iload_3
      27: if_icmpge     43
      30: aload_0
      31: getfield      #2                  // Field text:Ljava/lang/String;
      34: iload_2
      35: iconst_1
      36: iadd
      37: invokevirtual #12                 // Method java/lang/String.charAt:(I)C
      40: goto          44
      43: iconst_m1
      44: aload_1
      45: invokestatic  #14                 // Method escapeRegularCharOnto:(CILjava/lang/StringBuilder;)V
      48: iinc          2, 1
      51: goto          10
      54: return

  protected void appendDebugInfo(java.lang.StringBuilder);
    Code:
       0: aload_1
       1: bipush        96
       3: invokevirtual #3                  // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       6: aload_0
       7: getfield      #2                  // Field text:Ljava/lang/String;
      10: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: bipush        96
      15: invokevirtual #3                  // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      18: pop
      19: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #9                  // class com/google/javascript/jscomp/regex/RegExpTree$Text
       4: ifeq          28
       7: aload_0
       8: getfield      #2                  // Field text:Ljava/lang/String;
      11: aload_1
      12: checkcast     #9                  // class com/google/javascript/jscomp/regex/RegExpTree$Text
      15: getfield      #2                  // Field text:Ljava/lang/String;
      18: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field text:Ljava/lang/String;
       4: invokevirtual #17                 // Method java/lang/String.hashCode:()I
       7: ldc           #18                 // int 102228752
       9: ixor
      10: ireturn
}
