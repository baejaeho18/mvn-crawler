Compiled from "RenameLabels.java"
class com.google.javascript.jscomp.RenameLabels$ProcessLabels implements com.google.javascript.jscomp.NodeTraversal$ScopedCallback {
  final java.util.Deque<com.google.javascript.jscomp.RenameLabels$LabelNamespace> namespaceStack;

  final java.util.ArrayList<java.lang.String> names;

  final com.google.javascript.jscomp.RenameLabels this$0;

  com.google.javascript.jscomp.RenameLabels$ProcessLabels(com.google.javascript.jscomp.RenameLabels);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/RenameLabels;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #3                  // class java/util/ArrayDeque
      13: dup
      14: invokespecial #4                  // Method java/util/ArrayDeque."<init>":()V
      17: putfield      #5                  // Field namespaceStack:Ljava/util/Deque;
      20: aload_0
      21: new           #6                  // class java/util/ArrayList
      24: dup
      25: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      28: putfield      #8                  // Field names:Ljava/util/ArrayList;
      31: aload_0
      32: getfield      #5                  // Field namespaceStack:Ljava/util/Deque;
      35: new           #9                  // class com/google/javascript/jscomp/RenameLabels$LabelNamespace
      38: dup
      39: aconst_null
      40: invokespecial #10                 // Method com/google/javascript/jscomp/RenameLabels$LabelNamespace."<init>":(Lcom/google/javascript/jscomp/RenameLabels$1;)V
      43: invokeinterface #11,  2           // InterfaceMethod java/util/Deque.push:(Ljava/lang/Object;)V
      48: return

  public void enterScope(com.google.javascript.jscomp.NodeTraversal);
    Code:
       0: aload_0
       1: getfield      #5                  // Field namespaceStack:Ljava/util/Deque;
       4: new           #9                  // class com/google/javascript/jscomp/RenameLabels$LabelNamespace
       7: dup
       8: aconst_null
       9: invokespecial #10                 // Method com/google/javascript/jscomp/RenameLabels$LabelNamespace."<init>":(Lcom/google/javascript/jscomp/RenameLabels$1;)V
      12: invokeinterface #11,  2           // InterfaceMethod java/util/Deque.push:(Ljava/lang/Object;)V
      17: return

  public void exitScope(com.google.javascript.jscomp.NodeTraversal);
    Code:
       0: aload_0
       1: getfield      #5                  // Field namespaceStack:Ljava/util/Deque;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/Deque.pop:()Ljava/lang/Object;
       9: pop
      10: return

  public boolean shouldTraverse(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: invokevirtual #13                 // Method com/google/javascript/rhino/Node.isLabel:()Z
       4: ifeq          173
       7: aload_0
       8: getfield      #5                  // Field namespaceStack:Ljava/util/Deque;
      11: invokeinterface #14,  1           // InterfaceMethod java/util/Deque.peek:()Ljava/lang/Object;
      16: checkcast     #9                  // class com/google/javascript/jscomp/RenameLabels$LabelNamespace
      19: astore        4
      21: aload         4
      23: getfield      #15                 // Field com/google/javascript/jscomp/RenameLabels$LabelNamespace.renameMap:Ljava/util/Map;
      26: invokeinterface #16,  1           // InterfaceMethod java/util/Map.size:()I
      31: iconst_1
      32: iadd
      33: istore        5
      35: aload_2
      36: invokevirtual #17                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      39: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      42: astore        6
      44: new           #19                 // class com/google/javascript/jscomp/RenameLabels$LabelInfo
      47: dup
      48: iload         5
      50: invokespecial #20                 // Method com/google/javascript/jscomp/RenameLabels$LabelInfo."<init>":(I)V
      53: astore        7
      55: aload         4
      57: getfield      #15                 // Field com/google/javascript/jscomp/RenameLabels$LabelNamespace.renameMap:Ljava/util/Map;
      60: aload         6
      62: invokeinterface #21,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      67: ifne          74
      70: iconst_1
      71: goto          75
      74: iconst_0
      75: invokestatic  #22                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      78: aload         4
      80: getfield      #15                 // Field com/google/javascript/jscomp/RenameLabels$LabelNamespace.renameMap:Ljava/util/Map;
      83: aload         6
      85: aload         7
      87: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      92: pop
      93: aload_0
      94: getfield      #8                  // Field names:Ljava/util/ArrayList;
      97: invokevirtual #24                 // Method java/util/ArrayList.size:()I
     100: iload         5
     102: if_icmpge     125
     105: aload_0
     106: getfield      #8                  // Field names:Ljava/util/ArrayList;
     109: aload_0
     110: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/RenameLabels;
     113: invokestatic  #25                 // Method com/google/javascript/jscomp/RenameLabels.access$300:(Lcom/google/javascript/jscomp/RenameLabels;)Lcom/google/common/base/Supplier;
     116: invokeinterface #26,  1           // InterfaceMethod com/google/common/base/Supplier.get:()Ljava/lang/Object;
     121: invokevirtual #27                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     124: pop
     125: aload_0
     126: iload         5
     128: invokevirtual #28                 // Method getNameForId:(I)Ljava/lang/String;
     131: astore        8
     133: aload_0
     134: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/RenameLabels;
     137: invokestatic  #29                 // Method com/google/javascript/jscomp/RenameLabels.access$400:(Lcom/google/javascript/jscomp/RenameLabels;)Lcom/google/javascript/jscomp/AbstractCompiler;
     140: new           #30                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #32                 // String label renamed:
     149: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload         6
     154: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     157: ldc           #34                 // String  =>
     159: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: aload         8
     164: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     170: invokevirtual #36                 // Method com/google/javascript/jscomp/AbstractCompiler.addToDebugLog:(Ljava/lang/String;)V
     173: iconst_1
     174: ireturn

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: invokevirtual #37                 // Method com/google/javascript/rhino/Node.getType:()I
       4: lookupswitch  { // 3
                   116: 49
                   117: 49
                   126: 40
               default: 54
          }
      40: aload_0
      41: aload_2
      42: aload_3
      43: invokespecial #38                 // Method visitLabel:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      46: goto          54
      49: aload_0
      50: aload_2
      51: invokespecial #39                 // Method visitBreakOrContinue:(Lcom/google/javascript/rhino/Node;)V
      54: return

  private void visitBreakOrContinue(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #17                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
       4: astore_2
       5: aload_2
       6: ifnull        83
       9: aload_2
      10: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      13: astore_3
      14: aload_3
      15: invokevirtual #40                 // Method java/lang/String.isEmpty:()Z
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: invokestatic  #22                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      29: aload_0
      30: aload_3
      31: invokevirtual #41                 // Method getLabelInfo:(Ljava/lang/String;)Lcom/google/javascript/jscomp/RenameLabels$LabelInfo;
      34: astore        4
      36: aload         4
      38: ifnull        83
      41: aload_0
      42: aload         4
      44: getfield      #42                 // Field com/google/javascript/jscomp/RenameLabels$LabelInfo.id:I
      47: invokevirtual #28                 // Method getNameForId:(I)Ljava/lang/String;
      50: astore        5
      52: aload         4
      54: iconst_1
      55: putfield      #43                 // Field com/google/javascript/jscomp/RenameLabels$LabelInfo.referenced:Z
      58: aload_3
      59: aload         5
      61: invokevirtual #44                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      64: ifne          83
      67: aload_2
      68: aload         5
      70: invokevirtual #45                 // Method com/google/javascript/rhino/Node.setString:(Ljava/lang/String;)V
      73: aload_0
      74: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/RenameLabels;
      77: invokestatic  #29                 // Method com/google/javascript/jscomp/RenameLabels.access$400:(Lcom/google/javascript/jscomp/RenameLabels;)Lcom/google/javascript/jscomp/AbstractCompiler;
      80: invokevirtual #46                 // Method com/google/javascript/jscomp/AbstractCompiler.reportCodeChange:()V
      83: return

  private void visitLabel(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #17                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
       4: astore_3
       5: aload_3
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokestatic  #22                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      17: aload_3
      18: invokevirtual #18                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      21: astore        4
      23: aload_0
      24: aload         4
      26: invokevirtual #41                 // Method getLabelInfo:(Ljava/lang/String;)Lcom/google/javascript/jscomp/RenameLabels$LabelInfo;
      29: astore        5
      31: aload         5
      33: getfield      #43                 // Field com/google/javascript/jscomp/RenameLabels$LabelInfo.referenced:Z
      36: ifne          49
      39: aload_0
      40: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/RenameLabels;
      43: invokestatic  #47                 // Method com/google/javascript/jscomp/RenameLabels.access$500:(Lcom/google/javascript/jscomp/RenameLabels;)Z
      46: ifne          89
      49: aload_0
      50: aload         5
      52: getfield      #42                 // Field com/google/javascript/jscomp/RenameLabels$LabelInfo.id:I
      55: invokevirtual #28                 // Method getNameForId:(I)Ljava/lang/String;
      58: astore        6
      60: aload         4
      62: aload         6
      64: invokevirtual #44                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      67: ifne          86
      70: aload_3
      71: aload         6
      73: invokevirtual #45                 // Method com/google/javascript/rhino/Node.setString:(Ljava/lang/String;)V
      76: aload_0
      77: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/RenameLabels;
      80: invokestatic  #29                 // Method com/google/javascript/jscomp/RenameLabels.access$400:(Lcom/google/javascript/jscomp/RenameLabels;)Lcom/google/javascript/jscomp/AbstractCompiler;
      83: invokevirtual #46                 // Method com/google/javascript/jscomp/AbstractCompiler.reportCodeChange:()V
      86: goto          132
      89: aload_1
      90: invokevirtual #48                 // Method com/google/javascript/rhino/Node.getLastChild:()Lcom/google/javascript/rhino/Node;
      93: astore        6
      95: aload_1
      96: aload         6
      98: invokevirtual #49                 // Method com/google/javascript/rhino/Node.removeChild:(Lcom/google/javascript/rhino/Node;)V
     101: aload_2
     102: aload_1
     103: aload         6
     105: invokevirtual #50                 // Method com/google/javascript/rhino/Node.replaceChild:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
     108: aload         6
     110: invokevirtual #51                 // Method com/google/javascript/rhino/Node.isBlock:()Z
     113: ifeq          122
     116: aload         6
     118: invokestatic  #52                 // Method com/google/javascript/jscomp/NodeUtil.tryMergeBlock:(Lcom/google/javascript/rhino/Node;)Z
     121: pop
     122: aload_0
     123: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/RenameLabels;
     126: invokestatic  #29                 // Method com/google/javascript/jscomp/RenameLabels.access$400:(Lcom/google/javascript/jscomp/RenameLabels;)Lcom/google/javascript/jscomp/AbstractCompiler;
     129: invokevirtual #46                 // Method com/google/javascript/jscomp/AbstractCompiler.reportCodeChange:()V
     132: aload_0
     133: getfield      #5                  // Field namespaceStack:Ljava/util/Deque;
     136: invokeinterface #14,  1           // InterfaceMethod java/util/Deque.peek:()Ljava/lang/Object;
     141: checkcast     #9                  // class com/google/javascript/jscomp/RenameLabels$LabelNamespace
     144: getfield      #15                 // Field com/google/javascript/jscomp/RenameLabels$LabelNamespace.renameMap:Ljava/util/Map;
     147: aload         4
     149: invokeinterface #53,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     154: pop
     155: return

  java.lang.String getNameForId(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field names:Ljava/util/ArrayList;
       4: iload_1
       5: iconst_1
       6: isub
       7: invokevirtual #54                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      10: checkcast     #55                 // class java/lang/String
      13: areturn

  com.google.javascript.jscomp.RenameLabels$LabelInfo getLabelInfo(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field namespaceStack:Ljava/util/Deque;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/Deque.peek:()Ljava/lang/Object;
       9: checkcast     #9                  // class com/google/javascript/jscomp/RenameLabels$LabelNamespace
      12: getfield      #15                 // Field com/google/javascript/jscomp/RenameLabels$LabelNamespace.renameMap:Ljava/util/Map;
      15: aload_1
      16: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #19                 // class com/google/javascript/jscomp/RenameLabels$LabelInfo
      24: areturn
}
