Compiled from "ReplaceIdGenerators.java"
class com.google.javascript.jscomp.ReplaceIdGenerators implements com.google.javascript.jscomp.CompilerPass {
  static final com.google.javascript.jscomp.DiagnosticType NON_GLOBAL_ID_GENERATOR_CALL;

  static final com.google.javascript.jscomp.DiagnosticType CONDITIONAL_ID_GENERATOR_CALL;

  static final com.google.javascript.jscomp.DiagnosticType CONFLICTING_GENERATOR_TYPE;

  static final com.google.javascript.jscomp.DiagnosticType INVALID_GENERATOR_ID_MAPPING;

  static final com.google.javascript.jscomp.DiagnosticType MISSING_NAME_MAP_FOR_GENERATOR;

  static final com.google.javascript.jscomp.DiagnosticType INVALID_GENERATOR_PARAMETER;

  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  private final java.util.Map<java.lang.String, com.google.javascript.jscomp.ReplaceIdGenerators$NameSupplier> nameGenerators;

  private final java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>> consistNameMap;

  private final java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>> idGeneratorMaps;

  private final java.util.Map<java.lang.String, com.google.common.collect.BiMap<java.lang.String, java.lang.String>> previousMap;

  private final boolean generatePseudoNames;

  public static final com.google.javascript.jscomp.RenamingMap UNIQUE;

  public com.google.javascript.jscomp.ReplaceIdGenerators(com.google.javascript.jscomp.AbstractCompiler, java.util.Map<java.lang.String, com.google.javascript.jscomp.RenamingMap>, boolean, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #6                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       9: aload_0
      10: iload_3
      11: putfield      #8                  // Field generatePseudoNames:Z
      14: aload_0
      15: invokestatic  #9                  // Method com/google/common/collect/Maps.newLinkedHashMap:()Ljava/util/LinkedHashMap;
      18: putfield      #2                  // Field nameGenerators:Ljava/util/Map;
      21: aload_0
      22: invokestatic  #9                  // Method com/google/common/collect/Maps.newLinkedHashMap:()Ljava/util/LinkedHashMap;
      25: putfield      #1                  // Field idGeneratorMaps:Ljava/util/Map;
      28: aload_0
      29: invokestatic  #9                  // Method com/google/common/collect/Maps.newLinkedHashMap:()Ljava/util/LinkedHashMap;
      32: putfield      #5                  // Field consistNameMap:Ljava/util/Map;
      35: aload_0
      36: aload         4
      38: invokespecial #10                 // Method parsePreviousResults:(Ljava/lang/String;)Ljava/util/Map;
      41: astore        5
      43: aload_0
      44: aload         5
      46: putfield      #4                  // Field previousMap:Ljava/util/Map;
      49: aload_2
      50: ifnull        192
      53: aload_2
      54: invokeinterface #11,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      59: invokeinterface #12,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      64: astore        6
      66: aload         6
      68: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      73: ifeq          192
      76: aload         6
      78: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      83: checkcast     #15                 // class java/util/Map$Entry
      86: astore        7
      88: aload         7
      90: invokeinterface #16,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      95: checkcast     #17                 // class java/lang/String
      98: astore        8
     100: aload         7
     102: invokeinterface #18,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     107: checkcast     #19                 // class com/google/javascript/jscomp/RenamingMap
     110: astore        9
     112: aload         9
     114: instanceof    #20                 // class com/google/javascript/jscomp/ReplaceIdGenerators$UniqueRenamingToken
     117: ifeq          154
     120: aload_0
     121: getfield      #2                  // Field nameGenerators:Ljava/util/Map;
     124: aload         8
     126: aload_0
     127: getstatic     #21                 // Field com/google/javascript/jscomp/ReplaceIdGenerators$RenameStrategy.INCONSISTENT:Lcom/google/javascript/jscomp/ReplaceIdGenerators$RenameStrategy;
     130: aload         5
     132: aload         8
     134: invokeinterface #22,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     139: checkcast     #23                 // class com/google/common/collect/BiMap
     142: invokespecial #3                  // Method createNameSupplier:(Lcom/google/javascript/jscomp/ReplaceIdGenerators$RenameStrategy;Lcom/google/common/collect/BiMap;)Lcom/google/javascript/jscomp/ReplaceIdGenerators$NameSupplier;
     145: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     150: pop
     151: goto          174
     154: aload_0
     155: getfield      #2                  // Field nameGenerators:Ljava/util/Map;
     158: aload         8
     160: getstatic     #25                 // Field com/google/javascript/jscomp/ReplaceIdGenerators$RenameStrategy.MAPPED:Lcom/google/javascript/jscomp/ReplaceIdGenerators$RenameStrategy;
     163: aload         9
     165: invokestatic  #26                 // Method createNameSupplier:(Lcom/google/javascript/jscomp/ReplaceIdGenerators$RenameStrategy;Lcom/google/javascript/jscomp/RenamingMap;)Lcom/google/javascript/jscomp/ReplaceIdGenerators$NameSupplier;
     168: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     173: pop
     174: aload_0
     175: getfield      #1                  // Field idGeneratorMaps:Ljava/util/Map;
     178: aload         8
     180: invokestatic  #9                  // Method com/google/common/collect/Maps.newLinkedHashMap:()Ljava/util/LinkedHashMap;
     183: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     188: pop
     189: goto          66
     192: return

  private com.google.javascript.jscomp.ReplaceIdGenerators$NameSupplier createNameSupplier(com.google.javascript.jscomp.ReplaceIdGenerators$RenameStrategy, com.google.common.collect.BiMap<java.lang.String, java.lang.String>);
    Code:
       0: aload_2
       1: ifnull        8
       4: aload_2
       5: goto          11
       8: invokestatic  #27                 // Method com/google/common/collect/ImmutableBiMap.of:()Lcom/google/common/collect/ImmutableBiMap;
      11: astore_2
      12: aload_1
      13: getstatic     #28                 // Field com/google/javascript/jscomp/ReplaceIdGenerators$RenameStrategy.STABLE:Lcom/google/javascript/jscomp/ReplaceIdGenerators$RenameStrategy;
      16: if_acmpne     28
      19: new           #29                 // class com/google/javascript/jscomp/ReplaceIdGenerators$StableNameSupplier
      22: dup
      23: aconst_null
      24: invokespecial #30                 // Method com/google/javascript/jscomp/ReplaceIdGenerators$StableNameSupplier."<init>":(Lcom/google/javascript/jscomp/ReplaceIdGenerators$1;)V
      27: areturn
      28: aload_0
      29: getfield      #8                  // Field generatePseudoNames:Z
      32: ifeq          44
      35: new           #31                 // class com/google/javascript/jscomp/ReplaceIdGenerators$PseudoNameSuppier
      38: dup
      39: aload_1
      40: invokespecial #32                 // Method com/google/javascript/jscomp/ReplaceIdGenerators$PseudoNameSuppier."<init>":(Lcom/google/javascript/jscomp/ReplaceIdGenerators$RenameStrategy;)V
      43: areturn
      44: new           #33                 // class com/google/javascript/jscomp/ReplaceIdGenerators$ObfuscatedNameSuppier
      47: dup
      48: aload_1
      49: aload_2
      50: invokespecial #34                 // Method com/google/javascript/jscomp/ReplaceIdGenerators$ObfuscatedNameSuppier."<init>":(Lcom/google/javascript/jscomp/ReplaceIdGenerators$RenameStrategy;Lcom/google/common/collect/BiMap;)V
      53: areturn

  private static com.google.javascript.jscomp.ReplaceIdGenerators$NameSupplier createNameSupplier(com.google.javascript.jscomp.ReplaceIdGenerators$RenameStrategy, com.google.javascript.jscomp.RenamingMap);
    Code:
       0: aload_0
       1: getstatic     #25                 // Field com/google/javascript/jscomp/ReplaceIdGenerators$RenameStrategy.MAPPED:Lcom/google/javascript/jscomp/ReplaceIdGenerators$RenameStrategy;
       4: if_acmpne     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #35                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: new           #36                 // class com/google/javascript/jscomp/ReplaceIdGenerators$MappedNameSupplier
      18: dup
      19: aload_1
      20: invokespecial #37                 // Method com/google/javascript/jscomp/ReplaceIdGenerators$MappedNameSupplier."<init>":(Lcom/google/javascript/jscomp/RenamingMap;)V
      23: areturn

  public void process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #6                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: aload_2
       5: new           #38                 // class com/google/javascript/jscomp/ReplaceIdGenerators$GatherGenerators
       8: dup
       9: aload_0
      10: aconst_null
      11: invokespecial #39                 // Method com/google/javascript/jscomp/ReplaceIdGenerators$GatherGenerators."<init>":(Lcom/google/javascript/jscomp/ReplaceIdGenerators;Lcom/google/javascript/jscomp/ReplaceIdGenerators$1;)V
      14: invokestatic  #40                 // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      17: aload_0
      18: getfield      #2                  // Field nameGenerators:Ljava/util/Map;
      21: invokeinterface #41,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      26: ifne          46
      29: aload_0
      30: getfield      #6                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      33: aload_2
      34: new           #42                 // class com/google/javascript/jscomp/ReplaceIdGenerators$ReplaceGenerators
      37: dup
      38: aload_0
      39: aconst_null
      40: invokespecial #43                 // Method com/google/javascript/jscomp/ReplaceIdGenerators$ReplaceGenerators."<init>":(Lcom/google/javascript/jscomp/ReplaceIdGenerators;Lcom/google/javascript/jscomp/ReplaceIdGenerators$1;)V
      43: invokestatic  #40                 // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      46: return

  public java.lang.String getSerializedIdMappings();
    Code:
       0: new           #44                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #1                  // Field idGeneratorMaps:Ljava/util/Map;
      12: invokeinterface #11,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      17: invokeinterface #12,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          187
      32: aload_2
      33: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #15                 // class java/util/Map$Entry
      41: astore_3
      42: aload_3
      43: invokeinterface #18,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      48: checkcast     #46                 // class java/util/Map
      51: invokeinterface #41,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      56: ifne          184
      59: aload_1
      60: ldc           #47                 // String [
      62: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: pop
      66: aload_1
      67: aload_3
      68: invokeinterface #16,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      73: checkcast     #17                 // class java/lang/String
      76: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: pop
      80: aload_1
      81: ldc           #49                 // String ]\n\n
      83: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: pop
      87: aload_3
      88: invokeinterface #18,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      93: checkcast     #46                 // class java/util/Map
      96: invokeinterface #11,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     101: invokeinterface #12,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     106: astore        4
     108: aload         4
     110: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     115: ifeq          177
     118: aload         4
     120: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     125: checkcast     #15                 // class java/util/Map$Entry
     128: astore        5
     130: aload_1
     131: aload         5
     133: invokeinterface #16,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     138: checkcast     #17                 // class java/lang/String
     141: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: pop
     145: aload_1
     146: bipush        58
     148: invokevirtual #50                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     151: pop
     152: aload_1
     153: aload         5
     155: invokeinterface #18,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     160: checkcast     #17                 // class java/lang/String
     163: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: pop
     167: aload_1
     168: ldc           #51                 // String \n
     170: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: pop
     174: goto          108
     177: aload_1
     178: ldc           #51                 // String \n
     180: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     183: pop
     184: goto          23
     187: aload_1
     188: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     191: areturn

  private java.util.Map<java.lang.String, com.google.common.collect.BiMap<java.lang.String, java.lang.String>> parsePreviousResults(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #53                 // Method java/lang/String.isEmpty:()Z
       8: ifeq          15
      11: invokestatic  #54                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      14: areturn
      15: invokestatic  #55                 // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
      18: astore_2
      19: new           #56                 // class java/io/BufferedReader
      22: dup
      23: new           #57                 // class java/io/StringReader
      26: dup
      27: aload_1
      28: invokespecial #58                 // Method java/io/StringReader."<init>":(Ljava/lang/String;)V
      31: invokespecial #59                 // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
      34: astore_3
      35: aconst_null
      36: astore        4
      38: iconst_0
      39: istore        6
      41: aload_3
      42: invokevirtual #60                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;
      45: dup
      46: astore        5
      48: ifnull        212
      51: iinc          6, 1
      54: aload         5
      56: invokevirtual #53                 // Method java/lang/String.isEmpty:()Z
      59: ifeq          65
      62: goto          41
      65: aload         5
      67: iconst_0
      68: invokevirtual #61                 // Method java/lang/String.charAt:(I)C
      71: bipush        91
      73: if_icmpne     142
      76: aload         5
      78: iconst_1
      79: aload         5
      81: invokevirtual #62                 // Method java/lang/String.length:()I
      84: iconst_1
      85: isub
      86: invokevirtual #63                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      89: astore        7
      91: aload_2
      92: aload         7
      94: invokeinterface #22,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      99: checkcast     #23                 // class com/google/common/collect/BiMap
     102: astore        4
     104: aload         4
     106: ifnonnull     128
     109: invokestatic  #64                 // Method com/google/common/collect/HashBiMap.create:()Lcom/google/common/collect/HashBiMap;
     112: astore        4
     114: aload_2
     115: aload         7
     117: aload         4
     119: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     124: pop
     125: goto          139
     128: aload         5
     130: iload         6
     132: invokestatic  #65                 // Method reportInvalidLine:(Ljava/lang/String;I)V
     135: invokestatic  #54                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
     138: areturn
     139: goto          41
     142: aload         5
     144: bipush        58
     146: invokevirtual #66                 // Method java/lang/String.indexOf:(I)I
     149: istore        7
     151: iload         7
     153: iconst_m1
     154: if_icmpeq     198
     157: aload         5
     159: iconst_0
     160: iload         7
     162: invokevirtual #63                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     165: astore        8
     167: aload         5
     169: iload         7
     171: iconst_1
     172: iadd
     173: aload         5
     175: invokevirtual #62                 // Method java/lang/String.length:()I
     178: invokevirtual #63                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     181: astore        9
     183: aload         4
     185: aload         8
     187: aload         9
     189: invokeinterface #67,  3           // InterfaceMethod com/google/common/collect/BiMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     194: pop
     195: goto          209
     198: aload         5
     200: iload         6
     202: invokestatic  #65                 // Method reportInvalidLine:(Ljava/lang/String;I)V
     205: invokestatic  #54                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
     208: areturn
     209: goto          41
     212: goto          236
     215: astore        7
     217: getstatic     #69                 // Field INVALID_GENERATOR_ID_MAPPING:Lcom/google/javascript/jscomp/DiagnosticType;
     220: iconst_1
     221: anewarray     #17                 // class java/lang/String
     224: dup
     225: iconst_0
     226: aload         7
     228: invokevirtual #70                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     231: aastore
     232: invokestatic  #71                 // Method com/google/javascript/jscomp/JSError.make:(Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)Lcom/google/javascript/jscomp/JSError;
     235: pop
     236: aload_2
     237: areturn
    Exception table:
       from    to  target type
          41   138   215   Class java/io/IOException
         139   208   215   Class java/io/IOException
         209   212   215   Class java/io/IOException

  private static void reportInvalidLine(java.lang.String, int);
    Code:
       0: getstatic     #69                 // Field INVALID_GENERATOR_ID_MAPPING:Lcom/google/javascript/jscomp/DiagnosticType;
       3: iconst_1
       4: anewarray     #17                 // class java/lang/String
       7: dup
       8: iconst_0
       9: new           #44                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #72                 // String line(
      18: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #73                 // String ):
      27: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: iload_1
      31: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: aastore
      38: invokestatic  #71                 // Method com/google/javascript/jscomp/JSError.make:(Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)Lcom/google/javascript/jscomp/JSError;
      41: pop
      42: return

  static java.lang.String getIdForGeneratorNode(boolean, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #75                 // Method com/google/javascript/rhino/Node.isString:()Z
       4: ifne          14
       7: aload_1
       8: invokevirtual #76                 // Method com/google/javascript/rhino/Node.isStringKey:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokestatic  #35                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      22: iload_0
      23: ifeq          31
      26: aload_1
      27: invokevirtual #77                 // Method com/google/javascript/rhino/Node.getString:()Ljava/lang/String;
      30: areturn
      31: new           #44                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
      38: aload_1
      39: invokevirtual #78                 // Method com/google/javascript/rhino/Node.getSourceFileName:()Ljava/lang/String;
      42: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: bipush        58
      47: invokevirtual #50                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      50: aload_1
      51: invokevirtual #79                 // Method com/google/javascript/rhino/Node.getLineno:()I
      54: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      57: ldc           #80                 // String :
      59: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_1
      63: invokevirtual #81                 // Method com/google/javascript/rhino/Node.getCharno:()I
      66: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      69: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: areturn

  static com.google.javascript.jscomp.AbstractCompiler access$200(com.google.javascript.jscomp.ReplaceIdGenerators);
    Code:
       0: aload_0
       1: getfield      #6                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: areturn

  static java.util.Map access$300(com.google.javascript.jscomp.ReplaceIdGenerators);
    Code:
       0: aload_0
       1: getfield      #5                  // Field consistNameMap:Ljava/util/Map;
       4: areturn

  static java.util.Map access$400(com.google.javascript.jscomp.ReplaceIdGenerators);
    Code:
       0: aload_0
       1: getfield      #4                  // Field previousMap:Ljava/util/Map;
       4: areturn

  static com.google.javascript.jscomp.ReplaceIdGenerators$NameSupplier access$500(com.google.javascript.jscomp.ReplaceIdGenerators, com.google.javascript.jscomp.ReplaceIdGenerators$RenameStrategy, com.google.common.collect.BiMap);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #3                  // Method createNameSupplier:(Lcom/google/javascript/jscomp/ReplaceIdGenerators$RenameStrategy;Lcom/google/common/collect/BiMap;)Lcom/google/javascript/jscomp/ReplaceIdGenerators$NameSupplier;
       6: areturn

  static java.util.Map access$600(com.google.javascript.jscomp.ReplaceIdGenerators);
    Code:
       0: aload_0
       1: getfield      #2                  // Field nameGenerators:Ljava/util/Map;
       4: areturn

  static java.util.Map access$700(com.google.javascript.jscomp.ReplaceIdGenerators);
    Code:
       0: aload_0
       1: getfield      #1                  // Field idGeneratorMaps:Ljava/util/Map;
       4: areturn

  static {};
    Code:
       0: ldc           #82                 // String JSC_NON_GLOBAL_ID_GENERATOR_CALL
       2: ldc           #83                 // String Id generator call must be in the global scope
       4: invokestatic  #84                 // Method com/google/javascript/jscomp/DiagnosticType.error:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
       7: putstatic     #85                 // Field NON_GLOBAL_ID_GENERATOR_CALL:Lcom/google/javascript/jscomp/DiagnosticType;
      10: ldc           #86                 // String JSC_CONDITIONAL_ID_GENERATOR_CALL
      12: ldc           #87                 // String Id generator call must be unconditional
      14: invokestatic  #84                 // Method com/google/javascript/jscomp/DiagnosticType.error:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      17: putstatic     #88                 // Field CONDITIONAL_ID_GENERATOR_CALL:Lcom/google/javascript/jscomp/DiagnosticType;
      20: ldc           #89                 // String JSC_CONFLICTING_ID_GENERATOR_TYPE
      22: ldc           #90                 // String Id generator can only be one of consistent, inconsistent, mapped or stable.
      24: invokestatic  #84                 // Method com/google/javascript/jscomp/DiagnosticType.error:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      27: putstatic     #91                 // Field CONFLICTING_GENERATOR_TYPE:Lcom/google/javascript/jscomp/DiagnosticType;
      30: ldc           #92                 // String JSC_INVALID_GENERATOR_ID_MAPPING
      32: ldc           #93                 // String Invalid generator id mapping. {0}
      34: invokestatic  #84                 // Method com/google/javascript/jscomp/DiagnosticType.error:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      37: putstatic     #69                 // Field INVALID_GENERATOR_ID_MAPPING:Lcom/google/javascript/jscomp/DiagnosticType;
      40: ldc           #94                 // String JSC_MISSING_NAME_MAP_FOR_GENERATOR
      42: ldc           #95                 // String The mapped id generator, does not have a renaming map supplied.
      44: invokestatic  #96                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      47: putstatic     #97                 // Field MISSING_NAME_MAP_FOR_GENERATOR:Lcom/google/javascript/jscomp/DiagnosticType;
      50: ldc           #98                 // String JSC_INVALID_GENERATOR_PARAMETER
      52: ldc           #99                 // String An id generator must be called with a literal.
      54: invokestatic  #96                 // Method com/google/javascript/jscomp/DiagnosticType.warning:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
      57: putstatic     #100                // Field INVALID_GENERATOR_PARAMETER:Lcom/google/javascript/jscomp/DiagnosticType;
      60: new           #20                 // class com/google/javascript/jscomp/ReplaceIdGenerators$UniqueRenamingToken
      63: dup
      64: aconst_null
      65: invokespecial #101                // Method com/google/javascript/jscomp/ReplaceIdGenerators$UniqueRenamingToken."<init>":(Lcom/google/javascript/jscomp/ReplaceIdGenerators$1;)V
      68: putstatic     #102                // Field UNIQUE:Lcom/google/javascript/jscomp/RenamingMap;
      71: return
}
