Compiled from "TypeInference.java"
final class com.google.javascript.jscomp.TypeInference$BooleanOutcomePair {
  final com.google.javascript.rhino.jstype.BooleanLiteralSet toBooleanOutcomes;

  final com.google.javascript.rhino.jstype.BooleanLiteralSet booleanValues;

  final com.google.javascript.jscomp.type.FlowScope leftScope;

  final com.google.javascript.jscomp.type.FlowScope rightScope;

  com.google.javascript.jscomp.type.FlowScope joinedScope;

  final com.google.javascript.jscomp.TypeInference this$0;

  com.google.javascript.jscomp.TypeInference$BooleanOutcomePair(com.google.javascript.jscomp.TypeInference, com.google.javascript.rhino.jstype.BooleanLiteralSet, com.google.javascript.rhino.jstype.BooleanLiteralSet, com.google.javascript.jscomp.type.FlowScope, com.google.javascript.jscomp.type.FlowScope);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/TypeInference;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field joinedScope:Lcom/google/javascript/jscomp/type/FlowScope;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field toBooleanOutcomes:Lcom/google/javascript/rhino/jstype/BooleanLiteralSet;
      19: aload_0
      20: aload_3
      21: putfield      #5                  // Field booleanValues:Lcom/google/javascript/rhino/jstype/BooleanLiteralSet;
      24: aload_0
      25: aload         4
      27: putfield      #6                  // Field leftScope:Lcom/google/javascript/jscomp/type/FlowScope;
      30: aload_0
      31: aload         5
      33: putfield      #7                  // Field rightScope:Lcom/google/javascript/jscomp/type/FlowScope;
      36: return

  com.google.javascript.jscomp.type.FlowScope getJoinedFlowScope();
    Code:
       0: aload_0
       1: getfield      #3                  // Field joinedScope:Lcom/google/javascript/jscomp/type/FlowScope;
       4: ifnonnull     51
       7: aload_0
       8: getfield      #6                  // Field leftScope:Lcom/google/javascript/jscomp/type/FlowScope;
      11: aload_0
      12: getfield      #7                  // Field rightScope:Lcom/google/javascript/jscomp/type/FlowScope;
      15: if_acmpne     29
      18: aload_0
      19: aload_0
      20: getfield      #7                  // Field rightScope:Lcom/google/javascript/jscomp/type/FlowScope;
      23: putfield      #3                  // Field joinedScope:Lcom/google/javascript/jscomp/type/FlowScope;
      26: goto          51
      29: aload_0
      30: aload_0
      31: getfield      #1                  // Field this$0:Lcom/google/javascript/jscomp/TypeInference;
      34: aload_0
      35: getfield      #6                  // Field leftScope:Lcom/google/javascript/jscomp/type/FlowScope;
      38: aload_0
      39: getfield      #7                  // Field rightScope:Lcom/google/javascript/jscomp/type/FlowScope;
      42: invokevirtual #8                  // Method com/google/javascript/jscomp/TypeInference.join:(Lcom/google/javascript/jscomp/graph/LatticeElement;Lcom/google/javascript/jscomp/graph/LatticeElement;)Lcom/google/javascript/jscomp/graph/LatticeElement;
      45: checkcast     #9                  // class com/google/javascript/jscomp/type/FlowScope
      48: putfield      #3                  // Field joinedScope:Lcom/google/javascript/jscomp/type/FlowScope;
      51: aload_0
      52: getfield      #3                  // Field joinedScope:Lcom/google/javascript/jscomp/type/FlowScope;
      55: areturn

  com.google.javascript.jscomp.type.FlowScope getOutcomeFlowScope(int, boolean);
    Code:
       0: iload_1
       1: bipush        101
       3: if_icmpne     10
       6: iload_2
       7: ifne          20
      10: iload_1
      11: bipush        100
      13: if_icmpne     25
      16: iload_2
      17: ifne          25
      20: aload_0
      21: getfield      #7                  // Field rightScope:Lcom/google/javascript/jscomp/type/FlowScope;
      24: areturn
      25: aload_0
      26: invokevirtual #11                 // Method getJoinedFlowScope:()Lcom/google/javascript/jscomp/type/FlowScope;
      29: areturn
}
