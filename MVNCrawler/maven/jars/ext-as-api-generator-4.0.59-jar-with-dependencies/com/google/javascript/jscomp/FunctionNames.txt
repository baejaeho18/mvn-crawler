Compiled from "FunctionNames.java"
class com.google.javascript.jscomp.FunctionNames implements com.google.javascript.jscomp.CompilerPass,java.io.Serializable {
  private static final long serialVersionUID;

  private final transient com.google.javascript.jscomp.AbstractCompiler compiler;

  private final java.util.Map<com.google.javascript.rhino.Node, com.google.javascript.jscomp.FunctionNames$FunctionRecord> functionMap;

  private final transient com.google.javascript.jscomp.FunctionNames$FunctionListExtractor functionListExtractor;

  com.google.javascript.jscomp.FunctionNames(com.google.javascript.jscomp.AbstractCompiler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method com/google/common/collect/Maps.newLinkedHashMap:()Ljava/util/LinkedHashMap;
       8: putfield      #3                  // Field functionMap:Ljava/util/Map;
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      16: aload_0
      17: new           #5                  // class com/google/javascript/jscomp/FunctionNames$FunctionListExtractor
      20: dup
      21: aload_0
      22: getfield      #3                  // Field functionMap:Ljava/util/Map;
      25: invokespecial #6                  // Method com/google/javascript/jscomp/FunctionNames$FunctionListExtractor."<init>":(Ljava/util/Map;)V
      28: putfield      #7                  // Field functionListExtractor:Lcom/google/javascript/jscomp/FunctionNames$FunctionListExtractor;
      31: return

  public void process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #4                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       4: aload_2
       5: aload_0
       6: getfield      #7                  // Field functionListExtractor:Lcom/google/javascript/jscomp/FunctionNames$FunctionListExtractor;
       9: invokestatic  #8                  // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      12: new           #9                  // class com/google/javascript/jscomp/FunctionNames$FunctionExpressionNamer
      15: dup
      16: aload_0
      17: getfield      #3                  // Field functionMap:Ljava/util/Map;
      20: invokespecial #10                 // Method com/google/javascript/jscomp/FunctionNames$FunctionExpressionNamer."<init>":(Ljava/util/Map;)V
      23: astore_3
      24: new           #11                 // class com/google/javascript/jscomp/AnonymousFunctionNamingCallback
      27: dup
      28: aload_3
      29: invokespecial #12                 // Method com/google/javascript/jscomp/AnonymousFunctionNamingCallback."<init>":(Lcom/google/javascript/jscomp/AnonymousFunctionNamingCallback$FunctionNamer;)V
      32: astore        4
      34: aload_0
      35: getfield      #4                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      38: aload_2
      39: aload         4
      41: invokestatic  #8                  // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      44: return

  public java.lang.Iterable<com.google.javascript.rhino.Node> getFunctionNodeList();
    Code:
       0: aload_0
       1: getfield      #3                  // Field functionMap:Ljava/util/Map;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public int getFunctionId(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #3                  // Field functionMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #15                 // class com/google/javascript/jscomp/FunctionNames$FunctionRecord
      13: astore_2
      14: aload_2
      15: ifnull        23
      18: aload_2
      19: getfield      #16                 // Field com/google/javascript/jscomp/FunctionNames$FunctionRecord.id:I
      22: ireturn
      23: iconst_m1
      24: ireturn

  public java.lang.String getFunctionName(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #3                  // Field functionMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #15                 // class com/google/javascript/jscomp/FunctionNames$FunctionRecord
      13: astore_2
      14: aload_2
      15: ifnonnull     20
      18: aconst_null
      19: areturn
      20: aload_2
      21: getfield      #17                 // Field com/google/javascript/jscomp/FunctionNames$FunctionRecord.name:Ljava/lang/String;
      24: astore_3
      25: aload_3
      26: invokevirtual #18                 // Method java/lang/String.isEmpty:()Z
      29: ifeq          35
      32: ldc           #19                 // String <anonymous>
      34: astore_3
      35: aload_2
      36: getfield      #20                 // Field com/google/javascript/jscomp/FunctionNames$FunctionRecord.parent:Lcom/google/javascript/rhino/Node;
      39: astore        4
      41: aload         4
      43: ifnull        75
      46: new           #21                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      53: aload_0
      54: aload         4
      56: invokevirtual #23                 // Method getFunctionName:(Lcom/google/javascript/rhino/Node;)Ljava/lang/String;
      59: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: ldc           #25                 // String ::
      64: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_3
      68: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: astore_3
      75: aload_3
      76: ldc           #27                 // String ::this.
      78: ldc           #28                 // String .
      80: invokevirtual #29                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      83: astore_3
      84: aload_3
      85: ldc           #30                 // String ..
      87: ldc           #28                 // String .
      89: invokevirtual #29                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      92: astore_3
      93: aload_3
      94: ldc           #31                 // String ^(<anonymous>::)*
      96: ldc           #32                 // String
      98: invokevirtual #33                 // Method java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     101: astore_3
     102: aload_3
     103: areturn
}
