Compiled from "UnreachableCodeElimination.java"
class com.google.javascript.jscomp.UnreachableCodeElimination$EliminationPass extends com.google.javascript.jscomp.NodeTraversal$AbstractShallowCallback {
  private final com.google.javascript.jscomp.ControlFlowGraph<com.google.javascript.rhino.Node> cfg;

  final com.google.javascript.jscomp.UnreachableCodeElimination this$0;

  private com.google.javascript.jscomp.UnreachableCodeElimination$EliminationPass(com.google.javascript.jscomp.ControlFlowGraph<com.google.javascript.rhino.Node>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/UnreachableCodeElimination;
       5: aload_0
       6: invokespecial #3                  // Method com/google/javascript/jscomp/NodeTraversal$AbstractShallowCallback."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field cfg:Lcom/google/javascript/jscomp/ControlFlowGraph;
      14: return

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_3
       1: ifnull        18
       4: aload_2
       5: invokevirtual #5                  // Method com/google/javascript/rhino/Node.isFunction:()Z
       8: ifne          18
      11: aload_2
      12: invokevirtual #6                  // Method com/google/javascript/rhino/Node.isScript:()Z
      15: ifeq          19
      18: return
      19: aload_0
      20: getfield      #4                  // Field cfg:Lcom/google/javascript/jscomp/ControlFlowGraph;
      23: aload_2
      24: invokevirtual #7                  // Method com/google/javascript/jscomp/ControlFlowGraph.getDirectedGraphNode:(Ljava/lang/Object;)Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;
      27: astore        4
      29: aload         4
      31: ifnonnull     35
      34: return
      35: aload         4
      37: invokeinterface #8,  1            // InterfaceMethod com/google/javascript/jscomp/graph/DiGraph$DiGraphNode.getAnnotation:()Lcom/google/javascript/jscomp/graph/Annotation;
      42: getstatic     #9                  // Field com/google/javascript/jscomp/graph/GraphReachability.REACHABLE:Lcom/google/javascript/jscomp/graph/Annotation;
      45: if_acmpne     72
      48: aload_0
      49: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/UnreachableCodeElimination;
      52: invokestatic  #10                 // Method com/google/javascript/jscomp/UnreachableCodeElimination.access$200:(Lcom/google/javascript/jscomp/UnreachableCodeElimination;)Z
      55: ifeq          78
      58: aload_2
      59: aload_0
      60: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/UnreachableCodeElimination;
      63: invokestatic  #11                 // Method com/google/javascript/jscomp/UnreachableCodeElimination.access$300:(Lcom/google/javascript/jscomp/UnreachableCodeElimination;)Lcom/google/javascript/jscomp/AbstractCompiler;
      66: invokestatic  #12                 // Method com/google/javascript/jscomp/NodeUtil.mayHaveSideEffects:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/AbstractCompiler;)Z
      69: ifne          78
      72: aload_0
      73: aload_2
      74: invokespecial #13                 // Method removeDeadExprStatementSafely:(Lcom/google/javascript/rhino/Node;)V
      77: return
      78: aload_0
      79: aload_2
      80: invokespecial #14                 // Method tryRemoveUnconditionalBranching:(Lcom/google/javascript/rhino/Node;)V
      83: return

  private void tryRemoveUnconditionalBranching(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #4                  // Field cfg:Lcom/google/javascript/jscomp/ControlFlowGraph;
       9: aload_1
      10: invokevirtual #7                  // Method com/google/javascript/jscomp/ControlFlowGraph.getDirectedGraphNode:(Ljava/lang/Object;)Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;
      13: astore_2
      14: aload_2
      15: ifnonnull     19
      18: return
      19: aload_1
      20: invokevirtual #15                 // Method com/google/javascript/rhino/Node.getType:()I
      23: lookupswitch  { // 3
                     4: 56
                   116: 66
                   117: 66
               default: 185
          }
      56: aload_1
      57: invokevirtual #16                 // Method com/google/javascript/rhino/Node.hasChildren:()Z
      60: ifeq          66
      63: goto          185
      66: aload_2
      67: invokeinterface #17,  1           // InterfaceMethod com/google/javascript/jscomp/graph/DiGraph$DiGraphNode.getOutEdges:()Ljava/util/List;
      72: astore_3
      73: aload_3
      74: invokeinterface #18,  1           // InterfaceMethod java/util/List.size:()I
      79: iconst_1
      80: if_icmpne     185
      83: aload_1
      84: invokevirtual #19                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      87: ifnull        100
      90: aload_1
      91: invokevirtual #19                 // Method com/google/javascript/rhino/Node.getNext:()Lcom/google/javascript/rhino/Node;
      94: invokevirtual #5                  // Method com/google/javascript/rhino/Node.isFunction:()Z
      97: ifeq          185
     100: aload_3
     101: iconst_0
     102: invokeinterface #20,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     107: checkcast     #21                 // class com/google/javascript/jscomp/graph/DiGraph$DiGraphEdge
     110: invokeinterface #22,  1           // InterfaceMethod com/google/javascript/jscomp/graph/DiGraph$DiGraphEdge.getValue:()Ljava/lang/Object;
     115: getstatic     #23                 // Field com/google/javascript/jscomp/ControlFlowGraph$Branch.UNCOND:Lcom/google/javascript/jscomp/ControlFlowGraph$Branch;
     118: if_acmpne     125
     121: iconst_1
     122: goto          126
     125: iconst_0
     126: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkState:(Z)V
     129: aload_0
     130: aload_1
     131: invokespecial #25                 // Method computeFollowing:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
     134: astore        4
     136: aload_3
     137: iconst_0
     138: invokeinterface #20,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     143: checkcast     #21                 // class com/google/javascript/jscomp/graph/DiGraph$DiGraphEdge
     146: invokeinterface #26,  1           // InterfaceMethod com/google/javascript/jscomp/graph/DiGraph$DiGraphEdge.getDestination:()Lcom/google/javascript/jscomp/graph/DiGraph$DiGraphNode;
     151: invokeinterface #27,  1           // InterfaceMethod com/google/javascript/jscomp/graph/DiGraph$DiGraphNode.getValue:()Ljava/lang/Object;
     156: checkcast     #28                 // class com/google/javascript/rhino/Node
     159: astore        5
     161: aload         5
     163: aload         4
     165: if_acmpne     185
     168: aload_0
     169: aload_1
     170: invokevirtual #29                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
     173: aload_1
     174: invokespecial #30                 // Method inFinally:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z
     177: ifne          185
     180: aload_0
     181: aload_1
     182: invokespecial #31                 // Method removeNode:(Lcom/google/javascript/rhino/Node;)V
     185: return

  private boolean inFinally(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #5                  // Method com/google/javascript/rhino/Node.isFunction:()Z
       8: ifeq          13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: aload_2
      15: invokestatic  #32                 // Method com/google/javascript/jscomp/NodeUtil.isTryFinallyNode:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z
      18: ifeq          23
      21: iconst_1
      22: ireturn
      23: aload_0
      24: aload_1
      25: invokevirtual #29                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      28: aload_1
      29: invokespecial #30                 // Method inFinally:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)Z
      32: ireturn

  private com.google.javascript.rhino.Node computeFollowing(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokestatic  #33                 // Method com/google/javascript/jscomp/ControlFlowAnalysis.computeFollowNode:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
       4: astore_2
       5: aload_2
       6: ifnull        40
       9: aload_2
      10: invokevirtual #34                 // Method com/google/javascript/rhino/Node.isBlock:()Z
      13: ifeq          40
      16: aload_2
      17: invokevirtual #16                 // Method com/google/javascript/rhino/Node.hasChildren:()Z
      20: ifeq          31
      23: aload_2
      24: invokevirtual #35                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
      27: astore_2
      28: goto          5
      31: aload_0
      32: aload_2
      33: invokespecial #25                 // Method computeFollowing:(Lcom/google/javascript/rhino/Node;)Lcom/google/javascript/rhino/Node;
      36: astore_2
      37: goto          5
      40: aload_2
      41: areturn

  private void removeDeadExprStatementSafely(com.google.javascript.rhino.Node);
    Code:
       0: aload_1
       1: invokevirtual #29                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
       4: astore_2
       5: aload_1
       6: invokevirtual #36                 // Method com/google/javascript/rhino/Node.isEmpty:()Z
       9: ifne          26
      12: aload_1
      13: invokevirtual #34                 // Method com/google/javascript/rhino/Node.isBlock:()Z
      16: ifeq          27
      19: aload_1
      20: invokevirtual #16                 // Method com/google/javascript/rhino/Node.hasChildren:()Z
      23: ifne          27
      26: return
      27: aload_2
      28: invokestatic  #37                 // Method com/google/javascript/jscomp/NodeUtil.isForIn:(Lcom/google/javascript/rhino/Node;)Z
      31: ifeq          35
      34: return
      35: aload_1
      36: invokevirtual #15                 // Method com/google/javascript/rhino/Node.getType:()I
      39: lookupswitch  { // 3
                   114: 72
                   120: 88
                   125: 73
               default: 97
          }
      72: return
      73: aload_2
      74: invokevirtual #38                 // Method com/google/javascript/rhino/Node.isTry:()Z
      77: ifeq          97
      80: aload_1
      81: invokestatic  #39                 // Method com/google/javascript/jscomp/NodeUtil.isTryCatchNodeContainer:(Lcom/google/javascript/rhino/Node;)Z
      84: ifeq          97
      87: return
      88: aload_2
      89: invokevirtual #29                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      92: astore_3
      93: aload_3
      94: invokestatic  #40                 // Method com/google/javascript/jscomp/NodeUtil.maybeAddFinally:(Lcom/google/javascript/rhino/Node;)V
      97: aload_1
      98: invokevirtual #41                 // Method com/google/javascript/rhino/Node.isVar:()Z
     101: ifeq          115
     104: aload_1
     105: invokevirtual #35                 // Method com/google/javascript/rhino/Node.getFirstChild:()Lcom/google/javascript/rhino/Node;
     108: invokevirtual #16                 // Method com/google/javascript/rhino/Node.hasChildren:()Z
     111: ifne          115
     114: return
     115: aload_0
     116: aload_1
     117: invokespecial #31                 // Method removeNode:(Lcom/google/javascript/rhino/Node;)V
     120: return

  private void removeNode(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/UnreachableCodeElimination;
       4: iconst_1
       5: invokestatic  #42                 // Method com/google/javascript/jscomp/UnreachableCodeElimination.access$002:(Lcom/google/javascript/jscomp/UnreachableCodeElimination;Z)Z
       8: pop
       9: aload_1
      10: invokestatic  #43                 // Method com/google/javascript/jscomp/NodeUtil.redeclareVarsInsideBranch:(Lcom/google/javascript/rhino/Node;)V
      13: aload_0
      14: getfield      #2                  // Field this$0:Lcom/google/javascript/jscomp/UnreachableCodeElimination;
      17: invokestatic  #11                 // Method com/google/javascript/jscomp/UnreachableCodeElimination.access$300:(Lcom/google/javascript/jscomp/UnreachableCodeElimination;)Lcom/google/javascript/jscomp/AbstractCompiler;
      20: aload_1
      21: invokevirtual #44                 // Method com/google/javascript/jscomp/AbstractCompiler.reportChangeToEnclosingScope:(Lcom/google/javascript/rhino/Node;)V
      24: invokestatic  #45                 // Method com/google/javascript/jscomp/UnreachableCodeElimination.access$400:()Ljava/util/logging/Logger;
      27: getstatic     #46                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      30: invokevirtual #47                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      33: ifeq          61
      36: invokestatic  #45                 // Method com/google/javascript/jscomp/UnreachableCodeElimination.access$400:()Ljava/util/logging/Logger;
      39: new           #48                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #50                 // String Removing
      48: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_1
      52: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokevirtual #54                 // Method java/util/logging/Logger.fine:(Ljava/lang/String;)V
      61: aload_1
      62: invokevirtual #29                 // Method com/google/javascript/rhino/Node.getParent:()Lcom/google/javascript/rhino/Node;
      65: aload_1
      66: invokestatic  #55                 // Method com/google/javascript/jscomp/NodeUtil.removeChild:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/rhino/Node;)V
      69: return

  com.google.javascript.jscomp.UnreachableCodeElimination$EliminationPass(com.google.javascript.jscomp.UnreachableCodeElimination, com.google.javascript.jscomp.ControlFlowGraph, com.google.javascript.jscomp.UnreachableCodeElimination$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method "<init>":(Lcom/google/javascript/jscomp/UnreachableCodeElimination;Lcom/google/javascript/jscomp/ControlFlowGraph;)V
       6: return
}
