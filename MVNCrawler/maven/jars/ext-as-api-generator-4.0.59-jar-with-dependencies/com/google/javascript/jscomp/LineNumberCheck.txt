Compiled from "LineNumberCheck.java"
class com.google.javascript.jscomp.LineNumberCheck implements com.google.javascript.jscomp.NodeTraversal$Callback,com.google.javascript.jscomp.CompilerPass {
  static final com.google.javascript.jscomp.DiagnosticType MISSING_LINE_INFO;

  private final com.google.javascript.jscomp.AbstractCompiler compiler;

  private boolean requiresLineNumbers;

  com.google.javascript.jscomp.LineNumberCheck(com.google.javascript.jscomp.AbstractCompiler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field requiresLineNumbers:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      14: return

  public void setCheckSubTree(com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field requiresLineNumbers:Z
       5: aload_0
       6: getfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       9: aload_1
      10: aload_0
      11: invokestatic  #4                  // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      14: return

  public void process(com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field requiresLineNumbers:Z
       5: aload_0
       6: getfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
       9: aload_2
      10: aload_0
      11: invokestatic  #4                  // Method com/google/javascript/jscomp/NodeTraversal.traverse:(Lcom/google/javascript/jscomp/AbstractCompiler;Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/NodeTraversal$Callback;)V
      14: return

  public boolean shouldTraverse(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: invokevirtual #5                  // Method com/google/javascript/rhino/Node.isScript:()Z
       4: ifeq          12
       7: aload_0
       8: iconst_1
       9: putfield      #2                  // Field requiresLineNumbers:Z
      12: iconst_1
      13: ireturn

  public void visit(com.google.javascript.jscomp.NodeTraversal, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node);
    Code:
       0: aload_2
       1: invokevirtual #5                  // Method com/google/javascript/rhino/Node.isScript:()Z
       4: ifeq          15
       7: aload_0
       8: iconst_0
       9: putfield      #2                  // Field requiresLineNumbers:Z
      12: goto          56
      15: aload_0
      16: getfield      #2                  // Field requiresLineNumbers:Z
      19: ifeq          56
      22: aload_2
      23: invokevirtual #6                  // Method com/google/javascript/rhino/Node.getLineno:()I
      26: iconst_m1
      27: if_icmpne     56
      30: aload_0
      31: getfield      #3                  // Field compiler:Lcom/google/javascript/jscomp/AbstractCompiler;
      34: aload_1
      35: aload_2
      36: getstatic     #7                  // Field MISSING_LINE_INFO:Lcom/google/javascript/jscomp/DiagnosticType;
      39: iconst_1
      40: anewarray     #8                  // class java/lang/String
      43: dup
      44: iconst_0
      45: aload_2
      46: invokevirtual #9                  // Method com/google/javascript/rhino/Node.toStringTree:()Ljava/lang/String;
      49: aastore
      50: invokevirtual #10                 // Method com/google/javascript/jscomp/NodeTraversal.makeError:(Lcom/google/javascript/rhino/Node;Lcom/google/javascript/jscomp/DiagnosticType;[Ljava/lang/String;)Lcom/google/javascript/jscomp/JSError;
      53: invokevirtual #11                 // Method com/google/javascript/jscomp/AbstractCompiler.report:(Lcom/google/javascript/jscomp/JSError;)V
      56: return

  static {};
    Code:
       0: ldc           #12                 // String JSC_MISSING_LINE_INFO
       2: ldc           #13                 // String No source location information associated with {0}.\nMost likely a Node has been created with settings the source file and line/column location.  Usually this is done using Node.copyInformationFrom and supplying a Node from the source AST.
       4: invokestatic  #14                 // Method com/google/javascript/jscomp/DiagnosticType.error:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/javascript/jscomp/DiagnosticType;
       7: putstatic     #7                  // Field MISSING_LINE_INFO:Lcom/google/javascript/jscomp/DiagnosticType;
      10: return
}
