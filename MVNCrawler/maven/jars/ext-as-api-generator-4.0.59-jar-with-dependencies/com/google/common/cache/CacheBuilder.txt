Compiled from "CacheBuilder.java"
public final class com.google.common.cache.CacheBuilder<K, V> {
  private static final int DEFAULT_INITIAL_CAPACITY;

  private static final int DEFAULT_CONCURRENCY_LEVEL;

  private static final int DEFAULT_EXPIRATION_NANOS;

  private static final int DEFAULT_REFRESH_NANOS;

  static final com.google.common.base.Supplier<? extends com.google.common.cache.AbstractCache$StatsCounter> NULL_STATS_COUNTER;

  static final com.google.common.cache.CacheStats EMPTY_STATS;

  static final com.google.common.base.Supplier<com.google.common.cache.AbstractCache$StatsCounter> CACHE_STATS_COUNTER;

  static final com.google.common.base.Ticker NULL_TICKER;

  private static final java.util.logging.Logger logger;

  static final int UNSET_INT;

  boolean strictParsing;

  int initialCapacity;

  int concurrencyLevel;

  long maximumSize;

  long maximumWeight;

  com.google.common.cache.Weigher<? super K, ? super V> weigher;

  com.google.common.cache.LocalCache$Strength keyStrength;

  com.google.common.cache.LocalCache$Strength valueStrength;

  long expireAfterWriteNanos;

  long expireAfterAccessNanos;

  long refreshNanos;

  com.google.common.base.Equivalence<java.lang.Object> keyEquivalence;

  com.google.common.base.Equivalence<java.lang.Object> valueEquivalence;

  com.google.common.cache.RemovalListener<? super K, ? super V> removalListener;

  com.google.common.base.Ticker ticker;

  com.google.common.base.Supplier<? extends com.google.common.cache.AbstractCache$StatsCounter> statsCounterSupplier;

  com.google.common.cache.CacheBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field strictParsing:Z
       9: aload_0
      10: iconst_m1
      11: putfield      #4                  // Field initialCapacity:I
      14: aload_0
      15: iconst_m1
      16: putfield      #5                  // Field concurrencyLevel:I
      19: aload_0
      20: ldc2_w        #6                  // long -1l
      23: putfield      #8                  // Field maximumSize:J
      26: aload_0
      27: ldc2_w        #6                  // long -1l
      30: putfield      #9                  // Field maximumWeight:J
      33: aload_0
      34: ldc2_w        #6                  // long -1l
      37: putfield      #10                 // Field expireAfterWriteNanos:J
      40: aload_0
      41: ldc2_w        #6                  // long -1l
      44: putfield      #11                 // Field expireAfterAccessNanos:J
      47: aload_0
      48: ldc2_w        #6                  // long -1l
      51: putfield      #12                 // Field refreshNanos:J
      54: aload_0
      55: getstatic     #13                 // Field NULL_STATS_COUNTER:Lcom/google/common/base/Supplier;
      58: putfield      #14                 // Field statsCounterSupplier:Lcom/google/common/base/Supplier;
      61: return

  public static com.google.common.cache.CacheBuilder<java.lang.Object, java.lang.Object> newBuilder();
    Code:
       0: new           #3                  // class com/google/common/cache/CacheBuilder
       3: dup
       4: invokespecial #15                 // Method "<init>":()V
       7: areturn

  public static com.google.common.cache.CacheBuilder<java.lang.Object, java.lang.Object> from(com.google.common.cache.CacheBuilderSpec);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method com/google/common/cache/CacheBuilderSpec.toCacheBuilder:()Lcom/google/common/cache/CacheBuilder;
       4: invokevirtual #17                 // Method lenientParsing:()Lcom/google/common/cache/CacheBuilder;
       7: areturn

  public static com.google.common.cache.CacheBuilder<java.lang.Object, java.lang.Object> from(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #18                 // Method com/google/common/cache/CacheBuilderSpec.parse:(Ljava/lang/String;)Lcom/google/common/cache/CacheBuilderSpec;
       4: invokestatic  #19                 // Method from:(Lcom/google/common/cache/CacheBuilderSpec;)Lcom/google/common/cache/CacheBuilder;
       7: areturn

  com.google.common.cache.CacheBuilder<K, V> lenientParsing();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field strictParsing:Z
       5: aload_0
       6: areturn

  com.google.common.cache.CacheBuilder<K, V> keyEquivalence(com.google.common.base.Equivalence<java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #20                 // Field keyEquivalence:Lcom/google/common/base/Equivalence;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #21                 // String key equivalence was already set to %s
      14: aload_0
      15: getfield      #20                 // Field keyEquivalence:Lcom/google/common/base/Equivalence;
      18: invokestatic  #22                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;Ljava/lang/Object;)V
      21: aload_0
      22: aload_1
      23: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #24                 // class com/google/common/base/Equivalence
      29: putfield      #20                 // Field keyEquivalence:Lcom/google/common/base/Equivalence;
      32: aload_0
      33: areturn

  com.google.common.base.Equivalence<java.lang.Object> getKeyEquivalence();
    Code:
       0: aload_0
       1: getfield      #20                 // Field keyEquivalence:Lcom/google/common/base/Equivalence;
       4: aload_0
       5: invokevirtual #25                 // Method getKeyStrength:()Lcom/google/common/cache/LocalCache$Strength;
       8: invokevirtual #26                 // Method com/google/common/cache/LocalCache$Strength.defaultEquivalence:()Lcom/google/common/base/Equivalence;
      11: invokestatic  #27                 // Method com/google/common/base/MoreObjects.firstNonNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #24                 // class com/google/common/base/Equivalence
      17: areturn

  com.google.common.cache.CacheBuilder<K, V> valueEquivalence(com.google.common.base.Equivalence<java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #28                 // Field valueEquivalence:Lcom/google/common/base/Equivalence;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #29                 // String value equivalence was already set to %s
      14: aload_0
      15: getfield      #28                 // Field valueEquivalence:Lcom/google/common/base/Equivalence;
      18: invokestatic  #22                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;Ljava/lang/Object;)V
      21: aload_0
      22: aload_1
      23: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #24                 // class com/google/common/base/Equivalence
      29: putfield      #28                 // Field valueEquivalence:Lcom/google/common/base/Equivalence;
      32: aload_0
      33: areturn

  com.google.common.base.Equivalence<java.lang.Object> getValueEquivalence();
    Code:
       0: aload_0
       1: getfield      #28                 // Field valueEquivalence:Lcom/google/common/base/Equivalence;
       4: aload_0
       5: invokevirtual #30                 // Method getValueStrength:()Lcom/google/common/cache/LocalCache$Strength;
       8: invokevirtual #26                 // Method com/google/common/cache/LocalCache$Strength.defaultEquivalence:()Lcom/google/common/base/Equivalence;
      11: invokestatic  #27                 // Method com/google/common/base/MoreObjects.firstNonNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #24                 // class com/google/common/base/Equivalence
      17: areturn

  public com.google.common.cache.CacheBuilder<K, V> initialCapacity(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field initialCapacity:I
       4: iconst_m1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ldc           #31                 // String initial capacity was already set to %s
      15: aload_0
      16: getfield      #4                  // Field initialCapacity:I
      19: invokestatic  #32                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;I)V
      22: iload_1
      23: iflt          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: invokestatic  #33                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      34: aload_0
      35: iload_1
      36: putfield      #4                  // Field initialCapacity:I
      39: aload_0
      40: areturn

  int getInitialCapacity();
    Code:
       0: aload_0
       1: getfield      #4                  // Field initialCapacity:I
       4: iconst_m1
       5: if_icmpne     13
       8: bipush        16
      10: goto          17
      13: aload_0
      14: getfield      #4                  // Field initialCapacity:I
      17: ireturn

  public com.google.common.cache.CacheBuilder<K, V> concurrencyLevel(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field concurrencyLevel:I
       4: iconst_m1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ldc           #34                 // String concurrency level was already set to %s
      15: aload_0
      16: getfield      #5                  // Field concurrencyLevel:I
      19: invokestatic  #32                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;I)V
      22: iload_1
      23: ifle          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: invokestatic  #33                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      34: aload_0
      35: iload_1
      36: putfield      #5                  // Field concurrencyLevel:I
      39: aload_0
      40: areturn

  int getConcurrencyLevel();
    Code:
       0: aload_0
       1: getfield      #5                  // Field concurrencyLevel:I
       4: iconst_m1
       5: if_icmpne     12
       8: iconst_4
       9: goto          16
      12: aload_0
      13: getfield      #5                  // Field concurrencyLevel:I
      16: ireturn

  public com.google.common.cache.CacheBuilder<K, V> maximumSize(long);
    Code:
       0: aload_0
       1: getfield      #8                  // Field maximumSize:J
       4: ldc2_w        #6                  // long -1l
       7: lcmp
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ldc           #35                 // String maximum size was already set to %s
      18: aload_0
      19: getfield      #8                  // Field maximumSize:J
      22: invokestatic  #36                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;J)V
      25: aload_0
      26: getfield      #9                  // Field maximumWeight:J
      29: ldc2_w        #6                  // long -1l
      32: lcmp
      33: ifne          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ldc           #37                 // String maximum weight was already set to %s
      43: aload_0
      44: getfield      #9                  // Field maximumWeight:J
      47: invokestatic  #36                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;J)V
      50: aload_0
      51: getfield      #38                 // Field weigher:Lcom/google/common/cache/Weigher;
      54: ifnonnull     61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: ldc           #39                 // String maximum size can not be combined with weigher
      64: invokestatic  #40                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      67: lload_1
      68: lconst_0
      69: lcmp
      70: iflt          77
      73: iconst_1
      74: goto          78
      77: iconst_0
      78: ldc           #41                 // String maximum size must not be negative
      80: invokestatic  #42                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      83: aload_0
      84: lload_1
      85: putfield      #8                  // Field maximumSize:J
      88: aload_0
      89: areturn

  public com.google.common.cache.CacheBuilder<K, V> maximumWeight(long);
    Code:
       0: aload_0
       1: getfield      #9                  // Field maximumWeight:J
       4: ldc2_w        #6                  // long -1l
       7: lcmp
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ldc           #37                 // String maximum weight was already set to %s
      18: aload_0
      19: getfield      #9                  // Field maximumWeight:J
      22: invokestatic  #36                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;J)V
      25: aload_0
      26: getfield      #8                  // Field maximumSize:J
      29: ldc2_w        #6                  // long -1l
      32: lcmp
      33: ifne          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ldc           #35                 // String maximum size was already set to %s
      43: aload_0
      44: getfield      #8                  // Field maximumSize:J
      47: invokestatic  #36                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;J)V
      50: aload_0
      51: lload_1
      52: putfield      #9                  // Field maximumWeight:J
      55: lload_1
      56: lconst_0
      57: lcmp
      58: iflt          65
      61: iconst_1
      62: goto          66
      65: iconst_0
      66: ldc           #43                 // String maximum weight must not be negative
      68: invokestatic  #42                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      71: aload_0
      72: areturn

  public <K1 extends K, V1 extends V> com.google.common.cache.CacheBuilder<K1, V1> weigher(com.google.common.cache.Weigher<? super K1, ? super V1>);
    Code:
       0: aload_0
       1: getfield      #38                 // Field weigher:Lcom/google/common/cache/Weigher;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #44                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: getfield      #2                  // Field strictParsing:Z
      19: ifeq          47
      22: aload_0
      23: getfield      #8                  // Field maximumSize:J
      26: ldc2_w        #6                  // long -1l
      29: lcmp
      30: ifne          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ldc           #45                 // String weigher can not be combined with maximum size
      40: aload_0
      41: getfield      #8                  // Field maximumSize:J
      44: invokestatic  #36                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;J)V
      47: aload_0
      48: astore_2
      49: aload_2
      50: aload_1
      51: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      54: checkcast     #46                 // class com/google/common/cache/Weigher
      57: putfield      #38                 // Field weigher:Lcom/google/common/cache/Weigher;
      60: aload_2
      61: areturn

  long getMaximumWeight();
    Code:
       0: aload_0
       1: getfield      #10                 // Field expireAfterWriteNanos:J
       4: lconst_0
       5: lcmp
       6: ifeq          18
       9: aload_0
      10: getfield      #11                 // Field expireAfterAccessNanos:J
      13: lconst_0
      14: lcmp
      15: ifne          20
      18: lconst_0
      19: lreturn
      20: aload_0
      21: getfield      #38                 // Field weigher:Lcom/google/common/cache/Weigher;
      24: ifnonnull     34
      27: aload_0
      28: getfield      #8                  // Field maximumSize:J
      31: goto          38
      34: aload_0
      35: getfield      #9                  // Field maximumWeight:J
      38: lreturn

  <K1 extends K, V1 extends V> com.google.common.cache.Weigher<K1, V1> getWeigher();
    Code:
       0: aload_0
       1: getfield      #38                 // Field weigher:Lcom/google/common/cache/Weigher;
       4: getstatic     #47                 // Field com/google/common/cache/CacheBuilder$OneWeigher.INSTANCE:Lcom/google/common/cache/CacheBuilder$OneWeigher;
       7: invokestatic  #27                 // Method com/google/common/base/MoreObjects.firstNonNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #46                 // class com/google/common/cache/Weigher
      13: areturn

  public com.google.common.cache.CacheBuilder<K, V> weakKeys();
    Code:
       0: aload_0
       1: getstatic     #48                 // Field com/google/common/cache/LocalCache$Strength.WEAK:Lcom/google/common/cache/LocalCache$Strength;
       4: invokevirtual #49                 // Method setKeyStrength:(Lcom/google/common/cache/LocalCache$Strength;)Lcom/google/common/cache/CacheBuilder;
       7: areturn

  com.google.common.cache.CacheBuilder<K, V> setKeyStrength(com.google.common.cache.LocalCache$Strength);
    Code:
       0: aload_0
       1: getfield      #50                 // Field keyStrength:Lcom/google/common/cache/LocalCache$Strength;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #51                 // String Key strength was already set to %s
      14: aload_0
      15: getfield      #50                 // Field keyStrength:Lcom/google/common/cache/LocalCache$Strength;
      18: invokestatic  #22                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;Ljava/lang/Object;)V
      21: aload_0
      22: aload_1
      23: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #52                 // class com/google/common/cache/LocalCache$Strength
      29: putfield      #50                 // Field keyStrength:Lcom/google/common/cache/LocalCache$Strength;
      32: aload_0
      33: areturn

  com.google.common.cache.LocalCache$Strength getKeyStrength();
    Code:
       0: aload_0
       1: getfield      #50                 // Field keyStrength:Lcom/google/common/cache/LocalCache$Strength;
       4: getstatic     #53                 // Field com/google/common/cache/LocalCache$Strength.STRONG:Lcom/google/common/cache/LocalCache$Strength;
       7: invokestatic  #27                 // Method com/google/common/base/MoreObjects.firstNonNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #52                 // class com/google/common/cache/LocalCache$Strength
      13: areturn

  public com.google.common.cache.CacheBuilder<K, V> weakValues();
    Code:
       0: aload_0
       1: getstatic     #48                 // Field com/google/common/cache/LocalCache$Strength.WEAK:Lcom/google/common/cache/LocalCache$Strength;
       4: invokevirtual #54                 // Method setValueStrength:(Lcom/google/common/cache/LocalCache$Strength;)Lcom/google/common/cache/CacheBuilder;
       7: areturn

  public com.google.common.cache.CacheBuilder<K, V> softValues();
    Code:
       0: aload_0
       1: getstatic     #55                 // Field com/google/common/cache/LocalCache$Strength.SOFT:Lcom/google/common/cache/LocalCache$Strength;
       4: invokevirtual #54                 // Method setValueStrength:(Lcom/google/common/cache/LocalCache$Strength;)Lcom/google/common/cache/CacheBuilder;
       7: areturn

  com.google.common.cache.CacheBuilder<K, V> setValueStrength(com.google.common.cache.LocalCache$Strength);
    Code:
       0: aload_0
       1: getfield      #56                 // Field valueStrength:Lcom/google/common/cache/LocalCache$Strength;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #57                 // String Value strength was already set to %s
      14: aload_0
      15: getfield      #56                 // Field valueStrength:Lcom/google/common/cache/LocalCache$Strength;
      18: invokestatic  #22                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;Ljava/lang/Object;)V
      21: aload_0
      22: aload_1
      23: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #52                 // class com/google/common/cache/LocalCache$Strength
      29: putfield      #56                 // Field valueStrength:Lcom/google/common/cache/LocalCache$Strength;
      32: aload_0
      33: areturn

  com.google.common.cache.LocalCache$Strength getValueStrength();
    Code:
       0: aload_0
       1: getfield      #56                 // Field valueStrength:Lcom/google/common/cache/LocalCache$Strength;
       4: getstatic     #53                 // Field com/google/common/cache/LocalCache$Strength.STRONG:Lcom/google/common/cache/LocalCache$Strength;
       7: invokestatic  #27                 // Method com/google/common/base/MoreObjects.firstNonNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #52                 // class com/google/common/cache/LocalCache$Strength
      13: areturn

  public com.google.common.cache.CacheBuilder<K, V> expireAfterWrite(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #10                 // Field expireAfterWriteNanos:J
       4: ldc2_w        #6                  // long -1l
       7: lcmp
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ldc           #58                 // String expireAfterWrite was already set to %s ns
      18: aload_0
      19: getfield      #10                 // Field expireAfterWriteNanos:J
      22: invokestatic  #36                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;J)V
      25: lload_1
      26: lconst_0
      27: lcmp
      28: iflt          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ldc           #59                 // String duration cannot be negative: %s %s
      38: lload_1
      39: aload_3
      40: invokestatic  #60                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;JLjava/lang/Object;)V
      43: aload_0
      44: aload_3
      45: lload_1
      46: invokevirtual #61                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      49: putfield      #10                 // Field expireAfterWriteNanos:J
      52: aload_0
      53: areturn

  long getExpireAfterWriteNanos();
    Code:
       0: aload_0
       1: getfield      #10                 // Field expireAfterWriteNanos:J
       4: ldc2_w        #6                  // long -1l
       7: lcmp
       8: ifne          15
      11: lconst_0
      12: goto          19
      15: aload_0
      16: getfield      #10                 // Field expireAfterWriteNanos:J
      19: lreturn

  public com.google.common.cache.CacheBuilder<K, V> expireAfterAccess(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #11                 // Field expireAfterAccessNanos:J
       4: ldc2_w        #6                  // long -1l
       7: lcmp
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ldc           #62                 // String expireAfterAccess was already set to %s ns
      18: aload_0
      19: getfield      #11                 // Field expireAfterAccessNanos:J
      22: invokestatic  #36                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;J)V
      25: lload_1
      26: lconst_0
      27: lcmp
      28: iflt          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ldc           #59                 // String duration cannot be negative: %s %s
      38: lload_1
      39: aload_3
      40: invokestatic  #60                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;JLjava/lang/Object;)V
      43: aload_0
      44: aload_3
      45: lload_1
      46: invokevirtual #61                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      49: putfield      #11                 // Field expireAfterAccessNanos:J
      52: aload_0
      53: areturn

  long getExpireAfterAccessNanos();
    Code:
       0: aload_0
       1: getfield      #11                 // Field expireAfterAccessNanos:J
       4: ldc2_w        #6                  // long -1l
       7: lcmp
       8: ifne          15
      11: lconst_0
      12: goto          19
      15: aload_0
      16: getfield      #11                 // Field expireAfterAccessNanos:J
      19: lreturn

  public com.google.common.cache.CacheBuilder<K, V> refreshAfterWrite(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_3
       1: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #12                 // Field refreshNanos:J
       9: ldc2_w        #6                  // long -1l
      12: lcmp
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ldc           #63                 // String refresh was already set to %s ns
      23: aload_0
      24: getfield      #12                 // Field refreshNanos:J
      27: invokestatic  #36                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;J)V
      30: lload_1
      31: lconst_0
      32: lcmp
      33: ifle          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ldc           #64                 // String duration must be positive: %s %s
      43: lload_1
      44: aload_3
      45: invokestatic  #60                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;JLjava/lang/Object;)V
      48: aload_0
      49: aload_3
      50: lload_1
      51: invokevirtual #61                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      54: putfield      #12                 // Field refreshNanos:J
      57: aload_0
      58: areturn

  long getRefreshNanos();
    Code:
       0: aload_0
       1: getfield      #12                 // Field refreshNanos:J
       4: ldc2_w        #6                  // long -1l
       7: lcmp
       8: ifne          15
      11: lconst_0
      12: goto          19
      15: aload_0
      16: getfield      #12                 // Field refreshNanos:J
      19: lreturn

  public com.google.common.cache.CacheBuilder<K, V> ticker(com.google.common.base.Ticker);
    Code:
       0: aload_0
       1: getfield      #65                 // Field ticker:Lcom/google/common/base/Ticker;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #44                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: aload_1
      17: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #66                 // class com/google/common/base/Ticker
      23: putfield      #65                 // Field ticker:Lcom/google/common/base/Ticker;
      26: aload_0
      27: areturn

  com.google.common.base.Ticker getTicker(boolean);
    Code:
       0: aload_0
       1: getfield      #65                 // Field ticker:Lcom/google/common/base/Ticker;
       4: ifnull        12
       7: aload_0
       8: getfield      #65                 // Field ticker:Lcom/google/common/base/Ticker;
      11: areturn
      12: iload_1
      13: ifeq          22
      16: invokestatic  #67                 // Method com/google/common/base/Ticker.systemTicker:()Lcom/google/common/base/Ticker;
      19: goto          25
      22: getstatic     #68                 // Field NULL_TICKER:Lcom/google/common/base/Ticker;
      25: areturn

  public <K1 extends K, V1 extends V> com.google.common.cache.CacheBuilder<K1, V1> removalListener(com.google.common.cache.RemovalListener<? super K1, ? super V1>);
    Code:
       0: aload_0
       1: getfield      #69                 // Field removalListener:Lcom/google/common/cache/RemovalListener;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #44                 // Method com/google/common/base/Preconditions.checkState:(Z)V
      15: aload_0
      16: astore_2
      17: aload_2
      18: aload_1
      19: invokestatic  #23                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #70                 // class com/google/common/cache/RemovalListener
      25: putfield      #69                 // Field removalListener:Lcom/google/common/cache/RemovalListener;
      28: aload_2
      29: areturn

  <K1 extends K, V1 extends V> com.google.common.cache.RemovalListener<K1, V1> getRemovalListener();
    Code:
       0: aload_0
       1: getfield      #69                 // Field removalListener:Lcom/google/common/cache/RemovalListener;
       4: getstatic     #71                 // Field com/google/common/cache/CacheBuilder$NullListener.INSTANCE:Lcom/google/common/cache/CacheBuilder$NullListener;
       7: invokestatic  #27                 // Method com/google/common/base/MoreObjects.firstNonNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #70                 // class com/google/common/cache/RemovalListener
      13: areturn

  public com.google.common.cache.CacheBuilder<K, V> recordStats();
    Code:
       0: aload_0
       1: getstatic     #72                 // Field CACHE_STATS_COUNTER:Lcom/google/common/base/Supplier;
       4: putfield      #14                 // Field statsCounterSupplier:Lcom/google/common/base/Supplier;
       7: aload_0
       8: areturn

  boolean isRecordingStats();
    Code:
       0: aload_0
       1: getfield      #14                 // Field statsCounterSupplier:Lcom/google/common/base/Supplier;
       4: getstatic     #72                 // Field CACHE_STATS_COUNTER:Lcom/google/common/base/Supplier;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  com.google.common.base.Supplier<? extends com.google.common.cache.AbstractCache$StatsCounter> getStatsCounterSupplier();
    Code:
       0: aload_0
       1: getfield      #14                 // Field statsCounterSupplier:Lcom/google/common/base/Supplier;
       4: areturn

  public <K1 extends K, V1 extends V> com.google.common.cache.LoadingCache<K1, V1> build(com.google.common.cache.CacheLoader<? super K1, V1>);
    Code:
       0: aload_0
       1: invokespecial #73                 // Method checkWeightWithWeigher:()V
       4: new           #74                 // class com/google/common/cache/LocalCache$LocalLoadingCache
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #75                 // Method com/google/common/cache/LocalCache$LocalLoadingCache."<init>":(Lcom/google/common/cache/CacheBuilder;Lcom/google/common/cache/CacheLoader;)V
      13: areturn

  public <K1 extends K, V1 extends V> com.google.common.cache.Cache<K1, V1> build();
    Code:
       0: aload_0
       1: invokespecial #73                 // Method checkWeightWithWeigher:()V
       4: aload_0
       5: invokespecial #76                 // Method checkNonLoadingCache:()V
       8: new           #77                 // class com/google/common/cache/LocalCache$LocalManualCache
      11: dup
      12: aload_0
      13: invokespecial #78                 // Method com/google/common/cache/LocalCache$LocalManualCache."<init>":(Lcom/google/common/cache/CacheBuilder;)V
      16: areturn

  private void checkNonLoadingCache();
    Code:
       0: aload_0
       1: getfield      #12                 // Field refreshNanos:J
       4: ldc2_w        #6                  // long -1l
       7: lcmp
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ldc           #79                 // String refreshAfterWrite requires a LoadingCache
      18: invokestatic  #40                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      21: return

  private void checkWeightWithWeigher();
    Code:
       0: aload_0
       1: getfield      #38                 // Field weigher:Lcom/google/common/cache/Weigher;
       4: ifnonnull     31
       7: aload_0
       8: getfield      #9                  // Field maximumWeight:J
      11: ldc2_w        #6                  // long -1l
      14: lcmp
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ldc           #80                 // String maximumWeight requires weigher
      25: invokestatic  #40                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      28: goto          84
      31: aload_0
      32: getfield      #2                  // Field strictParsing:Z
      35: ifeq          62
      38: aload_0
      39: getfield      #9                  // Field maximumWeight:J
      42: ldc2_w        #6                  // long -1l
      45: lcmp
      46: ifeq          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ldc           #81                 // String weigher requires maximumWeight
      56: invokestatic  #40                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      59: goto          84
      62: aload_0
      63: getfield      #9                  // Field maximumWeight:J
      66: ldc2_w        #6                  // long -1l
      69: lcmp
      70: ifne          84
      73: getstatic     #82                 // Field logger:Ljava/util/logging/Logger;
      76: getstatic     #83                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      79: ldc           #84                 // String ignoring weigher specified without maximumWeight
      81: invokevirtual #85                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
      84: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #86                 // Method com/google/common/base/MoreObjects.toStringHelper:(Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
       4: astore_1
       5: aload_0
       6: getfield      #4                  // Field initialCapacity:I
       9: iconst_m1
      10: if_icmpeq     24
      13: aload_1
      14: ldc           #87                 // String initialCapacity
      16: aload_0
      17: getfield      #4                  // Field initialCapacity:I
      20: invokevirtual #88                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;I)Lcom/google/common/base/MoreObjects$ToStringHelper;
      23: pop
      24: aload_0
      25: getfield      #5                  // Field concurrencyLevel:I
      28: iconst_m1
      29: if_icmpeq     43
      32: aload_1
      33: ldc           #89                 // String concurrencyLevel
      35: aload_0
      36: getfield      #5                  // Field concurrencyLevel:I
      39: invokevirtual #88                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;I)Lcom/google/common/base/MoreObjects$ToStringHelper;
      42: pop
      43: aload_0
      44: getfield      #8                  // Field maximumSize:J
      47: ldc2_w        #6                  // long -1l
      50: lcmp
      51: ifeq          65
      54: aload_1
      55: ldc           #90                 // String maximumSize
      57: aload_0
      58: getfield      #8                  // Field maximumSize:J
      61: invokevirtual #91                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;J)Lcom/google/common/base/MoreObjects$ToStringHelper;
      64: pop
      65: aload_0
      66: getfield      #9                  // Field maximumWeight:J
      69: ldc2_w        #6                  // long -1l
      72: lcmp
      73: ifeq          87
      76: aload_1
      77: ldc           #92                 // String maximumWeight
      79: aload_0
      80: getfield      #9                  // Field maximumWeight:J
      83: invokevirtual #91                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;J)Lcom/google/common/base/MoreObjects$ToStringHelper;
      86: pop
      87: aload_0
      88: getfield      #10                 // Field expireAfterWriteNanos:J
      91: ldc2_w        #6                  // long -1l
      94: lcmp
      95: ifeq          127
      98: aload_1
      99: ldc           #93                 // String expireAfterWrite
     101: new           #94                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #95                 // Method java/lang/StringBuilder."<init>":()V
     108: aload_0
     109: getfield      #10                 // Field expireAfterWriteNanos:J
     112: invokevirtual #96                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     115: ldc           #97                 // String ns
     117: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: invokevirtual #100                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
     126: pop
     127: aload_0
     128: getfield      #11                 // Field expireAfterAccessNanos:J
     131: ldc2_w        #6                  // long -1l
     134: lcmp
     135: ifeq          167
     138: aload_1
     139: ldc           #101                // String expireAfterAccess
     141: new           #94                 // class java/lang/StringBuilder
     144: dup
     145: invokespecial #95                 // Method java/lang/StringBuilder."<init>":()V
     148: aload_0
     149: getfield      #11                 // Field expireAfterAccessNanos:J
     152: invokevirtual #96                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     155: ldc           #97                 // String ns
     157: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     163: invokevirtual #100                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
     166: pop
     167: aload_0
     168: getfield      #50                 // Field keyStrength:Lcom/google/common/cache/LocalCache$Strength;
     171: ifnull        191
     174: aload_1
     175: ldc           #102                // String keyStrength
     177: aload_0
     178: getfield      #50                 // Field keyStrength:Lcom/google/common/cache/LocalCache$Strength;
     181: invokevirtual #103                // Method com/google/common/cache/LocalCache$Strength.toString:()Ljava/lang/String;
     184: invokestatic  #104                // Method com/google/common/base/Ascii.toLowerCase:(Ljava/lang/String;)Ljava/lang/String;
     187: invokevirtual #100                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
     190: pop
     191: aload_0
     192: getfield      #56                 // Field valueStrength:Lcom/google/common/cache/LocalCache$Strength;
     195: ifnull        215
     198: aload_1
     199: ldc           #105                // String valueStrength
     201: aload_0
     202: getfield      #56                 // Field valueStrength:Lcom/google/common/cache/LocalCache$Strength;
     205: invokevirtual #103                // Method com/google/common/cache/LocalCache$Strength.toString:()Ljava/lang/String;
     208: invokestatic  #104                // Method com/google/common/base/Ascii.toLowerCase:(Ljava/lang/String;)Ljava/lang/String;
     211: invokevirtual #100                // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
     214: pop
     215: aload_0
     216: getfield      #20                 // Field keyEquivalence:Lcom/google/common/base/Equivalence;
     219: ifnull        229
     222: aload_1
     223: ldc           #106                // String keyEquivalence
     225: invokevirtual #107                // Method com/google/common/base/MoreObjects$ToStringHelper.addValue:(Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
     228: pop
     229: aload_0
     230: getfield      #28                 // Field valueEquivalence:Lcom/google/common/base/Equivalence;
     233: ifnull        243
     236: aload_1
     237: ldc           #108                // String valueEquivalence
     239: invokevirtual #107                // Method com/google/common/base/MoreObjects$ToStringHelper.addValue:(Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
     242: pop
     243: aload_0
     244: getfield      #69                 // Field removalListener:Lcom/google/common/cache/RemovalListener;
     247: ifnull        257
     250: aload_1
     251: ldc           #109                // String removalListener
     253: invokevirtual #107                // Method com/google/common/base/MoreObjects$ToStringHelper.addValue:(Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
     256: pop
     257: aload_1
     258: invokevirtual #110                // Method com/google/common/base/MoreObjects$ToStringHelper.toString:()Ljava/lang/String;
     261: areturn

  static {};
    Code:
       0: new           #111                // class com/google/common/cache/CacheBuilder$1
       3: dup
       4: invokespecial #112                // Method com/google/common/cache/CacheBuilder$1."<init>":()V
       7: invokestatic  #113                // Method com/google/common/base/Suppliers.ofInstance:(Ljava/lang/Object;)Lcom/google/common/base/Supplier;
      10: putstatic     #13                 // Field NULL_STATS_COUNTER:Lcom/google/common/base/Supplier;
      13: new           #114                // class com/google/common/cache/CacheStats
      16: dup
      17: lconst_0
      18: lconst_0
      19: lconst_0
      20: lconst_0
      21: lconst_0
      22: lconst_0
      23: invokespecial #115                // Method com/google/common/cache/CacheStats."<init>":(JJJJJJ)V
      26: putstatic     #116                // Field EMPTY_STATS:Lcom/google/common/cache/CacheStats;
      29: new           #117                // class com/google/common/cache/CacheBuilder$2
      32: dup
      33: invokespecial #118                // Method com/google/common/cache/CacheBuilder$2."<init>":()V
      36: putstatic     #72                 // Field CACHE_STATS_COUNTER:Lcom/google/common/base/Supplier;
      39: new           #119                // class com/google/common/cache/CacheBuilder$3
      42: dup
      43: invokespecial #120                // Method com/google/common/cache/CacheBuilder$3."<init>":()V
      46: putstatic     #68                 // Field NULL_TICKER:Lcom/google/common/base/Ticker;
      49: ldc           #3                  // class com/google/common/cache/CacheBuilder
      51: invokevirtual #121                // Method java/lang/Class.getName:()Ljava/lang/String;
      54: invokestatic  #122                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      57: putstatic     #82                 // Field logger:Ljava/util/logging/Logger;
      60: return
}
