Compiled from "AbstractFuture.java"
final class com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper extends com.google.common.util.concurrent.AbstractFuture$AtomicHelper {
  private com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #2                  // Method com/google/common/util/concurrent/AbstractFuture$AtomicHelper."<init>":(Lcom/google/common/util/concurrent/AbstractFuture$1;)V
       5: return

  void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter, java.lang.Thread);
    Code:
       0: aload_1
       1: aload_2
       2: putfield      #3                  // Field com/google/common/util/concurrent/AbstractFuture$Waiter.thread:Ljava/lang/Thread;
       5: return

  void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter, com.google.common.util.concurrent.AbstractFuture$Waiter);
    Code:
       0: aload_1
       1: aload_2
       2: putfield      #4                  // Field com/google/common/util/concurrent/AbstractFuture$Waiter.next:Lcom/google/common/util/concurrent/AbstractFuture$Waiter;
       5: return

  boolean casWaiters(com.google.common.util.concurrent.AbstractFuture<?>, com.google.common.util.concurrent.AbstractFuture$Waiter, com.google.common.util.concurrent.AbstractFuture$Waiter);
    Code:
       0: aload_1
       1: dup
       2: astore        4
       4: monitorenter
       5: aload_1
       6: invokestatic  #5                  // Method com/google/common/util/concurrent/AbstractFuture.access$700:(Lcom/google/common/util/concurrent/AbstractFuture;)Lcom/google/common/util/concurrent/AbstractFuture$Waiter;
       9: aload_2
      10: if_acmpne     24
      13: aload_1
      14: aload_3
      15: invokestatic  #6                  // Method com/google/common/util/concurrent/AbstractFuture.access$702:(Lcom/google/common/util/concurrent/AbstractFuture;Lcom/google/common/util/concurrent/AbstractFuture$Waiter;)Lcom/google/common/util/concurrent/AbstractFuture$Waiter;
      18: pop
      19: iconst_1
      20: aload         4
      22: monitorexit
      23: ireturn
      24: iconst_0
      25: aload         4
      27: monitorexit
      28: ireturn
      29: astore        5
      31: aload         4
      33: monitorexit
      34: aload         5
      36: athrow
    Exception table:
       from    to  target type
           5    23    29   any
          24    28    29   any
          29    34    29   any

  boolean casListeners(com.google.common.util.concurrent.AbstractFuture<?>, com.google.common.util.concurrent.AbstractFuture$Listener, com.google.common.util.concurrent.AbstractFuture$Listener);
    Code:
       0: aload_1
       1: dup
       2: astore        4
       4: monitorenter
       5: aload_1
       6: invokestatic  #7                  // Method com/google/common/util/concurrent/AbstractFuture.access$800:(Lcom/google/common/util/concurrent/AbstractFuture;)Lcom/google/common/util/concurrent/AbstractFuture$Listener;
       9: aload_2
      10: if_acmpne     24
      13: aload_1
      14: aload_3
      15: invokestatic  #8                  // Method com/google/common/util/concurrent/AbstractFuture.access$802:(Lcom/google/common/util/concurrent/AbstractFuture;Lcom/google/common/util/concurrent/AbstractFuture$Listener;)Lcom/google/common/util/concurrent/AbstractFuture$Listener;
      18: pop
      19: iconst_1
      20: aload         4
      22: monitorexit
      23: ireturn
      24: iconst_0
      25: aload         4
      27: monitorexit
      28: ireturn
      29: astore        5
      31: aload         4
      33: monitorexit
      34: aload         5
      36: athrow
    Exception table:
       from    to  target type
           5    23    29   any
          24    28    29   any
          29    34    29   any

  boolean casValue(com.google.common.util.concurrent.AbstractFuture<?>, java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: dup
       2: astore        4
       4: monitorenter
       5: aload_1
       6: invokestatic  #9                  // Method com/google/common/util/concurrent/AbstractFuture.access$300:(Lcom/google/common/util/concurrent/AbstractFuture;)Ljava/lang/Object;
       9: aload_2
      10: if_acmpne     24
      13: aload_1
      14: aload_3
      15: invokestatic  #10                 // Method com/google/common/util/concurrent/AbstractFuture.access$302:(Lcom/google/common/util/concurrent/AbstractFuture;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: iconst_1
      20: aload         4
      22: monitorexit
      23: ireturn
      24: iconst_0
      25: aload         4
      27: monitorexit
      28: ireturn
      29: astore        5
      31: aload         4
      33: monitorexit
      34: aload         5
      36: athrow
    Exception table:
       from    to  target type
           5    23    29   any
          24    28    29   any
          29    34    29   any

  com.google.common.util.concurrent.AbstractFuture$SynchronizedHelper(com.google.common.util.concurrent.AbstractFuture$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
