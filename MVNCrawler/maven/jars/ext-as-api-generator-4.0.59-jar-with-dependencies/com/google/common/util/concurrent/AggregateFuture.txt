Compiled from "AggregateFuture.java"
abstract class com.google.common.util.concurrent.AggregateFuture<InputT, OutputT> extends com.google.common.util.concurrent.AbstractFuture$TrustedFuture<OutputT> {
  private static final java.util.logging.Logger logger;

  private com.google.common.util.concurrent.AggregateFuture<InputT, OutputT>.RunningState runningState;

  com.google.common.util.concurrent.AggregateFuture();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method com/google/common/util/concurrent/AbstractFuture$TrustedFuture."<init>":()V
       4: return

  protected final void afterDone();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method com/google/common/util/concurrent/AbstractFuture$TrustedFuture.afterDone:()V
       4: aload_0
       5: getfield      #1                  // Field runningState:Lcom/google/common/util/concurrent/AggregateFuture$RunningState;
       8: astore_1
       9: aload_1
      10: ifnull        96
      13: aload_0
      14: aconst_null
      15: putfield      #1                  // Field runningState:Lcom/google/common/util/concurrent/AggregateFuture$RunningState;
      18: aload_1
      19: invokestatic  #6                  // Method com/google/common/util/concurrent/AggregateFuture$RunningState.access$000:(Lcom/google/common/util/concurrent/AggregateFuture$RunningState;)Lcom/google/common/collect/ImmutableCollection;
      22: astore_2
      23: aload_0
      24: invokevirtual #7                  // Method wasInterrupted:()Z
      27: istore_3
      28: aload_0
      29: invokevirtual #7                  // Method wasInterrupted:()Z
      32: ifeq          39
      35: aload_1
      36: invokevirtual #8                  // Method com/google/common/util/concurrent/AggregateFuture$RunningState.interruptTask:()V
      39: aload_0
      40: invokevirtual #9                  // Method isCancelled:()Z
      43: aload_2
      44: ifnull        51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: iand
      53: ifeq          96
      56: aload_2
      57: invokevirtual #10                 // Method com/google/common/collect/ImmutableCollection.iterator:()Lcom/google/common/collect/UnmodifiableIterator;
      60: astore        4
      62: aload         4
      64: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      69: ifeq          96
      72: aload         4
      74: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      79: checkcast     #13                 // class com/google/common/util/concurrent/ListenableFuture
      82: astore        5
      84: aload         5
      86: iload_3
      87: invokeinterface #14,  2           // InterfaceMethod com/google/common/util/concurrent/ListenableFuture.cancel:(Z)Z
      92: pop
      93: goto          62
      96: return

  final void init(com.google.common.util.concurrent.AggregateFuture<InputT, OutputT>.RunningState);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field runningState:Lcom/google/common/util/concurrent/AggregateFuture$RunningState;
       5: aload_1
       6: invokestatic  #15                 // Method com/google/common/util/concurrent/AggregateFuture$RunningState.access$100:(Lcom/google/common/util/concurrent/AggregateFuture$RunningState;)V
       9: return

  private static boolean addCausalChain(java.util.Set<java.lang.Throwable>, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnull        26
       4: aload_0
       5: aload_1
       6: invokeinterface #16,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      11: istore_2
      12: iload_2
      13: ifne          18
      16: iconst_0
      17: ireturn
      18: aload_1
      19: invokevirtual #17                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      22: astore_1
      23: goto          0
      26: iconst_1
      27: ireturn

  static boolean access$400(java.util.Set, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method addCausalChain:(Ljava/util/Set;Ljava/lang/Throwable;)Z
       5: ireturn

  static java.util.logging.Logger access$500();
    Code:
       0: getstatic     #2                  // Field logger:Ljava/util/logging/Logger;
       3: areturn

  static com.google.common.util.concurrent.AggregateFuture$RunningState access$602(com.google.common.util.concurrent.AggregateFuture, com.google.common.util.concurrent.AggregateFuture$RunningState);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field runningState:Lcom/google/common/util/concurrent/AggregateFuture$RunningState;
       6: areturn

  static {};
    Code:
       0: ldc           #18                 // class com/google/common/util/concurrent/AggregateFuture
       2: invokevirtual #19                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #20                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #2                  // Field logger:Ljava/util/logging/Logger;
      11: return
}
