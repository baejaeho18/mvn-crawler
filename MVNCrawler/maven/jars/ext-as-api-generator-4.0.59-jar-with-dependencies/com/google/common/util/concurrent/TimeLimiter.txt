Compiled from "TimeLimiter.java"
public interface com.google.common.util.concurrent.TimeLimiter {
  public abstract <T> T newProxy(T, java.lang.Class<T>, long, java.util.concurrent.TimeUnit);

  public abstract <T> T callWithTimeout(java.util.concurrent.Callable<T>, long, java.util.concurrent.TimeUnit, boolean) throws java.lang.Exception;

  public abstract <T> T callWithTimeout(java.util.concurrent.Callable<T>, long, java.util.concurrent.TimeUnit) throws java.util.concurrent.TimeoutException, java.lang.InterruptedException, java.util.concurrent.ExecutionException;

  public abstract <T> T callUninterruptiblyWithTimeout(java.util.concurrent.Callable<T>, long, java.util.concurrent.TimeUnit) throws java.util.concurrent.TimeoutException, java.util.concurrent.ExecutionException;

  public abstract void runWithTimeout(java.lang.Runnable, long, java.util.concurrent.TimeUnit) throws java.util.concurrent.TimeoutException, java.lang.InterruptedException;

  public abstract void runUninterruptiblyWithTimeout(java.lang.Runnable, long, java.util.concurrent.TimeUnit) throws java.util.concurrent.TimeoutException;
}
