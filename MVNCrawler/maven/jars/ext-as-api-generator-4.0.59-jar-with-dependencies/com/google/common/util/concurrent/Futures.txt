Compiled from "Futures.java"
public final class com.google.common.util.concurrent.Futures extends com.google.common.util.concurrent.GwtFuturesCatchingSpecialization {
  private static final com.google.common.util.concurrent.AsyncFunction<com.google.common.util.concurrent.ListenableFuture<java.lang.Object>, java.lang.Object> DEREFERENCER;

  private com.google.common.util.concurrent.Futures();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/common/util/concurrent/GwtFuturesCatchingSpecialization."<init>":()V
       4: return

  public static <V, X extends java.lang.Exception> com.google.common.util.concurrent.CheckedFuture<V, X> makeChecked(com.google.common.util.concurrent.ListenableFuture<V>, com.google.common.base.Function<? super java.lang.Exception, X>);
    Code:
       0: new           #2                  // class com/google/common/util/concurrent/Futures$MappingCheckedFuture
       3: dup
       4: aload_0
       5: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #4                  // class com/google/common/util/concurrent/ListenableFuture
      11: aload_1
      12: invokespecial #5                  // Method com/google/common/util/concurrent/Futures$MappingCheckedFuture."<init>":(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/base/Function;)V
      15: areturn

  public static <V> com.google.common.util.concurrent.ListenableFuture<V> immediateFuture(V);
    Code:
       0: aload_0
       1: ifnonnull     10
       4: getstatic     #6                  // Field com/google/common/util/concurrent/ImmediateFuture$ImmediateSuccessfulFuture.NULL:Lcom/google/common/util/concurrent/ImmediateFuture$ImmediateSuccessfulFuture;
       7: astore_1
       8: aload_1
       9: areturn
      10: new           #7                  // class com/google/common/util/concurrent/ImmediateFuture$ImmediateSuccessfulFuture
      13: dup
      14: aload_0
      15: invokespecial #8                  // Method com/google/common/util/concurrent/ImmediateFuture$ImmediateSuccessfulFuture."<init>":(Ljava/lang/Object;)V
      18: areturn

  public static <V, X extends java.lang.Exception> com.google.common.util.concurrent.CheckedFuture<V, X> immediateCheckedFuture(V);
    Code:
       0: new           #9                  // class com/google/common/util/concurrent/ImmediateFuture$ImmediateSuccessfulCheckedFuture
       3: dup
       4: aload_0
       5: invokespecial #10                 // Method com/google/common/util/concurrent/ImmediateFuture$ImmediateSuccessfulCheckedFuture."<init>":(Ljava/lang/Object;)V
       8: areturn

  public static <V> com.google.common.util.concurrent.ListenableFuture<V> immediateFailedFuture(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #11                 // class com/google/common/util/concurrent/ImmediateFuture$ImmediateFailedFuture
       8: dup
       9: aload_0
      10: invokespecial #12                 // Method com/google/common/util/concurrent/ImmediateFuture$ImmediateFailedFuture."<init>":(Ljava/lang/Throwable;)V
      13: areturn

  public static <V> com.google.common.util.concurrent.ListenableFuture<V> immediateCancelledFuture();
    Code:
       0: new           #13                 // class com/google/common/util/concurrent/ImmediateFuture$ImmediateCancelledFuture
       3: dup
       4: invokespecial #14                 // Method com/google/common/util/concurrent/ImmediateFuture$ImmediateCancelledFuture."<init>":()V
       7: areturn

  public static <V, X extends java.lang.Exception> com.google.common.util.concurrent.CheckedFuture<V, X> immediateFailedCheckedFuture(X);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #15                 // class com/google/common/util/concurrent/ImmediateFuture$ImmediateFailedCheckedFuture
       8: dup
       9: aload_0
      10: invokespecial #16                 // Method com/google/common/util/concurrent/ImmediateFuture$ImmediateFailedCheckedFuture."<init>":(Ljava/lang/Exception;)V
      13: areturn

  public static <V, X extends java.lang.Throwable> com.google.common.util.concurrent.ListenableFuture<V> catching(com.google.common.util.concurrent.ListenableFuture<? extends V>, java.lang.Class<X>, com.google.common.base.Function<? super X, ? extends V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #17                 // Method com/google/common/util/concurrent/AbstractCatchingFuture.create:(Lcom/google/common/util/concurrent/ListenableFuture;Ljava/lang/Class;Lcom/google/common/base/Function;)Lcom/google/common/util/concurrent/ListenableFuture;
       6: areturn

  public static <V, X extends java.lang.Throwable> com.google.common.util.concurrent.ListenableFuture<V> catching(com.google.common.util.concurrent.ListenableFuture<? extends V>, java.lang.Class<X>, com.google.common.base.Function<? super X, ? extends V>, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #18                 // Method com/google/common/util/concurrent/AbstractCatchingFuture.create:(Lcom/google/common/util/concurrent/ListenableFuture;Ljava/lang/Class;Lcom/google/common/base/Function;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture;
       7: areturn

  public static <V, X extends java.lang.Throwable> com.google.common.util.concurrent.ListenableFuture<V> catchingAsync(com.google.common.util.concurrent.ListenableFuture<? extends V>, java.lang.Class<X>, com.google.common.util.concurrent.AsyncFunction<? super X, ? extends V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #19                 // Method com/google/common/util/concurrent/AbstractCatchingFuture.create:(Lcom/google/common/util/concurrent/ListenableFuture;Ljava/lang/Class;Lcom/google/common/util/concurrent/AsyncFunction;)Lcom/google/common/util/concurrent/ListenableFuture;
       6: areturn

  public static <V, X extends java.lang.Throwable> com.google.common.util.concurrent.ListenableFuture<V> catchingAsync(com.google.common.util.concurrent.ListenableFuture<? extends V>, java.lang.Class<X>, com.google.common.util.concurrent.AsyncFunction<? super X, ? extends V>, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #20                 // Method com/google/common/util/concurrent/AbstractCatchingFuture.create:(Lcom/google/common/util/concurrent/ListenableFuture;Ljava/lang/Class;Lcom/google/common/util/concurrent/AsyncFunction;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture;
       7: areturn

  public static <V> com.google.common.util.concurrent.ListenableFuture<V> withTimeout(com.google.common.util.concurrent.ListenableFuture<V>, long, java.util.concurrent.TimeUnit, java.util.concurrent.ScheduledExecutorService);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: aload         4
       5: invokestatic  #21                 // Method com/google/common/util/concurrent/TimeoutFuture.create:(Lcom/google/common/util/concurrent/ListenableFuture;JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ScheduledExecutorService;)Lcom/google/common/util/concurrent/ListenableFuture;
       8: areturn

  public static <I, O> com.google.common.util.concurrent.ListenableFuture<O> transformAsync(com.google.common.util.concurrent.ListenableFuture<I>, com.google.common.util.concurrent.AsyncFunction<? super I, ? extends O>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #22                 // Method com/google/common/util/concurrent/AbstractTransformFuture.create:(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/util/concurrent/AsyncFunction;)Lcom/google/common/util/concurrent/ListenableFuture;
       5: areturn

  public static <I, O> com.google.common.util.concurrent.ListenableFuture<O> transformAsync(com.google.common.util.concurrent.ListenableFuture<I>, com.google.common.util.concurrent.AsyncFunction<? super I, ? extends O>, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #23                 // Method com/google/common/util/concurrent/AbstractTransformFuture.create:(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/util/concurrent/AsyncFunction;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture;
       6: areturn

  public static <I, O> com.google.common.util.concurrent.ListenableFuture<O> transform(com.google.common.util.concurrent.ListenableFuture<I>, com.google.common.base.Function<? super I, ? extends O>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #24                 // Method com/google/common/util/concurrent/AbstractTransformFuture.create:(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/base/Function;)Lcom/google/common/util/concurrent/ListenableFuture;
       5: areturn

  public static <I, O> com.google.common.util.concurrent.ListenableFuture<O> transform(com.google.common.util.concurrent.ListenableFuture<I>, com.google.common.base.Function<? super I, ? extends O>, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #25                 // Method com/google/common/util/concurrent/AbstractTransformFuture.create:(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/base/Function;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture;
       6: areturn

  public static <I, O> java.util.concurrent.Future<O> lazyTransform(java.util.concurrent.Future<I>, com.google.common.base.Function<? super I, ? extends O>);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: new           #26                 // class com/google/common/util/concurrent/Futures$1
      13: dup
      14: aload_0
      15: aload_1
      16: invokespecial #27                 // Method com/google/common/util/concurrent/Futures$1."<init>":(Ljava/util/concurrent/Future;Lcom/google/common/base/Function;)V
      19: areturn

  public static <V> com.google.common.util.concurrent.ListenableFuture<V> dereference(com.google.common.util.concurrent.ListenableFuture<? extends com.google.common.util.concurrent.ListenableFuture<? extends V>>);
    Code:
       0: aload_0
       1: getstatic     #28                 // Field DEREFERENCER:Lcom/google/common/util/concurrent/AsyncFunction;
       4: invokestatic  #29                 // Method com/google/common/util/concurrent/MoreExecutors.directExecutor:()Ljava/util/concurrent/Executor;
       7: invokestatic  #30                 // Method transformAsync:(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/util/concurrent/AsyncFunction;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture;
      10: areturn

  public static <V> com.google.common.util.concurrent.ListenableFuture<java.util.List<V>> allAsList(com.google.common.util.concurrent.ListenableFuture<? extends V>...);
    Code:
       0: new           #31                 // class com/google/common/util/concurrent/CollectionFuture$ListFuture
       3: dup
       4: aload_0
       5: invokestatic  #32                 // Method com/google/common/collect/ImmutableList.copyOf:([Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
       8: iconst_1
       9: invokespecial #33                 // Method com/google/common/util/concurrent/CollectionFuture$ListFuture."<init>":(Lcom/google/common/collect/ImmutableCollection;Z)V
      12: areturn

  public static <V> com.google.common.util.concurrent.ListenableFuture<java.util.List<V>> allAsList(java.lang.Iterable<? extends com.google.common.util.concurrent.ListenableFuture<? extends V>>);
    Code:
       0: new           #31                 // class com/google/common/util/concurrent/CollectionFuture$ListFuture
       3: dup
       4: aload_0
       5: invokestatic  #34                 // Method com/google/common/collect/ImmutableList.copyOf:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableList;
       8: iconst_1
       9: invokespecial #33                 // Method com/google/common/util/concurrent/CollectionFuture$ListFuture."<init>":(Lcom/google/common/collect/ImmutableCollection;Z)V
      12: areturn

  public static <V> com.google.common.util.concurrent.Futures$FutureCombiner<V> whenAllComplete(com.google.common.util.concurrent.ListenableFuture<? extends V>...);
    Code:
       0: new           #35                 // class com/google/common/util/concurrent/Futures$FutureCombiner
       3: dup
       4: iconst_0
       5: aload_0
       6: invokestatic  #32                 // Method com/google/common/collect/ImmutableList.copyOf:([Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
       9: aconst_null
      10: invokespecial #36                 // Method com/google/common/util/concurrent/Futures$FutureCombiner."<init>":(ZLcom/google/common/collect/ImmutableList;Lcom/google/common/util/concurrent/Futures$1;)V
      13: areturn

  public static <V> com.google.common.util.concurrent.Futures$FutureCombiner<V> whenAllComplete(java.lang.Iterable<? extends com.google.common.util.concurrent.ListenableFuture<? extends V>>);
    Code:
       0: new           #35                 // class com/google/common/util/concurrent/Futures$FutureCombiner
       3: dup
       4: iconst_0
       5: aload_0
       6: invokestatic  #34                 // Method com/google/common/collect/ImmutableList.copyOf:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableList;
       9: aconst_null
      10: invokespecial #36                 // Method com/google/common/util/concurrent/Futures$FutureCombiner."<init>":(ZLcom/google/common/collect/ImmutableList;Lcom/google/common/util/concurrent/Futures$1;)V
      13: areturn

  public static <V> com.google.common.util.concurrent.Futures$FutureCombiner<V> whenAllSucceed(com.google.common.util.concurrent.ListenableFuture<? extends V>...);
    Code:
       0: new           #35                 // class com/google/common/util/concurrent/Futures$FutureCombiner
       3: dup
       4: iconst_1
       5: aload_0
       6: invokestatic  #32                 // Method com/google/common/collect/ImmutableList.copyOf:([Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
       9: aconst_null
      10: invokespecial #36                 // Method com/google/common/util/concurrent/Futures$FutureCombiner."<init>":(ZLcom/google/common/collect/ImmutableList;Lcom/google/common/util/concurrent/Futures$1;)V
      13: areturn

  public static <V> com.google.common.util.concurrent.Futures$FutureCombiner<V> whenAllSucceed(java.lang.Iterable<? extends com.google.common.util.concurrent.ListenableFuture<? extends V>>);
    Code:
       0: new           #35                 // class com/google/common/util/concurrent/Futures$FutureCombiner
       3: dup
       4: iconst_1
       5: aload_0
       6: invokestatic  #34                 // Method com/google/common/collect/ImmutableList.copyOf:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableList;
       9: aconst_null
      10: invokespecial #36                 // Method com/google/common/util/concurrent/Futures$FutureCombiner."<init>":(ZLcom/google/common/collect/ImmutableList;Lcom/google/common/util/concurrent/Futures$1;)V
      13: areturn

  public static <V> com.google.common.util.concurrent.ListenableFuture<V> nonCancellationPropagating(com.google.common.util.concurrent.ListenableFuture<V>);
    Code:
       0: aload_0
       1: invokeinterface #37,  1           // InterfaceMethod com/google/common/util/concurrent/ListenableFuture.isDone:()Z
       6: ifeq          11
       9: aload_0
      10: areturn
      11: new           #38                 // class com/google/common/util/concurrent/Futures$NonCancellationPropagatingFuture
      14: dup
      15: aload_0
      16: invokespecial #39                 // Method com/google/common/util/concurrent/Futures$NonCancellationPropagatingFuture."<init>":(Lcom/google/common/util/concurrent/ListenableFuture;)V
      19: areturn

  public static <V> com.google.common.util.concurrent.ListenableFuture<java.util.List<V>> successfulAsList(com.google.common.util.concurrent.ListenableFuture<? extends V>...);
    Code:
       0: new           #31                 // class com/google/common/util/concurrent/CollectionFuture$ListFuture
       3: dup
       4: aload_0
       5: invokestatic  #32                 // Method com/google/common/collect/ImmutableList.copyOf:([Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
       8: iconst_0
       9: invokespecial #33                 // Method com/google/common/util/concurrent/CollectionFuture$ListFuture."<init>":(Lcom/google/common/collect/ImmutableCollection;Z)V
      12: areturn

  public static <V> com.google.common.util.concurrent.ListenableFuture<java.util.List<V>> successfulAsList(java.lang.Iterable<? extends com.google.common.util.concurrent.ListenableFuture<? extends V>>);
    Code:
       0: new           #31                 // class com/google/common/util/concurrent/CollectionFuture$ListFuture
       3: dup
       4: aload_0
       5: invokestatic  #34                 // Method com/google/common/collect/ImmutableList.copyOf:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableList;
       8: iconst_0
       9: invokespecial #33                 // Method com/google/common/util/concurrent/CollectionFuture$ListFuture."<init>":(Lcom/google/common/collect/ImmutableCollection;Z)V
      12: areturn

  public static <T> com.google.common.collect.ImmutableList<com.google.common.util.concurrent.ListenableFuture<T>> inCompletionOrder(java.lang.Iterable<? extends com.google.common.util.concurrent.ListenableFuture<? extends T>>);
    Code:
       0: aload_0
       1: invokestatic  #34                 // Method com/google/common/collect/ImmutableList.copyOf:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableList;
       4: astore_1
       5: invokestatic  #40                 // Method com/google/common/collect/ImmutableList.builder:()Lcom/google/common/collect/ImmutableList$Builder;
       8: astore_2
       9: iconst_0
      10: istore_3
      11: iload_3
      12: aload_1
      13: invokevirtual #41                 // Method com/google/common/collect/ImmutableList.size:()I
      16: if_icmpge     33
      19: aload_2
      20: invokestatic  #42                 // Method com/google/common/util/concurrent/SettableFuture.create:()Lcom/google/common/util/concurrent/SettableFuture;
      23: invokevirtual #43                 // Method com/google/common/collect/ImmutableList$Builder.add:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList$Builder;
      26: pop
      27: iinc          3, 1
      30: goto          11
      33: aload_2
      34: invokevirtual #44                 // Method com/google/common/collect/ImmutableList$Builder.build:()Lcom/google/common/collect/ImmutableList;
      37: astore_3
      38: new           #45                 // class java/util/concurrent/atomic/AtomicInteger
      41: dup
      42: invokespecial #46                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      45: astore        4
      47: aload_1
      48: invokevirtual #47                 // Method com/google/common/collect/ImmutableList.iterator:()Lcom/google/common/collect/UnmodifiableIterator;
      51: astore        5
      53: aload         5
      55: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      60: ifeq          100
      63: aload         5
      65: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      70: checkcast     #4                  // class com/google/common/util/concurrent/ListenableFuture
      73: astore        6
      75: aload         6
      77: new           #50                 // class com/google/common/util/concurrent/Futures$3
      80: dup
      81: aload         4
      83: aload_3
      84: aload         6
      86: invokespecial #51                 // Method com/google/common/util/concurrent/Futures$3."<init>":(Ljava/util/concurrent/atomic/AtomicInteger;Lcom/google/common/collect/ImmutableList;Lcom/google/common/util/concurrent/ListenableFuture;)V
      89: invokestatic  #29                 // Method com/google/common/util/concurrent/MoreExecutors.directExecutor:()Ljava/util/concurrent/Executor;
      92: invokeinterface #52,  3           // InterfaceMethod com/google/common/util/concurrent/ListenableFuture.addListener:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
      97: goto          53
     100: aload_3
     101: astore        5
     103: aload         5
     105: areturn

  public static <V> void addCallback(com.google.common.util.concurrent.ListenableFuture<V>, com.google.common.util.concurrent.FutureCallback<? super V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #29                 // Method com/google/common/util/concurrent/MoreExecutors.directExecutor:()Ljava/util/concurrent/Executor;
       5: invokestatic  #53                 // Method addCallback:(Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/util/concurrent/FutureCallback;Ljava/util/concurrent/Executor;)V
       8: return

  public static <V> void addCallback(com.google.common.util.concurrent.ListenableFuture<V>, com.google.common.util.concurrent.FutureCallback<? super V>, java.util.concurrent.Executor);
    Code:
       0: aload_1
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: new           #54                 // class com/google/common/util/concurrent/Futures$CallbackListener
       9: dup
      10: aload_0
      11: aload_1
      12: invokespecial #55                 // Method com/google/common/util/concurrent/Futures$CallbackListener."<init>":(Ljava/util/concurrent/Future;Lcom/google/common/util/concurrent/FutureCallback;)V
      15: aload_2
      16: invokeinterface #52,  3           // InterfaceMethod com/google/common/util/concurrent/ListenableFuture.addListener:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
      21: return

  public static <V> V getDone(java.util.concurrent.Future<V>) throws java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: invokeinterface #56,  1           // InterfaceMethod java/util/concurrent/Future.isDone:()Z
       6: ldc           #57                 // String Future was expected to be done: %s
       8: aload_0
       9: invokestatic  #58                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;Ljava/lang/Object;)V
      12: aload_0
      13: invokestatic  #59                 // Method com/google/common/util/concurrent/Uninterruptibles.getUninterruptibly:(Ljava/util/concurrent/Future;)Ljava/lang/Object;
      16: areturn

  public static <V, X extends java.lang.Exception> V getChecked(java.util.concurrent.Future<V>, java.lang.Class<X>) throws X;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #60                 // Method com/google/common/util/concurrent/FuturesGetChecked.getChecked:(Ljava/util/concurrent/Future;Ljava/lang/Class;)Ljava/lang/Object;
       5: areturn

  public static <V, X extends java.lang.Exception> V getChecked(java.util.concurrent.Future<V>, java.lang.Class<X>, long, java.util.concurrent.TimeUnit) throws X;
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: aload         4
       5: invokestatic  #61                 // Method com/google/common/util/concurrent/FuturesGetChecked.getChecked:(Ljava/util/concurrent/Future;Ljava/lang/Class;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
       8: areturn

  public static <V> V getUnchecked(java.util.concurrent.Future<V>);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokestatic  #59                 // Method com/google/common/util/concurrent/Uninterruptibles.getUninterruptibly:(Ljava/util/concurrent/Future;)Ljava/lang/Object;
       9: areturn
      10: astore_1
      11: aload_1
      12: invokevirtual #63                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
      15: invokestatic  #64                 // Method wrapAndThrowUnchecked:(Ljava/lang/Throwable;)V
      18: new           #65                 // class java/lang/AssertionError
      21: dup
      22: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
      25: athrow
    Exception table:
       from    to  target type
           5     9    10   Class java/util/concurrent/ExecutionException

  private static void wrapAndThrowUnchecked(java.lang.Throwable);
    Code:
       0: aload_0
       1: instanceof    #67                 // class java/lang/Error
       4: ifeq          19
       7: new           #68                 // class com/google/common/util/concurrent/ExecutionError
      10: dup
      11: aload_0
      12: checkcast     #67                 // class java/lang/Error
      15: invokespecial #69                 // Method com/google/common/util/concurrent/ExecutionError."<init>":(Ljava/lang/Error;)V
      18: athrow
      19: new           #70                 // class com/google/common/util/concurrent/UncheckedExecutionException
      22: dup
      23: aload_0
      24: invokespecial #71                 // Method com/google/common/util/concurrent/UncheckedExecutionException."<init>":(Ljava/lang/Throwable;)V
      27: athrow

  static {};
    Code:
       0: new           #72                 // class com/google/common/util/concurrent/Futures$2
       3: dup
       4: invokespecial #73                 // Method com/google/common/util/concurrent/Futures$2."<init>":()V
       7: putstatic     #28                 // Field DEREFERENCER:Lcom/google/common/util/concurrent/AsyncFunction;
      10: return
}
