Compiled from "MoreFiles.java"
final class com.google.common.io.MoreFiles$PathByteSink extends com.google.common.io.ByteSink {
  private final java.nio.file.Path path;

  private final java.nio.file.OpenOption[] options;

  private com.google.common.io.MoreFiles$PathByteSink(java.nio.file.Path, java.nio.file.OpenOption...);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/google/common/io/ByteSink."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #4                  // class java/nio/file/Path
      12: putfield      #5                  // Field path:Ljava/nio/file/Path;
      15: aload_0
      16: aload_2
      17: invokevirtual #6                  // Method "[Ljava/nio/file/OpenOption;".clone:()Ljava/lang/Object;
      20: checkcast     #7                  // class "[Ljava/nio/file/OpenOption;"
      23: putfield      #8                  // Field options:[Ljava/nio/file/OpenOption;
      26: return

  public java.io.OutputStream openStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field path:Ljava/nio/file/Path;
       4: aload_0
       5: getfield      #8                  // Field options:[Ljava/nio/file/OpenOption;
       8: invokestatic  #9                  // Method java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;
      11: areturn

  public java.lang.String toString();
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #12                 // String MoreFiles.asByteSink(
       9: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #5                  // Field path:Ljava/nio/file/Path;
      16: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #15                 // String ,
      21: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #8                  // Field options:[Ljava/nio/file/OpenOption;
      28: invokestatic  #16                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      31: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #17                 // String )
      36: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: areturn

  com.google.common.io.MoreFiles$PathByteSink(java.nio.file.Path, java.nio.file.OpenOption[], com.google.common.io.MoreFiles$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method "<init>":(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)V
       6: return
}
