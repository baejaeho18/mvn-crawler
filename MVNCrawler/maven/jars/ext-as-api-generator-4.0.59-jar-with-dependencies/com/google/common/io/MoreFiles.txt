Compiled from "MoreFiles.java"
public final class com.google.common.io.MoreFiles {
  private com.google.common.io.MoreFiles();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static com.google.common.io.ByteSource asByteSource(java.nio.file.Path, java.nio.file.OpenOption...);
    Code:
       0: new           #2                  // class com/google/common/io/MoreFiles$PathByteSource
       3: dup
       4: aload_0
       5: aload_1
       6: aconst_null
       7: invokespecial #3                  // Method com/google/common/io/MoreFiles$PathByteSource."<init>":(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;Lcom/google/common/io/MoreFiles$1;)V
      10: areturn

  public static com.google.common.io.ByteSink asByteSink(java.nio.file.Path, java.nio.file.OpenOption...);
    Code:
       0: new           #4                  // class com/google/common/io/MoreFiles$PathByteSink
       3: dup
       4: aload_0
       5: aload_1
       6: aconst_null
       7: invokespecial #5                  // Method com/google/common/io/MoreFiles$PathByteSink."<init>":(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;Lcom/google/common/io/MoreFiles$1;)V
      10: areturn

  public static com.google.common.io.CharSource asCharSource(java.nio.file.Path, java.nio.charset.Charset, java.nio.file.OpenOption...);
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #6                  // Method asByteSource:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Lcom/google/common/io/ByteSource;
       5: aload_1
       6: invokevirtual #7                  // Method com/google/common/io/ByteSource.asCharSource:(Ljava/nio/charset/Charset;)Lcom/google/common/io/CharSource;
       9: areturn

  public static com.google.common.io.CharSink asCharSink(java.nio.file.Path, java.nio.charset.Charset, java.nio.file.OpenOption...);
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #8                  // Method asByteSink:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Lcom/google/common/io/ByteSink;
       5: aload_1
       6: invokevirtual #9                  // Method com/google/common/io/ByteSink.asCharSink:(Ljava/nio/charset/Charset;)Lcom/google/common/io/CharSink;
       9: areturn

  public static com.google.common.collect.ImmutableList<java.nio.file.Path> listFiles(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;
       4: astore_1
       5: aconst_null
       6: astore_2
       7: aload_1
       8: invokestatic  #11                 // Method com/google/common/collect/ImmutableList.copyOf:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableList;
      11: astore_3
      12: aload_1
      13: ifnull        46
      16: aload_2
      17: ifnull        40
      20: aload_1
      21: invokeinterface #12,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      26: goto          46
      29: astore        4
      31: aload_2
      32: aload         4
      34: invokevirtual #14                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      37: goto          46
      40: aload_1
      41: invokeinterface #12,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      46: aload_3
      47: areturn
      48: astore_3
      49: aload_3
      50: astore_2
      51: aload_3
      52: athrow
      53: astore        5
      55: aload_1
      56: ifnull        89
      59: aload_2
      60: ifnull        83
      63: aload_1
      64: invokeinterface #12,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      69: goto          89
      72: astore        6
      74: aload_2
      75: aload         6
      77: invokevirtual #14                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      80: goto          89
      83: aload_1
      84: invokeinterface #12,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      89: aload         5
      91: athrow
      92: astore_1
      93: aload_1
      94: invokevirtual #16                 // Method java/nio/file/DirectoryIteratorException.getCause:()Ljava/io/IOException;
      97: athrow
    Exception table:
       from    to  target type
          20    26    29   Class java/lang/Throwable
           7    12    48   Class java/lang/Throwable
           7    12    53   any
          63    69    72   Class java/lang/Throwable
          48    55    53   any
           0    46    92   Class java/nio/file/DirectoryIteratorException
          48    92    92   Class java/nio/file/DirectoryIteratorException

  public static com.google.common.collect.TreeTraverser<java.nio.file.Path> directoryTreeTraverser();
    Code:
       0: invokestatic  #17                 // Method com/google/common/io/MoreFiles$DirectoryTreeTraverser.access$300:()Lcom/google/common/io/MoreFiles$DirectoryTreeTraverser;
       3: areturn

  public static com.google.common.base.Predicate<java.nio.file.Path> isDirectory(java.nio.file.LinkOption...);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method "[Ljava/nio/file/LinkOption;".clone:()Ljava/lang/Object;
       4: checkcast     #19                 // class "[Ljava/nio/file/LinkOption;"
       7: astore_1
       8: new           #20                 // class com/google/common/io/MoreFiles$1
      11: dup
      12: aload_1
      13: invokespecial #21                 // Method com/google/common/io/MoreFiles$1."<init>":([Ljava/nio/file/LinkOption;)V
      16: areturn

  public static com.google.common.base.Predicate<java.nio.file.Path> isRegularFile(java.nio.file.LinkOption...);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method "[Ljava/nio/file/LinkOption;".clone:()Ljava/lang/Object;
       4: checkcast     #19                 // class "[Ljava/nio/file/LinkOption;"
       7: astore_1
       8: new           #23                 // class com/google/common/io/MoreFiles$2
      11: dup
      12: aload_1
      13: invokespecial #24                 // Method com/google/common/io/MoreFiles$2."<init>":([Ljava/nio/file/LinkOption;)V
      16: areturn

  public static boolean equal(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: aload_1
      12: invokestatic  #26                 // Method java/nio/file/Files.isSameFile:(Ljava/nio/file/Path;Ljava/nio/file/Path;)Z
      15: ifeq          20
      18: iconst_1
      19: ireturn
      20: aload_0
      21: iconst_0
      22: anewarray     #27                 // class java/nio/file/OpenOption
      25: invokestatic  #6                  // Method asByteSource:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Lcom/google/common/io/ByteSource;
      28: astore_2
      29: aload_1
      30: iconst_0
      31: anewarray     #27                 // class java/nio/file/OpenOption
      34: invokestatic  #6                  // Method asByteSource:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Lcom/google/common/io/ByteSource;
      37: astore_3
      38: aload_2
      39: invokevirtual #28                 // Method com/google/common/io/ByteSource.sizeIfKnown:()Lcom/google/common/base/Optional;
      42: lconst_0
      43: invokestatic  #29                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      46: invokevirtual #30                 // Method com/google/common/base/Optional.or:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #31                 // class java/lang/Long
      52: invokevirtual #32                 // Method java/lang/Long.longValue:()J
      55: lstore        4
      57: aload_3
      58: invokevirtual #28                 // Method com/google/common/io/ByteSource.sizeIfKnown:()Lcom/google/common/base/Optional;
      61: lconst_0
      62: invokestatic  #29                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      65: invokevirtual #30                 // Method com/google/common/base/Optional.or:(Ljava/lang/Object;)Ljava/lang/Object;
      68: checkcast     #31                 // class java/lang/Long
      71: invokevirtual #32                 // Method java/lang/Long.longValue:()J
      74: lstore        6
      76: lload         4
      78: lconst_0
      79: lcmp
      80: ifeq          100
      83: lload         6
      85: lconst_0
      86: lcmp
      87: ifeq          100
      90: lload         4
      92: lload         6
      94: lcmp
      95: ifeq          100
      98: iconst_0
      99: ireturn
     100: aload_2
     101: aload_3
     102: invokevirtual #33                 // Method com/google/common/io/ByteSource.contentEquals:(Lcom/google/common/io/ByteSource;)Z
     105: ireturn

  public static void touch(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #25                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokestatic  #34                 // Method java/lang/System.currentTimeMillis:()J
       9: invokestatic  #35                 // Method java/nio/file/attribute/FileTime.fromMillis:(J)Ljava/nio/file/attribute/FileTime;
      12: invokestatic  #36                 // Method java/nio/file/Files.setLastModifiedTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;
      15: pop
      16: goto          33
      19: astore_1
      20: aload_0
      21: iconst_0
      22: anewarray     #38                 // class java/nio/file/attribute/FileAttribute
      25: invokestatic  #39                 // Method java/nio/file/Files.createFile:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
      28: pop
      29: goto          33
      32: astore_2
      33: return
    Exception table:
       from    to  target type
           5    16    19   Class java/nio/file/NoSuchFileException
          20    29    32   Class java/nio/file/FileAlreadyExistsException

  public static void createParentDirectories(java.nio.file.Path, java.nio.file.attribute.FileAttribute<?>...) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokeinterface #41,  1           // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;
       6: invokeinterface #42,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
      11: astore_2
      12: aload_2
      13: invokeinterface #43,  1           // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;
      18: astore_3
      19: aload_3
      20: ifnonnull     24
      23: return
      24: aload_3
      25: iconst_0
      26: anewarray     #44                 // class java/nio/file/LinkOption
      29: invokestatic  #45                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      32: ifne          79
      35: aload_3
      36: aload_1
      37: invokestatic  #46                 // Method java/nio/file/Files.createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
      40: pop
      41: aload_3
      42: iconst_0
      43: anewarray     #44                 // class java/nio/file/LinkOption
      46: invokestatic  #45                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      49: ifne          79
      52: new           #47                 // class java/io/IOException
      55: dup
      56: new           #48                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #50                 // String Unable to create parent directories of
      65: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_0
      69: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokespecial #54                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: return

  public static java.lang.String getFileExtension(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokeinterface #55,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
       6: astore_1
       7: aload_1
       8: ifnonnull     14
      11: ldc           #56                 // String
      13: areturn
      14: aload_1
      15: invokeinterface #57,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      20: astore_2
      21: aload_2
      22: bipush        46
      24: invokevirtual #58                 // Method java/lang/String.lastIndexOf:(I)I
      27: istore_3
      28: iload_3
      29: iconst_m1
      30: if_icmpne     38
      33: ldc           #56                 // String
      35: goto          45
      38: aload_2
      39: iload_3
      40: iconst_1
      41: iadd
      42: invokevirtual #59                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      45: areturn

  public static java.lang.String getNameWithoutExtension(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokeinterface #55,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
       6: astore_1
       7: aload_1
       8: ifnonnull     14
      11: ldc           #56                 // String
      13: areturn
      14: aload_1
      15: invokeinterface #57,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      20: astore_2
      21: aload_2
      22: bipush        46
      24: invokevirtual #58                 // Method java/lang/String.lastIndexOf:(I)I
      27: istore_3
      28: iload_3
      29: iconst_m1
      30: if_icmpne     37
      33: aload_2
      34: goto          43
      37: aload_2
      38: iconst_0
      39: iload_3
      40: invokevirtual #60                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      43: areturn

  public static void deleteRecursively(java.nio.file.Path, com.google.common.io.RecursiveDeleteOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #61                 // Method getParentPath:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
       4: astore_2
       5: aload_2
       6: ifnonnull     26
       9: new           #62                 // class java/nio/file/FileSystemException
      12: dup
      13: aload_0
      14: invokeinterface #57,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      19: aconst_null
      20: ldc           #63                 // String can\'t delete recursively
      22: invokespecial #64                 // Method java/nio/file/FileSystemException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      25: athrow
      26: aconst_null
      27: astore_3
      28: iconst_0
      29: istore        4
      31: aload_2
      32: invokestatic  #10                 // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;
      35: astore        5
      37: aconst_null
      38: astore        6
      40: aload         5
      42: instanceof    #65                 // class java/nio/file/SecureDirectoryStream
      45: ifeq          66
      48: iconst_1
      49: istore        4
      51: aload         5
      53: checkcast     #65                 // class java/nio/file/SecureDirectoryStream
      56: aload_0
      57: invokeinterface #55,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
      62: invokestatic  #66                 // Method deleteRecursivelySecure:(Ljava/nio/file/SecureDirectoryStream;Ljava/nio/file/Path;)Ljava/util/Collection;
      65: astore_3
      66: aload         5
      68: ifnull        161
      71: aload         6
      73: ifnull        98
      76: aload         5
      78: invokeinterface #12,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      83: goto          161
      86: astore        7
      88: aload         6
      90: aload         7
      92: invokevirtual #14                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      95: goto          161
      98: aload         5
     100: invokeinterface #12,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     105: goto          161
     108: astore        7
     110: aload         7
     112: astore        6
     114: aload         7
     116: athrow
     117: astore        8
     119: aload         5
     121: ifnull        158
     124: aload         6
     126: ifnull        151
     129: aload         5
     131: invokeinterface #12,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     136: goto          158
     139: astore        9
     141: aload         6
     143: aload         9
     145: invokevirtual #14                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     148: goto          158
     151: aload         5
     153: invokeinterface #12,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     158: aload         8
     160: athrow
     161: iload         4
     163: ifne          176
     166: aload_0
     167: aload_1
     168: invokestatic  #67                 // Method checkAllowsInsecure:(Ljava/nio/file/Path;[Lcom/google/common/io/RecursiveDeleteOption;)V
     171: aload_0
     172: invokestatic  #68                 // Method deleteRecursivelyInsecure:(Ljava/nio/file/Path;)Ljava/util/Collection;
     175: astore_3
     176: goto          197
     179: astore        4
     181: aload_3
     182: ifnonnull     188
     185: aload         4
     187: athrow
     188: aload_3
     189: aload         4
     191: invokeinterface #69,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     196: pop
     197: aload_3
     198: ifnull        206
     201: aload_0
     202: aload_3
     203: invokestatic  #70                 // Method throwDeleteFailed:(Ljava/nio/file/Path;Ljava/util/Collection;)V
     206: return
    Exception table:
       from    to  target type
          76    83    86   Class java/lang/Throwable
          40    66   108   Class java/lang/Throwable
          40    66   117   any
         129   136   139   Class java/lang/Throwable
         108   119   117   any
          28   176   179   Class java/io/IOException

  public static void deleteDirectoryContents(java.nio.file.Path, com.google.common.io.RecursiveDeleteOption...) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokestatic  #10                 // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;
       6: astore_3
       7: aconst_null
       8: astore        4
      10: aload_3
      11: instanceof    #65                 // class java/nio/file/SecureDirectoryStream
      14: ifeq          32
      17: aload_3
      18: checkcast     #65                 // class java/nio/file/SecureDirectoryStream
      21: astore        5
      23: aload         5
      25: invokestatic  #71                 // Method deleteDirectoryContentsSecure:(Ljava/nio/file/SecureDirectoryStream;)Ljava/util/Collection;
      28: astore_2
      29: goto          42
      32: aload_0
      33: aload_1
      34: invokestatic  #67                 // Method checkAllowsInsecure:(Ljava/nio/file/Path;[Lcom/google/common/io/RecursiveDeleteOption;)V
      37: aload_3
      38: invokestatic  #72                 // Method deleteDirectoryContentsInsecure:(Ljava/nio/file/DirectoryStream;)Ljava/util/Collection;
      41: astore_2
      42: aload_3
      43: ifnull        131
      46: aload         4
      48: ifnull        72
      51: aload_3
      52: invokeinterface #12,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      57: goto          131
      60: astore        5
      62: aload         4
      64: aload         5
      66: invokevirtual #14                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      69: goto          131
      72: aload_3
      73: invokeinterface #12,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      78: goto          131
      81: astore        5
      83: aload         5
      85: astore        4
      87: aload         5
      89: athrow
      90: astore        6
      92: aload_3
      93: ifnull        128
      96: aload         4
      98: ifnull        122
     101: aload_3
     102: invokeinterface #12,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     107: goto          128
     110: astore        7
     112: aload         4
     114: aload         7
     116: invokevirtual #14                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     119: goto          128
     122: aload_3
     123: invokeinterface #12,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     128: aload         6
     130: athrow
     131: goto          149
     134: astore_3
     135: aload_2
     136: ifnonnull     141
     139: aload_3
     140: athrow
     141: aload_2
     142: aload_3
     143: invokeinterface #69,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     148: pop
     149: aload_2
     150: ifnull        158
     153: aload_0
     154: aload_2
     155: invokestatic  #70                 // Method throwDeleteFailed:(Ljava/nio/file/Path;Ljava/util/Collection;)V
     158: return
    Exception table:
       from    to  target type
          51    57    60   Class java/lang/Throwable
          10    42    81   Class java/lang/Throwable
          10    42    90   any
         101   107   110   Class java/lang/Throwable
          81    92    90   any
           2   131   134   Class java/io/IOException

  private static java.util.Collection<java.io.IOException> deleteRecursivelySecure(java.nio.file.SecureDirectoryStream<java.nio.file.Path>, java.nio.file.Path);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: aload_1
       4: iconst_1
       5: anewarray     #44                 // class java/nio/file/LinkOption
       8: dup
       9: iconst_0
      10: getstatic     #73                 // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
      13: aastore
      14: invokestatic  #74                 // Method isDirectory:(Ljava/nio/file/SecureDirectoryStream;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      17: ifeq          149
      20: aload_0
      21: aload_1
      22: iconst_1
      23: anewarray     #44                 // class java/nio/file/LinkOption
      26: dup
      27: iconst_0
      28: getstatic     #73                 // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
      31: aastore
      32: invokeinterface #75,  3           // InterfaceMethod java/nio/file/SecureDirectoryStream.newDirectoryStream:(Ljava/lang/Object;[Ljava/nio/file/LinkOption;)Ljava/nio/file/SecureDirectoryStream;
      37: astore_3
      38: aconst_null
      39: astore        4
      41: aload_3
      42: invokestatic  #71                 // Method deleteDirectoryContentsSecure:(Ljava/nio/file/SecureDirectoryStream;)Ljava/util/Collection;
      45: astore_2
      46: aload_3
      47: ifnull        135
      50: aload         4
      52: ifnull        76
      55: aload_3
      56: invokeinterface #76,  1           // InterfaceMethod java/nio/file/SecureDirectoryStream.close:()V
      61: goto          135
      64: astore        5
      66: aload         4
      68: aload         5
      70: invokevirtual #14                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      73: goto          135
      76: aload_3
      77: invokeinterface #76,  1           // InterfaceMethod java/nio/file/SecureDirectoryStream.close:()V
      82: goto          135
      85: astore        5
      87: aload         5
      89: astore        4
      91: aload         5
      93: athrow
      94: astore        6
      96: aload_3
      97: ifnull        132
     100: aload         4
     102: ifnull        126
     105: aload_3
     106: invokeinterface #76,  1           // InterfaceMethod java/nio/file/SecureDirectoryStream.close:()V
     111: goto          132
     114: astore        7
     116: aload         4
     118: aload         7
     120: invokevirtual #14                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     123: goto          132
     126: aload_3
     127: invokeinterface #76,  1           // InterfaceMethod java/nio/file/SecureDirectoryStream.close:()V
     132: aload         6
     134: athrow
     135: aload_2
     136: ifnonnull     156
     139: aload_0
     140: aload_1
     141: invokeinterface #77,  2           // InterfaceMethod java/nio/file/SecureDirectoryStream.deleteDirectory:(Ljava/lang/Object;)V
     146: goto          156
     149: aload_0
     150: aload_1
     151: invokeinterface #78,  2           // InterfaceMethod java/nio/file/SecureDirectoryStream.deleteFile:(Ljava/lang/Object;)V
     156: aload_2
     157: areturn
     158: astore_3
     159: aload_2
     160: aload_3
     161: invokestatic  #79                 // Method addException:(Ljava/util/Collection;Ljava/io/IOException;)Ljava/util/Collection;
     164: areturn
    Exception table:
       from    to  target type
          55    61    64   Class java/lang/Throwable
          41    46    85   Class java/lang/Throwable
          41    46    94   any
         105   111   114   Class java/lang/Throwable
          85    96    94   any
           2   157   158   Class java/io/IOException

  private static java.util.Collection<java.io.IOException> deleteDirectoryContentsSecure(java.nio.file.SecureDirectoryStream<java.nio.file.Path>);
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokeinterface #80,  1           // InterfaceMethod java/nio/file/SecureDirectoryStream.iterator:()Ljava/util/Iterator;
       8: astore_2
       9: aload_2
      10: invokeinterface #81,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          46
      18: aload_2
      19: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #83                 // class java/nio/file/Path
      27: astore_3
      28: aload_1
      29: aload_0
      30: aload_3
      31: invokeinterface #55,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
      36: invokestatic  #66                 // Method deleteRecursivelySecure:(Ljava/nio/file/SecureDirectoryStream;Ljava/nio/file/Path;)Ljava/util/Collection;
      39: invokestatic  #84                 // Method concat:(Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/Collection;
      42: astore_1
      43: goto          9
      46: aload_1
      47: areturn
      48: astore_2
      49: aload_1
      50: aload_2
      51: invokevirtual #16                 // Method java/nio/file/DirectoryIteratorException.getCause:()Ljava/io/IOException;
      54: invokestatic  #79                 // Method addException:(Ljava/util/Collection;Ljava/io/IOException;)Ljava/util/Collection;
      57: areturn
    Exception table:
       from    to  target type
           2    47    48   Class java/nio/file/DirectoryIteratorException

  private static java.util.Collection<java.io.IOException> deleteRecursivelyInsecure(java.nio.file.Path);
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: iconst_1
       4: anewarray     #44                 // class java/nio/file/LinkOption
       7: dup
       8: iconst_0
       9: getstatic     #73                 // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
      12: aastore
      13: invokestatic  #45                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      16: ifeq          115
      19: aload_0
      20: invokestatic  #10                 // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;
      23: astore_2
      24: aconst_null
      25: astore_3
      26: aload_2
      27: invokestatic  #72                 // Method deleteDirectoryContentsInsecure:(Ljava/nio/file/DirectoryStream;)Ljava/util/Collection;
      30: astore_1
      31: aload_2
      32: ifnull        115
      35: aload_3
      36: ifnull        59
      39: aload_2
      40: invokeinterface #12,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      45: goto          115
      48: astore        4
      50: aload_3
      51: aload         4
      53: invokevirtual #14                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      56: goto          115
      59: aload_2
      60: invokeinterface #12,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      65: goto          115
      68: astore        4
      70: aload         4
      72: astore_3
      73: aload         4
      75: athrow
      76: astore        5
      78: aload_2
      79: ifnull        112
      82: aload_3
      83: ifnull        106
      86: aload_2
      87: invokeinterface #12,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      92: goto          112
      95: astore        6
      97: aload_3
      98: aload         6
     100: invokevirtual #14                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     103: goto          112
     106: aload_2
     107: invokeinterface #12,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     112: aload         5
     114: athrow
     115: aload_1
     116: ifnonnull     123
     119: aload_0
     120: invokestatic  #85                 // Method java/nio/file/Files.delete:(Ljava/nio/file/Path;)V
     123: aload_1
     124: areturn
     125: astore_2
     126: aload_1
     127: aload_2
     128: invokestatic  #79                 // Method addException:(Ljava/util/Collection;Ljava/io/IOException;)Ljava/util/Collection;
     131: areturn
    Exception table:
       from    to  target type
          39    45    48   Class java/lang/Throwable
          26    31    68   Class java/lang/Throwable
          26    31    76   any
          86    92    95   Class java/lang/Throwable
          68    78    76   any
           2   124   125   Class java/io/IOException

  private static java.util.Collection<java.io.IOException> deleteDirectoryContentsInsecure(java.nio.file.DirectoryStream<java.nio.file.Path>);
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokeinterface #86,  1           // InterfaceMethod java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;
       8: astore_2
       9: aload_2
      10: invokeinterface #81,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          40
      18: aload_2
      19: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #83                 // class java/nio/file/Path
      27: astore_3
      28: aload_1
      29: aload_3
      30: invokestatic  #68                 // Method deleteRecursivelyInsecure:(Ljava/nio/file/Path;)Ljava/util/Collection;
      33: invokestatic  #84                 // Method concat:(Ljava/util/Collection;Ljava/util/Collection;)Ljava/util/Collection;
      36: astore_1
      37: goto          9
      40: aload_1
      41: areturn
      42: astore_2
      43: aload_1
      44: aload_2
      45: invokevirtual #16                 // Method java/nio/file/DirectoryIteratorException.getCause:()Ljava/io/IOException;
      48: invokestatic  #79                 // Method addException:(Ljava/util/Collection;Ljava/io/IOException;)Ljava/util/Collection;
      51: areturn
    Exception table:
       from    to  target type
           2    41    42   Class java/nio/file/DirectoryIteratorException

  private static java.nio.file.Path getParentPath(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokeinterface #43,  1           // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;
       6: astore_1
       7: aload_1
       8: ifnull        13
      11: aload_1
      12: areturn
      13: aload_0
      14: invokeinterface #87,  1           // InterfaceMethod java/nio/file/Path.getNameCount:()I
      19: ifne          24
      22: aconst_null
      23: areturn
      24: aload_0
      25: invokeinterface #88,  1           // InterfaceMethod java/nio/file/Path.getFileSystem:()Ljava/nio/file/FileSystem;
      30: ldc           #89                 // String .
      32: iconst_0
      33: anewarray     #90                 // class java/lang/String
      36: invokevirtual #91                 // Method java/nio/file/FileSystem.getPath:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      39: areturn

  private static void checkAllowsInsecure(java.nio.file.Path, com.google.common.io.RecursiveDeleteOption[]) throws com.google.common.io.InsecureRecursiveDeleteException;
    Code:
       0: aload_1
       1: invokestatic  #92                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       4: getstatic     #93                 // Field com/google/common/io/RecursiveDeleteOption.ALLOW_INSECURE:Lcom/google/common/io/RecursiveDeleteOption;
       7: invokeinterface #94,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      12: ifne          29
      15: new           #95                 // class com/google/common/io/InsecureRecursiveDeleteException
      18: dup
      19: aload_0
      20: invokeinterface #57,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      25: invokespecial #96                 // Method com/google/common/io/InsecureRecursiveDeleteException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: return

  private static boolean isDirectory(java.nio.file.SecureDirectoryStream<java.nio.file.Path>, java.nio.file.Path, java.nio.file.LinkOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #97                 // class java/nio/file/attribute/BasicFileAttributeView
       4: aload_2
       5: invokeinterface #98,  4           // InterfaceMethod java/nio/file/SecureDirectoryStream.getFileAttributeView:(Ljava/lang/Object;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;
      10: checkcast     #97                 // class java/nio/file/attribute/BasicFileAttributeView
      13: invokeinterface #99,  1           // InterfaceMethod java/nio/file/attribute/BasicFileAttributeView.readAttributes:()Ljava/nio/file/attribute/BasicFileAttributes;
      18: invokeinterface #100,  1          // InterfaceMethod java/nio/file/attribute/BasicFileAttributes.isDirectory:()Z
      23: ireturn

  private static java.util.Collection<java.io.IOException> addException(java.util.Collection<java.io.IOException>, java.io.IOException);
    Code:
       0: aload_0
       1: ifnonnull     12
       4: new           #101                // class java/util/ArrayList
       7: dup
       8: invokespecial #102                // Method java/util/ArrayList."<init>":()V
      11: astore_0
      12: aload_0
      13: aload_1
      14: invokeinterface #69,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      19: pop
      20: aload_0
      21: areturn

  private static java.util.Collection<java.io.IOException> concat(java.util.Collection<java.io.IOException>, java.util.Collection<java.io.IOException>);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aload_1
       5: areturn
       6: aload_1
       7: ifnull        18
      10: aload_0
      11: aload_1
      12: invokeinterface #103,  2          // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      17: pop
      18: aload_0
      19: areturn

  private static void throwDeleteFailed(java.nio.file.Path, java.util.Collection<java.io.IOException>) throws java.nio.file.FileSystemException;
    Code:
       0: new           #62                 // class java/nio/file/FileSystemException
       3: dup
       4: aload_0
       5: invokeinterface #57,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      10: aconst_null
      11: ldc           #104                // String failed to delete one or more files; see suppressed exceptions for details
      13: invokespecial #64                 // Method java/nio/file/FileSystemException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      16: astore_2
      17: aload_1
      18: invokeinterface #105,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #81,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          53
      33: aload_3
      34: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #47                 // class java/io/IOException
      42: astore        4
      44: aload_2
      45: aload         4
      47: invokevirtual #106                // Method java/nio/file/FileSystemException.addSuppressed:(Ljava/lang/Throwable;)V
      50: goto          24
      53: aload_2
      54: athrow
}
