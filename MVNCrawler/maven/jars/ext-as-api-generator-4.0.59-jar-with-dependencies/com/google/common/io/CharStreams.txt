Compiled from "CharStreams.java"
public final class com.google.common.io.CharStreams {
  static java.nio.CharBuffer createBuffer();
    Code:
       0: sipush        2048
       3: invokestatic  #1                  // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
       6: areturn

  private com.google.common.io.CharStreams();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static long copy(java.lang.Readable, java.lang.Appendable) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: invokestatic  #4                  // Method createBuffer:()Ljava/nio/CharBuffer;
      13: astore_2
      14: lconst_0
      15: lstore_3
      16: aload_0
      17: aload_2
      18: invokeinterface #5,  2            // InterfaceMethod java/lang/Readable.read:(Ljava/nio/CharBuffer;)I
      23: iconst_m1
      24: if_icmpeq     56
      27: aload_2
      28: invokevirtual #6                  // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
      31: pop
      32: aload_1
      33: aload_2
      34: invokeinterface #7,  2            // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      39: pop
      40: lload_3
      41: aload_2
      42: invokevirtual #8                  // Method java/nio/CharBuffer.remaining:()I
      45: i2l
      46: ladd
      47: lstore_3
      48: aload_2
      49: invokevirtual #9                  // Method java/nio/CharBuffer.clear:()Ljava/nio/Buffer;
      52: pop
      53: goto          16
      56: lload_3
      57: lreturn

  public static java.lang.String toString(java.lang.Readable) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method toStringBuilder:(Ljava/lang/Readable;)Ljava/lang/StringBuilder;
       4: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       7: areturn

  private static java.lang.StringBuilder toStringBuilder(java.lang.Readable) throws java.io.IOException;
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokestatic  #14                 // Method copy:(Ljava/lang/Readable;Ljava/lang/Appendable;)J
      13: pop2
      14: aload_1
      15: areturn

  public static java.util.List<java.lang.String> readLines(java.lang.Readable) throws java.io.IOException;
    Code:
       0: new           #15                 // class java/util/ArrayList
       3: dup
       4: invokespecial #16                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: new           #17                 // class com/google/common/io/LineReader
      11: dup
      12: aload_0
      13: invokespecial #18                 // Method com/google/common/io/LineReader."<init>":(Ljava/lang/Readable;)V
      16: astore_2
      17: aload_2
      18: invokevirtual #19                 // Method com/google/common/io/LineReader.readLine:()Ljava/lang/String;
      21: dup
      22: astore_3
      23: ifnull        37
      26: aload_1
      27: aload_3
      28: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      33: pop
      34: goto          17
      37: aload_1
      38: areturn

  public static <T> T readLines(java.lang.Readable, com.google.common.io.LineProcessor<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: new           #17                 // class com/google/common/io/LineReader
      13: dup
      14: aload_0
      15: invokespecial #18                 // Method com/google/common/io/LineReader."<init>":(Ljava/lang/Readable;)V
      18: astore_2
      19: aload_2
      20: invokevirtual #19                 // Method com/google/common/io/LineReader.readLine:()Ljava/lang/String;
      23: dup
      24: astore_3
      25: ifnull        41
      28: aload_1
      29: aload_3
      30: invokeinterface #21,  2           // InterfaceMethod com/google/common/io/LineProcessor.processLine:(Ljava/lang/String;)Z
      35: ifne          19
      38: goto          41
      41: aload_1
      42: invokeinterface #22,  1           // InterfaceMethod com/google/common/io/LineProcessor.getResult:()Ljava/lang/Object;
      47: areturn

  public static long exhaust(java.lang.Readable) throws java.io.IOException;
    Code:
       0: lconst_0
       1: lstore_1
       2: invokestatic  #4                  // Method createBuffer:()Ljava/nio/CharBuffer;
       5: astore        5
       7: aload_0
       8: aload         5
      10: invokeinterface #5,  2            // InterfaceMethod java/lang/Readable.read:(Ljava/nio/CharBuffer;)I
      15: i2l
      16: dup2
      17: lstore_3
      18: ldc2_w        #23                 // long -1l
      21: lcmp
      22: ifeq          38
      25: lload_1
      26: lload_3
      27: ladd
      28: lstore_1
      29: aload         5
      31: invokevirtual #9                  // Method java/nio/CharBuffer.clear:()Ljava/nio/Buffer;
      34: pop
      35: goto          7
      38: lload_1
      39: lreturn

  public static void skipFully(java.io.Reader, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: lload_1
       6: lconst_0
       7: lcmp
       8: ifle          38
      11: aload_0
      12: lload_1
      13: invokevirtual #25                 // Method java/io/Reader.skip:(J)J
      16: lstore_3
      17: lload_3
      18: lconst_0
      19: lcmp
      20: ifne          31
      23: new           #26                 // class java/io/EOFException
      26: dup
      27: invokespecial #27                 // Method java/io/EOFException."<init>":()V
      30: athrow
      31: lload_1
      32: lload_3
      33: lsub
      34: lstore_1
      35: goto          5
      38: return

  public static java.io.Writer nullWriter();
    Code:
       0: invokestatic  #28                 // Method com/google/common/io/CharStreams$NullWriter.access$000:()Lcom/google/common/io/CharStreams$NullWriter;
       3: areturn

  public static java.io.Writer asWriter(java.lang.Appendable);
    Code:
       0: aload_0
       1: instanceof    #29                 // class java/io/Writer
       4: ifeq          12
       7: aload_0
       8: checkcast     #29                 // class java/io/Writer
      11: areturn
      12: new           #30                 // class com/google/common/io/AppendableWriter
      15: dup
      16: aload_0
      17: invokespecial #31                 // Method com/google/common/io/AppendableWriter."<init>":(Ljava/lang/Appendable;)V
      20: areturn
}
