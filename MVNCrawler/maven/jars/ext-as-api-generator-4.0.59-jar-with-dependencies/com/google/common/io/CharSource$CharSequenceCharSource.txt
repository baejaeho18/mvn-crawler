Compiled from "CharSource.java"
class com.google.common.io.CharSource$CharSequenceCharSource extends com.google.common.io.CharSource {
  private static final com.google.common.base.Splitter LINE_SPLITTER;

  private final java.lang.CharSequence seq;

  protected com.google.common.io.CharSource$CharSequenceCharSource(java.lang.CharSequence);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method com/google/common/io/CharSource."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #5                  // class java/lang/CharSequence
      12: putfield      #2                  // Field seq:Ljava/lang/CharSequence;
      15: return

  public java.io.Reader openStream();
    Code:
       0: new           #6                  // class com/google/common/io/CharSequenceReader
       3: dup
       4: aload_0
       5: getfield      #2                  // Field seq:Ljava/lang/CharSequence;
       8: invokespecial #7                  // Method com/google/common/io/CharSequenceReader."<init>":(Ljava/lang/CharSequence;)V
      11: areturn

  public java.lang.String read();
    Code:
       0: aload_0
       1: getfield      #2                  // Field seq:Ljava/lang/CharSequence;
       4: invokeinterface #8,  1            // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
       9: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #2                  // Field seq:Ljava/lang/CharSequence;
       4: invokeinterface #9,  1            // InterfaceMethod java/lang/CharSequence.length:()I
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public long length();
    Code:
       0: aload_0
       1: getfield      #2                  // Field seq:Ljava/lang/CharSequence;
       4: invokeinterface #9,  1            // InterfaceMethod java/lang/CharSequence.length:()I
       9: i2l
      10: lreturn

  public com.google.common.base.Optional<java.lang.Long> lengthIfKnown();
    Code:
       0: aload_0
       1: getfield      #2                  // Field seq:Ljava/lang/CharSequence;
       4: invokeinterface #9,  1            // InterfaceMethod java/lang/CharSequence.length:()I
       9: i2l
      10: invokestatic  #10                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      13: invokestatic  #11                 // Method com/google/common/base/Optional.of:(Ljava/lang/Object;)Lcom/google/common/base/Optional;
      16: areturn

  private java.util.Iterator<java.lang.String> linesIterator();
    Code:
       0: new           #12                 // class com/google/common/io/CharSource$CharSequenceCharSource$1
       3: dup
       4: aload_0
       5: invokespecial #13                 // Method com/google/common/io/CharSource$CharSequenceCharSource$1."<init>":(Lcom/google/common/io/CharSource$CharSequenceCharSource;)V
       8: areturn

  public java.util.stream.Stream<java.lang.String> lines();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method linesIterator:()Ljava/util/Iterator;
       4: invokestatic  #15                 // Method com/google/common/collect/Streams.stream:(Ljava/util/Iterator;)Ljava/util/stream/Stream;
       7: areturn

  public java.lang.String readFirstLine();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method linesIterator:()Ljava/util/Iterator;
       4: astore_1
       5: aload_1
       6: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          26
      14: aload_1
      15: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: checkcast     #18                 // class java/lang/String
      23: goto          27
      26: aconst_null
      27: areturn

  public com.google.common.collect.ImmutableList<java.lang.String> readLines();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method linesIterator:()Ljava/util/Iterator;
       4: invokestatic  #19                 // Method com/google/common/collect/ImmutableList.copyOf:(Ljava/util/Iterator;)Lcom/google/common/collect/ImmutableList;
       7: areturn

  public <T> T readLines(com.google.common.io.LineProcessor<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #14                 // Method linesIterator:()Ljava/util/Iterator;
       4: astore_2
       5: aload_2
       6: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          35
      14: aload_1
      15: aload_2
      16: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      21: checkcast     #18                 // class java/lang/String
      24: invokeinterface #20,  2           // InterfaceMethod com/google/common/io/LineProcessor.processLine:(Ljava/lang/String;)Z
      29: ifne          5
      32: goto          35
      35: aload_1
      36: invokeinterface #21,  1           // InterfaceMethod com/google/common/io/LineProcessor.getResult:()Ljava/lang/Object;
      41: areturn

  public java.lang.String toString();
    Code:
       0: new           #22                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #24                 // String CharSource.wrap(
       9: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field seq:Ljava/lang/CharSequence;
      16: bipush        30
      18: ldc           #26                 // String ...
      20: invokestatic  #27                 // Method com/google/common/base/Ascii.truncate:(Ljava/lang/CharSequence;ILjava/lang/String;)Ljava/lang/String;
      23: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #28                 // String )
      28: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn

  static java.lang.CharSequence access$100(com.google.common.io.CharSource$CharSequenceCharSource);
    Code:
       0: aload_0
       1: getfield      #2                  // Field seq:Ljava/lang/CharSequence;
       4: areturn

  static com.google.common.base.Splitter access$200();
    Code:
       0: getstatic     #1                  // Field LINE_SPLITTER:Lcom/google/common/base/Splitter;
       3: areturn

  static {};
    Code:
       0: ldc           #30                 // String \r\n|\n|\r
       2: invokestatic  #31                 // Method com/google/common/base/Splitter.onPattern:(Ljava/lang/String;)Lcom/google/common/base/Splitter;
       5: putstatic     #1                  // Field LINE_SPLITTER:Lcom/google/common/base/Splitter;
       8: return
}
