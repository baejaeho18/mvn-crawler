Compiled from "StringSubject.java"
public class com.google.common.truth.StringSubject extends com.google.common.truth.ComparableSubject<com.google.common.truth.StringSubject, java.lang.String> {
  public static final com.google.common.truth.SubjectFactory<com.google.common.truth.StringSubject, java.lang.String> STRING;

  public com.google.common.truth.StringSubject(com.google.common.truth.FailureStrategy, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method com/google/common/truth/ComparableSubject."<init>":(Lcom/google/common/truth/FailureStrategy;Ljava/lang/Comparable;)V
       6: return

  protected java.lang.String getDisplaySubject();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method internalCustomName:()Ljava/lang/String;
       4: ifnonnull     12
       7: ldc           #3                  // String
       9: goto          39
      12: new           #4                  // class java/lang/StringBuilder
      15: dup
      16: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #6                  // String \"
      21: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #2                  // Method internalCustomName:()Ljava/lang/String;
      28: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #8                  // String \"
      33: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: astore_1
      40: new           #4                  // class java/lang/StringBuilder
      43: dup
      44: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      47: aload_1
      48: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #10                 // String <
      53: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: invokevirtual #11                 // Method getSubject:()Ljava/lang/Object;
      60: checkcast     #12                 // class java/lang/CharSequence
      63: invokestatic  #13                 // Method quote:(Ljava/lang/CharSequence;)Ljava/lang/String;
      66: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: ldc           #14                 // String >
      71: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: areturn

  public void is(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method isEqualTo:(Ljava/lang/Object;)V
       5: return

  public void isEqualTo(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getSubject:()Ljava/lang/Object;
       4: ifnonnull     68
       7: aload_1
       8: ifnull        195
      11: aload_1
      12: instanceof    #16                 // class java/lang/String
      15: ifeq          41
      18: aload_0
      19: ldc           #17                 // String Not true that null reference is equal to <%s>
      21: iconst_1
      22: anewarray     #18                 // class java/lang/Object
      25: dup
      26: iconst_0
      27: aload_1
      28: checkcast     #16                 // class java/lang/String
      31: invokestatic  #13                 // Method quote:(Ljava/lang/CharSequence;)Ljava/lang/String;
      34: aastore
      35: invokevirtual #19                 // Method failWithRawMessage:(Ljava/lang/String;[Ljava/lang/Object;)V
      38: goto          195
      41: aload_0
      42: ldc           #20                 // String Not true that null reference is equal to (%s)<%s>
      44: iconst_2
      45: anewarray     #18                 // class java/lang/Object
      48: dup
      49: iconst_0
      50: aload_1
      51: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      54: invokevirtual #22                 // Method java/lang/Class.getName:()Ljava/lang/String;
      57: aastore
      58: dup
      59: iconst_1
      60: aload_1
      61: aastore
      62: invokevirtual #19                 // Method failWithRawMessage:(Ljava/lang/String;[Ljava/lang/Object;)V
      65: goto          195
      68: aload_1
      69: ifnonnull     79
      72: aload_0
      73: invokevirtual #23                 // Method isNull:()V
      76: goto          195
      79: aload_1
      80: instanceof    #16                 // class java/lang/String
      83: ifne          120
      86: aload_0
      87: ldc           #24                 // String Not true that %s is equal to (%s)<%s>
      89: iconst_3
      90: anewarray     #18                 // class java/lang/Object
      93: dup
      94: iconst_0
      95: aload_0
      96: invokevirtual #25                 // Method getDisplaySubject:()Ljava/lang/String;
      99: aastore
     100: dup
     101: iconst_1
     102: aload_1
     103: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     106: invokevirtual #22                 // Method java/lang/Class.getName:()Ljava/lang/String;
     109: aastore
     110: dup
     111: iconst_2
     112: aload_1
     113: aastore
     114: invokevirtual #19                 // Method failWithRawMessage:(Ljava/lang/String;[Ljava/lang/Object;)V
     117: goto          195
     120: aload_0
     121: invokevirtual #11                 // Method getSubject:()Ljava/lang/Object;
     124: checkcast     #16                 // class java/lang/String
     127: aload_1
     128: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     131: ifne          195
     134: aload_1
     135: instanceof    #16                 // class java/lang/String
     138: ifeq          164
     141: aload_0
     142: getfield      #27                 // Field failureStrategy:Lcom/google/common/truth/FailureStrategy;
     145: ldc           #3                  // String
     147: aload_1
     148: checkcast     #16                 // class java/lang/String
     151: aload_0
     152: invokevirtual #11                 // Method getSubject:()Ljava/lang/Object;
     155: checkcast     #12                 // class java/lang/CharSequence
     158: invokevirtual #28                 // Method com/google/common/truth/FailureStrategy.failComparing:(Ljava/lang/String;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)V
     161: goto          195
     164: aload_0
     165: ldc           #29                 // String Not true that %s equal to (%s)<%s>
     167: iconst_3
     168: anewarray     #18                 // class java/lang/Object
     171: dup
     172: iconst_0
     173: aload_0
     174: invokevirtual #25                 // Method getDisplaySubject:()Ljava/lang/String;
     177: aastore
     178: dup
     179: iconst_1
     180: aload_1
     181: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     184: invokevirtual #22                 // Method java/lang/Class.getName:()Ljava/lang/String;
     187: aastore
     188: dup
     189: iconst_2
     190: aload_1
     191: aastore
     192: invokevirtual #19                 // Method failWithRawMessage:(Ljava/lang/String;[Ljava/lang/Object;)V
     195: return

  public void isNull();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getSubject:()Ljava/lang/Object;
       4: ifnull        24
       7: aload_0
       8: ldc           #30                 // String Not true that %s is null
      10: iconst_1
      11: anewarray     #18                 // class java/lang/Object
      14: dup
      15: iconst_0
      16: aload_0
      17: invokevirtual #25                 // Method getDisplaySubject:()Ljava/lang/String;
      20: aastore
      21: invokevirtual #19                 // Method failWithRawMessage:(Ljava/lang/String;[Ljava/lang/Object;)V
      24: return

  public void hasLength(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #31                 // String expectedLength(%s) must be >= 0
      11: iconst_1
      12: anewarray     #18                 // class java/lang/Object
      15: dup
      16: iconst_0
      17: iload_1
      18: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      21: aastore
      22: invokestatic  #33                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      25: aload_0
      26: invokevirtual #11                 // Method getSubject:()Ljava/lang/Object;
      29: checkcast     #16                 // class java/lang/String
      32: invokevirtual #34                 // Method java/lang/String.length:()I
      35: istore_2
      36: iload_2
      37: iload_1
      38: if_icmpeq     72
      41: aload_0
      42: ldc           #35                 // String Not true that %s has a length of %s. It is %s.
      44: iconst_3
      45: anewarray     #18                 // class java/lang/Object
      48: dup
      49: iconst_0
      50: aload_0
      51: invokevirtual #25                 // Method getDisplaySubject:()Ljava/lang/String;
      54: aastore
      55: dup
      56: iconst_1
      57: iload_1
      58: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      61: aastore
      62: dup
      63: iconst_2
      64: iload_2
      65: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      68: aastore
      69: invokevirtual #19                 // Method failWithRawMessage:(Ljava/lang/String;[Ljava/lang/Object;)V
      72: return

  public void isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getSubject:()Ljava/lang/Object;
       4: ifnonnull     20
       7: aload_0
       8: ldc           #36                 // String Not true that null reference is empty
      10: iconst_0
      11: anewarray     #18                 // class java/lang/Object
      14: invokevirtual #19                 // Method failWithRawMessage:(Ljava/lang/String;[Ljava/lang/Object;)V
      17: goto          39
      20: aload_0
      21: invokevirtual #11                 // Method getSubject:()Ljava/lang/Object;
      24: checkcast     #16                 // class java/lang/String
      27: invokevirtual #37                 // Method java/lang/String.isEmpty:()Z
      30: ifne          39
      33: aload_0
      34: ldc           #38                 // String is empty
      36: invokevirtual #39                 // Method fail:(Ljava/lang/String;)V
      39: return

  public void isNotEmpty();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getSubject:()Ljava/lang/Object;
       4: ifnonnull     20
       7: aload_0
       8: ldc           #40                 // String Not true that null reference is not empty
      10: iconst_0
      11: anewarray     #18                 // class java/lang/Object
      14: invokevirtual #19                 // Method failWithRawMessage:(Ljava/lang/String;[Ljava/lang/Object;)V
      17: goto          39
      20: aload_0
      21: invokevirtual #11                 // Method getSubject:()Ljava/lang/Object;
      24: checkcast     #16                 // class java/lang/String
      27: invokevirtual #37                 // Method java/lang/String.isEmpty:()Z
      30: ifeq          39
      33: aload_0
      34: ldc           #41                 // String is not empty
      36: invokevirtual #39                 // Method fail:(Ljava/lang/String;)V
      39: return

  public void contains(java.lang.CharSequence);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #42                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #43                 // String Cannot test that a string contains a null reference
      10: invokespecial #44                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #11                 // Method getSubject:()Ljava/lang/Object;
      18: ifnonnull     41
      21: aload_0
      22: ldc           #45                 // String Not true that null reference contains <%s>
      24: iconst_1
      25: anewarray     #18                 // class java/lang/Object
      28: dup
      29: iconst_0
      30: aload_1
      31: invokestatic  #13                 // Method quote:(Ljava/lang/CharSequence;)Ljava/lang/String;
      34: aastore
      35: invokevirtual #19                 // Method failWithRawMessage:(Ljava/lang/String;[Ljava/lang/Object;)V
      38: goto          65
      41: aload_0
      42: invokevirtual #11                 // Method getSubject:()Ljava/lang/Object;
      45: checkcast     #16                 // class java/lang/String
      48: aload_1
      49: invokevirtual #46                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      52: ifne          65
      55: aload_0
      56: ldc           #47                 // String contains
      58: aload_1
      59: invokestatic  #13                 // Method quote:(Ljava/lang/CharSequence;)Ljava/lang/String;
      62: invokevirtual #48                 // Method fail:(Ljava/lang/String;Ljava/lang/Object;)V
      65: return

  public void doesNotContain(java.lang.CharSequence);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #42                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #49                 // String Cannot test that a string does not contain a null reference
      10: invokespecial #44                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #11                 // Method getSubject:()Ljava/lang/Object;
      18: ifnonnull     41
      21: aload_0
      22: ldc           #45                 // String Not true that null reference contains <%s>
      24: iconst_1
      25: anewarray     #18                 // class java/lang/Object
      28: dup
      29: iconst_0
      30: aload_1
      31: invokestatic  #13                 // Method quote:(Ljava/lang/CharSequence;)Ljava/lang/String;
      34: aastore
      35: invokevirtual #19                 // Method failWithRawMessage:(Ljava/lang/String;[Ljava/lang/Object;)V
      38: goto          79
      41: aload_0
      42: invokevirtual #11                 // Method getSubject:()Ljava/lang/Object;
      45: checkcast     #16                 // class java/lang/String
      48: aload_1
      49: invokevirtual #46                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      52: ifeq          79
      55: aload_0
      56: ldc           #50                 // String %s unexpectedly contains <%s>
      58: iconst_2
      59: anewarray     #18                 // class java/lang/Object
      62: dup
      63: iconst_0
      64: aload_0
      65: invokevirtual #25                 // Method getDisplaySubject:()Ljava/lang/String;
      68: aastore
      69: dup
      70: iconst_1
      71: aload_1
      72: invokestatic  #13                 // Method quote:(Ljava/lang/CharSequence;)Ljava/lang/String;
      75: aastore
      76: invokevirtual #19                 // Method failWithRawMessage:(Ljava/lang/String;[Ljava/lang/Object;)V
      79: return

  public void startsWith(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #42                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #51                 // String Cannot test that a string starts with a null reference
      10: invokespecial #44                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #11                 // Method getSubject:()Ljava/lang/Object;
      18: ifnonnull     41
      21: aload_0
      22: ldc           #52                 // String Not true that null reference starts with <%s>
      24: iconst_1
      25: anewarray     #18                 // class java/lang/Object
      28: dup
      29: iconst_0
      30: aload_1
      31: invokestatic  #13                 // Method quote:(Ljava/lang/CharSequence;)Ljava/lang/String;
      34: aastore
      35: invokevirtual #19                 // Method failWithRawMessage:(Ljava/lang/String;[Ljava/lang/Object;)V
      38: goto          65
      41: aload_0
      42: invokevirtual #11                 // Method getSubject:()Ljava/lang/Object;
      45: checkcast     #16                 // class java/lang/String
      48: aload_1
      49: invokevirtual #53                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      52: ifne          65
      55: aload_0
      56: ldc           #54                 // String starts with
      58: aload_1
      59: invokestatic  #13                 // Method quote:(Ljava/lang/CharSequence;)Ljava/lang/String;
      62: invokevirtual #48                 // Method fail:(Ljava/lang/String;Ljava/lang/Object;)V
      65: return

  public void endsWith(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #42                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #55                 // String Cannot test that a string ends with a null reference
      10: invokespecial #44                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #11                 // Method getSubject:()Ljava/lang/Object;
      18: ifnonnull     41
      21: aload_0
      22: ldc           #56                 // String Not true that null reference ends with <%s>
      24: iconst_1
      25: anewarray     #18                 // class java/lang/Object
      28: dup
      29: iconst_0
      30: aload_1
      31: invokestatic  #13                 // Method quote:(Ljava/lang/CharSequence;)Ljava/lang/String;
      34: aastore
      35: invokevirtual #19                 // Method failWithRawMessage:(Ljava/lang/String;[Ljava/lang/Object;)V
      38: goto          65
      41: aload_0
      42: invokevirtual #11                 // Method getSubject:()Ljava/lang/Object;
      45: checkcast     #16                 // class java/lang/String
      48: aload_1
      49: invokevirtual #57                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      52: ifne          65
      55: aload_0
      56: ldc           #58                 // String ends with
      58: aload_1
      59: invokestatic  #13                 // Method quote:(Ljava/lang/CharSequence;)Ljava/lang/String;
      62: invokevirtual #48                 // Method fail:(Ljava/lang/String;Ljava/lang/Object;)V
      65: return

  public void matches(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #59                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: invokevirtual #60                 // Method matches:(Ljava/util/regex/Pattern;)V
       8: return

  public void matches(java.util.regex.Pattern);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #11                 // Method getSubject:()Ljava/lang/Object;
       5: checkcast     #12                 // class java/lang/CharSequence
       8: invokevirtual #61                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      11: invokevirtual #62                 // Method java/util/regex/Matcher.matches:()Z
      14: ifne          24
      17: aload_0
      18: ldc           #63                 // String matches
      20: aload_1
      21: invokevirtual #48                 // Method fail:(Ljava/lang/String;Ljava/lang/Object;)V
      24: return

  public void doesNotMatch(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #59                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: invokevirtual #64                 // Method doesNotMatch:(Ljava/util/regex/Pattern;)V
       8: return

  public void doesNotMatch(java.util.regex.Pattern);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #11                 // Method getSubject:()Ljava/lang/Object;
       5: checkcast     #12                 // class java/lang/CharSequence
       8: invokevirtual #61                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      11: invokevirtual #62                 // Method java/util/regex/Matcher.matches:()Z
      14: ifeq          24
      17: aload_0
      18: ldc           #65                 // String fails to match
      20: aload_1
      21: invokevirtual #48                 // Method fail:(Ljava/lang/String;Ljava/lang/Object;)V
      24: return

  public void containsMatch(java.util.regex.Pattern);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #11                 // Method getSubject:()Ljava/lang/Object;
       5: checkcast     #12                 // class java/lang/CharSequence
       8: invokevirtual #61                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      11: invokevirtual #66                 // Method java/util/regex/Matcher.find:()Z
      14: ifne          38
      17: aload_0
      18: ldc           #67                 // String %s should have contained a match for <%s>
      20: iconst_2
      21: anewarray     #18                 // class java/lang/Object
      24: dup
      25: iconst_0
      26: aload_0
      27: invokevirtual #25                 // Method getDisplaySubject:()Ljava/lang/String;
      30: aastore
      31: dup
      32: iconst_1
      33: aload_1
      34: aastore
      35: invokevirtual #19                 // Method failWithRawMessage:(Ljava/lang/String;[Ljava/lang/Object;)V
      38: return

  public void containsMatch(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #59                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: invokevirtual #68                 // Method containsMatch:(Ljava/util/regex/Pattern;)V
       8: return

  public void doesNotContainMatch(java.util.regex.Pattern);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #11                 // Method getSubject:()Ljava/lang/Object;
       5: checkcast     #12                 // class java/lang/CharSequence
       8: invokevirtual #61                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      11: invokevirtual #66                 // Method java/util/regex/Matcher.find:()Z
      14: ifeq          38
      17: aload_0
      18: ldc           #69                 // String %s should not have contained a match for <%s>
      20: iconst_2
      21: anewarray     #18                 // class java/lang/Object
      24: dup
      25: iconst_0
      26: aload_0
      27: invokevirtual #25                 // Method getDisplaySubject:()Ljava/lang/String;
      30: aastore
      31: dup
      32: iconst_1
      33: aload_1
      34: aastore
      35: invokevirtual #19                 // Method failWithRawMessage:(Ljava/lang/String;[Ljava/lang/Object;)V
      38: return

  public void doesNotContainMatch(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #59                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: invokevirtual #70                 // Method doesNotContainMatch:(Ljava/util/regex/Pattern;)V
       8: return

  private static java.lang.String quote(java.lang.CharSequence);
    Code:
       0: new           #4                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #6                  // String \"
       9: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      16: ldc           #6                  // String \"
      18: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: areturn

  static {};
    Code:
       0: new           #72                 // class com/google/common/truth/StringSubject$1
       3: dup
       4: invokespecial #73                 // Method com/google/common/truth/StringSubject$1."<init>":()V
       7: putstatic     #74                 // Field STRING:Lcom/google/common/truth/SubjectFactory;
      10: return
}
