Compiled from "AbstractArraySubject.java"
public abstract class com.google.common.truth.AbstractArraySubject<S extends com.google.common.truth.AbstractArraySubject<S, T>, T> extends com.google.common.truth.Subject<com.google.common.truth.AbstractArraySubject<S, T>, T> {
  com.google.common.truth.AbstractArraySubject(com.google.common.truth.FailureStrategy, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method com/google/common/truth/Subject."<init>":(Lcom/google/common/truth/FailureStrategy;Ljava/lang/Object;)V
       6: return

  public void isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method listRepresentation:()Ljava/util/List;
       4: invokeinterface #3,  1            // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifne          18
      12: aload_0
      13: ldc           #4                  // String is empty
      15: invokevirtual #5                  // Method fail:(Ljava/lang/String;)V
      18: return

  public void isNotEmpty();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method listRepresentation:()Ljava/util/List;
       4: invokeinterface #3,  1            // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          18
      12: aload_0
      13: ldc           #6                  // String is not empty
      15: invokevirtual #5                  // Method fail:(Ljava/lang/String;)V
      18: return

  public void hasLength(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #7                  // String length (%s) must be >= 0
      11: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: aload_0
      15: invokevirtual #2                  // Method listRepresentation:()Ljava/util/List;
      18: invokeinterface #9,  1            // InterfaceMethod java/util/List.size:()I
      23: iload_1
      24: if_icmpeq     37
      27: aload_0
      28: ldc           #10                 // String has length
      30: iload_1
      31: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: invokevirtual #12                 // Method fail:(Ljava/lang/String;Ljava/lang/Object;)V
      37: return

  public S named(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method com/google/common/truth/Subject.named:(Ljava/lang/String;)Lcom/google/common/truth/Subject;
       5: checkcast     #14                 // class com/google/common/truth/AbstractArraySubject
       8: areturn

  abstract java.lang.String underlyingType();

  abstract java.util.List<?> listRepresentation();

  protected java.lang.String getDisplaySubject();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method internalCustomName:()Ljava/lang/String;
       4: ifnonnull     49
       7: new           #16                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      14: ldc           #18                 // String <(
      16: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: invokevirtual #20                 // Method underlyingType:()Ljava/lang/String;
      23: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #21                 // String [])
      28: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: invokevirtual #2                  // Method listRepresentation:()Ljava/util/List;
      35: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      38: ldc           #23                 // String >
      40: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: goto          76
      49: new           #16                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #25                 // String \"
      58: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_0
      62: invokevirtual #15                 // Method internalCustomName:()Ljava/lang/String;
      65: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: ldc           #25                 // String \"
      70: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: areturn

  void failWithBadType(java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #27                 // Method java/lang/Class.isArray:()Z
       7: ifeq          41
      10: new           #16                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      17: aload_1
      18: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: invokevirtual #28                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      24: invokevirtual #29                 // Method java/lang/Class.getName:()Ljava/lang/String;
      27: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #30                 // String []
      32: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: goto          48
      41: aload_1
      42: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      45: invokevirtual #29                 // Method java/lang/Class.getName:()Ljava/lang/String;
      48: astore_2
      49: aload_0
      50: ldc           #31                 // String Incompatible types compared. expected: %s, actual: %s[]
      52: iconst_2
      53: anewarray     #32                 // class java/lang/Object
      56: dup
      57: iconst_0
      58: aload_2
      59: invokestatic  #33                 // Method com/google/common/truth/Platform.compressType:(Ljava/lang/String;)Ljava/lang/String;
      62: aastore
      63: dup
      64: iconst_1
      65: aload_0
      66: invokevirtual #20                 // Method underlyingType:()Ljava/lang/String;
      69: aastore
      70: invokevirtual #34                 // Method failWithRawMessage:(Ljava/lang/String;[Ljava/lang/Object;)V
      73: return

  public com.google.common.truth.Subject named(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #35                 // Method named:(Ljava/lang/String;)Lcom/google/common/truth/AbstractArraySubject;
       5: areturn
}
