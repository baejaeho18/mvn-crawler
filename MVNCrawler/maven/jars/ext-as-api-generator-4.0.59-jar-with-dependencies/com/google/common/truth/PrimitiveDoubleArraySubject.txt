Compiled from "PrimitiveDoubleArraySubject.java"
public class com.google.common.truth.PrimitiveDoubleArraySubject extends com.google.common.truth.AbstractArraySubject<com.google.common.truth.PrimitiveDoubleArraySubject, double[]> {
  com.google.common.truth.PrimitiveDoubleArraySubject(com.google.common.truth.FailureStrategy, double[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method com/google/common/truth/AbstractArraySubject."<init>":(Lcom/google/common/truth/FailureStrategy;Ljava/lang/Object;)V
       6: return

  protected java.lang.String underlyingType();
    Code:
       0: ldc           #2                  // String double
       2: areturn

  protected java.util.List<java.lang.Double> listRepresentation();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getSubject:()Ljava/lang/Object;
       4: checkcast     #4                  // class "[D"
       7: invokestatic  #5                  // Method com/google/common/primitives/Doubles.asList:([D)Ljava/util/List;
      10: areturn

  public void isEqualTo(java.lang.Object);
    Code:
       0: new           #6                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #7                  // String Comparing raw equality of doubles is unsafe, use isEqualTo(double[] array, double tolerance) instead.
       6: invokespecial #8                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void isEqualTo(java.lang.Object, double);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getSubject:()Ljava/lang/Object;
       4: checkcast     #4                  // class "[D"
       7: astore        4
       9: aload         4
      11: aload_1
      12: if_acmpne     16
      15: return
      16: aload_1
      17: checkcast     #4                  // class "[D"
      20: checkcast     #4                  // class "[D"
      23: astore        5
      25: aload         5
      27: arraylength
      28: aload         4
      30: arraylength
      31: if_icmpeq     74
      34: aload_0
      35: ldc           #9                  // String Arrays are of different lengths. expected: %s, actual %s
      37: iconst_2
      38: anewarray     #10                 // class java/lang/Object
      41: dup
      42: iconst_0
      43: iconst_1
      44: anewarray     #4                  // class "[D"
      47: dup
      48: iconst_0
      49: aload         5
      51: aastore
      52: invokestatic  #11                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      55: aastore
      56: dup
      57: iconst_1
      58: iconst_1
      59: anewarray     #4                  // class "[D"
      62: dup
      63: iconst_0
      64: aload         4
      66: aastore
      67: invokestatic  #11                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      70: aastore
      71: invokevirtual #12                 // Method failWithRawMessage:(Ljava/lang/String;[Ljava/lang/Object;)V
      74: new           #13                 // class java/util/ArrayList
      77: dup
      78: invokespecial #14                 // Method java/util/ArrayList."<init>":()V
      81: astore        6
      83: iconst_0
      84: istore        7
      86: iload         7
      88: aload         5
      90: arraylength
      91: if_icmpge     130
      94: aload         4
      96: iload         7
      98: daload
      99: aload         5
     101: iload         7
     103: daload
     104: dload_2
     105: invokestatic  #15                 // Method com/google/common/truth/MathUtil.equals:(DDD)Z
     108: ifne          124
     111: aload         6
     113: iload         7
     115: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     118: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     123: pop
     124: iinc          7, 1
     127: goto          86
     130: aload         6
     132: invokeinterface #18,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     137: ifne          151
     140: aload_0
     141: ldc           #19                 // String is equal to
     143: aload         5
     145: invokestatic  #5                  // Method com/google/common/primitives/Doubles.asList:([D)Ljava/util/List;
     148: invokevirtual #20                 // Method fail:(Ljava/lang/String;Ljava/lang/Object;)V
     151: goto          161
     154: astore        5
     156: aload_0
     157: aload_1
     158: invokevirtual #22                 // Method failWithBadType:(Ljava/lang/Object;)V
     161: return
    Exception table:
       from    to  target type
          16   151   154   Class java/lang/ClassCastException

  public void isNotEqualTo(java.lang.Object);
    Code:
       0: new           #6                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #23                 // String Comparing raw equality of floats is unsafe, use isNotEqualTo(double[] array, float tolerance) instead.
       6: invokespecial #8                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void isNotEqualTo(java.lang.Object, double);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getSubject:()Ljava/lang/Object;
       4: checkcast     #4                  // class "[D"
       7: astore        4
       9: aload_1
      10: checkcast     #4                  // class "[D"
      13: checkcast     #4                  // class "[D"
      16: astore        5
      18: aload         4
      20: aload         5
      22: if_acmpne     50
      25: aload_0
      26: ldc           #24                 // String %s unexpectedly equal to %s.
      28: iconst_2
      29: anewarray     #10                 // class java/lang/Object
      32: dup
      33: iconst_0
      34: aload_0
      35: invokevirtual #25                 // Method getDisplaySubject:()Ljava/lang/String;
      38: aastore
      39: dup
      40: iconst_1
      41: aload         5
      43: invokestatic  #5                  // Method com/google/common/primitives/Doubles.asList:([D)Ljava/util/List;
      46: aastore
      47: invokevirtual #12                 // Method failWithRawMessage:(Ljava/lang/String;[Ljava/lang/Object;)V
      50: aload         5
      52: arraylength
      53: aload         4
      55: arraylength
      56: if_icmpeq     60
      59: return
      60: new           #13                 // class java/util/ArrayList
      63: dup
      64: invokespecial #14                 // Method java/util/ArrayList."<init>":()V
      67: astore        6
      69: iconst_0
      70: istore        7
      72: iload         7
      74: aload         5
      76: arraylength
      77: if_icmpge     116
      80: aload         4
      82: iload         7
      84: daload
      85: aload         5
      87: iload         7
      89: daload
      90: dload_2
      91: invokestatic  #15                 // Method com/google/common/truth/MathUtil.equals:(DDD)Z
      94: ifne          110
      97: aload         6
      99: iload         7
     101: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     104: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     109: pop
     110: iinc          7, 1
     113: goto          72
     116: aload         6
     118: invokeinterface #18,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     123: ifeq          151
     126: aload_0
     127: ldc           #24                 // String %s unexpectedly equal to %s.
     129: iconst_2
     130: anewarray     #10                 // class java/lang/Object
     133: dup
     134: iconst_0
     135: aload_0
     136: invokevirtual #25                 // Method getDisplaySubject:()Ljava/lang/String;
     139: aastore
     140: dup
     141: iconst_1
     142: aload         5
     144: invokestatic  #5                  // Method com/google/common/primitives/Doubles.asList:([D)Ljava/util/List;
     147: aastore
     148: invokevirtual #12                 // Method failWithRawMessage:(Ljava/lang/String;[Ljava/lang/Object;)V
     151: goto          156
     154: astore        5
     156: return
    Exception table:
       from    to  target type
           9    59   154   Class java/lang/ClassCastException
          60   151   154   Class java/lang/ClassCastException

  private com.google.common.truth.ListSubject<?, java.lang.Double, java.util.List<java.lang.Double>> asList();
    Code:
       0: aload_0
       1: getfield      #26                 // Field failureStrategy:Lcom/google/common/truth/FailureStrategy;
       4: aload_0
       5: invokevirtual #27                 // Method listRepresentation:()Ljava/util/List;
       8: invokestatic  #28                 // Method com/google/common/truth/ListSubject.create:(Lcom/google/common/truth/FailureStrategy;Ljava/util/List;)Lcom/google/common/truth/ListSubject;
      11: areturn
}
