Compiled from "Subject.java"
public class com.google.common.truth.Subject<S extends com.google.common.truth.Subject<S, T>, T> {
  protected final com.google.common.truth.FailureStrategy failureStrategy;

  private final T subject;

  private java.lang.String customName;

  public com.google.common.truth.Subject(com.google.common.truth.FailureStrategy, T);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field customName:Ljava/lang/String;
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field failureStrategy:Lcom/google/common/truth/FailureStrategy;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field subject:Ljava/lang/Object;
      19: return

  protected java.lang.String internalCustomName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field customName:Ljava/lang/String;
       4: areturn

  public S named(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #5                  // String Name passed to named() cannot be null.
       4: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #7                  // class java/lang/String
      10: putfield      #2                  // Field customName:Ljava/lang/String;
      13: aload_0
      14: areturn

  public S labeled(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method named:(Ljava/lang/String;)Lcom/google/common/truth/Subject;
       5: areturn

  public void is(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method isEqualTo:(Ljava/lang/Object;)V
       5: return

  public void isNull();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getSubject:()Ljava/lang/Object;
       4: ifnull        13
       7: aload_0
       8: ldc           #11                 // String is null
      10: invokevirtual #12                 // Method fail:(Ljava/lang/String;)V
      13: return

  public void isNotNull();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getSubject:()Ljava/lang/Object;
       4: ifnonnull     13
       7: aload_0
       8: ldc           #13                 // String is a non-null reference
      10: invokevirtual #14                 // Method failWithoutSubject:(Ljava/lang/String;)V
      13: return

  public void isEqualTo(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getSubject:()Ljava/lang/Object;
       4: aload_1
       5: invokestatic  #15                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ifne          18
      11: aload_0
      12: ldc           #16                 // String is equal to
      14: aload_1
      15: invokevirtual #17                 // Method fail:(Ljava/lang/String;Ljava/lang/Object;)V
      18: return

  public void isNotEqualTo(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getSubject:()Ljava/lang/Object;
       4: aload_1
       5: invokestatic  #15                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ifeq          18
      11: aload_0
      12: ldc           #18                 // String is not equal to
      14: aload_1
      15: invokevirtual #17                 // Method fail:(Ljava/lang/String;Ljava/lang/Object;)V
      18: return

  public void isSameAs(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getSubject:()Ljava/lang/Object;
       4: aload_1
       5: if_acmpeq     15
       8: aload_0
       9: ldc           #19                 // String is the same instance as
      11: aload_1
      12: invokevirtual #17                 // Method fail:(Ljava/lang/String;Ljava/lang/Object;)V
      15: return

  public void isNotSameAs(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getSubject:()Ljava/lang/Object;
       4: aload_1
       5: if_acmpne     15
       8: aload_0
       9: ldc           #20                 // String is not the same instance as
      11: aload_1
      12: invokevirtual #17                 // Method fail:(Ljava/lang/String;Ljava/lang/Object;)V
      15: return

  public void isA(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method isInstanceOf:(Ljava/lang/Class;)V
       5: return

  public void isNotA(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method isNotInstanceOf:(Ljava/lang/Class;)V
       5: return

  public void isInstanceOf(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #23                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #24                 // String clazz
      10: invokespecial #25                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #10                 // Method getSubject:()Ljava/lang/Object;
      18: aload_1
      19: invokestatic  #26                 // Method com/google/common/truth/Platform.isInstanceOfType:(Ljava/lang/Object;Ljava/lang/Class;)Z
      22: ifne          67
      25: aload_0
      26: invokevirtual #10                 // Method getSubject:()Ljava/lang/Object;
      29: ifnull        57
      32: aload_0
      33: ldc           #27                 // String is an instance of
      35: aload_1
      36: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
      39: ldc           #27                 // String is an instance of
      41: aload_0
      42: invokevirtual #10                 // Method getSubject:()Ljava/lang/Object;
      45: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      48: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
      51: invokevirtual #30                 // Method failWithBadResults:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
      54: goto          67
      57: aload_0
      58: ldc           #27                 // String is an instance of
      60: aload_1
      61: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
      64: invokevirtual #17                 // Method fail:(Ljava/lang/String;Ljava/lang/Object;)V
      67: return

  public void isNotInstanceOf(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #23                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #24                 // String clazz
      10: invokespecial #25                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #10                 // Method getSubject:()Ljava/lang/Object;
      18: ifnonnull     22
      21: return
      22: aload_0
      23: invokevirtual #10                 // Method getSubject:()Ljava/lang/Object;
      26: aload_1
      27: invokestatic  #26                 // Method com/google/common/truth/Platform.isInstanceOfType:(Ljava/lang/Object;Ljava/lang/Class;)Z
      30: ifeq          57
      33: aload_0
      34: ldc           #31                 // String %s expected not to be an instance of %s, but was.
      36: iconst_2
      37: anewarray     #32                 // class java/lang/Object
      40: dup
      41: iconst_0
      42: aload_0
      43: invokevirtual #33                 // Method getDisplaySubject:()Ljava/lang/String;
      46: aastore
      47: dup
      48: iconst_1
      49: aload_1
      50: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
      53: aastore
      54: invokevirtual #34                 // Method failWithRawMessage:(Ljava/lang/String;[Ljava/lang/Object;)V
      57: return

  protected T getSubject();
    Code:
       0: aload_0
       1: getfield      #4                  // Field subject:Ljava/lang/Object;
       4: areturn

  protected java.lang.String getDisplaySubject();
    Code:
       0: aload_0
       1: getfield      #2                  // Field customName:Ljava/lang/String;
       4: ifnonnull     12
       7: ldc           #35                 // String
       9: goto          39
      12: new           #36                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #38                 // String \"
      21: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #2                  // Field customName:Ljava/lang/String;
      28: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #40                 // String \"
      33: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: astore_1
      40: new           #36                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      47: aload_1
      48: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #42                 // String <
      53: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: invokevirtual #10                 // Method getSubject:()Ljava/lang/Object;
      60: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: ldc           #44                 // String >
      65: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: areturn

  protected com.google.common.truth.TestVerb check();
    Code:
       0: new           #45                 // class com/google/common/truth/TestVerb
       3: dup
       4: aload_0
       5: getfield      #3                  // Field failureStrategy:Lcom/google/common/truth/FailureStrategy;
       8: invokespecial #46                 // Method com/google/common/truth/TestVerb."<init>":(Lcom/google/common/truth/FailureStrategy;)V
      11: areturn

  protected void fail(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field failureStrategy:Lcom/google/common/truth/FailureStrategy;
       4: new           #36                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #47                 // String Not true that
      13: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #33                 // Method getDisplaySubject:()Ljava/lang/String;
      20: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #48                 // String
      25: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokevirtual #49                 // Method com/google/common/truth/FailureStrategy.fail:(Ljava/lang/String;)V
      38: return

  protected void fail(java.lang.String, java.lang.Object);
    Code:
       0: new           #36                 // class java/lang/StringBuilder
       3: dup
       4: ldc           #47                 // String Not true that
       6: invokespecial #50                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: aload_0
      10: invokevirtual #33                 // Method getDisplaySubject:()Ljava/lang/String;
      13: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #48                 // String
      18: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: astore_3
      22: aload_2
      23: ifnull        71
      26: aload_0
      27: invokevirtual #10                 // Method getSubject:()Ljava/lang/Object;
      30: ifnull        71
      33: aload_0
      34: invokevirtual #10                 // Method getSubject:()Ljava/lang/Object;
      37: invokevirtual #51                 // Method java/lang/Object.toString:()Ljava/lang/String;
      40: aload_2
      41: invokevirtual #51                 // Method java/lang/Object.toString:()Ljava/lang/String;
      44: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifeq          71
      50: aload_0
      51: invokevirtual #10                 // Method getSubject:()Ljava/lang/Object;
      54: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      57: aload_2
      58: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      61: invokevirtual #53                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      64: ifne          71
      67: iconst_1
      68: goto          72
      71: iconst_0
      72: istore        4
      74: iload         4
      76: ifeq          104
      79: aload_3
      80: ldc           #54                 // String (
      82: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_0
      86: invokevirtual #10                 // Method getSubject:()Ljava/lang/Object;
      89: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      92: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
      95: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: ldc           #55                 // String )
     100: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: pop
     104: aload_3
     105: aload_1
     106: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: ldc           #56                 // String  <
     111: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_2
     115: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     118: ldc           #44                 // String >
     120: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: pop
     124: iload         4
     126: ifeq          151
     129: aload_3
     130: ldc           #57                 // String  (
     132: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: aload_2
     136: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     139: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
     142: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: ldc           #58                 // String )
     147: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: pop
     151: aload_0
     152: getfield      #3                  // Field failureStrategy:Lcom/google/common/truth/FailureStrategy;
     155: aload_3
     156: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     159: invokevirtual #49                 // Method com/google/common/truth/FailureStrategy.fail:(Ljava/lang/String;)V
     162: return

  protected void fail(java.lang.String, java.lang.Object...);
    Code:
       0: aload_2
       1: arraylength
       2: ifne          13
       5: aload_0
       6: aload_1
       7: invokevirtual #12                 // Method fail:(Ljava/lang/String;)V
      10: goto          117
      13: aload_2
      14: arraylength
      15: iconst_1
      16: if_icmpne     30
      19: aload_0
      20: aload_1
      21: aload_2
      22: iconst_0
      23: aaload
      24: invokevirtual #17                 // Method fail:(Ljava/lang/String;Ljava/lang/Object;)V
      27: goto          117
      30: new           #36                 // class java/lang/StringBuilder
      33: dup
      34: ldc           #47                 // String Not true that
      36: invokespecial #50                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      39: astore_3
      40: aload_3
      41: aload_0
      42: invokevirtual #33                 // Method getDisplaySubject:()Ljava/lang/String;
      45: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #48                 // String
      50: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_1
      54: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: pop
      58: aload_2
      59: astore        4
      61: aload         4
      63: arraylength
      64: istore        5
      66: iconst_0
      67: istore        6
      69: iload         6
      71: iload         5
      73: if_icmpge     106
      76: aload         4
      78: iload         6
      80: aaload
      81: astore        7
      83: aload_3
      84: ldc           #56                 // String  <
      86: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload         7
      91: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      94: ldc           #44                 // String >
      96: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: pop
     100: iinc          6, 1
     103: goto          69
     106: aload_0
     107: getfield      #3                  // Field failureStrategy:Lcom/google/common/truth/FailureStrategy;
     110: aload_3
     111: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: invokevirtual #49                 // Method com/google/common/truth/FailureStrategy.fail:(Ljava/lang/String;)V
     117: return

  protected void failWithBadResults(java.lang.String, java.lang.Object, java.lang.String, java.lang.Object);
    Code:
       0: ldc           #59                 // String Not true that %s %s <%s>. It %s <%s>
       2: iconst_5
       3: anewarray     #32                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokevirtual #33                 // Method getDisplaySubject:()Ljava/lang/String;
      12: aastore
      13: dup
      14: iconst_1
      15: aload_1
      16: aastore
      17: dup
      18: iconst_2
      19: aload_2
      20: aastore
      21: dup
      22: iconst_3
      23: aload_3
      24: aastore
      25: dup
      26: iconst_4
      27: aload         4
      29: ifnonnull     37
      32: ldc           #60                 // String null reference
      34: goto          39
      37: aload         4
      39: aastore
      40: invokestatic  #61                 // Method com/google/common/truth/StringUtil.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      43: astore        5
      45: aload_0
      46: getfield      #3                  // Field failureStrategy:Lcom/google/common/truth/FailureStrategy;
      49: aload         5
      51: invokevirtual #49                 // Method com/google/common/truth/FailureStrategy.fail:(Ljava/lang/String;)V
      54: return

  protected void failWithCustomSubject(java.lang.String, java.lang.Object, java.lang.Object);
    Code:
       0: ldc           #62                 // String Not true that <%s> %s <%s>
       2: iconst_3
       3: anewarray     #32                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_3
       9: ifnonnull     17
      12: ldc           #60                 // String null reference
      14: goto          18
      17: aload_3
      18: aastore
      19: dup
      20: iconst_1
      21: aload_1
      22: aastore
      23: dup
      24: iconst_2
      25: aload_2
      26: aastore
      27: invokestatic  #61                 // Method com/google/common/truth/StringUtil.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      30: astore        4
      32: aload_0
      33: getfield      #3                  // Field failureStrategy:Lcom/google/common/truth/FailureStrategy;
      36: aload         4
      38: invokevirtual #49                 // Method com/google/common/truth/FailureStrategy.fail:(Ljava/lang/String;)V
      41: return

  protected void failWithoutSubject(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field customName:Ljava/lang/String;
       4: ifnonnull     12
       7: ldc           #63                 // String the subject
       9: goto          39
      12: new           #36                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #38                 // String \"
      21: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #2                  // Field customName:Ljava/lang/String;
      28: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #38                 // String \"
      33: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: astore_2
      40: aload_0
      41: getfield      #3                  // Field failureStrategy:Lcom/google/common/truth/FailureStrategy;
      44: ldc           #64                 // String Not true that %s %s
      46: iconst_2
      47: anewarray     #32                 // class java/lang/Object
      50: dup
      51: iconst_0
      52: aload_2
      53: aastore
      54: dup
      55: iconst_1
      56: aload_1
      57: aastore
      58: invokestatic  #61                 // Method com/google/common/truth/StringUtil.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      61: invokevirtual #49                 // Method com/google/common/truth/FailureStrategy.fail:(Ljava/lang/String;)V
      64: return

  protected void failWithRawMessage(java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: getfield      #3                  // Field failureStrategy:Lcom/google/common/truth/FailureStrategy;
       4: aload_1
       5: aload_2
       6: invokestatic  #61                 // Method com/google/common/truth/StringUtil.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
       9: invokevirtual #49                 // Method com/google/common/truth/FailureStrategy.fail:(Ljava/lang/String;)V
      12: return

  public com.google.common.truth.Subject$HasField hasField(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getSubject:()Ljava/lang/Object;
       4: astore_2
       5: aload_2
       6: ifnonnull     27
       9: aload_0
      10: getfield      #3                  // Field failureStrategy:Lcom/google/common/truth/FailureStrategy;
      13: ldc           #65                 // String Cannot determine a field name from a null object.
      15: invokevirtual #49                 // Method com/google/common/truth/FailureStrategy.fail:(Ljava/lang/String;)V
      18: new           #66                 // class com/google/common/truth/Subject$1
      21: dup
      22: aload_0
      23: invokespecial #67                 // Method com/google/common/truth/Subject$1."<init>":(Lcom/google/common/truth/Subject;)V
      26: areturn
      27: aload_2
      28: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      31: astore_3
      32: aload_3
      33: aload_1
      34: invokestatic  #68                 // Method com/google/common/truth/ReflectionUtil.getField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
      37: astore        4
      39: aload         4
      41: iconst_1
      42: invokevirtual #69                 // Method java/lang/reflect/Field.setAccessible:(Z)V
      45: goto          119
      48: astore        5
      50: new           #36                 // class java/lang/StringBuilder
      53: dup
      54: ldc           #47                 // String Not true that
      56: invokespecial #50                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      59: astore        6
      61: aload         6
      63: ldc           #42                 // String <
      65: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_3
      69: invokevirtual #71                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      72: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: ldc           #44                 // String >
      77: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: pop
      81: aload         6
      83: ldc           #72                 // String  has a field named <
      85: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_1
      89: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #44                 // String >
      94: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: pop
      98: aload_0
      99: getfield      #3                  // Field failureStrategy:Lcom/google/common/truth/FailureStrategy;
     102: aload         6
     104: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: invokevirtual #49                 // Method com/google/common/truth/FailureStrategy.fail:(Ljava/lang/String;)V
     110: new           #73                 // class com/google/common/truth/Subject$2
     113: dup
     114: aload_0
     115: invokespecial #74                 // Method com/google/common/truth/Subject$2."<init>":(Lcom/google/common/truth/Subject;)V
     118: areturn
     119: new           #75                 // class com/google/common/truth/Subject$3
     122: dup
     123: aload_0
     124: aload         4
     126: aload_2
     127: aload_3
     128: aload_1
     129: invokespecial #76                 // Method com/google/common/truth/Subject$3."<init>":(Lcom/google/common/truth/Subject;Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)V
     132: areturn
    Exception table:
       from    to  target type
          32    45    48   Class java/lang/NoSuchFieldException

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method isEqualTo:(Ljava/lang/Object;)V
       5: iconst_0
       6: ireturn

  public int hashCode();
    Code:
       0: new           #77                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #78                 // String Equals/Hashcode is not supported on Subjects. Their only use is as a holder of propositions. Use of equals() is deprecated and forwards to isEqualTo() and hashCode() is disallowed.
       6: invokespecial #79                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow
}
