Compiled from "LongSubject.java"
public class com.google.common.truth.LongSubject extends com.google.common.truth.ComparableSubject<com.google.common.truth.LongSubject, java.lang.Long> {
  public static final com.google.common.truth.SubjectFactory<com.google.common.truth.LongSubject, java.lang.Long> LONG;

  public com.google.common.truth.LongSubject(com.google.common.truth.FailureStrategy, java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method com/google/common/truth/ComparableSubject."<init>":(Lcom/google/common/truth/FailureStrategy;Ljava/lang/Comparable;)V
       6: return

  public void isInclusivelyInRange(long, long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #2                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       5: lload_3
       6: invokestatic  #2                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       9: invokestatic  #3                  // Method com/google/common/collect/Range.closed:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/google/common/collect/Range;
      12: invokevirtual #4                  // Method isIn:(Lcom/google/common/collect/Range;)V
      15: return

  public void isBetween(long, long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #2                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       5: lload_3
       6: invokestatic  #2                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       9: invokestatic  #5                  // Method com/google/common/collect/Range.open:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/google/common/collect/Range;
      12: invokevirtual #4                  // Method isIn:(Lcom/google/common/collect/Range;)V
      15: return

  public void isEqualTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method com/google/common/truth/ComparableSubject.isEqualTo:(Ljava/lang/Object;)V
       5: return

  public void isNotEqualTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method com/google/common/truth/ComparableSubject.isNotEqualTo:(Ljava/lang/Object;)V
       5: return

  public void isEqualTo(int);
    Code:
       0: aload_0
       1: iload_1
       2: i2l
       3: invokestatic  #2                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       6: invokevirtual #8                  // Method isEqualTo:(Ljava/lang/Object;)V
       9: return

  public void is(int);
    Code:
       0: aload_0
       1: iload_1
       2: i2l
       3: invokestatic  #2                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       6: invokevirtual #8                  // Method isEqualTo:(Ljava/lang/Object;)V
       9: return

  public void is(short);
    Code:
       0: aload_0
       1: iload_1
       2: i2l
       3: invokestatic  #2                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       6: invokevirtual #8                  // Method isEqualTo:(Ljava/lang/Object;)V
       9: return

  public void is(byte);
    Code:
       0: aload_0
       1: iload_1
       2: i2l
       3: invokestatic  #2                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       6: invokevirtual #8                  // Method isEqualTo:(Ljava/lang/Object;)V
       9: return

  static {};
    Code:
       0: new           #9                  // class com/google/common/truth/LongSubject$1
       3: dup
       4: invokespecial #10                 // Method com/google/common/truth/LongSubject$1."<init>":()V
       7: putstatic     #11                 // Field LONG:Lcom/google/common/truth/SubjectFactory;
      10: return
}
