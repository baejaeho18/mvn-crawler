Compiled from "ObjectArraySubject.java"
public class com.google.common.truth.ObjectArraySubject<T> extends com.google.common.truth.AbstractArraySubject<com.google.common.truth.ObjectArraySubject<T>, T[]> {
  private final java.lang.String typeName;

  com.google.common.truth.ObjectArraySubject(com.google.common.truth.FailureStrategy, T[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method com/google/common/truth/AbstractArraySubject."<init>":(Lcom/google/common/truth/FailureStrategy;Ljava/lang/Object;)V
       6: aload_0
       7: aload_0
       8: aload_2
       9: invokespecial #2                  // Method typeNameFromInstance:(Ljava/lang/Object;)Ljava/lang/String;
      12: putfield      #3                  // Field typeName:Ljava/lang/String;
      15: return

  protected java.lang.String underlyingType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field typeName:Ljava/lang/String;
       4: areturn

  protected java.util.List<T> listRepresentation();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getSubject:()Ljava/lang/Object;
       4: checkcast     #5                  // class "[Ljava/lang/Object;"
       7: invokestatic  #6                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      10: areturn

  private java.lang.String typeNameFromInstance(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     7
       4: ldc           #7                  // String null reference of unknown array type
       6: areturn
       7: aload_1
       8: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #9                  // Method java/lang/Class.isArray:()Z
      14: ifne          50
      17: new           #10                 // class java/lang/IllegalArgumentException
      20: dup
      21: new           #11                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      28: aload_1
      29: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      32: invokevirtual #13                 // Method java/lang/Class.getName:()Ljava/lang/String;
      35: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #15                 // String  instance passed into T[] subject.
      40: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_1
      51: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      54: invokevirtual #18                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      57: astore_2
      58: aload_2
      59: invokevirtual #19                 // Method java/lang/Class.isPrimitive:()Z
      62: ifeq          75
      65: new           #10                 // class java/lang/IllegalArgumentException
      68: dup
      69: ldc           #20                 // String Primitive array passed into T[] subject.
      71: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      74: athrow
      75: aload_2
      76: invokevirtual #21                 // Method java/lang/Class.toString:()Ljava/lang/String;
      79: invokestatic  #22                 // Method com/google/common/truth/Platform.compressType:(Ljava/lang/String;)Ljava/lang/String;
      82: areturn

  public void isEqualTo(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getSubject:()Ljava/lang/Object;
       4: checkcast     #5                  // class "[Ljava/lang/Object;"
       7: astore_2
       8: aload_2
       9: aload_1
      10: if_acmpne     14
      13: return
      14: aload_1
      15: checkcast     #5                  // class "[Ljava/lang/Object;"
      18: checkcast     #5                  // class "[Ljava/lang/Object;"
      21: astore_3
      22: aload_2
      23: aload_3
      24: invokestatic  #23                 // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
      27: ifne          40
      30: aload_0
      31: ldc           #24                 // String is equal to
      33: aload_3
      34: invokestatic  #6                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      37: invokevirtual #25                 // Method fail:(Ljava/lang/String;Ljava/lang/Object;)V
      40: goto          49
      43: astore_3
      44: aload_0
      45: aload_1
      46: invokevirtual #27                 // Method failWithBadType:(Ljava/lang/Object;)V
      49: return
    Exception table:
       from    to  target type
          14    40    43   Class java/lang/ClassCastException

  public void isNotEqualTo(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getSubject:()Ljava/lang/Object;
       4: checkcast     #5                  // class "[Ljava/lang/Object;"
       7: astore_2
       8: aload_1
       9: checkcast     #5                  // class "[Ljava/lang/Object;"
      12: checkcast     #5                  // class "[Ljava/lang/Object;"
      15: astore_3
      16: aload_2
      17: aload_1
      18: if_acmpeq     29
      21: aload_2
      22: aload_3
      23: invokestatic  #23                 // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
      26: ifeq          53
      29: aload_0
      30: ldc           #28                 // String %s unexpectedly equal to %s.
      32: iconst_2
      33: anewarray     #29                 // class java/lang/Object
      36: dup
      37: iconst_0
      38: aload_0
      39: invokevirtual #30                 // Method getDisplaySubject:()Ljava/lang/String;
      42: aastore
      43: dup
      44: iconst_1
      45: aload_3
      46: invokestatic  #6                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      49: aastore
      50: invokevirtual #31                 // Method failWithRawMessage:(Ljava/lang/String;[Ljava/lang/Object;)V
      53: goto          57
      56: astore_3
      57: return
    Exception table:
       from    to  target type
           8    53    56   Class java/lang/ClassCastException

  public com.google.common.truth.ListSubject<?, T, java.util.List<T>> asList();
    Code:
       0: aload_0
       1: getfield      #32                 // Field failureStrategy:Lcom/google/common/truth/FailureStrategy;
       4: aload_0
       5: invokevirtual #33                 // Method listRepresentation:()Ljava/util/List;
       8: invokestatic  #34                 // Method com/google/common/truth/ListSubject.create:(Lcom/google/common/truth/FailureStrategy;Ljava/util/List;)Lcom/google/common/truth/ListSubject;
      11: areturn
}
