Compiled from "Truth.java"
public final class com.google.common.truth.Truth {
  public static final com.google.common.truth.FailureStrategy THROW_ASSERTION_ERROR;

  public static final com.google.common.truth.TestVerb ASSERT;

  public com.google.common.truth.Truth();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static com.google.common.truth.TestVerb assert_();
    Code:
       0: getstatic     #2                  // Field ASSERT:Lcom/google/common/truth/TestVerb;
       3: areturn

  public static <T extends java.lang.Comparable<?>> com.google.common.truth.ComparableSubject<?, T> assertThat(T);
    Code:
       0: invokestatic  #3                  // Method assert_:()Lcom/google/common/truth/TestVerb;
       3: aload_0
       4: invokevirtual #4                  // Method com/google/common/truth/TestVerb.that:(Ljava/lang/Comparable;)Lcom/google/common/truth/ComparableSubject;
       7: areturn

  public static com.google.common.truth.Subject<com.google.common.truth.DefaultSubject, java.lang.Object> assertThat(java.lang.Object);
    Code:
       0: invokestatic  #3                  // Method assert_:()Lcom/google/common/truth/TestVerb;
       3: aload_0
       4: invokevirtual #5                  // Method com/google/common/truth/TestVerb.that:(Ljava/lang/Object;)Lcom/google/common/truth/Subject;
       7: areturn

  public static com.google.common.truth.ClassSubject assertThat(java.lang.Class<?>);
    Code:
       0: invokestatic  #3                  // Method assert_:()Lcom/google/common/truth/TestVerb;
       3: aload_0
       4: invokevirtual #6                  // Method com/google/common/truth/TestVerb.that:(Ljava/lang/Class;)Lcom/google/common/truth/ClassSubject;
       7: areturn

  public static com.google.common.truth.LongSubject assertThat(java.lang.Long);
    Code:
       0: invokestatic  #3                  // Method assert_:()Lcom/google/common/truth/TestVerb;
       3: aload_0
       4: invokevirtual #7                  // Method com/google/common/truth/TestVerb.that:(Ljava/lang/Long;)Lcom/google/common/truth/LongSubject;
       7: areturn

  public static com.google.common.truth.IntegerSubject assertThat(java.lang.Integer);
    Code:
       0: invokestatic  #3                  // Method assert_:()Lcom/google/common/truth/TestVerb;
       3: aload_0
       4: invokevirtual #8                  // Method com/google/common/truth/TestVerb.that:(Ljava/lang/Integer;)Lcom/google/common/truth/IntegerSubject;
       7: areturn

  public static com.google.common.truth.BooleanSubject assertThat(java.lang.Boolean);
    Code:
       0: invokestatic  #3                  // Method assert_:()Lcom/google/common/truth/TestVerb;
       3: aload_0
       4: invokevirtual #9                  // Method com/google/common/truth/TestVerb.that:(Ljava/lang/Boolean;)Lcom/google/common/truth/BooleanSubject;
       7: areturn

  public static com.google.common.truth.StringSubject assertThat(java.lang.String);
    Code:
       0: invokestatic  #3                  // Method assert_:()Lcom/google/common/truth/TestVerb;
       3: aload_0
       4: invokevirtual #10                 // Method com/google/common/truth/TestVerb.that:(Ljava/lang/String;)Lcom/google/common/truth/StringSubject;
       7: areturn

  public static <T, C extends java.lang.Iterable<T>> com.google.common.truth.IterableSubject<? extends com.google.common.truth.IterableSubject<?, T, C>, T, C> assertThat(java.lang.Iterable<T>);
    Code:
       0: invokestatic  #3                  // Method assert_:()Lcom/google/common/truth/TestVerb;
       3: aload_0
       4: invokevirtual #11                 // Method com/google/common/truth/TestVerb.that:(Ljava/lang/Iterable;)Lcom/google/common/truth/IterableSubject;
       7: areturn

  public static <T, C extends java.util.Collection<T>> com.google.common.truth.CollectionSubject<? extends com.google.common.truth.CollectionSubject<?, T, C>, T, C> assertThat(java.util.Collection<T>);
    Code:
       0: invokestatic  #3                  // Method assert_:()Lcom/google/common/truth/TestVerb;
       3: aload_0
       4: invokevirtual #12                 // Method com/google/common/truth/TestVerb.that:(Ljava/util/Collection;)Lcom/google/common/truth/CollectionSubject;
       7: areturn

  public static <T, C extends java.util.List<T>> com.google.common.truth.ListSubject<? extends com.google.common.truth.ListSubject<?, T, C>, T, C> assertThat(java.util.List<T>);
    Code:
       0: invokestatic  #3                  // Method assert_:()Lcom/google/common/truth/TestVerb;
       3: aload_0
       4: invokevirtual #13                 // Method com/google/common/truth/TestVerb.that:(Ljava/util/List;)Lcom/google/common/truth/ListSubject;
       7: areturn

  public static <T> com.google.common.truth.ObjectArraySubject<T> assertThat(T[]);
    Code:
       0: invokestatic  #3                  // Method assert_:()Lcom/google/common/truth/TestVerb;
       3: aload_0
       4: invokevirtual #14                 // Method com/google/common/truth/TestVerb.that:([Ljava/lang/Object;)Lcom/google/common/truth/ObjectArraySubject;
       7: areturn

  public static com.google.common.truth.PrimitiveBooleanArraySubject assertThat(boolean[]);
    Code:
       0: invokestatic  #3                  // Method assert_:()Lcom/google/common/truth/TestVerb;
       3: aload_0
       4: invokevirtual #15                 // Method com/google/common/truth/TestVerb.that:([Z)Lcom/google/common/truth/PrimitiveBooleanArraySubject;
       7: areturn

  public static com.google.common.truth.PrimitiveIntArraySubject assertThat(int[]);
    Code:
       0: invokestatic  #3                  // Method assert_:()Lcom/google/common/truth/TestVerb;
       3: aload_0
       4: invokevirtual #16                 // Method com/google/common/truth/TestVerb.that:([I)Lcom/google/common/truth/PrimitiveIntArraySubject;
       7: areturn

  public static com.google.common.truth.PrimitiveLongArraySubject assertThat(long[]);
    Code:
       0: invokestatic  #3                  // Method assert_:()Lcom/google/common/truth/TestVerb;
       3: aload_0
       4: invokevirtual #17                 // Method com/google/common/truth/TestVerb.that:([J)Lcom/google/common/truth/PrimitiveLongArraySubject;
       7: areturn

  public static com.google.common.truth.PrimitiveByteArraySubject assertThat(byte[]);
    Code:
       0: invokestatic  #3                  // Method assert_:()Lcom/google/common/truth/TestVerb;
       3: aload_0
       4: invokevirtual #18                 // Method com/google/common/truth/TestVerb.that:([B)Lcom/google/common/truth/PrimitiveByteArraySubject;
       7: areturn

  public static com.google.common.truth.PrimitiveCharArraySubject assertThat(char[]);
    Code:
       0: invokestatic  #3                  // Method assert_:()Lcom/google/common/truth/TestVerb;
       3: aload_0
       4: invokevirtual #19                 // Method com/google/common/truth/TestVerb.that:([C)Lcom/google/common/truth/PrimitiveCharArraySubject;
       7: areturn

  public static com.google.common.truth.PrimitiveFloatArraySubject assertThat(float[]);
    Code:
       0: invokestatic  #3                  // Method assert_:()Lcom/google/common/truth/TestVerb;
       3: aload_0
       4: invokevirtual #20                 // Method com/google/common/truth/TestVerb.that:([F)Lcom/google/common/truth/PrimitiveFloatArraySubject;
       7: areturn

  public static com.google.common.truth.PrimitiveDoubleArraySubject assertThat(double[]);
    Code:
       0: invokestatic  #3                  // Method assert_:()Lcom/google/common/truth/TestVerb;
       3: aload_0
       4: invokevirtual #21                 // Method com/google/common/truth/TestVerb.that:([D)Lcom/google/common/truth/PrimitiveDoubleArraySubject;
       7: areturn

  public static <T> com.google.common.truth.OptionalSubject<T> assertThat(com.google.common.base.Optional<T>);
    Code:
       0: invokestatic  #3                  // Method assert_:()Lcom/google/common/truth/TestVerb;
       3: aload_0
       4: invokevirtual #22                 // Method com/google/common/truth/TestVerb.that:(Lcom/google/common/base/Optional;)Lcom/google/common/truth/OptionalSubject;
       7: areturn

  public static <K, V, M extends java.util.Map<K, V>> com.google.common.truth.MapSubject<? extends com.google.common.truth.MapSubject<?, K, V, M>, K, V, M> assertThat(java.util.Map<K, V>);
    Code:
       0: invokestatic  #3                  // Method assert_:()Lcom/google/common/truth/TestVerb;
       3: aload_0
       4: invokevirtual #23                 // Method com/google/common/truth/TestVerb.that:(Ljava/util/Map;)Lcom/google/common/truth/MapSubject;
       7: areturn

  static {};
    Code:
       0: new           #24                 // class com/google/common/truth/Truth$1
       3: dup
       4: invokespecial #25                 // Method com/google/common/truth/Truth$1."<init>":()V
       7: putstatic     #26                 // Field THROW_ASSERTION_ERROR:Lcom/google/common/truth/FailureStrategy;
      10: new           #27                 // class com/google/common/truth/TestVerb
      13: dup
      14: getstatic     #26                 // Field THROW_ASSERTION_ERROR:Lcom/google/common/truth/FailureStrategy;
      17: invokespecial #28                 // Method com/google/common/truth/TestVerb."<init>":(Lcom/google/common/truth/FailureStrategy;)V
      20: putstatic     #2                  // Field ASSERT:Lcom/google/common/truth/TestVerb;
      23: return
}
