Compiled from "ImmutableTable.java"
final class com.google.common.collect.ImmutableTable$MutableCell<R, C, V> extends com.google.common.collect.Tables$AbstractCell<R, C, V> {
  private final R row;

  private final C column;

  private V value;

  com.google.common.collect.ImmutableTable$MutableCell(R, C, V);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/common/collect/Tables$AbstractCell."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: putfield      #3                  // Field row:Ljava/lang/Object;
      12: aload_0
      13: aload_2
      14: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      17: putfield      #4                  // Field column:Ljava/lang/Object;
      20: aload_0
      21: aload_3
      22: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      25: putfield      #5                  // Field value:Ljava/lang/Object;
      28: return

  public R getRowKey();
    Code:
       0: aload_0
       1: getfield      #3                  // Field row:Ljava/lang/Object;
       4: areturn

  public C getColumnKey();
    Code:
       0: aload_0
       1: getfield      #4                  // Field column:Ljava/lang/Object;
       4: areturn

  public V getValue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:Ljava/lang/Object;
       4: areturn

  void merge(V, java.util.function.BinaryOperator<V>);
    Code:
       0: aload_1
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_2
       7: aload_0
       8: getfield      #5                  // Field value:Ljava/lang/Object;
      11: aload_1
      12: invokeinterface #6,  3            // InterfaceMethod java/util/function/BinaryOperator.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: putfield      #5                  // Field value:Ljava/lang/Object;
      23: return
}
