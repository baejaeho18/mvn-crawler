Compiled from "CollectCollectors.java"
final class com.google.common.collect.CollectCollectors {
  com.google.common.collect.CollectCollectors();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static <T, K, V> java.util.stream.Collector<T, ?, com.google.common.collect.ImmutableBiMap<K, V>> toImmutableBiMap(java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends V>);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: invokedynamic #3,  0              // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
      15: aload_0
      16: aload_1
      17: invokedynamic #4,  0              // InvokeDynamic #1:accept:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/function/BiConsumer;
      22: invokedynamic #5,  0              // InvokeDynamic #2:apply:()Ljava/util/function/BinaryOperator;
      27: invokedynamic #6,  0              // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      32: iconst_0
      33: anewarray     #7                  // class java/util/stream/Collector$Characteristics
      36: invokestatic  #8                  // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      39: areturn

  static <E> java.util.stream.Collector<E, ?, com.google.common.collect.ImmutableList<E>> toImmutableList();
    Code:
       0: invokedynamic #9,  0              // InvokeDynamic #4:get:()Ljava/util/function/Supplier;
       5: invokedynamic #10,  0             // InvokeDynamic #5:accept:()Ljava/util/function/BiConsumer;
      10: invokedynamic #11,  0             // InvokeDynamic #6:apply:()Ljava/util/function/BinaryOperator;
      15: invokedynamic #12,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      20: iconst_0
      21: anewarray     #7                  // class java/util/stream/Collector$Characteristics
      24: invokestatic  #8                  // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      27: areturn

  static <T, K, V> java.util.stream.Collector<T, ?, com.google.common.collect.ImmutableMap<K, V>> toImmutableMap(java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends V>);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: invokedynamic #13,  0             // InvokeDynamic #8:get:()Ljava/util/function/Supplier;
      15: aload_0
      16: aload_1
      17: invokedynamic #14,  0             // InvokeDynamic #9:accept:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/function/BiConsumer;
      22: invokedynamic #15,  0             // InvokeDynamic #10:apply:()Ljava/util/function/BinaryOperator;
      27: invokedynamic #16,  0             // InvokeDynamic #11:apply:()Ljava/util/function/Function;
      32: iconst_0
      33: anewarray     #7                  // class java/util/stream/Collector$Characteristics
      36: invokestatic  #8                  // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      39: areturn

  static <E> java.util.stream.Collector<E, ?, com.google.common.collect.ImmutableSet<E>> toImmutableSet();
    Code:
       0: invokedynamic #17,  0             // InvokeDynamic #12:get:()Ljava/util/function/Supplier;
       5: invokedynamic #18,  0             // InvokeDynamic #13:accept:()Ljava/util/function/BiConsumer;
      10: invokedynamic #19,  0             // InvokeDynamic #14:apply:()Ljava/util/function/BinaryOperator;
      15: invokedynamic #20,  0             // InvokeDynamic #15:apply:()Ljava/util/function/Function;
      20: iconst_0
      21: anewarray     #7                  // class java/util/stream/Collector$Characteristics
      24: invokestatic  #8                  // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      27: areturn

  static <T, K, V> java.util.stream.Collector<T, ?, com.google.common.collect.ImmutableSortedMap<K, V>> toImmutableSortedMap(java.util.Comparator<? super K>, java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends V>);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_2
      11: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: invokedynamic #21,  0             // InvokeDynamic #16:get:(Ljava/util/Comparator;)Ljava/util/function/Supplier;
      21: aload_1
      22: aload_2
      23: invokedynamic #22,  0             // InvokeDynamic #17:accept:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/function/BiConsumer;
      28: invokedynamic #23,  0             // InvokeDynamic #18:apply:()Ljava/util/function/BinaryOperator;
      33: invokedynamic #24,  0             // InvokeDynamic #19:apply:()Ljava/util/function/Function;
      38: iconst_1
      39: anewarray     #7                  // class java/util/stream/Collector$Characteristics
      42: dup
      43: iconst_0
      44: getstatic     #25                 // Field java/util/stream/Collector$Characteristics.UNORDERED:Ljava/util/stream/Collector$Characteristics;
      47: aastore
      48: invokestatic  #8                  // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      51: areturn

  static <E> java.util.stream.Collector<E, ?, com.google.common.collect.ImmutableSortedSet<E>> toImmutableSortedSet(java.util.Comparator<? super E>);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokedynamic #26,  0             // InvokeDynamic #20:get:(Ljava/util/Comparator;)Ljava/util/function/Supplier;
      11: invokedynamic #27,  0             // InvokeDynamic #21:accept:()Ljava/util/function/BiConsumer;
      16: invokedynamic #28,  0             // InvokeDynamic #22:apply:()Ljava/util/function/BinaryOperator;
      21: invokedynamic #29,  0             // InvokeDynamic #23:apply:()Ljava/util/function/Function;
      26: iconst_0
      27: anewarray     #7                  // class java/util/stream/Collector$Characteristics
      30: invokestatic  #8                  // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      33: areturn

  private static com.google.common.collect.ImmutableSortedSet$Builder lambda$toImmutableSortedSet$4(java.util.Comparator);
    Code:
       0: new           #30                 // class com/google/common/collect/ImmutableSortedSet$Builder
       3: dup
       4: aload_0
       5: invokespecial #31                 // Method com/google/common/collect/ImmutableSortedSet$Builder."<init>":(Ljava/util/Comparator;)V
       8: areturn

  private static void lambda$toImmutableSortedMap$3(java.util.function.Function, java.util.function.Function, com.google.common.collect.ImmutableSortedMap$Builder, java.lang.Object);
    Code:
       0: aload_2
       1: aload_0
       2: aload_3
       3: invokeinterface #32,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_1
       9: aload_3
      10: invokeinterface #32,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      15: invokevirtual #33                 // Method com/google/common/collect/ImmutableSortedMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSortedMap$Builder;
      18: pop
      19: return

  private static com.google.common.collect.ImmutableSortedMap$Builder lambda$toImmutableSortedMap$2(java.util.Comparator);
    Code:
       0: new           #34                 // class com/google/common/collect/ImmutableSortedMap$Builder
       3: dup
       4: aload_0
       5: invokespecial #35                 // Method com/google/common/collect/ImmutableSortedMap$Builder."<init>":(Ljava/util/Comparator;)V
       8: areturn

  private static void lambda$toImmutableMap$1(java.util.function.Function, java.util.function.Function, com.google.common.collect.ImmutableMap$Builder, java.lang.Object);
    Code:
       0: aload_2
       1: aload_0
       2: aload_3
       3: invokeinterface #32,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_1
       9: aload_3
      10: invokeinterface #32,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      15: invokevirtual #36                 // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
      18: pop
      19: return

  private static void lambda$toImmutableBiMap$0(java.util.function.Function, java.util.function.Function, com.google.common.collect.ImmutableBiMap$Builder, java.lang.Object);
    Code:
       0: aload_2
       1: aload_0
       2: aload_3
       3: invokeinterface #32,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_1
       9: aload_3
      10: invokeinterface #32,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      15: invokevirtual #37                 // Method com/google/common/collect/ImmutableBiMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableBiMap$Builder;
      18: pop
      19: return
}
