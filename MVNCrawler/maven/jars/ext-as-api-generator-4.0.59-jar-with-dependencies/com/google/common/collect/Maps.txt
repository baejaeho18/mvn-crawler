Compiled from "Maps.java"
public final class com.google.common.collect.Maps {
  private com.google.common.collect.Maps();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: return

  static <K> com.google.common.base.Function<java.util.Map$Entry<K, ?>, K> keyFunction();
    Code:
       0: getstatic     #7                  // Field com/google/common/collect/Maps$EntryFunction.KEY:Lcom/google/common/collect/Maps$EntryFunction;
       3: areturn

  static <V> com.google.common.base.Function<java.util.Map$Entry<?, V>, V> valueFunction();
    Code:
       0: getstatic     #8                  // Field com/google/common/collect/Maps$EntryFunction.VALUE:Lcom/google/common/collect/Maps$EntryFunction;
       3: areturn

  static <K, V> java.util.Iterator<K> keyIterator(java.util.Iterator<java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method keyFunction:()Lcom/google/common/base/Function;
       4: invokestatic  #10                 // Method com/google/common/collect/Iterators.transform:(Ljava/util/Iterator;Lcom/google/common/base/Function;)Ljava/util/Iterator;
       7: areturn

  static <K, V> java.util.Iterator<V> valueIterator(java.util.Iterator<java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: invokestatic  #11                 // Method valueFunction:()Lcom/google/common/base/Function;
       4: invokestatic  #10                 // Method com/google/common/collect/Iterators.transform:(Ljava/util/Iterator;Lcom/google/common/base/Function;)Ljava/util/Iterator;
       7: areturn

  public static <K extends java.lang.Enum<K>, V> com.google.common.collect.ImmutableMap<K, V> immutableEnumMap(java.util.Map<K, ? extends V>);
    Code:
       0: aload_0
       1: instanceof    #12                 // class com/google/common/collect/ImmutableEnumMap
       4: ifeq          14
       7: aload_0
       8: checkcast     #12                 // class com/google/common/collect/ImmutableEnumMap
      11: astore_1
      12: aload_1
      13: areturn
      14: aload_0
      15: invokeinterface #13,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      20: ifeq          27
      23: invokestatic  #14                 // Method com/google/common/collect/ImmutableMap.of:()Lcom/google/common/collect/ImmutableMap;
      26: areturn
      27: aload_0
      28: invokeinterface #15,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      33: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      38: astore_1
      39: aload_1
      40: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          81
      48: aload_1
      49: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #19                 // class java/util/Map$Entry
      57: astore_2
      58: aload_2
      59: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      64: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      67: pop
      68: aload_2
      69: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      74: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      77: pop
      78: goto          39
      81: new           #23                 // class java/util/EnumMap
      84: dup
      85: aload_0
      86: invokespecial #24                 // Method java/util/EnumMap."<init>":(Ljava/util/Map;)V
      89: invokestatic  #25                 // Method com/google/common/collect/ImmutableEnumMap.asImmutable:(Ljava/util/EnumMap;)Lcom/google/common/collect/ImmutableMap;
      92: areturn

  public static <T, K extends java.lang.Enum<K>, V> java.util.stream.Collector<T, ?, com.google.common.collect.ImmutableMap<K, V>> toImmutableEnumMap(java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends V>);
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: invokedynamic #26,  0             // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
      15: aload_0
      16: aload_1
      17: invokedynamic #27,  0             // InvokeDynamic #1:accept:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/function/BiConsumer;
      22: invokedynamic #28,  0             // InvokeDynamic #2:apply:()Ljava/util/function/BinaryOperator;
      27: invokedynamic #29,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      32: iconst_1
      33: anewarray     #30                 // class java/util/stream/Collector$Characteristics
      36: dup
      37: iconst_0
      38: getstatic     #31                 // Field java/util/stream/Collector$Characteristics.UNORDERED:Ljava/util/stream/Collector$Characteristics;
      41: aastore
      42: invokestatic  #32                 // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      45: areturn

  public static <T, K extends java.lang.Enum<K>, V> java.util.stream.Collector<T, ?, com.google.common.collect.ImmutableMap<K, V>> toImmutableEnumMap(java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends V>, java.util.function.BinaryOperator<V>);
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_2
      11: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_2
      16: invokedynamic #33,  0             // InvokeDynamic #4:get:(Ljava/util/function/BinaryOperator;)Ljava/util/function/Supplier;
      21: aload_0
      22: aload_1
      23: invokedynamic #34,  0             // InvokeDynamic #5:accept:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/function/BiConsumer;
      28: invokedynamic #28,  0             // InvokeDynamic #2:apply:()Ljava/util/function/BinaryOperator;
      33: invokedynamic #29,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      38: iconst_0
      39: anewarray     #30                 // class java/util/stream/Collector$Characteristics
      42: invokestatic  #32                 // InterfaceMethod java/util/stream/Collector.of:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BinaryOperator;Ljava/util/function/Function;[Ljava/util/stream/Collector$Characteristics;)Ljava/util/stream/Collector;
      45: areturn

  public static <K, V> java.util.HashMap<K, V> newHashMap();
    Code:
       0: new           #35                 // class java/util/HashMap
       3: dup
       4: invokespecial #36                 // Method java/util/HashMap."<init>":()V
       7: areturn

  public static <K, V> java.util.HashMap<K, V> newHashMapWithExpectedSize(int);
    Code:
       0: new           #35                 // class java/util/HashMap
       3: dup
       4: iload_0
       5: invokestatic  #37                 // Method capacity:(I)I
       8: invokespecial #38                 // Method java/util/HashMap."<init>":(I)V
      11: areturn

  static int capacity(int);
    Code:
       0: iload_0
       1: iconst_3
       2: if_icmpge     16
       5: iload_0
       6: ldc           #39                 // String expectedSize
       8: invokestatic  #40                 // Method com/google/common/collect/CollectPreconditions.checkNonnegative:(ILjava/lang/String;)I
      11: pop
      12: iload_0
      13: iconst_1
      14: iadd
      15: ireturn
      16: iload_0
      17: ldc           #42                 // int 1073741824
      19: if_icmpge     31
      22: iload_0
      23: i2f
      24: ldc           #43                 // float 0.75f
      26: fdiv
      27: fconst_1
      28: fadd
      29: f2i
      30: ireturn
      31: ldc           #45                 // int 2147483647
      33: ireturn

  public static <K, V> java.util.HashMap<K, V> newHashMap(java.util.Map<? extends K, ? extends V>);
    Code:
       0: new           #35                 // class java/util/HashMap
       3: dup
       4: aload_0
       5: invokespecial #46                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
       8: areturn

  public static <K, V> java.util.LinkedHashMap<K, V> newLinkedHashMap();
    Code:
       0: new           #47                 // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #48                 // Method java/util/LinkedHashMap."<init>":()V
       7: areturn

  public static <K, V> java.util.LinkedHashMap<K, V> newLinkedHashMapWithExpectedSize(int);
    Code:
       0: new           #47                 // class java/util/LinkedHashMap
       3: dup
       4: iload_0
       5: invokestatic  #37                 // Method capacity:(I)I
       8: invokespecial #49                 // Method java/util/LinkedHashMap."<init>":(I)V
      11: areturn

  public static <K, V> java.util.LinkedHashMap<K, V> newLinkedHashMap(java.util.Map<? extends K, ? extends V>);
    Code:
       0: new           #47                 // class java/util/LinkedHashMap
       3: dup
       4: aload_0
       5: invokespecial #50                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
       8: areturn

  public static <K, V> java.util.concurrent.ConcurrentMap<K, V> newConcurrentMap();
    Code:
       0: new           #51                 // class com/google/common/collect/MapMaker
       3: dup
       4: invokespecial #52                 // Method com/google/common/collect/MapMaker."<init>":()V
       7: invokevirtual #53                 // Method com/google/common/collect/MapMaker.makeMap:()Ljava/util/concurrent/ConcurrentMap;
      10: areturn

  public static <K extends java.lang.Comparable, V> java.util.TreeMap<K, V> newTreeMap();
    Code:
       0: new           #54                 // class java/util/TreeMap
       3: dup
       4: invokespecial #55                 // Method java/util/TreeMap."<init>":()V
       7: areturn

  public static <K, V> java.util.TreeMap<K, V> newTreeMap(java.util.SortedMap<K, ? extends V>);
    Code:
       0: new           #54                 // class java/util/TreeMap
       3: dup
       4: aload_0
       5: invokespecial #56                 // Method java/util/TreeMap."<init>":(Ljava/util/SortedMap;)V
       8: areturn

  public static <C, K extends C, V> java.util.TreeMap<K, V> newTreeMap(java.util.Comparator<C>);
    Code:
       0: new           #54                 // class java/util/TreeMap
       3: dup
       4: aload_0
       5: invokespecial #57                 // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
       8: areturn

  public static <K extends java.lang.Enum<K>, V> java.util.EnumMap<K, V> newEnumMap(java.lang.Class<K>);
    Code:
       0: new           #23                 // class java/util/EnumMap
       3: dup
       4: aload_0
       5: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #58                 // class java/lang/Class
      11: invokespecial #59                 // Method java/util/EnumMap."<init>":(Ljava/lang/Class;)V
      14: areturn

  public static <K extends java.lang.Enum<K>, V> java.util.EnumMap<K, V> newEnumMap(java.util.Map<K, ? extends V>);
    Code:
       0: new           #23                 // class java/util/EnumMap
       3: dup
       4: aload_0
       5: invokespecial #24                 // Method java/util/EnumMap."<init>":(Ljava/util/Map;)V
       8: areturn

  public static <K, V> java.util.IdentityHashMap<K, V> newIdentityHashMap();
    Code:
       0: new           #60                 // class java/util/IdentityHashMap
       3: dup
       4: invokespecial #61                 // Method java/util/IdentityHashMap."<init>":()V
       7: areturn

  public static <K, V> com.google.common.collect.MapDifference<K, V> difference(java.util.Map<? extends K, ? extends V>, java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: instanceof    #62                 // class java/util/SortedMap
       4: ifeq          20
       7: aload_0
       8: checkcast     #62                 // class java/util/SortedMap
      11: astore_2
      12: aload_2
      13: aload_1
      14: invokestatic  #63                 // Method difference:(Ljava/util/SortedMap;Ljava/util/Map;)Lcom/google/common/collect/SortedMapDifference;
      17: astore_3
      18: aload_3
      19: areturn
      20: aload_0
      21: aload_1
      22: invokestatic  #64                 // Method com/google/common/base/Equivalence.equals:()Lcom/google/common/base/Equivalence;
      25: invokestatic  #65                 // Method difference:(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;)Lcom/google/common/collect/MapDifference;
      28: areturn

  public static <K, V> com.google.common.collect.MapDifference<K, V> difference(java.util.Map<? extends K, ? extends V>, java.util.Map<? extends K, ? extends V>, com.google.common.base.Equivalence<? super V>);
    Code:
       0: aload_2
       1: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: invokestatic  #66                 // Method newLinkedHashMap:()Ljava/util/LinkedHashMap;
       8: astore_3
       9: new           #47                 // class java/util/LinkedHashMap
      12: dup
      13: aload_1
      14: invokespecial #50                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      17: astore        4
      19: invokestatic  #66                 // Method newLinkedHashMap:()Ljava/util/LinkedHashMap;
      22: astore        5
      24: invokestatic  #66                 // Method newLinkedHashMap:()Ljava/util/LinkedHashMap;
      27: astore        6
      29: aload_0
      30: aload_1
      31: aload_2
      32: aload_3
      33: aload         4
      35: aload         5
      37: aload         6
      39: invokestatic  #67                 // Method doDifference:(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
      42: new           #68                 // class com/google/common/collect/Maps$MapDifferenceImpl
      45: dup
      46: aload_3
      47: aload         4
      49: aload         5
      51: aload         6
      53: invokespecial #69                 // Method com/google/common/collect/Maps$MapDifferenceImpl."<init>":(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
      56: areturn

  private static <K, V> void doDifference(java.util.Map<? extends K, ? extends V>, java.util.Map<? extends K, ? extends V>, com.google.common.base.Equivalence<? super V>, java.util.Map<K, V>, java.util.Map<K, V>, java.util.Map<K, V>, java.util.Map<K, com.google.common.collect.MapDifference$ValueDifference<V>>);
    Code:
       0: aload_0
       1: invokeinterface #15,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore        7
      13: aload         7
      15: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          135
      23: aload         7
      25: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #19                 // class java/util/Map$Entry
      33: astore        8
      35: aload         8
      37: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      42: astore        9
      44: aload         8
      46: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      51: astore        10
      53: aload_1
      54: aload         9
      56: invokeinterface #70,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      61: ifeq          121
      64: aload         4
      66: aload         9
      68: invokeinterface #71,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      73: astore        11
      75: aload_2
      76: aload         10
      78: aload         11
      80: invokevirtual #72                 // Method com/google/common/base/Equivalence.equivalent:(Ljava/lang/Object;Ljava/lang/Object;)Z
      83: ifeq          101
      86: aload         5
      88: aload         9
      90: aload         10
      92: invokeinterface #73,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      97: pop
      98: goto          118
     101: aload         6
     103: aload         9
     105: aload         10
     107: aload         11
     109: invokestatic  #74                 // Method com/google/common/collect/Maps$ValueDifferenceImpl.create:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/MapDifference$ValueDifference;
     112: invokeinterface #73,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     117: pop
     118: goto          132
     121: aload_3
     122: aload         9
     124: aload         10
     126: invokeinterface #73,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     131: pop
     132: goto          13
     135: return

  private static <K, V> java.util.Map<K, V> unmodifiableMap(java.util.Map<K, ? extends V>);
    Code:
       0: aload_0
       1: instanceof    #62                 // class java/util/SortedMap
       4: ifeq          15
       7: aload_0
       8: checkcast     #62                 // class java/util/SortedMap
      11: invokestatic  #75                 // Method java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;
      14: areturn
      15: aload_0
      16: invokestatic  #76                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      19: areturn

  public static <K, V> com.google.common.collect.SortedMapDifference<K, V> difference(java.util.SortedMap<K, ? extends V>, java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: invokeinterface #77,  1           // InterfaceMethod java/util/SortedMap.comparator:()Ljava/util/Comparator;
      16: invokestatic  #78                 // Method orNaturalOrder:(Ljava/util/Comparator;)Ljava/util/Comparator;
      19: astore_2
      20: aload_2
      21: invokestatic  #79                 // Method newTreeMap:(Ljava/util/Comparator;)Ljava/util/TreeMap;
      24: astore_3
      25: aload_2
      26: invokestatic  #79                 // Method newTreeMap:(Ljava/util/Comparator;)Ljava/util/TreeMap;
      29: astore        4
      31: aload         4
      33: aload_1
      34: invokeinterface #80,  2           // InterfaceMethod java/util/SortedMap.putAll:(Ljava/util/Map;)V
      39: aload_2
      40: invokestatic  #79                 // Method newTreeMap:(Ljava/util/Comparator;)Ljava/util/TreeMap;
      43: astore        5
      45: aload_2
      46: invokestatic  #79                 // Method newTreeMap:(Ljava/util/Comparator;)Ljava/util/TreeMap;
      49: astore        6
      51: aload_0
      52: aload_1
      53: invokestatic  #64                 // Method com/google/common/base/Equivalence.equals:()Lcom/google/common/base/Equivalence;
      56: aload_3
      57: aload         4
      59: aload         5
      61: aload         6
      63: invokestatic  #67                 // Method doDifference:(Ljava/util/Map;Ljava/util/Map;Lcom/google/common/base/Equivalence;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V
      66: new           #81                 // class com/google/common/collect/Maps$SortedMapDifferenceImpl
      69: dup
      70: aload_3
      71: aload         4
      73: aload         5
      75: aload         6
      77: invokespecial #82                 // Method com/google/common/collect/Maps$SortedMapDifferenceImpl."<init>":(Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;Ljava/util/SortedMap;)V
      80: areturn

  static <E> java.util.Comparator<? super E> orNaturalOrder(java.util.Comparator<? super E>);
    Code:
       0: aload_0
       1: ifnull        6
       4: aload_0
       5: areturn
       6: invokestatic  #83                 // Method com/google/common/collect/Ordering.natural:()Lcom/google/common/collect/Ordering;
       9: areturn

  public static <K, V> java.util.Map<K, V> asMap(java.util.Set<K>, com.google.common.base.Function<? super K, V>);
    Code:
       0: new           #84                 // class com/google/common/collect/Maps$AsMapView
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #85                 // Method com/google/common/collect/Maps$AsMapView."<init>":(Ljava/util/Set;Lcom/google/common/base/Function;)V
       9: areturn

  public static <K, V> java.util.SortedMap<K, V> asMap(java.util.SortedSet<K>, com.google.common.base.Function<? super K, V>);
    Code:
       0: new           #86                 // class com/google/common/collect/Maps$SortedAsMapView
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #87                 // Method com/google/common/collect/Maps$SortedAsMapView."<init>":(Ljava/util/SortedSet;Lcom/google/common/base/Function;)V
       9: areturn

  public static <K, V> java.util.NavigableMap<K, V> asMap(java.util.NavigableSet<K>, com.google.common.base.Function<? super K, V>);
    Code:
       0: new           #88                 // class com/google/common/collect/Maps$NavigableAsMapView
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #89                 // Method com/google/common/collect/Maps$NavigableAsMapView."<init>":(Ljava/util/NavigableSet;Lcom/google/common/base/Function;)V
       9: areturn

  static <K, V> java.util.Iterator<java.util.Map$Entry<K, V>> asMapEntryIterator(java.util.Set<K>, com.google.common.base.Function<? super K, V>);
    Code:
       0: new           #90                 // class com/google/common/collect/Maps$1
       3: dup
       4: aload_0
       5: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      10: aload_1
      11: invokespecial #91                 // Method com/google/common/collect/Maps$1."<init>":(Ljava/util/Iterator;Lcom/google/common/base/Function;)V
      14: areturn

  private static <E> java.util.Set<E> removeOnlySet(java.util.Set<E>);
    Code:
       0: new           #92                 // class com/google/common/collect/Maps$2
       3: dup
       4: aload_0
       5: invokespecial #93                 // Method com/google/common/collect/Maps$2."<init>":(Ljava/util/Set;)V
       8: areturn

  private static <E> java.util.SortedSet<E> removeOnlySortedSet(java.util.SortedSet<E>);
    Code:
       0: new           #94                 // class com/google/common/collect/Maps$3
       3: dup
       4: aload_0
       5: invokespecial #95                 // Method com/google/common/collect/Maps$3."<init>":(Ljava/util/SortedSet;)V
       8: areturn

  private static <E> java.util.NavigableSet<E> removeOnlyNavigableSet(java.util.NavigableSet<E>);
    Code:
       0: new           #96                 // class com/google/common/collect/Maps$4
       3: dup
       4: aload_0
       5: invokespecial #97                 // Method com/google/common/collect/Maps$4."<init>":(Ljava/util/NavigableSet;)V
       8: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> toMap(java.lang.Iterable<K>, com.google.common.base.Function<? super K, V>);
    Code:
       0: aload_0
       1: invokeinterface #98,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: aload_1
       7: invokestatic  #99                 // Method toMap:(Ljava/util/Iterator;Lcom/google/common/base/Function;)Lcom/google/common/collect/ImmutableMap;
      10: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> toMap(java.util.Iterator<K>, com.google.common.base.Function<? super K, V>);
    Code:
       0: aload_1
       1: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: invokestatic  #66                 // Method newLinkedHashMap:()Ljava/util/LinkedHashMap;
       8: astore_2
       9: aload_0
      10: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          43
      18: aload_0
      19: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: astore_3
      25: aload_2
      26: aload_3
      27: aload_1
      28: aload_3
      29: invokeinterface #100,  2          // InterfaceMethod com/google/common/base/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      34: invokeinterface #73,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: goto          9
      43: aload_2
      44: invokestatic  #101                // Method com/google/common/collect/ImmutableMap.copyOf:(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;
      47: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> uniqueIndex(java.lang.Iterable<V>, com.google.common.base.Function<? super V, K>);
    Code:
       0: aload_0
       1: invokeinterface #98,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: aload_1
       7: invokestatic  #102                // Method uniqueIndex:(Ljava/util/Iterator;Lcom/google/common/base/Function;)Lcom/google/common/collect/ImmutableMap;
      10: areturn

  public static <K, V> com.google.common.collect.ImmutableMap<K, V> uniqueIndex(java.util.Iterator<V>, com.google.common.base.Function<? super V, K>);
    Code:
       0: aload_1
       1: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: invokestatic  #103                // Method com/google/common/collect/ImmutableMap.builder:()Lcom/google/common/collect/ImmutableMap$Builder;
       8: astore_2
       9: aload_0
      10: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          41
      18: aload_0
      19: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: astore_3
      25: aload_2
      26: aload_1
      27: aload_3
      28: invokeinterface #100,  2          // InterfaceMethod com/google/common/base/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      33: aload_3
      34: invokevirtual #104                // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
      37: pop
      38: goto          9
      41: aload_2
      42: invokevirtual #105                // Method com/google/common/collect/ImmutableMap$Builder.build:()Lcom/google/common/collect/ImmutableMap;
      45: areturn
      46: astore_3
      47: new           #106                // class java/lang/IllegalArgumentException
      50: dup
      51: new           #107                // class java/lang/StringBuilder
      54: dup
      55: invokespecial #108                // Method java/lang/StringBuilder."<init>":()V
      58: aload_3
      59: invokevirtual #109                // Method java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;
      62: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: ldc           #111                // String . To index multiple values under a key, use Multimaps.index.
      67: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #112                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokespecial #113                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      76: athrow
    Exception table:
       from    to  target type
          41    45    46   Class java/lang/IllegalArgumentException

  public static com.google.common.collect.ImmutableMap<java.lang.String, java.lang.String> fromProperties(java.util.Properties);
    Code:
       0: invokestatic  #103                // Method com/google/common/collect/ImmutableMap.builder:()Lcom/google/common/collect/ImmutableMap$Builder;
       3: astore_1
       4: aload_0
       5: invokevirtual #114                // Method java/util/Properties.propertyNames:()Ljava/util/Enumeration;
       8: astore_2
       9: aload_2
      10: invokeinterface #115,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      15: ifeq          42
      18: aload_2
      19: invokeinterface #116,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      24: checkcast     #117                // class java/lang/String
      27: astore_3
      28: aload_1
      29: aload_3
      30: aload_0
      31: aload_3
      32: invokevirtual #118                // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      35: invokevirtual #104                // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
      38: pop
      39: goto          9
      42: aload_1
      43: invokevirtual #105                // Method com/google/common/collect/ImmutableMap$Builder.build:()Lcom/google/common/collect/ImmutableMap;
      46: areturn

  public static <K, V> java.util.Map$Entry<K, V> immutableEntry(K, V);
    Code:
       0: new           #119                // class com/google/common/collect/ImmutableEntry
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #120                // Method com/google/common/collect/ImmutableEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: areturn

  static <K, V> java.util.Set<java.util.Map$Entry<K, V>> unmodifiableEntrySet(java.util.Set<java.util.Map$Entry<K, V>>);
    Code:
       0: new           #121                // class com/google/common/collect/Maps$UnmodifiableEntrySet
       3: dup
       4: aload_0
       5: invokestatic  #122                // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       8: invokespecial #123                // Method com/google/common/collect/Maps$UnmodifiableEntrySet."<init>":(Ljava/util/Set;)V
      11: areturn

  static <K, V> java.util.Map$Entry<K, V> unmodifiableEntry(java.util.Map$Entry<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #124                // class com/google/common/collect/Maps$5
       8: dup
       9: aload_0
      10: invokespecial #125                // Method com/google/common/collect/Maps$5."<init>":(Ljava/util/Map$Entry;)V
      13: areturn

  static <K, V> com.google.common.collect.UnmodifiableIterator<java.util.Map$Entry<K, V>> unmodifiableEntryIterator(java.util.Iterator<java.util.Map$Entry<K, V>>);
    Code:
       0: new           #126                // class com/google/common/collect/Maps$6
       3: dup
       4: aload_0
       5: invokespecial #127                // Method com/google/common/collect/Maps$6."<init>":(Ljava/util/Iterator;)V
       8: areturn

  public static <A, B> com.google.common.base.Converter<A, B> asConverter(com.google.common.collect.BiMap<A, B>);
    Code:
       0: new           #128                // class com/google/common/collect/Maps$BiMapConverter
       3: dup
       4: aload_0
       5: invokespecial #129                // Method com/google/common/collect/Maps$BiMapConverter."<init>":(Lcom/google/common/collect/BiMap;)V
       8: areturn

  public static <K, V> com.google.common.collect.BiMap<K, V> synchronizedBiMap(com.google.common.collect.BiMap<K, V>);
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #130                // Method com/google/common/collect/Synchronized.biMap:(Lcom/google/common/collect/BiMap;Ljava/lang/Object;)Lcom/google/common/collect/BiMap;
       5: areturn

  public static <K, V> com.google.common.collect.BiMap<K, V> unmodifiableBiMap(com.google.common.collect.BiMap<? extends K, ? extends V>);
    Code:
       0: new           #131                // class com/google/common/collect/Maps$UnmodifiableBiMap
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #132                // Method com/google/common/collect/Maps$UnmodifiableBiMap."<init>":(Lcom/google/common/collect/BiMap;Lcom/google/common/collect/BiMap;)V
       9: areturn

  public static <K, V1, V2> java.util.Map<K, V2> transformValues(java.util.Map<K, V1>, com.google.common.base.Function<? super V1, V2>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #133                // Method asEntryTransformer:(Lcom/google/common/base/Function;)Lcom/google/common/collect/Maps$EntryTransformer;
       5: invokestatic  #134                // Method transformEntries:(Ljava/util/Map;Lcom/google/common/collect/Maps$EntryTransformer;)Ljava/util/Map;
       8: areturn

  public static <K, V1, V2> java.util.SortedMap<K, V2> transformValues(java.util.SortedMap<K, V1>, com.google.common.base.Function<? super V1, V2>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #133                // Method asEntryTransformer:(Lcom/google/common/base/Function;)Lcom/google/common/collect/Maps$EntryTransformer;
       5: invokestatic  #135                // Method transformEntries:(Ljava/util/SortedMap;Lcom/google/common/collect/Maps$EntryTransformer;)Ljava/util/SortedMap;
       8: areturn

  public static <K, V1, V2> java.util.NavigableMap<K, V2> transformValues(java.util.NavigableMap<K, V1>, com.google.common.base.Function<? super V1, V2>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #133                // Method asEntryTransformer:(Lcom/google/common/base/Function;)Lcom/google/common/collect/Maps$EntryTransformer;
       5: invokestatic  #136                // Method transformEntries:(Ljava/util/NavigableMap;Lcom/google/common/collect/Maps$EntryTransformer;)Ljava/util/NavigableMap;
       8: areturn

  public static <K, V1, V2> java.util.Map<K, V2> transformEntries(java.util.Map<K, V1>, com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>);
    Code:
       0: new           #137                // class com/google/common/collect/Maps$TransformedEntriesMap
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #138                // Method com/google/common/collect/Maps$TransformedEntriesMap."<init>":(Ljava/util/Map;Lcom/google/common/collect/Maps$EntryTransformer;)V
       9: areturn

  public static <K, V1, V2> java.util.SortedMap<K, V2> transformEntries(java.util.SortedMap<K, V1>, com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>);
    Code:
       0: new           #139                // class com/google/common/collect/Maps$TransformedEntriesSortedMap
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #140                // Method com/google/common/collect/Maps$TransformedEntriesSortedMap."<init>":(Ljava/util/SortedMap;Lcom/google/common/collect/Maps$EntryTransformer;)V
       9: areturn

  public static <K, V1, V2> java.util.NavigableMap<K, V2> transformEntries(java.util.NavigableMap<K, V1>, com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>);
    Code:
       0: new           #141                // class com/google/common/collect/Maps$TransformedEntriesNavigableMap
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #142                // Method com/google/common/collect/Maps$TransformedEntriesNavigableMap."<init>":(Ljava/util/NavigableMap;Lcom/google/common/collect/Maps$EntryTransformer;)V
       9: areturn

  static <K, V1, V2> com.google.common.collect.Maps$EntryTransformer<K, V1, V2> asEntryTransformer(com.google.common.base.Function<? super V1, V2>);
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #143                // class com/google/common/collect/Maps$7
       8: dup
       9: aload_0
      10: invokespecial #144                // Method com/google/common/collect/Maps$7."<init>":(Lcom/google/common/base/Function;)V
      13: areturn

  static <K, V1, V2> com.google.common.base.Function<V1, V2> asValueToValueFunction(com.google.common.collect.Maps$EntryTransformer<? super K, V1, V2>, K);
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #145                // class com/google/common/collect/Maps$8
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #146                // Method com/google/common/collect/Maps$8."<init>":(Lcom/google/common/collect/Maps$EntryTransformer;Ljava/lang/Object;)V
      14: areturn

  static <K, V1, V2> com.google.common.base.Function<java.util.Map$Entry<K, V1>, V2> asEntryToValueFunction(com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>);
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #147                // class com/google/common/collect/Maps$9
       8: dup
       9: aload_0
      10: invokespecial #148                // Method com/google/common/collect/Maps$9."<init>":(Lcom/google/common/collect/Maps$EntryTransformer;)V
      13: areturn

  static <V2, K, V1> java.util.Map$Entry<K, V2> transformEntry(com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>, java.util.Map$Entry<K, V1>);
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: new           #149                // class com/google/common/collect/Maps$10
      13: dup
      14: aload_1
      15: aload_0
      16: invokespecial #150                // Method com/google/common/collect/Maps$10."<init>":(Ljava/util/Map$Entry;Lcom/google/common/collect/Maps$EntryTransformer;)V
      19: areturn

  static <K, V1, V2> com.google.common.base.Function<java.util.Map$Entry<K, V1>, java.util.Map$Entry<K, V2>> asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer<? super K, ? super V1, V2>);
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #151                // class com/google/common/collect/Maps$11
       8: dup
       9: aload_0
      10: invokespecial #152                // Method com/google/common/collect/Maps$11."<init>":(Lcom/google/common/collect/Maps$EntryTransformer;)V
      13: areturn

  static <K> com.google.common.base.Predicate<java.util.Map$Entry<K, ?>> keyPredicateOnEntries(com.google.common.base.Predicate<? super K>);
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method keyFunction:()Lcom/google/common/base/Function;
       4: invokestatic  #153                // Method com/google/common/base/Predicates.compose:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Function;)Lcom/google/common/base/Predicate;
       7: areturn

  static <V> com.google.common.base.Predicate<java.util.Map$Entry<?, V>> valuePredicateOnEntries(com.google.common.base.Predicate<? super V>);
    Code:
       0: aload_0
       1: invokestatic  #11                 // Method valueFunction:()Lcom/google/common/base/Function;
       4: invokestatic  #153                // Method com/google/common/base/Predicates.compose:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Function;)Lcom/google/common/base/Predicate;
       7: areturn

  public static <K, V> java.util.Map<K, V> filterKeys(java.util.Map<K, V>, com.google.common.base.Predicate<? super K>);
    Code:
       0: aload_1
       1: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #154                // Method keyPredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       9: astore_2
      10: aload_0
      11: instanceof    #155                // class com/google/common/collect/Maps$AbstractFilteredMap
      14: ifeq          28
      17: aload_0
      18: checkcast     #155                // class com/google/common/collect/Maps$AbstractFilteredMap
      21: aload_2
      22: invokestatic  #156                // Method filterFiltered:(Lcom/google/common/collect/Maps$AbstractFilteredMap;Lcom/google/common/base/Predicate;)Ljava/util/Map;
      25: goto          44
      28: new           #157                // class com/google/common/collect/Maps$FilteredKeyMap
      31: dup
      32: aload_0
      33: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #158                // class java/util/Map
      39: aload_1
      40: aload_2
      41: invokespecial #159                // Method com/google/common/collect/Maps$FilteredKeyMap."<init>":(Ljava/util/Map;Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)V
      44: areturn

  public static <K, V> java.util.SortedMap<K, V> filterKeys(java.util.SortedMap<K, V>, com.google.common.base.Predicate<? super K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #154                // Method keyPredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       5: invokestatic  #160                // Method filterEntries:(Ljava/util/SortedMap;Lcom/google/common/base/Predicate;)Ljava/util/SortedMap;
       8: areturn

  public static <K, V> java.util.NavigableMap<K, V> filterKeys(java.util.NavigableMap<K, V>, com.google.common.base.Predicate<? super K>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #154                // Method keyPredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       5: invokestatic  #161                // Method filterEntries:(Ljava/util/NavigableMap;Lcom/google/common/base/Predicate;)Ljava/util/NavigableMap;
       8: areturn

  public static <K, V> com.google.common.collect.BiMap<K, V> filterKeys(com.google.common.collect.BiMap<K, V>, com.google.common.base.Predicate<? super K>);
    Code:
       0: aload_1
       1: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokestatic  #154                // Method keyPredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
      10: invokestatic  #162                // Method filterEntries:(Lcom/google/common/collect/BiMap;Lcom/google/common/base/Predicate;)Lcom/google/common/collect/BiMap;
      13: areturn

  public static <K, V> java.util.Map<K, V> filterValues(java.util.Map<K, V>, com.google.common.base.Predicate<? super V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #163                // Method valuePredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       5: invokestatic  #164                // Method filterEntries:(Ljava/util/Map;Lcom/google/common/base/Predicate;)Ljava/util/Map;
       8: areturn

  public static <K, V> java.util.SortedMap<K, V> filterValues(java.util.SortedMap<K, V>, com.google.common.base.Predicate<? super V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #163                // Method valuePredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       5: invokestatic  #160                // Method filterEntries:(Ljava/util/SortedMap;Lcom/google/common/base/Predicate;)Ljava/util/SortedMap;
       8: areturn

  public static <K, V> java.util.NavigableMap<K, V> filterValues(java.util.NavigableMap<K, V>, com.google.common.base.Predicate<? super V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #163                // Method valuePredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       5: invokestatic  #161                // Method filterEntries:(Ljava/util/NavigableMap;Lcom/google/common/base/Predicate;)Ljava/util/NavigableMap;
       8: areturn

  public static <K, V> com.google.common.collect.BiMap<K, V> filterValues(com.google.common.collect.BiMap<K, V>, com.google.common.base.Predicate<? super V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #163                // Method valuePredicateOnEntries:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       5: invokestatic  #162                // Method filterEntries:(Lcom/google/common/collect/BiMap;Lcom/google/common/base/Predicate;)Lcom/google/common/collect/BiMap;
       8: areturn

  public static <K, V> java.util.Map<K, V> filterEntries(java.util.Map<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_1
       1: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: instanceof    #155                // class com/google/common/collect/Maps$AbstractFilteredMap
       9: ifeq          23
      12: aload_0
      13: checkcast     #155                // class com/google/common/collect/Maps$AbstractFilteredMap
      16: aload_1
      17: invokestatic  #156                // Method filterFiltered:(Lcom/google/common/collect/Maps$AbstractFilteredMap;Lcom/google/common/base/Predicate;)Ljava/util/Map;
      20: goto          38
      23: new           #165                // class com/google/common/collect/Maps$FilteredEntryMap
      26: dup
      27: aload_0
      28: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #158                // class java/util/Map
      34: aload_1
      35: invokespecial #166                // Method com/google/common/collect/Maps$FilteredEntryMap."<init>":(Ljava/util/Map;Lcom/google/common/base/Predicate;)V
      38: areturn

  public static <K, V> java.util.SortedMap<K, V> filterEntries(java.util.SortedMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_1
       1: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: instanceof    #167                // class com/google/common/collect/Maps$FilteredEntrySortedMap
       9: ifeq          23
      12: aload_0
      13: checkcast     #167                // class com/google/common/collect/Maps$FilteredEntrySortedMap
      16: aload_1
      17: invokestatic  #168                // Method filterFiltered:(Lcom/google/common/collect/Maps$FilteredEntrySortedMap;Lcom/google/common/base/Predicate;)Ljava/util/SortedMap;
      20: goto          38
      23: new           #167                // class com/google/common/collect/Maps$FilteredEntrySortedMap
      26: dup
      27: aload_0
      28: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #62                 // class java/util/SortedMap
      34: aload_1
      35: invokespecial #169                // Method com/google/common/collect/Maps$FilteredEntrySortedMap."<init>":(Ljava/util/SortedMap;Lcom/google/common/base/Predicate;)V
      38: areturn

  public static <K, V> java.util.NavigableMap<K, V> filterEntries(java.util.NavigableMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_1
       1: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: instanceof    #170                // class com/google/common/collect/Maps$FilteredEntryNavigableMap
       9: ifeq          23
      12: aload_0
      13: checkcast     #170                // class com/google/common/collect/Maps$FilteredEntryNavigableMap
      16: aload_1
      17: invokestatic  #171                // Method filterFiltered:(Lcom/google/common/collect/Maps$FilteredEntryNavigableMap;Lcom/google/common/base/Predicate;)Ljava/util/NavigableMap;
      20: goto          38
      23: new           #170                // class com/google/common/collect/Maps$FilteredEntryNavigableMap
      26: dup
      27: aload_0
      28: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #172                // class java/util/NavigableMap
      34: aload_1
      35: invokespecial #173                // Method com/google/common/collect/Maps$FilteredEntryNavigableMap."<init>":(Ljava/util/NavigableMap;Lcom/google/common/base/Predicate;)V
      38: areturn

  public static <K, V> com.google.common.collect.BiMap<K, V> filterEntries(com.google.common.collect.BiMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: instanceof    #174                // class com/google/common/collect/Maps$FilteredEntryBiMap
      14: ifeq          28
      17: aload_0
      18: checkcast     #174                // class com/google/common/collect/Maps$FilteredEntryBiMap
      21: aload_1
      22: invokestatic  #175                // Method filterFiltered:(Lcom/google/common/collect/Maps$FilteredEntryBiMap;Lcom/google/common/base/Predicate;)Lcom/google/common/collect/BiMap;
      25: goto          37
      28: new           #174                // class com/google/common/collect/Maps$FilteredEntryBiMap
      31: dup
      32: aload_0
      33: aload_1
      34: invokespecial #176                // Method com/google/common/collect/Maps$FilteredEntryBiMap."<init>":(Lcom/google/common/collect/BiMap;Lcom/google/common/base/Predicate;)V
      37: areturn

  private static <K, V> java.util.Map<K, V> filterFiltered(com.google.common.collect.Maps$AbstractFilteredMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: new           #165                // class com/google/common/collect/Maps$FilteredEntryMap
       3: dup
       4: aload_0
       5: getfield      #177                // Field com/google/common/collect/Maps$AbstractFilteredMap.unfiltered:Ljava/util/Map;
       8: aload_0
       9: getfield      #178                // Field com/google/common/collect/Maps$AbstractFilteredMap.predicate:Lcom/google/common/base/Predicate;
      12: aload_1
      13: invokestatic  #179                // Method com/google/common/base/Predicates.and:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
      16: invokespecial #166                // Method com/google/common/collect/Maps$FilteredEntryMap."<init>":(Ljava/util/Map;Lcom/google/common/base/Predicate;)V
      19: areturn

  private static <K, V> java.util.SortedMap<K, V> filterFiltered(com.google.common.collect.Maps$FilteredEntrySortedMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: getfield      #180                // Field com/google/common/collect/Maps$FilteredEntrySortedMap.predicate:Lcom/google/common/base/Predicate;
       4: aload_1
       5: invokestatic  #179                // Method com/google/common/base/Predicates.and:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       8: astore_2
       9: new           #167                // class com/google/common/collect/Maps$FilteredEntrySortedMap
      12: dup
      13: aload_0
      14: invokevirtual #181                // Method com/google/common/collect/Maps$FilteredEntrySortedMap.sortedMap:()Ljava/util/SortedMap;
      17: aload_2
      18: invokespecial #169                // Method com/google/common/collect/Maps$FilteredEntrySortedMap."<init>":(Ljava/util/SortedMap;Lcom/google/common/base/Predicate;)V
      21: areturn

  private static <K, V> java.util.NavigableMap<K, V> filterFiltered(com.google.common.collect.Maps$FilteredEntryNavigableMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: invokestatic  #182                // Method com/google/common/collect/Maps$FilteredEntryNavigableMap.access$600:(Lcom/google/common/collect/Maps$FilteredEntryNavigableMap;)Lcom/google/common/base/Predicate;
       4: aload_1
       5: invokestatic  #179                // Method com/google/common/base/Predicates.and:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       8: astore_2
       9: new           #170                // class com/google/common/collect/Maps$FilteredEntryNavigableMap
      12: dup
      13: aload_0
      14: invokestatic  #183                // Method com/google/common/collect/Maps$FilteredEntryNavigableMap.access$700:(Lcom/google/common/collect/Maps$FilteredEntryNavigableMap;)Ljava/util/NavigableMap;
      17: aload_2
      18: invokespecial #173                // Method com/google/common/collect/Maps$FilteredEntryNavigableMap."<init>":(Ljava/util/NavigableMap;Lcom/google/common/base/Predicate;)V
      21: areturn

  private static <K, V> com.google.common.collect.BiMap<K, V> filterFiltered(com.google.common.collect.Maps$FilteredEntryBiMap<K, V>, com.google.common.base.Predicate<? super java.util.Map$Entry<K, V>>);
    Code:
       0: aload_0
       1: getfield      #184                // Field com/google/common/collect/Maps$FilteredEntryBiMap.predicate:Lcom/google/common/base/Predicate;
       4: aload_1
       5: invokestatic  #179                // Method com/google/common/base/Predicates.and:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       8: astore_2
       9: new           #174                // class com/google/common/collect/Maps$FilteredEntryBiMap
      12: dup
      13: aload_0
      14: invokevirtual #185                // Method com/google/common/collect/Maps$FilteredEntryBiMap.unfiltered:()Lcom/google/common/collect/BiMap;
      17: aload_2
      18: invokespecial #176                // Method com/google/common/collect/Maps$FilteredEntryBiMap."<init>":(Lcom/google/common/collect/BiMap;Lcom/google/common/base/Predicate;)V
      21: areturn

  public static <K, V> java.util.NavigableMap<K, V> unmodifiableNavigableMap(java.util.NavigableMap<K, ? extends V>);
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: instanceof    #186                // class com/google/common/collect/Maps$UnmodifiableNavigableMap
       9: ifeq          16
      12: aload_0
      13: astore_1
      14: aload_1
      15: areturn
      16: new           #186                // class com/google/common/collect/Maps$UnmodifiableNavigableMap
      19: dup
      20: aload_0
      21: invokespecial #187                // Method com/google/common/collect/Maps$UnmodifiableNavigableMap."<init>":(Ljava/util/NavigableMap;)V
      24: areturn

  private static <K, V> java.util.Map$Entry<K, V> unmodifiableOrNull(java.util.Map$Entry<K, ? extends V>);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aconst_null
       5: goto          12
       8: aload_0
       9: invokestatic  #188                // Method unmodifiableEntry:(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;
      12: areturn

  public static <K, V> java.util.NavigableMap<K, V> synchronizedNavigableMap(java.util.NavigableMap<K, V>);
    Code:
       0: aload_0
       1: invokestatic  #189                // Method com/google/common/collect/Synchronized.navigableMap:(Ljava/util/NavigableMap;)Ljava/util/NavigableMap;
       4: areturn

  static <V> V safeGet(java.util.Map<?, V>, java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokeinterface #190,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn
      13: astore_2
      14: aconst_null
      15: areturn
      16: astore_2
      17: aconst_null
      18: areturn
    Exception table:
       from    to  target type
           5    12    13   Class java/lang/ClassCastException
           5    12    16   Class java/lang/NullPointerException

  static boolean safeContainsKey(java.util.Map<?, ?>, java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokeinterface #70,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      12: ireturn
      13: astore_2
      14: iconst_0
      15: ireturn
      16: astore_2
      17: iconst_0
      18: ireturn
    Exception table:
       from    to  target type
           5    12    13   Class java/lang/ClassCastException
           5    12    16   Class java/lang/NullPointerException

  static <V> V safeRemove(java.util.Map<?, V>, java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokeinterface #71,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn
      13: astore_2
      14: aconst_null
      15: areturn
      16: astore_2
      17: aconst_null
      18: areturn
    Exception table:
       from    to  target type
           5    12    13   Class java/lang/ClassCastException
           5    12    16   Class java/lang/NullPointerException

  static boolean containsKeyImpl(java.util.Map<?, ?>, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #15,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: invokestatic  #193                // Method keyIterator:(Ljava/util/Iterator;)Ljava/util/Iterator;
      14: aload_1
      15: invokestatic  #194                // Method com/google/common/collect/Iterators.contains:(Ljava/util/Iterator;Ljava/lang/Object;)Z
      18: ireturn

  static boolean containsValueImpl(java.util.Map<?, ?>, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #15,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: invokestatic  #195                // Method valueIterator:(Ljava/util/Iterator;)Ljava/util/Iterator;
      14: aload_1
      15: invokestatic  #194                // Method com/google/common/collect/Iterators.contains:(Ljava/util/Iterator;Ljava/lang/Object;)Z
      18: ireturn

  static <K, V> boolean containsEntryImpl(java.util.Collection<java.util.Map$Entry<K, V>>, java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #19                 // class java/util/Map$Entry
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aload_1
      11: checkcast     #19                 // class java/util/Map$Entry
      14: invokestatic  #188                // Method unmodifiableEntry:(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;
      17: invokeinterface #196,  2          // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      22: ireturn

  static <K, V> boolean removeEntryImpl(java.util.Collection<java.util.Map$Entry<K, V>>, java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #19                 // class java/util/Map$Entry
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aload_1
      11: checkcast     #19                 // class java/util/Map$Entry
      14: invokestatic  #188                // Method unmodifiableEntry:(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;
      17: invokeinterface #197,  2          // InterfaceMethod java/util/Collection.remove:(Ljava/lang/Object;)Z
      22: ireturn

  static boolean equalsImpl(java.util.Map<?, ?>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #158                // class java/util/Map
      11: ifeq          37
      14: aload_1
      15: checkcast     #158                // class java/util/Map
      18: astore_2
      19: aload_0
      20: invokeinterface #15,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      25: aload_2
      26: invokeinterface #15,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      31: invokeinterface #198,  2          // InterfaceMethod java/util/Set.equals:(Ljava/lang/Object;)Z
      36: ireturn
      37: iconst_0
      38: ireturn

  static java.lang.String toStringImpl(java.util.Map<?, ?>);
    Code:
       0: aload_0
       1: invokeinterface #199,  1          // InterfaceMethod java/util/Map.size:()I
       6: invokestatic  #200                // Method com/google/common/collect/Collections2.newStringBuilderForCollection:(I)Ljava/lang/StringBuilder;
       9: bipush        123
      11: invokevirtual #201                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      14: astore_1
      15: iconst_1
      16: istore_2
      17: aload_0
      18: invokeinterface #15,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      23: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      28: astore_3
      29: aload_3
      30: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          92
      38: aload_3
      39: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #19                 // class java/util/Map$Entry
      47: astore        4
      49: iload_2
      50: ifne          60
      53: aload_1
      54: ldc           #202                // String ,
      56: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: pop
      60: iconst_0
      61: istore_2
      62: aload_1
      63: aload         4
      65: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      70: invokevirtual #203                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      73: bipush        61
      75: invokevirtual #201                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      78: aload         4
      80: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      85: invokevirtual #203                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      88: pop
      89: goto          29
      92: aload_1
      93: bipush        125
      95: invokevirtual #201                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      98: invokevirtual #112                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: areturn

  static <K, V> void putAllImpl(java.util.Map<K, V>, java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          53
      21: aload_2
      22: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #19                 // class java/util/Map$Entry
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      38: aload_3
      39: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      44: invokeinterface #73,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: goto          12
      53: return

  static <K> K keyOrNull(java.util.Map$Entry<K, ?>);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aconst_null
       5: goto          14
       8: aload_0
       9: invokeinterface #20,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      14: areturn

  static <V> V valueOrNull(java.util.Map$Entry<?, V>);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aconst_null
       5: goto          14
       8: aload_0
       9: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      14: areturn

  static <E> com.google.common.collect.ImmutableMap<E, java.lang.Integer> indexMap(java.util.Collection<E>);
    Code:
       0: new           #204                // class com/google/common/collect/ImmutableMap$Builder
       3: dup
       4: aload_0
       5: invokeinterface #205,  1          // InterfaceMethod java/util/Collection.size:()I
      10: invokespecial #206                // Method com/google/common/collect/ImmutableMap$Builder."<init>":(I)V
      13: astore_1
      14: iconst_0
      15: istore_2
      16: aload_0
      17: invokeinterface #207,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          57
      32: aload_3
      33: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: astore        4
      40: aload_1
      41: aload         4
      43: iload_2
      44: iinc          2, 1
      47: invokestatic  #208                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      50: invokevirtual #104                // Method com/google/common/collect/ImmutableMap$Builder.put:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap$Builder;
      53: pop
      54: goto          23
      57: aload_1
      58: invokevirtual #105                // Method com/google/common/collect/ImmutableMap$Builder.build:()Lcom/google/common/collect/ImmutableMap;
      61: areturn

  public static <K extends java.lang.Comparable<? super K>, V> java.util.NavigableMap<K, V> subMap(java.util.NavigableMap<K, V>, com.google.common.collect.Range<K>);
    Code:
       0: aload_0
       1: invokeinterface #209,  1          // InterfaceMethod java/util/NavigableMap.comparator:()Ljava/util/Comparator;
       6: ifnull        67
       9: aload_0
      10: invokeinterface #209,  1          // InterfaceMethod java/util/NavigableMap.comparator:()Ljava/util/Comparator;
      15: invokestatic  #83                 // Method com/google/common/collect/Ordering.natural:()Lcom/google/common/collect/Ordering;
      18: if_acmpeq     67
      21: aload_1
      22: invokevirtual #210                // Method com/google/common/collect/Range.hasLowerBound:()Z
      25: ifeq          67
      28: aload_1
      29: invokevirtual #211                // Method com/google/common/collect/Range.hasUpperBound:()Z
      32: ifeq          67
      35: aload_0
      36: invokeinterface #209,  1          // InterfaceMethod java/util/NavigableMap.comparator:()Ljava/util/Comparator;
      41: aload_1
      42: invokevirtual #212                // Method com/google/common/collect/Range.lowerEndpoint:()Ljava/lang/Comparable;
      45: aload_1
      46: invokevirtual #213                // Method com/google/common/collect/Range.upperEndpoint:()Ljava/lang/Comparable;
      49: invokeinterface #214,  3          // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      54: ifgt          61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: ldc           #215                // String map is using a custom comparator which is inconsistent with the natural ordering.
      64: invokestatic  #216                // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      67: aload_1
      68: invokevirtual #210                // Method com/google/common/collect/Range.hasLowerBound:()Z
      71: ifeq          126
      74: aload_1
      75: invokevirtual #211                // Method com/google/common/collect/Range.hasUpperBound:()Z
      78: ifeq          126
      81: aload_0
      82: aload_1
      83: invokevirtual #212                // Method com/google/common/collect/Range.lowerEndpoint:()Ljava/lang/Comparable;
      86: aload_1
      87: invokevirtual #217                // Method com/google/common/collect/Range.lowerBoundType:()Lcom/google/common/collect/BoundType;
      90: getstatic     #218                // Field com/google/common/collect/BoundType.CLOSED:Lcom/google/common/collect/BoundType;
      93: if_acmpne     100
      96: iconst_1
      97: goto          101
     100: iconst_0
     101: aload_1
     102: invokevirtual #213                // Method com/google/common/collect/Range.upperEndpoint:()Ljava/lang/Comparable;
     105: aload_1
     106: invokevirtual #219                // Method com/google/common/collect/Range.upperBoundType:()Lcom/google/common/collect/BoundType;
     109: getstatic     #218                // Field com/google/common/collect/BoundType.CLOSED:Lcom/google/common/collect/BoundType;
     112: if_acmpne     119
     115: iconst_1
     116: goto          120
     119: iconst_0
     120: invokeinterface #220,  5          // InterfaceMethod java/util/NavigableMap.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;
     125: areturn
     126: aload_1
     127: invokevirtual #210                // Method com/google/common/collect/Range.hasLowerBound:()Z
     130: ifeq          159
     133: aload_0
     134: aload_1
     135: invokevirtual #212                // Method com/google/common/collect/Range.lowerEndpoint:()Ljava/lang/Comparable;
     138: aload_1
     139: invokevirtual #217                // Method com/google/common/collect/Range.lowerBoundType:()Lcom/google/common/collect/BoundType;
     142: getstatic     #218                // Field com/google/common/collect/BoundType.CLOSED:Lcom/google/common/collect/BoundType;
     145: if_acmpne     152
     148: iconst_1
     149: goto          153
     152: iconst_0
     153: invokeinterface #221,  3          // InterfaceMethod java/util/NavigableMap.tailMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
     158: areturn
     159: aload_1
     160: invokevirtual #211                // Method com/google/common/collect/Range.hasUpperBound:()Z
     163: ifeq          192
     166: aload_0
     167: aload_1
     168: invokevirtual #213                // Method com/google/common/collect/Range.upperEndpoint:()Ljava/lang/Comparable;
     171: aload_1
     172: invokevirtual #219                // Method com/google/common/collect/Range.upperBoundType:()Lcom/google/common/collect/BoundType;
     175: getstatic     #218                // Field com/google/common/collect/BoundType.CLOSED:Lcom/google/common/collect/BoundType;
     178: if_acmpne     185
     181: iconst_1
     182: goto          186
     185: iconst_0
     186: invokeinterface #222,  3          // InterfaceMethod java/util/NavigableMap.headMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
     191: areturn
     192: aload_0
     193: invokestatic  #21                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
     196: checkcast     #172                // class java/util/NavigableMap
     199: areturn

  private static void lambda$toImmutableEnumMap$4(java.util.function.Function, java.util.function.Function, com.google.common.collect.Maps$Accumulator, java.lang.Object);
    Code:
       0: aload_0
       1: aload_3
       2: invokeinterface #223,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: ldc           #224                // String Null key for input %s
       9: aload_3
      10: invokestatic  #225                // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #226                // class java/lang/Enum
      16: astore        4
      18: aload_1
      19: aload_3
      20: invokeinterface #223,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      25: ldc           #227                // String Null value for input %s
      27: aload_3
      28: invokestatic  #225                // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      31: astore        5
      33: aload_2
      34: aload         4
      36: aload         5
      38: invokevirtual #228                // Method com/google/common/collect/Maps$Accumulator.put:(Ljava/lang/Enum;Ljava/lang/Object;)V
      41: return

  private static com.google.common.collect.Maps$Accumulator lambda$toImmutableEnumMap$3(java.util.function.BinaryOperator);
    Code:
       0: new           #229                // class com/google/common/collect/Maps$Accumulator
       3: dup
       4: aload_0
       5: invokespecial #230                // Method com/google/common/collect/Maps$Accumulator."<init>":(Ljava/util/function/BinaryOperator;)V
       8: areturn

  private static void lambda$toImmutableEnumMap$2(java.util.function.Function, java.util.function.Function, com.google.common.collect.Maps$Accumulator, java.lang.Object);
    Code:
       0: aload_0
       1: aload_3
       2: invokeinterface #223,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: ldc           #224                // String Null key for input %s
       9: aload_3
      10: invokestatic  #225                // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #226                // class java/lang/Enum
      16: astore        4
      18: aload_1
      19: aload_3
      20: invokeinterface #223,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      25: ldc           #227                // String Null value for input %s
      27: aload_3
      28: invokestatic  #225                // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      31: astore        5
      33: aload_2
      34: aload         4
      36: aload         5
      38: invokevirtual #228                // Method com/google/common/collect/Maps$Accumulator.put:(Ljava/lang/Enum;Ljava/lang/Object;)V
      41: return

  private static com.google.common.collect.Maps$Accumulator lambda$toImmutableEnumMap$1();
    Code:
       0: new           #229                // class com/google/common/collect/Maps$Accumulator
       3: dup
       4: invokedynamic #231,  0            // InvokeDynamic #6:apply:()Ljava/util/function/BinaryOperator;
       9: invokespecial #230                // Method com/google/common/collect/Maps$Accumulator."<init>":(Ljava/util/function/BinaryOperator;)V
      12: areturn

  private static java.lang.Object lambda$null$0(java.lang.Object, java.lang.Object);
    Code:
       0: new           #106                // class java/lang/IllegalArgumentException
       3: dup
       4: new           #107                // class java/lang/StringBuilder
       7: dup
       8: invokespecial #108                // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #232                // String Multiple values for key:
      13: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #203                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: ldc           #202                // String ,
      22: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokevirtual #203                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: invokevirtual #112                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #113                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow

  static java.util.Map access$100(java.util.Map);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       4: areturn

  static java.util.Set access$200(java.util.Set);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method removeOnlySet:(Ljava/util/Set;)Ljava/util/Set;
       4: areturn

  static java.util.SortedSet access$300(java.util.SortedSet);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method removeOnlySortedSet:(Ljava/util/SortedSet;)Ljava/util/SortedSet;
       4: areturn

  static java.util.NavigableSet access$400(java.util.NavigableSet);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method removeOnlyNavigableSet:(Ljava/util/NavigableSet;)Ljava/util/NavigableSet;
       4: areturn

  static java.util.Map$Entry access$800(java.util.Map$Entry);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method unmodifiableOrNull:(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;
       4: areturn
}
