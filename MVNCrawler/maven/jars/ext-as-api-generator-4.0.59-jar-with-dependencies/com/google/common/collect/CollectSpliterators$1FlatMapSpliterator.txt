Compiled from "CollectSpliterators.java"
class com.google.common.collect.CollectSpliterators$1FlatMapSpliterator implements java.util.Spliterator<T> {
  java.util.Spliterator<T> prefix;

  final java.util.Spliterator<F> from;

  int characteristics;

  long estimatedSize;

  final java.util.function.Function val$function;

  com.google.common.collect.CollectSpliterators$1FlatMapSpliterator(java.util.Spliterator<T>, java.util.Spliterator<F>, int, long);
    Code:
       0: aload_0
       1: aload         6
       3: putfield      #1                  // Field val$function:Ljava/util/function/Function;
       6: aload_0
       7: invokespecial #2                  // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #3                  // Field prefix:Ljava/util/Spliterator;
      15: aload_0
      16: aload_2
      17: putfield      #4                  // Field from:Ljava/util/Spliterator;
      20: aload_0
      21: iload_3
      22: putfield      #5                  // Field characteristics:I
      25: aload_0
      26: lload         4
      28: putfield      #6                  // Field estimatedSize:J
      31: return

  public boolean tryAdvance(java.util.function.Consumer<? super T>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field prefix:Ljava/util/Spliterator;
       4: ifnull        43
       7: aload_0
       8: getfield      #3                  // Field prefix:Ljava/util/Spliterator;
      11: aload_1
      12: invokeinterface #7,  2            // InterfaceMethod java/util/Spliterator.tryAdvance:(Ljava/util/function/Consumer;)Z
      17: ifeq          43
      20: aload_0
      21: getfield      #6                  // Field estimatedSize:J
      24: ldc2_w        #9                  // long 9223372036854775807l
      27: lcmp
      28: ifeq          41
      31: aload_0
      32: dup
      33: getfield      #6                  // Field estimatedSize:J
      36: lconst_1
      37: lsub
      38: putfield      #6                  // Field estimatedSize:J
      41: iconst_1
      42: ireturn
      43: aload_0
      44: aconst_null
      45: putfield      #3                  // Field prefix:Ljava/util/Spliterator;
      48: aload_0
      49: getfield      #4                  // Field from:Ljava/util/Spliterator;
      52: aload_0
      53: aload_0
      54: getfield      #1                  // Field val$function:Ljava/util/function/Function;
      57: invokedynamic #11,  0             // InvokeDynamic #0:accept:(Lcom/google/common/collect/CollectSpliterators$1FlatMapSpliterator;Ljava/util/function/Function;)Ljava/util/function/Consumer;
      62: invokeinterface #7,  2            // InterfaceMethod java/util/Spliterator.tryAdvance:(Ljava/util/function/Consumer;)Z
      67: ifne          0
      70: iconst_0
      71: ireturn

  public void forEachRemaining(java.util.function.Consumer<? super T>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field prefix:Ljava/util/Spliterator;
       4: ifnull        22
       7: aload_0
       8: getfield      #3                  // Field prefix:Ljava/util/Spliterator;
      11: aload_1
      12: invokeinterface #12,  2           // InterfaceMethod java/util/Spliterator.forEachRemaining:(Ljava/util/function/Consumer;)V
      17: aload_0
      18: aconst_null
      19: putfield      #3                  // Field prefix:Ljava/util/Spliterator;
      22: aload_0
      23: getfield      #4                  // Field from:Ljava/util/Spliterator;
      26: aload_0
      27: getfield      #1                  // Field val$function:Ljava/util/function/Function;
      30: aload_1
      31: invokedynamic #13,  0             // InvokeDynamic #1:accept:(Ljava/util/function/Function;Ljava/util/function/Consumer;)Ljava/util/function/Consumer;
      36: invokeinterface #12,  2           // InterfaceMethod java/util/Spliterator.forEachRemaining:(Ljava/util/function/Consumer;)V
      41: aload_0
      42: lconst_0
      43: putfield      #6                  // Field estimatedSize:J
      46: return

  public java.util.Spliterator<T> trySplit();
    Code:
       0: aload_0
       1: getfield      #4                  // Field from:Ljava/util/Spliterator;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/Spliterator.trySplit:()Ljava/util/Spliterator;
       9: astore_1
      10: aload_1
      11: ifnull        84
      14: aload_0
      15: getfield      #5                  // Field characteristics:I
      18: bipush        -65
      20: iand
      21: istore_2
      22: aload_0
      23: invokevirtual #16                 // Method estimateSize:()J
      26: lstore_3
      27: lload_3
      28: ldc2_w        #9                  // long 9223372036854775807l
      31: lcmp
      32: ifge          56
      35: lload_3
      36: ldc2_w        #17                 // long 2l
      39: ldiv
      40: lstore_3
      41: aload_0
      42: dup
      43: getfield      #6                  // Field estimatedSize:J
      46: lload_3
      47: lsub
      48: putfield      #6                  // Field estimatedSize:J
      51: aload_0
      52: iload_2
      53: putfield      #5                  // Field characteristics:I
      56: new           #19                 // class com/google/common/collect/CollectSpliterators$1FlatMapSpliterator
      59: dup
      60: aload_0
      61: getfield      #3                  // Field prefix:Ljava/util/Spliterator;
      64: aload_1
      65: iload_2
      66: lload_3
      67: aload_0
      68: getfield      #1                  // Field val$function:Ljava/util/function/Function;
      71: invokespecial #20                 // Method "<init>":(Ljava/util/Spliterator;Ljava/util/Spliterator;IJLjava/util/function/Function;)V
      74: astore        5
      76: aload_0
      77: aconst_null
      78: putfield      #3                  // Field prefix:Ljava/util/Spliterator;
      81: aload         5
      83: areturn
      84: aload_0
      85: getfield      #3                  // Field prefix:Ljava/util/Spliterator;
      88: ifnull        103
      91: aload_0
      92: getfield      #3                  // Field prefix:Ljava/util/Spliterator;
      95: astore_2
      96: aload_0
      97: aconst_null
      98: putfield      #3                  // Field prefix:Ljava/util/Spliterator;
     101: aload_2
     102: areturn
     103: aconst_null
     104: areturn

  public long estimateSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field prefix:Ljava/util/Spliterator;
       4: ifnull        27
       7: aload_0
       8: aload_0
       9: getfield      #6                  // Field estimatedSize:J
      12: aload_0
      13: getfield      #3                  // Field prefix:Ljava/util/Spliterator;
      16: invokeinterface #21,  1           // InterfaceMethod java/util/Spliterator.estimateSize:()J
      21: invokestatic  #22                 // Method java/lang/Math.max:(JJ)J
      24: putfield      #6                  // Field estimatedSize:J
      27: aload_0
      28: getfield      #6                  // Field estimatedSize:J
      31: lconst_0
      32: invokestatic  #22                 // Method java/lang/Math.max:(JJ)J
      35: lreturn

  public int characteristics();
    Code:
       0: aload_0
       1: getfield      #5                  // Field characteristics:I
       4: ireturn

  private static void lambda$forEachRemaining$1(java.util.function.Function, java.util.function.Consumer, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #23,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #15                 // class java/util/Spliterator
      10: aload_1
      11: invokeinterface #12,  2           // InterfaceMethod java/util/Spliterator.forEachRemaining:(Ljava/util/function/Consumer;)V
      16: return

  private void lambda$tryAdvance$0(java.util.function.Function, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #23,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #15                 // class java/util/Spliterator
      11: putfield      #3                  // Field prefix:Ljava/util/Spliterator;
      14: return
}
