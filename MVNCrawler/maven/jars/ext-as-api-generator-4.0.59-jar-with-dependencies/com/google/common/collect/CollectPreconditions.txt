Compiled from "CollectPreconditions.java"
final class com.google.common.collect.CollectPreconditions {
  com.google.common.collect.CollectPreconditions();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static void checkEntryNotNull(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     31
       4: new           #2                  // class java/lang/NullPointerException
       7: dup
       8: new           #3                  // class java/lang/StringBuilder
      11: dup
      12: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #5                  // String null key in entry: null=
      17: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_1
      21: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      24: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #9                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_1
      32: ifnonnull     67
      35: new           #2                  // class java/lang/NullPointerException
      38: dup
      39: new           #3                  // class java/lang/StringBuilder
      42: dup
      43: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #10                 // String null value in entry:
      48: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_0
      52: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #11                 // String =null
      57: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #9                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: return

  static int checkNonnegative(int, java.lang.String);
    Code:
       0: iload_0
       1: ifge          35
       4: new           #12                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #3                  // class java/lang/StringBuilder
      11: dup
      12: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      15: aload_1
      16: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #13                 // String  cannot be negative but was:
      21: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: iload_0
      25: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: iload_0
      36: ireturn

  static long checkNonnegative(long, java.lang.String);
    Code:
       0: lload_0
       1: lconst_0
       2: lcmp
       3: ifge          37
       6: new           #12                 // class java/lang/IllegalArgumentException
       9: dup
      10: new           #3                  // class java/lang/StringBuilder
      13: dup
      14: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      17: aload_2
      18: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #13                 // String  cannot be negative but was:
      23: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: lload_0
      27: invokevirtual #16                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      30: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: lload_0
      38: lreturn

  static void checkPositive(int, java.lang.String);
    Code:
       0: iload_0
       1: ifgt          35
       4: new           #12                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #3                  // class java/lang/StringBuilder
      11: dup
      12: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      15: aload_1
      16: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #17                 // String  must be positive but was:
      21: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: iload_0
      25: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: return

  static void checkRemove(boolean);
    Code:
       0: iload_0
       1: ldc           #18                 // String no calls to next() since the last call to remove()
       3: invokestatic  #19                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
       6: return
}
