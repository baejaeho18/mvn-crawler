Compiled from "BinaryTreeTraverser.java"
public abstract class com.google.common.collect.BinaryTreeTraverser<T> extends com.google.common.collect.TreeTraverser<T> {
  public com.google.common.collect.BinaryTreeTraverser();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method com/google/common/collect/TreeTraverser."<init>":()V
       4: return

  public abstract com.google.common.base.Optional<T> leftChild(T);

  public abstract com.google.common.base.Optional<T> rightChild(T);

  public final java.lang.Iterable<T> children(T);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #5                  // class com/google/common/collect/BinaryTreeTraverser$1
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #6                  // Method com/google/common/collect/BinaryTreeTraverser$1."<init>":(Lcom/google/common/collect/BinaryTreeTraverser;Ljava/lang/Object;)V
      14: areturn

  com.google.common.collect.UnmodifiableIterator<T> preOrderIterator(T);
    Code:
       0: new           #7                  // class com/google/common/collect/BinaryTreeTraverser$PreOrderIterator
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #8                  // Method com/google/common/collect/BinaryTreeTraverser$PreOrderIterator."<init>":(Lcom/google/common/collect/BinaryTreeTraverser;Ljava/lang/Object;)V
       9: areturn

  com.google.common.collect.UnmodifiableIterator<T> postOrderIterator(T);
    Code:
       0: new           #9                  // class com/google/common/collect/BinaryTreeTraverser$PostOrderIterator
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #10                 // Method com/google/common/collect/BinaryTreeTraverser$PostOrderIterator."<init>":(Lcom/google/common/collect/BinaryTreeTraverser;Ljava/lang/Object;)V
       9: areturn

  public final com.google.common.collect.FluentIterable<T> inOrderTraversal(T);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #11                 // class com/google/common/collect/BinaryTreeTraverser$2
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #12                 // Method com/google/common/collect/BinaryTreeTraverser$2."<init>":(Lcom/google/common/collect/BinaryTreeTraverser;Ljava/lang/Object;)V
      14: areturn

  private static <T> void pushIfPresent(java.util.Deque<T>, com.google.common.base.Optional<T>);
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method com/google/common/base/Optional.isPresent:()Z
       4: ifeq          17
       7: aload_0
       8: aload_1
       9: invokevirtual #14                 // Method com/google/common/base/Optional.get:()Ljava/lang/Object;
      12: invokeinterface #15,  2           // InterfaceMethod java/util/Deque.addLast:(Ljava/lang/Object;)V
      17: return

  private static <T> void acceptIfPresent(java.util.function.Consumer<? super T>, com.google.common.base.Optional<T>);
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method com/google/common/base/Optional.isPresent:()Z
       4: ifeq          17
       7: aload_0
       8: aload_1
       9: invokevirtual #14                 // Method com/google/common/base/Optional.get:()Ljava/lang/Object;
      12: invokeinterface #16,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      17: return

  static void access$000(java.util.function.Consumer, com.google.common.base.Optional);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method acceptIfPresent:(Ljava/util/function/Consumer;Lcom/google/common/base/Optional;)V
       5: return

  static void access$100(java.util.Deque, com.google.common.base.Optional);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method pushIfPresent:(Ljava/util/Deque;Lcom/google/common/base/Optional;)V
       5: return
}
