Compiled from "FluentIterable.java"
public abstract class com.google.common.collect.FluentIterable<E> implements java.lang.Iterable<E> {
  private final com.google.common.base.Optional<java.lang.Iterable<E>> iterableDelegate;

  protected com.google.common.collect.FluentIterable();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method com/google/common/base/Optional.absent:()Lcom/google/common/base/Optional;
       8: putfield      #3                  // Field iterableDelegate:Lcom/google/common/base/Optional;
      11: return

  com.google.common.collect.FluentIterable(java.lang.Iterable<E>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: aload_0
      10: aload_0
      11: aload_1
      12: if_acmpeq     19
      15: aload_1
      16: goto          20
      19: aconst_null
      20: invokestatic  #5                  // Method com/google/common/base/Optional.fromNullable:(Ljava/lang/Object;)Lcom/google/common/base/Optional;
      23: putfield      #3                  // Field iterableDelegate:Lcom/google/common/base/Optional;
      26: return

  private java.lang.Iterable<E> getDelegate();
    Code:
       0: aload_0
       1: getfield      #3                  // Field iterableDelegate:Lcom/google/common/base/Optional;
       4: aload_0
       5: invokevirtual #6                  // Method com/google/common/base/Optional.or:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #7                  // class java/lang/Iterable
      11: areturn

  public static <E> com.google.common.collect.FluentIterable<E> from(java.lang.Iterable<E>);
    Code:
       0: aload_0
       1: instanceof    #8                  // class com/google/common/collect/FluentIterable
       4: ifeq          14
       7: aload_0
       8: checkcast     #8                  // class com/google/common/collect/FluentIterable
      11: goto          23
      14: new           #9                  // class com/google/common/collect/FluentIterable$1
      17: dup
      18: aload_0
      19: aload_0
      20: invokespecial #10                 // Method com/google/common/collect/FluentIterable$1."<init>":(Ljava/lang/Iterable;Ljava/lang/Iterable;)V
      23: areturn

  public static <E> com.google.common.collect.FluentIterable<E> from(E[]);
    Code:
       0: aload_0
       1: invokestatic  #11                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       4: invokestatic  #12                 // Method from:(Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;
       7: areturn

  public static <E> com.google.common.collect.FluentIterable<E> from(com.google.common.collect.FluentIterable<E>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: checkcast     #8                  // class com/google/common/collect/FluentIterable
       7: areturn

  public static <T> com.google.common.collect.FluentIterable<T> concat(java.lang.Iterable<? extends T>, java.lang.Iterable<? extends T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #13                 // Method com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
       5: invokestatic  #14                 // Method concat:(Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;
       8: areturn

  public static <T> com.google.common.collect.FluentIterable<T> concat(java.lang.Iterable<? extends T>, java.lang.Iterable<? extends T>, java.lang.Iterable<? extends T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #15                 // Method com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
       6: invokestatic  #14                 // Method concat:(Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;
       9: areturn

  public static <T> com.google.common.collect.FluentIterable<T> concat(java.lang.Iterable<? extends T>, java.lang.Iterable<? extends T>, java.lang.Iterable<? extends T>, java.lang.Iterable<? extends T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #16                 // Method com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
       7: invokestatic  #14                 // Method concat:(Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;
      10: areturn

  public static <T> com.google.common.collect.FluentIterable<T> concat(java.lang.Iterable<? extends T>...);
    Code:
       0: aload_0
       1: invokestatic  #17                 // Method com/google/common/collect/ImmutableList.copyOf:([Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
       4: invokestatic  #14                 // Method concat:(Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;
       7: areturn

  public static <T> com.google.common.collect.FluentIterable<T> concat(java.lang.Iterable<? extends java.lang.Iterable<? extends T>>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #18                 // class com/google/common/collect/FluentIterable$2
       8: dup
       9: aload_0
      10: invokespecial #19                 // Method com/google/common/collect/FluentIterable$2."<init>":(Ljava/lang/Iterable;)V
      13: areturn

  public static <E> com.google.common.collect.FluentIterable<E> of();
    Code:
       0: invokestatic  #20                 // Method com/google/common/collect/ImmutableList.of:()Lcom/google/common/collect/ImmutableList;
       3: invokestatic  #12                 // Method from:(Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;
       6: areturn

  public static <E> com.google.common.collect.FluentIterable<E> of(E[]);
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
       4: invokestatic  #12                 // Method from:(Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;
       7: areturn

  public static <E> com.google.common.collect.FluentIterable<E> of(E, E...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #22                 // Method com/google/common/collect/Lists.asList:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/List;
       5: invokestatic  #12                 // Method from:(Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;
       8: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: invokestatic  #24                 // Method com/google/common/collect/Iterables.toString:(Ljava/lang/Iterable;)Ljava/lang/String;
       7: areturn

  public final int size();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: invokestatic  #25                 // Method com/google/common/collect/Iterables.size:(Ljava/lang/Iterable;)I
       7: ireturn

  public final boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: aload_1
       5: invokestatic  #26                 // Method com/google/common/collect/Iterables.contains:(Ljava/lang/Iterable;Ljava/lang/Object;)Z
       8: ireturn

  public final com.google.common.collect.FluentIterable<E> cycle();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: invokestatic  #27                 // Method com/google/common/collect/Iterables.cycle:(Ljava/lang/Iterable;)Ljava/lang/Iterable;
       7: invokestatic  #12                 // Method from:(Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;
      10: areturn

  public final com.google.common.collect.FluentIterable<E> append(java.lang.Iterable<? extends E>);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: aload_1
       5: invokestatic  #28                 // Method concat:(Ljava/lang/Iterable;Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;
       8: invokestatic  #29                 // Method from:(Lcom/google/common/collect/FluentIterable;)Lcom/google/common/collect/FluentIterable;
      11: areturn

  public final com.google.common.collect.FluentIterable<E> append(E...);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: aload_1
       5: invokestatic  #11                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       8: invokestatic  #28                 // Method concat:(Ljava/lang/Iterable;Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;
      11: invokestatic  #29                 // Method from:(Lcom/google/common/collect/FluentIterable;)Lcom/google/common/collect/FluentIterable;
      14: areturn

  public final com.google.common.collect.FluentIterable<E> filter(com.google.common.base.Predicate<? super E>);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: aload_1
       5: invokestatic  #30                 // Method com/google/common/collect/Iterables.filter:(Ljava/lang/Iterable;Lcom/google/common/base/Predicate;)Ljava/lang/Iterable;
       8: invokestatic  #12                 // Method from:(Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;
      11: areturn

  public final <T> com.google.common.collect.FluentIterable<T> filter(java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: aload_1
       5: invokestatic  #31                 // Method com/google/common/collect/Iterables.filter:(Ljava/lang/Iterable;Ljava/lang/Class;)Ljava/lang/Iterable;
       8: invokestatic  #12                 // Method from:(Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;
      11: areturn

  public final boolean anyMatch(com.google.common.base.Predicate<? super E>);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: aload_1
       5: invokestatic  #32                 // Method com/google/common/collect/Iterables.any:(Ljava/lang/Iterable;Lcom/google/common/base/Predicate;)Z
       8: ireturn

  public final boolean allMatch(com.google.common.base.Predicate<? super E>);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: aload_1
       5: invokestatic  #33                 // Method com/google/common/collect/Iterables.all:(Ljava/lang/Iterable;Lcom/google/common/base/Predicate;)Z
       8: ireturn

  public final com.google.common.base.Optional<E> firstMatch(com.google.common.base.Predicate<? super E>);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: aload_1
       5: invokestatic  #34                 // Method com/google/common/collect/Iterables.tryFind:(Ljava/lang/Iterable;Lcom/google/common/base/Predicate;)Lcom/google/common/base/Optional;
       8: areturn

  public final <T> com.google.common.collect.FluentIterable<T> transform(com.google.common.base.Function<? super E, T>);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: aload_1
       5: invokestatic  #35                 // Method com/google/common/collect/Iterables.transform:(Ljava/lang/Iterable;Lcom/google/common/base/Function;)Ljava/lang/Iterable;
       8: invokestatic  #12                 // Method from:(Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;
      11: areturn

  public <T> com.google.common.collect.FluentIterable<T> transformAndConcat(com.google.common.base.Function<? super E, ? extends java.lang.Iterable<? extends T>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method transform:(Lcom/google/common/base/Function;)Lcom/google/common/collect/FluentIterable;
       5: invokestatic  #14                 // Method concat:(Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;
       8: invokestatic  #29                 // Method from:(Lcom/google/common/collect/FluentIterable;)Lcom/google/common/collect/FluentIterable;
      11: areturn

  public final com.google.common.base.Optional<E> first();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: invokeinterface #37,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          31
      19: aload_1
      20: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: invokestatic  #40                 // Method com/google/common/base/Optional.of:(Ljava/lang/Object;)Lcom/google/common/base/Optional;
      28: goto          34
      31: invokestatic  #2                  // Method com/google/common/base/Optional.absent:()Lcom/google/common/base/Optional;
      34: areturn

  public final com.google.common.base.Optional<E> last();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: astore_1
       5: aload_1
       6: instanceof    #41                 // class java/util/List
       9: ifeq          48
      12: aload_1
      13: checkcast     #41                 // class java/util/List
      16: astore_2
      17: aload_2
      18: invokeinterface #42,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      23: ifeq          30
      26: invokestatic  #2                  // Method com/google/common/base/Optional.absent:()Lcom/google/common/base/Optional;
      29: areturn
      30: aload_2
      31: aload_2
      32: invokeinterface #43,  1           // InterfaceMethod java/util/List.size:()I
      37: iconst_1
      38: isub
      39: invokeinterface #44,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      44: invokestatic  #40                 // Method com/google/common/base/Optional.of:(Ljava/lang/Object;)Lcom/google/common/base/Optional;
      47: areturn
      48: aload_1
      49: invokeinterface #37,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      54: astore_2
      55: aload_2
      56: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      61: ifne          68
      64: invokestatic  #2                  // Method com/google/common/base/Optional.absent:()Lcom/google/common/base/Optional;
      67: areturn
      68: aload_1
      69: instanceof    #45                 // class java/util/SortedSet
      72: ifeq          90
      75: aload_1
      76: checkcast     #45                 // class java/util/SortedSet
      79: astore_3
      80: aload_3
      81: invokeinterface #46,  1           // InterfaceMethod java/util/SortedSet.last:()Ljava/lang/Object;
      86: invokestatic  #40                 // Method com/google/common/base/Optional.of:(Ljava/lang/Object;)Lcom/google/common/base/Optional;
      89: areturn
      90: aload_2
      91: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      96: astore_3
      97: aload_2
      98: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     103: ifne          111
     106: aload_3
     107: invokestatic  #40                 // Method com/google/common/base/Optional.of:(Ljava/lang/Object;)Lcom/google/common/base/Optional;
     110: areturn
     111: goto          90

  public final com.google.common.collect.FluentIterable<E> skip(int);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: iload_1
       5: invokestatic  #47                 // Method com/google/common/collect/Iterables.skip:(Ljava/lang/Iterable;I)Ljava/lang/Iterable;
       8: invokestatic  #12                 // Method from:(Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;
      11: areturn

  public final com.google.common.collect.FluentIterable<E> limit(int);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: iload_1
       5: invokestatic  #48                 // Method com/google/common/collect/Iterables.limit:(Ljava/lang/Iterable;I)Ljava/lang/Iterable;
       8: invokestatic  #12                 // Method from:(Ljava/lang/Iterable;)Lcom/google/common/collect/FluentIterable;
      11: areturn

  public final boolean isEmpty();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: invokeinterface #37,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       9: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public final com.google.common.collect.ImmutableList<E> toList();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: invokestatic  #49                 // Method com/google/common/collect/ImmutableList.copyOf:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableList;
       7: areturn

  public final com.google.common.collect.ImmutableList<E> toSortedList(java.util.Comparator<? super E>);
    Code:
       0: aload_1
       1: invokestatic  #50                 // Method com/google/common/collect/Ordering.from:(Ljava/util/Comparator;)Lcom/google/common/collect/Ordering;
       4: aload_0
       5: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       8: invokevirtual #51                 // Method com/google/common/collect/Ordering.immutableSortedCopy:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableList;
      11: areturn

  public final com.google.common.collect.ImmutableSet<E> toSet();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: invokestatic  #52                 // Method com/google/common/collect/ImmutableSet.copyOf:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableSet;
       7: areturn

  public final com.google.common.collect.ImmutableSortedSet<E> toSortedSet(java.util.Comparator<? super E>);
    Code:
       0: aload_1
       1: aload_0
       2: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       5: invokestatic  #53                 // Method com/google/common/collect/ImmutableSortedSet.copyOf:(Ljava/util/Comparator;Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableSortedSet;
       8: areturn

  public final com.google.common.collect.ImmutableMultiset<E> toMultiset();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: invokestatic  #54                 // Method com/google/common/collect/ImmutableMultiset.copyOf:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableMultiset;
       7: areturn

  public final <V> com.google.common.collect.ImmutableMap<E, V> toMap(com.google.common.base.Function<? super E, V>);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: aload_1
       5: invokestatic  #55                 // Method com/google/common/collect/Maps.toMap:(Ljava/lang/Iterable;Lcom/google/common/base/Function;)Lcom/google/common/collect/ImmutableMap;
       8: areturn

  public final <K> com.google.common.collect.ImmutableListMultimap<K, E> index(com.google.common.base.Function<? super E, K>);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: aload_1
       5: invokestatic  #56                 // Method com/google/common/collect/Multimaps.index:(Ljava/lang/Iterable;Lcom/google/common/base/Function;)Lcom/google/common/collect/ImmutableListMultimap;
       8: areturn

  public final <K> com.google.common.collect.ImmutableMap<K, E> uniqueIndex(com.google.common.base.Function<? super E, K>);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: aload_1
       5: invokestatic  #57                 // Method com/google/common/collect/Maps.uniqueIndex:(Ljava/lang/Iterable;Lcom/google/common/base/Function;)Lcom/google/common/collect/ImmutableMap;
       8: areturn

  public final E[] toArray(java.lang.Class<E>);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: aload_1
       5: invokestatic  #58                 // Method com/google/common/collect/Iterables.toArray:(Ljava/lang/Iterable;Ljava/lang/Class;)[Ljava/lang/Object;
       8: areturn

  public final <C extends java.util.Collection<? super E>> C copyInto(C);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       9: astore_2
      10: aload_2
      11: instanceof    #59                 // class java/util/Collection
      14: ifeq          31
      17: aload_1
      18: aload_2
      19: invokestatic  #60                 // Method com/google/common/collect/Collections2.cast:(Ljava/lang/Iterable;)Ljava/util/Collection;
      22: invokeinterface #61,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      27: pop
      28: goto          67
      31: aload_2
      32: invokeinterface #37,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      37: astore_3
      38: aload_3
      39: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          67
      47: aload_3
      48: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      53: astore        4
      55: aload_1
      56: aload         4
      58: invokeinterface #62,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      63: pop
      64: goto          38
      67: aload_1
      68: areturn

  public final java.lang.String join(com.google.common.base.Joiner);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #63                 // Method com/google/common/base/Joiner.join:(Ljava/lang/Iterable;)Ljava/lang/String;
       5: areturn

  public final E get(int);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: iload_1
       5: invokestatic  #64                 // Method com/google/common/collect/Iterables.get:(Ljava/lang/Iterable;I)Ljava/lang/Object;
       8: areturn

  public final java.util.stream.Stream<E> stream();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method getDelegate:()Ljava/lang/Iterable;
       4: invokestatic  #65                 // Method com/google/common/collect/Streams.stream:(Ljava/lang/Iterable;)Ljava/util/stream/Stream;
       7: areturn
}
