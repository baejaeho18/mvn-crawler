Compiled from "ClassPath.java"
abstract class com.google.common.reflect.ClassPath$Scanner {
  private final java.util.Set<java.io.File> scannedUris;

  com.google.common.reflect.ClassPath$Scanner();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
       8: putfield      #3                  // Field scannedUris:Ljava/util/Set;
      11: return

  public final void scan(java.lang.ClassLoader) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method getClassPathEntries:(Ljava/lang/ClassLoader;)Lcom/google/common/collect/ImmutableMap;
       4: invokevirtual #5                  // Method com/google/common/collect/ImmutableMap.entrySet:()Lcom/google/common/collect/ImmutableSet;
       7: invokevirtual #6                  // Method com/google/common/collect/ImmutableSet.iterator:()Lcom/google/common/collect/UnmodifiableIterator;
      10: astore_2
      11: aload_2
      12: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          55
      20: aload_2
      21: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #9                  // class java/util/Map$Entry
      29: astore_3
      30: aload_0
      31: aload_3
      32: invokeinterface #10,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      37: checkcast     #11                 // class java/io/File
      40: aload_3
      41: invokeinterface #12,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      46: checkcast     #13                 // class java/lang/ClassLoader
      49: invokevirtual #14                 // Method scan:(Ljava/io/File;Ljava/lang/ClassLoader;)V
      52: goto          11
      55: return

  protected abstract void scanDirectory(java.lang.ClassLoader, java.io.File) throws java.io.IOException;

  protected abstract void scanJarFile(java.lang.ClassLoader, java.util.jar.JarFile) throws java.io.IOException;

  final void scan(java.io.File, java.lang.ClassLoader) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field scannedUris:Ljava/util/Set;
       4: aload_1
       5: invokevirtual #15                 // Method java/io/File.getCanonicalFile:()Ljava/io/File;
       8: invokeinterface #16,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      13: ifeq          22
      16: aload_0
      17: aload_1
      18: aload_2
      19: invokespecial #17                 // Method scanFrom:(Ljava/io/File;Ljava/lang/ClassLoader;)V
      22: return

  private void scanFrom(java.io.File, java.lang.ClassLoader) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #18                 // Method java/io/File.exists:()Z
       4: ifne          8
       7: return
       8: goto          47
      11: astore_3
      12: invokestatic  #20                 // Method com/google/common/reflect/ClassPath.access$100:()Ljava/util/logging/Logger;
      15: new           #21                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #23                 // String Cannot access
      24: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_1
      28: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #26                 // String :
      33: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_3
      37: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokevirtual #28                 // Method java/util/logging/Logger.warning:(Ljava/lang/String;)V
      46: return
      47: aload_1
      48: invokevirtual #29                 // Method java/io/File.isDirectory:()Z
      51: ifeq          63
      54: aload_0
      55: aload_2
      56: aload_1
      57: invokevirtual #30                 // Method scanDirectory:(Ljava/lang/ClassLoader;Ljava/io/File;)V
      60: goto          69
      63: aload_0
      64: aload_1
      65: aload_2
      66: invokespecial #31                 // Method scanJar:(Ljava/io/File;Ljava/lang/ClassLoader;)V
      69: return
    Exception table:
       from    to  target type
           0     7    11   Class java/lang/SecurityException

  private void scanJar(java.io.File, java.lang.ClassLoader) throws java.io.IOException;
    Code:
       0: new           #32                 // class java/util/jar/JarFile
       3: dup
       4: aload_1
       5: invokespecial #33                 // Method java/util/jar/JarFile."<init>":(Ljava/io/File;)V
       8: astore_3
       9: goto          15
      12: astore        4
      14: return
      15: aload_1
      16: aload_3
      17: invokevirtual #35                 // Method java/util/jar/JarFile.getManifest:()Ljava/util/jar/Manifest;
      20: invokestatic  #36                 // Method getClassPathFromManifest:(Ljava/io/File;Ljava/util/jar/Manifest;)Lcom/google/common/collect/ImmutableSet;
      23: invokevirtual #6                  // Method com/google/common/collect/ImmutableSet.iterator:()Lcom/google/common/collect/UnmodifiableIterator;
      26: astore        4
      28: aload         4
      30: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          60
      38: aload         4
      40: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #11                 // class java/io/File
      48: astore        5
      50: aload_0
      51: aload         5
      53: aload_2
      54: invokevirtual #14                 // Method scan:(Ljava/io/File;Ljava/lang/ClassLoader;)V
      57: goto          28
      60: aload_0
      61: aload_2
      62: aload_3
      63: invokevirtual #37                 // Method scanJarFile:(Ljava/lang/ClassLoader;Ljava/util/jar/JarFile;)V
      66: aload_3
      67: invokevirtual #38                 // Method java/util/jar/JarFile.close:()V
      70: goto          92
      73: astore        4
      75: goto          92
      78: astore        6
      80: aload_3
      81: invokevirtual #38                 // Method java/util/jar/JarFile.close:()V
      84: goto          89
      87: astore        7
      89: aload         6
      91: athrow
      92: return
    Exception table:
       from    to  target type
           0     9    12   Class java/io/IOException
          66    70    73   Class java/io/IOException
          15    66    78   any
          80    84    87   Class java/io/IOException
          78    80    78   any

  static com.google.common.collect.ImmutableSet<java.io.File> getClassPathFromManifest(java.io.File, java.util.jar.Manifest);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: invokestatic  #39                 // Method com/google/common/collect/ImmutableSet.of:()Lcom/google/common/collect/ImmutableSet;
       7: areturn
       8: invokestatic  #40                 // Method com/google/common/collect/ImmutableSet.builder:()Lcom/google/common/collect/ImmutableSet$Builder;
      11: astore_2
      12: aload_1
      13: invokevirtual #41                 // Method java/util/jar/Manifest.getMainAttributes:()Ljava/util/jar/Attributes;
      16: getstatic     #42                 // Field java/util/jar/Attributes$Name.CLASS_PATH:Ljava/util/jar/Attributes$Name;
      19: invokevirtual #43                 // Method java/util/jar/Attributes$Name.toString:()Ljava/lang/String;
      22: invokevirtual #44                 // Method java/util/jar/Attributes.getValue:(Ljava/lang/String;)Ljava/lang/String;
      25: astore_3
      26: aload_3
      27: ifnull        134
      30: invokestatic  #45                 // Method com/google/common/reflect/ClassPath.access$200:()Lcom/google/common/base/Splitter;
      33: aload_3
      34: invokevirtual #46                 // Method com/google/common/base/Splitter.split:(Ljava/lang/CharSequence;)Ljava/lang/Iterable;
      37: invokeinterface #47,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      42: astore        4
      44: aload         4
      46: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifeq          134
      54: aload         4
      56: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #48                 // class java/lang/String
      64: astore        5
      66: aload_0
      67: aload         5
      69: invokestatic  #49                 // Method getClassPathEntry:(Ljava/io/File;Ljava/lang/String;)Ljava/net/URL;
      72: astore        6
      74: goto          108
      77: astore        7
      79: invokestatic  #20                 // Method com/google/common/reflect/ClassPath.access$100:()Ljava/util/logging/Logger;
      82: new           #21                 // class java/lang/StringBuilder
      85: dup
      86: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      89: ldc           #51                 // String Invalid Class-Path entry:
      91: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload         5
      96: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     102: invokevirtual #28                 // Method java/util/logging/Logger.warning:(Ljava/lang/String;)V
     105: goto          44
     108: aload         6
     110: invokevirtual #52                 // Method java/net/URL.getProtocol:()Ljava/lang/String;
     113: ldc           #53                 // String file
     115: invokevirtual #54                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     118: ifeq          131
     121: aload_2
     122: aload         6
     124: invokestatic  #55                 // Method com/google/common/reflect/ClassPath.toFile:(Ljava/net/URL;)Ljava/io/File;
     127: invokevirtual #56                 // Method com/google/common/collect/ImmutableSet$Builder.add:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet$Builder;
     130: pop
     131: goto          44
     134: aload_2
     135: invokevirtual #57                 // Method com/google/common/collect/ImmutableSet$Builder.build:()Lcom/google/common/collect/ImmutableSet;
     138: areturn
    Exception table:
       from    to  target type
          66    74    77   Class java/net/MalformedURLException

  static com.google.common.collect.ImmutableMap<java.io.File, java.lang.ClassLoader> getClassPathEntries(java.lang.ClassLoader);
    Code:
       0: invokestatic  #58                 // Method com/google/common/collect/Maps.newLinkedHashMap:()Ljava/util/LinkedHashMap;
       3: astore_1
       4: aload_0
       5: invokevirtual #59                 // Method java/lang/ClassLoader.getParent:()Ljava/lang/ClassLoader;
       8: astore_2
       9: aload_2
      10: ifnull        21
      13: aload_1
      14: aload_2
      15: invokestatic  #4                  // Method getClassPathEntries:(Ljava/lang/ClassLoader;)Lcom/google/common/collect/ImmutableMap;
      18: invokevirtual #60                 // Method java/util/LinkedHashMap.putAll:(Ljava/util/Map;)V
      21: aload_0
      22: instanceof    #61                 // class java/net/URLClassLoader
      25: ifeq          104
      28: aload_0
      29: checkcast     #61                 // class java/net/URLClassLoader
      32: astore_3
      33: aload_3
      34: invokevirtual #62                 // Method java/net/URLClassLoader.getURLs:()[Ljava/net/URL;
      37: astore        4
      39: aload         4
      41: arraylength
      42: istore        5
      44: iconst_0
      45: istore        6
      47: iload         6
      49: iload         5
      51: if_icmpge     104
      54: aload         4
      56: iload         6
      58: aaload
      59: astore        7
      61: aload         7
      63: invokevirtual #52                 // Method java/net/URL.getProtocol:()Ljava/lang/String;
      66: ldc           #53                 // String file
      68: invokevirtual #54                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      71: ifeq          98
      74: aload         7
      76: invokestatic  #55                 // Method com/google/common/reflect/ClassPath.toFile:(Ljava/net/URL;)Ljava/io/File;
      79: astore        8
      81: aload_1
      82: aload         8
      84: invokevirtual #63                 // Method java/util/LinkedHashMap.containsKey:(Ljava/lang/Object;)Z
      87: ifne          98
      90: aload_1
      91: aload         8
      93: aload_0
      94: invokevirtual #64                 // Method java/util/LinkedHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      97: pop
      98: iinc          6, 1
     101: goto          47
     104: aload_1
     105: invokestatic  #65                 // Method com/google/common/collect/ImmutableMap.copyOf:(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;
     108: areturn

  static java.net.URL getClassPathEntry(java.io.File, java.lang.String) throws java.net.MalformedURLException;
    Code:
       0: new           #66                 // class java/net/URL
       3: dup
       4: aload_0
       5: invokevirtual #67                 // Method java/io/File.toURI:()Ljava/net/URI;
       8: invokevirtual #68                 // Method java/net/URI.toURL:()Ljava/net/URL;
      11: aload_1
      12: invokespecial #69                 // Method java/net/URL."<init>":(Ljava/net/URL;Ljava/lang/String;)V
      15: areturn
}
