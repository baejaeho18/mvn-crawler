Compiled from "SourceMapGeneratorV3.java"
class com.google.debugging.sourcemap.SourceMapGeneratorV3$LineMapper implements com.google.debugging.sourcemap.SourceMapGeneratorV3$MappingVisitor {
  private final java.lang.Appendable out;

  private final int maxLine;

  private int previousLine;

  private int previousColumn;

  private int previousSourceFileId;

  private int previousSourceLine;

  private int previousSourceColumn;

  private int previousNameId;

  final com.google.debugging.sourcemap.SourceMapGeneratorV3 this$0;

  com.google.debugging.sourcemap.SourceMapGeneratorV3$LineMapper(com.google.debugging.sourcemap.SourceMapGeneratorV3, java.lang.Appendable, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/google/debugging/sourcemap/SourceMapGeneratorV3;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iconst_m1
      11: putfield      #3                  // Field previousLine:I
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field previousColumn:I
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field out:Ljava/lang/Appendable;
      24: aload_0
      25: iload_3
      26: putfield      #6                  // Field maxLine:I
      29: return

  public void visit(com.google.debugging.sourcemap.SourceMapGeneratorV3$Mapping, int, int, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field previousLine:I
       4: iload_2
       5: if_icmpeq     13
       8: aload_0
       9: iconst_0
      10: putfield      #4                  // Field previousColumn:I
      13: iload_2
      14: iload         4
      16: if_icmpne     25
      19: iload_3
      20: iload         5
      22: if_icmpeq     84
      25: iload_2
      26: aload_0
      27: getfield      #6                  // Field maxLine:I
      30: if_icmpge     72
      33: aload_0
      34: getfield      #3                  // Field previousLine:I
      37: iload_2
      38: if_icmpne     53
      41: aload_0
      42: getfield      #5                  // Field out:Ljava/lang/Appendable;
      45: bipush        44
      47: invokeinterface #7,  2            // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      52: pop
      53: aload_0
      54: aload_1
      55: iload_3
      56: invokevirtual #8                  // Method writeEntry:(Lcom/google/debugging/sourcemap/SourceMapGeneratorV3$Mapping;I)V
      59: aload_0
      60: iload_2
      61: putfield      #3                  // Field previousLine:I
      64: aload_0
      65: iload_3
      66: putfield      #4                  // Field previousColumn:I
      69: goto          84
      72: aload_1
      73: ifnonnull     80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: invokestatic  #9                  // Method com/google/common/base/Preconditions.checkState:(Z)V
      84: iload_2
      85: istore        6
      87: iload         6
      89: iload         4
      91: if_icmpgt     129
      94: iload         6
      96: aload_0
      97: getfield      #6                  // Field maxLine:I
     100: if_icmpge     129
     103: iload         6
     105: iload         4
     107: if_icmpne     113
     110: goto          129
     113: aload_0
     114: iconst_0
     115: invokespecial #10                 // Method closeLine:(Z)V
     118: aload_0
     119: iconst_0
     120: invokespecial #11                 // Method openLine:(Z)V
     123: iinc          6, 1
     126: goto          87
     129: return

  void writeEntry(com.google.debugging.sourcemap.SourceMapGeneratorV3$Mapping, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field out:Ljava/lang/Appendable;
       4: iload_2
       5: aload_0
       6: getfield      #4                  // Field previousColumn:I
       9: isub
      10: invokestatic  #12                 // Method com/google/debugging/sourcemap/Base64VLQ.encode:(Ljava/lang/Appendable;I)V
      13: aload_0
      14: iload_2
      15: putfield      #4                  // Field previousColumn:I
      18: aload_1
      19: ifnull        150
      22: aload_0
      23: getfield      #1                  // Field this$0:Lcom/google/debugging/sourcemap/SourceMapGeneratorV3;
      26: aload_1
      27: getfield      #13                 // Field com/google/debugging/sourcemap/SourceMapGeneratorV3$Mapping.sourceFile:Ljava/lang/String;
      30: invokestatic  #14                 // Method com/google/debugging/sourcemap/SourceMapGeneratorV3.access$300:(Lcom/google/debugging/sourcemap/SourceMapGeneratorV3;Ljava/lang/String;)I
      33: istore_3
      34: aload_0
      35: getfield      #5                  // Field out:Ljava/lang/Appendable;
      38: iload_3
      39: aload_0
      40: getfield      #15                 // Field previousSourceFileId:I
      43: isub
      44: invokestatic  #12                 // Method com/google/debugging/sourcemap/Base64VLQ.encode:(Ljava/lang/Appendable;I)V
      47: aload_0
      48: iload_3
      49: putfield      #15                 // Field previousSourceFileId:I
      52: aload_1
      53: getfield      #16                 // Field com/google/debugging/sourcemap/SourceMapGeneratorV3$Mapping.originalPosition:Lcom/google/debugging/sourcemap/FilePosition;
      56: invokevirtual #17                 // Method com/google/debugging/sourcemap/FilePosition.getLine:()I
      59: istore        4
      61: aload_1
      62: getfield      #16                 // Field com/google/debugging/sourcemap/SourceMapGeneratorV3$Mapping.originalPosition:Lcom/google/debugging/sourcemap/FilePosition;
      65: invokevirtual #18                 // Method com/google/debugging/sourcemap/FilePosition.getColumn:()I
      68: istore        5
      70: aload_0
      71: getfield      #5                  // Field out:Ljava/lang/Appendable;
      74: iload         4
      76: aload_0
      77: getfield      #19                 // Field previousSourceLine:I
      80: isub
      81: invokestatic  #12                 // Method com/google/debugging/sourcemap/Base64VLQ.encode:(Ljava/lang/Appendable;I)V
      84: aload_0
      85: iload         4
      87: putfield      #19                 // Field previousSourceLine:I
      90: aload_0
      91: getfield      #5                  // Field out:Ljava/lang/Appendable;
      94: iload         5
      96: aload_0
      97: getfield      #20                 // Field previousSourceColumn:I
     100: isub
     101: invokestatic  #12                 // Method com/google/debugging/sourcemap/Base64VLQ.encode:(Ljava/lang/Appendable;I)V
     104: aload_0
     105: iload         5
     107: putfield      #20                 // Field previousSourceColumn:I
     110: aload_1
     111: getfield      #21                 // Field com/google/debugging/sourcemap/SourceMapGeneratorV3$Mapping.originalName:Ljava/lang/String;
     114: ifnull        150
     117: aload_0
     118: getfield      #1                  // Field this$0:Lcom/google/debugging/sourcemap/SourceMapGeneratorV3;
     121: aload_1
     122: getfield      #21                 // Field com/google/debugging/sourcemap/SourceMapGeneratorV3$Mapping.originalName:Ljava/lang/String;
     125: invokestatic  #22                 // Method com/google/debugging/sourcemap/SourceMapGeneratorV3.access$400:(Lcom/google/debugging/sourcemap/SourceMapGeneratorV3;Ljava/lang/String;)I
     128: istore        6
     130: aload_0
     131: getfield      #5                  // Field out:Ljava/lang/Appendable;
     134: iload         6
     136: aload_0
     137: getfield      #23                 // Field previousNameId:I
     140: isub
     141: invokestatic  #12                 // Method com/google/debugging/sourcemap/Base64VLQ.encode:(Ljava/lang/Appendable;I)V
     144: aload_0
     145: iload         6
     147: putfield      #23                 // Field previousNameId:I
     150: return

  void appendLineMappings() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #11                 // Method openLine:(Z)V
       5: new           #24                 // class com/google/debugging/sourcemap/SourceMapGeneratorV3$MappingTraversal
       8: dup
       9: aload_0
      10: getfield      #1                  // Field this$0:Lcom/google/debugging/sourcemap/SourceMapGeneratorV3;
      13: invokespecial #25                 // Method com/google/debugging/sourcemap/SourceMapGeneratorV3$MappingTraversal."<init>":(Lcom/google/debugging/sourcemap/SourceMapGeneratorV3;)V
      16: aload_0
      17: invokevirtual #26                 // Method com/google/debugging/sourcemap/SourceMapGeneratorV3$MappingTraversal.traverse:(Lcom/google/debugging/sourcemap/SourceMapGeneratorV3$MappingVisitor;)V
      20: aload_0
      21: iconst_1
      22: invokespecial #10                 // Method closeLine:(Z)V
      25: return

  private void openLine(boolean) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifeq          16
       4: aload_0
       5: getfield      #5                  // Field out:Ljava/lang/Appendable;
       8: bipush        34
      10: invokeinterface #7,  2            // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      15: pop
      16: return

  private void closeLine(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field out:Ljava/lang/Appendable;
       4: bipush        59
       6: invokeinterface #7,  2            // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      11: pop
      12: iload_1
      13: ifeq          28
      16: aload_0
      17: getfield      #5                  // Field out:Ljava/lang/Appendable;
      20: bipush        34
      22: invokeinterface #7,  2            // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      27: pop
      28: return
}
