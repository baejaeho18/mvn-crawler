Compiled from "ReflectiveTypeAdapterFactory.java"
class com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 extends com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField {
  final com.google.gson.TypeAdapter<?> typeAdapter;

  final com.google.gson.Gson val$context;

  final com.google.gson.reflect.TypeToken val$fieldType;

  final java.lang.reflect.Field val$field;

  final boolean val$isPrimitive;

  final com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0;

  com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1(com.google.gson.internal.bind.ReflectiveTypeAdapterFactory, java.lang.String, boolean, boolean, com.google.gson.Gson, com.google.gson.reflect.TypeToken, java.lang.reflect.Field, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/google/gson/internal/bind/ReflectiveTypeAdapterFactory;
       5: aload_0
       6: aload         5
       8: putfield      #2                  // Field val$context:Lcom/google/gson/Gson;
      11: aload_0
      12: aload         6
      14: putfield      #3                  // Field val$fieldType:Lcom/google/gson/reflect/TypeToken;
      17: aload_0
      18: aload         7
      20: putfield      #4                  // Field val$field:Ljava/lang/reflect/Field;
      23: aload_0
      24: iload         8
      26: putfield      #5                  // Field val$isPrimitive:Z
      29: aload_0
      30: aload_2
      31: iload_3
      32: iload         4
      34: invokespecial #6                  // Method com/google/gson/internal/bind/ReflectiveTypeAdapterFactory$BoundField."<init>":(Ljava/lang/String;ZZ)V
      37: aload_0
      38: aload_0
      39: getfield      #2                  // Field val$context:Lcom/google/gson/Gson;
      42: aload_0
      43: getfield      #3                  // Field val$fieldType:Lcom/google/gson/reflect/TypeToken;
      46: invokevirtual #7                  // Method com/google/gson/Gson.getAdapter:(Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter;
      49: putfield      #8                  // Field typeAdapter:Lcom/google/gson/TypeAdapter;
      52: return

  void write(com.google.gson.stream.JsonWriter, java.lang.Object) throws java.io.IOException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field val$field:Ljava/lang/reflect/Field;
       4: aload_2
       5: invokevirtual #9                  // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: astore_3
       9: new           #10                 // class com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper
      12: dup
      13: aload_0
      14: getfield      #2                  // Field val$context:Lcom/google/gson/Gson;
      17: aload_0
      18: getfield      #8                  // Field typeAdapter:Lcom/google/gson/TypeAdapter;
      21: aload_0
      22: getfield      #3                  // Field val$fieldType:Lcom/google/gson/reflect/TypeToken;
      25: invokevirtual #11                 // Method com/google/gson/reflect/TypeToken.getType:()Ljava/lang/reflect/Type;
      28: invokespecial #12                 // Method com/google/gson/internal/bind/TypeAdapterRuntimeTypeWrapper."<init>":(Lcom/google/gson/Gson;Lcom/google/gson/TypeAdapter;Ljava/lang/reflect/Type;)V
      31: astore        4
      33: aload         4
      35: aload_1
      36: aload_3
      37: invokevirtual #13                 // Method com/google/gson/TypeAdapter.write:(Lcom/google/gson/stream/JsonWriter;Ljava/lang/Object;)V
      40: return

  void read(com.google.gson.stream.JsonReader, java.lang.Object) throws java.io.IOException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field typeAdapter:Lcom/google/gson/TypeAdapter;
       4: aload_1
       5: invokevirtual #14                 // Method com/google/gson/TypeAdapter.read:(Lcom/google/gson/stream/JsonReader;)Ljava/lang/Object;
       8: astore_3
       9: aload_3
      10: ifnonnull     20
      13: aload_0
      14: getfield      #5                  // Field val$isPrimitive:Z
      17: ifne          29
      20: aload_0
      21: getfield      #4                  // Field val$field:Ljava/lang/reflect/Field;
      24: aload_2
      25: aload_3
      26: invokevirtual #15                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      29: return
}
