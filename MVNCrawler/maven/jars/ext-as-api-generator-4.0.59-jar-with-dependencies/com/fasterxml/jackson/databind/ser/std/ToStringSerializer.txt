Compiled from "ToStringSerializer.java"
public class com.fasterxml.jackson.databind.ser.std.ToStringSerializer extends com.fasterxml.jackson.databind.ser.std.StdSerializer<java.lang.Object> {
  public static final com.fasterxml.jackson.databind.ser.std.ToStringSerializer instance;

  public com.fasterxml.jackson.databind.ser.std.ToStringSerializer();
    Code:
       0: aload_0
       1: ldc_w         #1                  // class java/lang/Object
       4: invokespecial #2                  // Method com/fasterxml/jackson/databind/ser/std/StdSerializer."<init>":(Ljava/lang/Class;)V
       7: return

  public com.fasterxml.jackson.databind.ser.std.ToStringSerializer(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #3                  // Method com/fasterxml/jackson/databind/ser/std/StdSerializer."<init>":(Ljava/lang/Class;Z)V
       6: return

  public boolean isEmpty(java.lang.Object);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokevirtual #4                  // Method isEmpty:(Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/Object;)Z
       6: ireturn

  public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_2
       7: invokevirtual #5                  // Method java/lang/Object.toString:()Ljava/lang/String;
      10: astore_3
      11: aload_3
      12: invokevirtual #6                  // Method java/lang/String.isEmpty:()Z
      15: ireturn

  public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #5                  // Method java/lang/Object.toString:()Ljava/lang/String;
       5: invokevirtual #7                  // Method com/fasterxml/jackson/core/JsonGenerator.writeString:(Ljava/lang/String;)V
       8: return

  public void serializeWithType(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException;
    Code:
       0: aload         4
       2: aload_1
       3: aload_2
       4: invokevirtual #8                  // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypePrefixForScalar:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;)V
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokevirtual #9                  // Method serialize:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
      14: aload         4
      16: aload_1
      17: aload_2
      18: invokevirtual #10                 // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypeSuffixForScalar:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;)V
      21: return

  public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_0
       1: ldc           #11                 // String string
       3: iconst_1
       4: invokevirtual #12                 // Method createSchemaNode:(Ljava/lang/String;Z)Lcom/fasterxml/jackson/databind/node/ObjectNode;
       7: areturn

  public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #13                 // Method visitStringFormat:(Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;)V
       6: return

  static {};
    Code:
       0: new           #14                 // class com/fasterxml/jackson/databind/ser/std/ToStringSerializer
       3: dup
       4: invokespecial #15                 // Method "<init>":()V
       7: putstatic     #16                 // Field instance:Lcom/fasterxml/jackson/databind/ser/std/ToStringSerializer;
      10: return
}
