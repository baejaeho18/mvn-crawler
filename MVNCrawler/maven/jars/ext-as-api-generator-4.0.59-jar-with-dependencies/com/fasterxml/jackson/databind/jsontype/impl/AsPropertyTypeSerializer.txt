Compiled from "AsPropertyTypeSerializer.java"
public class com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer extends com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer {
  protected final java.lang.String _typePropertyName;

  public com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeIdResolver, com.fasterxml.jackson.databind.BeanProperty, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method com/fasterxml/jackson/databind/jsontype/impl/AsArrayTypeSerializer."<init>":(Lcom/fasterxml/jackson/databind/jsontype/TypeIdResolver;Lcom/fasterxml/jackson/databind/BeanProperty;)V
       6: aload_0
       7: aload_3
       8: putfield      #2                  // Field _typePropertyName:Ljava/lang/String;
      11: return

  public com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty);
    Code:
       0: aload_0
       1: getfield      #3                  // Field _property:Lcom/fasterxml/jackson/databind/BeanProperty;
       4: aload_1
       5: if_acmpne     12
       8: aload_0
       9: goto          28
      12: new           #4                  // class com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeSerializer
      15: dup
      16: aload_0
      17: getfield      #5                  // Field _idResolver:Lcom/fasterxml/jackson/databind/jsontype/TypeIdResolver;
      20: aload_1
      21: aload_0
      22: getfield      #2                  // Field _typePropertyName:Ljava/lang/String;
      25: invokespecial #6                  // Method "<init>":(Lcom/fasterxml/jackson/databind/jsontype/TypeIdResolver;Lcom/fasterxml/jackson/databind/BeanProperty;Ljava/lang/String;)V
      28: areturn

  public java.lang.String getPropertyName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _typePropertyName:Ljava/lang/String;
       4: areturn

  public com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion();
    Code:
       0: getstatic     #7                  // Field com/fasterxml/jackson/annotation/JsonTypeInfo$As.PROPERTY:Lcom/fasterxml/jackson/annotation/JsonTypeInfo$As;
       3: areturn

  public void writeTypePrefixForObject(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method idFromValue:(Ljava/lang/Object;)Ljava/lang/String;
       5: astore_3
       6: aload_3
       7: ifnonnull     17
      10: aload_2
      11: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
      14: goto          49
      17: aload_2
      18: invokevirtual #10                 // Method com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z
      21: ifeq          36
      24: aload_2
      25: aload_3
      26: invokevirtual #11                 // Method com/fasterxml/jackson/core/JsonGenerator.writeTypeId:(Ljava/lang/Object;)V
      29: aload_2
      30: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
      33: goto          49
      36: aload_2
      37: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
      40: aload_2
      41: aload_0
      42: getfield      #2                  // Field _typePropertyName:Ljava/lang/String;
      45: aload_3
      46: invokevirtual #12                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStringField:(Ljava/lang/String;Ljava/lang/String;)V
      49: return

  public void writeTypePrefixForObject(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.Class<?>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokevirtual #13                 // Method idFromValueAndType:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/String;
       6: astore        4
       8: aload         4
      10: ifnonnull     20
      13: aload_2
      14: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
      17: goto          54
      20: aload_2
      21: invokevirtual #10                 // Method com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z
      24: ifeq          40
      27: aload_2
      28: aload         4
      30: invokevirtual #11                 // Method com/fasterxml/jackson/core/JsonGenerator.writeTypeId:(Ljava/lang/Object;)V
      33: aload_2
      34: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
      37: goto          54
      40: aload_2
      41: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
      44: aload_2
      45: aload_0
      46: getfield      #2                  // Field _typePropertyName:Ljava/lang/String;
      49: aload         4
      51: invokevirtual #12                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStringField:(Ljava/lang/String;Ljava/lang/String;)V
      54: return

  public void writeTypeSuffixForObject(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #14                 // Method com/fasterxml/jackson/core/JsonGenerator.writeEndObject:()V
       4: return

  public void writeCustomTypePrefixForObject(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_3
       1: ifnonnull     11
       4: aload_2
       5: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
       8: goto          43
      11: aload_2
      12: invokevirtual #10                 // Method com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z
      15: ifeq          30
      18: aload_2
      19: aload_3
      20: invokevirtual #11                 // Method com/fasterxml/jackson/core/JsonGenerator.writeTypeId:(Ljava/lang/Object;)V
      23: aload_2
      24: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
      27: goto          43
      30: aload_2
      31: invokevirtual #9                  // Method com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V
      34: aload_2
      35: aload_0
      36: getfield      #2                  // Field _typePropertyName:Ljava/lang/String;
      39: aload_3
      40: invokevirtual #12                 // Method com/fasterxml/jackson/core/JsonGenerator.writeStringField:(Ljava/lang/String;Ljava/lang/String;)V
      43: return

  public void writeCustomTypeSuffixForObject(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #14                 // Method com/fasterxml/jackson/core/JsonGenerator.writeEndObject:()V
       4: return

  public com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method forProperty:(Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeSerializer;
       5: areturn

  public com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method forProperty:(Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeSerializer;
       5: areturn
}
