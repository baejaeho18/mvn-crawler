Compiled from "InlineParserImpl.java"
final class com.vladsch.flexmark.internal.InlineParserImpl$1 implements java.util.Comparator<com.vladsch.flexmark.parser.LinkRefProcessorFactory> {
  final com.vladsch.flexmark.util.options.DataHolder val$options;

  final int[] val$maxNestingLevelRef;

  com.vladsch.flexmark.internal.InlineParserImpl$1(com.vladsch.flexmark.util.options.DataHolder, int[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$options:Lcom/vladsch/flexmark/util/options/DataHolder;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$maxNestingLevelRef:[I
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public int compare(com.vladsch.flexmark.parser.LinkRefProcessorFactory, com.vladsch.flexmark.parser.LinkRefProcessorFactory);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #1                  // Field val$options:Lcom/vladsch/flexmark/util/options/DataHolder;
       5: invokeinterface #4,  2            // InterfaceMethod com/vladsch/flexmark/parser/LinkRefProcessorFactory.getBracketNestingLevel:(Lcom/vladsch/flexmark/util/options/DataHolder;)I
      10: istore_3
      11: aload_2
      12: aload_0
      13: getfield      #1                  // Field val$options:Lcom/vladsch/flexmark/util/options/DataHolder;
      16: invokeinterface #4,  2            // InterfaceMethod com/vladsch/flexmark/parser/LinkRefProcessorFactory.getBracketNestingLevel:(Lcom/vladsch/flexmark/util/options/DataHolder;)I
      21: istore        4
      23: aload_0
      24: getfield      #2                  // Field val$maxNestingLevelRef:[I
      27: iconst_0
      28: iaload
      29: istore        5
      31: iload         5
      33: iload_3
      34: if_icmpge     40
      37: iload_3
      38: istore        5
      40: iload         5
      42: iload         4
      44: if_icmpge     51
      47: iload         4
      49: istore        5
      51: aload_0
      52: getfield      #2                  // Field val$maxNestingLevelRef:[I
      55: iconst_0
      56: iload         5
      58: iastore
      59: iload_3
      60: iload         4
      62: if_icmpne     97
      65: aload_1
      66: aload_0
      67: getfield      #1                  // Field val$options:Lcom/vladsch/flexmark/util/options/DataHolder;
      70: invokeinterface #5,  2            // InterfaceMethod com/vladsch/flexmark/parser/LinkRefProcessorFactory.getWantExclamationPrefix:(Lcom/vladsch/flexmark/util/options/DataHolder;)Z
      75: ifne          81
      78: iinc          3, 1
      81: aload_2
      82: aload_0
      83: getfield      #1                  // Field val$options:Lcom/vladsch/flexmark/util/options/DataHolder;
      86: invokeinterface #5,  2            // InterfaceMethod com/vladsch/flexmark/parser/LinkRefProcessorFactory.getWantExclamationPrefix:(Lcom/vladsch/flexmark/util/options/DataHolder;)Z
      91: ifne          97
      94: iinc          4, 1
      97: iload_3
      98: iload         4
     100: isub
     101: ireturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #6                  // class com/vladsch/flexmark/parser/LinkRefProcessorFactory
       5: aload_2
       6: checkcast     #6                  // class com/vladsch/flexmark/parser/LinkRefProcessorFactory
       9: invokevirtual #7                  // Method compare:(Lcom/vladsch/flexmark/parser/LinkRefProcessorFactory;Lcom/vladsch/flexmark/parser/LinkRefProcessorFactory;)I
      12: ireturn
}
