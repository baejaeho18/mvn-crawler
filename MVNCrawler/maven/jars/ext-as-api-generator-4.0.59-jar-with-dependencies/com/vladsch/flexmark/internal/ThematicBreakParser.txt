Compiled from "ThematicBreakParser.java"
public class com.vladsch.flexmark.internal.ThematicBreakParser extends com.vladsch.flexmark.parser.block.AbstractBlockParser {
  private static java.util.regex.Pattern PATTERN;

  private final com.vladsch.flexmark.ast.ThematicBreak block;

  public com.vladsch.flexmark.internal.ThematicBreakParser(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/vladsch/flexmark/parser/block/AbstractBlockParser."<init>":()V
       4: aload_0
       5: new           #3                  // class com/vladsch/flexmark/ast/ThematicBreak
       8: dup
       9: invokespecial #4                  // Method com/vladsch/flexmark/ast/ThematicBreak."<init>":()V
      12: putfield      #5                  // Field block:Lcom/vladsch/flexmark/ast/ThematicBreak;
      15: aload_0
      16: getfield      #5                  // Field block:Lcom/vladsch/flexmark/ast/ThematicBreak;
      19: aload_1
      20: invokevirtual #6                  // Method com/vladsch/flexmark/ast/ThematicBreak.setChars:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
      23: return

  public com.vladsch.flexmark.ast.Block getBlock();
    Code:
       0: aload_0
       1: getfield      #5                  // Field block:Lcom/vladsch/flexmark/ast/ThematicBreak;
       4: areturn

  public void closeBlock(com.vladsch.flexmark.parser.block.ParserState);
    Code:
       0: aload_0
       1: getfield      #5                  // Field block:Lcom/vladsch/flexmark/ast/ThematicBreak;
       4: invokevirtual #7                  // Method com/vladsch/flexmark/ast/ThematicBreak.setCharsFromContent:()V
       7: return

  public com.vladsch.flexmark.parser.block.BlockContinue tryContinue(com.vladsch.flexmark.parser.block.ParserState);
    Code:
       0: invokestatic  #8                  // Method com/vladsch/flexmark/parser/block/BlockContinue.none:()Lcom/vladsch/flexmark/parser/block/BlockContinue;
       3: areturn

  static java.util.regex.Pattern access$100();
    Code:
       0: getstatic     #1                  // Field PATTERN:Ljava/util/regex/Pattern;
       3: areturn

  static {};
    Code:
       0: ldc           #9                  // String ^(?:(?:\\*[ \t]*){3,}|(?:_[ \t]*){3,}|(?:-[ \t]*){3,})[ \t]*$
       2: invokestatic  #10                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #1                  // Field PATTERN:Ljava/util/regex/Pattern;
       8: return
}
