Compiled from "HeadingParser.java"
public class com.vladsch.flexmark.internal.HeadingParser extends com.vladsch.flexmark.parser.block.AbstractBlockParser {
  final com.vladsch.flexmark.ast.Heading block;

  public com.vladsch.flexmark.internal.HeadingParser(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/vladsch/flexmark/parser/block/AbstractBlockParser."<init>":()V
       4: aload_0
       5: new           #2                  // class com/vladsch/flexmark/ast/Heading
       8: dup
       9: invokespecial #3                  // Method com/vladsch/flexmark/ast/Heading."<init>":()V
      12: putfield      #4                  // Field block:Lcom/vladsch/flexmark/ast/Heading;
      15: aload_0
      16: getfield      #4                  // Field block:Lcom/vladsch/flexmark/ast/Heading;
      19: iload_1
      20: invokevirtual #5                  // Method com/vladsch/flexmark/ast/Heading.setLevel:(I)V
      23: return

  public com.vladsch.flexmark.ast.Block getBlock();
    Code:
       0: aload_0
       1: getfield      #4                  // Field block:Lcom/vladsch/flexmark/ast/Heading;
       4: areturn

  public com.vladsch.flexmark.parser.block.BlockContinue tryContinue(com.vladsch.flexmark.parser.block.ParserState);
    Code:
       0: invokestatic  #6                  // Method com/vladsch/flexmark/parser/block/BlockContinue.none:()Lcom/vladsch/flexmark/parser/block/BlockContinue;
       3: areturn

  public void parseInlines(com.vladsch.flexmark.parser.InlineParser);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field block:Lcom/vladsch/flexmark/ast/Heading;
       5: invokevirtual #7                  // Method com/vladsch/flexmark/ast/Heading.getText:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       8: aload_0
       9: getfield      #4                  // Field block:Lcom/vladsch/flexmark/ast/Heading;
      12: invokeinterface #8,  3            // InterfaceMethod com/vladsch/flexmark/parser/InlineParser.parse:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/ast/Node;)V
      17: return

  public void closeBlock(com.vladsch.flexmark.parser.block.ParserState);
    Code:
       0: return
}
