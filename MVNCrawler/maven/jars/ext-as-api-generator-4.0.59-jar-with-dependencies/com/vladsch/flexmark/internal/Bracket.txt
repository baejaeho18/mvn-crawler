Compiled from "Bracket.java"
public class com.vladsch.flexmark.internal.Bracket {
  final com.vladsch.flexmark.ast.Text node;

  final int index;

  final boolean image;

  final com.vladsch.flexmark.util.sequence.BasedSequence input;

  final com.vladsch.flexmark.internal.Bracket previous;

  final com.vladsch.flexmark.internal.Delimiter previousDelimiter;

  boolean allowed;

  boolean bracketAfter;

  int getStartIndex();
    Code:
       0: aload_0
       1: getfield      #1                  // Field index:I
       4: ireturn

  int getEndIndex();
    Code:
       0: aload_0
       1: getfield      #2                  // Field image:Z
       4: ifeq          16
       7: aload_0
       8: getfield      #1                  // Field index:I
      11: iconst_2
      12: iadd
      13: goto          22
      16: aload_0
      17: getfield      #1                  // Field index:I
      20: iconst_1
      21: iadd
      22: ireturn

  static com.vladsch.flexmark.internal.Bracket link(com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.ast.Text, int, com.vladsch.flexmark.internal.Bracket, com.vladsch.flexmark.internal.Delimiter);
    Code:
       0: new           #3                  // class com/vladsch/flexmark/internal/Bracket
       3: dup
       4: aload_0
       5: aload_1
       6: iload_2
       7: aload_3
       8: aload         4
      10: iconst_0
      11: invokespecial #4                  // Method "<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/ast/Text;ILcom/vladsch/flexmark/internal/Bracket;Lcom/vladsch/flexmark/internal/Delimiter;Z)V
      14: areturn

  static com.vladsch.flexmark.internal.Bracket image(com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.ast.Text, int, com.vladsch.flexmark.internal.Bracket, com.vladsch.flexmark.internal.Delimiter);
    Code:
       0: new           #3                  // class com/vladsch/flexmark/internal/Bracket
       3: dup
       4: aload_0
       5: aload_1
       6: iload_2
       7: aload_3
       8: aload         4
      10: iconst_1
      11: invokespecial #4                  // Method "<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/ast/Text;ILcom/vladsch/flexmark/internal/Bracket;Lcom/vladsch/flexmark/internal/Delimiter;Z)V
      14: areturn

  private com.vladsch.flexmark.internal.Bracket(com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.ast.Text, int, com.vladsch.flexmark.internal.Bracket, com.vladsch.flexmark.internal.Delimiter, boolean);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #6                  // Field allowed:Z
       9: aload_0
      10: iconst_0
      11: putfield      #7                  // Field bracketAfter:Z
      14: aload_0
      15: aload_2
      16: putfield      #8                  // Field node:Lcom/vladsch/flexmark/ast/Text;
      19: aload_0
      20: iload_3
      21: putfield      #1                  // Field index:I
      24: aload_0
      25: iload         6
      27: putfield      #2                  // Field image:Z
      30: aload_0
      31: aload         4
      33: putfield      #9                  // Field previous:Lcom/vladsch/flexmark/internal/Bracket;
      36: aload_0
      37: aload         5
      39: putfield      #10                 // Field previousDelimiter:Lcom/vladsch/flexmark/internal/Delimiter;
      42: aload_0
      43: aload_1
      44: putfield      #11                 // Field input:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      47: return

  public boolean isStraddling(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_1
       1: invokeinterface #12,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.getStartOffset:()I
       6: istore_2
       7: aload_1
       8: invokeinterface #13,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.getEndOffset:()I
      13: istore_3
      14: aload_0
      15: getfield      #10                 // Field previousDelimiter:Lcom/vladsch/flexmark/internal/Delimiter;
      18: ifnonnull     25
      21: aconst_null
      22: goto          32
      25: aload_0
      26: getfield      #10                 // Field previousDelimiter:Lcom/vladsch/flexmark/internal/Delimiter;
      29: getfield      #14                 // Field com/vladsch/flexmark/internal/Delimiter.next:Lcom/vladsch/flexmark/internal/Delimiter;
      32: astore        4
      34: aload         4
      36: ifnull        81
      39: aload         4
      41: invokevirtual #15                 // Method com/vladsch/flexmark/internal/Delimiter.getEndIndex:()I
      44: istore        5
      46: iload         5
      48: iload_3
      49: if_icmplt     55
      52: goto          81
      55: iload         5
      57: iload_2
      58: if_icmplt     71
      61: aload         4
      63: getfield      #16                 // Field com/vladsch/flexmark/internal/Delimiter.matched:Z
      66: ifne          71
      69: iconst_1
      70: ireturn
      71: aload         4
      73: getfield      #14                 // Field com/vladsch/flexmark/internal/Delimiter.next:Lcom/vladsch/flexmark/internal/Delimiter;
      76: astore        4
      78: goto          34
      81: iconst_0
      82: ireturn
}
