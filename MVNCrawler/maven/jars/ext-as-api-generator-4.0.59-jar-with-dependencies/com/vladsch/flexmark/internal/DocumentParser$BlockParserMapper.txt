Compiled from "DocumentParser.java"
class com.vladsch.flexmark.internal.DocumentParser$BlockParserMapper implements com.vladsch.flexmark.util.Computable<com.vladsch.flexmark.ast.Block, com.vladsch.flexmark.parser.block.BlockParser> {
  public static final com.vladsch.flexmark.internal.DocumentParser$BlockParserMapper INSTANCE;

  private com.vladsch.flexmark.internal.DocumentParser$BlockParserMapper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public com.vladsch.flexmark.ast.Block compute(com.vladsch.flexmark.parser.block.BlockParser);
    Code:
       0: aload_1
       1: invokeinterface #2,  1            // InterfaceMethod com/vladsch/flexmark/parser/block/BlockParser.getBlock:()Lcom/vladsch/flexmark/ast/Block;
       6: areturn

  public java.lang.Object compute(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #3                  // class com/vladsch/flexmark/parser/block/BlockParser
       5: invokevirtual #4                  // Method compute:(Lcom/vladsch/flexmark/parser/block/BlockParser;)Lcom/vladsch/flexmark/ast/Block;
       8: areturn

  static {};
    Code:
       0: new           #5                  // class com/vladsch/flexmark/internal/DocumentParser$BlockParserMapper
       3: dup
       4: invokespecial #6                  // Method "<init>":()V
       7: putstatic     #7                  // Field INSTANCE:Lcom/vladsch/flexmark/internal/DocumentParser$BlockParserMapper;
      10: return
}
