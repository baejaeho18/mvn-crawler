Compiled from "HeadingParser.java"
class com.vladsch.flexmark.internal.HeadingParser$BlockFactory extends com.vladsch.flexmark.parser.block.AbstractBlockParserFactory {
  private final com.vladsch.flexmark.internal.HeadingOptions options;

  private final com.vladsch.flexmark.internal.HeadingParser$HeadingParsing myParsing;

  com.vladsch.flexmark.internal.HeadingParser$BlockFactory(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method com/vladsch/flexmark/parser/block/AbstractBlockParserFactory."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
       5: aload_0
       6: new           #2                  // class com/vladsch/flexmark/internal/HeadingOptions
       9: dup
      10: aload_1
      11: invokespecial #3                  // Method com/vladsch/flexmark/internal/HeadingOptions."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
      14: putfield      #4                  // Field options:Lcom/vladsch/flexmark/internal/HeadingOptions;
      17: aload_0
      18: new           #5                  // class com/vladsch/flexmark/internal/HeadingParser$HeadingParsing
      21: dup
      22: aload_1
      23: invokespecial #6                  // Method com/vladsch/flexmark/internal/HeadingParser$HeadingParsing."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
      26: putfield      #7                  // Field myParsing:Lcom/vladsch/flexmark/internal/HeadingParser$HeadingParsing;
      29: return

  public com.vladsch.flexmark.parser.block.BlockStart tryStart(com.vladsch.flexmark.parser.block.ParserState, com.vladsch.flexmark.parser.block.MatchedBlockParser);
    Code:
       0: aload_1
       1: invokeinterface #8,  1            // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.getIndent:()I
       6: iconst_4
       7: if_icmpge     30
      10: aload_0
      11: getfield      #4                  // Field options:Lcom/vladsch/flexmark/internal/HeadingOptions;
      14: getfield      #9                  // Field com/vladsch/flexmark/internal/HeadingOptions.noLeadSpace:Z
      17: ifeq          34
      20: aload_1
      21: invokeinterface #8,  1            // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.getIndent:()I
      26: iconst_1
      27: if_icmplt     34
      30: invokestatic  #10                 // Method com/vladsch/flexmark/parser/block/BlockStart.none:()Lcom/vladsch/flexmark/parser/block/BlockStart;
      33: areturn
      34: aload_1
      35: invokeinterface #11,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.getActiveBlockParser:()Lcom/vladsch/flexmark/parser/block/BlockParser;
      40: instanceof    #12                 // class com/vladsch/flexmark/internal/FencedCodeBlockParser
      43: ifeq          50
      46: invokestatic  #10                 // Method com/vladsch/flexmark/parser/block/BlockStart.none:()Lcom/vladsch/flexmark/parser/block/BlockStart;
      49: areturn
      50: aload_0
      51: getfield      #4                  // Field options:Lcom/vladsch/flexmark/internal/HeadingOptions;
      54: getfield      #13                 // Field com/vladsch/flexmark/internal/HeadingOptions.canInterruptItemParagraph:Z
      57: ifne          132
      60: aload_2
      61: invokeinterface #14,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/MatchedBlockParser.getBlockParser:()Lcom/vladsch/flexmark/parser/block/BlockParser;
      66: astore_3
      67: aload_3
      68: invokeinterface #15,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/BlockParser.isParagraphParser:()Z
      73: istore        4
      75: iload         4
      77: ifeq          120
      80: aload_3
      81: invokeinterface #16,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/BlockParser.getBlock:()Lcom/vladsch/flexmark/ast/Block;
      86: invokevirtual #17                 // Method com/vladsch/flexmark/ast/Block.getParent:()Lcom/vladsch/flexmark/ast/Block;
      89: instanceof    #18                 // class com/vladsch/flexmark/ast/ListItem
      92: ifeq          120
      95: aload_3
      96: invokeinterface #16,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/BlockParser.getBlock:()Lcom/vladsch/flexmark/ast/Block;
     101: aload_3
     102: invokeinterface #16,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/BlockParser.getBlock:()Lcom/vladsch/flexmark/ast/Block;
     107: invokevirtual #17                 // Method com/vladsch/flexmark/ast/Block.getParent:()Lcom/vladsch/flexmark/ast/Block;
     110: invokevirtual #19                 // Method com/vladsch/flexmark/ast/Block.getFirstChild:()Lcom/vladsch/flexmark/ast/Node;
     113: if_acmpne     120
     116: iconst_1
     117: goto          121
     120: iconst_0
     121: istore        5
     123: iload         5
     125: ifeq          132
     128: invokestatic  #10                 // Method com/vladsch/flexmark/parser/block/BlockStart.none:()Lcom/vladsch/flexmark/parser/block/BlockStart;
     131: areturn
     132: aload_1
     133: invokeinterface #20,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.getLine:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     138: astore_3
     139: aload_1
     140: invokeinterface #21,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.getNextNonSpaceIndex:()I
     145: istore        4
     147: aload_2
     148: invokeinterface #22,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/MatchedBlockParser.getParagraphContent:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     153: astore        5
     155: aload_3
     156: iload         4
     158: aload_3
     159: invokeinterface #23,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
     164: invokeinterface #24,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     169: astore        7
     171: aload_0
     172: getfield      #7                  // Field myParsing:Lcom/vladsch/flexmark/internal/HeadingParser$HeadingParsing;
     175: invokestatic  #25                 // Method com/vladsch/flexmark/internal/HeadingParser$HeadingParsing.access$000:(Lcom/vladsch/flexmark/internal/HeadingParser$HeadingParsing;)Ljava/util/regex/Pattern;
     178: aload         7
     180: invokevirtual #26                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
     183: astore        6
     185: aload         6
     187: invokevirtual #27                 // Method java/util/regex/Matcher.find:()Z
     190: ifeq          437
     193: iload         4
     195: aload         6
     197: iconst_0
     198: invokevirtual #28                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     201: invokevirtual #29                 // Method java/lang/String.length:()I
     204: iadd
     205: istore        8
     207: aload         6
     209: invokevirtual #30                 // Method java/util/regex/Matcher.start:()I
     212: istore        9
     214: aload         6
     216: invokevirtual #31                 // Method java/util/regex/Matcher.end:()I
     219: istore        10
     221: aload         7
     223: iload         9
     225: iload         10
     227: invokeinterface #24,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     232: invokeinterface #32,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.trim:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     237: astore        11
     239: aload         11
     241: invokeinterface #23,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
     246: istore        12
     248: new           #33                 // class com/vladsch/flexmark/ast/BlockContent
     251: dup
     252: invokespecial #34                 // Method com/vladsch/flexmark/ast/BlockContent."<init>":()V
     255: astore        13
     257: aload         13
     259: aload_1
     260: invokeinterface #35,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.getLineWithEOL:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     265: iload         8
     267: invokeinterface #36,  2           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(I)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     272: aload_1
     273: invokeinterface #8,  1            // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.getIndent:()I
     278: invokevirtual #37                 // Method com/vladsch/flexmark/ast/BlockContent.add:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;I)V
     281: aload         7
     283: iload         10
     285: invokeinterface #36,  2           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(I)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     290: astore        14
     292: aconst_null
     293: astore        15
     295: aload_0
     296: getfield      #7                  // Field myParsing:Lcom/vladsch/flexmark/internal/HeadingParser$HeadingParsing;
     299: invokestatic  #38                 // Method com/vladsch/flexmark/internal/HeadingParser$HeadingParsing.access$100:(Lcom/vladsch/flexmark/internal/HeadingParser$HeadingParsing;)Ljava/util/regex/Pattern;
     302: aload         14
     304: invokevirtual #26                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
     307: astore        6
     309: aload         6
     311: invokevirtual #27                 // Method java/util/regex/Matcher.find:()Z
     314: ifeq          361
     317: aload         6
     319: invokevirtual #30                 // Method java/util/regex/Matcher.start:()I
     322: istore        16
     324: aload         6
     326: invokevirtual #31                 // Method java/util/regex/Matcher.end:()I
     329: istore        17
     331: aload         14
     333: iload         16
     335: iload         17
     337: invokeinterface #24,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     342: invokeinterface #32,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.trim:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     347: astore        15
     349: aload         14
     351: iconst_0
     352: iload         16
     354: invokeinterface #24,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     359: astore        14
     361: new           #39                 // class com/vladsch/flexmark/internal/HeadingParser
     364: dup
     365: iload         12
     367: invokespecial #40                 // Method com/vladsch/flexmark/internal/HeadingParser."<init>":(I)V
     370: astore        16
     372: aload         16
     374: getfield      #41                 // Field com/vladsch/flexmark/internal/HeadingParser.block:Lcom/vladsch/flexmark/ast/Heading;
     377: aload         11
     379: invokevirtual #42                 // Method com/vladsch/flexmark/ast/Heading.setOpeningMarker:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
     382: aload         16
     384: getfield      #41                 // Field com/vladsch/flexmark/internal/HeadingParser.block:Lcom/vladsch/flexmark/ast/Heading;
     387: aload         14
     389: invokeinterface #32,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.trim:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     394: invokevirtual #43                 // Method com/vladsch/flexmark/ast/Heading.setText:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
     397: aload         16
     399: getfield      #41                 // Field com/vladsch/flexmark/internal/HeadingParser.block:Lcom/vladsch/flexmark/ast/Heading;
     402: aload         15
     404: invokevirtual #44                 // Method com/vladsch/flexmark/ast/Heading.setClosingMarker:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
     407: aload         16
     409: getfield      #41                 // Field com/vladsch/flexmark/internal/HeadingParser.block:Lcom/vladsch/flexmark/ast/Heading;
     412: invokevirtual #45                 // Method com/vladsch/flexmark/ast/Heading.setCharsFromContent:()V
     415: iconst_1
     416: anewarray     #46                 // class com/vladsch/flexmark/parser/block/BlockParser
     419: dup
     420: iconst_0
     421: aload         16
     423: aastore
     424: invokestatic  #47                 // Method com/vladsch/flexmark/parser/block/BlockStart.of:([Lcom/vladsch/flexmark/parser/block/BlockParser;)Lcom/vladsch/flexmark/parser/block/BlockStart;
     427: aload_3
     428: invokeinterface #23,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
     433: invokevirtual #48                 // Method com/vladsch/flexmark/parser/block/BlockStart.atIndex:(I)Lcom/vladsch/flexmark/parser/block/BlockStart;
     436: areturn
     437: aload_0
     438: getfield      #7                  // Field myParsing:Lcom/vladsch/flexmark/internal/HeadingParser$HeadingParsing;
     441: invokestatic  #49                 // Method com/vladsch/flexmark/internal/HeadingParser$HeadingParsing.access$200:(Lcom/vladsch/flexmark/internal/HeadingParser$HeadingParsing;)Ljava/util/regex/Pattern;
     444: aload         7
     446: invokevirtual #26                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
     449: dup
     450: astore        6
     452: invokevirtual #27                 // Method java/util/regex/Matcher.find:()Z
     455: ifeq          599
     458: aload         5
     460: ifnull        595
     463: aload         6
     465: iconst_0
     466: invokevirtual #28                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
     469: iconst_0
     470: invokevirtual #50                 // Method java/lang/String.charAt:(I)C
     473: bipush        61
     475: if_icmpne     482
     478: iconst_1
     479: goto          483
     482: iconst_2
     483: istore        8
     485: new           #33                 // class com/vladsch/flexmark/ast/BlockContent
     488: dup
     489: invokespecial #34                 // Method com/vladsch/flexmark/ast/BlockContent."<init>":()V
     492: astore        9
     494: aload         9
     496: aload_2
     497: invokeinterface #51,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/MatchedBlockParser.getParagraphLines:()Ljava/util/List;
     502: aload_2
     503: invokeinterface #52,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/MatchedBlockParser.getParagraphEolLengths:()Ljava/util/List;
     508: invokevirtual #53                 // Method com/vladsch/flexmark/ast/BlockContent.addAll:(Ljava/util/List;Ljava/util/List;)V
     511: aload         9
     513: invokevirtual #54                 // Method com/vladsch/flexmark/ast/BlockContent.getContents:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     516: invokeinterface #32,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.trim:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     521: astore        10
     523: aload_3
     524: invokeinterface #32,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.trim:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     529: astore        11
     531: new           #39                 // class com/vladsch/flexmark/internal/HeadingParser
     534: dup
     535: iload         8
     537: invokespecial #40                 // Method com/vladsch/flexmark/internal/HeadingParser."<init>":(I)V
     540: astore        12
     542: aload         12
     544: getfield      #41                 // Field com/vladsch/flexmark/internal/HeadingParser.block:Lcom/vladsch/flexmark/ast/Heading;
     547: aload         10
     549: invokevirtual #43                 // Method com/vladsch/flexmark/ast/Heading.setText:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
     552: aload         12
     554: getfield      #41                 // Field com/vladsch/flexmark/internal/HeadingParser.block:Lcom/vladsch/flexmark/ast/Heading;
     557: aload         11
     559: invokevirtual #44                 // Method com/vladsch/flexmark/ast/Heading.setClosingMarker:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
     562: aload         12
     564: getfield      #41                 // Field com/vladsch/flexmark/internal/HeadingParser.block:Lcom/vladsch/flexmark/ast/Heading;
     567: invokevirtual #45                 // Method com/vladsch/flexmark/ast/Heading.setCharsFromContent:()V
     570: iconst_1
     571: anewarray     #46                 // class com/vladsch/flexmark/parser/block/BlockParser
     574: dup
     575: iconst_0
     576: aload         12
     578: aastore
     579: invokestatic  #47                 // Method com/vladsch/flexmark/parser/block/BlockStart.of:([Lcom/vladsch/flexmark/parser/block/BlockParser;)Lcom/vladsch/flexmark/parser/block/BlockStart;
     582: aload_3
     583: invokeinterface #23,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
     588: invokevirtual #48                 // Method com/vladsch/flexmark/parser/block/BlockStart.atIndex:(I)Lcom/vladsch/flexmark/parser/block/BlockStart;
     591: invokevirtual #55                 // Method com/vladsch/flexmark/parser/block/BlockStart.replaceActiveBlockParser:()Lcom/vladsch/flexmark/parser/block/BlockStart;
     594: areturn
     595: invokestatic  #10                 // Method com/vladsch/flexmark/parser/block/BlockStart.none:()Lcom/vladsch/flexmark/parser/block/BlockStart;
     598: areturn
     599: invokestatic  #10                 // Method com/vladsch/flexmark/parser/block/BlockStart.none:()Lcom/vladsch/flexmark/parser/block/BlockStart;
     602: areturn
}
