Compiled from "ListBlockParser.java"
class com.vladsch.flexmark.internal.ListBlockParser$BlockFactory extends com.vladsch.flexmark.parser.block.AbstractBlockParserFactory {
  private final com.vladsch.flexmark.parser.ListOptions myOptions;

  static final boolean $assertionsDisabled;

  com.vladsch.flexmark.internal.ListBlockParser$BlockFactory(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method com/vladsch/flexmark/parser/block/AbstractBlockParserFactory."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
       5: aload_0
       6: aload_1
       7: invokestatic  #2                  // Method com/vladsch/flexmark/parser/ListOptions.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Lcom/vladsch/flexmark/parser/ListOptions;
      10: putfield      #3                  // Field myOptions:Lcom/vladsch/flexmark/parser/ListOptions;
      13: return

  public com.vladsch.flexmark.parser.block.BlockStart tryStart(com.vladsch.flexmark.parser.block.ParserState, com.vladsch.flexmark.parser.block.MatchedBlockParser);
    Code:
       0: aload_2
       1: invokeinterface #4,  1            // InterfaceMethod com/vladsch/flexmark/parser/block/MatchedBlockParser.getBlockParser:()Lcom/vladsch/flexmark/parser/block/BlockParser;
       6: astore_3
       7: aload_0
       8: getfield      #3                  // Field myOptions:Lcom/vladsch/flexmark/parser/ListOptions;
      11: invokevirtual #5                  // Method com/vladsch/flexmark/parser/ListOptions.getParserEmulationProfile:()Lcom/vladsch/flexmark/parser/ParserEmulationProfile;
      14: getfield      #6                  // Field com/vladsch/flexmark/parser/ParserEmulationProfile.family:Lcom/vladsch/flexmark/parser/ParserEmulationProfile;
      17: astore        4
      19: aload_0
      20: getfield      #3                  // Field myOptions:Lcom/vladsch/flexmark/parser/ListOptions;
      23: invokevirtual #7                  // Method com/vladsch/flexmark/parser/ListOptions.getNewItemCodeIndent:()I
      26: istore        5
      28: aload_3
      29: instanceof    #8                  // class com/vladsch/flexmark/internal/ListBlockParser
      32: ifeq          304
      35: aload_3
      36: checkcast     #8                  // class com/vladsch/flexmark/internal/ListBlockParser
      39: astore        6
      41: aload_1
      42: invokeinterface #9,  1            // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.getLine:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      47: aload         6
      49: invokestatic  #10                 // Method com/vladsch/flexmark/internal/ListBlockParser.access$000:(Lcom/vladsch/flexmark/internal/ListBlockParser;)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      52: if_acmpne     300
      55: aload         6
      57: invokestatic  #11                 // Method com/vladsch/flexmark/internal/ListBlockParser.access$100:(Lcom/vladsch/flexmark/internal/ListBlockParser;)Z
      60: ifeq          179
      63: aload_0
      64: getfield      #3                  // Field myOptions:Lcom/vladsch/flexmark/parser/ListOptions;
      67: iload         5
      69: aload_1
      70: invokestatic  #12                 // Method com/vladsch/flexmark/internal/ListBlockParser.parseListMarker:(Lcom/vladsch/flexmark/parser/ListOptions;ILcom/vladsch/flexmark/parser/block/ParserState;)Lcom/vladsch/flexmark/internal/ListBlockParser$ListData;
      73: astore        7
      75: new           #13                 // class com/vladsch/flexmark/internal/ListItemParser
      78: dup
      79: aload_0
      80: getfield      #3                  // Field myOptions:Lcom/vladsch/flexmark/parser/ListOptions;
      83: aload_1
      84: invokeinterface #14,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.getParsing:()Lcom/vladsch/flexmark/ast/util/Parsing;
      89: aload         7
      91: invokespecial #15                 // Method com/vladsch/flexmark/internal/ListItemParser."<init>":(Lcom/vladsch/flexmark/parser/ListOptions;Lcom/vladsch/flexmark/ast/util/Parsing;Lcom/vladsch/flexmark/internal/ListBlockParser$ListData;)V
      94: astore        8
      96: getstatic     #16                 // Field $assertionsDisabled:Z
      99: ifne          115
     102: aload         7
     104: ifnonnull     115
     107: new           #17                 // class java/lang/AssertionError
     110: dup
     111: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
     114: athrow
     115: aload         7
     117: getfield      #19                 // Field com/vladsch/flexmark/internal/ListBlockParser$ListData.markerColumn:I
     120: aload         7
     122: getfield      #20                 // Field com/vladsch/flexmark/internal/ListBlockParser$ListData.listMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     125: invokeinterface #21,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
     130: iadd
     131: aload         7
     133: getfield      #22                 // Field com/vladsch/flexmark/internal/ListBlockParser$ListData.contentOffset:I
     136: iadd
     137: istore        9
     139: new           #8                  // class com/vladsch/flexmark/internal/ListBlockParser
     142: dup
     143: aload_0
     144: getfield      #3                  // Field myOptions:Lcom/vladsch/flexmark/parser/ListOptions;
     147: aload         7
     149: aload         8
     151: invokespecial #23                 // Method com/vladsch/flexmark/internal/ListBlockParser."<init>":(Lcom/vladsch/flexmark/parser/ListOptions;Lcom/vladsch/flexmark/internal/ListBlockParser$ListData;Lcom/vladsch/flexmark/internal/ListItemParser;)V
     154: astore        6
     156: iconst_2
     157: anewarray     #24                 // class com/vladsch/flexmark/parser/block/BlockParser
     160: dup
     161: iconst_0
     162: aload         6
     164: aastore
     165: dup
     166: iconst_1
     167: aload         8
     169: aastore
     170: invokestatic  #25                 // Method com/vladsch/flexmark/parser/block/BlockStart.of:([Lcom/vladsch/flexmark/parser/block/BlockParser;)Lcom/vladsch/flexmark/parser/block/BlockStart;
     173: iload         9
     175: invokevirtual #26                 // Method com/vladsch/flexmark/parser/block/BlockStart.atColumn:(I)Lcom/vladsch/flexmark/parser/block/BlockStart;
     178: areturn
     179: aload         6
     181: invokestatic  #27                 // Method com/vladsch/flexmark/internal/ListBlockParser.access$200:(Lcom/vladsch/flexmark/internal/ListBlockParser;)Z
     184: ifeq          289
     187: aload_0
     188: getfield      #3                  // Field myOptions:Lcom/vladsch/flexmark/parser/ListOptions;
     191: iload         5
     193: aload_1
     194: invokestatic  #12                 // Method com/vladsch/flexmark/internal/ListBlockParser.parseListMarker:(Lcom/vladsch/flexmark/parser/ListOptions;ILcom/vladsch/flexmark/parser/block/ParserState;)Lcom/vladsch/flexmark/internal/ListBlockParser$ListData;
     197: astore        7
     199: new           #13                 // class com/vladsch/flexmark/internal/ListItemParser
     202: dup
     203: aload_0
     204: getfield      #3                  // Field myOptions:Lcom/vladsch/flexmark/parser/ListOptions;
     207: aload_1
     208: invokeinterface #14,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.getParsing:()Lcom/vladsch/flexmark/ast/util/Parsing;
     213: aload         7
     215: invokespecial #15                 // Method com/vladsch/flexmark/internal/ListItemParser."<init>":(Lcom/vladsch/flexmark/parser/ListOptions;Lcom/vladsch/flexmark/ast/util/Parsing;Lcom/vladsch/flexmark/internal/ListBlockParser$ListData;)V
     218: astore        8
     220: getstatic     #16                 // Field $assertionsDisabled:Z
     223: ifne          239
     226: aload         7
     228: ifnonnull     239
     231: new           #17                 // class java/lang/AssertionError
     234: dup
     235: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
     238: athrow
     239: aload         7
     241: getfield      #19                 // Field com/vladsch/flexmark/internal/ListBlockParser$ListData.markerColumn:I
     244: aload         7
     246: getfield      #20                 // Field com/vladsch/flexmark/internal/ListBlockParser$ListData.listMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     249: invokeinterface #21,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
     254: iadd
     255: aload         7
     257: getfield      #22                 // Field com/vladsch/flexmark/internal/ListBlockParser$ListData.contentOffset:I
     260: iadd
     261: istore        9
     263: aload         6
     265: aload         8
     267: invokestatic  #28                 // Method com/vladsch/flexmark/internal/ListBlockParser.access$302:(Lcom/vladsch/flexmark/internal/ListBlockParser;Lcom/vladsch/flexmark/internal/ListItemParser;)Lcom/vladsch/flexmark/internal/ListItemParser;
     270: pop
     271: iconst_1
     272: anewarray     #24                 // class com/vladsch/flexmark/parser/block/BlockParser
     275: dup
     276: iconst_0
     277: aload         8
     279: aastore
     280: invokestatic  #25                 // Method com/vladsch/flexmark/parser/block/BlockStart.of:([Lcom/vladsch/flexmark/parser/block/BlockParser;)Lcom/vladsch/flexmark/parser/block/BlockStart;
     283: iload         9
     285: invokevirtual #26                 // Method com/vladsch/flexmark/parser/block/BlockStart.atColumn:(I)Lcom/vladsch/flexmark/parser/block/BlockStart;
     288: areturn
     289: aload         6
     291: aconst_null
     292: invokestatic  #29                 // Method com/vladsch/flexmark/internal/ListBlockParser.access$002:(Lcom/vladsch/flexmark/internal/ListBlockParser;Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     295: pop
     296: invokestatic  #30                 // Method com/vladsch/flexmark/parser/block/BlockStart.none:()Lcom/vladsch/flexmark/parser/block/BlockStart;
     299: areturn
     300: invokestatic  #30                 // Method com/vladsch/flexmark/parser/block/BlockStart.none:()Lcom/vladsch/flexmark/parser/block/BlockStart;
     303: areturn
     304: aload_3
     305: invokeinterface #31,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/BlockParser.getBlock:()Lcom/vladsch/flexmark/ast/Block;
     310: iconst_1
     311: anewarray     #32                 // class java/lang/Class
     314: dup
     315: iconst_0
     316: ldc           #33                 // class com/vladsch/flexmark/ast/ListBlock
     318: aastore
     319: invokevirtual #34                 // Method com/vladsch/flexmark/ast/Block.getAncestorOfType:([Ljava/lang/Class;)Lcom/vladsch/flexmark/ast/Node;
     322: checkcast     #33                 // class com/vladsch/flexmark/ast/ListBlock
     325: astore        6
     327: aload         6
     329: ifnull        378
     332: aload_1
     333: aload         6
     335: invokeinterface #35,  2           // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.getActiveBlockParser:(Lcom/vladsch/flexmark/ast/Block;)Lcom/vladsch/flexmark/parser/block/BlockParser;
     340: checkcast     #8                  // class com/vladsch/flexmark/internal/ListBlockParser
     343: astore        7
     345: aload         7
     347: invokestatic  #10                 // Method com/vladsch/flexmark/internal/ListBlockParser.access$000:(Lcom/vladsch/flexmark/internal/ListBlockParser;)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     350: aload_1
     351: invokeinterface #9,  1            // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.getLine:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     356: if_acmpne     378
     359: aload         7
     361: invokestatic  #36                 // Method com/vladsch/flexmark/internal/ListBlockParser.access$400:(Lcom/vladsch/flexmark/internal/ListBlockParser;)Z
     364: ifeq          378
     367: aload         7
     369: aconst_null
     370: invokestatic  #29                 // Method com/vladsch/flexmark/internal/ListBlockParser.access$002:(Lcom/vladsch/flexmark/internal/ListBlockParser;Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     373: pop
     374: invokestatic  #30                 // Method com/vladsch/flexmark/parser/block/BlockStart.none:()Lcom/vladsch/flexmark/parser/block/BlockStart;
     377: areturn
     378: aload         4
     380: getstatic     #37                 // Field com/vladsch/flexmark/parser/ParserEmulationProfile.COMMONMARK:Lcom/vladsch/flexmark/parser/ParserEmulationProfile;
     383: if_acmpne     413
     386: aload_1
     387: invokeinterface #38,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.getIndent:()I
     392: istore        6
     394: iload         6
     396: aload_0
     397: getfield      #3                  // Field myOptions:Lcom/vladsch/flexmark/parser/ListOptions;
     400: invokevirtual #39                 // Method com/vladsch/flexmark/parser/ListOptions.getCodeIndent:()I
     403: if_icmplt     410
     406: invokestatic  #30                 // Method com/vladsch/flexmark/parser/block/BlockStart.none:()Lcom/vladsch/flexmark/parser/block/BlockStart;
     409: areturn
     410: goto          515
     413: aload         4
     415: getstatic     #40                 // Field com/vladsch/flexmark/parser/ParserEmulationProfile.FIXED_INDENT:Lcom/vladsch/flexmark/parser/ParserEmulationProfile;
     418: if_acmpne     448
     421: aload_1
     422: invokeinterface #38,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.getIndent:()I
     427: istore        6
     429: iload         6
     431: aload_0
     432: getfield      #3                  // Field myOptions:Lcom/vladsch/flexmark/parser/ListOptions;
     435: invokevirtual #39                 // Method com/vladsch/flexmark/parser/ListOptions.getCodeIndent:()I
     438: if_icmplt     445
     441: invokestatic  #30                 // Method com/vladsch/flexmark/parser/block/BlockStart.none:()Lcom/vladsch/flexmark/parser/block/BlockStart;
     444: areturn
     445: goto          515
     448: aload         4
     450: getstatic     #41                 // Field com/vladsch/flexmark/parser/ParserEmulationProfile.KRAMDOWN:Lcom/vladsch/flexmark/parser/ParserEmulationProfile;
     453: if_acmpne     483
     456: aload_1
     457: invokeinterface #38,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.getIndent:()I
     462: istore        6
     464: iload         6
     466: aload_0
     467: getfield      #3                  // Field myOptions:Lcom/vladsch/flexmark/parser/ListOptions;
     470: invokevirtual #42                 // Method com/vladsch/flexmark/parser/ListOptions.getItemIndent:()I
     473: if_icmplt     480
     476: invokestatic  #30                 // Method com/vladsch/flexmark/parser/block/BlockStart.none:()Lcom/vladsch/flexmark/parser/block/BlockStart;
     479: areturn
     480: goto          515
     483: aload         4
     485: getstatic     #43                 // Field com/vladsch/flexmark/parser/ParserEmulationProfile.MARKDOWN:Lcom/vladsch/flexmark/parser/ParserEmulationProfile;
     488: if_acmpne     515
     491: aload_1
     492: invokeinterface #38,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.getIndent:()I
     497: istore        6
     499: iload         6
     501: aload_0
     502: getfield      #3                  // Field myOptions:Lcom/vladsch/flexmark/parser/ListOptions;
     505: invokevirtual #42                 // Method com/vladsch/flexmark/parser/ListOptions.getItemIndent:()I
     508: if_icmplt     515
     511: invokestatic  #30                 // Method com/vladsch/flexmark/parser/block/BlockStart.none:()Lcom/vladsch/flexmark/parser/block/BlockStart;
     514: areturn
     515: aload_0
     516: getfield      #3                  // Field myOptions:Lcom/vladsch/flexmark/parser/ListOptions;
     519: iload         5
     521: aload_1
     522: invokestatic  #12                 // Method com/vladsch/flexmark/internal/ListBlockParser.parseListMarker:(Lcom/vladsch/flexmark/parser/ListOptions;ILcom/vladsch/flexmark/parser/block/ParserState;)Lcom/vladsch/flexmark/internal/ListBlockParser$ListData;
     525: astore        6
     527: aload         6
     529: ifnull        704
     532: aload         6
     534: getfield      #19                 // Field com/vladsch/flexmark/internal/ListBlockParser$ListData.markerColumn:I
     537: aload         6
     539: getfield      #20                 // Field com/vladsch/flexmark/internal/ListBlockParser$ListData.listMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     542: invokeinterface #21,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
     547: iadd
     548: aload         6
     550: getfield      #22                 // Field com/vladsch/flexmark/internal/ListBlockParser$ListData.contentOffset:I
     553: iadd
     554: istore        7
     556: aload_3
     557: invokeinterface #44,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/BlockParser.isParagraphParser:()Z
     562: istore        8
     564: iload         8
     566: ifeq          609
     569: aload_3
     570: invokeinterface #31,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/BlockParser.getBlock:()Lcom/vladsch/flexmark/ast/Block;
     575: invokevirtual #45                 // Method com/vladsch/flexmark/ast/Block.getParent:()Lcom/vladsch/flexmark/ast/Block;
     578: instanceof    #46                 // class com/vladsch/flexmark/ast/ListItem
     581: ifeq          609
     584: aload_3
     585: invokeinterface #31,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/BlockParser.getBlock:()Lcom/vladsch/flexmark/ast/Block;
     590: aload_3
     591: invokeinterface #31,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/BlockParser.getBlock:()Lcom/vladsch/flexmark/ast/Block;
     596: invokevirtual #45                 // Method com/vladsch/flexmark/ast/Block.getParent:()Lcom/vladsch/flexmark/ast/Block;
     599: invokevirtual #47                 // Method com/vladsch/flexmark/ast/Block.getFirstChild:()Lcom/vladsch/flexmark/ast/Node;
     602: if_acmpne     609
     605: iconst_1
     606: goto          610
     609: iconst_0
     610: istore        9
     612: iload         8
     614: ifeq          643
     617: aload_0
     618: getfield      #3                  // Field myOptions:Lcom/vladsch/flexmark/parser/ListOptions;
     621: aload         6
     623: getfield      #48                 // Field com/vladsch/flexmark/internal/ListBlockParser$ListData.listBlock:Lcom/vladsch/flexmark/ast/ListBlock;
     626: aload         6
     628: getfield      #49                 // Field com/vladsch/flexmark/internal/ListBlockParser$ListData.isEmpty:Z
     631: iload         9
     633: invokevirtual #50                 // Method com/vladsch/flexmark/parser/ListOptions.canInterrupt:(Lcom/vladsch/flexmark/ast/ListBlock;ZZ)Z
     636: ifne          643
     639: invokestatic  #30                 // Method com/vladsch/flexmark/parser/block/BlockStart.none:()Lcom/vladsch/flexmark/parser/block/BlockStart;
     642: areturn
     643: new           #13                 // class com/vladsch/flexmark/internal/ListItemParser
     646: dup
     647: aload_0
     648: getfield      #3                  // Field myOptions:Lcom/vladsch/flexmark/parser/ListOptions;
     651: aload_1
     652: invokeinterface #14,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.getParsing:()Lcom/vladsch/flexmark/ast/util/Parsing;
     657: aload         6
     659: invokespecial #15                 // Method com/vladsch/flexmark/internal/ListItemParser."<init>":(Lcom/vladsch/flexmark/parser/ListOptions;Lcom/vladsch/flexmark/ast/util/Parsing;Lcom/vladsch/flexmark/internal/ListBlockParser$ListData;)V
     662: astore        10
     664: new           #8                  // class com/vladsch/flexmark/internal/ListBlockParser
     667: dup
     668: aload_0
     669: getfield      #3                  // Field myOptions:Lcom/vladsch/flexmark/parser/ListOptions;
     672: aload         6
     674: aload         10
     676: invokespecial #23                 // Method com/vladsch/flexmark/internal/ListBlockParser."<init>":(Lcom/vladsch/flexmark/parser/ListOptions;Lcom/vladsch/flexmark/internal/ListBlockParser$ListData;Lcom/vladsch/flexmark/internal/ListItemParser;)V
     679: astore        11
     681: iconst_2
     682: anewarray     #24                 // class com/vladsch/flexmark/parser/block/BlockParser
     685: dup
     686: iconst_0
     687: aload         11
     689: aastore
     690: dup
     691: iconst_1
     692: aload         10
     694: aastore
     695: invokestatic  #25                 // Method com/vladsch/flexmark/parser/block/BlockStart.of:([Lcom/vladsch/flexmark/parser/block/BlockParser;)Lcom/vladsch/flexmark/parser/block/BlockStart;
     698: iload         7
     700: invokevirtual #26                 // Method com/vladsch/flexmark/parser/block/BlockStart.atColumn:(I)Lcom/vladsch/flexmark/parser/block/BlockStart;
     703: areturn
     704: invokestatic  #30                 // Method com/vladsch/flexmark/parser/block/BlockStart.none:()Lcom/vladsch/flexmark/parser/block/BlockStart;
     707: areturn

  static {};
    Code:
       0: ldc           #8                  // class com/vladsch/flexmark/internal/ListBlockParser
       2: invokevirtual #51                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #16                 // Field $assertionsDisabled:Z
      16: return
}
