Compiled from "PostProcessorManager.java"
class com.vladsch.flexmark.internal.PostProcessorManager$PostProcessDependencyHandler extends com.vladsch.flexmark.util.dependency.DependencyHandler<com.vladsch.flexmark.parser.PostProcessorFactory, com.vladsch.flexmark.internal.PostProcessorManager$PostProcessorDependencyStage, com.vladsch.flexmark.internal.PostProcessorManager$PostProcessorDependencies> {
  private com.vladsch.flexmark.internal.PostProcessorManager$PostProcessDependencyHandler();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/vladsch/flexmark/util/dependency/DependencyHandler."<init>":()V
       4: return

  protected java.lang.Class<? extends com.vladsch.flexmark.parser.PostProcessorFactory> getDependentClass(com.vladsch.flexmark.parser.PostProcessorFactory);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: areturn

  protected com.vladsch.flexmark.internal.PostProcessorManager$PostProcessorDependencies createResolvedDependencies(java.util.List<com.vladsch.flexmark.internal.PostProcessorManager$PostProcessorDependencyStage>);
    Code:
       0: new           #4                  // class com/vladsch/flexmark/internal/PostProcessorManager$PostProcessorDependencies
       3: dup
       4: aload_1
       5: invokespecial #5                  // Method com/vladsch/flexmark/internal/PostProcessorManager$PostProcessorDependencies."<init>":(Ljava/util/List;)V
       8: areturn

  protected com.vladsch.flexmark.internal.PostProcessorManager$PostProcessorDependencyStage createStage(java.util.List<com.vladsch.flexmark.parser.PostProcessorFactory>);
    Code:
       0: new           #6                  // class com/vladsch/flexmark/internal/PostProcessorManager$PostProcessorDependencyStage
       3: dup
       4: aload_1
       5: invokespecial #7                  // Method com/vladsch/flexmark/internal/PostProcessorManager$PostProcessorDependencyStage."<init>":(Ljava/util/List;)V
       8: areturn

  protected com.vladsch.flexmark.util.dependency.DependentItemMap<com.vladsch.flexmark.parser.PostProcessorFactory> prioritize(com.vladsch.flexmark.util.dependency.DependentItemMap<com.vladsch.flexmark.parser.PostProcessorFactory>);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method com/vladsch/flexmark/util/dependency/DependentItemMap.entries:()Ljava/util/List;
       4: astore_2
       5: aload_2
       6: new           #9                  // class com/vladsch/flexmark/internal/PostProcessorManager$PostProcessDependencyHandler$1
       9: dup
      10: aload_0
      11: invokespecial #10                 // Method com/vladsch/flexmark/internal/PostProcessorManager$PostProcessDependencyHandler$1."<init>":(Lcom/vladsch/flexmark/internal/PostProcessorManager$PostProcessDependencyHandler;)V
      14: invokestatic  #11                 // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      17: aload_1
      18: invokevirtual #12                 // Method com/vladsch/flexmark/util/dependency/DependentItemMap.keySet:()Lcom/vladsch/flexmark/util/collection/OrderedSet;
      21: aload_2
      22: invokevirtual #13                 // Method com/vladsch/flexmark/util/collection/OrderedSet.keyDifferenceBitSet:(Ljava/lang/Iterable;)Ljava/util/BitSet;
      25: astore_3
      26: aload_3
      27: invokevirtual #14                 // Method java/util/BitSet.isEmpty:()Z
      30: ifeq          35
      33: aload_1
      34: areturn
      35: new           #15                 // class com/vladsch/flexmark/util/dependency/DependentItemMap
      38: dup
      39: aload_2
      40: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      45: invokespecial #17                 // Method com/vladsch/flexmark/util/dependency/DependentItemMap."<init>":(I)V
      48: astore        4
      50: aload         4
      52: aload_2
      53: invokevirtual #18                 // Method com/vladsch/flexmark/util/dependency/DependentItemMap.addAll:(Ljava/util/Collection;)V
      56: aload         4
      58: areturn

  protected com.vladsch.flexmark.util.dependency.ResolvedDependencies createResolvedDependencies(java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method createResolvedDependencies:(Ljava/util/List;)Lcom/vladsch/flexmark/internal/PostProcessorManager$PostProcessorDependencies;
       5: areturn

  protected java.lang.Class getDependentClass(com.vladsch.flexmark.util.dependency.Dependent);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class com/vladsch/flexmark/parser/PostProcessorFactory
       5: invokevirtual #21                 // Method getDependentClass:(Lcom/vladsch/flexmark/parser/PostProcessorFactory;)Ljava/lang/Class;
       8: areturn

  protected java.lang.Object createStage(java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method createStage:(Ljava/util/List;)Lcom/vladsch/flexmark/internal/PostProcessorManager$PostProcessorDependencyStage;
       5: areturn

  com.vladsch.flexmark.internal.PostProcessorManager$PostProcessDependencyHandler(com.vladsch.flexmark.internal.PostProcessorManager$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
