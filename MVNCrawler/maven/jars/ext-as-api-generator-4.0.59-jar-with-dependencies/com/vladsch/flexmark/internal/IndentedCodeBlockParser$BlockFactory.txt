Compiled from "IndentedCodeBlockParser.java"
public class com.vladsch.flexmark.internal.IndentedCodeBlockParser$BlockFactory extends com.vladsch.flexmark.parser.block.AbstractBlockParserFactory {
  private com.vladsch.flexmark.internal.IndentedCodeBlockParser$BlockFactory(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method com/vladsch/flexmark/parser/block/AbstractBlockParserFactory."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
       5: return

  public com.vladsch.flexmark.parser.block.BlockStart tryStart(com.vladsch.flexmark.parser.block.ParserState, com.vladsch.flexmark.parser.block.MatchedBlockParser);
    Code:
       0: aload_1
       1: invokeinterface #3,  1            // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.getIndent:()I
       6: aload_1
       7: invokeinterface #4,  1            // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.getParsing:()Lcom/vladsch/flexmark/ast/util/Parsing;
      12: getfield      #5                  // Field com/vladsch/flexmark/ast/util/Parsing.CODE_BLOCK_INDENT:I
      15: if_icmplt     87
      18: aload_1
      19: invokeinterface #6,  1            // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.isBlank:()Z
      24: ifne          87
      27: aload_1
      28: invokeinterface #7,  1            // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.getActiveBlockParser:()Lcom/vladsch/flexmark/parser/block/BlockParser;
      33: invokeinterface #8,  1            // InterfaceMethod com/vladsch/flexmark/parser/block/BlockParser.getBlock:()Lcom/vladsch/flexmark/ast/Block;
      38: instanceof    #9                  // class com/vladsch/flexmark/ast/Paragraph
      41: ifne          87
      44: iconst_1
      45: anewarray     #10                 // class com/vladsch/flexmark/parser/block/BlockParser
      48: dup
      49: iconst_0
      50: new           #11                 // class com/vladsch/flexmark/internal/IndentedCodeBlockParser
      53: dup
      54: aload_1
      55: invokeinterface #12,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.getProperties:()Lcom/vladsch/flexmark/util/options/MutableDataHolder;
      60: invokespecial #13                 // Method com/vladsch/flexmark/internal/IndentedCodeBlockParser."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
      63: aastore
      64: invokestatic  #14                 // Method com/vladsch/flexmark/parser/block/BlockStart.of:([Lcom/vladsch/flexmark/parser/block/BlockParser;)Lcom/vladsch/flexmark/parser/block/BlockStart;
      67: aload_1
      68: invokeinterface #15,  1           // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.getColumn:()I
      73: aload_1
      74: invokeinterface #4,  1            // InterfaceMethod com/vladsch/flexmark/parser/block/ParserState.getParsing:()Lcom/vladsch/flexmark/ast/util/Parsing;
      79: getfield      #5                  // Field com/vladsch/flexmark/ast/util/Parsing.CODE_BLOCK_INDENT:I
      82: iadd
      83: invokevirtual #16                 // Method com/vladsch/flexmark/parser/block/BlockStart.atColumn:(I)Lcom/vladsch/flexmark/parser/block/BlockStart;
      86: areturn
      87: invokestatic  #17                 // Method com/vladsch/flexmark/parser/block/BlockStart.none:()Lcom/vladsch/flexmark/parser/block/BlockStart;
      90: areturn

  com.vladsch.flexmark.internal.IndentedCodeBlockParser$BlockFactory(com.vladsch.flexmark.util.options.DataHolder, com.vladsch.flexmark.internal.IndentedCodeBlockParser$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
       5: return
}
