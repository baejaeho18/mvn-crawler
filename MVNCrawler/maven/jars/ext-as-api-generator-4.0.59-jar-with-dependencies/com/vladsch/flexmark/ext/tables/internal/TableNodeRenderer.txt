Compiled from "TableNodeRenderer.java"
public class com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer implements com.vladsch.flexmark.html.renderer.NodeRenderer {
  private final com.vladsch.flexmark.ext.tables.internal.TableParserOptions options;

  public com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #9                  // class com/vladsch/flexmark/ext/tables/internal/TableParserOptions
       8: dup
       9: aload_1
      10: invokespecial #10                 // Method com/vladsch/flexmark/ext/tables/internal/TableParserOptions."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
      13: putfield      #11                 // Field options:Lcom/vladsch/flexmark/ext/tables/internal/TableParserOptions;
      16: return

  public java.util.Set<com.vladsch.flexmark.html.renderer.NodeRenderingHandler<?>> getNodeRenderingHandlers();
    Code:
       0: new           #12                 // class java/util/HashSet
       3: dup
       4: bipush        7
       6: anewarray     #13                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
       9: dup
      10: iconst_0
      11: new           #13                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
      14: dup
      15: ldc           #14                 // class com/vladsch/flexmark/ext/tables/TableBlock
      17: new           #15                 // class com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$1
      20: dup
      21: aload_0
      22: invokespecial #16                 // Method com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$1."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableNodeRenderer;)V
      25: invokespecial #17                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
      28: aastore
      29: dup
      30: iconst_1
      31: new           #13                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
      34: dup
      35: ldc           #18                 // class com/vladsch/flexmark/ext/tables/TableHead
      37: new           #19                 // class com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$2
      40: dup
      41: aload_0
      42: invokespecial #20                 // Method com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$2."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableNodeRenderer;)V
      45: invokespecial #17                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
      48: aastore
      49: dup
      50: iconst_2
      51: new           #13                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
      54: dup
      55: ldc           #21                 // class com/vladsch/flexmark/ext/tables/TableSeparator
      57: new           #22                 // class com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$3
      60: dup
      61: aload_0
      62: invokespecial #23                 // Method com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$3."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableNodeRenderer;)V
      65: invokespecial #17                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
      68: aastore
      69: dup
      70: iconst_3
      71: new           #13                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
      74: dup
      75: ldc           #24                 // class com/vladsch/flexmark/ext/tables/TableBody
      77: new           #25                 // class com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$4
      80: dup
      81: aload_0
      82: invokespecial #26                 // Method com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$4."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableNodeRenderer;)V
      85: invokespecial #17                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
      88: aastore
      89: dup
      90: iconst_4
      91: new           #13                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
      94: dup
      95: ldc           #27                 // class com/vladsch/flexmark/ext/tables/TableRow
      97: new           #28                 // class com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$5
     100: dup
     101: aload_0
     102: invokespecial #29                 // Method com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$5."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableNodeRenderer;)V
     105: invokespecial #17                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     108: aastore
     109: dup
     110: iconst_5
     111: new           #13                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     114: dup
     115: ldc           #30                 // class com/vladsch/flexmark/ext/tables/TableCell
     117: new           #31                 // class com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$6
     120: dup
     121: aload_0
     122: invokespecial #32                 // Method com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$6."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableNodeRenderer;)V
     125: invokespecial #17                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     128: aastore
     129: dup
     130: bipush        6
     132: new           #13                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     135: dup
     136: ldc           #33                 // class com/vladsch/flexmark/ext/tables/TableCaption
     138: new           #34                 // class com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$7
     141: dup
     142: aload_0
     143: invokespecial #35                 // Method com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$7."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableNodeRenderer;)V
     146: invokespecial #17                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     149: aastore
     150: invokestatic  #36                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     153: invokespecial #37                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     156: areturn

  private void render(com.vladsch.flexmark.ext.tables.TableBlock, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: getfield      #11                 // Field options:Lcom/vladsch/flexmark/ext/tables/internal/TableParserOptions;
       4: getfield      #38                 // Field com/vladsch/flexmark/ext/tables/internal/TableParserOptions.className:Ljava/lang/String;
       7: invokevirtual #39                 // Method java/lang/String.isEmpty:()Z
      10: ifne          27
      13: aload_3
      14: ldc           #40                 // String class
      16: aload_0
      17: getfield      #11                 // Field options:Lcom/vladsch/flexmark/ext/tables/internal/TableParserOptions;
      20: getfield      #38                 // Field com/vladsch/flexmark/ext/tables/internal/TableParserOptions.className:Ljava/lang/String;
      23: invokevirtual #41                 // Method com/vladsch/flexmark/html/HtmlWriter.attr:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      26: pop
      27: aload_3
      28: aload_1
      29: invokevirtual #42                 // Method com/vladsch/flexmark/ext/tables/TableBlock.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      32: invokevirtual #43                 // Method com/vladsch/flexmark/html/HtmlWriter.srcPosWithEOL:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
      35: invokevirtual #44                 // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:()Lcom/vladsch/flexmark/html/HtmlWriter;
      38: ldc           #45                 // String table
      40: new           #46                 // class com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$8
      43: dup
      44: aload_0
      45: aload_2
      46: aload_1
      47: invokespecial #47                 // Method com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$8."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableNodeRenderer;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/ext/tables/TableBlock;)V
      50: invokevirtual #48                 // Method com/vladsch/flexmark/html/HtmlWriter.tagLineIndent:(Ljava/lang/CharSequence;Ljava/lang/Runnable;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      53: pop
      54: return

  private void render(com.vladsch.flexmark.ext.tables.TableHead, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_3
       1: invokevirtual #44                 // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:()Lcom/vladsch/flexmark/html/HtmlWriter;
       4: invokevirtual #49                 // Method com/vladsch/flexmark/html/HtmlWriter.withCondLine:()Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
       7: checkcast     #50                 // class com/vladsch/flexmark/html/HtmlWriter
      10: ldc           #51                 // String thead
      12: new           #52                 // class com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$9
      15: dup
      16: aload_0
      17: aload_2
      18: aload_1
      19: invokespecial #53                 // Method com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$9."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableNodeRenderer;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/ext/tables/TableHead;)V
      22: invokevirtual #54                 // Method com/vladsch/flexmark/html/HtmlWriter.tagIndent:(Ljava/lang/CharSequence;Ljava/lang/Runnable;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      25: pop
      26: return

  private void render(com.vladsch.flexmark.ext.tables.TableSeparator, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: return

  private void render(com.vladsch.flexmark.ext.tables.TableBody, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_3
       1: invokevirtual #44                 // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:()Lcom/vladsch/flexmark/html/HtmlWriter;
       4: invokevirtual #49                 // Method com/vladsch/flexmark/html/HtmlWriter.withCondLine:()Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
       7: checkcast     #50                 // class com/vladsch/flexmark/html/HtmlWriter
      10: ldc           #55                 // String tbody
      12: new           #56                 // class com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$10
      15: dup
      16: aload_0
      17: aload_2
      18: aload_1
      19: invokespecial #57                 // Method com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$10."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableNodeRenderer;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/ext/tables/TableBody;)V
      22: invokevirtual #54                 // Method com/vladsch/flexmark/html/HtmlWriter.tagIndent:(Ljava/lang/CharSequence;Ljava/lang/Runnable;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      25: pop
      26: return

  private void render(com.vladsch.flexmark.ext.tables.TableRow, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #58                 // Method com/vladsch/flexmark/ext/tables/TableRow.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: invokevirtual #59                 // Method com/vladsch/flexmark/html/HtmlWriter.srcPos:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
       8: invokevirtual #44                 // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:()Lcom/vladsch/flexmark/html/HtmlWriter;
      11: ldc           #60                 // String tr
      13: new           #61                 // class com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$11
      16: dup
      17: aload_0
      18: aload_2
      19: aload_1
      20: invokespecial #62                 // Method com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$11."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableNodeRenderer;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/ext/tables/TableRow;)V
      23: invokevirtual #63                 // Method com/vladsch/flexmark/html/HtmlWriter.tagLine:(Ljava/lang/CharSequence;Ljava/lang/Runnable;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      26: pop
      27: return

  private void render(com.vladsch.flexmark.ext.tables.TableCaption, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #64                 // Method com/vladsch/flexmark/ext/tables/TableCaption.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: invokevirtual #59                 // Method com/vladsch/flexmark/html/HtmlWriter.srcPos:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
       8: invokevirtual #44                 // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:()Lcom/vladsch/flexmark/html/HtmlWriter;
      11: ldc           #65                 // String caption
      13: new           #66                 // class com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$12
      16: dup
      17: aload_0
      18: aload_2
      19: aload_1
      20: invokespecial #67                 // Method com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$12."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableNodeRenderer;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/ext/tables/TableCaption;)V
      23: invokevirtual #63                 // Method com/vladsch/flexmark/html/HtmlWriter.tagLine:(Ljava/lang/CharSequence;Ljava/lang/Runnable;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      26: pop
      27: return

  private void render(com.vladsch.flexmark.ext.tables.TableCell, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_1
       1: invokevirtual #68                 // Method com/vladsch/flexmark/ext/tables/TableCell.isHeader:()Z
       4: ifeq          12
       7: ldc           #69                 // String th
       9: goto          14
      12: ldc           #70                 // String td
      14: astore        4
      16: aload_1
      17: invokevirtual #71                 // Method com/vladsch/flexmark/ext/tables/TableCell.getAlignment:()Lcom/vladsch/flexmark/ext/tables/TableCell$Alignment;
      20: ifnull        37
      23: aload_3
      24: ldc           #72                 // String align
      26: aload_1
      27: invokevirtual #71                 // Method com/vladsch/flexmark/ext/tables/TableCell.getAlignment:()Lcom/vladsch/flexmark/ext/tables/TableCell$Alignment;
      30: invokestatic  #73                 // Method getAlignValue:(Lcom/vladsch/flexmark/ext/tables/TableCell$Alignment;)Ljava/lang/String;
      33: invokevirtual #41                 // Method com/vladsch/flexmark/html/HtmlWriter.attr:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      36: pop
      37: aload_0
      38: getfield      #11                 // Field options:Lcom/vladsch/flexmark/ext/tables/internal/TableParserOptions;
      41: getfield      #74                 // Field com/vladsch/flexmark/ext/tables/internal/TableParserOptions.columnSpans:Z
      44: ifeq          69
      47: aload_1
      48: invokevirtual #75                 // Method com/vladsch/flexmark/ext/tables/TableCell.getSpan:()I
      51: iconst_1
      52: if_icmple     69
      55: aload_3
      56: ldc           #76                 // String colspan
      58: aload_1
      59: invokevirtual #75                 // Method com/vladsch/flexmark/ext/tables/TableCell.getSpan:()I
      62: invokestatic  #77                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      65: invokevirtual #41                 // Method com/vladsch/flexmark/html/HtmlWriter.attr:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      68: pop
      69: aload_3
      70: aload_1
      71: invokevirtual #78                 // Method com/vladsch/flexmark/ext/tables/TableCell.getText:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      74: invokevirtual #59                 // Method com/vladsch/flexmark/html/HtmlWriter.srcPos:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
      77: invokevirtual #44                 // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:()Lcom/vladsch/flexmark/html/HtmlWriter;
      80: aload         4
      82: invokevirtual #79                 // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      85: pop
      86: aload_2
      87: aload_1
      88: invokeinterface #80,  2           // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
      93: aload_3
      94: new           #81                 // class java/lang/StringBuilder
      97: dup
      98: invokespecial #82                 // Method java/lang/StringBuilder."<init>":()V
     101: ldc           #83                 // String /
     103: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: aload         4
     108: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: invokevirtual #79                 // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     117: pop
     118: return

  private static java.lang.String getAlignValue(com.vladsch.flexmark.ext.tables.TableCell$Alignment);
    Code:
       0: getstatic     #86                 // Field com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$13.$SwitchMap$com$vladsch$flexmark$ext$tables$TableCell$Alignment:[I
       3: aload_0
       4: invokevirtual #87                 // Method com/vladsch/flexmark/ext/tables/TableCell$Alignment.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 3
                     1: 36
                     2: 39
                     3: 42
               default: 45
          }
      36: ldc           #88                 // String left
      38: areturn
      39: ldc           #89                 // String center
      41: areturn
      42: ldc           #90                 // String right
      44: areturn
      45: new           #91                 // class java/lang/IllegalStateException
      48: dup
      49: new           #81                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #82                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #92                 // String Unknown alignment:
      58: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_0
      62: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      65: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #94                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      71: athrow

  static void access$000(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer, com.vladsch.flexmark.ext.tables.TableBlock, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #7                  // Method render:(Lcom/vladsch/flexmark/ext/tables/TableBlock;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$100(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer, com.vladsch.flexmark.ext.tables.TableHead, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #6                  // Method render:(Lcom/vladsch/flexmark/ext/tables/TableHead;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$200(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer, com.vladsch.flexmark.ext.tables.TableSeparator, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #5                  // Method render:(Lcom/vladsch/flexmark/ext/tables/TableSeparator;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$300(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer, com.vladsch.flexmark.ext.tables.TableBody, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #4                  // Method render:(Lcom/vladsch/flexmark/ext/tables/TableBody;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$400(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer, com.vladsch.flexmark.ext.tables.TableRow, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #3                  // Method render:(Lcom/vladsch/flexmark/ext/tables/TableRow;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$500(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer, com.vladsch.flexmark.ext.tables.TableCell, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #2                  // Method render:(Lcom/vladsch/flexmark/ext/tables/TableCell;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$600(com.vladsch.flexmark.ext.tables.internal.TableNodeRenderer, com.vladsch.flexmark.ext.tables.TableCaption, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method render:(Lcom/vladsch/flexmark/ext/tables/TableCaption;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return
}
