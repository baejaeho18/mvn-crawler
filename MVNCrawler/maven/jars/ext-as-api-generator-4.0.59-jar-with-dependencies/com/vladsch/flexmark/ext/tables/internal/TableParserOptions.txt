Compiled from "TableParserOptions.java"
class com.vladsch.flexmark.ext.tables.internal.TableParserOptions {
  public final int maxHeaderRows;

  public final int minHeaderRows;

  public final int minSeparatorDashes;

  public final boolean appendMissingColumns;

  public final boolean discardExtraColumns;

  public final boolean columnSpans;

  public final boolean trimCellWhitespace;

  public final boolean headerSeparatorColumnMatch;

  public final java.lang.String className;

  public final boolean withCaption;

  public final boolean multiLineRows;

  com.vladsch.flexmark.ext.tables.internal.TableParserOptions(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field com/vladsch/flexmark/ext/tables/TablesExtension.MAX_HEADER_ROWS:Lcom/vladsch/flexmark/util/options/DataKey;
       8: aload_1
       9: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      12: checkcast     #4                  // class java/lang/Integer
      15: invokevirtual #5                  // Method java/lang/Integer.intValue:()I
      18: putfield      #6                  // Field maxHeaderRows:I
      21: aload_0
      22: getstatic     #7                  // Field com/vladsch/flexmark/ext/tables/TablesExtension.MIN_HEADER_ROWS:Lcom/vladsch/flexmark/util/options/DataKey;
      25: aload_1
      26: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      29: checkcast     #4                  // class java/lang/Integer
      32: invokevirtual #5                  // Method java/lang/Integer.intValue:()I
      35: putfield      #8                  // Field minHeaderRows:I
      38: aload_0
      39: getstatic     #9                  // Field com/vladsch/flexmark/ext/tables/TablesExtension.MIN_SEPARATOR_DASHES:Lcom/vladsch/flexmark/util/options/DataKey;
      42: aload_1
      43: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      46: checkcast     #4                  // class java/lang/Integer
      49: invokevirtual #5                  // Method java/lang/Integer.intValue:()I
      52: putfield      #10                 // Field minSeparatorDashes:I
      55: aload_0
      56: getstatic     #11                 // Field com/vladsch/flexmark/ext/tables/TablesExtension.APPEND_MISSING_COLUMNS:Lcom/vladsch/flexmark/util/options/DataKey;
      59: aload_1
      60: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      63: checkcast     #12                 // class java/lang/Boolean
      66: invokevirtual #13                 // Method java/lang/Boolean.booleanValue:()Z
      69: putfield      #14                 // Field appendMissingColumns:Z
      72: aload_0
      73: getstatic     #15                 // Field com/vladsch/flexmark/ext/tables/TablesExtension.DISCARD_EXTRA_COLUMNS:Lcom/vladsch/flexmark/util/options/DataKey;
      76: aload_1
      77: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      80: checkcast     #12                 // class java/lang/Boolean
      83: invokevirtual #13                 // Method java/lang/Boolean.booleanValue:()Z
      86: putfield      #16                 // Field discardExtraColumns:Z
      89: aload_0
      90: getstatic     #17                 // Field com/vladsch/flexmark/ext/tables/TablesExtension.COLUMN_SPANS:Lcom/vladsch/flexmark/util/options/DataKey;
      93: aload_1
      94: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      97: checkcast     #12                 // class java/lang/Boolean
     100: invokevirtual #13                 // Method java/lang/Boolean.booleanValue:()Z
     103: putfield      #18                 // Field columnSpans:Z
     106: aload_0
     107: getstatic     #19                 // Field com/vladsch/flexmark/ext/tables/TablesExtension.TRIM_CELL_WHITESPACE:Lcom/vladsch/flexmark/util/options/DataKey;
     110: aload_1
     111: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     114: checkcast     #12                 // class java/lang/Boolean
     117: invokevirtual #13                 // Method java/lang/Boolean.booleanValue:()Z
     120: putfield      #20                 // Field trimCellWhitespace:Z
     123: aload_0
     124: getstatic     #21                 // Field com/vladsch/flexmark/ext/tables/TablesExtension.HEADER_SEPARATOR_COLUMN_MATCH:Lcom/vladsch/flexmark/util/options/DataKey;
     127: aload_1
     128: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     131: checkcast     #12                 // class java/lang/Boolean
     134: invokevirtual #13                 // Method java/lang/Boolean.booleanValue:()Z
     137: putfield      #22                 // Field headerSeparatorColumnMatch:Z
     140: aload_0
     141: getstatic     #23                 // Field com/vladsch/flexmark/ext/tables/TablesExtension.CLASS_NAME:Lcom/vladsch/flexmark/util/options/DataKey;
     144: aload_1
     145: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     148: checkcast     #24                 // class java/lang/String
     151: putfield      #25                 // Field className:Ljava/lang/String;
     154: aload_0
     155: getstatic     #26                 // Field com/vladsch/flexmark/ext/tables/TablesExtension.WITH_CAPTION:Lcom/vladsch/flexmark/util/options/DataKey;
     158: aload_1
     159: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     162: checkcast     #12                 // class java/lang/Boolean
     165: invokevirtual #13                 // Method java/lang/Boolean.booleanValue:()Z
     168: putfield      #27                 // Field withCaption:Z
     171: aload_0
     172: getstatic     #28                 // Field com/vladsch/flexmark/ext/tables/TablesExtension.MULTI_LINE_ROWS:Lcom/vladsch/flexmark/util/options/DataKey;
     175: aload_1
     176: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     179: checkcast     #12                 // class java/lang/Boolean
     182: invokevirtual #13                 // Method java/lang/Boolean.booleanValue:()Z
     185: putfield      #29                 // Field multiLineRows:Z
     188: return
}
