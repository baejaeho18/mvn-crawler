Compiled from "TableColumnSeparator.java"
class com.vladsch.flexmark.ext.tables.internal.TableColumnSeparator extends com.vladsch.flexmark.ast.Node {
  public com.vladsch.flexmark.ext.tables.internal.TableColumnSeparator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/vladsch/flexmark/ast/Node."<init>":()V
       4: return

  public com.vladsch.flexmark.ext.tables.internal.TableColumnSeparator(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method com/vladsch/flexmark/ast/Node."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
       5: return

  public com.vladsch.flexmark.ext.tables.internal.TableColumnSeparator(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method com/vladsch/flexmark/util/sequence/CharSubSequence.of:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/sequence/CharSubSequence;
       5: invokespecial #2                  // Method com/vladsch/flexmark/ast/Node."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
       8: return

  public com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments();
    Code:
       0: getstatic     #4                  // Field EMPTY_SEGMENTS:[Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       3: areturn

  public void getAstExtra(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method astExtraChars:(Ljava/lang/StringBuilder;)V
       5: return

  protected java.lang.String toStringAttributes();
    Code:
       0: new           #6                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #8                  // String text=
       9: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #10                 // Method getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      16: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn
}
