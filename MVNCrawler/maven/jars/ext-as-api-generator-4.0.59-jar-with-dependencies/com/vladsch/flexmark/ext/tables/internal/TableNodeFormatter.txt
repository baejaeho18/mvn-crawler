Compiled from "TableNodeFormatter.java"
public class com.vladsch.flexmark.ext.tables.internal.TableNodeFormatter implements com.vladsch.flexmark.formatter.internal.NodeFormatter {
  private final com.vladsch.flexmark.util.format.TableFormatOptions options;

  java.util.regex.Pattern TABLE_HEADER_SEPARATOR;

  private com.vladsch.flexmark.util.format.Table myTable;

  public com.vladsch.flexmark.ext.tables.internal.TableNodeFormatter(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #10                 // class com/vladsch/flexmark/util/format/TableFormatOptions
       8: dup
       9: aload_1
      10: invokespecial #11                 // Method com/vladsch/flexmark/util/format/TableFormatOptions."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
      13: putfield      #12                 // Field options:Lcom/vladsch/flexmark/util/format/TableFormatOptions;
      16: aload_0
      17: getstatic     #13                 // Field com/vladsch/flexmark/ext/tables/TablesExtension.MIN_SEPARATOR_DASHES:Lcom/vladsch/flexmark/util/options/DataKey;
      20: aload_1
      21: invokevirtual #14                 // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      24: checkcast     #15                 // class java/lang/Integer
      27: invokevirtual #16                 // Method java/lang/Integer.intValue:()I
      30: invokestatic  #17                 // Method com/vladsch/flexmark/ext/tables/internal/TableParagraphPreProcessor.getTableHeaderSeparator:(I)Ljava/util/regex/Pattern;
      33: putfield      #18                 // Field TABLE_HEADER_SEPARATOR:Ljava/util/regex/Pattern;
      36: return

  public java.util.Set<java.lang.Class<?>> getNodeClasses();
    Code:
       0: aconst_null
       1: areturn

  public java.util.Set<com.vladsch.flexmark.formatter.internal.NodeFormattingHandler<?>> getNodeFormattingHandlers();
    Code:
       0: new           #19                 // class java/util/HashSet
       3: dup
       4: bipush        8
       6: anewarray     #20                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
       9: dup
      10: iconst_0
      11: new           #20                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
      14: dup
      15: ldc           #21                 // class com/vladsch/flexmark/ext/tables/TableBlock
      17: new           #22                 // class com/vladsch/flexmark/ext/tables/internal/TableNodeFormatter$1
      20: dup
      21: aload_0
      22: invokespecial #23                 // Method com/vladsch/flexmark/ext/tables/internal/TableNodeFormatter$1."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableNodeFormatter;)V
      25: invokespecial #24                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
      28: aastore
      29: dup
      30: iconst_1
      31: new           #20                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
      34: dup
      35: ldc           #25                 // class com/vladsch/flexmark/ext/tables/TableHead
      37: new           #26                 // class com/vladsch/flexmark/ext/tables/internal/TableNodeFormatter$2
      40: dup
      41: aload_0
      42: invokespecial #27                 // Method com/vladsch/flexmark/ext/tables/internal/TableNodeFormatter$2."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableNodeFormatter;)V
      45: invokespecial #24                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
      48: aastore
      49: dup
      50: iconst_2
      51: new           #20                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
      54: dup
      55: ldc           #28                 // class com/vladsch/flexmark/ext/tables/TableSeparator
      57: new           #29                 // class com/vladsch/flexmark/ext/tables/internal/TableNodeFormatter$3
      60: dup
      61: aload_0
      62: invokespecial #30                 // Method com/vladsch/flexmark/ext/tables/internal/TableNodeFormatter$3."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableNodeFormatter;)V
      65: invokespecial #24                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
      68: aastore
      69: dup
      70: iconst_3
      71: new           #20                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
      74: dup
      75: ldc           #31                 // class com/vladsch/flexmark/ext/tables/TableBody
      77: new           #32                 // class com/vladsch/flexmark/ext/tables/internal/TableNodeFormatter$4
      80: dup
      81: aload_0
      82: invokespecial #33                 // Method com/vladsch/flexmark/ext/tables/internal/TableNodeFormatter$4."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableNodeFormatter;)V
      85: invokespecial #24                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
      88: aastore
      89: dup
      90: iconst_4
      91: new           #20                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
      94: dup
      95: ldc           #34                 // class com/vladsch/flexmark/ext/tables/TableRow
      97: new           #35                 // class com/vladsch/flexmark/ext/tables/internal/TableNodeFormatter$5
     100: dup
     101: aload_0
     102: invokespecial #36                 // Method com/vladsch/flexmark/ext/tables/internal/TableNodeFormatter$5."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableNodeFormatter;)V
     105: invokespecial #24                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     108: aastore
     109: dup
     110: iconst_5
     111: new           #20                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     114: dup
     115: ldc           #37                 // class com/vladsch/flexmark/ext/tables/TableCell
     117: new           #38                 // class com/vladsch/flexmark/ext/tables/internal/TableNodeFormatter$6
     120: dup
     121: aload_0
     122: invokespecial #39                 // Method com/vladsch/flexmark/ext/tables/internal/TableNodeFormatter$6."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableNodeFormatter;)V
     125: invokespecial #24                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     128: aastore
     129: dup
     130: bipush        6
     132: new           #20                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     135: dup
     136: ldc           #40                 // class com/vladsch/flexmark/ext/tables/TableCaption
     138: new           #41                 // class com/vladsch/flexmark/ext/tables/internal/TableNodeFormatter$7
     141: dup
     142: aload_0
     143: invokespecial #42                 // Method com/vladsch/flexmark/ext/tables/internal/TableNodeFormatter$7."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableNodeFormatter;)V
     146: invokespecial #24                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     149: aastore
     150: dup
     151: bipush        7
     153: new           #20                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     156: dup
     157: ldc           #43                 // class com/vladsch/flexmark/ast/Text
     159: new           #44                 // class com/vladsch/flexmark/ext/tables/internal/TableNodeFormatter$8
     162: dup
     163: aload_0
     164: invokespecial #45                 // Method com/vladsch/flexmark/ext/tables/internal/TableNodeFormatter$8."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableNodeFormatter;)V
     167: invokespecial #24                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     170: aastore
     171: invokestatic  #46                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     174: invokespecial #47                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     177: areturn

  private void render(com.vladsch.flexmark.ext.tables.TableBlock, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: new           #48                 // class com/vladsch/flexmark/util/format/Table
       4: dup
       5: aload_0
       6: getfield      #12                 // Field options:Lcom/vladsch/flexmark/util/format/TableFormatOptions;
       9: invokespecial #49                 // Method com/vladsch/flexmark/util/format/Table."<init>":(Lcom/vladsch/flexmark/util/format/TableFormatOptions;)V
      12: putfield      #50                 // Field myTable:Lcom/vladsch/flexmark/util/format/Table;
      15: aload_2
      16: aload_1
      17: invokeinterface #51,  2           // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
      22: aload_0
      23: getfield      #50                 // Field myTable:Lcom/vladsch/flexmark/util/format/Table;
      26: invokevirtual #52                 // Method com/vladsch/flexmark/util/format/Table.finalizeTable:()V
      29: aload_0
      30: getfield      #50                 // Field myTable:Lcom/vladsch/flexmark/util/format/Table;
      33: invokevirtual #53                 // Method com/vladsch/flexmark/util/format/Table.getMaxColumns:()I
      36: ifle          57
      39: aload_3
      40: invokevirtual #54                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.blankLine:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      43: pop
      44: aload_0
      45: getfield      #50                 // Field myTable:Lcom/vladsch/flexmark/util/format/Table;
      48: aload_3
      49: invokevirtual #55                 // Method com/vladsch/flexmark/util/format/Table.appendTable:(Lcom/vladsch/flexmark/util/html/FormattingAppendable;)V
      52: aload_3
      53: invokevirtual #54                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.blankLine:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      56: pop
      57: return

  private void render(com.vladsch.flexmark.ext.tables.TableHead, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: getfield      #50                 // Field myTable:Lcom/vladsch/flexmark/util/format/Table;
       4: iconst_0
       5: invokevirtual #56                 // Method com/vladsch/flexmark/util/format/Table.setSeparator:(Z)V
       8: aload_0
       9: getfield      #50                 // Field myTable:Lcom/vladsch/flexmark/util/format/Table;
      12: iconst_1
      13: invokevirtual #57                 // Method com/vladsch/flexmark/util/format/Table.setHeading:(Z)V
      16: aload_2
      17: aload_1
      18: invokeinterface #51,  2           // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
      23: return

  private void render(com.vladsch.flexmark.ext.tables.TableSeparator, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: getfield      #50                 // Field myTable:Lcom/vladsch/flexmark/util/format/Table;
       4: iconst_1
       5: invokevirtual #56                 // Method com/vladsch/flexmark/util/format/Table.setSeparator:(Z)V
       8: aload_2
       9: aload_1
      10: invokeinterface #51,  2           // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
      15: return

  private void render(com.vladsch.flexmark.ext.tables.TableBody, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: getfield      #50                 // Field myTable:Lcom/vladsch/flexmark/util/format/Table;
       4: iconst_0
       5: invokevirtual #56                 // Method com/vladsch/flexmark/util/format/Table.setSeparator:(Z)V
       8: aload_0
       9: getfield      #50                 // Field myTable:Lcom/vladsch/flexmark/util/format/Table;
      12: iconst_0
      13: invokevirtual #57                 // Method com/vladsch/flexmark/util/format/Table.setHeading:(Z)V
      16: aload_2
      17: aload_1
      18: invokeinterface #51,  2           // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
      23: return

  private void render(com.vladsch.flexmark.ext.tables.TableRow, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #51,  2           // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
       7: aload_0
       8: getfield      #50                 // Field myTable:Lcom/vladsch/flexmark/util/format/Table;
      11: invokevirtual #58                 // Method com/vladsch/flexmark/util/format/Table.isSeparator:()Z
      14: ifne          24
      17: aload_0
      18: getfield      #50                 // Field myTable:Lcom/vladsch/flexmark/util/format/Table;
      21: invokevirtual #59                 // Method com/vladsch/flexmark/util/format/Table.nextRow:()V
      24: return

  private void render(com.vladsch.flexmark.ext.tables.TableCaption, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: getfield      #50                 // Field myTable:Lcom/vladsch/flexmark/util/format/Table;
       4: aload_1
       5: invokevirtual #60                 // Method com/vladsch/flexmark/ext/tables/TableCaption.getOpeningMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       8: aload_1
       9: invokevirtual #61                 // Method com/vladsch/flexmark/ext/tables/TableCaption.getText:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      12: aload_1
      13: invokevirtual #62                 // Method com/vladsch/flexmark/ext/tables/TableCaption.getClosingMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      16: invokevirtual #63                 // Method com/vladsch/flexmark/util/format/Table.setCaption:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)V
      19: return

  private void render(com.vladsch.flexmark.ext.tables.TableCell, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: getfield      #50                 // Field myTable:Lcom/vladsch/flexmark/util/format/Table;
       4: new           #64                 // class com/vladsch/flexmark/util/format/Table$TableCell
       7: dup
       8: aload_1
       9: invokevirtual #65                 // Method com/vladsch/flexmark/ext/tables/TableCell.getOpeningMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      12: aload_1
      13: invokevirtual #66                 // Method com/vladsch/flexmark/ext/tables/TableCell.getText:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      16: aload_1
      17: invokevirtual #67                 // Method com/vladsch/flexmark/ext/tables/TableCell.getClosingMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      20: iconst_1
      21: aload_1
      22: invokevirtual #68                 // Method com/vladsch/flexmark/ext/tables/TableCell.getSpan:()I
      25: aload_1
      26: invokevirtual #69                 // Method com/vladsch/flexmark/ext/tables/TableCell.getAlignment:()Lcom/vladsch/flexmark/ext/tables/TableCell$Alignment;
      29: ifnonnull     38
      32: getstatic     #70                 // Field com/vladsch/flexmark/util/html/CellAlignment.NONE:Lcom/vladsch/flexmark/util/html/CellAlignment;
      35: goto          45
      38: aload_1
      39: invokevirtual #69                 // Method com/vladsch/flexmark/ext/tables/TableCell.getAlignment:()Lcom/vladsch/flexmark/ext/tables/TableCell$Alignment;
      42: invokevirtual #71                 // Method com/vladsch/flexmark/ext/tables/TableCell$Alignment.cellAlignment:()Lcom/vladsch/flexmark/util/html/CellAlignment;
      45: invokespecial #72                 // Method com/vladsch/flexmark/util/format/Table$TableCell."<init>":(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;IILcom/vladsch/flexmark/util/html/CellAlignment;)V
      48: invokevirtual #73                 // Method com/vladsch/flexmark/util/format/Table.addCell:(Lcom/vladsch/flexmark/util/format/Table$TableCell;)V
      51: return

  private void render(com.vladsch.flexmark.ast.Text, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: getfield      #18                 // Field TABLE_HEADER_SEPARATOR:Ljava/util/regex/Pattern;
       4: aload_1
       5: invokevirtual #74                 // Method com/vladsch/flexmark/ast/Text.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       8: invokevirtual #75                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      11: invokevirtual #76                 // Method java/util/regex/Matcher.matches:()Z
      14: ifeq          86
      17: aload_1
      18: iconst_1
      19: anewarray     #77                 // class java/lang/Class
      22: dup
      23: iconst_0
      24: ldc           #78                 // class com/vladsch/flexmark/ast/Paragraph
      26: aastore
      27: invokevirtual #79                 // Method com/vladsch/flexmark/ast/Text.getAncestorOfType:([Ljava/lang/Class;)Lcom/vladsch/flexmark/ast/Node;
      30: astore        4
      32: aload         4
      34: instanceof    #78                 // class com/vladsch/flexmark/ast/Paragraph
      37: ifeq          74
      40: aload         4
      42: checkcast     #78                 // class com/vladsch/flexmark/ast/Paragraph
      45: invokevirtual #80                 // Method com/vladsch/flexmark/ast/Paragraph.hasTableSeparator:()Z
      48: ifeq          74
      51: aload_3
      52: invokevirtual #81                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.pushPrefix:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      55: ldc           #82                 // String
      57: invokevirtual #83                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.addPrefix:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      60: aload_1
      61: invokevirtual #74                 // Method com/vladsch/flexmark/ast/Text.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      64: invokevirtual #84                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      67: invokevirtual #85                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.popPrefix:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      70: pop
      71: goto          83
      74: aload_3
      75: aload_1
      76: invokevirtual #74                 // Method com/vladsch/flexmark/ast/Text.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      79: invokevirtual #84                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      82: pop
      83: goto          95
      86: aload_3
      87: aload_1
      88: invokevirtual #74                 // Method com/vladsch/flexmark/ast/Text.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      91: invokevirtual #84                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      94: pop
      95: return

  static void access$000(com.vladsch.flexmark.ext.tables.internal.TableNodeFormatter, com.vladsch.flexmark.ext.tables.TableBlock, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #8                  // Method render:(Lcom/vladsch/flexmark/ext/tables/TableBlock;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$100(com.vladsch.flexmark.ext.tables.internal.TableNodeFormatter, com.vladsch.flexmark.ext.tables.TableHead, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #7                  // Method render:(Lcom/vladsch/flexmark/ext/tables/TableHead;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$200(com.vladsch.flexmark.ext.tables.internal.TableNodeFormatter, com.vladsch.flexmark.ext.tables.TableSeparator, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #6                  // Method render:(Lcom/vladsch/flexmark/ext/tables/TableSeparator;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$300(com.vladsch.flexmark.ext.tables.internal.TableNodeFormatter, com.vladsch.flexmark.ext.tables.TableBody, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #5                  // Method render:(Lcom/vladsch/flexmark/ext/tables/TableBody;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$400(com.vladsch.flexmark.ext.tables.internal.TableNodeFormatter, com.vladsch.flexmark.ext.tables.TableRow, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #4                  // Method render:(Lcom/vladsch/flexmark/ext/tables/TableRow;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$500(com.vladsch.flexmark.ext.tables.internal.TableNodeFormatter, com.vladsch.flexmark.ext.tables.TableCell, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #3                  // Method render:(Lcom/vladsch/flexmark/ext/tables/TableCell;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$600(com.vladsch.flexmark.ext.tables.internal.TableNodeFormatter, com.vladsch.flexmark.ext.tables.TableCaption, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #2                  // Method render:(Lcom/vladsch/flexmark/ext/tables/TableCaption;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$700(com.vladsch.flexmark.ext.tables.internal.TableNodeFormatter, com.vladsch.flexmark.ast.Text, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method render:(Lcom/vladsch/flexmark/ast/Text;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return
}
