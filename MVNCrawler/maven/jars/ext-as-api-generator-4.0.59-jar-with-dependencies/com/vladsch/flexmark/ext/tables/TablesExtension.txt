Compiled from "TablesExtension.java"
public class com.vladsch.flexmark.ext.tables.TablesExtension implements com.vladsch.flexmark.parser.Parser$ParserExtension,com.vladsch.flexmark.html.HtmlRenderer$HtmlRendererExtension,com.vladsch.flexmark.formatter.internal.Formatter$FormatterExtension {
  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Integer> MAX_HEADER_ROWS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Integer> MIN_HEADER_ROWS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Integer> MIN_SEPARATOR_DASHES;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> APPEND_MISSING_COLUMNS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> DISCARD_EXTRA_COLUMNS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> TRIM_CELL_WHITESPACE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> COLUMN_SPANS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> HEADER_SEPARATOR_COLUMN_MATCH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.String> CLASS_NAME;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> WITH_CAPTION;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> MULTI_LINE_ROWS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> FORMAT_LEAD_TRAIL_PIPES;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> FORMAT_SPACE_AROUND_PIPES;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> FORMAT_ADJUST_COLUMN_WIDTH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> FORMAT_APPLY_COLUMN_ALIGNMENT;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> FORMAT_FILL_MISSING_COLUMNS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> FORMAT_REMOVE_CAPTION;

  public static final com.vladsch.flexmark.util.options.DataKey<com.vladsch.flexmark.util.format.options.DiscretionaryText> FORMAT_LEFT_ALIGN_MARKER;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Integer> FORMAT_MIN_SEPARATOR_COLUMN_WIDTH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Integer> FORMAT_MIN_SEPARATOR_DASHES;

  public static final com.vladsch.flexmark.util.options.DataKey<com.vladsch.flexmark.util.mappers.CharWidthProvider> FORMAT_CHAR_WIDTH_PROVIDER;

  public com.vladsch.flexmark.ext.tables.TablesExtension();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static com.vladsch.flexmark.Extension create();
    Code:
       0: new           #2                  // class com/vladsch/flexmark/ext/tables/TablesExtension
       3: dup
       4: invokespecial #3                  // Method "<init>":()V
       7: areturn

  public void extend(com.vladsch.flexmark.formatter.internal.Formatter$Builder);
    Code:
       0: aload_1
       1: new           #4                  // class com/vladsch/flexmark/ext/tables/internal/TableNodeFormatter$Factory
       4: dup
       5: invokespecial #5                  // Method com/vladsch/flexmark/ext/tables/internal/TableNodeFormatter$Factory."<init>":()V
       8: invokevirtual #6                  // Method com/vladsch/flexmark/formatter/internal/Formatter$Builder.nodeFormatterFactory:(Lcom/vladsch/flexmark/formatter/internal/NodeFormatterFactory;)Lcom/vladsch/flexmark/formatter/internal/Formatter$Builder;
      11: pop
      12: return

  public void rendererOptions(com.vladsch.flexmark.util.options.MutableDataHolder);
    Code:
       0: return

  public void parserOptions(com.vladsch.flexmark.util.options.MutableDataHolder);
    Code:
       0: return

  public void extend(com.vladsch.flexmark.parser.Parser$Builder);
    Code:
       0: aload_1
       1: invokestatic  #7                  // Method com/vladsch/flexmark/ext/tables/internal/TableParagraphPreProcessor.Factory:()Lcom/vladsch/flexmark/parser/block/ParagraphPreProcessorFactory;
       4: invokevirtual #8                  // Method com/vladsch/flexmark/parser/Parser$Builder.paragraphPreProcessorFactory:(Lcom/vladsch/flexmark/parser/block/ParagraphPreProcessorFactory;)Lcom/vladsch/flexmark/parser/Parser$Builder;
       7: pop
       8: return

  public void extend(com.vladsch.flexmark.html.HtmlRenderer$Builder, java.lang.String);
    Code:
       0: aload_2
       1: ldc           #9                  // String HTML
       3: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          24
       9: aload_1
      10: new           #11                 // class com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$Factory
      13: dup
      14: invokespecial #12                 // Method com/vladsch/flexmark/ext/tables/internal/TableNodeRenderer$Factory."<init>":()V
      17: invokevirtual #13                 // Method com/vladsch/flexmark/html/HtmlRenderer$Builder.nodeRendererFactory:(Lcom/vladsch/flexmark/html/renderer/NodeRendererFactory;)Lcom/vladsch/flexmark/html/HtmlRenderer$Builder;
      20: pop
      21: goto          54
      24: aload_2
      25: ldc           #14                 // String JIRA
      27: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      30: ifne          42
      33: aload_2
      34: ldc           #15                 // String YOUTRACK
      36: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      39: ifeq          54
      42: aload_1
      43: new           #16                 // class com/vladsch/flexmark/ext/tables/internal/TableJiraRenderer$Factory
      46: dup
      47: invokespecial #17                 // Method com/vladsch/flexmark/ext/tables/internal/TableJiraRenderer$Factory."<init>":()V
      50: invokevirtual #13                 // Method com/vladsch/flexmark/html/HtmlRenderer$Builder.nodeRendererFactory:(Lcom/vladsch/flexmark/html/renderer/NodeRendererFactory;)Lcom/vladsch/flexmark/html/HtmlRenderer$Builder;
      53: pop
      54: return

  static {};
    Code:
       0: new           #18                 // class com/vladsch/flexmark/util/options/DataKey
       3: dup
       4: ldc           #19                 // String MAX_HEADER_ROWS
       6: ldc           #21                 // int 2147483647
       8: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: invokespecial #23                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      14: putstatic     #24                 // Field MAX_HEADER_ROWS:Lcom/vladsch/flexmark/util/options/DataKey;
      17: new           #18                 // class com/vladsch/flexmark/util/options/DataKey
      20: dup
      21: ldc           #25                 // String MIN_HEADER_ROWS
      23: iconst_0
      24: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: invokespecial #23                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      30: putstatic     #26                 // Field MIN_HEADER_ROWS:Lcom/vladsch/flexmark/util/options/DataKey;
      33: new           #18                 // class com/vladsch/flexmark/util/options/DataKey
      36: dup
      37: ldc           #27                 // String MIN_SEPARATOR_DASHES
      39: iconst_3
      40: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      43: invokespecial #23                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      46: putstatic     #28                 // Field MIN_SEPARATOR_DASHES:Lcom/vladsch/flexmark/util/options/DataKey;
      49: new           #18                 // class com/vladsch/flexmark/util/options/DataKey
      52: dup
      53: ldc           #29                 // String APPEND_MISSING_COLUMNS
      55: iconst_0
      56: invokestatic  #30                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      59: invokespecial #23                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      62: putstatic     #31                 // Field APPEND_MISSING_COLUMNS:Lcom/vladsch/flexmark/util/options/DataKey;
      65: new           #18                 // class com/vladsch/flexmark/util/options/DataKey
      68: dup
      69: ldc           #32                 // String DISCARD_EXTRA_COLUMNS
      71: iconst_0
      72: invokestatic  #30                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      75: invokespecial #23                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      78: putstatic     #33                 // Field DISCARD_EXTRA_COLUMNS:Lcom/vladsch/flexmark/util/options/DataKey;
      81: new           #18                 // class com/vladsch/flexmark/util/options/DataKey
      84: dup
      85: ldc           #34                 // String TRIM_CELL_WHITESPACE
      87: iconst_1
      88: invokestatic  #30                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      91: invokespecial #23                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      94: putstatic     #35                 // Field TRIM_CELL_WHITESPACE:Lcom/vladsch/flexmark/util/options/DataKey;
      97: new           #18                 // class com/vladsch/flexmark/util/options/DataKey
     100: dup
     101: ldc           #36                 // String COLUMN_SPANS
     103: iconst_1
     104: invokestatic  #30                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     107: invokespecial #23                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     110: putstatic     #37                 // Field COLUMN_SPANS:Lcom/vladsch/flexmark/util/options/DataKey;
     113: new           #18                 // class com/vladsch/flexmark/util/options/DataKey
     116: dup
     117: ldc           #38                 // String HEADER_SEPARATOR_COLUMN_MATCH
     119: iconst_0
     120: invokestatic  #30                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     123: invokespecial #23                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     126: putstatic     #39                 // Field HEADER_SEPARATOR_COLUMN_MATCH:Lcom/vladsch/flexmark/util/options/DataKey;
     129: new           #18                 // class com/vladsch/flexmark/util/options/DataKey
     132: dup
     133: ldc           #40                 // String CLASS_NAME
     135: ldc           #41                 // String
     137: invokespecial #23                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     140: putstatic     #42                 // Field CLASS_NAME:Lcom/vladsch/flexmark/util/options/DataKey;
     143: new           #18                 // class com/vladsch/flexmark/util/options/DataKey
     146: dup
     147: ldc           #43                 // String WITH_CAPTION
     149: iconst_1
     150: invokestatic  #30                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     153: invokespecial #23                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     156: putstatic     #44                 // Field WITH_CAPTION:Lcom/vladsch/flexmark/util/options/DataKey;
     159: new           #18                 // class com/vladsch/flexmark/util/options/DataKey
     162: dup
     163: ldc           #45                 // String MULTI_LINE_ROWS
     165: iconst_0
     166: invokestatic  #30                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     169: invokespecial #23                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     172: putstatic     #46                 // Field MULTI_LINE_ROWS:Lcom/vladsch/flexmark/util/options/DataKey;
     175: getstatic     #47                 // Field com/vladsch/flexmark/util/format/TableFormatOptions.LEAD_TRAIL_PIPES:Lcom/vladsch/flexmark/util/options/DataKey;
     178: putstatic     #48                 // Field FORMAT_LEAD_TRAIL_PIPES:Lcom/vladsch/flexmark/util/options/DataKey;
     181: getstatic     #49                 // Field com/vladsch/flexmark/util/format/TableFormatOptions.SPACE_AROUND_PIPES:Lcom/vladsch/flexmark/util/options/DataKey;
     184: putstatic     #50                 // Field FORMAT_SPACE_AROUND_PIPES:Lcom/vladsch/flexmark/util/options/DataKey;
     187: getstatic     #51                 // Field com/vladsch/flexmark/util/format/TableFormatOptions.ADJUST_COLUMN_WIDTH:Lcom/vladsch/flexmark/util/options/DataKey;
     190: putstatic     #52                 // Field FORMAT_ADJUST_COLUMN_WIDTH:Lcom/vladsch/flexmark/util/options/DataKey;
     193: getstatic     #53                 // Field com/vladsch/flexmark/util/format/TableFormatOptions.APPLY_COLUMN_ALIGNMENT:Lcom/vladsch/flexmark/util/options/DataKey;
     196: putstatic     #54                 // Field FORMAT_APPLY_COLUMN_ALIGNMENT:Lcom/vladsch/flexmark/util/options/DataKey;
     199: getstatic     #55                 // Field com/vladsch/flexmark/util/format/TableFormatOptions.FILL_MISSING_COLUMNS:Lcom/vladsch/flexmark/util/options/DataKey;
     202: putstatic     #56                 // Field FORMAT_FILL_MISSING_COLUMNS:Lcom/vladsch/flexmark/util/options/DataKey;
     205: getstatic     #57                 // Field com/vladsch/flexmark/util/format/TableFormatOptions.REMOVE_CAPTION:Lcom/vladsch/flexmark/util/options/DataKey;
     208: putstatic     #58                 // Field FORMAT_REMOVE_CAPTION:Lcom/vladsch/flexmark/util/options/DataKey;
     211: getstatic     #59                 // Field com/vladsch/flexmark/util/format/TableFormatOptions.LEFT_ALIGN_MARKER:Lcom/vladsch/flexmark/util/options/DataKey;
     214: putstatic     #60                 // Field FORMAT_LEFT_ALIGN_MARKER:Lcom/vladsch/flexmark/util/options/DataKey;
     217: getstatic     #61                 // Field com/vladsch/flexmark/util/format/TableFormatOptions.MIN_SEPARATOR_COLUMN_WIDTH:Lcom/vladsch/flexmark/util/options/DataKey;
     220: putstatic     #62                 // Field FORMAT_MIN_SEPARATOR_COLUMN_WIDTH:Lcom/vladsch/flexmark/util/options/DataKey;
     223: getstatic     #63                 // Field com/vladsch/flexmark/util/format/TableFormatOptions.MIN_SEPARATOR_DASHES:Lcom/vladsch/flexmark/util/options/DataKey;
     226: putstatic     #64                 // Field FORMAT_MIN_SEPARATOR_DASHES:Lcom/vladsch/flexmark/util/options/DataKey;
     229: getstatic     #65                 // Field com/vladsch/flexmark/util/format/TableFormatOptions.CHAR_WIDTH_PROVIDER:Lcom/vladsch/flexmark/util/options/DataKey;
     232: putstatic     #66                 // Field FORMAT_CHAR_WIDTH_PROVIDER:Lcom/vladsch/flexmark/util/options/DataKey;
     235: return
}
