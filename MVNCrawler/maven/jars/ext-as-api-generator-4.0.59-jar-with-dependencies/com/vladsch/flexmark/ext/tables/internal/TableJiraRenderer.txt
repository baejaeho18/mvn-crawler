Compiled from "TableJiraRenderer.java"
public class com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer implements com.vladsch.flexmark.html.renderer.NodeRenderer {
  public com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: return

  public java.util.Set<com.vladsch.flexmark.html.renderer.NodeRenderingHandler<?>> getNodeRenderingHandlers();
    Code:
       0: new           #8                  // class java/util/HashSet
       3: dup
       4: bipush        6
       6: anewarray     #9                  // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
       9: dup
      10: iconst_0
      11: new           #9                  // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
      14: dup
      15: ldc           #10                 // class com/vladsch/flexmark/ext/tables/TableBlock
      17: new           #11                 // class com/vladsch/flexmark/ext/tables/internal/TableJiraRenderer$1
      20: dup
      21: aload_0
      22: invokespecial #12                 // Method com/vladsch/flexmark/ext/tables/internal/TableJiraRenderer$1."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableJiraRenderer;)V
      25: invokespecial #13                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
      28: aastore
      29: dup
      30: iconst_1
      31: new           #9                  // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
      34: dup
      35: ldc           #14                 // class com/vladsch/flexmark/ext/tables/TableHead
      37: new           #15                 // class com/vladsch/flexmark/ext/tables/internal/TableJiraRenderer$2
      40: dup
      41: aload_0
      42: invokespecial #16                 // Method com/vladsch/flexmark/ext/tables/internal/TableJiraRenderer$2."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableJiraRenderer;)V
      45: invokespecial #13                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
      48: aastore
      49: dup
      50: iconst_2
      51: new           #9                  // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
      54: dup
      55: ldc           #17                 // class com/vladsch/flexmark/ext/tables/TableSeparator
      57: new           #18                 // class com/vladsch/flexmark/ext/tables/internal/TableJiraRenderer$3
      60: dup
      61: aload_0
      62: invokespecial #19                 // Method com/vladsch/flexmark/ext/tables/internal/TableJiraRenderer$3."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableJiraRenderer;)V
      65: invokespecial #13                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
      68: aastore
      69: dup
      70: iconst_3
      71: new           #9                  // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
      74: dup
      75: ldc           #20                 // class com/vladsch/flexmark/ext/tables/TableBody
      77: new           #21                 // class com/vladsch/flexmark/ext/tables/internal/TableJiraRenderer$4
      80: dup
      81: aload_0
      82: invokespecial #22                 // Method com/vladsch/flexmark/ext/tables/internal/TableJiraRenderer$4."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableJiraRenderer;)V
      85: invokespecial #13                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
      88: aastore
      89: dup
      90: iconst_4
      91: new           #9                  // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
      94: dup
      95: ldc           #23                 // class com/vladsch/flexmark/ext/tables/TableRow
      97: new           #24                 // class com/vladsch/flexmark/ext/tables/internal/TableJiraRenderer$5
     100: dup
     101: aload_0
     102: invokespecial #25                 // Method com/vladsch/flexmark/ext/tables/internal/TableJiraRenderer$5."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableJiraRenderer;)V
     105: invokespecial #13                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     108: aastore
     109: dup
     110: iconst_5
     111: new           #9                  // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     114: dup
     115: ldc           #26                 // class com/vladsch/flexmark/ext/tables/TableCell
     117: new           #27                 // class com/vladsch/flexmark/ext/tables/internal/TableJiraRenderer$6
     120: dup
     121: aload_0
     122: invokespecial #28                 // Method com/vladsch/flexmark/ext/tables/internal/TableJiraRenderer$6."<init>":(Lcom/vladsch/flexmark/ext/tables/internal/TableJiraRenderer;)V
     125: invokespecial #13                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     128: aastore
     129: invokestatic  #29                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     132: invokespecial #30                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     135: areturn

  private void render(com.vladsch.flexmark.ext.tables.TableBlock, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #31,  2           // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
       7: aload_3
       8: invokevirtual #32                 // Method com/vladsch/flexmark/html/HtmlWriter.blankLine:()Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      11: pop
      12: return

  private void render(com.vladsch.flexmark.ext.tables.TableHead, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #31,  2           // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
       7: return

  private void render(com.vladsch.flexmark.ext.tables.TableSeparator, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: return

  private void render(com.vladsch.flexmark.ext.tables.TableBody, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #31,  2           // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
       7: return

  private void render(com.vladsch.flexmark.ext.tables.TableRow, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_1
       1: invokevirtual #33                 // Method com/vladsch/flexmark/ext/tables/TableRow.getParent:()Lcom/vladsch/flexmark/ast/Node;
       4: instanceof    #14                 // class com/vladsch/flexmark/ext/tables/TableHead
       7: ifeq          26
      10: aload_3
      11: invokevirtual #34                 // Method com/vladsch/flexmark/html/HtmlWriter.line:()Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      14: checkcast     #35                 // class com/vladsch/flexmark/html/HtmlWriter
      17: ldc           #36                 // String ||
      19: invokevirtual #37                 // Method com/vladsch/flexmark/html/HtmlWriter.raw:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      22: pop
      23: goto          49
      26: aload_1
      27: invokevirtual #33                 // Method com/vladsch/flexmark/ext/tables/TableRow.getParent:()Lcom/vladsch/flexmark/ast/Node;
      30: instanceof    #20                 // class com/vladsch/flexmark/ext/tables/TableBody
      33: ifeq          49
      36: aload_3
      37: invokevirtual #34                 // Method com/vladsch/flexmark/html/HtmlWriter.line:()Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      40: checkcast     #35                 // class com/vladsch/flexmark/html/HtmlWriter
      43: ldc           #38                 // String |
      45: invokevirtual #37                 // Method com/vladsch/flexmark/html/HtmlWriter.raw:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      48: pop
      49: aload_2
      50: aload_1
      51: invokeinterface #31,  2           // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
      56: aload_3
      57: invokevirtual #34                 // Method com/vladsch/flexmark/html/HtmlWriter.line:()Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      60: pop
      61: return

  private void render(com.vladsch.flexmark.ext.tables.TableCell, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #31,  2           // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
       7: aload_1
       8: invokevirtual #39                 // Method com/vladsch/flexmark/ext/tables/TableCell.getParent:()Lcom/vladsch/flexmark/ast/Node;
      11: invokevirtual #40                 // Method com/vladsch/flexmark/ast/Node.getParent:()Lcom/vladsch/flexmark/ast/Node;
      14: instanceof    #14                 // class com/vladsch/flexmark/ext/tables/TableHead
      17: ifeq          30
      20: aload_3
      21: ldc           #36                 // String ||
      23: invokevirtual #37                 // Method com/vladsch/flexmark/html/HtmlWriter.raw:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      26: pop
      27: goto          50
      30: aload_1
      31: invokevirtual #39                 // Method com/vladsch/flexmark/ext/tables/TableCell.getParent:()Lcom/vladsch/flexmark/ast/Node;
      34: invokevirtual #40                 // Method com/vladsch/flexmark/ast/Node.getParent:()Lcom/vladsch/flexmark/ast/Node;
      37: instanceof    #20                 // class com/vladsch/flexmark/ext/tables/TableBody
      40: ifeq          50
      43: aload_3
      44: ldc           #38                 // String |
      46: invokevirtual #37                 // Method com/vladsch/flexmark/html/HtmlWriter.raw:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      49: pop
      50: return

  private static java.lang.String getAlignValue(com.vladsch.flexmark.ext.tables.TableCell$Alignment);
    Code:
       0: getstatic     #41                 // Field com/vladsch/flexmark/ext/tables/internal/TableJiraRenderer$7.$SwitchMap$com$vladsch$flexmark$ext$tables$TableCell$Alignment:[I
       3: aload_0
       4: invokevirtual #42                 // Method com/vladsch/flexmark/ext/tables/TableCell$Alignment.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 3
                     1: 36
                     2: 39
                     3: 42
               default: 45
          }
      36: ldc           #43                 // String left
      38: areturn
      39: ldc           #44                 // String center
      41: areturn
      42: ldc           #45                 // String right
      44: areturn
      45: new           #46                 // class java/lang/IllegalStateException
      48: dup
      49: new           #47                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #49                 // String Unknown alignment:
      58: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_0
      62: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      65: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #53                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      71: athrow

  static void access$000(com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer, com.vladsch.flexmark.ext.tables.TableBlock, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #6                  // Method render:(Lcom/vladsch/flexmark/ext/tables/TableBlock;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$100(com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer, com.vladsch.flexmark.ext.tables.TableHead, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #5                  // Method render:(Lcom/vladsch/flexmark/ext/tables/TableHead;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$200(com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer, com.vladsch.flexmark.ext.tables.TableSeparator, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #4                  // Method render:(Lcom/vladsch/flexmark/ext/tables/TableSeparator;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$300(com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer, com.vladsch.flexmark.ext.tables.TableBody, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #3                  // Method render:(Lcom/vladsch/flexmark/ext/tables/TableBody;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$400(com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer, com.vladsch.flexmark.ext.tables.TableRow, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #2                  // Method render:(Lcom/vladsch/flexmark/ext/tables/TableRow;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$500(com.vladsch.flexmark.ext.tables.internal.TableJiraRenderer, com.vladsch.flexmark.ext.tables.TableCell, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method render:(Lcom/vladsch/flexmark/ext/tables/TableCell;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return
}
