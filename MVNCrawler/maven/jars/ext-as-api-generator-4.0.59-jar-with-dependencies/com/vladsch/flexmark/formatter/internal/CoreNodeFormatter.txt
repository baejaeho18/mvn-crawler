Compiled from "CoreNodeFormatter.java"
public class com.vladsch.flexmark.formatter.internal.CoreNodeFormatter extends com.vladsch.flexmark.formatter.internal.NodeRepositoryFormatter<com.vladsch.flexmark.ast.util.ReferenceRepository, com.vladsch.flexmark.ast.Reference, com.vladsch.flexmark.ast.RefNode> {
  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Integer> LIST_ITEM_NUMBER;

  public static final com.vladsch.flexmark.util.options.DataKey<com.vladsch.flexmark.util.format.options.ListSpacing> LIST_ITEM_SPACING;

  private final com.vladsch.flexmark.formatter.internal.FormatterOptions options;

  private final com.vladsch.flexmark.parser.ListOptions listOptions;

  private int blankLines;

  public com.vladsch.flexmark.formatter.internal.CoreNodeFormatter(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #35                 // Method com/vladsch/flexmark/formatter/internal/NodeRepositoryFormatter."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
       5: aload_0
       6: new           #36                 // class com/vladsch/flexmark/formatter/internal/FormatterOptions
       9: dup
      10: aload_1
      11: invokespecial #37                 // Method com/vladsch/flexmark/formatter/internal/FormatterOptions."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
      14: putfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
      17: aload_0
      18: aload_1
      19: invokestatic  #39                 // Method com/vladsch/flexmark/parser/ListOptions.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Lcom/vladsch/flexmark/parser/ListOptions;
      22: putfield      #40                 // Field listOptions:Lcom/vladsch/flexmark/parser/ListOptions;
      25: aload_0
      26: iconst_0
      27: putfield      #41                 // Field blankLines:I
      30: return

  public java.util.Set<java.lang.Class<?>> getNodeClasses();
    Code:
       0: aload_0
       1: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
       4: getfield      #42                 // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.referencePlacement:Lcom/vladsch/flexmark/util/format/options/ElementPlacement;
       7: getstatic     #43                 // Field com/vladsch/flexmark/util/format/options/ElementPlacement.AS_IS:Lcom/vladsch/flexmark/util/format/options/ElementPlacement;
      10: if_acmpeq     28
      13: aload_0
      14: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
      17: getfield      #44                 // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.referenceSort:Lcom/vladsch/flexmark/util/format/options/ElementPlacementSort;
      20: getstatic     #45                 // Field com/vladsch/flexmark/util/format/options/ElementPlacementSort.SORT_UNUSED_LAST:Lcom/vladsch/flexmark/util/format/options/ElementPlacementSort;
      23: if_acmpeq     28
      26: aconst_null
      27: areturn
      28: new           #46                 // class java/util/HashSet
      31: dup
      32: iconst_1
      33: anewarray     #47                 // class java/lang/Class
      36: dup
      37: iconst_0
      38: ldc           #48                 // class com/vladsch/flexmark/ast/RefNode
      40: aastore
      41: invokestatic  #49                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      44: invokespecial #50                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      47: areturn

  public com.vladsch.flexmark.ast.util.ReferenceRepository getRepository(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_1
       1: getstatic     #51                 // Field com/vladsch/flexmark/parser/Parser.REFERENCES:Lcom/vladsch/flexmark/util/options/DataKey;
       4: invokeinterface #52,  2           // InterfaceMethod com/vladsch/flexmark/util/options/DataHolder.get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
       9: checkcast     #53                 // class com/vladsch/flexmark/ast/util/ReferenceRepository
      12: areturn

  public com.vladsch.flexmark.util.format.options.ElementPlacement getReferencePlacement();
    Code:
       0: aload_0
       1: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
       4: getfield      #42                 // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.referencePlacement:Lcom/vladsch/flexmark/util/format/options/ElementPlacement;
       7: areturn

  public com.vladsch.flexmark.util.format.options.ElementPlacementSort getReferenceSort();
    Code:
       0: aload_0
       1: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
       4: getfield      #44                 // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.referenceSort:Lcom/vladsch/flexmark/util/format/options/ElementPlacementSort;
       7: areturn

  public void renderReferenceBlock(com.vladsch.flexmark.ast.Reference, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #54                 // Method com/vladsch/flexmark/ast/Reference.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       8: invokevirtual #56                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.line:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      11: pop
      12: return

  public java.util.Set<com.vladsch.flexmark.formatter.internal.NodeFormattingHandler<?>> getNodeFormattingHandlers();
    Code:
       0: new           #46                 // class java/util/HashSet
       3: dup
       4: bipush        34
       6: anewarray     #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
       9: dup
      10: iconst_0
      11: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
      14: dup
      15: ldc           #58                 // class com/vladsch/flexmark/ast/Node
      17: new           #59                 // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$1
      20: dup
      21: aload_0
      22: invokespecial #60                 // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$1."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
      25: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
      28: aastore
      29: dup
      30: iconst_1
      31: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
      34: dup
      35: ldc           #62                 // class com/vladsch/flexmark/ast/AutoLink
      37: new           #63                 // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$2
      40: dup
      41: aload_0
      42: invokespecial #64                 // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$2."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
      45: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
      48: aastore
      49: dup
      50: iconst_2
      51: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
      54: dup
      55: ldc           #65                 // class com/vladsch/flexmark/ast/BlankLine
      57: new           #66                 // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$3
      60: dup
      61: aload_0
      62: invokespecial #67                 // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$3."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
      65: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
      68: aastore
      69: dup
      70: iconst_3
      71: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
      74: dup
      75: ldc           #68                 // class com/vladsch/flexmark/ast/BlockQuote
      77: new           #69                 // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$4
      80: dup
      81: aload_0
      82: invokespecial #70                 // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$4."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
      85: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
      88: aastore
      89: dup
      90: iconst_4
      91: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
      94: dup
      95: ldc           #71                 // class com/vladsch/flexmark/ast/Code
      97: new           #72                 // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$5
     100: dup
     101: aload_0
     102: invokespecial #73                 // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$5."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     105: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     108: aastore
     109: dup
     110: iconst_5
     111: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     114: dup
     115: ldc           #74                 // class com/vladsch/flexmark/ast/Document
     117: new           #75                 // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$6
     120: dup
     121: aload_0
     122: invokespecial #76                 // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$6."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     125: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     128: aastore
     129: dup
     130: bipush        6
     132: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     135: dup
     136: ldc           #77                 // class com/vladsch/flexmark/ast/Emphasis
     138: new           #78                 // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$7
     141: dup
     142: aload_0
     143: invokespecial #79                 // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$7."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     146: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     149: aastore
     150: dup
     151: bipush        7
     153: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     156: dup
     157: ldc           #80                 // class com/vladsch/flexmark/ast/FencedCodeBlock
     159: new           #81                 // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$8
     162: dup
     163: aload_0
     164: invokespecial #82                 // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$8."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     167: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     170: aastore
     171: dup
     172: bipush        8
     174: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     177: dup
     178: ldc           #83                 // class com/vladsch/flexmark/ast/HardLineBreak
     180: new           #84                 // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$9
     183: dup
     184: aload_0
     185: invokespecial #85                 // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$9."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     188: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     191: aastore
     192: dup
     193: bipush        9
     195: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     198: dup
     199: ldc           #86                 // class com/vladsch/flexmark/ast/Heading
     201: new           #87                 // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$10
     204: dup
     205: aload_0
     206: invokespecial #88                 // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$10."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     209: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     212: aastore
     213: dup
     214: bipush        10
     216: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     219: dup
     220: ldc           #89                 // class com/vladsch/flexmark/ast/HtmlBlock
     222: new           #90                 // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$11
     225: dup
     226: aload_0
     227: invokespecial #91                 // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$11."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     230: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     233: aastore
     234: dup
     235: bipush        11
     237: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     240: dup
     241: ldc           #92                 // class com/vladsch/flexmark/ast/HtmlCommentBlock
     243: new           #93                 // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$12
     246: dup
     247: aload_0
     248: invokespecial #94                 // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$12."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     251: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     254: aastore
     255: dup
     256: bipush        12
     258: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     261: dup
     262: ldc           #95                 // class com/vladsch/flexmark/ast/HtmlInnerBlock
     264: new           #96                 // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$13
     267: dup
     268: aload_0
     269: invokespecial #97                 // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$13."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     272: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     275: aastore
     276: dup
     277: bipush        13
     279: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     282: dup
     283: ldc           #98                 // class com/vladsch/flexmark/ast/HtmlInnerBlockComment
     285: new           #99                 // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$14
     288: dup
     289: aload_0
     290: invokespecial #100                // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$14."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     293: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     296: aastore
     297: dup
     298: bipush        14
     300: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     303: dup
     304: ldc           #101                // class com/vladsch/flexmark/ast/HtmlEntity
     306: new           #102                // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$15
     309: dup
     310: aload_0
     311: invokespecial #103                // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$15."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     314: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     317: aastore
     318: dup
     319: bipush        15
     321: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     324: dup
     325: ldc           #104                // class com/vladsch/flexmark/ast/HtmlInline
     327: new           #105                // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$16
     330: dup
     331: aload_0
     332: invokespecial #106                // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$16."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     335: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     338: aastore
     339: dup
     340: bipush        16
     342: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     345: dup
     346: ldc           #107                // class com/vladsch/flexmark/ast/HtmlInlineComment
     348: new           #108                // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$17
     351: dup
     352: aload_0
     353: invokespecial #109                // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$17."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     356: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     359: aastore
     360: dup
     361: bipush        17
     363: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     366: dup
     367: ldc           #110                // class com/vladsch/flexmark/ast/Image
     369: new           #111                // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$18
     372: dup
     373: aload_0
     374: invokespecial #112                // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$18."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     377: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     380: aastore
     381: dup
     382: bipush        18
     384: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     387: dup
     388: ldc           #113                // class com/vladsch/flexmark/ast/ImageRef
     390: new           #114                // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$19
     393: dup
     394: aload_0
     395: invokespecial #115                // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$19."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     398: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     401: aastore
     402: dup
     403: bipush        19
     405: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     408: dup
     409: ldc           #116                // class com/vladsch/flexmark/ast/IndentedCodeBlock
     411: new           #117                // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$20
     414: dup
     415: aload_0
     416: invokespecial #118                // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$20."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     419: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     422: aastore
     423: dup
     424: bipush        20
     426: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     429: dup
     430: ldc           #119                // class com/vladsch/flexmark/ast/Link
     432: new           #120                // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$21
     435: dup
     436: aload_0
     437: invokespecial #121                // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$21."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     440: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     443: aastore
     444: dup
     445: bipush        21
     447: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     450: dup
     451: ldc           #122                // class com/vladsch/flexmark/ast/LinkRef
     453: new           #123                // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$22
     456: dup
     457: aload_0
     458: invokespecial #124                // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$22."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     461: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     464: aastore
     465: dup
     466: bipush        22
     468: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     471: dup
     472: ldc           #125                // class com/vladsch/flexmark/ast/BulletList
     474: new           #126                // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$23
     477: dup
     478: aload_0
     479: invokespecial #127                // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$23."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     482: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     485: aastore
     486: dup
     487: bipush        23
     489: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     492: dup
     493: ldc           #128                // class com/vladsch/flexmark/ast/OrderedList
     495: new           #129                // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$24
     498: dup
     499: aload_0
     500: invokespecial #130                // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$24."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     503: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     506: aastore
     507: dup
     508: bipush        24
     510: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     513: dup
     514: ldc           #131                // class com/vladsch/flexmark/ast/BulletListItem
     516: new           #132                // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$25
     519: dup
     520: aload_0
     521: invokespecial #133                // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$25."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     524: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     527: aastore
     528: dup
     529: bipush        25
     531: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     534: dup
     535: ldc           #134                // class com/vladsch/flexmark/ast/OrderedListItem
     537: new           #135                // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$26
     540: dup
     541: aload_0
     542: invokespecial #136                // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$26."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     545: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     548: aastore
     549: dup
     550: bipush        26
     552: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     555: dup
     556: ldc           #137                // class com/vladsch/flexmark/ast/MailLink
     558: new           #138                // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$27
     561: dup
     562: aload_0
     563: invokespecial #139                // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$27."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     566: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     569: aastore
     570: dup
     571: bipush        27
     573: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     576: dup
     577: ldc           #140                // class com/vladsch/flexmark/ast/Paragraph
     579: new           #141                // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$28
     582: dup
     583: aload_0
     584: invokespecial #142                // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$28."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     587: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     590: aastore
     591: dup
     592: bipush        28
     594: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     597: dup
     598: ldc           #143                // class com/vladsch/flexmark/ast/Reference
     600: new           #144                // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$29
     603: dup
     604: aload_0
     605: invokespecial #145                // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$29."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     608: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     611: aastore
     612: dup
     613: bipush        29
     615: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     618: dup
     619: ldc           #146                // class com/vladsch/flexmark/ast/SoftLineBreak
     621: new           #147                // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$30
     624: dup
     625: aload_0
     626: invokespecial #148                // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$30."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     629: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     632: aastore
     633: dup
     634: bipush        30
     636: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     639: dup
     640: ldc           #149                // class com/vladsch/flexmark/ast/StrongEmphasis
     642: new           #150                // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$31
     645: dup
     646: aload_0
     647: invokespecial #151                // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$31."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     650: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     653: aastore
     654: dup
     655: bipush        31
     657: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     660: dup
     661: ldc           #152                // class com/vladsch/flexmark/ast/Text
     663: new           #153                // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$32
     666: dup
     667: aload_0
     668: invokespecial #154                // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$32."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     671: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     674: aastore
     675: dup
     676: bipush        32
     678: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     681: dup
     682: ldc           #155                // class com/vladsch/flexmark/ast/TextBase
     684: new           #156                // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$33
     687: dup
     688: aload_0
     689: invokespecial #157                // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$33."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     692: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     695: aastore
     696: dup
     697: bipush        33
     699: new           #57                 // class com/vladsch/flexmark/formatter/internal/NodeFormattingHandler
     702: dup
     703: ldc           #158                // class com/vladsch/flexmark/ast/ThematicBreak
     705: new           #159                // class com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$34
     708: dup
     709: aload_0
     710: invokespecial #160                // Method com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$34."<init>":(Lcom/vladsch/flexmark/formatter/internal/CoreNodeFormatter;)V
     713: invokespecial #61                 // Method com/vladsch/flexmark/formatter/internal/NodeFormattingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/formatter/CustomNodeFormatter;)V
     716: aastore
     717: invokestatic  #49                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     720: invokespecial #50                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     723: areturn

  private void render(com.vladsch.flexmark.ast.Node, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_1
       1: invokevirtual #161                // Method com/vladsch/flexmark/ast/Node.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: astore        4
       6: aload_1
       7: instanceof    #162                // class com/vladsch/flexmark/ast/Block
      10: ifeq          108
      13: aload_1
      14: checkcast     #162                // class com/vladsch/flexmark/ast/Block
      17: invokevirtual #163                // Method com/vladsch/flexmark/ast/Block.getContentChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      20: astore        5
      22: aload         4
      24: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.isNotNull:()Z
      29: ifeq          60
      32: aload         4
      34: aload         5
      36: invokeinterface #165,  2          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.prefixOf:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      41: astore        6
      43: aload         6
      45: invokeinterface #166,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.isEmpty:()Z
      50: ifne          60
      53: aload_3
      54: aload         6
      56: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      59: pop
      60: aload_2
      61: aload_1
      62: invokeinterface #167,  2          // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
      67: aload         4
      69: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.isNotNull:()Z
      74: ifeq          105
      77: aload         4
      79: aload         5
      81: invokeinterface #168,  2          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.suffixOf:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      86: astore        6
      88: aload         6
      90: invokeinterface #166,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.isEmpty:()Z
      95: ifne          105
      98: aload_3
      99: aload         6
     101: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     104: pop
     105: goto          115
     108: aload_3
     109: aload         4
     111: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     114: pop
     115: return

  private void render(com.vladsch.flexmark.ast.BlankLine, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_2
       1: invokeinterface #169,  1          // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.getDocument:()Lcom/vladsch/flexmark/ast/Document;
       6: getstatic     #170                // Field LIST_ITEM_SPACING:Lcom/vladsch/flexmark/util/options/DataKey;
       9: invokevirtual #171                // Method com/vladsch/flexmark/ast/Document.get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
      12: ifnonnull     70
      15: aload_1
      16: invokevirtual #172                // Method com/vladsch/flexmark/ast/BlankLine.getPrevious:()Lcom/vladsch/flexmark/ast/Node;
      19: ifnull        37
      22: aload_1
      23: invokevirtual #172                // Method com/vladsch/flexmark/ast/BlankLine.getPrevious:()Lcom/vladsch/flexmark/ast/Node;
      26: instanceof    #65                 // class com/vladsch/flexmark/ast/BlankLine
      29: ifne          37
      32: aload_0
      33: iconst_0
      34: putfield      #41                 // Field blankLines:I
      37: aload_0
      38: dup
      39: getfield      #41                 // Field blankLines:I
      42: iconst_1
      43: iadd
      44: putfield      #41                 // Field blankLines:I
      47: aload_0
      48: getfield      #41                 // Field blankLines:I
      51: aload_0
      52: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
      55: getfield      #173                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.maxBlankLines:I
      58: if_icmpgt     70
      61: aload_3
      62: aload_0
      63: getfield      #41                 // Field blankLines:I
      66: invokevirtual #174                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.blankLine:(I)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      69: pop
      70: return

  private void render(com.vladsch.flexmark.ast.Document, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #167,  2          // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
       7: return

  private void render(com.vladsch.flexmark.ast.Heading, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_3
       1: invokevirtual #175                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.blankLine:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       4: pop
       5: aload_1
       6: invokevirtual #176                // Method com/vladsch/flexmark/ast/Heading.isAtxHeading:()Z
       9: ifeq          218
      12: aload_3
      13: aload_1
      14: invokevirtual #177                // Method com/vladsch/flexmark/ast/Heading.getOpeningMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      17: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      20: pop
      21: aload_0
      22: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
      25: getfield      #178                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.spaceAfterAtxMarker:Lcom/vladsch/flexmark/util/format/options/DiscretionaryText;
      28: getstatic     #179                // Field com/vladsch/flexmark/util/format/options/DiscretionaryText.ADD:Lcom/vladsch/flexmark/util/format/options/DiscretionaryText;
      31: if_acmpeq     68
      34: aload_0
      35: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
      38: getfield      #178                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.spaceAfterAtxMarker:Lcom/vladsch/flexmark/util/format/options/DiscretionaryText;
      41: getstatic     #180                // Field com/vladsch/flexmark/util/format/options/DiscretionaryText.AS_IS:Lcom/vladsch/flexmark/util/format/options/DiscretionaryText;
      44: if_acmpne     72
      47: aload_1
      48: invokevirtual #177                // Method com/vladsch/flexmark/ast/Heading.getOpeningMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      51: invokeinterface #181,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.getEndOffset:()I
      56: aload_1
      57: invokevirtual #182                // Method com/vladsch/flexmark/ast/Heading.getText:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      60: invokeinterface #183,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.getStartOffset:()I
      65: if_icmpge     72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: istore        4
      75: iload         4
      77: ifeq          87
      80: aload_3
      81: bipush        32
      83: invokevirtual #184                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(C)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      86: pop
      87: aload_2
      88: aload_1
      89: invokeinterface #167,  2          // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
      94: getstatic     #185                // Field com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$35.$SwitchMap$com$vladsch$flexmark$util$format$options$EqualizeTrailingMarker:[I
      97: aload_0
      98: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
     101: getfield      #186                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.atxHeaderTrailingMarker:Lcom/vladsch/flexmark/util/format/options/EqualizeTrailingMarker;
     104: invokevirtual #187                // Method com/vladsch/flexmark/util/format/options/EqualizeTrailingMarker.ordinal:()I
     107: iaload
     108: tableswitch   { // 1 to 4
                     1: 140
                     2: 155
                     3: 179
                     4: 182
               default: 182
          }
     140: aload_1
     141: invokevirtual #177                // Method com/vladsch/flexmark/ast/Heading.getOpeningMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     144: invokeinterface #188,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.isNull:()Z
     149: ifeq          155
     152: goto          215
     155: iload         4
     157: ifeq          167
     160: aload_3
     161: bipush        32
     163: invokevirtual #184                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(C)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     166: pop
     167: aload_3
     168: aload_1
     169: invokevirtual #177                // Method com/vladsch/flexmark/ast/Heading.getOpeningMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     172: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     175: pop
     176: goto          215
     179: goto          215
     182: aload_1
     183: invokevirtual #189                // Method com/vladsch/flexmark/ast/Heading.getClosingMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     186: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.isNotNull:()Z
     191: ifeq          215
     194: iload         4
     196: ifeq          206
     199: aload_3
     200: bipush        32
     202: invokevirtual #184                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(C)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     205: pop
     206: aload_3
     207: aload_1
     208: invokevirtual #189                // Method com/vladsch/flexmark/ast/Heading.getClosingMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     211: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     214: pop
     215: goto          322
     218: new           #190                // class com/vladsch/flexmark/util/Ref
     221: dup
     222: aload_3
     223: invokevirtual #191                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.offset:()I
     226: invokestatic  #192                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     229: invokespecial #193                // Method com/vladsch/flexmark/util/Ref."<init>":(Ljava/lang/Object;)V
     232: astore        4
     234: aload_3
     235: aload         4
     237: invokevirtual #194                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.lastOffset:(Lcom/vladsch/flexmark/util/Ref;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     240: pop
     241: aload_2
     242: aload_1
     243: invokeinterface #167,  2          // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
     248: aload_3
     249: invokevirtual #56                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.line:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     252: pop
     253: aload_0
     254: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
     257: getfield      #195                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.setextHeaderEqualizeMarker:Z
     260: ifeq          313
     263: aload_3
     264: aload_1
     265: invokevirtual #189                // Method com/vladsch/flexmark/ast/Heading.getClosingMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     268: iconst_0
     269: invokeinterface #196,  2          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.charAt:(I)C
     274: aload_3
     275: invokevirtual #191                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.offset:()I
     278: aload         4
     280: getfield      #197                // Field com/vladsch/flexmark/util/Ref.value:Ljava/lang/Object;
     283: checkcast     #198                // class java/lang/Integer
     286: invokevirtual #199                // Method java/lang/Integer.intValue:()I
     289: isub
     290: iconst_1
     291: newarray       int
     293: dup
     294: iconst_0
     295: aload_0
     296: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
     299: getfield      #200                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.minSetextMarkerLength:I
     302: iastore
     303: invokestatic  #201                // Method com/vladsch/flexmark/util/Utils.minLimit:(I[I)I
     306: invokevirtual #202                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.repeat:(CI)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     309: pop
     310: goto          322
     313: aload_3
     314: aload_1
     315: invokevirtual #189                // Method com/vladsch/flexmark/ast/Heading.getClosingMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     318: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     321: pop
     322: aload_3
     323: invokevirtual #203                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.tailBlankLine:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     326: pop
     327: return

  private void render(com.vladsch.flexmark.ast.BlockQuote, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_1
       1: invokevirtual #204                // Method com/vladsch/flexmark/ast/BlockQuote.getOpeningMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: invokevirtual #205                // Method java/lang/Object.toString:()Ljava/lang/String;
       7: astore        4
       9: iconst_0
      10: istore        5
      12: getstatic     #206                // Field com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$35.$SwitchMap$com$vladsch$flexmark$util$format$options$BlockQuoteMarker:[I
      15: aload_0
      16: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
      19: getfield      #207                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.blockQuoteMarkers:Lcom/vladsch/flexmark/util/format/options/BlockQuoteMarker;
      22: invokevirtual #208                // Method com/vladsch/flexmark/util/format/options/BlockQuoteMarker.ordinal:()I
      25: iaload
      26: tableswitch   { // 1 to 4
                     1: 56
                     2: 89
                     3: 96
                     4: 106
               default: 110
          }
      56: aload_1
      57: invokevirtual #209                // Method com/vladsch/flexmark/ast/BlockQuote.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      60: aload_1
      61: invokevirtual #204                // Method com/vladsch/flexmark/ast/BlockQuote.getOpeningMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      64: invokeinterface #183,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.getStartOffset:()I
      69: aload_1
      70: invokevirtual #210                // Method com/vladsch/flexmark/ast/BlockQuote.getFirstChild:()Lcom/vladsch/flexmark/ast/Node;
      73: invokevirtual #211                // Method com/vladsch/flexmark/ast/Node.getStartOffset:()I
      76: invokeinterface #212,  3          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.baseSubSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      81: invokevirtual #205                // Method java/lang/Object.toString:()Ljava/lang/String;
      84: astore        4
      86: goto          110
      89: ldc           #213                // String >
      91: astore        4
      93: goto          110
      96: ldc           #214                // String >
      98: astore        4
     100: iconst_1
     101: istore        5
     103: goto          110
     106: ldc           #214                // String >
     108: astore        4
     110: aload_0
     111: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
     114: getfield      #215                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.blockQuoteBlankLines:Z
     117: ifeq          125
     120: aload_3
     121: invokevirtual #175                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.blankLine:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     124: pop
     125: aload_3
     126: invokevirtual #216                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.pushPrefix:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     129: pop
     130: aload_3
     131: invokevirtual #217                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.getPrefix:()Ljava/lang/CharSequence;
     134: invokeinterface #218,  1          // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
     139: astore        6
     141: iload         5
     143: ifeq          192
     146: aload         6
     148: ldc           #214                // String >
     150: invokevirtual #219                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
     153: ifeq          192
     156: new           #220                // class java/lang/StringBuilder
     159: dup
     160: invokespecial #221                // Method java/lang/StringBuilder."<init>":()V
     163: aload         6
     165: iconst_0
     166: aload         6
     168: invokevirtual #222                // Method java/lang/String.length:()I
     171: iconst_1
     172: isub
     173: invokevirtual #223                // Method java/lang/String.substring:(II)Ljava/lang/String;
     176: invokevirtual #224                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: aload         4
     181: invokevirtual #224                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     184: invokevirtual #225                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     187: astore        6
     189: goto          214
     192: new           #220                // class java/lang/StringBuilder
     195: dup
     196: invokespecial #221                // Method java/lang/StringBuilder."<init>":()V
     199: aload         6
     201: invokevirtual #224                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     204: aload         4
     206: invokevirtual #224                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: invokevirtual #225                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     212: astore        6
     214: aload_3
     215: invokevirtual #226                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.getOptions:()I
     218: istore        7
     220: aload_3
     221: iload         7
     223: bipush        8
     225: ior
     226: invokevirtual #228                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.setOptions:(I)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     229: pop
     230: aload_3
     231: aload         6
     233: invokevirtual #229                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.setPrefix:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     236: pop
     237: aload_3
     238: iload         7
     240: invokevirtual #228                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.setOptions:(I)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     243: pop
     244: aload_2
     245: aload_1
     246: invokeinterface #167,  2          // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
     251: aload_3
     252: invokevirtual #230                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.popPrefix:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     255: pop
     256: aload_0
     257: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
     260: getfield      #215                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.blockQuoteBlankLines:Z
     263: ifeq          271
     266: aload_3
     267: invokevirtual #175                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.blankLine:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     270: pop
     271: return

  private void render(com.vladsch.flexmark.ast.ThematicBreak, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_3
       1: invokevirtual #175                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.blankLine:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       4: pop
       5: aload_0
       6: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
       9: getfield      #231                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.thematicBreak:Ljava/lang/String;
      12: ifnull        30
      15: aload_3
      16: aload_0
      17: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
      20: getfield      #231                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.thematicBreak:Ljava/lang/String;
      23: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      26: pop
      27: goto          39
      30: aload_3
      31: aload_1
      32: invokevirtual #232                // Method com/vladsch/flexmark/ast/ThematicBreak.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      35: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      38: pop
      39: aload_3
      40: invokevirtual #203                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.tailBlankLine:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      43: pop
      44: return

  private void render(com.vladsch.flexmark.ast.FencedCodeBlock, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_3
       1: invokevirtual #175                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.blankLine:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       4: pop
       5: aload_1
       6: invokevirtual #233                // Method com/vladsch/flexmark/ast/FencedCodeBlock.getOpeningMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       9: astore        4
      11: aload_1
      12: invokevirtual #234                // Method com/vladsch/flexmark/ast/FencedCodeBlock.getClosingMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      15: astore        5
      17: aload         4
      19: iconst_0
      20: invokeinterface #235,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      25: istore        6
      27: aload         5
      29: invokeinterface #236,  1          // InterfaceMethod java/lang/CharSequence.length:()I
      34: ifle          48
      37: aload         5
      39: iconst_0
      40: invokeinterface #235,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      45: goto          49
      48: iconst_0
      49: istore        7
      51: aload         4
      53: invokeinterface #236,  1          // InterfaceMethod java/lang/CharSequence.length:()I
      58: istore        8
      60: aload         5
      62: invokeinterface #236,  1          // InterfaceMethod java/lang/CharSequence.length:()I
      67: istore        9
      69: getstatic     #237                // Field com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$35.$SwitchMap$com$vladsch$flexmark$util$format$options$CodeFenceMarker:[I
      72: aload_0
      73: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
      76: getfield      #238                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.fencedCodeMarkerType:Lcom/vladsch/flexmark/util/format/options/CodeFenceMarker;
      79: invokevirtual #239                // Method com/vladsch/flexmark/util/format/options/CodeFenceMarker.ordinal:()I
      82: iaload
      83: tableswitch   { // 1 to 3
                     1: 108
                     2: 111
                     3: 122
               default: 130
          }
     108: goto          130
     111: bipush        96
     113: istore        6
     115: iload         6
     117: istore        7
     119: goto          130
     122: bipush        126
     124: istore        6
     126: iload         6
     128: istore        7
     130: iload         8
     132: aload_0
     133: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
     136: getfield      #240                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.fencedCodeMarkerLength:I
     139: if_icmpge     151
     142: aload_0
     143: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
     146: getfield      #240                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.fencedCodeMarkerLength:I
     149: istore        8
     151: iload         9
     153: aload_0
     154: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
     157: getfield      #240                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.fencedCodeMarkerLength:I
     160: if_icmpge     172
     163: aload_0
     164: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
     167: getfield      #240                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.fencedCodeMarkerLength:I
     170: istore        9
     172: iload         6
     174: invokestatic  #241                // Method java/lang/String.valueOf:(C)Ljava/lang/String;
     177: iload         8
     179: invokestatic  #242                // Method com/vladsch/flexmark/util/sequence/RepeatedCharSequence.of:(Ljava/lang/CharSequence;I)Lcom/vladsch/flexmark/util/sequence/RepeatedCharSequence;
     182: astore        4
     184: aload_0
     185: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
     188: getfield      #243                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.fencedCodeMatchClosingMarker:Z
     191: ifne          199
     194: iload         7
     196: ifne          206
     199: aload         4
     201: astore        5
     203: goto          218
     206: iload         7
     208: invokestatic  #241                // Method java/lang/String.valueOf:(C)Ljava/lang/String;
     211: iload         9
     213: invokestatic  #242                // Method com/vladsch/flexmark/util/sequence/RepeatedCharSequence.of:(Ljava/lang/CharSequence;I)Lcom/vladsch/flexmark/util/sequence/RepeatedCharSequence;
     216: astore        5
     218: aload_3
     219: aload         4
     221: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     224: pop
     225: aload_0
     226: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
     229: getfield      #244                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.fencedCodeSpaceBeforeInfo:Z
     232: ifeq          242
     235: aload_3
     236: bipush        32
     238: invokevirtual #184                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(C)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     241: pop
     242: aload_3
     243: aload_1
     244: invokevirtual #245                // Method com/vladsch/flexmark/ast/FencedCodeBlock.getInfo:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     247: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     250: pop
     251: aload_3
     252: invokevirtual #56                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.line:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     255: pop
     256: aload_3
     257: iconst_1
     258: invokevirtual #246                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.openPreFormatted:(Z)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     261: pop
     262: aload_0
     263: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
     266: getfield      #247                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.fencedCodeMinimizeIndent:Z
     269: ifeq          472
     272: aload_1
     273: invokevirtual #248                // Method com/vladsch/flexmark/ast/FencedCodeBlock.getContentLines:()Ljava/util/List;
     276: astore        10
     278: aload         10
     280: invokeinterface #249,  1          // InterfaceMethod java/util/List.size:()I
     285: newarray       int
     287: astore        11
     289: ldc           #250                // int 2147483647
     291: istore        12
     293: iconst_0
     294: istore        13
     296: aload         10
     298: invokeinterface #251,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     303: astore        14
     305: aload         14
     307: invokeinterface #252,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     312: ifeq          366
     315: aload         14
     317: invokeinterface #253,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     322: checkcast     #254                // class com/vladsch/flexmark/util/sequence/BasedSequence
     325: astore        15
     327: aload         11
     329: iload         13
     331: aload         15
     333: iconst_0
     334: ldc           #255                // String  \t
     336: invokeinterface #256,  3          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.countLeadingColumns:(ILjava/lang/CharSequence;)I
     341: iastore
     342: iload         12
     344: iconst_1
     345: newarray       int
     347: dup
     348: iconst_0
     349: aload         11
     351: iload         13
     353: iaload
     354: iastore
     355: invokestatic  #257                // Method com/vladsch/flexmark/util/Utils.min:(I[I)I
     358: istore        12
     360: iinc          13, 1
     363: goto          305
     366: new           #258                // class java/util/ArrayList
     369: dup
     370: invokespecial #259                // Method java/util/ArrayList."<init>":()V
     373: astore        14
     375: iload         12
     377: ifle          460
     380: iconst_0
     381: istore        13
     383: aload         10
     385: invokeinterface #251,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     390: astore        15
     392: aload         15
     394: invokeinterface #252,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     399: ifeq          457
     402: aload         15
     404: invokeinterface #253,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     409: checkcast     #254                // class com/vladsch/flexmark/util/sequence/BasedSequence
     412: astore        16
     414: aload         11
     416: iload         13
     418: iaload
     419: iload         12
     421: if_icmple     439
     424: aload_3
     425: bipush        32
     427: aload         11
     429: iload         13
     431: iaload
     432: iload         12
     434: isub
     435: invokevirtual #202                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.repeat:(CI)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     438: pop
     439: aload_3
     440: aload         16
     442: invokeinterface #260,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.trimStart:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     447: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     450: pop
     451: iinc          13, 1
     454: goto          392
     457: goto          469
     460: aload_3
     461: aload_1
     462: invokevirtual #261                // Method com/vladsch/flexmark/ast/FencedCodeBlock.getContentChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     465: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     468: pop
     469: goto          481
     472: aload_3
     473: aload_1
     474: invokevirtual #261                // Method com/vladsch/flexmark/ast/FencedCodeBlock.getContentChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     477: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     480: pop
     481: aload_3
     482: invokevirtual #262                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.closePreFormatted:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     485: pop
     486: aload_3
     487: invokevirtual #56                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.line:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     490: aload         5
     492: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     495: invokevirtual #56                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.line:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     498: pop
     499: aload_3
     500: invokevirtual #203                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.tailBlankLine:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     503: pop
     504: return

  private void render(com.vladsch.flexmark.ast.IndentedCodeBlock, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_3
       1: invokevirtual #175                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.blankLine:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       4: pop
       5: ldc_w         #263                // String
       8: aload_0
       9: getfield      #40                 // Field listOptions:Lcom/vladsch/flexmark/parser/ListOptions;
      12: invokevirtual #264                // Method com/vladsch/flexmark/parser/ListOptions.getCodeIndent:()I
      15: invokestatic  #242                // Method com/vladsch/flexmark/util/sequence/RepeatedCharSequence.of:(Ljava/lang/CharSequence;I)Lcom/vladsch/flexmark/util/sequence/RepeatedCharSequence;
      18: invokevirtual #265                // Method com/vladsch/flexmark/util/sequence/RepeatedCharSequence.toString:()Ljava/lang/String;
      21: astore        4
      23: aload_0
      24: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
      27: getfield      #266                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.emulationProfile:Lcom/vladsch/flexmark/parser/ParserEmulationProfile;
      30: getstatic     #267                // Field com/vladsch/flexmark/parser/ParserEmulationProfile.GITHUB_DOC:Lcom/vladsch/flexmark/parser/ParserEmulationProfile;
      33: if_acmpne     91
      36: aload_1
      37: invokevirtual #268                // Method com/vladsch/flexmark/ast/IndentedCodeBlock.getParent:()Lcom/vladsch/flexmark/ast/Block;
      40: instanceof    #269                // class com/vladsch/flexmark/ast/ListItem
      43: ifeq          91
      46: aload_1
      47: invokevirtual #268                // Method com/vladsch/flexmark/ast/IndentedCodeBlock.getParent:()Lcom/vladsch/flexmark/ast/Block;
      50: checkcast     #269                // class com/vladsch/flexmark/ast/ListItem
      53: invokevirtual #270                // Method com/vladsch/flexmark/ast/ListItem.getOpeningMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      56: astore        5
      58: ldc_w         #263                // String
      61: bipush        8
      63: aload         5
      65: invokeinterface #271,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
      70: isub
      71: iconst_1
      72: isub
      73: iconst_1
      74: newarray       int
      76: dup
      77: iconst_0
      78: iconst_4
      79: iastore
      80: invokestatic  #201                // Method com/vladsch/flexmark/util/Utils.minLimit:(I[I)I
      83: invokestatic  #242                // Method com/vladsch/flexmark/util/sequence/RepeatedCharSequence.of:(Ljava/lang/CharSequence;I)Lcom/vladsch/flexmark/util/sequence/RepeatedCharSequence;
      86: invokevirtual #265                // Method com/vladsch/flexmark/util/sequence/RepeatedCharSequence.toString:()Ljava/lang/String;
      89: astore        4
      91: aload_3
      92: invokevirtual #216                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.pushPrefix:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      95: aload         4
      97: invokevirtual #272                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.addPrefix:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     100: pop
     101: aload_3
     102: iconst_1
     103: invokevirtual #246                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.openPreFormatted:(Z)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     106: pop
     107: aload_0
     108: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
     111: getfield      #273                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.indentedCodeMinimizeIndent:Z
     114: ifeq          308
     117: aload_1
     118: invokevirtual #274                // Method com/vladsch/flexmark/ast/IndentedCodeBlock.getContentLines:()Ljava/util/List;
     121: astore        5
     123: aload         5
     125: invokeinterface #249,  1          // InterfaceMethod java/util/List.size:()I
     130: newarray       int
     132: astore        6
     134: ldc           #250                // int 2147483647
     136: istore        7
     138: iconst_0
     139: istore        8
     141: aload         5
     143: invokeinterface #251,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     148: astore        9
     150: aload         9
     152: invokeinterface #252,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     157: ifeq          211
     160: aload         9
     162: invokeinterface #253,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     167: checkcast     #254                // class com/vladsch/flexmark/util/sequence/BasedSequence
     170: astore        10
     172: aload         6
     174: iload         8
     176: aload         10
     178: iconst_0
     179: ldc           #255                // String  \t
     181: invokeinterface #256,  3          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.countLeadingColumns:(ILjava/lang/CharSequence;)I
     186: iastore
     187: iload         7
     189: iconst_1
     190: newarray       int
     192: dup
     193: iconst_0
     194: aload         6
     196: iload         8
     198: iaload
     199: iastore
     200: invokestatic  #257                // Method com/vladsch/flexmark/util/Utils.min:(I[I)I
     203: istore        7
     205: iinc          8, 1
     208: goto          150
     211: iload         7
     213: ifle          296
     216: iconst_0
     217: istore        8
     219: aload         5
     221: invokeinterface #251,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     226: astore        9
     228: aload         9
     230: invokeinterface #252,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     235: ifeq          293
     238: aload         9
     240: invokeinterface #253,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     245: checkcast     #254                // class com/vladsch/flexmark/util/sequence/BasedSequence
     248: astore        10
     250: aload         6
     252: iload         8
     254: iaload
     255: iload         7
     257: if_icmple     275
     260: aload_3
     261: bipush        32
     263: aload         6
     265: iload         8
     267: iaload
     268: iload         7
     270: isub
     271: invokevirtual #202                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.repeat:(CI)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     274: pop
     275: aload_3
     276: aload         10
     278: invokeinterface #260,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.trimStart:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     283: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     286: pop
     287: iinc          8, 1
     290: goto          228
     293: goto          305
     296: aload_3
     297: aload_1
     298: invokevirtual #275                // Method com/vladsch/flexmark/ast/IndentedCodeBlock.getContentChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     301: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     304: pop
     305: goto          317
     308: aload_3
     309: aload_1
     310: invokevirtual #275                // Method com/vladsch/flexmark/ast/IndentedCodeBlock.getContentChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     313: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     316: pop
     317: aload_3
     318: invokevirtual #262                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.closePreFormatted:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     321: pop
     322: aload_3
     323: invokevirtual #230                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.popPrefix:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     326: pop
     327: aload_3
     328: invokevirtual #203                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.tailBlankLine:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     331: pop
     332: return

  private void render(com.vladsch.flexmark.ast.BulletList, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokestatic  #276                // Method renderList:(Lcom/vladsch/flexmark/ast/ListBlock;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       6: return

  private void render(com.vladsch.flexmark.ast.OrderedList, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokestatic  #276                // Method renderList:(Lcom/vladsch/flexmark/ast/ListBlock;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       6: return

  private void render(com.vladsch.flexmark.ast.BulletListItem, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: aload_0
       4: getfield      #40                 // Field listOptions:Lcom/vladsch/flexmark/parser/ListOptions;
       7: ldc_w         #277                // String
      10: invokestatic  #278                // Method renderListItem:(Lcom/vladsch/flexmark/ast/ListItem;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;Lcom/vladsch/flexmark/parser/ListOptions;Ljava/lang/CharSequence;)V
      13: return

  private void render(com.vladsch.flexmark.ast.OrderedListItem, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: aload_0
       4: getfield      #40                 // Field listOptions:Lcom/vladsch/flexmark/parser/ListOptions;
       7: ldc_w         #277                // String
      10: invokestatic  #278                // Method renderListItem:(Lcom/vladsch/flexmark/ast/ListItem;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;Lcom/vladsch/flexmark/parser/ListOptions;Ljava/lang/CharSequence;)V
      13: return

  public static void renderList(com.vladsch.flexmark.ast.ListBlock, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: new           #258                // class java/util/ArrayList
       3: dup
       4: invokespecial #259                // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: aload_0
       9: invokevirtual #279                // Method com/vladsch/flexmark/ast/ListBlock.getFirstChild:()Lcom/vladsch/flexmark/ast/Node;
      12: astore        4
      14: aload         4
      16: ifnull        36
      19: aload_3
      20: aload         4
      22: invokevirtual #280                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      25: pop
      26: aload         4
      28: invokevirtual #281                // Method com/vladsch/flexmark/ast/Node.getNext:()Lcom/vladsch/flexmark/ast/Node;
      31: astore        4
      33: goto          14
      36: aload_0
      37: aload_1
      38: aload_2
      39: aload_3
      40: invokestatic  #282                // Method renderList:(Lcom/vladsch/flexmark/ast/ListBlock;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;Ljava/util/List;)V
      43: return

  public static void renderList(com.vladsch.flexmark.ast.ListBlock, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter, java.util.List<com.vladsch.flexmark.ast.Node>);
    Code:
       0: aload_1
       1: invokeinterface #283,  1          // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.getFormatterOptions:()Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
       6: getfield      #284                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.listAddBlankLineBefore:Z
       9: ifeq          34
      12: aload_0
      13: iconst_1
      14: anewarray     #47                 // class java/lang/Class
      17: dup
      18: iconst_0
      19: ldc_w         #269                // class com/vladsch/flexmark/ast/ListItem
      22: aastore
      23: invokevirtual #285                // Method com/vladsch/flexmark/ast/ListBlock.isOrDescendantOfType:([Ljava/lang/Class;)Z
      26: ifne          34
      29: aload_2
      30: invokevirtual #175                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.blankLine:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      33: pop
      34: aload_1
      35: invokeinterface #169,  1          // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.getDocument:()Lcom/vladsch/flexmark/ast/Document;
      40: astore        4
      42: aload         4
      44: getstatic     #170                // Field LIST_ITEM_SPACING:Lcom/vladsch/flexmark/util/options/DataKey;
      47: invokevirtual #171                // Method com/vladsch/flexmark/ast/Document.get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
      50: checkcast     #286                // class com/vladsch/flexmark/util/format/options/ListSpacing
      53: astore        5
      55: aload         4
      57: getstatic     #287                // Field LIST_ITEM_NUMBER:Lcom/vladsch/flexmark/util/options/DataKey;
      60: invokevirtual #171                // Method com/vladsch/flexmark/ast/Document.get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
      63: checkcast     #198                // class java/lang/Integer
      66: invokevirtual #199                // Method java/lang/Integer.intValue:()I
      69: istore        6
      71: aload         4
      73: getstatic     #287                // Field LIST_ITEM_NUMBER:Lcom/vladsch/flexmark/util/options/DataKey;
      76: aload_0
      77: instanceof    #128                // class com/vladsch/flexmark/ast/OrderedList
      80: ifeq          93
      83: aload_0
      84: checkcast     #128                // class com/vladsch/flexmark/ast/OrderedList
      87: invokevirtual #288                // Method com/vladsch/flexmark/ast/OrderedList.getStartNumber:()I
      90: goto          94
      93: iconst_1
      94: invokestatic  #192                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      97: invokevirtual #289                // Method com/vladsch/flexmark/ast/Document.set:(Lcom/vladsch/flexmark/util/options/DataKey;Ljava/lang/Object;)Lcom/vladsch/flexmark/util/options/MutableDataHolder;
     100: pop
     101: aconst_null
     102: astore        7
     104: getstatic     #290                // Field com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$35.$SwitchMap$com$vladsch$flexmark$util$format$options$ListSpacing:[I
     107: aload_1
     108: invokeinterface #283,  1          // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.getFormatterOptions:()Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
     113: getfield      #291                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.listSpacing:Lcom/vladsch/flexmark/util/format/options/ListSpacing;
     116: invokevirtual #292                // Method com/vladsch/flexmark/util/format/options/ListSpacing.ordinal:()I
     119: iaload
     120: tableswitch   { // 1 to 5
                     1: 156
                     2: 159
                     3: 167
                     4: 175
                     5: 196
               default: 269
          }
     156: goto          269
     159: getstatic     #293                // Field com/vladsch/flexmark/util/format/options/ListSpacing.LOOSE:Lcom/vladsch/flexmark/util/format/options/ListSpacing;
     162: astore        7
     164: goto          269
     167: getstatic     #294                // Field com/vladsch/flexmark/util/format/options/ListSpacing.TIGHT:Lcom/vladsch/flexmark/util/format/options/ListSpacing;
     170: astore        7
     172: goto          269
     175: aload_0
     176: invokevirtual #295                // Method com/vladsch/flexmark/ast/ListBlock.isLoose:()Z
     179: ifeq          188
     182: getstatic     #293                // Field com/vladsch/flexmark/util/format/options/ListSpacing.LOOSE:Lcom/vladsch/flexmark/util/format/options/ListSpacing;
     185: goto          191
     188: getstatic     #294                // Field com/vladsch/flexmark/util/format/options/ListSpacing.TIGHT:Lcom/vladsch/flexmark/util/format/options/ListSpacing;
     191: astore        7
     193: goto          269
     196: getstatic     #293                // Field com/vladsch/flexmark/util/format/options/ListSpacing.LOOSE:Lcom/vladsch/flexmark/util/format/options/ListSpacing;
     199: astore        7
     201: aload_3
     202: invokeinterface #251,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     207: astore        8
     209: aload         8
     211: invokeinterface #252,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     216: ifeq          269
     219: aload         8
     221: invokeinterface #253,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     226: checkcast     #58                 // class com/vladsch/flexmark/ast/Node
     229: astore        9
     231: aload         9
     233: instanceof    #269                // class com/vladsch/flexmark/ast/ListItem
     236: ifeq          266
     239: aload         9
     241: checkcast     #269                // class com/vladsch/flexmark/ast/ListItem
     244: invokevirtual #296                // Method com/vladsch/flexmark/ast/ListItem.isOwnTight:()Z
     247: ifeq          266
     250: aload         9
     252: invokevirtual #281                // Method com/vladsch/flexmark/ast/Node.getNext:()Lcom/vladsch/flexmark/ast/Node;
     255: ifnull        266
     258: getstatic     #294                // Field com/vladsch/flexmark/util/format/options/ListSpacing.TIGHT:Lcom/vladsch/flexmark/util/format/options/ListSpacing;
     261: astore        7
     263: goto          269
     266: goto          209
     269: aload         4
     271: getstatic     #170                // Field LIST_ITEM_SPACING:Lcom/vladsch/flexmark/util/options/DataKey;
     274: aload         7
     276: invokevirtual #289                // Method com/vladsch/flexmark/ast/Document.set:(Lcom/vladsch/flexmark/util/options/DataKey;Ljava/lang/Object;)Lcom/vladsch/flexmark/util/options/MutableDataHolder;
     279: pop
     280: aload_3
     281: invokeinterface #251,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     286: astore        8
     288: aload         8
     290: invokeinterface #252,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     295: ifeq          347
     298: aload         8
     300: invokeinterface #253,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     305: checkcast     #58                 // class com/vladsch/flexmark/ast/Node
     308: astore        9
     310: aload         7
     312: getstatic     #293                // Field com/vladsch/flexmark/util/format/options/ListSpacing.LOOSE:Lcom/vladsch/flexmark/util/format/options/ListSpacing;
     315: if_acmpne     336
     318: aload         5
     320: ifnull        331
     323: aload         5
     325: getstatic     #293                // Field com/vladsch/flexmark/util/format/options/ListSpacing.LOOSE:Lcom/vladsch/flexmark/util/format/options/ListSpacing;
     328: if_acmpne     336
     331: aload_2
     332: invokevirtual #175                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.blankLine:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     335: pop
     336: aload_1
     337: aload         9
     339: invokeinterface #297,  2          // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.render:(Lcom/vladsch/flexmark/ast/Node;)V
     344: goto          288
     347: aload         4
     349: getstatic     #170                // Field LIST_ITEM_SPACING:Lcom/vladsch/flexmark/util/options/DataKey;
     352: aload         5
     354: invokevirtual #289                // Method com/vladsch/flexmark/ast/Document.set:(Lcom/vladsch/flexmark/util/options/DataKey;Ljava/lang/Object;)Lcom/vladsch/flexmark/util/options/MutableDataHolder;
     357: pop
     358: aload         4
     360: getstatic     #287                // Field LIST_ITEM_NUMBER:Lcom/vladsch/flexmark/util/options/DataKey;
     363: iload         6
     365: invokestatic  #192                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     368: invokevirtual #289                // Method com/vladsch/flexmark/ast/Document.set:(Lcom/vladsch/flexmark/util/options/DataKey;Ljava/lang/Object;)Lcom/vladsch/flexmark/util/options/MutableDataHolder;
     371: pop
     372: aload_0
     373: iconst_1
     374: anewarray     #47                 // class java/lang/Class
     377: dup
     378: iconst_0
     379: ldc_w         #269                // class com/vladsch/flexmark/ast/ListItem
     382: aastore
     383: invokevirtual #285                // Method com/vladsch/flexmark/ast/ListBlock.isOrDescendantOfType:([Ljava/lang/Class;)Z
     386: ifne          394
     389: aload_2
     390: invokevirtual #175                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.blankLine:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     393: pop
     394: return

  public static void renderListItem(com.vladsch.flexmark.ast.ListItem, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter, com.vladsch.flexmark.parser.ListOptions, java.lang.CharSequence);
    Code:
       0: aload_1
       1: invokeinterface #283,  1          // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.getFormatterOptions:()Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
       6: astore        5
       8: aload_0
       9: invokevirtual #270                // Method com/vladsch/flexmark/ast/ListItem.getOpeningMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      12: astore        6
      14: aload_0
      15: instanceof    #134                // class com/vladsch/flexmark/ast/OrderedListItem
      18: ifeq          263
      21: aload         6
      23: aload         6
      25: invokeinterface #236,  1          // InterfaceMethod java/lang/CharSequence.length:()I
      30: iconst_1
      31: isub
      32: invokeinterface #235,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      37: istore        7
      39: aload         6
      41: iconst_0
      42: aload         6
      44: invokeinterface #236,  1          // InterfaceMethod java/lang/CharSequence.length:()I
      49: iconst_1
      50: isub
      51: invokeinterface #298,  3          // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
      56: astore        8
      58: getstatic     #299                // Field com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$35.$SwitchMap$com$vladsch$flexmark$util$format$options$ListNumberedMarker:[I
      61: aload         5
      63: getfield      #300                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.listNumberedMarker:Lcom/vladsch/flexmark/util/format/options/ListNumberedMarker;
      66: invokevirtual #301                // Method com/vladsch/flexmark/util/format/options/ListNumberedMarker.ordinal:()I
      69: iaload
      70: tableswitch   { // 1 to 3
                     1: 96
                     2: 99
                     3: 106
               default: 113
          }
      96: goto          148
      99: bipush        46
     101: istore        7
     103: goto          148
     106: bipush        41
     108: istore        7
     110: goto          148
     113: new           #302                // class java/lang/IllegalStateException
     116: dup
     117: new           #220                // class java/lang/StringBuilder
     120: dup
     121: invokespecial #221                // Method java/lang/StringBuilder."<init>":()V
     124: ldc_w         #303                // String Missing case for ListNumberedMarker
     127: invokevirtual #224                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: aload         5
     132: getfield      #300                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.listNumberedMarker:Lcom/vladsch/flexmark/util/format/options/ListNumberedMarker;
     135: invokevirtual #304                // Method com/vladsch/flexmark/util/format/options/ListNumberedMarker.name:()Ljava/lang/String;
     138: invokevirtual #224                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: invokevirtual #225                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     144: invokespecial #305                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     147: athrow
     148: aload         5
     150: getfield      #306                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.listRenumberItems:Z
     153: ifeq          235
     156: aload_1
     157: invokeinterface #169,  1          // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.getDocument:()Lcom/vladsch/flexmark/ast/Document;
     162: astore        9
     164: aload         9
     166: getstatic     #287                // Field LIST_ITEM_NUMBER:Lcom/vladsch/flexmark/util/options/DataKey;
     169: invokevirtual #171                // Method com/vladsch/flexmark/ast/Document.get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
     172: checkcast     #198                // class java/lang/Integer
     175: astore        10
     177: ldc_w         #307                // String %d%c
     180: iconst_2
     181: anewarray     #308                // class java/lang/Object
     184: dup
     185: iconst_0
     186: aload         10
     188: astore        11
     190: aload         10
     192: invokevirtual #199                // Method java/lang/Integer.intValue:()I
     195: iconst_1
     196: iadd
     197: invokestatic  #192                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     200: dup
     201: astore        10
     203: astore        12
     205: aload         11
     207: aastore
     208: dup
     209: iconst_1
     210: iload         7
     212: invokestatic  #309                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     215: aastore
     216: invokestatic  #310                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     219: astore        6
     221: aload         9
     223: getstatic     #287                // Field LIST_ITEM_NUMBER:Lcom/vladsch/flexmark/util/options/DataKey;
     226: aload         10
     228: invokevirtual #289                // Method com/vladsch/flexmark/ast/Document.set:(Lcom/vladsch/flexmark/util/options/DataKey;Ljava/lang/Object;)Lcom/vladsch/flexmark/util/options/MutableDataHolder;
     231: pop
     232: goto          260
     235: ldc_w         #311                // String %s%c
     238: iconst_2
     239: anewarray     #308                // class java/lang/Object
     242: dup
     243: iconst_0
     244: aload         8
     246: aastore
     247: dup
     248: iconst_1
     249: iload         7
     251: invokestatic  #309                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     254: aastore
     255: invokestatic  #310                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     258: astore        6
     260: goto          366
     263: getstatic     #312                // Field com/vladsch/flexmark/formatter/internal/CoreNodeFormatter$35.$SwitchMap$com$vladsch$flexmark$util$format$options$ListBulletMarker:[I
     266: aload         5
     268: getfield      #313                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.listBulletMarker:Lcom/vladsch/flexmark/util/format/options/ListBulletMarker;
     271: invokevirtual #314                // Method com/vladsch/flexmark/util/format/options/ListBulletMarker.ordinal:()I
     274: iaload
     275: tableswitch   { // 1 to 4
                     1: 304
                     2: 307
                     3: 315
                     4: 323
               default: 331
          }
     304: goto          366
     307: ldc_w         #315                // String -
     310: astore        6
     312: goto          366
     315: ldc_w         #316                // String *
     318: astore        6
     320: goto          366
     323: ldc_w         #317                // String +
     326: astore        6
     328: goto          366
     331: new           #302                // class java/lang/IllegalStateException
     334: dup
     335: new           #220                // class java/lang/StringBuilder
     338: dup
     339: invokespecial #221                // Method java/lang/StringBuilder."<init>":()V
     342: ldc_w         #318                // String Missing case for ListBulletMarker
     345: invokevirtual #224                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     348: aload         5
     350: getfield      #313                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.listBulletMarker:Lcom/vladsch/flexmark/util/format/options/ListBulletMarker;
     353: invokevirtual #319                // Method com/vladsch/flexmark/util/format/options/ListBulletMarker.name:()Ljava/lang/String;
     356: invokevirtual #224                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     359: invokevirtual #225                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     362: invokespecial #305                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     365: athrow
     366: aload_2
     367: aload         6
     369: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     372: bipush        32
     374: invokevirtual #184                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(C)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     377: aload         4
     379: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     382: pop
     383: aload_2
     384: invokevirtual #216                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.pushPrefix:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     387: aload         5
     389: getfield      #320                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.itemContentIndent:Z
     392: ifeq          431
     395: bipush        32
     397: aload         6
     399: invokeinterface #236,  1          // InterfaceMethod java/lang/CharSequence.length:()I
     404: aload_3
     405: invokevirtual #321                // Method com/vladsch/flexmark/parser/ListOptions.isItemContentAfterSuffix:()Z
     408: ifeq          421
     411: aload         4
     413: invokeinterface #236,  1          // InterfaceMethod java/lang/CharSequence.length:()I
     418: goto          422
     421: iconst_0
     422: iadd
     423: iconst_1
     424: iadd
     425: invokestatic  #322                // Method com/vladsch/flexmark/util/sequence/RepeatedCharSequence.of:(CI)Lcom/vladsch/flexmark/util/sequence/RepeatedCharSequence;
     428: goto          444
     431: ldc_w         #263                // String
     434: aload_3
     435: invokevirtual #323                // Method com/vladsch/flexmark/parser/ListOptions.getItemIndent:()I
     438: invokestatic  #242                // Method com/vladsch/flexmark/util/sequence/RepeatedCharSequence.of:(Ljava/lang/CharSequence;I)Lcom/vladsch/flexmark/util/sequence/RepeatedCharSequence;
     441: invokevirtual #265                // Method com/vladsch/flexmark/util/sequence/RepeatedCharSequence.toString:()Ljava/lang/String;
     444: invokevirtual #272                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.addPrefix:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     447: pop
     448: aload_1
     449: aload_0
     450: invokeinterface #167,  2          // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
     455: aload_2
     456: invokevirtual #230                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.popPrefix:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
     459: pop
     460: return

  private void render(com.vladsch.flexmark.ast.Emphasis, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #324                // Method com/vladsch/flexmark/ast/Emphasis.getOpeningMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       8: pop
       9: aload_2
      10: aload_1
      11: invokeinterface #167,  2          // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
      16: aload_3
      17: aload_1
      18: invokevirtual #324                // Method com/vladsch/flexmark/ast/Emphasis.getOpeningMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      21: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      24: pop
      25: return

  private void render(com.vladsch.flexmark.ast.StrongEmphasis, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #325                // Method com/vladsch/flexmark/ast/StrongEmphasis.getOpeningMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       8: pop
       9: aload_2
      10: aload_1
      11: invokeinterface #167,  2          // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
      16: aload_3
      17: aload_1
      18: invokevirtual #325                // Method com/vladsch/flexmark/ast/StrongEmphasis.getOpeningMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      21: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      24: pop
      25: return

  public static void renderTextBlockParagraphLines(com.vladsch.flexmark.ast.Node, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #167,  2          // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
       7: aload_2
       8: invokevirtual #56                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.line:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      11: pop
      12: return

  public static void renderLooseParagraph(com.vladsch.flexmark.ast.Paragraph, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_2
       1: invokevirtual #175                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.blankLine:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       4: pop
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokestatic  #326                // Method renderTextBlockParagraphLines:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
      11: aload_2
      12: invokevirtual #203                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.tailBlankLine:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      15: pop
      16: return

  public static void renderLooseItemParagraph(com.vladsch.flexmark.ast.Paragraph, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #326                // Method renderTextBlockParagraphLines:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       6: aload_2
       7: invokevirtual #203                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.tailBlankLine:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      10: pop
      11: return

  private void render(com.vladsch.flexmark.ast.Paragraph, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_1
       1: invokevirtual #327                // Method com/vladsch/flexmark/ast/Paragraph.getParent:()Lcom/vladsch/flexmark/ast/Block;
       4: instanceof    #328                // class com/vladsch/flexmark/ast/ParagraphItemContainer
       7: ifne          52
      10: aload_1
      11: invokevirtual #329                // Method com/vladsch/flexmark/ast/Paragraph.isTrailingBlankLine:()Z
      14: ifne          43
      17: aload_1
      18: invokevirtual #330                // Method com/vladsch/flexmark/ast/Paragraph.getNext:()Lcom/vladsch/flexmark/ast/Node;
      21: ifnull        34
      24: aload_1
      25: invokevirtual #330                // Method com/vladsch/flexmark/ast/Paragraph.getNext:()Lcom/vladsch/flexmark/ast/Node;
      28: instanceof    #331                // class com/vladsch/flexmark/ast/ListBlock
      31: ifeq          43
      34: aload_1
      35: aload_2
      36: aload_3
      37: invokestatic  #326                // Method renderTextBlockParagraphLines:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
      40: goto          201
      43: aload_1
      44: aload_2
      45: aload_3
      46: invokestatic  #332                // Method renderLooseParagraph:(Lcom/vladsch/flexmark/ast/Paragraph;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
      49: goto          201
      52: aload_1
      53: invokevirtual #327                // Method com/vladsch/flexmark/ast/Paragraph.getParent:()Lcom/vladsch/flexmark/ast/Block;
      56: checkcast     #328                // class com/vladsch/flexmark/ast/ParagraphItemContainer
      59: aload_1
      60: invokeinterface #333,  2          // InterfaceMethod com/vladsch/flexmark/ast/ParagraphItemContainer.isItemParagraph:(Lcom/vladsch/flexmark/ast/Paragraph;)Z
      65: istore        4
      67: iload         4
      69: ifeq          195
      72: aload_2
      73: invokeinterface #169,  1          // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.getDocument:()Lcom/vladsch/flexmark/ast/Document;
      78: getstatic     #170                // Field LIST_ITEM_SPACING:Lcom/vladsch/flexmark/util/options/DataKey;
      81: invokevirtual #171                // Method com/vladsch/flexmark/ast/Document.get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
      84: checkcast     #286                // class com/vladsch/flexmark/util/format/options/ListSpacing
      87: astore        5
      89: aload         5
      91: getstatic     #294                // Field com/vladsch/flexmark/util/format/options/ListSpacing.TIGHT:Lcom/vladsch/flexmark/util/format/options/ListSpacing;
      94: if_acmpne     106
      97: aload_1
      98: aload_2
      99: aload_3
     100: invokestatic  #326                // Method renderTextBlockParagraphLines:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
     103: goto          192
     106: aload         5
     108: getstatic     #293                // Field com/vladsch/flexmark/util/format/options/ListSpacing.LOOSE:Lcom/vladsch/flexmark/util/format/options/ListSpacing;
     111: if_acmpne     151
     114: aload_1
     115: invokevirtual #327                // Method com/vladsch/flexmark/ast/Paragraph.getParent:()Lcom/vladsch/flexmark/ast/Block;
     118: iconst_1
     119: anewarray     #47                 // class java/lang/Class
     122: dup
     123: iconst_0
     124: ldc           #65                 // class com/vladsch/flexmark/ast/BlankLine
     126: aastore
     127: invokevirtual #334                // Method com/vladsch/flexmark/ast/Block.getNextAnyNot:([Ljava/lang/Class;)Lcom/vladsch/flexmark/ast/Node;
     130: ifnonnull     142
     133: aload_1
     134: aload_2
     135: aload_3
     136: invokestatic  #326                // Method renderTextBlockParagraphLines:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
     139: goto          192
     142: aload_1
     143: aload_2
     144: aload_3
     145: invokestatic  #335                // Method renderLooseItemParagraph:(Lcom/vladsch/flexmark/ast/Paragraph;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
     148: goto          192
     151: aload_1
     152: invokevirtual #327                // Method com/vladsch/flexmark/ast/Paragraph.getParent:()Lcom/vladsch/flexmark/ast/Block;
     155: checkcast     #328                // class com/vladsch/flexmark/ast/ParagraphItemContainer
     158: aload_1
     159: aload_0
     160: getfield      #40                 // Field listOptions:Lcom/vladsch/flexmark/parser/ListOptions;
     163: aload_2
     164: invokeinterface #336,  1          // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.getOptions:()Lcom/vladsch/flexmark/util/options/DataHolder;
     169: invokeinterface #337,  4          // InterfaceMethod com/vladsch/flexmark/ast/ParagraphItemContainer.isParagraphWrappingDisabled:(Lcom/vladsch/flexmark/ast/Paragraph;Lcom/vladsch/flexmark/parser/ListOptions;Lcom/vladsch/flexmark/util/options/DataHolder;)Z
     174: ifne          186
     177: aload_1
     178: aload_2
     179: aload_3
     180: invokestatic  #335                // Method renderLooseItemParagraph:(Lcom/vladsch/flexmark/ast/Paragraph;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
     183: goto          192
     186: aload_1
     187: aload_2
     188: aload_3
     189: invokestatic  #326                // Method renderTextBlockParagraphLines:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
     192: goto          201
     195: aload_1
     196: aload_2
     197: aload_3
     198: invokestatic  #332                // Method renderLooseParagraph:(Lcom/vladsch/flexmark/ast/Paragraph;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
     201: return

  public static com.vladsch.flexmark.util.sequence.BasedSequence getSoftLineBreakSpan(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: getstatic     #338                // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       7: areturn
       8: aload_0
       9: astore_1
      10: aload_0
      11: invokevirtual #281                // Method com/vladsch/flexmark/ast/Node.getNext:()Lcom/vladsch/flexmark/ast/Node;
      14: astore_2
      15: aload_2
      16: ifnull        36
      19: aload_2
      20: instanceof    #146                // class com/vladsch/flexmark/ast/SoftLineBreak
      23: ifne          36
      26: aload_2
      27: astore_1
      28: aload_2
      29: invokevirtual #281                // Method com/vladsch/flexmark/ast/Node.getNext:()Lcom/vladsch/flexmark/ast/Node;
      32: astore_2
      33: goto          15
      36: iconst_2
      37: anewarray     #254                // class com/vladsch/flexmark/util/sequence/BasedSequence
      40: dup
      41: iconst_0
      42: aload_0
      43: invokevirtual #161                // Method com/vladsch/flexmark/ast/Node.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      46: aastore
      47: dup
      48: iconst_1
      49: aload_1
      50: invokevirtual #161                // Method com/vladsch/flexmark/ast/Node.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      53: aastore
      54: invokestatic  #339                // Method com/vladsch/flexmark/ast/Node.spanningChars:([Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      57: areturn

  private void render(com.vladsch.flexmark.ast.SoftLineBreak, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #340                // Method com/vladsch/flexmark/ast/SoftLineBreak.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       8: pop
       9: return

  private void render(com.vladsch.flexmark.ast.HardLineBreak, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #341                // Method com/vladsch/flexmark/ast/HardLineBreak.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       8: pop
       9: return

  private void render(com.vladsch.flexmark.ast.Text, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #342                // Method com/vladsch/flexmark/ast/Text.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       8: pop
       9: return

  private void render(com.vladsch.flexmark.ast.TextBase, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #167,  2          // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
       7: return

  private void render(com.vladsch.flexmark.ast.Code, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #343                // Method com/vladsch/flexmark/ast/Code.getOpeningMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       8: pop
       9: aload_3
      10: aload_1
      11: invokevirtual #344                // Method com/vladsch/flexmark/ast/Code.getText:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      14: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      17: pop
      18: aload_3
      19: aload_1
      20: invokevirtual #343                // Method com/vladsch/flexmark/ast/Code.getOpeningMarker:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      23: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      26: pop
      27: return

  private void render(com.vladsch.flexmark.ast.HtmlBlock, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_1
       1: invokevirtual #345                // Method com/vladsch/flexmark/ast/HtmlBlock.hasChildren:()Z
       4: ifeq          17
       7: aload_2
       8: aload_1
       9: invokeinterface #167,  2          // InterfaceMethod com/vladsch/flexmark/formatter/internal/NodeFormatterContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
      14: goto          36
      17: aload_3
      18: invokevirtual #175                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.blankLine:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      21: pop
      22: aload_3
      23: aload_1
      24: invokevirtual #346                // Method com/vladsch/flexmark/ast/HtmlBlock.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      27: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      30: pop
      31: aload_3
      32: invokevirtual #175                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.blankLine:()Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      35: pop
      36: return

  private void render(com.vladsch.flexmark.ast.HtmlCommentBlock, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #347                // Method com/vladsch/flexmark/ast/HtmlCommentBlock.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       8: pop
       9: return

  private void render(com.vladsch.flexmark.ast.HtmlInnerBlock, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #348                // Method com/vladsch/flexmark/ast/HtmlInnerBlock.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       8: pop
       9: return

  private void render(com.vladsch.flexmark.ast.HtmlInnerBlockComment, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #349                // Method com/vladsch/flexmark/ast/HtmlInnerBlockComment.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       8: pop
       9: return

  private void render(com.vladsch.flexmark.ast.HtmlInline, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #350                // Method com/vladsch/flexmark/ast/HtmlInline.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       8: pop
       9: return

  private void render(com.vladsch.flexmark.ast.HtmlInlineComment, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #351                // Method com/vladsch/flexmark/ast/HtmlInlineComment.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       8: pop
       9: return

  private void render(com.vladsch.flexmark.ast.Reference, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #352                // Method renderReference:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  private void render(com.vladsch.flexmark.ast.HtmlEntity, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #353                // Method com/vladsch/flexmark/ast/HtmlEntity.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       8: pop
       9: return

  private void render(com.vladsch.flexmark.ast.AutoLink, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #354                // Method com/vladsch/flexmark/ast/AutoLink.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       8: pop
       9: return

  private void render(com.vladsch.flexmark.ast.MailLink, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #355                // Method com/vladsch/flexmark/ast/MailLink.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       8: pop
       9: return

  private void render(com.vladsch.flexmark.ast.Image, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_3
       1: aload_0
       2: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
       5: getfield      #356                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.keepImageLinksAtStart:Z
       8: invokevirtual #357                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.lineIf:(Z)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      11: aload_1
      12: invokevirtual #358                // Method com/vladsch/flexmark/ast/Image.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      15: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      18: pop
      19: return

  private void render(com.vladsch.flexmark.ast.Link, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_3
       1: aload_0
       2: getfield      #38                 // Field options:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
       5: getfield      #359                // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.keepExplicitLinksAtStart:Z
       8: invokevirtual #357                // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.lineIf:(Z)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      11: aload_1
      12: invokevirtual #360                // Method com/vladsch/flexmark/ast/Link.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      15: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
      18: pop
      19: return

  private void render(com.vladsch.flexmark.ast.ImageRef, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #361                // Method com/vladsch/flexmark/ast/ImageRef.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       8: pop
       9: return

  private void render(com.vladsch.flexmark.ast.LinkRef, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #362                // Method com/vladsch/flexmark/ast/LinkRef.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: invokevirtual #55                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.append:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       8: pop
       9: return

  public void renderReferenceBlock(com.vladsch.flexmark.ast.Node, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #143                // class com/vladsch/flexmark/ast/Reference
       5: aload_2
       6: aload_3
       7: invokevirtual #363                // Method renderReferenceBlock:(Lcom/vladsch/flexmark/ast/Reference;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
      10: return

  public com.vladsch.flexmark.ast.NodeRepository getRepository(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #364                // Method getRepository:(Lcom/vladsch/flexmark/util/options/DataHolder;)Lcom/vladsch/flexmark/ast/util/ReferenceRepository;
       5: areturn

  static void access$000(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.Node, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #34                 // Method render:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$100(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.AutoLink, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #33                 // Method render:(Lcom/vladsch/flexmark/ast/AutoLink;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$200(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.BlankLine, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #32                 // Method render:(Lcom/vladsch/flexmark/ast/BlankLine;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$300(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.BlockQuote, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #31                 // Method render:(Lcom/vladsch/flexmark/ast/BlockQuote;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$400(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.Code, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #30                 // Method render:(Lcom/vladsch/flexmark/ast/Code;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$500(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.Document, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #29                 // Method render:(Lcom/vladsch/flexmark/ast/Document;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$600(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.Emphasis, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #28                 // Method render:(Lcom/vladsch/flexmark/ast/Emphasis;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$700(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.FencedCodeBlock, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #27                 // Method render:(Lcom/vladsch/flexmark/ast/FencedCodeBlock;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$800(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.HardLineBreak, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #26                 // Method render:(Lcom/vladsch/flexmark/ast/HardLineBreak;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$900(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.Heading, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #25                 // Method render:(Lcom/vladsch/flexmark/ast/Heading;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$1000(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.HtmlBlock, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #24                 // Method render:(Lcom/vladsch/flexmark/ast/HtmlBlock;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$1100(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.HtmlCommentBlock, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #23                 // Method render:(Lcom/vladsch/flexmark/ast/HtmlCommentBlock;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$1200(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.HtmlInnerBlock, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #22                 // Method render:(Lcom/vladsch/flexmark/ast/HtmlInnerBlock;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$1300(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.HtmlInnerBlockComment, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #21                 // Method render:(Lcom/vladsch/flexmark/ast/HtmlInnerBlockComment;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$1400(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.HtmlEntity, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #20                 // Method render:(Lcom/vladsch/flexmark/ast/HtmlEntity;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$1500(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.HtmlInline, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #19                 // Method render:(Lcom/vladsch/flexmark/ast/HtmlInline;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$1600(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.HtmlInlineComment, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #18                 // Method render:(Lcom/vladsch/flexmark/ast/HtmlInlineComment;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$1700(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.Image, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #17                 // Method render:(Lcom/vladsch/flexmark/ast/Image;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$1800(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.ImageRef, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #16                 // Method render:(Lcom/vladsch/flexmark/ast/ImageRef;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$1900(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.IndentedCodeBlock, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #15                 // Method render:(Lcom/vladsch/flexmark/ast/IndentedCodeBlock;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$2000(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.Link, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #14                 // Method render:(Lcom/vladsch/flexmark/ast/Link;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$2100(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.LinkRef, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #13                 // Method render:(Lcom/vladsch/flexmark/ast/LinkRef;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$2200(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.BulletList, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #12                 // Method render:(Lcom/vladsch/flexmark/ast/BulletList;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$2300(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.OrderedList, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #11                 // Method render:(Lcom/vladsch/flexmark/ast/OrderedList;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$2400(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.BulletListItem, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #10                 // Method render:(Lcom/vladsch/flexmark/ast/BulletListItem;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$2500(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.OrderedListItem, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #9                  // Method render:(Lcom/vladsch/flexmark/ast/OrderedListItem;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$2600(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.MailLink, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #8                  // Method render:(Lcom/vladsch/flexmark/ast/MailLink;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$2700(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.Paragraph, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #7                  // Method render:(Lcom/vladsch/flexmark/ast/Paragraph;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$2800(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.Reference, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #6                  // Method render:(Lcom/vladsch/flexmark/ast/Reference;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$2900(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.SoftLineBreak, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #5                  // Method render:(Lcom/vladsch/flexmark/ast/SoftLineBreak;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$3000(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.StrongEmphasis, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #4                  // Method render:(Lcom/vladsch/flexmark/ast/StrongEmphasis;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$3100(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.Text, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #3                  // Method render:(Lcom/vladsch/flexmark/ast/Text;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$3200(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.TextBase, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #2                  // Method render:(Lcom/vladsch/flexmark/ast/TextBase;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static void access$3300(com.vladsch.flexmark.formatter.internal.CoreNodeFormatter, com.vladsch.flexmark.ast.ThematicBreak, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method render:(Lcom/vladsch/flexmark/ast/ThematicBreak;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
       7: return

  static {};
    Code:
       0: new           #365                // class com/vladsch/flexmark/util/options/DataKey
       3: dup
       4: ldc_w         #366                // String LIST_ITEM_NUMBER
       7: iconst_0
       8: invokestatic  #192                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: invokespecial #367                // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      14: putstatic     #287                // Field LIST_ITEM_NUMBER:Lcom/vladsch/flexmark/util/options/DataKey;
      17: new           #365                // class com/vladsch/flexmark/util/options/DataKey
      20: dup
      21: ldc_w         #368                // String LIST_ITEM_SPACING
      24: aconst_null
      25: checkcast     #286                // class com/vladsch/flexmark/util/format/options/ListSpacing
      28: invokespecial #367                // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      31: putstatic     #170                // Field LIST_ITEM_SPACING:Lcom/vladsch/flexmark/util/options/DataKey;
      34: return
}
