Compiled from "Formatter.java"
public class com.vladsch.flexmark.formatter.internal.Formatter implements com.vladsch.flexmark.IRender {
  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Integer> FORMAT_FLAGS;

  public static final int FORMAT_CONVERT_TABS;

  public static final int FORMAT_COLLAPSE_WHITESPACE;

  public static final int FORMAT_SUPPRESS_TRAILING_WHITESPACE;

  public static final int FORMAT_ALL_OPTIONS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Integer> MAX_BLANK_LINES;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Integer> MAX_TRAILING_BLANK_LINES;

  public static final com.vladsch.flexmark.util.options.DataKey<com.vladsch.flexmark.util.format.options.DiscretionaryText> SPACE_AFTER_ATX_MARKER;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> SETEXT_HEADER_EQUALIZE_MARKER;

  public static final com.vladsch.flexmark.util.options.DataKey<com.vladsch.flexmark.util.format.options.EqualizeTrailingMarker> ATX_HEADER_TRAILING_MARKER;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.String> THEMATIC_BREAK;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> BLOCK_QUOTE_BLANK_LINES;

  public static final com.vladsch.flexmark.util.options.DataKey<com.vladsch.flexmark.util.format.options.BlockQuoteMarker> BLOCK_QUOTE_MARKERS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> INDENTED_CODE_MINIMIZE_INDENT;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> FENCED_CODE_MINIMIZE_INDENT;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> FENCED_CODE_MATCH_CLOSING_MARKER;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> FENCED_CODE_SPACE_BEFORE_INFO;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Integer> FENCED_CODE_MARKER_LENGTH;

  public static final com.vladsch.flexmark.util.options.DataKey<com.vladsch.flexmark.util.format.options.CodeFenceMarker> FENCED_CODE_MARKER_TYPE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LIST_ADD_BLANK_LINE_BEFORE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LIST_RENUMBER_ITEMS;

  public static final com.vladsch.flexmark.util.options.DataKey<com.vladsch.flexmark.util.format.options.ListBulletMarker> LIST_BULLET_MARKER;

  public static final com.vladsch.flexmark.util.options.DataKey<com.vladsch.flexmark.util.format.options.ListNumberedMarker> LIST_NUMBERED_MARKER;

  public static final com.vladsch.flexmark.util.options.DataKey<com.vladsch.flexmark.util.format.options.ListSpacing> LIST_SPACING;

  public static final com.vladsch.flexmark.util.options.DataKey<com.vladsch.flexmark.util.format.options.ElementPlacement> REFERENCE_PLACEMENT;

  public static final com.vladsch.flexmark.util.options.DataKey<com.vladsch.flexmark.util.format.options.ElementPlacementSort> REFERENCE_SORT;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> KEEP_IMAGE_LINKS_AT_START;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> KEEP_EXPLICIT_LINKS_AT_START;

  public static final com.vladsch.flexmark.util.options.DataKey<com.vladsch.flexmark.util.mappers.CharWidthProvider> CHAR_WIDTH_PROVIDER;

  public static final com.vladsch.flexmark.util.options.DataKey<com.vladsch.flexmark.parser.ParserEmulationProfile> FORMATTER_EMULATION_PROFILE;

  private final java.util.List<com.vladsch.flexmark.formatter.internal.NodeFormatterFactory> nodeFormatterFactories;

  private final com.vladsch.flexmark.formatter.internal.FormatterOptions formatterOptions;

  private final com.vladsch.flexmark.util.options.DataHolder options;

  private final com.vladsch.flexmark.formatter.internal.Formatter$Builder builder;

  private static final java.util.Iterator<? extends com.vladsch.flexmark.ast.Node> NULL_ITERATOR;

  private static final java.lang.Iterable<? extends com.vladsch.flexmark.ast.Node> NULL_ITERABLE;

  private com.vladsch.flexmark.formatter.internal.Formatter(com.vladsch.flexmark.formatter.internal.Formatter$Builder);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class com/vladsch/flexmark/formatter/internal/Formatter$Builder
       8: dup
       9: aload_1
      10: invokespecial #8                  // Method com/vladsch/flexmark/formatter/internal/Formatter$Builder."<init>":(Lcom/vladsch/flexmark/formatter/internal/Formatter$Builder;)V
      13: putfield      #9                  // Field builder:Lcom/vladsch/flexmark/formatter/internal/Formatter$Builder;
      16: aload_0
      17: new           #10                 // class com/vladsch/flexmark/util/options/DataSet
      20: dup
      21: aload_1
      22: invokespecial #11                 // Method com/vladsch/flexmark/util/options/DataSet."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
      25: putfield      #12                 // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
      28: aload_0
      29: new           #13                 // class com/vladsch/flexmark/formatter/internal/FormatterOptions
      32: dup
      33: aload_0
      34: getfield      #12                 // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
      37: invokespecial #14                 // Method com/vladsch/flexmark/formatter/internal/FormatterOptions."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
      40: putfield      #3                  // Field formatterOptions:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
      43: aload_0
      44: new           #15                 // class java/util/ArrayList
      47: dup
      48: aload_1
      49: getfield      #16                 // Field com/vladsch/flexmark/formatter/internal/Formatter$Builder.nodeFormatterFactories:Ljava/util/List;
      52: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
      57: iconst_1
      58: iadd
      59: invokespecial #18                 // Method java/util/ArrayList."<init>":(I)V
      62: putfield      #4                  // Field nodeFormatterFactories:Ljava/util/List;
      65: aload_0
      66: getfield      #4                  // Field nodeFormatterFactories:Ljava/util/List;
      69: aload_1
      70: getfield      #16                 // Field com/vladsch/flexmark/formatter/internal/Formatter$Builder.nodeFormatterFactories:Ljava/util/List;
      73: invokeinterface #19,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      78: pop
      79: aload_0
      80: getfield      #4                  // Field nodeFormatterFactories:Ljava/util/List;
      83: new           #20                 // class com/vladsch/flexmark/formatter/internal/Formatter$1
      86: dup
      87: aload_0
      88: invokespecial #21                 // Method com/vladsch/flexmark/formatter/internal/Formatter$1."<init>":(Lcom/vladsch/flexmark/formatter/internal/Formatter;)V
      91: invokeinterface #22,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      96: pop
      97: return

  public static com.vladsch.flexmark.formatter.internal.Formatter$Builder builder();
    Code:
       0: new           #7                  // class com/vladsch/flexmark/formatter/internal/Formatter$Builder
       3: dup
       4: invokespecial #23                 // Method com/vladsch/flexmark/formatter/internal/Formatter$Builder."<init>":()V
       7: areturn

  public static com.vladsch.flexmark.formatter.internal.Formatter$Builder builder(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: new           #7                  // class com/vladsch/flexmark/formatter/internal/Formatter$Builder
       3: dup
       4: aload_0
       5: invokespecial #24                 // Method com/vladsch/flexmark/formatter/internal/Formatter$Builder."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
       8: areturn

  public void render(com.vladsch.flexmark.ast.Node, java.lang.Appendable);
    Code:
       0: new           #25                 // class com/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #12                 // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
       9: new           #26                 // class com/vladsch/flexmark/formatter/internal/MarkdownWriter
      12: dup
      13: aload_2
      14: aload_0
      15: getfield      #3                  // Field formatterOptions:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
      18: getfield      #27                 // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.formatFlags:I
      21: invokespecial #28                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter."<init>":(Ljava/lang/Appendable;I)V
      24: aload_1
      25: invokevirtual #29                 // Method com/vladsch/flexmark/ast/Node.getDocument:()Lcom/vladsch/flexmark/ast/Document;
      28: invokespecial #30                 // Method com/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter."<init>":(Lcom/vladsch/flexmark/formatter/internal/Formatter;Lcom/vladsch/flexmark/util/options/DataHolder;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;Lcom/vladsch/flexmark/ast/Document;)V
      31: astore_3
      32: aload_3
      33: aload_1
      34: invokevirtual #31                 // Method com/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter.render:(Lcom/vladsch/flexmark/ast/Node;)V
      37: aload_3
      38: aload_0
      39: getfield      #3                  // Field formatterOptions:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
      42: getfield      #32                 // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.maxTrailingBlankLines:I
      45: invokevirtual #33                 // Method com/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter.flush:(I)V
      48: return

  public void render(com.vladsch.flexmark.ast.Node, java.lang.Appendable, int);
    Code:
       0: new           #25                 // class com/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #12                 // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
       9: new           #26                 // class com/vladsch/flexmark/formatter/internal/MarkdownWriter
      12: dup
      13: aload_2
      14: aload_0
      15: getfield      #3                  // Field formatterOptions:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
      18: getfield      #27                 // Field com/vladsch/flexmark/formatter/internal/FormatterOptions.formatFlags:I
      21: invokespecial #28                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter."<init>":(Ljava/lang/Appendable;I)V
      24: aload_1
      25: invokevirtual #29                 // Method com/vladsch/flexmark/ast/Node.getDocument:()Lcom/vladsch/flexmark/ast/Document;
      28: invokespecial #30                 // Method com/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter."<init>":(Lcom/vladsch/flexmark/formatter/internal/Formatter;Lcom/vladsch/flexmark/util/options/DataHolder;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;Lcom/vladsch/flexmark/ast/Document;)V
      31: astore        4
      33: aload         4
      35: aload_1
      36: invokevirtual #31                 // Method com/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter.render:(Lcom/vladsch/flexmark/ast/Node;)V
      39: aload         4
      41: iload_3
      42: invokevirtual #33                 // Method com/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter.flush:(I)V
      45: return

  public java.lang.String render(com.vladsch.flexmark.ast.Node);
    Code:
       0: new           #34                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokevirtual #36                 // Method render:(Lcom/vladsch/flexmark/ast/Node;Ljava/lang/Appendable;)V
      14: aload_2
      15: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      18: areturn

  public com.vladsch.flexmark.formatter.internal.Formatter withOptions(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: aload_0
       5: goto          27
       8: new           #38                 // class com/vladsch/flexmark/formatter/internal/Formatter
      11: dup
      12: new           #7                  // class com/vladsch/flexmark/formatter/internal/Formatter$Builder
      15: dup
      16: aload_0
      17: getfield      #9                  // Field builder:Lcom/vladsch/flexmark/formatter/internal/Formatter$Builder;
      20: aload_1
      21: invokespecial #39                 // Method com/vladsch/flexmark/formatter/internal/Formatter$Builder."<init>":(Lcom/vladsch/flexmark/formatter/internal/Formatter$Builder;Lcom/vladsch/flexmark/util/options/DataHolder;)V
      24: invokespecial #5                  // Method "<init>":(Lcom/vladsch/flexmark/formatter/internal/Formatter$Builder;)V
      27: areturn

  public com.vladsch.flexmark.IRender withOptions(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method withOptions:(Lcom/vladsch/flexmark/util/options/DataHolder;)Lcom/vladsch/flexmark/formatter/internal/Formatter;
       5: areturn

  com.vladsch.flexmark.formatter.internal.Formatter(com.vladsch.flexmark.formatter.internal.Formatter$Builder, com.vladsch.flexmark.formatter.internal.Formatter$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method "<init>":(Lcom/vladsch/flexmark/formatter/internal/Formatter$Builder;)V
       5: return

  static java.util.List access$100(com.vladsch.flexmark.formatter.internal.Formatter);
    Code:
       0: aload_0
       1: getfield      #4                  // Field nodeFormatterFactories:Ljava/util/List;
       4: areturn

  static com.vladsch.flexmark.formatter.internal.FormatterOptions access$200(com.vladsch.flexmark.formatter.internal.Formatter);
    Code:
       0: aload_0
       1: getfield      #3                  // Field formatterOptions:Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
       4: areturn

  static java.lang.Iterable access$300();
    Code:
       0: getstatic     #2                  // Field NULL_ITERABLE:Ljava/lang/Iterable;
       3: areturn

  static {};
    Code:
       0: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
       3: dup
       4: ldc           #42                 // String FORMAT_FLAGS
       6: iconst_0
       7: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      10: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      13: putstatic     #45                 // Field FORMAT_FLAGS:Lcom/vladsch/flexmark/util/options/DataKey;
      16: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
      19: dup
      20: ldc           #46                 // String MAX_BLANK_LINES
      22: iconst_2
      23: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      29: putstatic     #47                 // Field MAX_BLANK_LINES:Lcom/vladsch/flexmark/util/options/DataKey;
      32: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
      35: dup
      36: ldc           #48                 // String MAX_TRAILING_BLANK_LINES
      38: iconst_1
      39: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      42: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      45: putstatic     #49                 // Field MAX_TRAILING_BLANK_LINES:Lcom/vladsch/flexmark/util/options/DataKey;
      48: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
      51: dup
      52: ldc           #50                 // String SPACE_AFTER_ATX_MARKER
      54: getstatic     #51                 // Field com/vladsch/flexmark/util/format/options/DiscretionaryText.ADD:Lcom/vladsch/flexmark/util/format/options/DiscretionaryText;
      57: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      60: putstatic     #52                 // Field SPACE_AFTER_ATX_MARKER:Lcom/vladsch/flexmark/util/options/DataKey;
      63: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
      66: dup
      67: ldc           #53                 // String SETEXT_HEADER_EQUALIZE_MARKER
      69: iconst_1
      70: invokestatic  #54                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      73: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      76: putstatic     #55                 // Field SETEXT_HEADER_EQUALIZE_MARKER:Lcom/vladsch/flexmark/util/options/DataKey;
      79: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
      82: dup
      83: ldc           #56                 // String ATX_HEADER_TRAILING_MARKER
      85: getstatic     #57                 // Field com/vladsch/flexmark/util/format/options/EqualizeTrailingMarker.AS_IS:Lcom/vladsch/flexmark/util/format/options/EqualizeTrailingMarker;
      88: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      91: putstatic     #58                 // Field ATX_HEADER_TRAILING_MARKER:Lcom/vladsch/flexmark/util/options/DataKey;
      94: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
      97: dup
      98: ldc           #59                 // String THEMATIC_BREAK
     100: aconst_null
     101: checkcast     #60                 // class java/lang/String
     104: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     107: putstatic     #61                 // Field THEMATIC_BREAK:Lcom/vladsch/flexmark/util/options/DataKey;
     110: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
     113: dup
     114: ldc           #62                 // String BLOCK_QUOTE_BLANK_LINES
     116: iconst_1
     117: invokestatic  #54                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     120: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     123: putstatic     #63                 // Field BLOCK_QUOTE_BLANK_LINES:Lcom/vladsch/flexmark/util/options/DataKey;
     126: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
     129: dup
     130: ldc           #64                 // String BLOCK_QUOTE_MARKERS
     132: getstatic     #65                 // Field com/vladsch/flexmark/util/format/options/BlockQuoteMarker.ADD_COMPACT_WITH_SPACE:Lcom/vladsch/flexmark/util/format/options/BlockQuoteMarker;
     135: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     138: putstatic     #66                 // Field BLOCK_QUOTE_MARKERS:Lcom/vladsch/flexmark/util/options/DataKey;
     141: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
     144: dup
     145: ldc           #67                 // String INDENTED_CODE_MINIMIZE_INDENT
     147: iconst_1
     148: invokestatic  #54                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     151: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     154: putstatic     #68                 // Field INDENTED_CODE_MINIMIZE_INDENT:Lcom/vladsch/flexmark/util/options/DataKey;
     157: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
     160: dup
     161: ldc           #69                 // String FENCED_CODE_MINIMIZE_INDENT
     163: iconst_1
     164: invokestatic  #54                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     167: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     170: putstatic     #70                 // Field FENCED_CODE_MINIMIZE_INDENT:Lcom/vladsch/flexmark/util/options/DataKey;
     173: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
     176: dup
     177: ldc           #71                 // String FENCED_CODE_MATCH_CLOSING_MARKER
     179: iconst_1
     180: invokestatic  #54                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     183: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     186: putstatic     #72                 // Field FENCED_CODE_MATCH_CLOSING_MARKER:Lcom/vladsch/flexmark/util/options/DataKey;
     189: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
     192: dup
     193: ldc           #73                 // String FENCED_CODE_SPACE_BEFORE_INFO
     195: iconst_0
     196: invokestatic  #54                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     199: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     202: putstatic     #74                 // Field FENCED_CODE_SPACE_BEFORE_INFO:Lcom/vladsch/flexmark/util/options/DataKey;
     205: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
     208: dup
     209: ldc           #75                 // String FENCED_CODE_MARKER_LENGTH
     211: iconst_3
     212: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     215: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     218: putstatic     #76                 // Field FENCED_CODE_MARKER_LENGTH:Lcom/vladsch/flexmark/util/options/DataKey;
     221: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
     224: dup
     225: ldc           #77                 // String FENCED_CODE_MARKER_TYPE
     227: getstatic     #78                 // Field com/vladsch/flexmark/util/format/options/CodeFenceMarker.ANY:Lcom/vladsch/flexmark/util/format/options/CodeFenceMarker;
     230: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     233: putstatic     #79                 // Field FENCED_CODE_MARKER_TYPE:Lcom/vladsch/flexmark/util/options/DataKey;
     236: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
     239: dup
     240: ldc           #80                 // String LIST_ADD_BLANK_LINE_BEFORE
     242: iconst_0
     243: invokestatic  #54                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     246: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     249: putstatic     #81                 // Field LIST_ADD_BLANK_LINE_BEFORE:Lcom/vladsch/flexmark/util/options/DataKey;
     252: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
     255: dup
     256: ldc           #82                 // String LIST_RENUMBER_ITEMS
     258: iconst_1
     259: invokestatic  #54                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     262: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     265: putstatic     #83                 // Field LIST_RENUMBER_ITEMS:Lcom/vladsch/flexmark/util/options/DataKey;
     268: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
     271: dup
     272: ldc           #84                 // String LIST_BULLET_MARKER
     274: getstatic     #85                 // Field com/vladsch/flexmark/util/format/options/ListBulletMarker.ANY:Lcom/vladsch/flexmark/util/format/options/ListBulletMarker;
     277: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     280: putstatic     #86                 // Field LIST_BULLET_MARKER:Lcom/vladsch/flexmark/util/options/DataKey;
     283: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
     286: dup
     287: ldc           #87                 // String LIST_NUMBERED_MARKER
     289: getstatic     #88                 // Field com/vladsch/flexmark/util/format/options/ListNumberedMarker.ANY:Lcom/vladsch/flexmark/util/format/options/ListNumberedMarker;
     292: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     295: putstatic     #89                 // Field LIST_NUMBERED_MARKER:Lcom/vladsch/flexmark/util/options/DataKey;
     298: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
     301: dup
     302: ldc           #90                 // String LIST_SPACING
     304: getstatic     #91                 // Field com/vladsch/flexmark/util/format/options/ListSpacing.AS_IS:Lcom/vladsch/flexmark/util/format/options/ListSpacing;
     307: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     310: putstatic     #92                 // Field LIST_SPACING:Lcom/vladsch/flexmark/util/options/DataKey;
     313: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
     316: dup
     317: ldc           #93                 // String REFERENCE_PLACEMENT
     319: getstatic     #94                 // Field com/vladsch/flexmark/util/format/options/ElementPlacement.AS_IS:Lcom/vladsch/flexmark/util/format/options/ElementPlacement;
     322: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     325: putstatic     #95                 // Field REFERENCE_PLACEMENT:Lcom/vladsch/flexmark/util/options/DataKey;
     328: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
     331: dup
     332: ldc           #96                 // String REFERENCE_SORT
     334: getstatic     #97                 // Field com/vladsch/flexmark/util/format/options/ElementPlacementSort.AS_IS:Lcom/vladsch/flexmark/util/format/options/ElementPlacementSort;
     337: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     340: putstatic     #98                 // Field REFERENCE_SORT:Lcom/vladsch/flexmark/util/options/DataKey;
     343: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
     346: dup
     347: ldc           #99                 // String KEEP_IMAGE_LINKS_AT_START
     349: iconst_0
     350: invokestatic  #54                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     353: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     356: putstatic     #100                // Field KEEP_IMAGE_LINKS_AT_START:Lcom/vladsch/flexmark/util/options/DataKey;
     359: new           #41                 // class com/vladsch/flexmark/util/options/DataKey
     362: dup
     363: ldc           #101                // String KEEP_EXPLICIT_LINKS_AT_START
     365: iconst_0
     366: invokestatic  #54                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     369: invokespecial #44                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     372: putstatic     #102                // Field KEEP_EXPLICIT_LINKS_AT_START:Lcom/vladsch/flexmark/util/options/DataKey;
     375: getstatic     #103                // Field com/vladsch/flexmark/util/format/TableFormatOptions.CHAR_WIDTH_PROVIDER:Lcom/vladsch/flexmark/util/options/DataKey;
     378: putstatic     #104                // Field CHAR_WIDTH_PROVIDER:Lcom/vladsch/flexmark/util/options/DataKey;
     381: new           #105                // class com/vladsch/flexmark/util/collection/DynamicDefaultKey
     384: dup
     385: ldc           #106                // String FORMATTER_EMULATION_PROFILE
     387: getstatic     #107                // Field com/vladsch/flexmark/parser/Parser.PARSER_EMULATION_PROFILE:Lcom/vladsch/flexmark/util/options/DataKey;
     390: invokespecial #108                // Method com/vladsch/flexmark/util/collection/DynamicDefaultKey."<init>":(Ljava/lang/String;Lcom/vladsch/flexmark/util/options/DataKey;)V
     393: putstatic     #109                // Field FORMATTER_EMULATION_PROFILE:Lcom/vladsch/flexmark/util/options/DataKey;
     396: new           #110                // class com/vladsch/flexmark/formatter/internal/Formatter$2
     399: dup
     400: invokespecial #111                // Method com/vladsch/flexmark/formatter/internal/Formatter$2."<init>":()V
     403: putstatic     #112                // Field NULL_ITERATOR:Ljava/util/Iterator;
     406: new           #113                // class com/vladsch/flexmark/formatter/internal/Formatter$3
     409: dup
     410: invokespecial #114                // Method com/vladsch/flexmark/formatter/internal/Formatter$3."<init>":()V
     413: putstatic     #2                  // Field NULL_ITERABLE:Ljava/lang/Iterable;
     416: return
}
