Compiled from "Formatter.java"
class com.vladsch.flexmark.formatter.internal.Formatter$MainNodeFormatter$SubNodeFormatter extends com.vladsch.flexmark.formatter.internal.NodeFormatterSubContext implements com.vladsch.flexmark.formatter.internal.NodeFormatterContext {
  private final com.vladsch.flexmark.formatter.internal.Formatter$MainNodeFormatter myMainNodeRenderer;

  final com.vladsch.flexmark.formatter.internal.Formatter$MainNodeFormatter this$1;

  public com.vladsch.flexmark.formatter.internal.Formatter$MainNodeFormatter$SubNodeFormatter(com.vladsch.flexmark.formatter.internal.Formatter$MainNodeFormatter, com.vladsch.flexmark.formatter.internal.Formatter$MainNodeFormatter, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lcom/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter;
       5: aload_0
       6: aload_3
       7: invokespecial #2                  // Method com/vladsch/flexmark/formatter/internal/NodeFormatterSubContext."<init>":(Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
      10: aload_0
      11: aload_2
      12: putfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter;
      15: return

  public final java.lang.Iterable<? extends com.vladsch.flexmark.ast.Node> nodesOfType(java.lang.Class<?>[]);
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter;
       4: aload_1
       5: invokevirtual #4                  // Method com/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter.nodesOfType:([Ljava/lang/Class;)Ljava/lang/Iterable;
       8: areturn

  public final java.lang.Iterable<? extends com.vladsch.flexmark.ast.Node> nodesOfType(java.util.Collection<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter;
       4: aload_1
       5: invokevirtual #5                  // Method com/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter.nodesOfType:(Ljava/util/Collection;)Ljava/lang/Iterable;
       8: areturn

  public final java.lang.Iterable<? extends com.vladsch.flexmark.ast.Node> reversedNodesOfType(java.lang.Class<?>[]);
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter;
       4: aload_1
       5: invokevirtual #6                  // Method com/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter.reversedNodesOfType:([Ljava/lang/Class;)Ljava/lang/Iterable;
       8: areturn

  public final java.lang.Iterable<? extends com.vladsch.flexmark.ast.Node> reversedNodesOfType(java.util.Collection<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter;
       4: aload_1
       5: invokevirtual #7                  // Method com/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter.reversedNodesOfType:(Ljava/util/Collection;)Ljava/lang/Iterable;
       8: areturn

  public com.vladsch.flexmark.util.options.DataHolder getOptions();
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter;
       4: invokevirtual #8                  // Method com/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter.getOptions:()Lcom/vladsch/flexmark/util/options/DataHolder;
       7: areturn

  public com.vladsch.flexmark.formatter.internal.FormatterOptions getFormatterOptions();
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter;
       4: invokevirtual #9                  // Method com/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter.getFormatterOptions:()Lcom/vladsch/flexmark/formatter/internal/FormatterOptions;
       7: areturn

  public com.vladsch.flexmark.ast.Document getDocument();
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter;
       4: invokevirtual #10                 // Method com/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter.getDocument:()Lcom/vladsch/flexmark/ast/Document;
       7: areturn

  public com.vladsch.flexmark.formatter.internal.FormattingPhase getFormattingPhase();
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter;
       4: invokevirtual #11                 // Method com/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter.getFormattingPhase:()Lcom/vladsch/flexmark/formatter/internal/FormattingPhase;
       7: areturn

  public void render(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter;
       4: aload_1
       5: aload_0
       6: invokevirtual #12                 // Method com/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter.renderNode:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterSubContext;)V
       9: return

  public com.vladsch.flexmark.ast.Node getCurrentNode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter;
       4: invokevirtual #13                 // Method com/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter.getCurrentNode:()Lcom/vladsch/flexmark/ast/Node;
       7: areturn

  public com.vladsch.flexmark.formatter.internal.NodeFormatterContext getSubContext(java.lang.Appendable);
    Code:
       0: new           #14                 // class com/vladsch/flexmark/formatter/internal/MarkdownWriter
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #15                 // Field markdown:Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       9: invokevirtual #16                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.getOptions:()I
      12: invokespecial #17                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter."<init>":(Ljava/lang/Appendable;I)V
      15: astore_2
      16: aload_2
      17: aload_0
      18: invokevirtual #18                 // Method com/vladsch/flexmark/formatter/internal/MarkdownWriter.setContext:(Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;)V
      21: new           #19                 // class com/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter$SubNodeFormatter
      24: dup
      25: aload_0
      26: getfield      #1                  // Field this$1:Lcom/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter;
      29: aload_0
      30: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter;
      33: aload_2
      34: invokespecial #20                 // Method "<init>":(Lcom/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter;Lcom/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
      37: areturn

  public void renderChildren(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter;
       4: aload_1
       5: aload_0
       6: invokevirtual #21                 // Method com/vladsch/flexmark/formatter/internal/Formatter$MainNodeFormatter.renderChildrenNode:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterSubContext;)V
       9: return

  public com.vladsch.flexmark.formatter.internal.MarkdownWriter getMarkdown();
    Code:
       0: aload_0
       1: getfield      #15                 // Field markdown:Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;
       4: areturn
}
