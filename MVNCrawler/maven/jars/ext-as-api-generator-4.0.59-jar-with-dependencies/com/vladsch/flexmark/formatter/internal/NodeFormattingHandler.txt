Compiled from "NodeFormattingHandler.java"
public class com.vladsch.flexmark.formatter.internal.NodeFormattingHandler<N extends com.vladsch.flexmark.ast.Node> extends com.vladsch.flexmark.ast.NodeAdaptingVisitHandler<N, com.vladsch.flexmark.formatter.CustomNodeFormatter<N>> implements com.vladsch.flexmark.formatter.CustomNodeFormatter<com.vladsch.flexmark.ast.Node> {
  public com.vladsch.flexmark.formatter.internal.NodeFormattingHandler(java.lang.Class<? extends N>, com.vladsch.flexmark.formatter.CustomNodeFormatter<N>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method com/vladsch/flexmark/ast/NodeAdaptingVisitHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/ast/NodeAdaptingVisitor;)V
       6: return

  public void render(com.vladsch.flexmark.ast.Node, com.vladsch.flexmark.formatter.internal.NodeFormatterContext, com.vladsch.flexmark.formatter.internal.MarkdownWriter);
    Code:
       0: aload_0
       1: getfield      #2                  // Field myAdapter:Lcom/vladsch/flexmark/ast/NodeAdaptingVisitor;
       4: checkcast     #3                  // class com/vladsch/flexmark/formatter/CustomNodeFormatter
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokeinterface #4,  4            // InterfaceMethod com/vladsch/flexmark/formatter/CustomNodeFormatter.render:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/formatter/internal/NodeFormatterContext;Lcom/vladsch/flexmark/formatter/internal/MarkdownWriter;)V
      15: return
}
