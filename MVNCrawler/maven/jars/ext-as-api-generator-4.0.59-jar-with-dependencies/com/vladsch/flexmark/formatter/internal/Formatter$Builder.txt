Compiled from "Formatter.java"
public class com.vladsch.flexmark.formatter.internal.Formatter$Builder extends com.vladsch.flexmark.util.options.MutableDataSet {
  java.util.List<com.vladsch.flexmark.html.AttributeProviderFactory> attributeProviderFactories;

  java.util.List<com.vladsch.flexmark.formatter.internal.NodeFormatterFactory> nodeFormatterFactories;

  java.util.List<com.vladsch.flexmark.html.LinkResolverFactory> linkResolverFactories;

  private final java.util.HashSet<com.vladsch.flexmark.formatter.internal.Formatter$FormatterExtension> loadedExtensions;

  com.vladsch.flexmark.html.renderer.HeaderIdGeneratorFactory htmlIdGeneratorFactory;

  public com.vladsch.flexmark.formatter.internal.Formatter$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/vladsch/flexmark/util/options/MutableDataSet."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field attributeProviderFactories:Ljava/util/List;
      15: aload_0
      16: new           #2                  // class java/util/ArrayList
      19: dup
      20: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #5                  // Field nodeFormatterFactories:Ljava/util/List;
      26: aload_0
      27: new           #2                  // class java/util/ArrayList
      30: dup
      31: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      34: putfield      #6                  // Field linkResolverFactories:Ljava/util/List;
      37: aload_0
      38: new           #7                  // class java/util/HashSet
      41: dup
      42: invokespecial #8                  // Method java/util/HashSet."<init>":()V
      45: putfield      #9                  // Field loadedExtensions:Ljava/util/HashSet;
      48: aload_0
      49: aconst_null
      50: putfield      #10                 // Field htmlIdGeneratorFactory:Lcom/vladsch/flexmark/html/renderer/HeaderIdGeneratorFactory;
      53: return

  public com.vladsch.flexmark.formatter.internal.Formatter$Builder(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method com/vladsch/flexmark/util/options/MutableDataSet."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
       5: aload_0
       6: new           #2                  // class java/util/ArrayList
       9: dup
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      13: putfield      #4                  // Field attributeProviderFactories:Ljava/util/List;
      16: aload_0
      17: new           #2                  // class java/util/ArrayList
      20: dup
      21: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      24: putfield      #5                  // Field nodeFormatterFactories:Ljava/util/List;
      27: aload_0
      28: new           #2                  // class java/util/ArrayList
      31: dup
      32: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      35: putfield      #6                  // Field linkResolverFactories:Ljava/util/List;
      38: aload_0
      39: new           #7                  // class java/util/HashSet
      42: dup
      43: invokespecial #8                  // Method java/util/HashSet."<init>":()V
      46: putfield      #9                  // Field loadedExtensions:Ljava/util/HashSet;
      49: aload_0
      50: aconst_null
      51: putfield      #10                 // Field htmlIdGeneratorFactory:Lcom/vladsch/flexmark/html/renderer/HeaderIdGeneratorFactory;
      54: aload_1
      55: getstatic     #12                 // Field com/vladsch/flexmark/parser/Parser.EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
      58: invokeinterface #13,  2           // InterfaceMethod com/vladsch/flexmark/util/options/DataHolder.contains:(Lcom/vladsch/flexmark/util/options/DataKey;)Z
      63: ifeq          81
      66: aload_0
      67: aload_0
      68: getstatic     #12                 // Field com/vladsch/flexmark/parser/Parser.EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
      71: invokevirtual #14                 // Method get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
      74: checkcast     #15                 // class java/lang/Iterable
      77: invokevirtual #16                 // Method extensions:(Ljava/lang/Iterable;)Lcom/vladsch/flexmark/formatter/internal/Formatter$Builder;
      80: pop
      81: return

  public com.vladsch.flexmark.formatter.internal.Formatter$Builder(com.vladsch.flexmark.formatter.internal.Formatter$Builder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method com/vladsch/flexmark/util/options/MutableDataSet."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
       5: aload_0
       6: new           #2                  // class java/util/ArrayList
       9: dup
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      13: putfield      #4                  // Field attributeProviderFactories:Ljava/util/List;
      16: aload_0
      17: new           #2                  // class java/util/ArrayList
      20: dup
      21: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      24: putfield      #5                  // Field nodeFormatterFactories:Ljava/util/List;
      27: aload_0
      28: new           #2                  // class java/util/ArrayList
      31: dup
      32: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      35: putfield      #6                  // Field linkResolverFactories:Ljava/util/List;
      38: aload_0
      39: new           #7                  // class java/util/HashSet
      42: dup
      43: invokespecial #8                  // Method java/util/HashSet."<init>":()V
      46: putfield      #9                  // Field loadedExtensions:Ljava/util/HashSet;
      49: aload_0
      50: aconst_null
      51: putfield      #10                 // Field htmlIdGeneratorFactory:Lcom/vladsch/flexmark/html/renderer/HeaderIdGeneratorFactory;
      54: aload_0
      55: getfield      #4                  // Field attributeProviderFactories:Ljava/util/List;
      58: aload_1
      59: getfield      #4                  // Field attributeProviderFactories:Ljava/util/List;
      62: invokeinterface #17,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      67: pop
      68: aload_0
      69: getfield      #5                  // Field nodeFormatterFactories:Ljava/util/List;
      72: aload_1
      73: getfield      #5                  // Field nodeFormatterFactories:Ljava/util/List;
      76: invokeinterface #17,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      81: pop
      82: aload_0
      83: getfield      #6                  // Field linkResolverFactories:Ljava/util/List;
      86: aload_1
      87: getfield      #6                  // Field linkResolverFactories:Ljava/util/List;
      90: invokeinterface #17,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      95: pop
      96: aload_0
      97: getfield      #9                  // Field loadedExtensions:Ljava/util/HashSet;
     100: aload_1
     101: getfield      #9                  // Field loadedExtensions:Ljava/util/HashSet;
     104: invokevirtual #18                 // Method java/util/HashSet.addAll:(Ljava/util/Collection;)Z
     107: pop
     108: aload_0
     109: aload_1
     110: getfield      #10                 // Field htmlIdGeneratorFactory:Lcom/vladsch/flexmark/html/renderer/HeaderIdGeneratorFactory;
     113: putfield      #10                 // Field htmlIdGeneratorFactory:Lcom/vladsch/flexmark/html/renderer/HeaderIdGeneratorFactory;
     116: return

  public com.vladsch.flexmark.formatter.internal.Formatter$Builder(com.vladsch.flexmark.formatter.internal.Formatter$Builder, com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method com/vladsch/flexmark/util/options/MutableDataSet."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
       5: aload_0
       6: new           #2                  // class java/util/ArrayList
       9: dup
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      13: putfield      #4                  // Field attributeProviderFactories:Ljava/util/List;
      16: aload_0
      17: new           #2                  // class java/util/ArrayList
      20: dup
      21: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      24: putfield      #5                  // Field nodeFormatterFactories:Ljava/util/List;
      27: aload_0
      28: new           #2                  // class java/util/ArrayList
      31: dup
      32: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      35: putfield      #6                  // Field linkResolverFactories:Ljava/util/List;
      38: aload_0
      39: new           #7                  // class java/util/HashSet
      42: dup
      43: invokespecial #8                  // Method java/util/HashSet."<init>":()V
      46: putfield      #9                  // Field loadedExtensions:Ljava/util/HashSet;
      49: aload_0
      50: aconst_null
      51: putfield      #10                 // Field htmlIdGeneratorFactory:Lcom/vladsch/flexmark/html/renderer/HeaderIdGeneratorFactory;
      54: new           #2                  // class java/util/ArrayList
      57: dup
      58: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      61: astore_3
      62: aload_0
      63: getstatic     #12                 // Field com/vladsch/flexmark/parser/Parser.EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
      66: invokevirtual #14                 // Method get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
      69: checkcast     #15                 // class java/lang/Iterable
      72: invokeinterface #19,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      77: astore        4
      79: aload         4
      81: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      86: ifeq          113
      89: aload         4
      91: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      96: checkcast     #22                 // class com/vladsch/flexmark/Extension
      99: astore        5
     101: aload_3
     102: aload         5
     104: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     109: pop
     110: goto          79
     113: aload_2
     114: ifnull        234
     117: aload_2
     118: invokeinterface #24,  1           // InterfaceMethod com/vladsch/flexmark/util/options/DataHolder.keySet:()Ljava/util/Collection;
     123: invokeinterface #25,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     128: astore        4
     130: aload         4
     132: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     137: ifeq          234
     140: aload         4
     142: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     147: checkcast     #26                 // class com/vladsch/flexmark/util/options/DataKey
     150: astore        5
     152: aload         5
     154: getstatic     #12                 // Field com/vladsch/flexmark/parser/Parser.EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
     157: if_acmpne     216
     160: aload_2
     161: getstatic     #12                 // Field com/vladsch/flexmark/parser/Parser.EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
     164: invokeinterface #27,  2           // InterfaceMethod com/vladsch/flexmark/util/options/DataHolder.get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
     169: checkcast     #15                 // class java/lang/Iterable
     172: invokeinterface #19,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     177: astore        6
     179: aload         6
     181: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     186: ifeq          213
     189: aload         6
     191: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     196: checkcast     #22                 // class com/vladsch/flexmark/Extension
     199: astore        7
     201: aload_3
     202: aload         7
     204: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     209: pop
     210: goto          179
     213: goto          231
     216: aload_0
     217: aload         5
     219: aload_2
     220: aload         5
     222: invokeinterface #27,  2           // InterfaceMethod com/vladsch/flexmark/util/options/DataHolder.get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
     227: invokevirtual #28                 // Method set:(Lcom/vladsch/flexmark/util/options/DataKey;Ljava/lang/Object;)Lcom/vladsch/flexmark/util/options/MutableDataSet;
     230: pop
     231: goto          130
     234: aload_0
     235: getstatic     #12                 // Field com/vladsch/flexmark/parser/Parser.EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
     238: aload_3
     239: invokevirtual #28                 // Method set:(Lcom/vladsch/flexmark/util/options/DataKey;Ljava/lang/Object;)Lcom/vladsch/flexmark/util/options/MutableDataSet;
     242: pop
     243: aload_0
     244: aload_3
     245: invokevirtual #16                 // Method extensions:(Ljava/lang/Iterable;)Lcom/vladsch/flexmark/formatter/internal/Formatter$Builder;
     248: pop
     249: return

  public com.vladsch.flexmark.formatter.internal.Formatter build();
    Code:
       0: new           #29                 // class com/vladsch/flexmark/formatter/internal/Formatter
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #30                 // Method com/vladsch/flexmark/formatter/internal/Formatter."<init>":(Lcom/vladsch/flexmark/formatter/internal/Formatter$Builder;Lcom/vladsch/flexmark/formatter/internal/Formatter$1;)V
       9: areturn

  public com.vladsch.flexmark.formatter.internal.Formatter$Builder nodeFormatterFactory(com.vladsch.flexmark.formatter.internal.NodeFormatterFactory);
    Code:
       0: aload_0
       1: getfield      #5                  // Field nodeFormatterFactories:Ljava/util/List;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public com.vladsch.flexmark.formatter.internal.Formatter$Builder extensions(java.lang.Iterable<? extends com.vladsch.flexmark.Extension>);
    Code:
       0: aload_1
       1: invokeinterface #19,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          61
      16: aload_2
      17: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #22                 // class com/vladsch/flexmark/Extension
      25: astore_3
      26: aload_3
      27: instanceof    #31                 // class com/vladsch/flexmark/formatter/internal/Formatter$FormatterExtension
      30: ifeq          58
      33: aload_0
      34: getfield      #9                  // Field loadedExtensions:Ljava/util/HashSet;
      37: aload_3
      38: invokevirtual #32                 // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
      41: ifne          58
      44: aload_3
      45: checkcast     #31                 // class com/vladsch/flexmark/formatter/internal/Formatter$FormatterExtension
      48: astore        4
      50: aload         4
      52: aload_0
      53: invokeinterface #33,  2           // InterfaceMethod com/vladsch/flexmark/formatter/internal/Formatter$FormatterExtension.rendererOptions:(Lcom/vladsch/flexmark/util/options/MutableDataHolder;)V
      58: goto          7
      61: aload_1
      62: invokeinterface #19,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      67: astore_2
      68: aload_2
      69: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      74: ifeq          132
      77: aload_2
      78: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      83: checkcast     #22                 // class com/vladsch/flexmark/Extension
      86: astore_3
      87: aload_3
      88: instanceof    #31                 // class com/vladsch/flexmark/formatter/internal/Formatter$FormatterExtension
      91: ifeq          129
      94: aload_0
      95: getfield      #9                  // Field loadedExtensions:Ljava/util/HashSet;
      98: aload_3
      99: invokevirtual #32                 // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
     102: ifne          129
     105: aload_3
     106: checkcast     #31                 // class com/vladsch/flexmark/formatter/internal/Formatter$FormatterExtension
     109: astore        4
     111: aload         4
     113: aload_0
     114: invokeinterface #34,  2           // InterfaceMethod com/vladsch/flexmark/formatter/internal/Formatter$FormatterExtension.extend:(Lcom/vladsch/flexmark/formatter/internal/Formatter$Builder;)V
     119: aload_0
     120: getfield      #9                  // Field loadedExtensions:Ljava/util/HashSet;
     123: aload         4
     125: invokevirtual #35                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
     128: pop
     129: goto          68
     132: aload_0
     133: areturn
}
