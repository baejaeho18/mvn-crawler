Compiled from "Heading.java"
public class com.vladsch.flexmark.ast.Heading extends com.vladsch.flexmark.ast.Block implements com.vladsch.flexmark.ast.AnchorRefTarget {
  protected int level;

  protected com.vladsch.flexmark.util.sequence.BasedSequence openingMarker;

  protected com.vladsch.flexmark.util.sequence.BasedSequence text;

  protected com.vladsch.flexmark.util.sequence.BasedSequence closingMarker;

  protected java.lang.String anchorRefId;

  public void getAstExtra(java.lang.StringBuilder);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #1                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: aload_0
       6: getfield      #2                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       9: aload_0
      10: getfield      #3                  // Field closingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      13: ldc           #4                  // String text
      15: invokestatic  #5                  // Method delimitedSegmentSpanChars:(Ljava/lang/StringBuilder;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Ljava/lang/String;)V
      18: return

  public com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments();
    Code:
       0: iconst_3
       1: anewarray     #6                  // class com/vladsch/flexmark/util/sequence/BasedSequence
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #1                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #2                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      17: aastore
      18: dup
      19: iconst_2
      20: aload_0
      21: getfield      #3                  // Field closingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      24: aastore
      25: areturn

  public java.lang.String getAnchorRefText();
    Code:
       0: new           #7                  // class com/vladsch/flexmark/ast/util/TextCollectingVisitor
       3: dup
       4: invokespecial #8                  // Method com/vladsch/flexmark/ast/util/TextCollectingVisitor."<init>":()V
       7: aload_0
       8: invokevirtual #9                  // Method com/vladsch/flexmark/ast/util/TextCollectingVisitor.collectAndGetText:(Lcom/vladsch/flexmark/ast/Node;)Ljava/lang/String;
      11: invokevirtual #10                 // Method java/lang/String.trim:()Ljava/lang/String;
      14: areturn

  public com.vladsch.flexmark.util.sequence.BasedSequence[] getAnchorRefSegments();
    Code:
       0: new           #7                  // class com/vladsch/flexmark/ast/util/TextCollectingVisitor
       3: dup
       4: invokespecial #8                  // Method com/vladsch/flexmark/ast/util/TextCollectingVisitor."<init>":()V
       7: aload_0
       8: invokevirtual #11                 // Method com/vladsch/flexmark/ast/util/TextCollectingVisitor.collectAndGetSegments:(Lcom/vladsch/flexmark/ast/Node;)[Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      11: areturn

  public java.lang.String getAnchorRefId();
    Code:
       0: aload_0
       1: getfield      #12                 // Field anchorRefId:Ljava/lang/String;
       4: areturn

  public void setAnchorRefId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field anchorRefId:Ljava/lang/String;
       5: return

  public com.vladsch.flexmark.ast.Heading();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method com/vladsch/flexmark/ast/Block."<init>":()V
       4: aload_0
       5: getstatic     #14                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       8: putfield      #1                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      11: aload_0
      12: getstatic     #14                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      15: putfield      #2                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      18: aload_0
      19: getstatic     #14                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      22: putfield      #3                  // Field closingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      25: aload_0
      26: ldc           #15                 // String
      28: putfield      #12                 // Field anchorRefId:Ljava/lang/String;
      31: return

  public com.vladsch.flexmark.ast.Heading(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method com/vladsch/flexmark/ast/Block."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
       5: aload_0
       6: getstatic     #14                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       9: putfield      #1                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      12: aload_0
      13: getstatic     #14                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      16: putfield      #2                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      19: aload_0
      20: getstatic     #14                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      23: putfield      #3                  // Field closingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      26: aload_0
      27: ldc           #15                 // String
      29: putfield      #12                 // Field anchorRefId:Ljava/lang/String;
      32: return

  public com.vladsch.flexmark.ast.Heading(com.vladsch.flexmark.util.sequence.BasedSequence, java.util.List<com.vladsch.flexmark.util.sequence.BasedSequence>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #17                 // Method com/vladsch/flexmark/ast/Block."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;Ljava/util/List;)V
       6: aload_0
       7: getstatic     #14                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      10: putfield      #1                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      13: aload_0
      14: getstatic     #14                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      17: putfield      #2                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      20: aload_0
      21: getstatic     #14                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      24: putfield      #3                  // Field closingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      27: aload_0
      28: ldc           #15                 // String
      30: putfield      #12                 // Field anchorRefId:Ljava/lang/String;
      33: return

  public com.vladsch.flexmark.ast.Heading(com.vladsch.flexmark.ast.BlockContent);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #18                 // Method com/vladsch/flexmark/ast/Block."<init>":(Lcom/vladsch/flexmark/ast/BlockContent;)V
       5: aload_0
       6: getstatic     #14                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       9: putfield      #1                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      12: aload_0
      13: getstatic     #14                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      16: putfield      #2                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      19: aload_0
      20: getstatic     #14                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      23: putfield      #3                  // Field closingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      26: aload_0
      27: ldc           #15                 // String
      29: putfield      #12                 // Field anchorRefId:Ljava/lang/String;
      32: return

  public boolean isAtxHeading();
    Code:
       0: aload_0
       1: getfield      #1                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: getstatic     #14                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isSetextHeading();
    Code:
       0: aload_0
       1: getfield      #1                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: getstatic     #14                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       7: if_acmpne     24
      10: aload_0
      11: getfield      #3                  // Field closingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      14: getstatic     #14                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      17: if_acmpeq     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public com.vladsch.flexmark.util.sequence.BasedSequence getOpeningMarker();
    Code:
       0: aload_0
       1: getfield      #1                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: areturn

  public void setOpeningMarker(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     11
       5: getstatic     #14                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       8: goto          12
      11: aload_1
      12: putfield      #1                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      15: return

  public com.vladsch.flexmark.util.sequence.BasedSequence getText();
    Code:
       0: aload_0
       1: getfield      #2                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: areturn

  public void setText(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     11
       5: getstatic     #14                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       8: goto          12
      11: aload_1
      12: putfield      #2                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      15: return

  public com.vladsch.flexmark.util.sequence.BasedSequence getClosingMarker();
    Code:
       0: aload_0
       1: getfield      #3                  // Field closingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: areturn

  public void setClosingMarker(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     11
       5: getstatic     #14                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       8: goto          12
      11: aload_1
      12: putfield      #3                  // Field closingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      15: return

  public int getLevel();
    Code:
       0: aload_0
       1: getfield      #19                 // Field level:I
       4: ireturn

  public void setLevel(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field level:I
       5: return
}
