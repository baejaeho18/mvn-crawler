Compiled from "BlockQuote.java"
public class com.vladsch.flexmark.ast.BlockQuote extends com.vladsch.flexmark.ast.Block {
  private com.vladsch.flexmark.util.sequence.BasedSequence openingMarker;

  public void getAstExtra(java.lang.StringBuilder);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #1                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: ldc           #2                  // String marker
       7: invokestatic  #3                  // Method segmentSpanChars:(Ljava/lang/StringBuilder;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Ljava/lang/String;)V
      10: return

  public com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments();
    Code:
       0: iconst_1
       1: anewarray     #4                  // class com/vladsch/flexmark/util/sequence/BasedSequence
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #1                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      10: aastore
      11: areturn

  public com.vladsch.flexmark.ast.BlockQuote();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method com/vladsch/flexmark/ast/Block."<init>":()V
       4: aload_0
       5: getstatic     #6                  // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       8: putfield      #1                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      11: return

  public com.vladsch.flexmark.ast.BlockQuote(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method com/vladsch/flexmark/ast/Block."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
       5: aload_0
       6: getstatic     #6                  // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       9: putfield      #1                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      12: return

  public com.vladsch.flexmark.ast.BlockQuote(com.vladsch.flexmark.util.sequence.BasedSequence, java.util.List<com.vladsch.flexmark.util.sequence.BasedSequence>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #8                  // Method com/vladsch/flexmark/ast/Block."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;Ljava/util/List;)V
       6: aload_0
       7: getstatic     #6                  // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      10: putfield      #1                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      13: return

  public com.vladsch.flexmark.ast.BlockQuote(com.vladsch.flexmark.ast.BlockContent);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method com/vladsch/flexmark/ast/Block."<init>":(Lcom/vladsch/flexmark/ast/BlockContent;)V
       5: aload_0
       6: getstatic     #6                  // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       9: putfield      #1                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      12: return

  public com.vladsch.flexmark.util.sequence.BasedSequence getOpeningMarker();
    Code:
       0: aload_0
       1: getfield      #1                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: areturn

  public void setOpeningMarker(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: return
}
