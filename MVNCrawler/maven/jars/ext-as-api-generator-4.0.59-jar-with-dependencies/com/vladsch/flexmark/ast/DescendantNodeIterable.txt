Compiled from "DescendantNodeIterable.java"
public class com.vladsch.flexmark.ast.DescendantNodeIterable implements com.vladsch.flexmark.util.collection.iteration.ReversiblePeekingIterable<com.vladsch.flexmark.ast.Node> {
  private com.vladsch.flexmark.util.collection.iteration.ReversiblePeekingIterable<com.vladsch.flexmark.ast.Node> iterable;

  public com.vladsch.flexmark.ast.DescendantNodeIterable(com.vladsch.flexmark.util.collection.iteration.ReversiblePeekingIterable<com.vladsch.flexmark.ast.Node>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: instanceof    #2                  // class com/vladsch/flexmark/ast/DescendantNodeIterable
       8: ifeq          25
      11: aload_0
      12: aload_1
      13: checkcast     #2                  // class com/vladsch/flexmark/ast/DescendantNodeIterable
      16: getfield      #3                  // Field iterable:Lcom/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterable;
      19: putfield      #3                  // Field iterable:Lcom/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterable;
      22: goto          30
      25: aload_0
      26: aload_1
      27: putfield      #3                  // Field iterable:Lcom/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterable;
      30: return

  public com.vladsch.flexmark.util.collection.iteration.ReversiblePeekingIterator<com.vladsch.flexmark.ast.Node> iterator();
    Code:
       0: new           #4                  // class com/vladsch/flexmark/ast/DescendantNodeIterator
       3: dup
       4: aload_0
       5: getfield      #3                  // Field iterable:Lcom/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterable;
       8: invokeinterface #5,  1            // InterfaceMethod com/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterable.iterator:()Lcom/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterator;
      13: invokespecial #6                  // Method com/vladsch/flexmark/ast/DescendantNodeIterator."<init>":(Lcom/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterator;)V
      16: areturn

  public com.vladsch.flexmark.util.collection.iteration.ReversiblePeekingIterable<com.vladsch.flexmark.ast.Node> reversed();
    Code:
       0: new           #2                  // class com/vladsch/flexmark/ast/DescendantNodeIterable
       3: dup
       4: aload_0
       5: getfield      #3                  // Field iterable:Lcom/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterable;
       8: invokeinterface #7,  1            // InterfaceMethod com/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterable.reversed:()Lcom/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterable;
      13: invokespecial #8                  // Method "<init>":(Lcom/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterable;)V
      16: areturn

  public com.vladsch.flexmark.util.collection.iteration.ReversiblePeekingIterator<com.vladsch.flexmark.ast.Node> reversedIterator();
    Code:
       0: new           #4                  // class com/vladsch/flexmark/ast/DescendantNodeIterator
       3: dup
       4: aload_0
       5: getfield      #3                  // Field iterable:Lcom/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterable;
       8: invokeinterface #9,  1            // InterfaceMethod com/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterable.reversedIterator:()Lcom/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterator;
      13: invokespecial #6                  // Method com/vladsch/flexmark/ast/DescendantNodeIterator."<init>":(Lcom/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterator;)V
      16: areturn

  public boolean isReversed();
    Code:
       0: aload_0
       1: getfield      #3                  // Field iterable:Lcom/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterable;
       4: invokeinterface #10,  1           // InterfaceMethod com/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterable.isReversed:()Z
       9: ireturn

  public com.vladsch.flexmark.util.collection.iteration.ReversibleIterator reversedIterator();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method reversedIterator:()Lcom/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterator;
       4: areturn

  public com.vladsch.flexmark.util.collection.iteration.ReversibleIterable reversed();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method reversed:()Lcom/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterable;
       4: areturn

  public com.vladsch.flexmark.util.collection.iteration.ReversibleIterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method iterator:()Lcom/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterator;
       4: areturn

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method iterator:()Lcom/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterator;
       4: areturn
}
