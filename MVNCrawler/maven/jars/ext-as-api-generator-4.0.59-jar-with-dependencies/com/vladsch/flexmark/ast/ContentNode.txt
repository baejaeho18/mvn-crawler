Compiled from "ContentNode.java"
public abstract class com.vladsch.flexmark.ast.ContentNode extends com.vladsch.flexmark.ast.Node implements com.vladsch.flexmark.ast.Content {
  protected java.util.List<com.vladsch.flexmark.util.sequence.BasedSequence> lineSegments;

  public com.vladsch.flexmark.ast.ContentNode();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/vladsch/flexmark/ast/Node."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field com/vladsch/flexmark/util/sequence/BasedSequence.EMPTY_LIST:Ljava/util/List;
       8: putfield      #3                  // Field lineSegments:Ljava/util/List;
      11: return

  public com.vladsch.flexmark.ast.ContentNode(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method com/vladsch/flexmark/ast/Node."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
       5: aload_0
       6: getstatic     #2                  // Field com/vladsch/flexmark/util/sequence/BasedSequence.EMPTY_LIST:Ljava/util/List;
       9: putfield      #3                  // Field lineSegments:Ljava/util/List;
      12: return

  public com.vladsch.flexmark.ast.ContentNode(com.vladsch.flexmark.util.sequence.BasedSequence, java.util.List<com.vladsch.flexmark.util.sequence.BasedSequence>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method com/vladsch/flexmark/ast/Node."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
       5: aload_0
       6: getstatic     #2                  // Field com/vladsch/flexmark/util/sequence/BasedSequence.EMPTY_LIST:Ljava/util/List;
       9: putfield      #3                  // Field lineSegments:Ljava/util/List;
      12: aload_0
      13: aload_2
      14: putfield      #3                  // Field lineSegments:Ljava/util/List;
      17: return

  public com.vladsch.flexmark.ast.ContentNode(java.util.List<com.vladsch.flexmark.util.sequence.BasedSequence>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method getSpanningChars:(Ljava/util/List;)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: aload_1
       6: invokespecial #6                  // Method "<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;Ljava/util/List;)V
       9: return

  public com.vladsch.flexmark.ast.ContentNode(com.vladsch.flexmark.ast.BlockContent);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method com/vladsch/flexmark/ast/BlockContent.getSpanningChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: aload_1
       6: invokevirtual #8                  // Method com/vladsch/flexmark/ast/BlockContent.getLines:()Ljava/util/List;
       9: invokespecial #6                  // Method "<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;Ljava/util/List;)V
      12: return

  public void setContent(com.vladsch.flexmark.util.sequence.BasedSequence, java.util.List<com.vladsch.flexmark.util.sequence.BasedSequence>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method setChars:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
       5: aload_0
       6: aload_2
       7: putfield      #3                  // Field lineSegments:Ljava/util/List;
      10: return

  public void setContent(java.util.List<com.vladsch.flexmark.util.sequence.BasedSequence>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field lineSegments:Ljava/util/List;
       5: aload_0
       6: aload_0
       7: invokevirtual #10                 // Method getSpanningChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      10: invokevirtual #9                  // Method setChars:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
      13: return

  public void setContent(com.vladsch.flexmark.ast.BlockContent);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method com/vladsch/flexmark/ast/BlockContent.getSpanningChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: invokevirtual #9                  // Method setChars:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
       8: aload_0
       9: aload_1
      10: invokevirtual #8                  // Method com/vladsch/flexmark/ast/BlockContent.getLines:()Ljava/util/List;
      13: putfield      #3                  // Field lineSegments:Ljava/util/List;
      16: return

  public com.vladsch.flexmark.util.sequence.BasedSequence getSpanningChars();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lineSegments:Ljava/util/List;
       4: invokestatic  #5                  // Method getSpanningChars:(Ljava/util/List;)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       7: areturn

  private static com.vladsch.flexmark.util.sequence.BasedSequence getSpanningChars(java.util.List<com.vladsch.flexmark.util.sequence.BasedSequence>);
    Code:
       0: aload_0
       1: invokeinterface #11,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       6: ifeq          15
       9: getstatic     #12                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      12: goto          67
      15: aload_0
      16: iconst_0
      17: invokeinterface #13,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      22: checkcast     #14                 // class com/vladsch/flexmark/util/sequence/BasedSequence
      25: aload_0
      26: iconst_0
      27: invokeinterface #13,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      32: checkcast     #14                 // class com/vladsch/flexmark/util/sequence/BasedSequence
      35: invokeinterface #15,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.getStartOffset:()I
      40: aload_0
      41: aload_0
      42: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      47: iconst_1
      48: isub
      49: invokeinterface #13,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      54: checkcast     #14                 // class com/vladsch/flexmark/util/sequence/BasedSequence
      57: invokeinterface #17,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.getEndOffset:()I
      62: invokeinterface #18,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.baseSubSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      67: areturn

  public int getLineCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lineSegments:Ljava/util/List;
       4: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public com.vladsch.flexmark.util.sequence.BasedSequence getLineChars(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field lineSegments:Ljava/util/List;
       4: iload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #14                 // class com/vladsch/flexmark/util/sequence/BasedSequence
      13: areturn

  public java.util.List<com.vladsch.flexmark.util.sequence.BasedSequence> getContentLines();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lineSegments:Ljava/util/List;
       4: areturn

  public java.util.List<com.vladsch.flexmark.util.sequence.BasedSequence> getContentLines(int, int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field lineSegments:Ljava/util/List;
       4: iload_1
       5: iload_2
       6: invokeinterface #19,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      11: areturn

  public com.vladsch.flexmark.util.sequence.BasedSequence getContentChars();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lineSegments:Ljava/util/List;
       4: aload_0
       5: invokevirtual #20                 // Method getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       8: aload_0
       9: invokevirtual #20                 // Method getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      12: invokeinterface #21,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
      17: invokeinterface #22,  2           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(I)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      22: invokestatic  #23                 // Method com/vladsch/flexmark/util/sequence/SegmentedSequence.of:(Ljava/util/List;Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      25: areturn

  public com.vladsch.flexmark.util.sequence.BasedSequence getContentChars(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #24                 // Method getContentLines:(II)Ljava/util/List;
       6: aload_0
       7: invokevirtual #20                 // Method getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      10: invokestatic  #23                 // Method com/vladsch/flexmark/util/sequence/SegmentedSequence.of:(Ljava/util/List;Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      13: areturn

  public void setContentLines(java.util.List<com.vladsch.flexmark.util.sequence.BasedSequence>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field lineSegments:Ljava/util/List;
       5: return

  public void setContentLine(int, com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: new           #25                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #3                  // Field lineSegments:Ljava/util/List;
       8: invokespecial #26                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: astore_3
      12: aload_3
      13: iload_1
      14: aload_2
      15: invokevirtual #27                 // Method java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_0
      20: aload_3
      21: putfield      #3                  // Field lineSegments:Ljava/util/List;
      24: aload_0
      25: invokevirtual #28                 // Method setCharsFromContent:()V
      28: return
}
