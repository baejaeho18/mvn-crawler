Compiled from "NodeVisitor.java"
public class com.vladsch.flexmark.ast.NodeVisitor extends com.vladsch.flexmark.ast.NodeAdaptedVisitor<com.vladsch.flexmark.ast.VisitHandler<?>> {
  public com.vladsch.flexmark.ast.NodeVisitor(com.vladsch.flexmark.ast.VisitHandler<?>...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method com/vladsch/flexmark/ast/NodeAdaptedVisitor."<init>":([Lcom/vladsch/flexmark/ast/NodeAdaptingVisitHandler;)V
       5: return

  public com.vladsch.flexmark.ast.NodeVisitor(com.vladsch.flexmark.ast.VisitHandler<?>[]...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method com/vladsch/flexmark/ast/NodeAdaptedVisitor."<init>":([[Lcom/vladsch/flexmark/ast/NodeAdaptingVisitHandler;)V
       5: return

  public com.vladsch.flexmark.ast.NodeVisitor(java.util.Collection<com.vladsch.flexmark.ast.VisitHandler<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method com/vladsch/flexmark/ast/NodeAdaptedVisitor."<init>":(Ljava/util/Collection;)V
       5: return

  public void visitChildren(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method com/vladsch/flexmark/ast/Node.getFirstChild:()Lcom/vladsch/flexmark/ast/Node;
       4: astore_2
       5: aload_2
       6: ifnull        24
       9: aload_2
      10: invokevirtual #5                  // Method com/vladsch/flexmark/ast/Node.getNext:()Lcom/vladsch/flexmark/ast/Node;
      13: astore_3
      14: aload_0
      15: aload_2
      16: invokevirtual #6                  // Method visit:(Lcom/vladsch/flexmark/ast/Node;)V
      19: aload_3
      20: astore_2
      21: goto          5
      24: return

  public void visit(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_0
       1: getfield      #7                  // Field myCustomHandlersMap:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #10                 // class com/vladsch/flexmark/ast/VisitHandler
      16: astore_2
      17: aload_2
      18: ifnull        29
      21: aload_2
      22: aload_1
      23: invokevirtual #11                 // Method com/vladsch/flexmark/ast/VisitHandler.visit:(Lcom/vladsch/flexmark/ast/Node;)V
      26: goto          34
      29: aload_0
      30: aload_1
      31: invokevirtual #12                 // Method visitChildren:(Lcom/vladsch/flexmark/ast/Node;)V
      34: return

  public void visitNodeOnly(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_0
       1: getfield      #7                  // Field myCustomHandlersMap:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #10                 // class com/vladsch/flexmark/ast/VisitHandler
      16: astore_2
      17: aload_2
      18: ifnull        26
      21: aload_2
      22: aload_1
      23: invokevirtual #11                 // Method com/vladsch/flexmark/ast/VisitHandler.visit:(Lcom/vladsch/flexmark/ast/Node;)V
      26: return
}
