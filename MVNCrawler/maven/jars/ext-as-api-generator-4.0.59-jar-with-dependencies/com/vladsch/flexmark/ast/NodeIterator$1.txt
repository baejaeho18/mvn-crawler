Compiled from "NodeIterator.java"
final class com.vladsch.flexmark.ast.NodeIterator$1 implements com.vladsch.flexmark.util.collection.iteration.ReversiblePeekingIterator<com.vladsch.flexmark.ast.Node> {
  com.vladsch.flexmark.ast.NodeIterator$1();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void remove();
    Code:
       0: return

  public boolean isReversed();
    Code:
       0: iconst_0
       1: ireturn

  public boolean hasNext();
    Code:
       0: iconst_0
       1: ireturn

  public com.vladsch.flexmark.ast.Node next();
    Code:
       0: new           #2                  // class java/util/NoSuchElementException
       3: dup
       4: invokespecial #3                  // Method java/util/NoSuchElementException."<init>":()V
       7: athrow

  public com.vladsch.flexmark.ast.Node peek();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Object peek();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method peek:()Lcom/vladsch/flexmark/ast/Node;
       4: areturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method next:()Lcom/vladsch/flexmark/ast/Node;
       4: areturn
}
