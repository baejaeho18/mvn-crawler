Compiled from "NodeAdaptingVisitHandler.java"
public abstract class com.vladsch.flexmark.ast.NodeAdaptingVisitHandler<N extends com.vladsch.flexmark.ast.Node, A extends com.vladsch.flexmark.ast.NodeAdaptingVisitor<N>> {
  protected final java.lang.Class<? extends N> myClass;

  protected final A myAdapter;

  public com.vladsch.flexmark.ast.NodeAdaptingVisitHandler(java.lang.Class<? extends N>, A);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field myClass:Ljava/lang/Class;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field myAdapter:Lcom/vladsch/flexmark/ast/NodeAdaptingVisitor;
      14: return

  public java.lang.Class<? extends N> getNodeType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field myClass:Ljava/lang/Class;
       4: areturn

  public A getNodeAdapter();
    Code:
       0: aload_0
       1: getfield      #3                  // Field myAdapter:Lcom/vladsch/flexmark/ast/NodeAdaptingVisitor;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #5                  // class com/vladsch/flexmark/ast/NodeAdaptingVisitHandler
      28: astore_2
      29: aload_0
      30: getfield      #2                  // Field myClass:Ljava/lang/Class;
      33: aload_2
      34: getfield      #2                  // Field myClass:Ljava/lang/Class;
      37: if_acmpeq     42
      40: iconst_0
      41: ireturn
      42: aload_0
      43: getfield      #3                  // Field myAdapter:Lcom/vladsch/flexmark/ast/NodeAdaptingVisitor;
      46: aload_2
      47: getfield      #3                  // Field myAdapter:Lcom/vladsch/flexmark/ast/NodeAdaptingVisitor;
      50: if_acmpne     57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field myClass:Ljava/lang/Class;
       4: invokevirtual #6                  // Method java/lang/Object.hashCode:()I
       7: istore_1
       8: bipush        31
      10: iload_1
      11: imul
      12: aload_0
      13: getfield      #3                  // Field myAdapter:Lcom/vladsch/flexmark/ast/NodeAdaptingVisitor;
      16: invokevirtual #6                  // Method java/lang/Object.hashCode:()I
      19: iadd
      20: istore_1
      21: iload_1
      22: ireturn
}
