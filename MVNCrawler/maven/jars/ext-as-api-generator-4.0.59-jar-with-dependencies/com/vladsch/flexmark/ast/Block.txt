Compiled from "Block.java"
public abstract class com.vladsch.flexmark.ast.Block extends com.vladsch.flexmark.ast.ContentNode {
  public com.vladsch.flexmark.ast.Block();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/vladsch/flexmark/ast/ContentNode."<init>":()V
       4: return

  public com.vladsch.flexmark.ast.Block(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method com/vladsch/flexmark/ast/ContentNode."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
       5: return

  public com.vladsch.flexmark.ast.Block(com.vladsch.flexmark.util.sequence.BasedSequence, java.util.List<com.vladsch.flexmark.util.sequence.BasedSequence>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #3                  // Method com/vladsch/flexmark/ast/ContentNode."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;Ljava/util/List;)V
       6: return

  public com.vladsch.flexmark.ast.Block(java.util.List<com.vladsch.flexmark.util.sequence.BasedSequence>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method com/vladsch/flexmark/ast/ContentNode."<init>":(Ljava/util/List;)V
       5: return

  public com.vladsch.flexmark.ast.Block(com.vladsch.flexmark.ast.BlockContent);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method com/vladsch/flexmark/ast/ContentNode."<init>":(Lcom/vladsch/flexmark/ast/BlockContent;)V
       5: return

  public com.vladsch.flexmark.ast.Block getParent();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method com/vladsch/flexmark/ast/ContentNode.getParent:()Lcom/vladsch/flexmark/ast/Node;
       4: checkcast     #7                  // class com/vladsch/flexmark/ast/Block
       7: areturn

  protected void setParent(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_1
       1: instanceof    #7                  // class com/vladsch/flexmark/ast/Block
       4: ifne          17
       7: new           #8                  // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #9                  // String Parent of block must also be block (can not be inline)
      13: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: invokespecial #11                 // Method com/vladsch/flexmark/ast/ContentNode.setParent:(Lcom/vladsch/flexmark/ast/Node;)V
      22: return

  public com.vladsch.flexmark.ast.Node getParent();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getParent:()Lcom/vladsch/flexmark/ast/Block;
       4: areturn
}
