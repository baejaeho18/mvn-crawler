Compiled from "HtmlEntity.java"
public class com.vladsch.flexmark.ast.HtmlEntity extends com.vladsch.flexmark.ast.Node {
  public void getAstExtra(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: invokeinterface #2,  1            // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.isEmpty:()Z
       9: ifne          31
      12: aload_1
      13: ldc           #3                  // String  \"
      15: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: aload_0
      19: invokevirtual #1                  // Method getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      22: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      25: ldc           #6                  // String \"
      27: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: return

  public com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments();
    Code:
       0: getstatic     #7                  // Field EMPTY_SEGMENTS:[Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       3: areturn

  public com.vladsch.flexmark.ast.HtmlEntity();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method com/vladsch/flexmark/ast/Node."<init>":()V
       4: return

  public com.vladsch.flexmark.ast.HtmlEntity(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method com/vladsch/flexmark/ast/Node."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
       5: return
}
