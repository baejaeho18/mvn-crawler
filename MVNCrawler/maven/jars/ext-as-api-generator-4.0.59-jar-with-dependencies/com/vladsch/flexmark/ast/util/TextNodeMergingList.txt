Compiled from "TextNodeMergingList.java"
public class com.vladsch.flexmark.ast.util.TextNodeMergingList {
  private java.util.ArrayList<com.vladsch.flexmark.ast.Node> list;

  private boolean isMerged;

  public com.vladsch.flexmark.ast.util.TextNodeMergingList();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field list:Ljava/util/ArrayList;
      15: aload_0
      16: iconst_1
      17: putfield      #5                  // Field isMerged:Z
      20: return

  public void add(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_0
       1: getfield      #4                  // Field list:Ljava/util/ArrayList;
       4: aload_1
       5: invokevirtual #6                  // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: aload_1
      10: instanceof    #7                  // class com/vladsch/flexmark/ast/Text
      13: ifeq          21
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field isMerged:Z
      21: return

  public void add(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_1
       1: invokeinterface #8,  1            // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.isEmpty:()Z
       6: ifne          21
       9: aload_0
      10: new           #7                  // class com/vladsch/flexmark/ast/Text
      13: dup
      14: aload_1
      15: invokespecial #9                  // Method com/vladsch/flexmark/ast/Text."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
      18: invokevirtual #10                 // Method add:(Lcom/vladsch/flexmark/ast/Node;)V
      21: return

  public void addChildrenOf(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method com/vladsch/flexmark/ast/Node.getFirstChild:()Lcom/vladsch/flexmark/ast/Node;
       4: astore_2
       5: aload_2
       6: ifnull        28
       9: aload_2
      10: invokevirtual #12                 // Method com/vladsch/flexmark/ast/Node.getNext:()Lcom/vladsch/flexmark/ast/Node;
      13: astore_3
      14: aload_2
      15: invokevirtual #13                 // Method com/vladsch/flexmark/ast/Node.unlink:()V
      18: aload_0
      19: aload_2
      20: invokevirtual #10                 // Method add:(Lcom/vladsch/flexmark/ast/Node;)V
      23: aload_3
      24: astore_2
      25: goto          5
      28: return

  public void appendMergedTo(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method mergeList:()V
       4: aload_0
       5: getfield      #4                  // Field list:Ljava/util/ArrayList;
       8: invokevirtual #15                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          39
      21: aload_2
      22: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #18                 // class com/vladsch/flexmark/ast/Node
      30: astore_3
      31: aload_1
      32: aload_3
      33: invokevirtual #19                 // Method com/vladsch/flexmark/ast/Node.appendChild:(Lcom/vladsch/flexmark/ast/Node;)V
      36: goto          12
      39: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #4                  // Field list:Ljava/util/ArrayList;
       4: invokevirtual #20                 // Method java/util/ArrayList.clear:()V
       7: aload_0
       8: iconst_1
       9: putfield      #5                  // Field isMerged:Z
      12: return

  public void insertMergedBefore(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method mergeList:()V
       4: aload_0
       5: getfield      #4                  // Field list:Ljava/util/ArrayList;
       8: invokevirtual #15                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          39
      21: aload_2
      22: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #18                 // class com/vladsch/flexmark/ast/Node
      30: astore_3
      31: aload_1
      32: aload_3
      33: invokevirtual #21                 // Method com/vladsch/flexmark/ast/Node.insertBefore:(Lcom/vladsch/flexmark/ast/Node;)V
      36: goto          12
      39: aload_0
      40: invokevirtual #22                 // Method clear:()V
      43: return

  public void insertMergedAfter(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method mergeList:()V
       4: aload_0
       5: getfield      #4                  // Field list:Ljava/util/ArrayList;
       8: invokevirtual #15                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          41
      21: aload_2
      22: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #18                 // class com/vladsch/flexmark/ast/Node
      30: astore_3
      31: aload_1
      32: aload_3
      33: invokevirtual #23                 // Method com/vladsch/flexmark/ast/Node.insertAfter:(Lcom/vladsch/flexmark/ast/Node;)V
      36: aload_3
      37: astore_1
      38: goto          12
      41: aload_0
      42: invokevirtual #22                 // Method clear:()V
      45: return

  private void mergeList();
    Code:
       0: aload_0
       1: getfield      #5                  // Field isMerged:Z
       4: ifne          208
       7: aconst_null
       8: astore_1
       9: aconst_null
      10: astore_2
      11: aload_0
      12: getfield      #4                  // Field list:Ljava/util/ArrayList;
      15: invokevirtual #15                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      18: astore_3
      19: aload_3
      20: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          166
      28: aload_3
      29: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #18                 // class com/vladsch/flexmark/ast/Node
      37: astore        4
      39: aload         4
      41: instanceof    #7                  // class com/vladsch/flexmark/ast/Text
      44: ifeq          132
      47: aload         4
      49: invokevirtual #24                 // Method com/vladsch/flexmark/ast/Node.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      52: invokeinterface #8,  1            // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.isEmpty:()Z
      57: ifne          163
      60: aload_2
      61: ifnonnull     70
      64: aload         4
      66: astore_2
      67: goto          163
      70: aload_2
      71: invokevirtual #24                 // Method com/vladsch/flexmark/ast/Node.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      74: aload         4
      76: invokevirtual #24                 // Method com/vladsch/flexmark/ast/Node.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      79: invokeinterface #25,  2           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.isContinuedBy:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Z
      84: ifeq          108
      87: aload_2
      88: aload_2
      89: invokevirtual #24                 // Method com/vladsch/flexmark/ast/Node.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      92: aload         4
      94: invokevirtual #24                 // Method com/vladsch/flexmark/ast/Node.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      97: invokeinterface #26,  2           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.spliceAtEnd:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     102: invokevirtual #27                 // Method com/vladsch/flexmark/ast/Node.setChars:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
     105: goto          163
     108: aload_1
     109: ifnonnull     120
     112: new           #2                  // class java/util/ArrayList
     115: dup
     116: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
     119: astore_1
     120: aload_1
     121: aload_2
     122: invokevirtual #6                  // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     125: pop
     126: aload         4
     128: astore_2
     129: goto          163
     132: aload_1
     133: ifnonnull     144
     136: new           #2                  // class java/util/ArrayList
     139: dup
     140: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
     143: astore_1
     144: aload_2
     145: ifnull        156
     148: aload_1
     149: aload_2
     150: invokevirtual #6                  // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     153: pop
     154: aconst_null
     155: astore_2
     156: aload_1
     157: aload         4
     159: invokevirtual #6                  // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     162: pop
     163: goto          19
     166: aload_2
     167: ifnull        199
     170: aload_1
     171: ifnonnull     193
     174: aload_0
     175: getfield      #4                  // Field list:Ljava/util/ArrayList;
     178: invokevirtual #20                 // Method java/util/ArrayList.clear:()V
     181: aload_0
     182: getfield      #4                  // Field list:Ljava/util/ArrayList;
     185: aload_2
     186: invokevirtual #6                  // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     189: pop
     190: goto          199
     193: aload_1
     194: aload_2
     195: invokevirtual #6                  // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     198: pop
     199: aload_1
     200: ifnull        208
     203: aload_0
     204: aload_1
     205: putfield      #4                  // Field list:Ljava/util/ArrayList;
     208: return

  public java.util.List<com.vladsch.flexmark.ast.Node> getMergedList();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method mergeList:()V
       4: aload_0
       5: getfield      #4                  // Field list:Ljava/util/ArrayList;
       8: areturn
}
