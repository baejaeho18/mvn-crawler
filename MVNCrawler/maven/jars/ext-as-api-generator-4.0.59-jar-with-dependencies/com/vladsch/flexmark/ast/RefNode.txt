Compiled from "RefNode.java"
public abstract class com.vladsch.flexmark.ast.RefNode extends com.vladsch.flexmark.ast.LinkNode implements com.vladsch.flexmark.ast.LinkRefDerived, com.vladsch.flexmark.ast.ReferencingNode<com.vladsch.flexmark.ast.util.ReferenceRepository, com.vladsch.flexmark.ast.Reference> {
  protected com.vladsch.flexmark.util.sequence.BasedSequence textOpeningMarker;

  protected com.vladsch.flexmark.util.sequence.BasedSequence text;

  protected com.vladsch.flexmark.util.sequence.BasedSequence textClosingMarker;

  protected com.vladsch.flexmark.util.sequence.BasedSequence referenceOpeningMarker;

  protected com.vladsch.flexmark.util.sequence.BasedSequence reference;

  protected com.vladsch.flexmark.util.sequence.BasedSequence referenceClosingMarker;

  protected boolean isDefined;

  public com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments();
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method isReferenceTextCombined:()Z
       4: ifeq          55
       7: bipush        6
       9: anewarray     #2                  // class com/vladsch/flexmark/util/sequence/BasedSequence
      12: dup
      13: iconst_0
      14: aload_0
      15: getfield      #3                  // Field referenceOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      18: aastore
      19: dup
      20: iconst_1
      21: aload_0
      22: getfield      #4                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      25: aastore
      26: dup
      27: iconst_2
      28: aload_0
      29: getfield      #5                  // Field referenceClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      32: aastore
      33: dup
      34: iconst_3
      35: aload_0
      36: getfield      #6                  // Field textOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      39: aastore
      40: dup
      41: iconst_4
      42: aload_0
      43: getfield      #7                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      46: aastore
      47: dup
      48: iconst_5
      49: aload_0
      50: getfield      #8                  // Field textClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      53: aastore
      54: areturn
      55: bipush        6
      57: anewarray     #2                  // class com/vladsch/flexmark/util/sequence/BasedSequence
      60: dup
      61: iconst_0
      62: aload_0
      63: getfield      #6                  // Field textOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      66: aastore
      67: dup
      68: iconst_1
      69: aload_0
      70: getfield      #7                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      73: aastore
      74: dup
      75: iconst_2
      76: aload_0
      77: getfield      #8                  // Field textClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      80: aastore
      81: dup
      82: iconst_3
      83: aload_0
      84: getfield      #3                  // Field referenceOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      87: aastore
      88: dup
      89: iconst_4
      90: aload_0
      91: getfield      #4                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      94: aastore
      95: dup
      96: iconst_5
      97: aload_0
      98: getfield      #5                  // Field referenceClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     101: aastore
     102: areturn

  public void getAstExtra(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method isReferenceTextCombined:()Z
       4: ifeq          46
       7: aload_1
       8: aload_0
       9: getfield      #3                  // Field referenceOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      12: aload_0
      13: getfield      #4                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      16: aload_0
      17: getfield      #5                  // Field referenceClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      20: ldc           #9                  // String reference
      22: invokestatic  #10                 // Method delimitedSegmentSpanChars:(Ljava/lang/StringBuilder;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Ljava/lang/String;)V
      25: aload_1
      26: aload_0
      27: getfield      #6                  // Field textOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      30: aload_0
      31: getfield      #7                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      34: aload_0
      35: getfield      #8                  // Field textClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      38: ldc           #11                 // String text
      40: invokestatic  #10                 // Method delimitedSegmentSpanChars:(Ljava/lang/StringBuilder;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Ljava/lang/String;)V
      43: goto          82
      46: aload_1
      47: aload_0
      48: getfield      #6                  // Field textOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      51: aload_0
      52: getfield      #7                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      55: aload_0
      56: getfield      #8                  // Field textClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      59: ldc           #11                 // String text
      61: invokestatic  #10                 // Method delimitedSegmentSpanChars:(Ljava/lang/StringBuilder;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Ljava/lang/String;)V
      64: aload_1
      65: aload_0
      66: getfield      #3                  // Field referenceOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      69: aload_0
      70: getfield      #4                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      73: aload_0
      74: getfield      #5                  // Field referenceClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      77: ldc           #9                  // String reference
      79: invokestatic  #10                 // Method delimitedSegmentSpanChars:(Ljava/lang/StringBuilder;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Ljava/lang/String;)V
      82: return

  public com.vladsch.flexmark.ast.RefNode();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method com/vladsch/flexmark/ast/LinkNode."<init>":()V
       4: aload_0
       5: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       8: putfield      #6                  // Field textOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      11: aload_0
      12: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      15: putfield      #7                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      18: aload_0
      19: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      22: putfield      #8                  // Field textClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      25: aload_0
      26: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      29: putfield      #3                  // Field referenceOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      32: aload_0
      33: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      36: putfield      #4                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      39: aload_0
      40: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      43: putfield      #5                  // Field referenceClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      46: aload_0
      47: iconst_0
      48: putfield      #14                 // Field isDefined:Z
      51: return

  public com.vladsch.flexmark.ast.RefNode(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method com/vladsch/flexmark/ast/LinkNode."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
       5: aload_0
       6: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       9: putfield      #6                  // Field textOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      12: aload_0
      13: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      16: putfield      #7                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      19: aload_0
      20: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      23: putfield      #8                  // Field textClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      26: aload_0
      27: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      30: putfield      #3                  // Field referenceOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      33: aload_0
      34: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      37: putfield      #4                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      40: aload_0
      41: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      44: putfield      #5                  // Field referenceClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      47: aload_0
      48: iconst_0
      49: putfield      #14                 // Field isDefined:Z
      52: return

  public com.vladsch.flexmark.ast.RefNode(com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokeinterface #16,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.getStartOffset:()I
       8: aload         6
      10: invokeinterface #17,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.getEndOffset:()I
      15: invokeinterface #18,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.baseSubSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      20: invokespecial #15                 // Method com/vladsch/flexmark/ast/LinkNode."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
      23: aload_0
      24: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      27: putfield      #6                  // Field textOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      30: aload_0
      31: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      34: putfield      #7                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      37: aload_0
      38: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      41: putfield      #8                  // Field textClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      44: aload_0
      45: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      48: putfield      #3                  // Field referenceOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      51: aload_0
      52: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      55: putfield      #4                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      58: aload_0
      59: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      62: putfield      #5                  // Field referenceClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      65: aload_0
      66: iconst_0
      67: putfield      #14                 // Field isDefined:Z
      70: aload_0
      71: aload_1
      72: putfield      #6                  // Field textOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      75: aload_0
      76: aload_2
      77: putfield      #7                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      80: aload_0
      81: aload_3
      82: putfield      #8                  // Field textClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      85: aload_0
      86: aload         4
      88: putfield      #3                  // Field referenceOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      91: aload_0
      92: aload         5
      94: putfield      #4                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      97: aload_0
      98: aload         6
     100: putfield      #5                  // Field referenceClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     103: return

  public com.vladsch.flexmark.ast.RefNode(com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method com/vladsch/flexmark/ast/LinkNode."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
       5: aload_0
       6: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       9: putfield      #6                  // Field textOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      12: aload_0
      13: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      16: putfield      #7                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      19: aload_0
      20: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      23: putfield      #8                  // Field textClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      26: aload_0
      27: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      30: putfield      #3                  // Field referenceOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      33: aload_0
      34: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      37: putfield      #4                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      40: aload_0
      41: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      44: putfield      #5                  // Field referenceClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      47: aload_0
      48: iconst_0
      49: putfield      #14                 // Field isDefined:Z
      52: aload_0
      53: aload_2
      54: putfield      #6                  // Field textOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      57: aload_0
      58: aload_3
      59: putfield      #7                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      62: aload_0
      63: aload         4
      65: putfield      #8                  // Field textClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      68: aload_0
      69: aload         5
      71: putfield      #3                  // Field referenceOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      74: aload_0
      75: aload         6
      77: putfield      #4                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      80: aload_0
      81: aload         7
      83: putfield      #5                  // Field referenceClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      86: return

  public com.vladsch.flexmark.ast.RefNode(com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokeinterface #16,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.getStartOffset:()I
       8: aload_3
       9: invokeinterface #17,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.getEndOffset:()I
      14: invokeinterface #18,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.baseSubSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      19: invokespecial #15                 // Method com/vladsch/flexmark/ast/LinkNode."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
      22: aload_0
      23: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      26: putfield      #6                  // Field textOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      29: aload_0
      30: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      33: putfield      #7                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      36: aload_0
      37: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      40: putfield      #8                  // Field textClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      43: aload_0
      44: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      47: putfield      #3                  // Field referenceOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      50: aload_0
      51: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      54: putfield      #4                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      57: aload_0
      58: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      61: putfield      #5                  // Field referenceClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      64: aload_0
      65: iconst_0
      66: putfield      #14                 // Field isDefined:Z
      69: aload_0
      70: aload_1
      71: putfield      #6                  // Field textOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      74: aload_0
      75: aload_2
      76: putfield      #7                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      79: aload_0
      80: aload_3
      81: putfield      #8                  // Field textClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      84: return

  public com.vladsch.flexmark.ast.RefNode(com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method com/vladsch/flexmark/ast/LinkNode."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
       5: aload_0
       6: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       9: putfield      #6                  // Field textOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      12: aload_0
      13: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      16: putfield      #7                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      19: aload_0
      20: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      23: putfield      #8                  // Field textClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      26: aload_0
      27: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      30: putfield      #3                  // Field referenceOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      33: aload_0
      34: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      37: putfield      #4                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      40: aload_0
      41: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      44: putfield      #5                  // Field referenceClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      47: aload_0
      48: iconst_0
      49: putfield      #14                 // Field isDefined:Z
      52: aload_0
      53: aload_2
      54: putfield      #6                  // Field textOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      57: aload_0
      58: aload_3
      59: putfield      #7                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      62: aload_0
      63: aload         4
      65: putfield      #8                  // Field textClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      68: return

  public com.vladsch.flexmark.ast.RefNode(com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokeinterface #16,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.getStartOffset:()I
       8: aload         5
      10: invokeinterface #17,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.getEndOffset:()I
      15: invokeinterface #18,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.baseSubSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      20: invokespecial #15                 // Method com/vladsch/flexmark/ast/LinkNode."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
      23: aload_0
      24: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      27: putfield      #6                  // Field textOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      30: aload_0
      31: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      34: putfield      #7                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      37: aload_0
      38: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      41: putfield      #8                  // Field textClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      44: aload_0
      45: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      48: putfield      #3                  // Field referenceOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      51: aload_0
      52: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      55: putfield      #4                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      58: aload_0
      59: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      62: putfield      #5                  // Field referenceClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      65: aload_0
      66: iconst_0
      67: putfield      #14                 // Field isDefined:Z
      70: aload_0
      71: aload_1
      72: putfield      #6                  // Field textOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      75: aload_0
      76: aload_2
      77: putfield      #7                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      80: aload_0
      81: aload_3
      82: putfield      #8                  // Field textClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      85: aload_0
      86: aload         4
      88: putfield      #3                  // Field referenceOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      91: aload_0
      92: aload         5
      94: putfield      #5                  // Field referenceClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      97: return

  public void setReferenceChars(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_1
       1: invokeinterface #19,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
       6: istore_2
       7: aload_1
       8: iconst_0
       9: invokeinterface #20,  2           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.charAt:(I)C
      14: bipush        33
      16: if_icmpne     23
      19: iconst_2
      20: goto          24
      23: iconst_1
      24: istore_3
      25: aload_0
      26: aload_1
      27: iconst_0
      28: iload_3
      29: invokeinterface #21,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      34: putfield      #3                  // Field referenceOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      37: aload_0
      38: aload_1
      39: iload_3
      40: iload_2
      41: iconst_1
      42: isub
      43: invokeinterface #21,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      48: invokeinterface #22,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.trim:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      53: putfield      #4                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      56: aload_0
      57: aload_1
      58: iload_2
      59: iconst_1
      60: isub
      61: iload_2
      62: invokeinterface #21,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      67: putfield      #5                  // Field referenceClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      70: return

  public void setTextChars(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_1
       1: invokeinterface #19,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
       6: istore_2
       7: aload_0
       8: aload_1
       9: iconst_0
      10: iconst_1
      11: invokeinterface #21,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      16: putfield      #6                  // Field textOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      19: aload_0
      20: aload_1
      21: iconst_1
      22: iload_2
      23: iconst_1
      24: isub
      25: invokeinterface #21,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      30: invokeinterface #22,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.trim:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      35: putfield      #7                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      38: aload_0
      39: aload_1
      40: iload_2
      41: iconst_1
      42: isub
      43: iload_2
      44: invokeinterface #21,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      49: putfield      #8                  // Field textClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      52: return

  public boolean isReferenceTextCombined();
    Code:
       0: aload_0
       1: getfield      #7                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isDefined();
    Code:
       0: aload_0
       1: getfield      #14                 // Field isDefined:Z
       4: ireturn

  public void setDefined(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field isDefined:Z
       5: return

  public boolean isTentative();
    Code:
       0: aload_0
       1: getfield      #14                 // Field isDefined:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isDummyReference();
    Code:
       0: aload_0
       1: getfield      #6                  // Field textOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       7: if_acmpeq     34
      10: aload_0
      11: getfield      #7                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      14: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      17: if_acmpne     34
      20: aload_0
      21: getfield      #8                  // Field textClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      24: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      27: if_acmpeq     34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  public com.vladsch.flexmark.util.sequence.BasedSequence getText();
    Code:
       0: aload_0
       1: getfield      #7                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: areturn

  public com.vladsch.flexmark.util.sequence.BasedSequence getReference();
    Code:
       0: aload_0
       1: getfield      #4                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: areturn

  public com.vladsch.flexmark.ast.Reference getReferenceNode(com.vladsch.flexmark.ast.Document);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #23                 // Field com/vladsch/flexmark/parser/Parser.REFERENCES:Lcom/vladsch/flexmark/util/options/DataKey;
       5: invokevirtual #24                 // Method com/vladsch/flexmark/ast/Document.get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
       8: checkcast     #25                 // class com/vladsch/flexmark/ast/util/ReferenceRepository
      11: invokevirtual #26                 // Method getReferenceNode:(Lcom/vladsch/flexmark/ast/util/ReferenceRepository;)Lcom/vladsch/flexmark/ast/Reference;
      14: areturn

  public com.vladsch.flexmark.ast.Reference getReferenceNode(com.vladsch.flexmark.ast.util.ReferenceRepository);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_1
       7: aload_0
       8: getfield      #4                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      11: invokevirtual #27                 // Method com/vladsch/flexmark/ast/util/ReferenceRepository.normalizeKey:(Ljava/lang/CharSequence;)Ljava/lang/String;
      14: astore_2
      15: aload_1
      16: aload_2
      17: invokevirtual #28                 // Method com/vladsch/flexmark/ast/util/ReferenceRepository.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #29                 // class com/vladsch/flexmark/ast/Reference
      23: areturn

  public com.vladsch.flexmark.util.sequence.BasedSequence getTextOpeningMarker();
    Code:
       0: aload_0
       1: getfield      #6                  // Field textOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: areturn

  public void setTextOpeningMarker(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field textOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: return

  public void setText(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: return

  public com.vladsch.flexmark.util.sequence.BasedSequence getTextClosingMarker();
    Code:
       0: aload_0
       1: getfield      #8                  // Field textClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: areturn

  public void setTextClosingMarker(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field textClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: return

  public com.vladsch.flexmark.util.sequence.BasedSequence getReferenceOpeningMarker();
    Code:
       0: aload_0
       1: getfield      #3                  // Field referenceOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: areturn

  public void setReferenceOpeningMarker(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field referenceOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: return

  public void setReference(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: return

  public com.vladsch.flexmark.util.sequence.BasedSequence getDummyReference();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method isDummyReference:()Z
       4: ifeq          35
       7: aload_0
       8: invokevirtual #31                 // Method getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      11: aload_0
      12: getfield      #6                  // Field textOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      15: invokeinterface #16,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.getStartOffset:()I
      20: aload_0
      21: getfield      #8                  // Field textClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      24: invokeinterface #17,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.getEndOffset:()I
      29: invokeinterface #18,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.baseSubSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      34: areturn
      35: getstatic     #13                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      38: areturn

  public com.vladsch.flexmark.util.sequence.BasedSequence getReferenceClosingMarker();
    Code:
       0: aload_0
       1: getfield      #5                  // Field referenceClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: areturn

  public void setReferenceClosingMarker(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field referenceClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: return

  protected java.lang.String toStringAttributes();
    Code:
       0: new           #32                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #34                 // String text=
       9: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #7                  // Field text:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      16: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #37                 // String , reference=
      21: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #4                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      28: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn

  public com.vladsch.flexmark.ast.ReferenceNode getReferenceNode(com.vladsch.flexmark.ast.NodeRepository);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class com/vladsch/flexmark/ast/util/ReferenceRepository
       5: invokevirtual #26                 // Method getReferenceNode:(Lcom/vladsch/flexmark/ast/util/ReferenceRepository;)Lcom/vladsch/flexmark/ast/Reference;
       8: areturn

  public com.vladsch.flexmark.ast.ReferenceNode getReferenceNode(com.vladsch.flexmark.ast.Document);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #39                 // Method getReferenceNode:(Lcom/vladsch/flexmark/ast/Document;)Lcom/vladsch/flexmark/ast/Reference;
       5: areturn
}
