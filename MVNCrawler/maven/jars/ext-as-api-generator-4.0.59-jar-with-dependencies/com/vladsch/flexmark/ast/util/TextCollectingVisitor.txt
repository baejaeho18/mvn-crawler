Compiled from "TextCollectingVisitor.java"
public class com.vladsch.flexmark.ast.util.TextCollectingVisitor {
  private com.vladsch.flexmark.util.sequence.SegmentedSequenceBuilder out;

  private final com.vladsch.flexmark.ast.NodeVisitor myVisitor;

  public com.vladsch.flexmark.ast.util.TextCollectingVisitor();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class com/vladsch/flexmark/ast/NodeVisitor
       8: dup
       9: iconst_5
      10: anewarray     #8                  // class com/vladsch/flexmark/ast/VisitHandler
      13: dup
      14: iconst_0
      15: new           #8                  // class com/vladsch/flexmark/ast/VisitHandler
      18: dup
      19: ldc           #9                  // class com/vladsch/flexmark/ast/Text
      21: new           #10                 // class com/vladsch/flexmark/ast/util/TextCollectingVisitor$1
      24: dup
      25: aload_0
      26: invokespecial #11                 // Method com/vladsch/flexmark/ast/util/TextCollectingVisitor$1."<init>":(Lcom/vladsch/flexmark/ast/util/TextCollectingVisitor;)V
      29: invokespecial #12                 // Method com/vladsch/flexmark/ast/VisitHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/ast/Visitor;)V
      32: aastore
      33: dup
      34: iconst_1
      35: new           #8                  // class com/vladsch/flexmark/ast/VisitHandler
      38: dup
      39: ldc           #13                 // class com/vladsch/flexmark/ast/TextBase
      41: new           #14                 // class com/vladsch/flexmark/ast/util/TextCollectingVisitor$2
      44: dup
      45: aload_0
      46: invokespecial #15                 // Method com/vladsch/flexmark/ast/util/TextCollectingVisitor$2."<init>":(Lcom/vladsch/flexmark/ast/util/TextCollectingVisitor;)V
      49: invokespecial #12                 // Method com/vladsch/flexmark/ast/VisitHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/ast/Visitor;)V
      52: aastore
      53: dup
      54: iconst_2
      55: new           #8                  // class com/vladsch/flexmark/ast/VisitHandler
      58: dup
      59: ldc           #16                 // class com/vladsch/flexmark/ast/HtmlEntity
      61: new           #17                 // class com/vladsch/flexmark/ast/util/TextCollectingVisitor$3
      64: dup
      65: aload_0
      66: invokespecial #18                 // Method com/vladsch/flexmark/ast/util/TextCollectingVisitor$3."<init>":(Lcom/vladsch/flexmark/ast/util/TextCollectingVisitor;)V
      69: invokespecial #12                 // Method com/vladsch/flexmark/ast/VisitHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/ast/Visitor;)V
      72: aastore
      73: dup
      74: iconst_3
      75: new           #8                  // class com/vladsch/flexmark/ast/VisitHandler
      78: dup
      79: ldc           #19                 // class com/vladsch/flexmark/ast/SoftLineBreak
      81: new           #20                 // class com/vladsch/flexmark/ast/util/TextCollectingVisitor$4
      84: dup
      85: aload_0
      86: invokespecial #21                 // Method com/vladsch/flexmark/ast/util/TextCollectingVisitor$4."<init>":(Lcom/vladsch/flexmark/ast/util/TextCollectingVisitor;)V
      89: invokespecial #12                 // Method com/vladsch/flexmark/ast/VisitHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/ast/Visitor;)V
      92: aastore
      93: dup
      94: iconst_4
      95: new           #8                  // class com/vladsch/flexmark/ast/VisitHandler
      98: dup
      99: ldc           #22                 // class com/vladsch/flexmark/ast/HardLineBreak
     101: new           #23                 // class com/vladsch/flexmark/ast/util/TextCollectingVisitor$5
     104: dup
     105: aload_0
     106: invokespecial #24                 // Method com/vladsch/flexmark/ast/util/TextCollectingVisitor$5."<init>":(Lcom/vladsch/flexmark/ast/util/TextCollectingVisitor;)V
     109: invokespecial #12                 // Method com/vladsch/flexmark/ast/VisitHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/ast/Visitor;)V
     112: aastore
     113: invokespecial #25                 // Method com/vladsch/flexmark/ast/NodeVisitor."<init>":([Lcom/vladsch/flexmark/ast/VisitHandler;)V
     116: putfield      #26                 // Field myVisitor:Lcom/vladsch/flexmark/ast/NodeVisitor;
     119: return

  public java.lang.String getText();
    Code:
       0: aload_0
       1: getfield      #27                 // Field out:Lcom/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder;
       4: invokevirtual #28                 // Method com/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder.toString:()Ljava/lang/String;
       7: areturn

  public void collect(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_0
       1: new           #29                 // class com/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder
       4: dup
       5: aload_1
       6: invokevirtual #30                 // Method com/vladsch/flexmark/ast/Node.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       9: invokespecial #31                 // Method com/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
      12: putfield      #27                 // Field out:Lcom/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder;
      15: aload_0
      16: getfield      #26                 // Field myVisitor:Lcom/vladsch/flexmark/ast/NodeVisitor;
      19: aload_1
      20: invokevirtual #32                 // Method com/vladsch/flexmark/ast/NodeVisitor.visit:(Lcom/vladsch/flexmark/ast/Node;)V
      23: return

  public java.lang.String collectAndGetText(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #33                 // Method collect:(Lcom/vladsch/flexmark/ast/Node;)V
       5: aload_0
       6: getfield      #27                 // Field out:Lcom/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder;
       9: invokevirtual #28                 // Method com/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder.toString:()Ljava/lang/String;
      12: areturn

  public com.vladsch.flexmark.util.sequence.BasedSequence[] collectAndGetSegments(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #33                 // Method collect:(Lcom/vladsch/flexmark/ast/Node;)V
       5: aload_0
       6: getfield      #27                 // Field out:Lcom/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder;
       9: invokevirtual #34                 // Method com/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder.toSegments:()[Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      12: areturn

  public com.vladsch.flexmark.util.sequence.BasedSequence collectAndGetSequence(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #33                 // Method collect:(Lcom/vladsch/flexmark/ast/Node;)V
       5: aload_0
       6: getfield      #27                 // Field out:Lcom/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder;
       9: invokevirtual #35                 // Method com/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder.toBasedSequence:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      12: areturn

  private void visit(com.vladsch.flexmark.ast.SoftLineBreak);
    Code:
       0: aload_0
       1: getfield      #27                 // Field out:Lcom/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder;
       4: aload_1
       5: invokevirtual #36                 // Method com/vladsch/flexmark/ast/SoftLineBreak.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       8: invokevirtual #37                 // Method com/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder.append:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder;
      11: pop
      12: return

  private void visit(com.vladsch.flexmark.ast.HardLineBreak);
    Code:
       0: aload_1
       1: invokevirtual #38                 // Method com/vladsch/flexmark/ast/HardLineBreak.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: astore_2
       5: aload_0
       6: getfield      #27                 // Field out:Lcom/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder;
       9: aload_2
      10: aload_2
      11: invokeinterface #39,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
      16: iconst_1
      17: isub
      18: aload_2
      19: invokeinterface #39,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
      24: invokeinterface #40,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      29: invokevirtual #37                 // Method com/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder.append:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder;
      32: pop
      33: return

  private void visit(com.vladsch.flexmark.ast.HtmlEntity);
    Code:
       0: aload_0
       1: getfield      #27                 // Field out:Lcom/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder;
       4: aload_1
       5: invokevirtual #41                 // Method com/vladsch/flexmark/ast/HtmlEntity.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       8: invokeinterface #42,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.unescape:()Ljava/lang/String;
      13: invokevirtual #43                 // Method com/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder.append:(Ljava/lang/String;)Lcom/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder;
      16: pop
      17: return

  private void visit(com.vladsch.flexmark.ast.Text);
    Code:
       0: aload_1
       1: iconst_1
       2: anewarray     #44                 // class java/lang/Class
       5: dup
       6: iconst_0
       7: ldc           #45                 // class com/vladsch/flexmark/ast/DoNotCollectText
       9: aastore
      10: invokevirtual #46                 // Method com/vladsch/flexmark/ast/Text.isOrDescendantOfType:([Ljava/lang/Class;)Z
      13: ifne          28
      16: aload_0
      17: getfield      #27                 // Field out:Lcom/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder;
      20: aload_1
      21: invokevirtual #47                 // Method com/vladsch/flexmark/ast/Text.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      24: invokevirtual #37                 // Method com/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder.append:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder;
      27: pop
      28: return

  private void visit(com.vladsch.flexmark.ast.TextBase);
    Code:
       0: aload_0
       1: getfield      #27                 // Field out:Lcom/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder;
       4: aload_1
       5: invokevirtual #48                 // Method com/vladsch/flexmark/ast/TextBase.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       8: invokevirtual #37                 // Method com/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder.append:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder;
      11: pop
      12: return

  static void access$000(com.vladsch.flexmark.ast.util.TextCollectingVisitor, com.vladsch.flexmark.ast.Text);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method visit:(Lcom/vladsch/flexmark/ast/Text;)V
       5: return

  static void access$100(com.vladsch.flexmark.ast.util.TextCollectingVisitor, com.vladsch.flexmark.ast.TextBase);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method visit:(Lcom/vladsch/flexmark/ast/TextBase;)V
       5: return

  static void access$200(com.vladsch.flexmark.ast.util.TextCollectingVisitor, com.vladsch.flexmark.ast.HtmlEntity);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method visit:(Lcom/vladsch/flexmark/ast/HtmlEntity;)V
       5: return

  static void access$300(com.vladsch.flexmark.ast.util.TextCollectingVisitor, com.vladsch.flexmark.ast.SoftLineBreak);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method visit:(Lcom/vladsch/flexmark/ast/SoftLineBreak;)V
       5: return

  static void access$400(com.vladsch.flexmark.ast.util.TextCollectingVisitor, com.vladsch.flexmark.ast.HardLineBreak);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method visit:(Lcom/vladsch/flexmark/ast/HardLineBreak;)V
       5: return
}
