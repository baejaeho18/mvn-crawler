Compiled from "LineCollectingVisitor.java"
public class com.vladsch.flexmark.ast.util.LineCollectingVisitor {
  private final com.vladsch.flexmark.ast.NodeVisitor myVisitor;

  private java.util.List<com.vladsch.flexmark.util.sequence.Range> myLines;

  private java.util.List<java.lang.Integer> myEOLs;

  private int myStartOffset;

  private int myEndOffset;

  public com.vladsch.flexmark.ast.util.LineCollectingVisitor();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #8                  // class com/vladsch/flexmark/ast/NodeVisitor
       8: dup
       9: bipush        6
      11: anewarray     #9                  // class com/vladsch/flexmark/ast/VisitHandler
      14: dup
      15: iconst_0
      16: new           #9                  // class com/vladsch/flexmark/ast/VisitHandler
      19: dup
      20: ldc           #10                 // class com/vladsch/flexmark/ast/Text
      22: new           #11                 // class com/vladsch/flexmark/ast/util/LineCollectingVisitor$1
      25: dup
      26: aload_0
      27: invokespecial #12                 // Method com/vladsch/flexmark/ast/util/LineCollectingVisitor$1."<init>":(Lcom/vladsch/flexmark/ast/util/LineCollectingVisitor;)V
      30: invokespecial #13                 // Method com/vladsch/flexmark/ast/VisitHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/ast/Visitor;)V
      33: aastore
      34: dup
      35: iconst_1
      36: new           #9                  // class com/vladsch/flexmark/ast/VisitHandler
      39: dup
      40: ldc           #14                 // class com/vladsch/flexmark/ast/TextBase
      42: new           #15                 // class com/vladsch/flexmark/ast/util/LineCollectingVisitor$2
      45: dup
      46: aload_0
      47: invokespecial #16                 // Method com/vladsch/flexmark/ast/util/LineCollectingVisitor$2."<init>":(Lcom/vladsch/flexmark/ast/util/LineCollectingVisitor;)V
      50: invokespecial #13                 // Method com/vladsch/flexmark/ast/VisitHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/ast/Visitor;)V
      53: aastore
      54: dup
      55: iconst_2
      56: new           #9                  // class com/vladsch/flexmark/ast/VisitHandler
      59: dup
      60: ldc           #17                 // class com/vladsch/flexmark/ast/HtmlEntity
      62: new           #18                 // class com/vladsch/flexmark/ast/util/LineCollectingVisitor$3
      65: dup
      66: aload_0
      67: invokespecial #19                 // Method com/vladsch/flexmark/ast/util/LineCollectingVisitor$3."<init>":(Lcom/vladsch/flexmark/ast/util/LineCollectingVisitor;)V
      70: invokespecial #13                 // Method com/vladsch/flexmark/ast/VisitHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/ast/Visitor;)V
      73: aastore
      74: dup
      75: iconst_3
      76: new           #9                  // class com/vladsch/flexmark/ast/VisitHandler
      79: dup
      80: ldc           #20                 // class com/vladsch/flexmark/ast/HtmlInline
      82: new           #21                 // class com/vladsch/flexmark/ast/util/LineCollectingVisitor$4
      85: dup
      86: aload_0
      87: invokespecial #22                 // Method com/vladsch/flexmark/ast/util/LineCollectingVisitor$4."<init>":(Lcom/vladsch/flexmark/ast/util/LineCollectingVisitor;)V
      90: invokespecial #13                 // Method com/vladsch/flexmark/ast/VisitHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/ast/Visitor;)V
      93: aastore
      94: dup
      95: iconst_4
      96: new           #9                  // class com/vladsch/flexmark/ast/VisitHandler
      99: dup
     100: ldc           #23                 // class com/vladsch/flexmark/ast/SoftLineBreak
     102: new           #24                 // class com/vladsch/flexmark/ast/util/LineCollectingVisitor$5
     105: dup
     106: aload_0
     107: invokespecial #25                 // Method com/vladsch/flexmark/ast/util/LineCollectingVisitor$5."<init>":(Lcom/vladsch/flexmark/ast/util/LineCollectingVisitor;)V
     110: invokespecial #13                 // Method com/vladsch/flexmark/ast/VisitHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/ast/Visitor;)V
     113: aastore
     114: dup
     115: iconst_5
     116: new           #9                  // class com/vladsch/flexmark/ast/VisitHandler
     119: dup
     120: ldc           #26                 // class com/vladsch/flexmark/ast/HardLineBreak
     122: new           #27                 // class com/vladsch/flexmark/ast/util/LineCollectingVisitor$6
     125: dup
     126: aload_0
     127: invokespecial #28                 // Method com/vladsch/flexmark/ast/util/LineCollectingVisitor$6."<init>":(Lcom/vladsch/flexmark/ast/util/LineCollectingVisitor;)V
     130: invokespecial #13                 // Method com/vladsch/flexmark/ast/VisitHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/ast/Visitor;)V
     133: aastore
     134: invokespecial #29                 // Method com/vladsch/flexmark/ast/NodeVisitor."<init>":([Lcom/vladsch/flexmark/ast/VisitHandler;)V
     137: putfield      #30                 // Field myVisitor:Lcom/vladsch/flexmark/ast/NodeVisitor;
     140: aload_0
     141: getstatic     #31                 // Field java/util/Collections.EMPTY_LIST:Ljava/util/List;
     144: putfield      #32                 // Field myLines:Ljava/util/List;
     147: return

  private void finalizeLines();
    Code:
       0: aload_0
       1: getfield      #33                 // Field myStartOffset:I
       4: aload_0
       5: getfield      #34                 // Field myEndOffset:I
       8: if_icmpge     60
      11: new           #35                 // class com/vladsch/flexmark/util/sequence/Range
      14: dup
      15: aload_0
      16: getfield      #33                 // Field myStartOffset:I
      19: aload_0
      20: getfield      #34                 // Field myEndOffset:I
      23: invokespecial #36                 // Method com/vladsch/flexmark/util/sequence/Range."<init>":(II)V
      26: astore_1
      27: aload_0
      28: getfield      #32                 // Field myLines:Ljava/util/List;
      31: aload_1
      32: invokeinterface #37,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      37: pop
      38: aload_0
      39: getfield      #38                 // Field myEOLs:Ljava/util/List;
      42: iconst_0
      43: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      46: invokeinterface #37,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: aload_0
      53: aload_0
      54: getfield      #34                 // Field myEndOffset:I
      57: putfield      #33                 // Field myStartOffset:I
      60: return

  public java.util.List<com.vladsch.flexmark.util.sequence.Range> getLines();
    Code:
       0: aload_0
       1: invokespecial #40                 // Method finalizeLines:()V
       4: aload_0
       5: getfield      #32                 // Field myLines:Ljava/util/List;
       8: areturn

  public java.util.List<java.lang.Integer> getEOLs();
    Code:
       0: aload_0
       1: invokespecial #40                 // Method finalizeLines:()V
       4: aload_0
       5: getfield      #38                 // Field myEOLs:Ljava/util/List;
       8: areturn

  public void collect(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_0
       1: new           #41                 // class java/util/ArrayList
       4: dup
       5: invokespecial #42                 // Method java/util/ArrayList."<init>":()V
       8: putfield      #32                 // Field myLines:Ljava/util/List;
      11: aload_0
      12: new           #41                 // class java/util/ArrayList
      15: dup
      16: invokespecial #42                 // Method java/util/ArrayList."<init>":()V
      19: putfield      #38                 // Field myEOLs:Ljava/util/List;
      22: aload_0
      23: aload_1
      24: invokevirtual #43                 // Method com/vladsch/flexmark/ast/Node.getStartOffset:()I
      27: putfield      #33                 // Field myStartOffset:I
      30: aload_0
      31: aload_1
      32: invokevirtual #44                 // Method com/vladsch/flexmark/ast/Node.getEndOffset:()I
      35: putfield      #34                 // Field myEndOffset:I
      38: aload_0
      39: getfield      #30                 // Field myVisitor:Lcom/vladsch/flexmark/ast/NodeVisitor;
      42: aload_1
      43: invokevirtual #45                 // Method com/vladsch/flexmark/ast/NodeVisitor.visit:(Lcom/vladsch/flexmark/ast/Node;)V
      46: return

  public java.util.List<com.vladsch.flexmark.util.sequence.Range> collectAndGetRanges(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #46                 // Method collect:(Lcom/vladsch/flexmark/ast/Node;)V
       5: aload_0
       6: invokevirtual #47                 // Method getLines:()Ljava/util/List;
       9: areturn

  private void visit(com.vladsch.flexmark.ast.SoftLineBreak);
    Code:
       0: new           #35                 // class com/vladsch/flexmark/util/sequence/Range
       3: dup
       4: aload_0
       5: getfield      #33                 // Field myStartOffset:I
       8: aload_1
       9: invokevirtual #48                 // Method com/vladsch/flexmark/ast/SoftLineBreak.getEndOffset:()I
      12: invokespecial #36                 // Method com/vladsch/flexmark/util/sequence/Range."<init>":(II)V
      15: astore_2
      16: aload_0
      17: getfield      #32                 // Field myLines:Ljava/util/List;
      20: aload_2
      21: invokeinterface #37,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      26: pop
      27: aload_0
      28: getfield      #38                 // Field myEOLs:Ljava/util/List;
      31: aload_1
      32: invokevirtual #49                 // Method com/vladsch/flexmark/ast/SoftLineBreak.getTextLength:()I
      35: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: invokeinterface #37,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      43: pop
      44: aload_0
      45: aload_1
      46: invokevirtual #48                 // Method com/vladsch/flexmark/ast/SoftLineBreak.getEndOffset:()I
      49: putfield      #33                 // Field myStartOffset:I
      52: return

  private void visit(com.vladsch.flexmark.ast.HardLineBreak);
    Code:
       0: new           #35                 // class com/vladsch/flexmark/util/sequence/Range
       3: dup
       4: aload_0
       5: getfield      #33                 // Field myStartOffset:I
       8: aload_1
       9: invokevirtual #50                 // Method com/vladsch/flexmark/ast/HardLineBreak.getEndOffset:()I
      12: invokespecial #36                 // Method com/vladsch/flexmark/util/sequence/Range."<init>":(II)V
      15: astore_2
      16: aload_0
      17: getfield      #32                 // Field myLines:Ljava/util/List;
      20: aload_2
      21: invokeinterface #37,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      26: pop
      27: aload_0
      28: getfield      #38                 // Field myEOLs:Ljava/util/List;
      31: aload_1
      32: invokevirtual #51                 // Method com/vladsch/flexmark/ast/HardLineBreak.getTextLength:()I
      35: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: invokeinterface #37,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      43: pop
      44: aload_0
      45: aload_1
      46: invokevirtual #50                 // Method com/vladsch/flexmark/ast/HardLineBreak.getEndOffset:()I
      49: putfield      #33                 // Field myStartOffset:I
      52: return

  private void visit(com.vladsch.flexmark.ast.HtmlEntity);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #52                 // Method com/vladsch/flexmark/ast/HtmlEntity.getEndOffset:()I
       5: putfield      #34                 // Field myEndOffset:I
       8: return

  private void visit(com.vladsch.flexmark.ast.HtmlInline);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #53                 // Method com/vladsch/flexmark/ast/HtmlInline.getEndOffset:()I
       5: putfield      #34                 // Field myEndOffset:I
       8: return

  private void visit(com.vladsch.flexmark.ast.Text);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #54                 // Method com/vladsch/flexmark/ast/Text.getEndOffset:()I
       5: putfield      #34                 // Field myEndOffset:I
       8: return

  private void visit(com.vladsch.flexmark.ast.TextBase);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method com/vladsch/flexmark/ast/TextBase.getEndOffset:()I
       5: putfield      #34                 // Field myEndOffset:I
       8: return

  static void access$000(com.vladsch.flexmark.ast.util.LineCollectingVisitor, com.vladsch.flexmark.ast.Text);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method visit:(Lcom/vladsch/flexmark/ast/Text;)V
       5: return

  static void access$100(com.vladsch.flexmark.ast.util.LineCollectingVisitor, com.vladsch.flexmark.ast.TextBase);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method visit:(Lcom/vladsch/flexmark/ast/TextBase;)V
       5: return

  static void access$200(com.vladsch.flexmark.ast.util.LineCollectingVisitor, com.vladsch.flexmark.ast.HtmlEntity);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method visit:(Lcom/vladsch/flexmark/ast/HtmlEntity;)V
       5: return

  static void access$300(com.vladsch.flexmark.ast.util.LineCollectingVisitor, com.vladsch.flexmark.ast.HtmlInline);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method visit:(Lcom/vladsch/flexmark/ast/HtmlInline;)V
       5: return

  static void access$400(com.vladsch.flexmark.ast.util.LineCollectingVisitor, com.vladsch.flexmark.ast.SoftLineBreak);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method visit:(Lcom/vladsch/flexmark/ast/SoftLineBreak;)V
       5: return

  static void access$500(com.vladsch.flexmark.ast.util.LineCollectingVisitor, com.vladsch.flexmark.ast.HardLineBreak);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method visit:(Lcom/vladsch/flexmark/ast/HardLineBreak;)V
       5: return
}
