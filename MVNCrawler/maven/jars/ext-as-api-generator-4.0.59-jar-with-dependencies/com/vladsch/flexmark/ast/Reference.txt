Compiled from "Reference.java"
public class com.vladsch.flexmark.ast.Reference extends com.vladsch.flexmark.ast.LinkNodeBase implements com.vladsch.flexmark.ast.ReferenceNode<com.vladsch.flexmark.ast.util.ReferenceRepository, com.vladsch.flexmark.ast.Reference, com.vladsch.flexmark.ast.RefNode> {
  protected com.vladsch.flexmark.util.sequence.BasedSequence openingMarker;

  protected com.vladsch.flexmark.util.sequence.BasedSequence reference;

  protected com.vladsch.flexmark.util.sequence.BasedSequence closingMarker;

  public com.vladsch.flexmark.util.sequence.BasedSequence[] getSegments();
    Code:
       0: bipush        12
       2: anewarray     #1                  // class com/vladsch/flexmark/util/sequence/BasedSequence
       5: dup
       6: iconst_0
       7: aload_0
       8: getfield      #2                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      11: aastore
      12: dup
      13: iconst_1
      14: aload_0
      15: getfield      #3                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      18: aastore
      19: dup
      20: iconst_2
      21: aload_0
      22: getfield      #4                  // Field closingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      25: aastore
      26: dup
      27: iconst_3
      28: aload_0
      29: getfield      #5                  // Field urlOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      32: aastore
      33: dup
      34: iconst_4
      35: aload_0
      36: getfield      #6                  // Field url:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      39: aastore
      40: dup
      41: iconst_5
      42: aload_0
      43: getfield      #7                  // Field pageRef:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      46: aastore
      47: dup
      48: bipush        6
      50: aload_0
      51: getfield      #8                  // Field anchorMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      54: aastore
      55: dup
      56: bipush        7
      58: aload_0
      59: getfield      #9                  // Field anchorRef:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      62: aastore
      63: dup
      64: bipush        8
      66: aload_0
      67: getfield      #10                 // Field urlClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      70: aastore
      71: dup
      72: bipush        9
      74: aload_0
      75: getfield      #11                 // Field titleOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      78: aastore
      79: dup
      80: bipush        10
      82: aload_0
      83: getfield      #12                 // Field title:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      86: aastore
      87: dup
      88: bipush        11
      90: aload_0
      91: getfield      #13                 // Field titleClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      94: aastore
      95: areturn

  public com.vladsch.flexmark.util.sequence.BasedSequence[] getSegmentsForChars();
    Code:
       0: bipush        12
       2: anewarray     #1                  // class com/vladsch/flexmark/util/sequence/BasedSequence
       5: dup
       6: iconst_0
       7: aload_0
       8: getfield      #2                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      11: aastore
      12: dup
      13: iconst_1
      14: aload_0
      15: getfield      #3                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      18: aastore
      19: dup
      20: iconst_2
      21: aload_0
      22: getfield      #4                  // Field closingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      25: aastore
      26: dup
      27: iconst_3
      28: ldc           #14                 // String
      30: aload_0
      31: getfield      #4                  // Field closingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      34: aload_0
      35: getfield      #4                  // Field closingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      38: invokeinterface #15,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
      43: invokeinterface #16,  2           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(I)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      48: invokestatic  #17                 // Method com/vladsch/flexmark/util/sequence/PrefixedSubSequence.of:(Ljava/lang/String;Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/util/sequence/PrefixedSubSequence;
      51: aastore
      52: dup
      53: iconst_4
      54: aload_0
      55: getfield      #5                  // Field urlOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      58: aastore
      59: dup
      60: iconst_5
      61: aload_0
      62: getfield      #7                  // Field pageRef:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      65: aastore
      66: dup
      67: bipush        6
      69: aload_0
      70: getfield      #8                  // Field anchorMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      73: aastore
      74: dup
      75: bipush        7
      77: aload_0
      78: getfield      #9                  // Field anchorRef:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      81: aastore
      82: dup
      83: bipush        8
      85: aload_0
      86: getfield      #10                 // Field urlClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      89: aastore
      90: dup
      91: bipush        9
      93: aload_0
      94: getfield      #11                 // Field titleOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      97: aastore
      98: dup
      99: bipush        10
     101: aload_0
     102: getfield      #12                 // Field title:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     105: aastore
     106: dup
     107: bipush        11
     109: aload_0
     110: getfield      #13                 // Field titleClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     113: aastore
     114: areturn

  public int compareTo(com.vladsch.flexmark.ast.Reference);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getReference:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: aload_1
       5: invokevirtual #18                 // Method getReference:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       8: invokeinterface #19,  2           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.compareTo:(Ljava/lang/Object;)I
      13: ireturn

  public com.vladsch.flexmark.ast.RefNode getReferencingNode(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_1
       1: instanceof    #20                 // class com/vladsch/flexmark/ast/RefNode
       4: ifeq          14
       7: aload_1
       8: checkcast     #20                 // class com/vladsch/flexmark/ast/RefNode
      11: goto          15
      14: aconst_null
      15: areturn

  public void getAstExtra(java.lang.StringBuilder);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: aload_0
       6: getfield      #3                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       9: aload_0
      10: getfield      #4                  // Field closingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      13: ldc           #21                 // String ref
      15: invokestatic  #22                 // Method delimitedSegmentSpanChars:(Ljava/lang/StringBuilder;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Ljava/lang/String;)V
      18: aload_1
      19: aload_0
      20: getfield      #5                  // Field urlOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      23: aload_0
      24: getfield      #6                  // Field url:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      27: aload_0
      28: getfield      #10                 // Field urlClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      31: ldc           #23                 // String url
      33: invokestatic  #22                 // Method delimitedSegmentSpanChars:(Ljava/lang/StringBuilder;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Ljava/lang/String;)V
      36: aload_1
      37: aload_0
      38: getfield      #11                 // Field titleOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      41: aload_0
      42: getfield      #12                 // Field title:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      45: aload_0
      46: getfield      #13                 // Field titleClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      49: ldc           #24                 // String title
      51: invokestatic  #22                 // Method delimitedSegmentSpanChars:(Ljava/lang/StringBuilder;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Ljava/lang/String;)V
      54: return

  public com.vladsch.flexmark.ast.Reference(com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: getstatic     #25                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: invokespecial #26                 // Method com/vladsch/flexmark/ast/LinkNodeBase."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
       7: aload_0
       8: getstatic     #25                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      11: putfield      #2                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      14: aload_0
      15: getstatic     #25                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      18: putfield      #3                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      21: aload_0
      22: getstatic     #25                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      25: putfield      #4                  // Field closingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      28: aload_0
      29: aload_1
      30: iconst_0
      31: iconst_1
      32: invokeinterface #27,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      37: putfield      #2                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      40: aload_0
      41: aload_1
      42: iconst_1
      43: aload_1
      44: invokeinterface #15,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
      49: iconst_2
      50: isub
      51: invokeinterface #27,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      56: invokeinterface #28,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.trim:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      61: putfield      #3                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      64: aload_0
      65: aload_1
      66: aload_1
      67: invokeinterface #15,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
      72: iconst_2
      73: isub
      74: aload_1
      75: invokeinterface #15,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
      80: invokeinterface #27,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      85: putfield      #4                  // Field closingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      88: aload_0
      89: aload_2
      90: invokevirtual #29                 // Method setUrlChars:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)V
      93: aload_3
      94: ifnull        152
      97: aload_0
      98: aload_3
      99: iconst_0
     100: iconst_1
     101: invokeinterface #27,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     106: putfield      #11                 // Field titleOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     109: aload_0
     110: aload_3
     111: iconst_1
     112: aload_3
     113: invokeinterface #15,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
     118: iconst_1
     119: isub
     120: invokeinterface #27,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     125: putfield      #12                 // Field title:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     128: aload_0
     129: aload_3
     130: aload_3
     131: invokeinterface #15,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
     136: iconst_1
     137: isub
     138: aload_3
     139: invokeinterface #15,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
     144: invokeinterface #27,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     149: putfield      #13                 // Field titleClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     152: aload_0
     153: invokevirtual #30                 // Method setCharsFromContent:()V
     156: return

  public com.vladsch.flexmark.util.sequence.BasedSequence getOpeningMarker();
    Code:
       0: aload_0
       1: getfield      #2                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: areturn

  public void setOpeningMarker(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field openingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: return

  public com.vladsch.flexmark.util.sequence.BasedSequence getClosingMarker();
    Code:
       0: aload_0
       1: getfield      #4                  // Field closingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: areturn

  public void setClosingMarker(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field closingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: return

  public com.vladsch.flexmark.util.sequence.BasedSequence getUrlOpeningMarker();
    Code:
       0: aload_0
       1: getfield      #5                  // Field urlOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: areturn

  public void setUrlOpeningMarker(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field urlOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: return

  public com.vladsch.flexmark.util.sequence.BasedSequence getUrlClosingMarker();
    Code:
       0: aload_0
       1: getfield      #10                 // Field urlClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: areturn

  public void setUrlClosingMarker(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field urlClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: return

  public com.vladsch.flexmark.util.sequence.BasedSequence getTitleOpeningMarker();
    Code:
       0: aload_0
       1: getfield      #11                 // Field titleOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: areturn

  public void setTitleOpeningMarker(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field titleOpeningMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: return

  public com.vladsch.flexmark.util.sequence.BasedSequence getTitleClosingMarker();
    Code:
       0: aload_0
       1: getfield      #13                 // Field titleClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: areturn

  public void setTitleClosingMarker(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field titleClosingMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: return

  public com.vladsch.flexmark.util.sequence.BasedSequence getReference();
    Code:
       0: aload_0
       1: getfield      #3                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: areturn

  public void setReference(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: return

  public com.vladsch.flexmark.util.sequence.BasedSequence getUrl();
    Code:
       0: aload_0
       1: getfield      #6                  // Field url:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: areturn

  public void setUrl(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field url:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: return

  public com.vladsch.flexmark.util.sequence.BasedSequence getPageRef();
    Code:
       0: aload_0
       1: getfield      #7                  // Field pageRef:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: areturn

  public void setPageRef(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field pageRef:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: return

  public com.vladsch.flexmark.util.sequence.BasedSequence getAnchorMarker();
    Code:
       0: aload_0
       1: getfield      #8                  // Field anchorMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: areturn

  public void setAnchorMarker(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field anchorMarker:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: return

  public com.vladsch.flexmark.util.sequence.BasedSequence getAnchorRef();
    Code:
       0: aload_0
       1: getfield      #9                  // Field anchorRef:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: areturn

  public void setAnchorRef(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field anchorRef:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: return

  public com.vladsch.flexmark.util.sequence.BasedSequence getTitle();
    Code:
       0: aload_0
       1: getfield      #12                 // Field title:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: areturn

  public void setTitle(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field title:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: return

  protected java.lang.String toStringAttributes();
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #33                 // String reference=
       9: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #3                  // Field reference:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      16: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #36                 // String , url=
      21: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #6                  // Field url:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      28: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn

  public com.vladsch.flexmark.ast.Node getReferencingNode(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method getReferencingNode:(Lcom/vladsch/flexmark/ast/Node;)Lcom/vladsch/flexmark/ast/RefNode;
       5: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #39                 // class com/vladsch/flexmark/ast/Reference
       5: invokevirtual #40                 // Method compareTo:(Lcom/vladsch/flexmark/ast/Reference;)I
       8: ireturn
}
