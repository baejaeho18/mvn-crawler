Compiled from "ClassificationBag.java"
public class com.vladsch.flexmark.util.collection.ClassificationBag<K, V> {
  private final com.vladsch.flexmark.util.collection.OrderedSet<V> myItems;

  private final com.vladsch.flexmark.util.collection.IndexedItemBitSetMap<K, V> myBag;

  private final com.vladsch.flexmark.util.collection.CollectionHost<V> myHost;

  public com.vladsch.flexmark.util.collection.ClassificationBag(com.vladsch.flexmark.util.Computable<K, V>);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokespecial #3                  // Method "<init>":(ILcom/vladsch/flexmark/util/Computable;)V
       6: return

  public com.vladsch.flexmark.util.collection.ClassificationBag(com.vladsch.flexmark.util.Computable<K, V>, com.vladsch.flexmark.util.collection.CollectionHost<V>);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: aload_2
       4: invokespecial #4                  // Method "<init>":(ILcom/vladsch/flexmark/util/Computable;Lcom/vladsch/flexmark/util/collection/CollectionHost;)V
       7: return

  public com.vladsch.flexmark.util.collection.ClassificationBag(int, com.vladsch.flexmark.util.Computable<K, V>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aconst_null
       4: invokespecial #4                  // Method "<init>":(ILcom/vladsch/flexmark/util/Computable;Lcom/vladsch/flexmark/util/collection/CollectionHost;)V
       7: return

  public com.vladsch.flexmark.util.collection.ClassificationBag(int, com.vladsch.flexmark.util.Computable<K, V>, com.vladsch.flexmark.util.collection.CollectionHost<V>);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_3
       6: putfield      #2                  // Field myHost:Lcom/vladsch/flexmark/util/collection/CollectionHost;
       9: aload_0
      10: new           #6                  // class com/vladsch/flexmark/util/collection/OrderedSet
      13: dup
      14: iload_1
      15: new           #7                  // class com/vladsch/flexmark/util/collection/ClassificationBag$1
      18: dup
      19: aload_0
      20: invokespecial #8                  // Method com/vladsch/flexmark/util/collection/ClassificationBag$1."<init>":(Lcom/vladsch/flexmark/util/collection/ClassificationBag;)V
      23: invokespecial #9                  // Method com/vladsch/flexmark/util/collection/OrderedSet."<init>":(ILcom/vladsch/flexmark/util/collection/CollectionHost;)V
      26: putfield      #10                 // Field myItems:Lcom/vladsch/flexmark/util/collection/OrderedSet;
      29: aload_0
      30: new           #11                 // class com/vladsch/flexmark/util/collection/IndexedItemBitSetMap
      33: dup
      34: aload_2
      35: invokespecial #12                 // Method com/vladsch/flexmark/util/collection/IndexedItemBitSetMap."<init>":(Lcom/vladsch/flexmark/util/Computable;)V
      38: putfield      #1                  // Field myBag:Lcom/vladsch/flexmark/util/collection/IndexedItemBitSetMap;
      41: return

  public com.vladsch.flexmark.util.collection.OrderedSet<V> getItems();
    Code:
       0: aload_0
       1: getfield      #10                 // Field myItems:Lcom/vladsch/flexmark/util/collection/OrderedSet;
       4: areturn

  public int getModificationCount();
    Code:
       0: aload_0
       1: getfield      #10                 // Field myItems:Lcom/vladsch/flexmark/util/collection/OrderedSet;
       4: invokevirtual #13                 // Method com/vladsch/flexmark/util/collection/OrderedSet.getModificationCount:()I
       7: ireturn

  public boolean add(V);
    Code:
       0: aload_0
       1: getfield      #10                 // Field myItems:Lcom/vladsch/flexmark/util/collection/OrderedSet;
       4: aload_1
       5: invokevirtual #14                 // Method com/vladsch/flexmark/util/collection/OrderedSet.add:(Ljava/lang/Object;)Z
       8: ireturn

  public boolean remove(V);
    Code:
       0: aload_0
       1: getfield      #10                 // Field myItems:Lcom/vladsch/flexmark/util/collection/OrderedSet;
       4: aload_1
       5: invokevirtual #15                 // Method com/vladsch/flexmark/util/collection/OrderedSet.remove:(Ljava/lang/Object;)Z
       8: ireturn

  public boolean remove(int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field myItems:Lcom/vladsch/flexmark/util/collection/OrderedSet;
       4: iload_1
       5: invokevirtual #16                 // Method com/vladsch/flexmark/util/collection/OrderedSet.removeIndex:(I)Z
       8: ireturn

  public boolean contains(V);
    Code:
       0: aload_0
       1: getfield      #10                 // Field myItems:Lcom/vladsch/flexmark/util/collection/OrderedSet;
       4: aload_1
       5: invokevirtual #17                 // Method com/vladsch/flexmark/util/collection/OrderedSet.contains:(Ljava/lang/Object;)Z
       8: ireturn

  public boolean containsCategory(K);
    Code:
       0: aload_0
       1: getfield      #1                  // Field myBag:Lcom/vladsch/flexmark/util/collection/IndexedItemBitSetMap;
       4: aload_1
       5: invokevirtual #18                 // Method com/vladsch/flexmark/util/collection/IndexedItemBitSetMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #19                 // class java/util/BitSet
      11: astore_2
      12: aload_2
      13: ifnull        27
      16: aload_2
      17: invokevirtual #20                 // Method java/util/BitSet.isEmpty:()Z
      20: ifne          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public java.util.BitSet getCategorySet(K);
    Code:
       0: aload_0
       1: getfield      #1                  // Field myBag:Lcom/vladsch/flexmark/util/collection/IndexedItemBitSetMap;
       4: aload_1
       5: invokevirtual #18                 // Method com/vladsch/flexmark/util/collection/IndexedItemBitSetMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #19                 // class java/util/BitSet
      11: areturn

  public int getCategoryCount(K);
    Code:
       0: aload_0
       1: getfield      #1                  // Field myBag:Lcom/vladsch/flexmark/util/collection/IndexedItemBitSetMap;
       4: aload_1
       5: invokevirtual #18                 // Method com/vladsch/flexmark/util/collection/IndexedItemBitSetMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #19                 // class java/util/BitSet
      11: astore_2
      12: aload_2
      13: ifnonnull     20
      16: iconst_0
      17: goto          24
      20: aload_2
      21: invokevirtual #21                 // Method java/util/BitSet.cardinality:()I
      24: ireturn

  public java.util.Map<K, java.util.BitSet> getCategoryMap();
    Code:
       0: aload_0
       1: getfield      #1                  // Field myBag:Lcom/vladsch/flexmark/util/collection/IndexedItemBitSetMap;
       4: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #10                 // Field myItems:Lcom/vladsch/flexmark/util/collection/OrderedSet;
       4: invokevirtual #22                 // Method com/vladsch/flexmark/util/collection/OrderedSet.clear:()V
       7: return

  public final <X> com.vladsch.flexmark.util.collection.iteration.ReversibleIterable<X> getCategoryItems(java.lang.Class<? extends X>, K...);
    Code:
       0: new           #23                 // class com/vladsch/flexmark/util/collection/iteration/IndexedIterable
       3: dup
       4: aload_0
       5: getfield      #10                 // Field myItems:Lcom/vladsch/flexmark/util/collection/OrderedSet;
       8: invokevirtual #24                 // Method com/vladsch/flexmark/util/collection/OrderedSet.getConcurrentModsIndexedProxy:()Lcom/vladsch/flexmark/util/collection/iteration/Indexed;
      11: new           #25                 // class com/vladsch/flexmark/util/collection/iteration/BitSetIterable
      14: dup
      15: aload_0
      16: aload_2
      17: invokevirtual #26                 // Method categoriesBitSet:([Ljava/lang/Object;)Ljava/util/BitSet;
      20: iconst_0
      21: invokespecial #27                 // Method com/vladsch/flexmark/util/collection/iteration/BitSetIterable."<init>":(Ljava/util/BitSet;Z)V
      24: invokespecial #28                 // Method com/vladsch/flexmark/util/collection/iteration/IndexedIterable."<init>":(Lcom/vladsch/flexmark/util/collection/iteration/Indexed;Lcom/vladsch/flexmark/util/collection/iteration/ReversibleIterable;)V
      27: areturn

  public final <X> com.vladsch.flexmark.util.collection.iteration.ReversibleIterable<X> getCategoryItems(java.lang.Class<? extends X>, java.util.Collection<? extends K>);
    Code:
       0: new           #23                 // class com/vladsch/flexmark/util/collection/iteration/IndexedIterable
       3: dup
       4: aload_0
       5: getfield      #10                 // Field myItems:Lcom/vladsch/flexmark/util/collection/OrderedSet;
       8: invokevirtual #24                 // Method com/vladsch/flexmark/util/collection/OrderedSet.getConcurrentModsIndexedProxy:()Lcom/vladsch/flexmark/util/collection/iteration/Indexed;
      11: new           #25                 // class com/vladsch/flexmark/util/collection/iteration/BitSetIterable
      14: dup
      15: aload_0
      16: aload_2
      17: invokevirtual #29                 // Method categoriesBitSet:(Ljava/util/Collection;)Ljava/util/BitSet;
      20: iconst_0
      21: invokespecial #27                 // Method com/vladsch/flexmark/util/collection/iteration/BitSetIterable."<init>":(Ljava/util/BitSet;Z)V
      24: invokespecial #28                 // Method com/vladsch/flexmark/util/collection/iteration/IndexedIterable."<init>":(Lcom/vladsch/flexmark/util/collection/iteration/Indexed;Lcom/vladsch/flexmark/util/collection/iteration/ReversibleIterable;)V
      27: areturn

  public final <X> com.vladsch.flexmark.util.collection.iteration.ReversibleIterable<X> getCategoryItems(java.lang.Class<? extends X>, java.util.BitSet);
    Code:
       0: new           #23                 // class com/vladsch/flexmark/util/collection/iteration/IndexedIterable
       3: dup
       4: aload_0
       5: getfield      #10                 // Field myItems:Lcom/vladsch/flexmark/util/collection/OrderedSet;
       8: invokevirtual #24                 // Method com/vladsch/flexmark/util/collection/OrderedSet.getConcurrentModsIndexedProxy:()Lcom/vladsch/flexmark/util/collection/iteration/Indexed;
      11: new           #25                 // class com/vladsch/flexmark/util/collection/iteration/BitSetIterable
      14: dup
      15: aload_2
      16: iconst_0
      17: invokespecial #27                 // Method com/vladsch/flexmark/util/collection/iteration/BitSetIterable."<init>":(Ljava/util/BitSet;Z)V
      20: invokespecial #28                 // Method com/vladsch/flexmark/util/collection/iteration/IndexedIterable."<init>":(Lcom/vladsch/flexmark/util/collection/iteration/Indexed;Lcom/vladsch/flexmark/util/collection/iteration/ReversibleIterable;)V
      23: areturn

  public final <X> com.vladsch.flexmark.util.collection.iteration.ReversibleIterable<X> getCategoryItemsReversed(java.lang.Class<? extends X>, K...);
    Code:
       0: new           #23                 // class com/vladsch/flexmark/util/collection/iteration/IndexedIterable
       3: dup
       4: aload_0
       5: getfield      #10                 // Field myItems:Lcom/vladsch/flexmark/util/collection/OrderedSet;
       8: invokevirtual #24                 // Method com/vladsch/flexmark/util/collection/OrderedSet.getConcurrentModsIndexedProxy:()Lcom/vladsch/flexmark/util/collection/iteration/Indexed;
      11: new           #25                 // class com/vladsch/flexmark/util/collection/iteration/BitSetIterable
      14: dup
      15: aload_0
      16: aload_2
      17: invokevirtual #26                 // Method categoriesBitSet:([Ljava/lang/Object;)Ljava/util/BitSet;
      20: iconst_1
      21: invokespecial #27                 // Method com/vladsch/flexmark/util/collection/iteration/BitSetIterable."<init>":(Ljava/util/BitSet;Z)V
      24: invokespecial #28                 // Method com/vladsch/flexmark/util/collection/iteration/IndexedIterable."<init>":(Lcom/vladsch/flexmark/util/collection/iteration/Indexed;Lcom/vladsch/flexmark/util/collection/iteration/ReversibleIterable;)V
      27: areturn

  public final <X> com.vladsch.flexmark.util.collection.iteration.ReversibleIterable<X> getCategoryItemsReversed(java.lang.Class<? extends X>, java.util.Collection<? extends K>);
    Code:
       0: new           #23                 // class com/vladsch/flexmark/util/collection/iteration/IndexedIterable
       3: dup
       4: aload_0
       5: getfield      #10                 // Field myItems:Lcom/vladsch/flexmark/util/collection/OrderedSet;
       8: invokevirtual #24                 // Method com/vladsch/flexmark/util/collection/OrderedSet.getConcurrentModsIndexedProxy:()Lcom/vladsch/flexmark/util/collection/iteration/Indexed;
      11: new           #25                 // class com/vladsch/flexmark/util/collection/iteration/BitSetIterable
      14: dup
      15: aload_0
      16: aload_2
      17: invokevirtual #29                 // Method categoriesBitSet:(Ljava/util/Collection;)Ljava/util/BitSet;
      20: iconst_1
      21: invokespecial #27                 // Method com/vladsch/flexmark/util/collection/iteration/BitSetIterable."<init>":(Ljava/util/BitSet;Z)V
      24: invokespecial #28                 // Method com/vladsch/flexmark/util/collection/iteration/IndexedIterable."<init>":(Lcom/vladsch/flexmark/util/collection/iteration/Indexed;Lcom/vladsch/flexmark/util/collection/iteration/ReversibleIterable;)V
      27: areturn

  public final <X> com.vladsch.flexmark.util.collection.iteration.ReversibleIterable<X> getCategoryItemsReversed(java.lang.Class<? extends X>, java.util.BitSet);
    Code:
       0: new           #23                 // class com/vladsch/flexmark/util/collection/iteration/IndexedIterable
       3: dup
       4: aload_0
       5: getfield      #10                 // Field myItems:Lcom/vladsch/flexmark/util/collection/OrderedSet;
       8: invokevirtual #24                 // Method com/vladsch/flexmark/util/collection/OrderedSet.getConcurrentModsIndexedProxy:()Lcom/vladsch/flexmark/util/collection/iteration/Indexed;
      11: new           #25                 // class com/vladsch/flexmark/util/collection/iteration/BitSetIterable
      14: dup
      15: aload_2
      16: iconst_1
      17: invokespecial #27                 // Method com/vladsch/flexmark/util/collection/iteration/BitSetIterable."<init>":(Ljava/util/BitSet;Z)V
      20: invokespecial #28                 // Method com/vladsch/flexmark/util/collection/iteration/IndexedIterable."<init>":(Lcom/vladsch/flexmark/util/collection/iteration/Indexed;Lcom/vladsch/flexmark/util/collection/iteration/ReversibleIterable;)V
      23: areturn

  public final java.util.BitSet categoriesBitSet(K...);
    Code:
       0: new           #19                 // class java/util/BitSet
       3: dup
       4: invokespecial #30                 // Method java/util/BitSet."<init>":()V
       7: astore_2
       8: aload_1
       9: astore_3
      10: aload_3
      11: arraylength
      12: istore        4
      14: iconst_0
      15: istore        5
      17: iload         5
      19: iload         4
      21: if_icmpge     61
      24: aload_3
      25: iload         5
      27: aaload
      28: astore        6
      30: aload_0
      31: aload         6
      33: invokevirtual #31                 // Method containsCategory:(Ljava/lang/Object;)Z
      36: ifeq          55
      39: aload_2
      40: aload_0
      41: getfield      #1                  // Field myBag:Lcom/vladsch/flexmark/util/collection/IndexedItemBitSetMap;
      44: aload         6
      46: invokevirtual #18                 // Method com/vladsch/flexmark/util/collection/IndexedItemBitSetMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #19                 // class java/util/BitSet
      52: invokevirtual #32                 // Method java/util/BitSet.or:(Ljava/util/BitSet;)V
      55: iinc          5, 1
      58: goto          17
      61: aload_2
      62: areturn

  public final java.util.BitSet categoriesBitSet(java.util.Collection<? extends K>);
    Code:
       0: new           #19                 // class java/util/BitSet
       3: dup
       4: invokespecial #30                 // Method java/util/BitSet."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #33,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          60
      24: aload_3
      25: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: astore        4
      32: aload_0
      33: aload         4
      35: invokevirtual #31                 // Method containsCategory:(Ljava/lang/Object;)Z
      38: ifeq          57
      41: aload_2
      42: aload_0
      43: getfield      #1                  // Field myBag:Lcom/vladsch/flexmark/util/collection/IndexedItemBitSetMap;
      46: aload         4
      48: invokevirtual #18                 // Method com/vladsch/flexmark/util/collection/IndexedItemBitSetMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      51: checkcast     #19                 // class java/util/BitSet
      54: invokevirtual #32                 // Method java/util/BitSet.or:(Ljava/util/BitSet;)V
      57: goto          15
      60: aload_2
      61: areturn

  static com.vladsch.flexmark.util.collection.CollectionHost access$000(com.vladsch.flexmark.util.collection.ClassificationBag);
    Code:
       0: aload_0
       1: getfield      #2                  // Field myHost:Lcom/vladsch/flexmark/util/collection/CollectionHost;
       4: areturn

  static com.vladsch.flexmark.util.collection.IndexedItemBitSetMap access$100(com.vladsch.flexmark.util.collection.ClassificationBag);
    Code:
       0: aload_0
       1: getfield      #1                  // Field myBag:Lcom/vladsch/flexmark/util/collection/IndexedItemBitSetMap;
       4: areturn
}
