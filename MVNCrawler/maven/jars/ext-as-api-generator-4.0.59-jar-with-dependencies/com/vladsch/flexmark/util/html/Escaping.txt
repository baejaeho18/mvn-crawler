Compiled from "Escaping.java"
public class com.vladsch.flexmark.util.html.Escaping {
  public static final java.lang.String ESCAPABLE;

  private static final java.lang.String ENTITY;

  private static final java.util.regex.Pattern BACKSLASH_ONLY;

  private static final java.util.regex.Pattern ESCAPED_CHAR;

  private static final java.util.regex.Pattern BACKSLASH_OR_AMP;

  private static final java.util.regex.Pattern AMP_ONLY;

  private static final java.util.regex.Pattern ENTITY_OR_ESCAPED_CHAR;

  private static final java.util.regex.Pattern ENTITY_ONLY;

  private static final java.lang.String XML_SPECIAL;

  private static final java.util.regex.Pattern XML_SPECIAL_RE;

  private static final java.util.regex.Pattern XML_SPECIAL_OR_ENTITY;

  private static final java.util.regex.Pattern ESCAPE_IN_URI;

  static final char[] HEX_DIGITS;

  private static final java.util.regex.Pattern WHITESPACE;

  private static final java.util.regex.Pattern COLLAPSE_WHITESPACE;

  private static final com.vladsch.flexmark.util.html.Escaping$Replacer UNSAFE_CHAR_REPLACER;

  private static final com.vladsch.flexmark.util.html.Escaping$Replacer COLLAPSE_WHITESPACE_REPLACER;

  private static final com.vladsch.flexmark.util.html.Escaping$Replacer UNESCAPE_REPLACER;

  private static final com.vladsch.flexmark.util.html.Escaping$Replacer ENTITY_REPLACER;

  private static final com.vladsch.flexmark.util.html.Escaping$Replacer URI_REPLACER;

  private static java.util.Random random;

  public com.vladsch.flexmark.util.html.Escaping();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String escapeHtml(java.lang.CharSequence, boolean);
    Code:
       0: iload_1
       1: ifeq          10
       4: getstatic     #2                  // Field XML_SPECIAL_OR_ENTITY:Ljava/util/regex/Pattern;
       7: goto          13
      10: getstatic     #3                  // Field XML_SPECIAL_RE:Ljava/util/regex/Pattern;
      13: astore_2
      14: aload_2
      15: aload_0
      16: getstatic     #4                  // Field UNSAFE_CHAR_REPLACER:Lcom/vladsch/flexmark/util/html/Escaping$Replacer;
      19: invokestatic  #5                  // Method replaceAll:(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;Lcom/vladsch/flexmark/util/html/Escaping$Replacer;)Ljava/lang/String;
      22: areturn

  public static com.vladsch.flexmark.util.sequence.BasedSequence escapeHtml(com.vladsch.flexmark.util.sequence.BasedSequence, boolean, com.vladsch.flexmark.util.sequence.ReplacedTextMapper);
    Code:
       0: iload_1
       1: ifeq          10
       4: getstatic     #2                  // Field XML_SPECIAL_OR_ENTITY:Ljava/util/regex/Pattern;
       7: goto          13
      10: getstatic     #3                  // Field XML_SPECIAL_RE:Ljava/util/regex/Pattern;
      13: astore_3
      14: aload_3
      15: aload_0
      16: getstatic     #4                  // Field UNSAFE_CHAR_REPLACER:Lcom/vladsch/flexmark/util/html/Escaping$Replacer;
      19: aload_2
      20: invokestatic  #6                  // Method replaceAll:(Ljava/util/regex/Pattern;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/html/Escaping$Replacer;Lcom/vladsch/flexmark/util/sequence/ReplacedTextMapper;)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      23: areturn

  public static java.lang.String unescapeString(java.lang.CharSequence);
    Code:
       0: getstatic     #7                  // Field BACKSLASH_OR_AMP:Ljava/util/regex/Pattern;
       3: aload_0
       4: invokevirtual #8                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: invokevirtual #9                  // Method java/util/regex/Matcher.find:()Z
      10: ifeq          24
      13: getstatic     #10                 // Field ENTITY_OR_ESCAPED_CHAR:Ljava/util/regex/Pattern;
      16: aload_0
      17: getstatic     #11                 // Field UNESCAPE_REPLACER:Lcom/vladsch/flexmark/util/html/Escaping$Replacer;
      20: invokestatic  #5                  // Method replaceAll:(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;Lcom/vladsch/flexmark/util/html/Escaping$Replacer;)Ljava/lang/String;
      23: areturn
      24: aload_0
      25: instanceof    #12                 // class java/lang/String
      28: ifeq          38
      31: aload_0
      32: checkcast     #12                 // class java/lang/String
      35: goto          42
      38: aload_0
      39: invokestatic  #13                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      42: areturn

  public static java.lang.String unescapeString(java.lang.CharSequence, boolean);
    Code:
       0: iload_1
       1: ifeq          47
       4: getstatic     #7                  // Field BACKSLASH_OR_AMP:Ljava/util/regex/Pattern;
       7: aload_0
       8: invokevirtual #8                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      11: invokevirtual #9                  // Method java/util/regex/Matcher.find:()Z
      14: ifeq          28
      17: getstatic     #14                 // Field ESCAPED_CHAR:Ljava/util/regex/Pattern;
      20: aload_0
      21: getstatic     #11                 // Field UNESCAPE_REPLACER:Lcom/vladsch/flexmark/util/html/Escaping$Replacer;
      24: invokestatic  #5                  // Method replaceAll:(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;Lcom/vladsch/flexmark/util/html/Escaping$Replacer;)Ljava/lang/String;
      27: areturn
      28: aload_0
      29: instanceof    #12                 // class java/lang/String
      32: ifeq          42
      35: aload_0
      36: checkcast     #12                 // class java/lang/String
      39: goto          46
      42: aload_0
      43: invokestatic  #13                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      46: areturn
      47: getstatic     #15                 // Field BACKSLASH_ONLY:Ljava/util/regex/Pattern;
      50: aload_0
      51: invokevirtual #8                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      54: invokevirtual #9                  // Method java/util/regex/Matcher.find:()Z
      57: ifeq          71
      60: getstatic     #10                 // Field ENTITY_OR_ESCAPED_CHAR:Ljava/util/regex/Pattern;
      63: aload_0
      64: getstatic     #11                 // Field UNESCAPE_REPLACER:Lcom/vladsch/flexmark/util/html/Escaping$Replacer;
      67: invokestatic  #5                  // Method replaceAll:(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;Lcom/vladsch/flexmark/util/html/Escaping$Replacer;)Ljava/lang/String;
      70: areturn
      71: aload_0
      72: instanceof    #12                 // class java/lang/String
      75: ifeq          85
      78: aload_0
      79: checkcast     #12                 // class java/lang/String
      82: goto          89
      85: aload_0
      86: invokestatic  #13                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      89: areturn

  public static com.vladsch.flexmark.util.sequence.BasedSequence unescape(com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.ReplacedTextMapper);
    Code:
       0: aload_0
       1: bipush        92
       3: bipush        38
       5: invokeinterface #16,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.indexOfAny:(CC)I
      10: istore_2
      11: iload_2
      12: iconst_m1
      13: if_icmpeq     28
      16: getstatic     #10                 // Field ENTITY_OR_ESCAPED_CHAR:Ljava/util/regex/Pattern;
      19: aload_0
      20: getstatic     #11                 // Field UNESCAPE_REPLACER:Lcom/vladsch/flexmark/util/html/Escaping$Replacer;
      23: aload_1
      24: invokestatic  #6                  // Method replaceAll:(Ljava/util/regex/Pattern;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/html/Escaping$Replacer;Lcom/vladsch/flexmark/util/sequence/ReplacedTextMapper;)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      27: areturn
      28: aload_0
      29: areturn

  public static java.lang.String unescapeHtml(java.lang.CharSequence);
    Code:
       0: getstatic     #17                 // Field AMP_ONLY:Ljava/util/regex/Pattern;
       3: aload_0
       4: invokevirtual #8                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: invokevirtual #9                  // Method java/util/regex/Matcher.find:()Z
      10: ifeq          24
      13: getstatic     #18                 // Field ENTITY_ONLY:Ljava/util/regex/Pattern;
      16: aload_0
      17: getstatic     #19                 // Field ENTITY_REPLACER:Lcom/vladsch/flexmark/util/html/Escaping$Replacer;
      20: invokestatic  #5                  // Method replaceAll:(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;Lcom/vladsch/flexmark/util/html/Escaping$Replacer;)Ljava/lang/String;
      23: areturn
      24: aload_0
      25: instanceof    #12                 // class java/lang/String
      28: ifeq          38
      31: aload_0
      32: checkcast     #12                 // class java/lang/String
      35: goto          42
      38: aload_0
      39: invokestatic  #13                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      42: areturn

  public static com.vladsch.flexmark.util.sequence.BasedSequence unescapeHtml(com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.ReplacedTextMapper);
    Code:
       0: aload_0
       1: bipush        38
       3: invokeinterface #20,  2           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.indexOf:(C)I
       8: istore_2
       9: iload_2
      10: iconst_m1
      11: if_icmpeq     26
      14: getstatic     #18                 // Field ENTITY_ONLY:Ljava/util/regex/Pattern;
      17: aload_0
      18: getstatic     #19                 // Field ENTITY_REPLACER:Lcom/vladsch/flexmark/util/html/Escaping$Replacer;
      21: aload_1
      22: invokestatic  #6                  // Method replaceAll:(Ljava/util/regex/Pattern;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/html/Escaping$Replacer;Lcom/vladsch/flexmark/util/sequence/ReplacedTextMapper;)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      25: areturn
      26: aload_0
      27: areturn

  public static java.lang.String normalizeEndWithEOL(java.lang.CharSequence);
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #21                 // Method normalizeEOL:(Ljava/lang/CharSequence;Z)Ljava/lang/String;
       5: areturn

  public static java.lang.String normalizeEOL(java.lang.CharSequence);
    Code:
       0: aload_0
       1: iconst_0
       2: invokestatic  #21                 // Method normalizeEOL:(Ljava/lang/CharSequence;Z)Ljava/lang/String;
       5: areturn

  public static java.lang.String normalizeEOL(java.lang.CharSequence, boolean);
    Code:
       0: new           #22                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokeinterface #23,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      10: invokespecial #24                 // Method java/lang/StringBuilder."<init>":(I)V
      13: astore_2
      14: aload_0
      15: invokeinterface #23,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      20: istore_3
      21: iconst_0
      22: istore        4
      24: iconst_0
      25: istore        5
      27: iconst_0
      28: istore        6
      30: iload         6
      32: iload_3
      33: if_icmpge     113
      36: aload_0
      37: iload         6
      39: invokeinterface #25,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      44: istore        7
      46: iload         7
      48: bipush        13
      50: if_icmpne     59
      53: iconst_1
      54: istore        4
      56: goto          107
      59: iload         7
      61: bipush        10
      63: if_icmpne     82
      66: aload_2
      67: ldc           #26                 // String \n
      69: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: pop
      73: iconst_0
      74: istore        4
      76: iconst_1
      77: istore        5
      79: goto          107
      82: iload         4
      84: ifeq          94
      87: aload_2
      88: bipush        10
      90: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      93: pop
      94: aload_2
      95: iload         7
      97: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     100: pop
     101: iconst_0
     102: istore        4
     104: iconst_0
     105: istore        5
     107: iinc          6, 1
     110: goto          30
     113: iload_1
     114: ifeq          129
     117: iload         5
     119: ifne          129
     122: aload_2
     123: bipush        10
     125: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     128: pop
     129: aload_2
     130: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     133: areturn

  public static com.vladsch.flexmark.util.sequence.BasedSequence normalizeEndWithEOL(com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.ReplacedTextMapper);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokestatic  #30                 // Method normalizeEOL:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/sequence/ReplacedTextMapper;Z)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       6: areturn

  public static com.vladsch.flexmark.util.sequence.BasedSequence normalizeEOL(com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.ReplacedTextMapper);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokestatic  #30                 // Method normalizeEOL:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/sequence/ReplacedTextMapper;Z)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       6: areturn

  public static com.vladsch.flexmark.util.sequence.BasedSequence normalizeEOL(com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.ReplacedTextMapper, boolean);
    Code:
       0: aload_0
       1: invokeinterface #31,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
       6: istore_3
       7: iconst_0
       8: istore        4
      10: iconst_0
      11: istore        5
      13: iconst_0
      14: istore        6
      16: iconst_0
      17: istore        7
      19: iload         7
      21: iload_3
      22: if_icmpge     145
      25: aload_0
      26: iload         7
      28: invokeinterface #32,  2           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.charAt:(I)C
      33: istore        8
      35: iload         8
      37: bipush        13
      39: if_icmpne     48
      42: iconst_1
      43: istore        5
      45: goto          139
      48: iload         8
      50: bipush        10
      52: if_icmpne     92
      55: iload         5
      57: ifeq          139
      60: iload         4
      62: iload         7
      64: iconst_1
      65: isub
      66: if_icmpge     79
      69: aload_1
      70: iload         4
      72: iload         7
      74: iconst_1
      75: isub
      76: invokevirtual #33                 // Method com/vladsch/flexmark/util/sequence/ReplacedTextMapper.addOriginalText:(II)V
      79: iload         7
      81: istore        4
      83: iconst_0
      84: istore        5
      86: iconst_1
      87: istore        6
      89: goto          139
      92: iload         5
      94: ifeq          139
      97: iload         4
      99: iload         7
     101: iconst_1
     102: isub
     103: if_icmpge     116
     106: aload_1
     107: iload         4
     109: iload         7
     111: iconst_1
     112: iadd
     113: invokevirtual #33                 // Method com/vladsch/flexmark/util/sequence/ReplacedTextMapper.addOriginalText:(II)V
     116: aload_1
     117: iload         7
     119: iconst_1
     120: isub
     121: iload         7
     123: getstatic     #34                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.EOL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     126: invokevirtual #35                 // Method com/vladsch/flexmark/util/sequence/ReplacedTextMapper.addReplacedText:(IILcom/vladsch/flexmark/util/sequence/BasedSequence;)V
     129: iload         7
     131: istore        4
     133: iconst_0
     134: istore        5
     136: iconst_0
     137: istore        6
     139: iinc          7, 1
     142: goto          19
     145: iload         5
     147: ifne          183
     150: iload         4
     152: iload_3
     153: if_icmpge     163
     156: aload_1
     157: iload         4
     159: iload_3
     160: invokevirtual #33                 // Method com/vladsch/flexmark/util/sequence/ReplacedTextMapper.addOriginalText:(II)V
     163: iload         6
     165: ifne          183
     168: iload_2
     169: ifeq          183
     172: aload_1
     173: iload_3
     174: iconst_1
     175: isub
     176: iload_3
     177: getstatic     #34                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.EOL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     180: invokevirtual #35                 // Method com/vladsch/flexmark/util/sequence/ReplacedTextMapper.addReplacedText:(IILcom/vladsch/flexmark/util/sequence/BasedSequence;)V
     183: aload_1
     184: invokevirtual #36                 // Method com/vladsch/flexmark/util/sequence/ReplacedTextMapper.getReplacedSequence:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     187: areturn

  public static java.lang.String percentEncodeUrl(java.lang.CharSequence);
    Code:
       0: getstatic     #37                 // Field ESCAPE_IN_URI:Ljava/util/regex/Pattern;
       3: aload_0
       4: getstatic     #38                 // Field URI_REPLACER:Lcom/vladsch/flexmark/util/html/Escaping$Replacer;
       7: invokestatic  #5                  // Method replaceAll:(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;Lcom/vladsch/flexmark/util/html/Escaping$Replacer;)Ljava/lang/String;
      10: areturn

  public static java.lang.String normalizeReference(java.lang.CharSequence, boolean);
    Code:
       0: iload_1
       1: ifeq          18
       4: aload_0
       5: invokeinterface #39,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      10: iconst_1
      11: invokestatic  #40                 // Method collapseWhitespace:(Ljava/lang/CharSequence;Z)Ljava/lang/String;
      14: invokevirtual #41                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      17: areturn
      18: aload_0
      19: invokeinterface #39,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      24: iconst_1
      25: invokestatic  #40                 // Method collapseWhitespace:(Ljava/lang/CharSequence;Z)Ljava/lang/String;
      28: areturn

  private static java.lang.String encode(char);
    Code:
       0: iload_0
       1: lookupswitch  { // 5
                    34: 61
                    38: 52
                    39: 64
                    60: 55
                    62: 58
               default: 67
          }
      52: ldc           #42                 // String &amp;
      54: areturn
      55: ldc           #43                 // String &lt;
      57: areturn
      58: ldc           #44                 // String &gt;
      60: areturn
      61: ldc           #45                 // String &quot;
      63: areturn
      64: ldc           #46                 // String &#39;
      66: areturn
      67: aconst_null
      68: areturn

  public static java.lang.String obfuscate(java.lang.String, boolean);
    Code:
       0: iload_1
       1: ifne          15
       4: new           #47                 // class java/util/Random
       7: dup
       8: lconst_0
       9: invokespecial #48                 // Method java/util/Random."<init>":(J)V
      12: putstatic     #49                 // Field random:Ljava/util/Random;
      15: new           #22                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #50                 // Method java/lang/StringBuilder."<init>":()V
      22: astore_2
      23: iconst_0
      24: istore_3
      25: iload_3
      26: aload_0
      27: invokevirtual #51                 // Method java/lang/String.length:()I
      30: if_icmpge     158
      33: aload_0
      34: iload_3
      35: invokevirtual #52                 // Method java/lang/String.charAt:(I)C
      38: istore        4
      40: getstatic     #49                 // Field random:Ljava/util/Random;
      43: iconst_5
      44: invokevirtual #53                 // Method java/util/Random.nextInt:(I)I
      47: tableswitch   { // 0 to 4
                     0: 80
                     1: 80
                     2: 100
                     3: 100
                     4: 123
               default: 152
          }
      80: aload_2
      81: ldc           #54                 // String &#
      83: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: iload         4
      88: invokevirtual #55                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      91: bipush        59
      93: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      96: pop
      97: goto          152
     100: aload_2
     101: ldc           #56                 // String &#x
     103: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: iload         4
     108: invokestatic  #57                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
     111: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: bipush        59
     116: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     119: pop
     120: goto          152
     123: iload         4
     125: invokestatic  #58                 // Method encode:(C)Ljava/lang/String;
     128: astore        5
     130: aload         5
     132: ifnull        145
     135: aload_2
     136: aload         5
     138: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: pop
     142: goto          152
     145: aload_2
     146: iload         4
     148: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     151: pop
     152: iinc          3, 1
     155: goto          25
     158: aload_2
     159: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     162: areturn

  public static java.lang.String normalizeReferenceChars(java.lang.CharSequence, boolean);
    Code:
       0: aload_0
       1: invokeinterface #23,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       6: iconst_1
       7: if_icmple     73
      10: aload_0
      11: aload_0
      12: invokeinterface #23,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      17: iconst_1
      18: isub
      19: invokeinterface #25,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      24: bipush        58
      26: if_icmpne     33
      29: iconst_2
      30: goto          34
      33: iconst_1
      34: istore_2
      35: aload_0
      36: iconst_0
      37: invokeinterface #25,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      42: bipush        33
      44: if_icmpne     51
      47: iconst_2
      48: goto          52
      51: iconst_1
      52: istore_3
      53: aload_0
      54: iload_3
      55: aload_0
      56: invokeinterface #23,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      61: iload_2
      62: isub
      63: invokeinterface #59,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
      68: iload_1
      69: invokestatic  #60                 // Method normalizeReference:(Ljava/lang/CharSequence;Z)Ljava/lang/String;
      72: areturn
      73: aload_0
      74: instanceof    #12                 // class java/lang/String
      77: ifeq          87
      80: aload_0
      81: checkcast     #12                 // class java/lang/String
      84: goto          91
      87: aload_0
      88: invokestatic  #13                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      91: areturn

  public static java.lang.String collapseWhitespace(java.lang.CharSequence, boolean);
    Code:
       0: new           #22                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokeinterface #23,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      10: invokespecial #24                 // Method java/lang/StringBuilder."<init>":(I)V
      13: astore_2
      14: aload_0
      15: invokeinterface #23,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      20: istore_3
      21: iconst_0
      22: istore        4
      24: iconst_0
      25: istore        5
      27: iload         5
      29: iload_3
      30: if_icmpge     116
      33: aload_0
      34: iload         5
      36: invokeinterface #25,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      41: istore        6
      43: iload         6
      45: bipush        32
      47: if_icmpeq     71
      50: iload         6
      52: bipush        9
      54: if_icmpeq     71
      57: iload         6
      59: bipush        10
      61: if_icmpeq     71
      64: iload         6
      66: bipush        13
      68: if_icmpne     77
      71: iconst_1
      72: istore        4
      74: goto          110
      77: iload         4
      79: ifeq          100
      82: iload_1
      83: ifeq          93
      86: aload_2
      87: invokevirtual #61                 // Method java/lang/StringBuilder.length:()I
      90: ifle          100
      93: aload_2
      94: bipush        32
      96: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      99: pop
     100: aload_2
     101: iload         6
     103: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     106: pop
     107: iconst_0
     108: istore        4
     110: iinc          5, 1
     113: goto          27
     116: iload         4
     118: ifeq          132
     121: iload_1
     122: ifne          132
     125: aload_2
     126: bipush        32
     128: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     131: pop
     132: aload_2
     133: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     136: areturn

  public static com.vladsch.flexmark.util.sequence.BasedSequence collapseWhitespace(com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.sequence.ReplacedTextMapper);
    Code:
       0: getstatic     #62                 // Field COLLAPSE_WHITESPACE:Ljava/util/regex/Pattern;
       3: aload_0
       4: getstatic     #63                 // Field COLLAPSE_WHITESPACE_REPLACER:Lcom/vladsch/flexmark/util/html/Escaping$Replacer;
       7: aload_1
       8: invokestatic  #6                  // Method replaceAll:(Ljava/util/regex/Pattern;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/html/Escaping$Replacer;Lcom/vladsch/flexmark/util/sequence/ReplacedTextMapper;)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      11: areturn

  private static java.lang.String replaceAll(java.util.regex.Pattern, java.lang.CharSequence, com.vladsch.flexmark.util.html.Escaping$Replacer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       5: astore_3
       6: aload_3
       7: invokevirtual #9                  // Method java/util/regex/Matcher.find:()Z
      10: ifne          32
      13: aload_1
      14: instanceof    #12                 // class java/lang/String
      17: ifeq          27
      20: aload_1
      21: checkcast     #12                 // class java/lang/String
      24: goto          31
      27: aload_1
      28: invokestatic  #13                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      31: areturn
      32: new           #22                 // class java/lang/StringBuilder
      35: dup
      36: aload_1
      37: invokeinterface #23,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      42: bipush        16
      44: iadd
      45: invokespecial #24                 // Method java/lang/StringBuilder."<init>":(I)V
      48: astore        4
      50: iconst_0
      51: istore        5
      53: aload         4
      55: aload_1
      56: iload         5
      58: aload_3
      59: invokevirtual #64                 // Method java/util/regex/Matcher.start:()I
      62: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
      65: pop
      66: aload_2
      67: aload_3
      68: invokevirtual #66                 // Method java/util/regex/Matcher.group:()Ljava/lang/String;
      71: aload         4
      73: invokeinterface #67,  3           // InterfaceMethod com/vladsch/flexmark/util/html/Escaping$Replacer.replace:(Ljava/lang/String;Ljava/lang/StringBuilder;)V
      78: aload_3
      79: invokevirtual #68                 // Method java/util/regex/Matcher.end:()I
      82: istore        5
      84: aload_3
      85: invokevirtual #9                  // Method java/util/regex/Matcher.find:()Z
      88: ifne          53
      91: iload         5
      93: aload_1
      94: invokeinterface #23,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      99: if_icmpeq     117
     102: aload         4
     104: aload_1
     105: iload         5
     107: aload_1
     108: invokeinterface #23,  1           // InterfaceMethod java/lang/CharSequence.length:()I
     113: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
     116: pop
     117: aload         4
     119: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     122: areturn

  private static com.vladsch.flexmark.util.sequence.BasedSequence replaceAll(java.util.regex.Pattern, com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.html.Escaping$Replacer, com.vladsch.flexmark.util.sequence.ReplacedTextMapper);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       5: astore        4
       7: aload         4
       9: invokevirtual #9                  // Method java/util/regex/Matcher.find:()Z
      12: ifne          28
      15: aload_3
      16: iconst_0
      17: aload_1
      18: invokeinterface #31,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
      23: invokevirtual #33                 // Method com/vladsch/flexmark/util/sequence/ReplacedTextMapper.addOriginalText:(II)V
      26: aload_1
      27: areturn
      28: iconst_0
      29: istore        5
      31: aload_3
      32: iload         5
      34: aload         4
      36: invokevirtual #64                 // Method java/util/regex/Matcher.start:()I
      39: invokevirtual #33                 // Method com/vladsch/flexmark/util/sequence/ReplacedTextMapper.addOriginalText:(II)V
      42: aload_2
      43: aload_1
      44: aload         4
      46: invokevirtual #64                 // Method java/util/regex/Matcher.start:()I
      49: aload         4
      51: invokevirtual #68                 // Method java/util/regex/Matcher.end:()I
      54: aload_3
      55: invokeinterface #69,  5           // InterfaceMethod com/vladsch/flexmark/util/html/Escaping$Replacer.replace:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;IILcom/vladsch/flexmark/util/sequence/ReplacedTextMapper;)V
      60: aload         4
      62: invokevirtual #68                 // Method java/util/regex/Matcher.end:()I
      65: istore        5
      67: aload         4
      69: invokevirtual #9                  // Method java/util/regex/Matcher.find:()Z
      72: ifne          31
      75: iload         5
      77: aload_1
      78: invokeinterface #31,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
      83: if_icmpeq     98
      86: aload_3
      87: iload         5
      89: aload_1
      90: invokeinterface #31,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
      95: invokevirtual #33                 // Method com/vladsch/flexmark/util/sequence/ReplacedTextMapper.addOriginalText:(II)V
      98: aload_3
      99: invokevirtual #36                 // Method com/vladsch/flexmark/util/sequence/ReplacedTextMapper.getReplacedSequence:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     102: areturn

  static {};
    Code:
       0: ldc           #70                 // String [\\\\]
       2: invokestatic  #71                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #15                 // Field BACKSLASH_ONLY:Ljava/util/regex/Pattern;
       8: ldc           #73                 // String \\\\[!\"#$%&\'()*+,./:;<=>?@\\[\\\\\\]^_`{|}~-]
      10: iconst_2
      11: invokestatic  #75                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;
      14: putstatic     #14                 // Field ESCAPED_CHAR:Ljava/util/regex/Pattern;
      17: ldc           #76                 // String [\\\\&]
      19: invokestatic  #71                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      22: putstatic     #7                  // Field BACKSLASH_OR_AMP:Ljava/util/regex/Pattern;
      25: ldc           #77                 // String [\\&]
      27: invokestatic  #71                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      30: putstatic     #17                 // Field AMP_ONLY:Ljava/util/regex/Pattern;
      33: ldc           #78                 // String \\\\[!\"#$%&\'()*+,./:;<=>?@\\[\\\\\\]^_`{|}~-]|&(?:#x[a-f0-9]{1,8}|#[0-9]{1,8}|[a-z][a-z0-9]{1,31});
      35: iconst_2
      36: invokestatic  #75                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;
      39: putstatic     #10                 // Field ENTITY_OR_ESCAPED_CHAR:Ljava/util/regex/Pattern;
      42: ldc           #79                 // String &(?:#x[a-f0-9]{1,8}|#[0-9]{1,8}|[a-z][a-z0-9]{1,31});
      44: iconst_2
      45: invokestatic  #75                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;
      48: putstatic     #18                 // Field ENTITY_ONLY:Ljava/util/regex/Pattern;
      51: ldc           #80                 // String [&<>\"]
      53: invokestatic  #71                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      56: putstatic     #3                  // Field XML_SPECIAL_RE:Ljava/util/regex/Pattern;
      59: ldc           #81                 // String &(?:#x[a-f0-9]{1,8}|#[0-9]{1,8}|[a-z][a-z0-9]{1,31});|[&<>\"]
      61: iconst_2
      62: invokestatic  #75                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;
      65: putstatic     #2                  // Field XML_SPECIAL_OR_ENTITY:Ljava/util/regex/Pattern;
      68: ldc           #82                 // String (%[a-fA-F0-9]{0,2}|[^:/?#@!$&\'()*+,;=a-zA-Z0-9\\-._~])
      70: invokestatic  #71                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      73: putstatic     #37                 // Field ESCAPE_IN_URI:Ljava/util/regex/Pattern;
      76: bipush        16
      78: newarray       char
      80: dup
      81: iconst_0
      82: bipush        48
      84: castore
      85: dup
      86: iconst_1
      87: bipush        49
      89: castore
      90: dup
      91: iconst_2
      92: bipush        50
      94: castore
      95: dup
      96: iconst_3
      97: bipush        51
      99: castore
     100: dup
     101: iconst_4
     102: bipush        52
     104: castore
     105: dup
     106: iconst_5
     107: bipush        53
     109: castore
     110: dup
     111: bipush        6
     113: bipush        54
     115: castore
     116: dup
     117: bipush        7
     119: bipush        55
     121: castore
     122: dup
     123: bipush        8
     125: bipush        56
     127: castore
     128: dup
     129: bipush        9
     131: bipush        57
     133: castore
     134: dup
     135: bipush        10
     137: bipush        65
     139: castore
     140: dup
     141: bipush        11
     143: bipush        66
     145: castore
     146: dup
     147: bipush        12
     149: bipush        67
     151: castore
     152: dup
     153: bipush        13
     155: bipush        68
     157: castore
     158: dup
     159: bipush        14
     161: bipush        69
     163: castore
     164: dup
     165: bipush        15
     167: bipush        70
     169: castore
     170: putstatic     #83                 // Field HEX_DIGITS:[C
     173: ldc           #84                 // String [ \t\r\n]+
     175: invokestatic  #71                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
     178: putstatic     #85                 // Field WHITESPACE:Ljava/util/regex/Pattern;
     181: ldc           #86                 // String [ \t]{2,}
     183: invokestatic  #71                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
     186: putstatic     #62                 // Field COLLAPSE_WHITESPACE:Ljava/util/regex/Pattern;
     189: new           #87                 // class com/vladsch/flexmark/util/html/Escaping$1
     192: dup
     193: invokespecial #88                 // Method com/vladsch/flexmark/util/html/Escaping$1."<init>":()V
     196: putstatic     #4                  // Field UNSAFE_CHAR_REPLACER:Lcom/vladsch/flexmark/util/html/Escaping$Replacer;
     199: new           #89                 // class com/vladsch/flexmark/util/html/Escaping$2
     202: dup
     203: invokespecial #90                 // Method com/vladsch/flexmark/util/html/Escaping$2."<init>":()V
     206: putstatic     #63                 // Field COLLAPSE_WHITESPACE_REPLACER:Lcom/vladsch/flexmark/util/html/Escaping$Replacer;
     209: new           #91                 // class com/vladsch/flexmark/util/html/Escaping$3
     212: dup
     213: invokespecial #92                 // Method com/vladsch/flexmark/util/html/Escaping$3."<init>":()V
     216: putstatic     #11                 // Field UNESCAPE_REPLACER:Lcom/vladsch/flexmark/util/html/Escaping$Replacer;
     219: new           #93                 // class com/vladsch/flexmark/util/html/Escaping$4
     222: dup
     223: invokespecial #94                 // Method com/vladsch/flexmark/util/html/Escaping$4."<init>":()V
     226: putstatic     #19                 // Field ENTITY_REPLACER:Lcom/vladsch/flexmark/util/html/Escaping$Replacer;
     229: new           #95                 // class com/vladsch/flexmark/util/html/Escaping$5
     232: dup
     233: invokespecial #96                 // Method com/vladsch/flexmark/util/html/Escaping$5."<init>":()V
     236: putstatic     #38                 // Field URI_REPLACER:Lcom/vladsch/flexmark/util/html/Escaping$Replacer;
     239: new           #47                 // class java/util/Random
     242: dup
     243: ldc2_w        #97                 // long 9766l
     246: invokespecial #48                 // Method java/util/Random."<init>":(J)V
     249: putstatic     #49                 // Field random:Ljava/util/Random;
     252: return
}
