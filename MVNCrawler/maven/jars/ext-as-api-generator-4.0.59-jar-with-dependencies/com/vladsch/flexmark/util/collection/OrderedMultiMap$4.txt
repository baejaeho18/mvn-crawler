Compiled from "OrderedMultiMap.java"
class com.vladsch.flexmark.util.collection.OrderedMultiMap$4 implements com.vladsch.flexmark.util.collection.CollectionHost<java.util.Map$Entry<K, V>> {
  static final boolean $assertionsDisabled;

  final com.vladsch.flexmark.util.collection.OrderedMultiMap this$0;

  com.vladsch.flexmark.util.collection.OrderedMultiMap$4(com.vladsch.flexmark.util.collection.OrderedMultiMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/OrderedMultiMap;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public void adding(int, java.util.Map$Entry<K, V>, java.lang.Object);
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          18
       6: aload_3
       7: ifnull        18
      10: new           #4                  // class java/lang/AssertionError
      13: dup
      14: invokespecial #5                  // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: aload_0
      19: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/OrderedMultiMap;
      22: aload_2
      23: invokeinterface #6,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      28: aload_2
      29: invokeinterface #7,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      34: invokevirtual #8                  // Method com/vladsch/flexmark/util/collection/OrderedMultiMap.putKeyValue:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: return

  public java.lang.Object removing(int, java.util.Map$Entry<K, V>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/OrderedMultiMap;
       4: iload_1
       5: aload_2
       6: invokeinterface #6,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      11: aload_2
      12: invokeinterface #7,  1            // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      17: invokestatic  #9                  // Method com/vladsch/flexmark/util/collection/OrderedMultiMap.access$1000:(Lcom/vladsch/flexmark/util/collection/OrderedMultiMap;ILjava/lang/Object;Ljava/lang/Object;)Z
      20: istore_3
      21: iload_3
      22: ifeq          29
      25: aload_2
      26: goto          30
      29: aconst_null
      30: areturn

  public void clearing();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/OrderedMultiMap;
       4: invokevirtual #10                 // Method com/vladsch/flexmark/util/collection/OrderedMultiMap.clear:()V
       7: return

  public void addingNulls(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/OrderedMultiMap;
       4: iload_1
       5: invokevirtual #11                 // Method com/vladsch/flexmark/util/collection/OrderedMultiMap.addNullEntry:(I)V
       8: return

  public boolean skipHostUpdate();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/OrderedMultiMap;
       4: invokestatic  #12                 // Method com/vladsch/flexmark/util/collection/OrderedMultiMap.access$300:(Lcom/vladsch/flexmark/util/collection/OrderedMultiMap;)Z
       7: ifne          20
      10: aload_0
      11: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/OrderedMultiMap;
      14: invokestatic  #13                 // Method com/vladsch/flexmark/util/collection/OrderedMultiMap.access$700:(Lcom/vladsch/flexmark/util/collection/OrderedMultiMap;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public int getIteratorModificationCount();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/OrderedMultiMap;
       4: invokevirtual #14                 // Method com/vladsch/flexmark/util/collection/OrderedMultiMap.getModificationCount:()I
       7: ireturn

  public java.lang.Object removing(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: checkcast     #15                 // class java/util/Map$Entry
       6: invokevirtual #16                 // Method removing:(ILjava/util/Map$Entry;)Ljava/lang/Object;
       9: areturn

  public void adding(int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: checkcast     #15                 // class java/util/Map$Entry
       6: aload_3
       7: invokevirtual #17                 // Method adding:(ILjava/util/Map$Entry;Ljava/lang/Object;)V
      10: return

  static {};
    Code:
       0: ldc           #18                 // class com/vladsch/flexmark/util/collection/OrderedMultiMap
       2: invokevirtual #19                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #3                  // Field $assertionsDisabled:Z
      16: return
}
