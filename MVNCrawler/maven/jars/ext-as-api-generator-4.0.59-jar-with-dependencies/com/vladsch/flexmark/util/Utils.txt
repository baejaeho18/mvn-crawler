Compiled from "Utils.java"
public class com.vladsch.flexmark.util.Utils {
  public com.vladsch.flexmark.util.Utils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String ifNullOr(java.lang.String, boolean, java.lang.String);
    Code:
       0: aload_0
       1: ifnull        8
       4: iload_1
       5: ifeq          12
       8: aload_2
       9: goto          13
      12: aload_0
      13: areturn

  public static java.lang.String ifNullOrNot(java.lang.String, boolean, java.lang.String);
    Code:
       0: aload_0
       1: ifnull        8
       4: iload_1
       5: ifne          12
       8: aload_2
       9: goto          13
      12: aload_0
      13: areturn

  public static java.lang.String ifNullOr(java.lang.String, com.vladsch.flexmark.util.Computable<java.lang.Boolean, java.lang.String>, java.lang.String);
    Code:
       0: aload_0
       1: ifnull        20
       4: aload_1
       5: aload_0
       6: invokeinterface #2,  2            // InterfaceMethod com/vladsch/flexmark/util/Computable.compute:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #3                  // class java/lang/Boolean
      14: invokevirtual #4                  // Method java/lang/Boolean.booleanValue:()Z
      17: ifeq          24
      20: aload_2
      21: goto          25
      24: aload_0
      25: areturn

  public static java.lang.String ifNullOrNot(java.lang.String, com.vladsch.flexmark.util.Computable<java.lang.Boolean, java.lang.String>, java.lang.String);
    Code:
       0: aload_0
       1: ifnull        20
       4: aload_1
       5: aload_0
       6: invokeinterface #2,  2            // InterfaceMethod com/vladsch/flexmark/util/Computable.compute:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #3                  // class java/lang/Boolean
      14: invokevirtual #4                  // Method java/lang/Boolean.booleanValue:()Z
      17: ifne          24
      20: aload_2
      21: goto          25
      24: aload_0
      25: areturn

  public static java.lang.String ifNullOrEmpty(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #5                  // Method java/lang/String.isEmpty:()Z
       8: ifeq          15
      11: aload_1
      12: goto          16
      15: aload_0
      16: areturn

  public static java.lang.String ifNullOrBlank(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokestatic  #6                  // Method isBlank:(Ljava/lang/String;)Z
       8: ifeq          15
      11: aload_1
      12: goto          16
      15: aload_0
      16: areturn

  public static java.lang.String ifEmpty(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: invokevirtual #5                  // Method java/lang/String.isEmpty:()Z
       8: ifne          13
      11: aload_0
      12: areturn
      13: aload_1
      14: areturn

  public static java.lang.String ifEmpty(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #5                  // Method java/lang/String.isEmpty:()Z
       8: ifeq          15
      11: aload_1
      12: goto          16
      15: aload_2
      16: areturn

  public static java.lang.String ifEmptyNullArgs(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #5                  // Method java/lang/String.isEmpty:()Z
       8: ifeq          15
      11: aload_1
      12: goto          16
      15: aload_2
      16: areturn

  public static java.lang.String ifEmpty(java.lang.String, com.vladsch.flexmark.util.RunnableValue<java.lang.String>);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: invokevirtual #5                  // Method java/lang/String.isEmpty:()Z
       8: ifne          13
      11: aload_0
      12: areturn
      13: aload_1
      14: invokeinterface #7,  1            // InterfaceMethod com/vladsch/flexmark/util/RunnableValue.run:()Ljava/lang/Object;
      19: checkcast     #8                  // class java/lang/String
      22: areturn

  public static java.lang.String ifEmpty(java.lang.String, com.vladsch.flexmark.util.RunnableValue<java.lang.String>, com.vladsch.flexmark.util.RunnableValue<java.lang.String>);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #5                  // Method java/lang/String.isEmpty:()Z
       8: ifeq          23
      11: aload_1
      12: invokeinterface #7,  1            // InterfaceMethod com/vladsch/flexmark/util/RunnableValue.run:()Ljava/lang/Object;
      17: checkcast     #8                  // class java/lang/String
      20: goto          32
      23: aload_2
      24: invokeinterface #7,  1            // InterfaceMethod com/vladsch/flexmark/util/RunnableValue.run:()Ljava/lang/Object;
      29: checkcast     #8                  // class java/lang/String
      32: areturn

  public static boolean isBlank(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        14
       4: aload_0
       5: invokevirtual #9                  // Method java/lang/String.trim:()Ljava/lang/String;
       8: invokevirtual #5                  // Method java/lang/String.isEmpty:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public static boolean isWhiteSpaceNoEOL(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method java/lang/String.length:()I
       4: istore_1
       5: iconst_0
       6: istore_2
       7: iload_2
       8: iload_1
       9: if_icmpge     38
      12: aload_0
      13: iload_2
      14: invokevirtual #11                 // Method java/lang/String.charAt:(I)C
      17: istore_3
      18: iload_3
      19: bipush        32
      21: if_icmpeq     32
      24: iload_3
      25: bipush        9
      27: if_icmpeq     32
      30: iconst_0
      31: ireturn
      32: iinc          2, 1
      35: goto          7
      38: iconst_1
      39: ireturn

  public static java.lang.String orEmpty(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     9
       4: ldc           #12                 // String
       6: goto          10
       9: aload_0
      10: areturn

  public static java.lang.String wrapWith(java.lang.String, char);
    Code:
       0: aload_0
       1: iload_1
       2: iload_1
       3: invokestatic  #13                 // Method wrapWith:(Ljava/lang/String;CC)Ljava/lang/String;
       6: areturn

  public static java.lang.String wrapWith(java.lang.String, char, char);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #5                  // Method java/lang/String.isEmpty:()Z
       8: ifeq          16
      11: ldc           #12                 // String
      13: goto          38
      16: new           #14                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      23: iload_1
      24: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      27: aload_0
      28: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: iload_2
      32: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      35: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: areturn

  public static java.lang.String wrapWith(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: aload_1
       2: invokestatic  #19                 // Method wrapWith:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public static java.lang.String wrapWith(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: invokevirtual #5                  // Method java/lang/String.isEmpty:()Z
       8: ifeq          16
      11: ldc           #12                 // String
      13: goto          38
      16: new           #14                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      23: aload_1
      24: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_2
      32: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: areturn

  public static java.lang.String suffixWith(java.lang.String, char);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokestatic  #20                 // Method suffixWith:(Ljava/lang/String;CZ)Ljava/lang/String;
       6: areturn

  public static java.lang.String suffixWith(java.lang.String, char, boolean);
    Code:
       0: aload_0
       1: ifnull        42
       4: aload_0
       5: invokevirtual #5                  // Method java/lang/String.isEmpty:()Z
       8: ifne          42
      11: aload_0
      12: iload_1
      13: invokestatic  #21                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;
      16: iload_2
      17: invokestatic  #22                 // Method endsWith:(Ljava/lang/CharSequence;Ljava/lang/String;Z)Z
      20: ifne          42
      23: new           #14                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      30: aload_0
      31: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: iload_1
      35: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      38: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: areturn
      42: aload_0
      43: invokestatic  #23                 // Method orEmpty:(Ljava/lang/String;)Ljava/lang/String;
      46: areturn

  public static java.lang.String suffixWith(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokestatic  #24                 // Method suffixWith:(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
       6: areturn

  public static java.lang.String suffixWith(java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: ifnull        46
       4: aload_0
       5: invokevirtual #5                  // Method java/lang/String.isEmpty:()Z
       8: ifne          46
      11: aload_1
      12: invokevirtual #5                  // Method java/lang/String.isEmpty:()Z
      15: ifne          46
      18: aload_0
      19: aload_1
      20: iload_2
      21: invokestatic  #22                 // Method endsWith:(Ljava/lang/CharSequence;Ljava/lang/String;Z)Z
      24: ifne          46
      27: new           #14                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      34: aload_0
      35: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_1
      39: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: areturn
      46: aload_0
      47: invokestatic  #23                 // Method orEmpty:(Ljava/lang/String;)Ljava/lang/String;
      50: areturn

  public static java.lang.String prefixWith(java.lang.String, char);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokestatic  #25                 // Method prefixWith:(Ljava/lang/String;CZ)Ljava/lang/String;
       6: areturn

  public static java.lang.String prefixWith(java.lang.String, char, boolean);
    Code:
       0: aload_0
       1: ifnull        42
       4: aload_0
       5: invokevirtual #5                  // Method java/lang/String.isEmpty:()Z
       8: ifne          42
      11: aload_0
      12: iload_1
      13: invokestatic  #21                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;
      16: iload_2
      17: invokestatic  #26                 // Method startsWith:(Ljava/lang/CharSequence;Ljava/lang/String;Z)Z
      20: ifne          42
      23: new           #14                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      30: iload_1
      31: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      34: aload_0
      35: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: areturn
      42: aload_0
      43: invokestatic  #23                 // Method orEmpty:(Ljava/lang/String;)Ljava/lang/String;
      46: areturn

  public static java.lang.String prefixWith(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokestatic  #27                 // Method prefixWith:(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
       6: areturn

  public static java.lang.String prefixWith(java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: ifnull        46
       4: aload_0
       5: invokevirtual #5                  // Method java/lang/String.isEmpty:()Z
       8: ifne          46
      11: aload_1
      12: invokevirtual #5                  // Method java/lang/String.isEmpty:()Z
      15: ifne          46
      18: aload_0
      19: aload_1
      20: iload_2
      21: invokestatic  #26                 // Method startsWith:(Ljava/lang/CharSequence;Ljava/lang/String;Z)Z
      24: ifne          46
      27: new           #14                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      34: aload_1
      35: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: areturn
      46: aload_0
      47: invokestatic  #23                 // Method orEmpty:(Ljava/lang/String;)Ljava/lang/String;
      50: areturn

  public static boolean isIn(java.lang.String, java.lang.String...);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: astore_2
       8: aload_2
       9: arraylength
      10: istore_3
      11: iconst_0
      12: istore        4
      14: iload         4
      16: iload_3
      17: if_icmpge     43
      20: aload_2
      21: iload         4
      23: aaload
      24: astore        5
      26: aload_0
      27: aload         5
      29: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ifeq          37
      35: iconst_1
      36: ireturn
      37: iinc          4, 1
      40: goto          14
      43: iconst_0
      44: ireturn

  public static boolean endsWith(java.lang.String, java.lang.String...);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokestatic  #29                 // Method endsWith:(Ljava/lang/String;Z[Ljava/lang/String;)Z
       6: ireturn

  public static boolean endsWith(java.lang.String, boolean, java.lang.String...);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: iload_1
       7: ifeq          77
      10: aload_2
      11: astore_3
      12: aload_3
      13: arraylength
      14: istore        4
      16: iconst_0
      17: istore        5
      19: iload         5
      21: iload         4
      23: if_icmpge     74
      26: aload_3
      27: iload         5
      29: aaload
      30: astore        6
      32: aload_0
      33: invokevirtual #10                 // Method java/lang/String.length:()I
      36: aload         6
      38: invokevirtual #10                 // Method java/lang/String.length:()I
      41: if_icmplt     68
      44: aload_0
      45: aload_0
      46: invokevirtual #10                 // Method java/lang/String.length:()I
      49: aload         6
      51: invokevirtual #10                 // Method java/lang/String.length:()I
      54: isub
      55: invokevirtual #30                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      58: aload         6
      60: invokevirtual #31                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      63: ifeq          68
      66: iconst_1
      67: ireturn
      68: iinc          5, 1
      71: goto          19
      74: goto          116
      77: aload_2
      78: astore_3
      79: aload_3
      80: arraylength
      81: istore        4
      83: iconst_0
      84: istore        5
      86: iload         5
      88: iload         4
      90: if_icmpge     116
      93: aload_3
      94: iload         5
      96: aaload
      97: astore        6
      99: aload_0
     100: aload         6
     102: invokevirtual #32                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
     105: ifeq          110
     108: iconst_1
     109: ireturn
     110: iinc          5, 1
     113: goto          86
     116: iconst_0
     117: ireturn

  public static boolean startsWith(java.lang.String, java.lang.String...);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokestatic  #33                 // Method startsWith:(Ljava/lang/String;Z[Ljava/lang/String;)Z
       6: ireturn

  public static boolean startsWith(java.lang.String, boolean, java.lang.String...);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: iload_1
       7: ifeq          73
      10: aload_2
      11: astore_3
      12: aload_3
      13: arraylength
      14: istore        4
      16: iconst_0
      17: istore        5
      19: iload         5
      21: iload         4
      23: if_icmpge     70
      26: aload_3
      27: iload         5
      29: aaload
      30: astore        6
      32: aload_0
      33: invokevirtual #10                 // Method java/lang/String.length:()I
      36: aload         6
      38: invokevirtual #10                 // Method java/lang/String.length:()I
      41: if_icmplt     64
      44: aload_0
      45: iconst_0
      46: aload         6
      48: invokevirtual #10                 // Method java/lang/String.length:()I
      51: invokevirtual #34                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      54: aload         6
      56: invokevirtual #31                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      59: ifeq          64
      62: iconst_1
      63: ireturn
      64: iinc          5, 1
      67: goto          19
      70: goto          112
      73: aload_2
      74: astore_3
      75: aload_3
      76: arraylength
      77: istore        4
      79: iconst_0
      80: istore        5
      82: iload         5
      84: iload         4
      86: if_icmpge     112
      89: aload_3
      90: iload         5
      92: aaload
      93: astore        6
      95: aload_0
      96: aload         6
      98: invokevirtual #35                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     101: ifeq          106
     104: iconst_1
     105: ireturn
     106: iinc          5, 1
     109: goto          82
     112: iconst_0
     113: ireturn

  public static int count(java.lang.String, char, int, int);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: iconst_0
       7: istore        4
       9: iload_2
      10: istore        5
      12: aload_0
      13: invokevirtual #10                 // Method java/lang/String.length:()I
      16: iload_3
      17: invokestatic  #36                 // Method java/lang/Math.min:(II)I
      20: istore        6
      22: iload         5
      24: iflt          60
      27: iload         5
      29: iload         6
      31: if_icmpgt     60
      34: aload_0
      35: iload_1
      36: iload         5
      38: invokevirtual #37                 // Method java/lang/String.indexOf:(II)I
      41: istore        5
      43: iload         5
      45: ifge          51
      48: goto          60
      51: iinc          4, 1
      54: iinc          5, 1
      57: goto          22
      60: iload         4
      62: ireturn

  public static int count(java.lang.String, java.lang.String, int, int);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: iconst_0
       7: istore        4
       9: iload_2
      10: istore        5
      12: aload_0
      13: invokevirtual #10                 // Method java/lang/String.length:()I
      16: iload_3
      17: invokestatic  #36                 // Method java/lang/Math.min:(II)I
      20: istore        6
      22: iload         5
      24: iflt          60
      27: iload         5
      29: iload         6
      31: if_icmpgt     60
      34: aload_0
      35: aload_1
      36: iload         5
      38: invokevirtual #38                 // Method java/lang/String.indexOf:(Ljava/lang/String;I)I
      41: istore        5
      43: iload         5
      45: ifge          51
      48: goto          60
      51: iinc          4, 1
      54: iinc          5, 1
      57: goto          22
      60: iload         4
      62: ireturn

  public static java.lang.String urlDecode(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        9
       5: aload_1
       6: goto          11
       9: ldc           #39                 // String UTF-8
      11: invokestatic  #40                 // Method java/net/URLDecoder.decode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      14: areturn
      15: astore_2
      16: aload_0
      17: invokestatic  #23                 // Method orEmpty:(Ljava/lang/String;)Ljava/lang/String;
      20: areturn
      21: astore_2
      22: aload_0
      23: invokestatic  #23                 // Method orEmpty:(Ljava/lang/String;)Ljava/lang/String;
      26: areturn
    Exception table:
       from    to  target type
           0    14    15   Class java/io/UnsupportedEncodingException
           0    14    21   Class java/lang/IllegalArgumentException

  public static java.lang.String urlEncode(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        9
       5: aload_1
       6: goto          11
       9: ldc           #39                 // String UTF-8
      11: invokestatic  #43                 // Method java/net/URLEncoder.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      14: areturn
      15: astore_2
      16: aload_0
      17: invokestatic  #23                 // Method orEmpty:(Ljava/lang/String;)Ljava/lang/String;
      20: areturn
    Exception table:
       from    to  target type
           0    14    15   Class java/io/UnsupportedEncodingException

  public static java.lang.String removeStart(java.lang.String, char);
    Code:
       0: aload_0
       1: ifnull        23
       4: aload_0
       5: iload_1
       6: invokestatic  #21                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;
       9: invokevirtual #35                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      12: ifeq          21
      15: aload_0
      16: iconst_1
      17: invokevirtual #30                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      20: areturn
      21: aload_0
      22: areturn
      23: ldc           #12                 // String
      25: areturn

  public static java.lang.String removeStart(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: ifnull        26
       4: aload_0
       5: aload_1
       6: invokestatic  #44                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       9: invokevirtual #35                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      12: ifeq          24
      15: aload_0
      16: aload_1
      17: invokevirtual #10                 // Method java/lang/String.length:()I
      20: invokevirtual #30                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      23: areturn
      24: aload_0
      25: areturn
      26: ldc           #12                 // String
      28: areturn

  public static java.lang.String removeEnd(java.lang.String, char);
    Code:
       0: aload_0
       1: ifnull        29
       4: aload_0
       5: iload_1
       6: invokestatic  #21                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;
       9: invokevirtual #32                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      12: ifeq          27
      15: aload_0
      16: iconst_0
      17: aload_0
      18: invokevirtual #10                 // Method java/lang/String.length:()I
      21: iconst_1
      22: isub
      23: invokevirtual #34                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      26: areturn
      27: aload_0
      28: areturn
      29: ldc           #12                 // String
      31: areturn

  public static java.lang.String removeEnd(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: ifnull        32
       4: aload_0
       5: aload_1
       6: invokestatic  #44                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       9: invokevirtual #32                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      12: ifeq          30
      15: aload_0
      16: iconst_0
      17: aload_0
      18: invokevirtual #10                 // Method java/lang/String.length:()I
      21: aload_1
      22: invokevirtual #10                 // Method java/lang/String.length:()I
      25: isub
      26: invokevirtual #34                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      29: areturn
      30: aload_0
      31: areturn
      32: ldc           #12                 // String
      34: areturn

  public static <T> java.util.List<? extends T> stringSorted(java.util.Collection<? extends T>, com.vladsch.flexmark.util.Computable<java.lang.String, T>);
    Code:
       0: new           #45                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: invokespecial #46                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
       8: astore_2
       9: aload_2
      10: new           #47                 // class com/vladsch/flexmark/util/Utils$1
      13: dup
      14: aload_1
      15: invokespecial #48                 // Method com/vladsch/flexmark/util/Utils$1."<init>":(Lcom/vladsch/flexmark/util/Computable;)V
      18: invokestatic  #49                 // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      21: aload_2
      22: areturn

  public static java.lang.String regexGroup(java.lang.String);
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #50                 // String (?:
       9: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokestatic  #23                 // Method orEmpty:(Ljava/lang/String;)Ljava/lang/String;
      16: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #51                 // String )
      21: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public static boolean regionMatches(java.lang.CharSequence, int, java.lang.String, int, int, boolean);
    Code:
       0: iload         5
       2: ifeq          53
       5: iconst_0
       6: istore        6
       8: iload         6
      10: iload         4
      12: if_icmpge     50
      15: aload_0
      16: iload         6
      18: iload_1
      19: iadd
      20: invokeinterface #52,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      25: invokestatic  #53                 // Method java/lang/Character.toLowerCase:(C)C
      28: aload_2
      29: iload         6
      31: iload_3
      32: iadd
      33: invokevirtual #11                 // Method java/lang/String.charAt:(I)C
      36: invokestatic  #53                 // Method java/lang/Character.toLowerCase:(C)C
      39: if_icmpeq     44
      42: iconst_0
      43: ireturn
      44: iinc          6, 1
      47: goto          8
      50: goto          92
      53: iconst_0
      54: istore        6
      56: iload         6
      58: iload         4
      60: if_icmpge     92
      63: aload_0
      64: iload         6
      66: iload_1
      67: iadd
      68: invokeinterface #52,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      73: aload_2
      74: iload         6
      76: iload_3
      77: iadd
      78: invokevirtual #11                 // Method java/lang/String.charAt:(I)C
      81: if_icmpeq     86
      84: iconst_0
      85: ireturn
      86: iinc          6, 1
      89: goto          56
      92: iconst_1
      93: ireturn

  public static boolean endsWith(java.lang.CharSequence, java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokeinterface #54,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       6: aload_1
       7: invokevirtual #10                 // Method java/lang/String.length:()I
      10: if_icmplt     42
      13: aload_0
      14: aload_0
      15: invokeinterface #54,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      20: aload_1
      21: invokevirtual #10                 // Method java/lang/String.length:()I
      24: isub
      25: aload_1
      26: iconst_0
      27: aload_1
      28: invokevirtual #10                 // Method java/lang/String.length:()I
      31: iload_2
      32: invokestatic  #55                 // Method regionMatches:(Ljava/lang/CharSequence;ILjava/lang/String;IIZ)Z
      35: ifeq          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ireturn

  public static boolean startsWith(java.lang.CharSequence, java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokeinterface #54,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       6: aload_1
       7: invokevirtual #10                 // Method java/lang/String.length:()I
      10: if_icmplt     32
      13: aload_0
      14: iconst_0
      15: aload_1
      16: iconst_0
      17: aload_1
      18: invokevirtual #10                 // Method java/lang/String.length:()I
      21: iload_2
      22: invokestatic  #55                 // Method regionMatches:(Ljava/lang/CharSequence;ILjava/lang/String;IIZ)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public static java.lang.String splice(java.lang.String[], java.lang.String);
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: arraylength
       6: aload_1
       7: invokevirtual #10                 // Method java/lang/String.length:()I
      10: bipush        10
      12: iadd
      13: imul
      14: invokespecial #56                 // Method java/lang/StringBuilder."<init>":(I)V
      17: astore_2
      18: ldc           #12                 // String
      20: astore_3
      21: aload_0
      22: astore        4
      24: aload         4
      26: arraylength
      27: istore        5
      29: iconst_0
      30: istore        6
      32: iload         6
      34: iload         5
      36: if_icmpge     67
      39: aload         4
      41: iload         6
      43: aaload
      44: astore        7
      46: aload_2
      47: aload_3
      48: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: pop
      52: aload_1
      53: astore_3
      54: aload_2
      55: aload         7
      57: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: pop
      61: iinc          6, 1
      64: goto          32
      67: aload_2
      68: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: areturn

  public static java.lang.String splice(java.util.Collection<java.lang.String>, java.lang.String, boolean);
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokeinterface #57,  1           // InterfaceMethod java/util/Collection.size:()I
      10: aload_1
      11: invokevirtual #10                 // Method java/lang/String.length:()I
      14: bipush        10
      16: iadd
      17: imul
      18: invokespecial #56                 // Method java/lang/StringBuilder."<init>":(I)V
      21: astore_3
      22: ldc           #12                 // String
      24: astore        4
      26: aload_0
      27: invokeinterface #58,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      32: astore        5
      34: aload         5
      36: invokeinterface #59,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          127
      44: aload         5
      46: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #8                  // class java/lang/String
      54: astore        6
      56: aload         6
      58: ifnull        69
      61: aload         6
      63: invokevirtual #5                  // Method java/lang/String.isEmpty:()Z
      66: ifeq          73
      69: iload_2
      70: ifne          124
      73: iload_2
      74: ifeq          104
      77: aload         6
      79: aload_1
      80: invokevirtual #35                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      83: ifne          111
      86: aload_3
      87: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: iconst_1
      91: anewarray     #8                  // class java/lang/String
      94: dup
      95: iconst_0
      96: aload_1
      97: aastore
      98: invokestatic  #61                 // Method endsWith:(Ljava/lang/String;[Ljava/lang/String;)Z
     101: ifne          111
     104: aload_3
     105: aload         4
     107: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: pop
     111: aload_1
     112: astore        4
     114: aload_3
     115: aload         6
     117: invokestatic  #23                 // Method orEmpty:(Ljava/lang/String;)Ljava/lang/String;
     120: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: pop
     124: goto          34
     127: aload_3
     128: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     131: areturn

  public static int max(int, int...);
    Code:
       0: iload_0
       1: istore_2
       2: aload_1
       3: astore_3
       4: aload_3
       5: arraylength
       6: istore        4
       8: iconst_0
       9: istore        5
      11: iload         5
      13: iload         4
      15: if_icmpge     39
      18: aload_3
      19: iload         5
      21: iaload
      22: istore        6
      24: iload_2
      25: iload         6
      27: if_icmpge     33
      30: iload         6
      32: istore_2
      33: iinc          5, 1
      36: goto          11
      39: iload_2
      40: ireturn

  public static int min(int, int...);
    Code:
       0: iload_0
       1: istore_2
       2: aload_1
       3: astore_3
       4: aload_3
       5: arraylength
       6: istore        4
       8: iconst_0
       9: istore        5
      11: iload         5
      13: iload         4
      15: if_icmpge     39
      18: aload_3
      19: iload         5
      21: iaload
      22: istore        6
      24: iload_2
      25: iload         6
      27: if_icmple     33
      30: iload         6
      32: istore_2
      33: iinc          5, 1
      36: goto          11
      39: iload_2
      40: ireturn

  public static int minLimit(int, int...);
    Code:
       0: iload_0
       1: aload_1
       2: invokestatic  #62                 // Method max:(I[I)I
       5: ireturn

  public static int maxLimit(int, int...);
    Code:
       0: iload_0
       1: aload_1
       2: invokestatic  #63                 // Method min:(I[I)I
       5: ireturn

  public static int rangeLimit(int, int, int);
    Code:
       0: iload_0
       1: iload_1
       2: if_icmpge     7
       5: iload_1
       6: ireturn
       7: iload_0
       8: iload_2
       9: if_icmple     14
      12: iload_2
      13: ireturn
      14: iload_0
      15: ireturn

  public static <K, V> V putIfMissing(java.util.Map<K, V>, K, com.vladsch.flexmark.util.RunnableValue<V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #64,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: astore_3
       8: aload_3
       9: ifnonnull     28
      12: aload_2
      13: invokeinterface #7,  1            // InterfaceMethod com/vladsch/flexmark/util/RunnableValue.run:()Ljava/lang/Object;
      18: astore_3
      19: aload_0
      20: aload_1
      21: aload_3
      22: invokeinterface #65,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: aload_3
      29: areturn

  public static <K, V> java.util.Map<K, V> withDefaults(java.util.Map<K, V>, java.util.Map<K, V>);
    Code:
       0: new           #66                 // class java/util/HashMap
       3: dup
       4: invokespecial #67                 // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: invokevirtual #68                 // Method java/util/HashMap.putAll:(Ljava/util/Map;)V
      13: aload_1
      14: invokeinterface #69,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      19: invokeinterface #70,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      24: astore_3
      25: aload_3
      26: invokeinterface #59,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          69
      34: aload_3
      35: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #71                 // class java/util/Map$Entry
      43: astore        4
      45: aload_2
      46: aload         4
      48: invokeinterface #72,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      53: new           #73                 // class com/vladsch/flexmark/util/Utils$2
      56: dup
      57: aload         4
      59: invokespecial #74                 // Method com/vladsch/flexmark/util/Utils$2."<init>":(Ljava/util/Map$Entry;)V
      62: invokestatic  #75                 // Method putIfMissing:(Ljava/util/Map;Ljava/lang/Object;Lcom/vladsch/flexmark/util/RunnableValue;)Ljava/lang/Object;
      65: pop
      66: goto          25
      69: aload_2
      70: areturn
}
