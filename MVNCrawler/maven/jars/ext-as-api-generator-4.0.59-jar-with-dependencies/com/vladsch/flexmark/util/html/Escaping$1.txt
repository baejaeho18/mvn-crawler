Compiled from "Escaping.java"
final class com.vladsch.flexmark.util.html.Escaping$1 implements com.vladsch.flexmark.util.html.Escaping$Replacer {
  com.vladsch.flexmark.util.html.Escaping$1();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void replace(java.lang.String, java.lang.StringBuilder);
    Code:
       0: aload_1
       1: ldc           #2                  // String &
       3: invokevirtual #3                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          19
       9: aload_2
      10: ldc           #4                  // String &amp;
      12: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: pop
      16: goto          82
      19: aload_1
      20: ldc           #6                  // String <
      22: invokevirtual #3                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      25: ifeq          38
      28: aload_2
      29: ldc           #7                  // String &lt;
      31: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: pop
      35: goto          82
      38: aload_1
      39: ldc           #8                  // String >
      41: invokevirtual #3                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      44: ifeq          57
      47: aload_2
      48: ldc           #9                  // String &gt;
      50: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: goto          82
      57: aload_1
      58: ldc           #10                 // String \"
      60: invokevirtual #3                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      63: ifeq          76
      66: aload_2
      67: ldc           #11                 // String &quot;
      69: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: pop
      73: goto          82
      76: aload_2
      77: aload_1
      78: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: pop
      82: return

  public void replace(com.vladsch.flexmark.util.sequence.BasedSequence, int, int, com.vladsch.flexmark.util.sequence.ReplacedTextMapper);
    Code:
       0: aload_1
       1: iload_2
       2: iload_3
       3: invokeinterface #12,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       8: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
      11: astore        5
      13: aload         5
      15: ldc           #2                  // String &
      17: invokevirtual #3                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifeq          41
      23: aload         4
      25: iload_2
      26: iload_3
      27: ldc           #4                  // String &amp;
      29: getstatic     #14                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      32: invokestatic  #15                 // Method com/vladsch/flexmark/util/sequence/PrefixedSubSequence.of:(Ljava/lang/String;Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/util/sequence/PrefixedSubSequence;
      35: invokevirtual #16                 // Method com/vladsch/flexmark/util/sequence/ReplacedTextMapper.addReplacedText:(IILcom/vladsch/flexmark/util/sequence/BasedSequence;)V
      38: goto          132
      41: aload         5
      43: ldc           #6                  // String <
      45: invokevirtual #3                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      48: ifeq          69
      51: aload         4
      53: iload_2
      54: iload_3
      55: ldc           #7                  // String &lt;
      57: getstatic     #14                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      60: invokestatic  #15                 // Method com/vladsch/flexmark/util/sequence/PrefixedSubSequence.of:(Ljava/lang/String;Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/util/sequence/PrefixedSubSequence;
      63: invokevirtual #16                 // Method com/vladsch/flexmark/util/sequence/ReplacedTextMapper.addReplacedText:(IILcom/vladsch/flexmark/util/sequence/BasedSequence;)V
      66: goto          132
      69: aload         5
      71: ldc           #8                  // String >
      73: invokevirtual #3                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      76: ifeq          97
      79: aload         4
      81: iload_2
      82: iload_3
      83: ldc           #9                  // String &gt;
      85: getstatic     #14                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      88: invokestatic  #15                 // Method com/vladsch/flexmark/util/sequence/PrefixedSubSequence.of:(Ljava/lang/String;Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/util/sequence/PrefixedSubSequence;
      91: invokevirtual #16                 // Method com/vladsch/flexmark/util/sequence/ReplacedTextMapper.addReplacedText:(IILcom/vladsch/flexmark/util/sequence/BasedSequence;)V
      94: goto          132
      97: aload         5
      99: ldc           #10                 // String \"
     101: invokevirtual #3                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     104: ifeq          125
     107: aload         4
     109: iload_2
     110: iload_3
     111: ldc           #11                 // String &quot;
     113: getstatic     #14                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     116: invokestatic  #15                 // Method com/vladsch/flexmark/util/sequence/PrefixedSubSequence.of:(Ljava/lang/String;Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/util/sequence/PrefixedSubSequence;
     119: invokevirtual #16                 // Method com/vladsch/flexmark/util/sequence/ReplacedTextMapper.addReplacedText:(IILcom/vladsch/flexmark/util/sequence/BasedSequence;)V
     122: goto          132
     125: aload         4
     127: iload_2
     128: iload_3
     129: invokevirtual #17                 // Method com/vladsch/flexmark/util/sequence/ReplacedTextMapper.addOriginalText:(II)V
     132: return
}
