Compiled from "RepeatedCharSequence.java"
public class com.vladsch.flexmark.util.sequence.RepeatedCharSequence implements java.lang.CharSequence {
  public static com.vladsch.flexmark.util.sequence.RepeatedCharSequence NULL;

  private final java.lang.CharSequence myChars;

  private final int myStartIndex;

  private final int myEndIndex;

  private int myHash;

  private com.vladsch.flexmark.util.sequence.RepeatedCharSequence(java.lang.CharSequence, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field myChars:Ljava/lang/CharSequence;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field myStartIndex:I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field myEndIndex:I
      19: return

  public int length();
    Code:
       0: aload_0
       1: getfield      #4                  // Field myEndIndex:I
       4: aload_0
       5: getfield      #3                  // Field myStartIndex:I
       8: isub
       9: ireturn

  public char charAt(int);
    Code:
       0: iload_1
       1: iflt          17
       4: iload_1
       5: aload_0
       6: getfield      #4                  // Field myEndIndex:I
       9: aload_0
      10: getfield      #3                  // Field myStartIndex:I
      13: isub
      14: if_icmplt     25
      17: new           #5                  // class java/lang/IndexOutOfBoundsException
      20: dup
      21: invokespecial #6                  // Method java/lang/IndexOutOfBoundsException."<init>":()V
      24: athrow
      25: aload_0
      26: getfield      #2                  // Field myChars:Ljava/lang/CharSequence;
      29: aload_0
      30: getfield      #3                  // Field myStartIndex:I
      33: iload_1
      34: iadd
      35: aload_0
      36: getfield      #2                  // Field myChars:Ljava/lang/CharSequence;
      39: invokeinterface #7,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      44: irem
      45: invokeinterface #8,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      50: ireturn

  public java.lang.CharSequence subSequence(int, int);
    Code:
       0: iload_1
       1: iflt          77
       4: iload_1
       5: iload_2
       6: if_icmpgt     77
       9: iload_2
      10: aload_0
      11: getfield      #4                  // Field myEndIndex:I
      14: aload_0
      15: getfield      #3                  // Field myStartIndex:I
      18: isub
      19: if_icmpgt     77
      22: iload_1
      23: iload_2
      24: if_icmpne     33
      27: getstatic     #9                  // Field NULL:Lcom/vladsch/flexmark/util/sequence/RepeatedCharSequence;
      30: goto          76
      33: iload_1
      34: aload_0
      35: getfield      #3                  // Field myStartIndex:I
      38: if_icmpne     53
      41: iload_2
      42: aload_0
      43: getfield      #4                  // Field myEndIndex:I
      46: if_icmpne     53
      49: aload_0
      50: goto          76
      53: new           #10                 // class com/vladsch/flexmark/util/sequence/RepeatedCharSequence
      56: dup
      57: aload_0
      58: getfield      #2                  // Field myChars:Ljava/lang/CharSequence;
      61: aload_0
      62: getfield      #3                  // Field myStartIndex:I
      65: iload_1
      66: iadd
      67: aload_0
      68: getfield      #3                  // Field myStartIndex:I
      71: iload_2
      72: iadd
      73: invokespecial #11                 // Method "<init>":(Ljava/lang/CharSequence;II)V
      76: areturn
      77: new           #12                 // class java/lang/IllegalArgumentException
      80: dup
      81: new           #13                 // class java/lang/StringBuilder
      84: dup
      85: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      88: ldc           #15                 // String subSequence($startIndex, $endIndex) in RepeatedCharSequence(\'\',
      90: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload_0
      94: getfield      #3                  // Field myStartIndex:I
      97: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     100: ldc           #18                 // String ,
     102: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: aload_0
     106: getfield      #4                  // Field myEndIndex:I
     109: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     112: ldc           #19                 // String )
     114: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     120: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     123: athrow

  public com.vladsch.flexmark.util.sequence.RepeatedCharSequence repeat(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field myStartIndex:I
       4: aload_0
       5: getfield      #4                  // Field myEndIndex:I
       8: aload_0
       9: getfield      #3                  // Field myStartIndex:I
      12: isub
      13: iload_1
      14: imul
      15: iadd
      16: istore_2
      17: aload_0
      18: getfield      #3                  // Field myStartIndex:I
      21: aload_0
      22: getfield      #4                  // Field myEndIndex:I
      25: if_icmplt     34
      28: getstatic     #9                  // Field NULL:Lcom/vladsch/flexmark/util/sequence/RepeatedCharSequence;
      31: goto          62
      34: aload_0
      35: getfield      #4                  // Field myEndIndex:I
      38: iload_2
      39: if_icmpne     46
      42: aload_0
      43: goto          62
      46: new           #10                 // class com/vladsch/flexmark/util/sequence/RepeatedCharSequence
      49: dup
      50: aload_0
      51: getfield      #2                  // Field myChars:Ljava/lang/CharSequence;
      54: aload_0
      55: getfield      #3                  // Field myStartIndex:I
      58: iload_2
      59: invokespecial #11                 // Method "<init>":(Ljava/lang/CharSequence;II)V
      62: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #22                 // Field myHash:I
       4: istore_1
       5: iload_1
       6: ifne          48
       9: aload_0
      10: invokevirtual #23                 // Method length:()I
      13: ifle          48
      16: iconst_0
      17: istore_2
      18: iload_2
      19: aload_0
      20: invokevirtual #23                 // Method length:()I
      23: if_icmpge     43
      26: bipush        31
      28: iload_1
      29: imul
      30: aload_0
      31: iload_2
      32: invokevirtual #24                 // Method charAt:(I)C
      35: iadd
      36: istore_1
      37: iinc          2, 1
      40: goto          18
      43: aload_0
      44: iload_1
      45: putfield      #22                 // Field myHash:I
      48: iload_1
      49: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpeq     26
       5: aload_1
       6: instanceof    #25                 // class java/lang/CharSequence
       9: ifeq          30
      12: aload_0
      13: invokevirtual #26                 // Method toString:()Ljava/lang/String;
      16: aload_1
      17: invokevirtual #27                 // Method java/lang/Object.toString:()Ljava/lang/String;
      20: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public java.lang.String toString();
    Code:
       0: new           #13                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: iconst_0
      11: aload_0
      12: invokevirtual #23                 // Method length:()I
      15: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
      18: pop
      19: aload_1
      20: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: areturn

  public static com.vladsch.flexmark.util.sequence.RepeatedCharSequence of(char, int);
    Code:
       0: new           #10                 // class com/vladsch/flexmark/util/sequence/RepeatedCharSequence
       3: dup
       4: iload_0
       5: invokestatic  #30                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;
       8: iconst_0
       9: iload_1
      10: invokespecial #11                 // Method "<init>":(Ljava/lang/CharSequence;II)V
      13: areturn

  public static com.vladsch.flexmark.util.sequence.RepeatedCharSequence of(java.lang.CharSequence, int);
    Code:
       0: new           #10                 // class com/vladsch/flexmark/util/sequence/RepeatedCharSequence
       3: dup
       4: aload_0
       5: iconst_0
       6: aload_0
       7: invokeinterface #7,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      12: iload_1
      13: imul
      14: invokespecial #11                 // Method "<init>":(Ljava/lang/CharSequence;II)V
      17: areturn

  public static com.vladsch.flexmark.util.sequence.RepeatedCharSequence of(java.lang.CharSequence, int, int);
    Code:
       0: new           #10                 // class com/vladsch/flexmark/util/sequence/RepeatedCharSequence
       3: dup
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokespecial #11                 // Method "<init>":(Ljava/lang/CharSequence;II)V
      10: areturn

  static {};
    Code:
       0: new           #10                 // class com/vladsch/flexmark/util/sequence/RepeatedCharSequence
       3: dup
       4: getstatic     #31                 // Field com/vladsch/flexmark/util/sequence/SubSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       7: iconst_0
       8: iconst_0
       9: invokespecial #11                 // Method "<init>":(Ljava/lang/CharSequence;II)V
      12: putstatic     #9                  // Field NULL:Lcom/vladsch/flexmark/util/sequence/RepeatedCharSequence;
      15: return
}
