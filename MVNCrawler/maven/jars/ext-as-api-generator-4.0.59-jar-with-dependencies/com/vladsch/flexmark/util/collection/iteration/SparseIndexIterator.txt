Compiled from "SparseIndexIterator.java"
public class com.vladsch.flexmark.util.collection.iteration.SparseIndexIterator implements com.vladsch.flexmark.util.collection.iteration.ReversibleIterator<java.lang.Integer> {
  private final int[] myStarts;

  private final int[] myEnds;

  private final boolean myIsReversed;

  private int myIndex;

  private int myNext;

  private int myLast;

  public com.vladsch.flexmark.util.collection.iteration.SparseIndexIterator(int[], int[], boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field myStarts:[I
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field myEnds:[I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field myIsReversed:Z
      19: aload_0
      20: iload_3
      21: ifeq          34
      24: aload_0
      25: getfield      #3                  // Field myEnds:[I
      28: arraylength
      29: iconst_1
      30: isub
      31: goto          35
      34: iconst_0
      35: putfield      #5                  // Field myIndex:I
      38: aload_0
      39: aload_0
      40: getfield      #5                  // Field myIndex:I
      43: ifge          62
      46: aload_0
      47: getfield      #5                  // Field myIndex:I
      50: aload_0
      51: getfield      #3                  // Field myEnds:[I
      54: arraylength
      55: if_icmplt     62
      58: iconst_m1
      59: goto          90
      62: aload_0
      63: getfield      #4                  // Field myIsReversed:Z
      66: ifeq          81
      69: aload_0
      70: getfield      #3                  // Field myEnds:[I
      73: aload_0
      74: getfield      #5                  // Field myIndex:I
      77: iaload
      78: goto          90
      81: aload_0
      82: getfield      #2                  // Field myStarts:[I
      85: aload_0
      86: getfield      #5                  // Field myIndex:I
      89: iaload
      90: putfield      #6                  // Field myNext:I
      93: aload_0
      94: iconst_m1
      95: putfield      #7                  // Field myLast:I
      98: return

  public boolean isReversed();
    Code:
       0: aload_0
       1: getfield      #4                  // Field myIsReversed:Z
       4: ireturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #6                  // Field myNext:I
       4: iconst_m1
       5: if_icmpeq     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public java.lang.Integer next();
    Code:
       0: aload_0
       1: getfield      #6                  // Field myNext:I
       4: iconst_m1
       5: if_icmpne     16
       8: new           #8                  // class java/util/NoSuchElementException
      11: dup
      12: invokespecial #9                  // Method java/util/NoSuchElementException."<init>":()V
      15: athrow
      16: aload_0
      17: aload_0
      18: getfield      #6                  // Field myNext:I
      21: putfield      #7                  // Field myLast:I
      24: aload_0
      25: getfield      #4                  // Field myIsReversed:Z
      28: ifeq          97
      31: aload_0
      32: getfield      #6                  // Field myNext:I
      35: aload_0
      36: getfield      #2                  // Field myStarts:[I
      39: aload_0
      40: getfield      #5                  // Field myIndex:I
      43: iaload
      44: if_icmpne     84
      47: aload_0
      48: dup
      49: getfield      #5                  // Field myIndex:I
      52: iconst_1
      53: isub
      54: putfield      #5                  // Field myIndex:I
      57: aload_0
      58: aload_0
      59: getfield      #5                  // Field myIndex:I
      62: iflt          77
      65: aload_0
      66: getfield      #3                  // Field myEnds:[I
      69: aload_0
      70: getfield      #5                  // Field myIndex:I
      73: iaload
      74: goto          78
      77: iconst_m1
      78: putfield      #6                  // Field myNext:I
      81: goto          165
      84: aload_0
      85: dup
      86: getfield      #6                  // Field myNext:I
      89: iconst_1
      90: isub
      91: putfield      #6                  // Field myNext:I
      94: goto          165
      97: aload_0
      98: getfield      #6                  // Field myNext:I
     101: aload_0
     102: getfield      #3                  // Field myEnds:[I
     105: aload_0
     106: getfield      #5                  // Field myIndex:I
     109: iaload
     110: if_icmpne     155
     113: aload_0
     114: dup
     115: getfield      #5                  // Field myIndex:I
     118: iconst_1
     119: iadd
     120: putfield      #5                  // Field myIndex:I
     123: aload_0
     124: aload_0
     125: getfield      #5                  // Field myIndex:I
     128: aload_0
     129: getfield      #2                  // Field myStarts:[I
     132: arraylength
     133: if_icmpge     148
     136: aload_0
     137: getfield      #2                  // Field myStarts:[I
     140: aload_0
     141: getfield      #5                  // Field myIndex:I
     144: iaload
     145: goto          149
     148: iconst_m1
     149: putfield      #6                  // Field myNext:I
     152: goto          165
     155: aload_0
     156: dup
     157: getfield      #6                  // Field myNext:I
     160: iconst_1
     161: iadd
     162: putfield      #6                  // Field myNext:I
     165: aload_0
     166: getfield      #7                  // Field myLast:I
     169: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     172: areturn

  public void remove();
    Code:
       0: new           #11                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void forEachRemaining(com.vladsch.flexmark.util.collection.Consumer<? super java.lang.Integer>);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method hasNext:()Z
       4: ifeq          20
       7: aload_1
       8: aload_0
       9: invokevirtual #14                 // Method next:()Ljava/lang/Integer;
      12: invokeinterface #15,  2           // InterfaceMethod com/vladsch/flexmark/util/collection/Consumer.accept:(Ljava/lang/Object;)V
      17: goto          0
      20: return

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method next:()Ljava/lang/Integer;
       4: areturn
}
