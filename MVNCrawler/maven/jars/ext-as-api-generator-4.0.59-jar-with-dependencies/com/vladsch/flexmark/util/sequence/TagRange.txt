Compiled from "TagRange.java"
public class com.vladsch.flexmark.util.sequence.TagRange extends com.vladsch.flexmark.util.sequence.Range {
  protected final java.lang.String tag;

  public static com.vladsch.flexmark.util.sequence.TagRange of(java.lang.CharSequence, int, int);
    Code:
       0: new           #1                  // class com/vladsch/flexmark/util/sequence/TagRange
       3: dup
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokespecial #2                  // Method "<init>":(Ljava/lang/CharSequence;II)V
      10: areturn

  public com.vladsch.flexmark.util.sequence.TagRange(java.lang.CharSequence, com.vladsch.flexmark.util.sequence.Range);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #3                  // Method com/vladsch/flexmark/util/sequence/Range."<init>":(Lcom/vladsch/flexmark/util/sequence/Range;)V
       5: aload_0
       6: aload_1
       7: instanceof    #4                  // class java/lang/String
      10: ifeq          20
      13: aload_1
      14: checkcast     #4                  // class java/lang/String
      17: goto          24
      20: aload_1
      21: invokestatic  #5                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      24: putfield      #6                  // Field tag:Ljava/lang/String;
      27: return

  public com.vladsch.flexmark.util.sequence.TagRange(java.lang.CharSequence, int, int);
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: invokespecial #7                  // Method com/vladsch/flexmark/util/sequence/Range."<init>":(II)V
       6: aload_0
       7: aload_1
       8: instanceof    #4                  // class java/lang/String
      11: ifeq          21
      14: aload_1
      15: checkcast     #4                  // class java/lang/String
      18: goto          25
      21: aload_1
      22: invokestatic  #5                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      25: putfield      #6                  // Field tag:Ljava/lang/String;
      28: return

  public java.lang.String getTag();
    Code:
       0: aload_0
       1: getfield      #6                  // Field tag:Ljava/lang/String;
       4: areturn

  public com.vladsch.flexmark.util.sequence.TagRange withTag(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #6                  // Field tag:Ljava/lang/String;
       4: aload_1
       5: instanceof    #4                  // class java/lang/String
       8: ifeq          18
      11: aload_1
      12: checkcast     #4                  // class java/lang/String
      15: goto          22
      18: aload_1
      19: invokestatic  #5                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      22: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      25: ifeq          32
      28: aload_0
      29: goto          48
      32: new           #1                  // class com/vladsch/flexmark/util/sequence/TagRange
      35: dup
      36: aload_1
      37: aload_0
      38: invokevirtual #9                  // Method getStart:()I
      41: aload_0
      42: invokevirtual #10                 // Method getEnd:()I
      45: invokespecial #2                  // Method "<init>":(Ljava/lang/CharSequence;II)V
      48: areturn

  public com.vladsch.flexmark.util.sequence.TagRange withStart(int);
    Code:
       0: iload_1
       1: aload_0
       2: invokevirtual #9                  // Method getStart:()I
       5: if_icmpne     12
       8: aload_0
       9: goto          28
      12: new           #1                  // class com/vladsch/flexmark/util/sequence/TagRange
      15: dup
      16: aload_0
      17: invokevirtual #11                 // Method getTag:()Ljava/lang/String;
      20: iload_1
      21: aload_0
      22: invokevirtual #10                 // Method getEnd:()I
      25: invokespecial #2                  // Method "<init>":(Ljava/lang/CharSequence;II)V
      28: areturn

  public com.vladsch.flexmark.util.sequence.TagRange withEnd(int);
    Code:
       0: iload_1
       1: aload_0
       2: invokevirtual #10                 // Method getEnd:()I
       5: if_icmpne     12
       8: aload_0
       9: goto          28
      12: new           #1                  // class com/vladsch/flexmark/util/sequence/TagRange
      15: dup
      16: aload_0
      17: invokevirtual #11                 // Method getTag:()Ljava/lang/String;
      20: aload_0
      21: invokevirtual #9                  // Method getStart:()I
      24: iload_1
      25: invokespecial #2                  // Method "<init>":(Ljava/lang/CharSequence;II)V
      28: areturn

  public com.vladsch.flexmark.util.sequence.TagRange withRange(int, int);
    Code:
       0: iload_1
       1: aload_0
       2: invokevirtual #9                  // Method getStart:()I
       5: if_icmpne     20
       8: iload_2
       9: aload_0
      10: invokevirtual #10                 // Method getEnd:()I
      13: if_icmpne     20
      16: aload_0
      17: goto          33
      20: new           #1                  // class com/vladsch/flexmark/util/sequence/TagRange
      23: dup
      24: aload_0
      25: invokevirtual #11                 // Method getTag:()Ljava/lang/String;
      28: iload_1
      29: iload_2
      30: invokespecial #2                  // Method "<init>":(Ljava/lang/CharSequence;II)V
      33: areturn

  public com.vladsch.flexmark.util.sequence.Range withRange(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #12                 // Method withRange:(II)Lcom/vladsch/flexmark/util/sequence/TagRange;
       6: areturn

  public com.vladsch.flexmark.util.sequence.Range withEnd(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #13                 // Method withEnd:(I)Lcom/vladsch/flexmark/util/sequence/TagRange;
       5: areturn

  public com.vladsch.flexmark.util.sequence.Range withStart(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #14                 // Method withStart:(I)Lcom/vladsch/flexmark/util/sequence/TagRange;
       5: areturn
}
