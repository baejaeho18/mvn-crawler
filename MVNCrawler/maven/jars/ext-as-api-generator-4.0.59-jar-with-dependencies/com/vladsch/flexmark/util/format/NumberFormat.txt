Compiled from "NumberFormat.java"
public final class com.vladsch.flexmark.util.format.NumberFormat extends java.lang.Enum<com.vladsch.flexmark.util.format.NumberFormat> {
  public static final com.vladsch.flexmark.util.format.NumberFormat NONE;

  public static final com.vladsch.flexmark.util.format.NumberFormat ARABIC;

  public static final com.vladsch.flexmark.util.format.NumberFormat LETTERS;

  public static final com.vladsch.flexmark.util.format.NumberFormat ROMAN;

  public static final com.vladsch.flexmark.util.format.NumberFormat CUSTOM;

  private static final com.vladsch.flexmark.util.format.NumberFormat[] $VALUES;

  public static com.vladsch.flexmark.util.format.NumberFormat[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lcom/vladsch/flexmark/util/format/NumberFormat;
       3: invokevirtual #2                  // Method "[Lcom/vladsch/flexmark/util/format/NumberFormat;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lcom/vladsch/flexmark/util/format/NumberFormat;"
       9: areturn

  public static com.vladsch.flexmark.util.format.NumberFormat valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class com/vladsch/flexmark/util/format/NumberFormat
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class com/vladsch/flexmark/util/format/NumberFormat
       9: areturn

  private com.vladsch.flexmark.util.format.NumberFormat();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public static java.lang.String getFormat(com.vladsch.flexmark.util.format.NumberFormat, int);
    Code:
       0: getstatic     #7                  // Field com/vladsch/flexmark/util/format/NumberFormat$1.$SwitchMap$com$vladsch$flexmark$util$format$NumberFormat:[I
       3: aload_0
       4: invokevirtual #8                  // Method ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 5
                     1: 44
                     2: 47
                     3: 52
                     4: 93
                     5: 105
               default: 115
          }
      44: ldc           #9                  // String
      46: areturn
      47: iload_1
      48: invokestatic  #10                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      51: areturn
      52: iload_1
      53: iconst_1
      54: if_icmpge     84
      57: new           #11                 // class java/lang/NumberFormatException
      60: dup
      61: new           #12                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #14                 // String Letter format count must be > 0, actual
      70: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: iload_1
      74: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      77: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: invokespecial #18                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      83: athrow
      84: iload_1
      85: iconst_1
      86: isub
      87: ldc           #19                 // String abcdefghijklmnopqrstuvwxyz
      89: invokestatic  #20                 // Method getFormat:(ILjava/lang/CharSequence;)Ljava/lang/String;
      92: areturn
      93: new           #21                 // class com/vladsch/flexmark/util/format/RomanNumeral
      96: dup
      97: iload_1
      98: invokespecial #22                 // Method com/vladsch/flexmark/util/format/RomanNumeral."<init>":(I)V
     101: invokevirtual #23                 // Method com/vladsch/flexmark/util/format/RomanNumeral.toString:()Ljava/lang/String;
     104: areturn
     105: new           #24                 // class java/lang/IllegalStateException
     108: dup
     109: ldc           #25                 // String CounterFormat.CUSTOM has to use custom conversion, possibly by calling getFormat(int count, CharSequence digitSet)
     111: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     114: athrow
     115: ldc           #9                  // String
     117: areturn

  public static java.lang.String getFormat(int, java.lang.CharSequence);
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: bipush        10
       6: invokespecial #27                 // Method java/lang/StringBuilder."<init>":(I)V
       9: astore_2
      10: aload_1
      11: invokeinterface #28,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      16: istore_3
      17: iload_0
      18: iload_3
      19: idiv
      20: istore        4
      22: iload_0
      23: iload         4
      25: iload_3
      26: imul
      27: isub
      28: istore        5
      30: aload_2
      31: aload_1
      32: iload         5
      34: invokeinterface #29,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      39: invokevirtual #30                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      42: pop
      43: iload         4
      45: istore_0
      46: iload_0
      47: ifgt          17
      50: aload_2
      51: invokevirtual #31                 // Method java/lang/StringBuilder.length:()I
      54: istore        4
      56: new           #12                 // class java/lang/StringBuilder
      59: dup
      60: iload         4
      62: invokespecial #27                 // Method java/lang/StringBuilder."<init>":(I)V
      65: astore        5
      67: iload         4
      69: istore        6
      71: iload         6
      73: iinc          6, -1
      76: ifle          94
      79: aload         5
      81: aload_2
      82: iload         6
      84: invokevirtual #32                 // Method java/lang/StringBuilder.charAt:(I)C
      87: invokevirtual #30                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      90: pop
      91: goto          71
      94: aload         5
      96: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: areturn

  static {};
    Code:
       0: new           #4                  // class com/vladsch/flexmark/util/format/NumberFormat
       3: dup
       4: ldc           #33                 // String NONE
       6: iconst_0
       7: invokespecial #34                 // Method "<init>":(Ljava/lang/String;I)V
      10: putstatic     #35                 // Field NONE:Lcom/vladsch/flexmark/util/format/NumberFormat;
      13: new           #4                  // class com/vladsch/flexmark/util/format/NumberFormat
      16: dup
      17: ldc           #36                 // String ARABIC
      19: iconst_1
      20: invokespecial #34                 // Method "<init>":(Ljava/lang/String;I)V
      23: putstatic     #37                 // Field ARABIC:Lcom/vladsch/flexmark/util/format/NumberFormat;
      26: new           #4                  // class com/vladsch/flexmark/util/format/NumberFormat
      29: dup
      30: ldc           #38                 // String LETTERS
      32: iconst_2
      33: invokespecial #34                 // Method "<init>":(Ljava/lang/String;I)V
      36: putstatic     #39                 // Field LETTERS:Lcom/vladsch/flexmark/util/format/NumberFormat;
      39: new           #4                  // class com/vladsch/flexmark/util/format/NumberFormat
      42: dup
      43: ldc           #40                 // String ROMAN
      45: iconst_3
      46: invokespecial #34                 // Method "<init>":(Ljava/lang/String;I)V
      49: putstatic     #41                 // Field ROMAN:Lcom/vladsch/flexmark/util/format/NumberFormat;
      52: new           #4                  // class com/vladsch/flexmark/util/format/NumberFormat
      55: dup
      56: ldc           #42                 // String CUSTOM
      58: iconst_4
      59: invokespecial #34                 // Method "<init>":(Ljava/lang/String;I)V
      62: putstatic     #43                 // Field CUSTOM:Lcom/vladsch/flexmark/util/format/NumberFormat;
      65: iconst_5
      66: anewarray     #4                  // class com/vladsch/flexmark/util/format/NumberFormat
      69: dup
      70: iconst_0
      71: getstatic     #35                 // Field NONE:Lcom/vladsch/flexmark/util/format/NumberFormat;
      74: aastore
      75: dup
      76: iconst_1
      77: getstatic     #37                 // Field ARABIC:Lcom/vladsch/flexmark/util/format/NumberFormat;
      80: aastore
      81: dup
      82: iconst_2
      83: getstatic     #39                 // Field LETTERS:Lcom/vladsch/flexmark/util/format/NumberFormat;
      86: aastore
      87: dup
      88: iconst_3
      89: getstatic     #41                 // Field ROMAN:Lcom/vladsch/flexmark/util/format/NumberFormat;
      92: aastore
      93: dup
      94: iconst_4
      95: getstatic     #43                 // Field CUSTOM:Lcom/vladsch/flexmark/util/format/NumberFormat;
      98: aastore
      99: putstatic     #1                  // Field $VALUES:[Lcom/vladsch/flexmark/util/format/NumberFormat;
     102: return
}
