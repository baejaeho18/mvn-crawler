Compiled from "ClassificationBag.java"
class com.vladsch.flexmark.util.collection.ClassificationBag$1 implements com.vladsch.flexmark.util.collection.CollectionHost<V> {
  final com.vladsch.flexmark.util.collection.ClassificationBag this$0;

  com.vladsch.flexmark.util.collection.ClassificationBag$1(com.vladsch.flexmark.util.collection.ClassificationBag);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public void adding(int, V, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
       4: invokestatic  #3                  // Method com/vladsch/flexmark/util/collection/ClassificationBag.access$000:(Lcom/vladsch/flexmark/util/collection/ClassificationBag;)Lcom/vladsch/flexmark/util/collection/CollectionHost;
       7: ifnull        40
      10: aload_0
      11: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
      14: invokestatic  #3                  // Method com/vladsch/flexmark/util/collection/ClassificationBag.access$000:(Lcom/vladsch/flexmark/util/collection/ClassificationBag;)Lcom/vladsch/flexmark/util/collection/CollectionHost;
      17: invokeinterface #4,  1            // InterfaceMethod com/vladsch/flexmark/util/collection/CollectionHost.skipHostUpdate:()Z
      22: ifne          40
      25: aload_0
      26: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
      29: invokestatic  #3                  // Method com/vladsch/flexmark/util/collection/ClassificationBag.access$000:(Lcom/vladsch/flexmark/util/collection/ClassificationBag;)Lcom/vladsch/flexmark/util/collection/CollectionHost;
      32: iload_1
      33: aload_2
      34: aload_3
      35: invokeinterface #5,  4            // InterfaceMethod com/vladsch/flexmark/util/collection/CollectionHost.adding:(ILjava/lang/Object;Ljava/lang/Object;)V
      40: aload_0
      41: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
      44: invokestatic  #6                  // Method com/vladsch/flexmark/util/collection/ClassificationBag.access$100:(Lcom/vladsch/flexmark/util/collection/ClassificationBag;)Lcom/vladsch/flexmark/util/collection/IndexedItemBitSetMap;
      47: aload_2
      48: iload_1
      49: invokevirtual #7                  // Method com/vladsch/flexmark/util/collection/IndexedItemBitSetMap.addItem:(Ljava/lang/Object;I)Z
      52: pop
      53: return

  public java.lang.Object removing(int, V);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
       4: invokestatic  #3                  // Method com/vladsch/flexmark/util/collection/ClassificationBag.access$000:(Lcom/vladsch/flexmark/util/collection/ClassificationBag;)Lcom/vladsch/flexmark/util/collection/CollectionHost;
       7: ifnull        40
      10: aload_0
      11: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
      14: invokestatic  #3                  // Method com/vladsch/flexmark/util/collection/ClassificationBag.access$000:(Lcom/vladsch/flexmark/util/collection/ClassificationBag;)Lcom/vladsch/flexmark/util/collection/CollectionHost;
      17: invokeinterface #4,  1            // InterfaceMethod com/vladsch/flexmark/util/collection/CollectionHost.skipHostUpdate:()Z
      22: ifne          40
      25: aload_0
      26: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
      29: invokestatic  #3                  // Method com/vladsch/flexmark/util/collection/ClassificationBag.access$000:(Lcom/vladsch/flexmark/util/collection/ClassificationBag;)Lcom/vladsch/flexmark/util/collection/CollectionHost;
      32: iload_1
      33: aload_2
      34: invokeinterface #8,  3            // InterfaceMethod com/vladsch/flexmark/util/collection/CollectionHost.removing:(ILjava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: aload_0
      41: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
      44: invokestatic  #6                  // Method com/vladsch/flexmark/util/collection/ClassificationBag.access$100:(Lcom/vladsch/flexmark/util/collection/ClassificationBag;)Lcom/vladsch/flexmark/util/collection/IndexedItemBitSetMap;
      47: aload_2
      48: iload_1
      49: invokevirtual #9                  // Method com/vladsch/flexmark/util/collection/IndexedItemBitSetMap.removeItem:(Ljava/lang/Object;I)Z
      52: pop
      53: aconst_null
      54: areturn

  public void clearing();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
       4: invokestatic  #3                  // Method com/vladsch/flexmark/util/collection/ClassificationBag.access$000:(Lcom/vladsch/flexmark/util/collection/ClassificationBag;)Lcom/vladsch/flexmark/util/collection/CollectionHost;
       7: ifnull        37
      10: aload_0
      11: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
      14: invokestatic  #3                  // Method com/vladsch/flexmark/util/collection/ClassificationBag.access$000:(Lcom/vladsch/flexmark/util/collection/ClassificationBag;)Lcom/vladsch/flexmark/util/collection/CollectionHost;
      17: invokeinterface #4,  1            // InterfaceMethod com/vladsch/flexmark/util/collection/CollectionHost.skipHostUpdate:()Z
      22: ifne          37
      25: aload_0
      26: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
      29: invokestatic  #3                  // Method com/vladsch/flexmark/util/collection/ClassificationBag.access$000:(Lcom/vladsch/flexmark/util/collection/ClassificationBag;)Lcom/vladsch/flexmark/util/collection/CollectionHost;
      32: invokeinterface #10,  1           // InterfaceMethod com/vladsch/flexmark/util/collection/CollectionHost.clearing:()V
      37: aload_0
      38: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
      41: invokestatic  #6                  // Method com/vladsch/flexmark/util/collection/ClassificationBag.access$100:(Lcom/vladsch/flexmark/util/collection/ClassificationBag;)Lcom/vladsch/flexmark/util/collection/IndexedItemBitSetMap;
      44: invokevirtual #11                 // Method com/vladsch/flexmark/util/collection/IndexedItemBitSetMap.clear:()V
      47: return

  public void addingNulls(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
       4: invokestatic  #3                  // Method com/vladsch/flexmark/util/collection/ClassificationBag.access$000:(Lcom/vladsch/flexmark/util/collection/ClassificationBag;)Lcom/vladsch/flexmark/util/collection/CollectionHost;
       7: ifnull        38
      10: aload_0
      11: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
      14: invokestatic  #3                  // Method com/vladsch/flexmark/util/collection/ClassificationBag.access$000:(Lcom/vladsch/flexmark/util/collection/ClassificationBag;)Lcom/vladsch/flexmark/util/collection/CollectionHost;
      17: invokeinterface #4,  1            // InterfaceMethod com/vladsch/flexmark/util/collection/CollectionHost.skipHostUpdate:()Z
      22: ifne          38
      25: aload_0
      26: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
      29: invokestatic  #3                  // Method com/vladsch/flexmark/util/collection/ClassificationBag.access$000:(Lcom/vladsch/flexmark/util/collection/ClassificationBag;)Lcom/vladsch/flexmark/util/collection/CollectionHost;
      32: iload_1
      33: invokeinterface #12,  2           // InterfaceMethod com/vladsch/flexmark/util/collection/CollectionHost.addingNulls:(I)V
      38: return

  public boolean skipHostUpdate();
    Code:
       0: iconst_0
       1: ireturn

  public int getIteratorModificationCount();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
       4: invokevirtual #13                 // Method com/vladsch/flexmark/util/collection/ClassificationBag.getModificationCount:()I
       7: ireturn
}
