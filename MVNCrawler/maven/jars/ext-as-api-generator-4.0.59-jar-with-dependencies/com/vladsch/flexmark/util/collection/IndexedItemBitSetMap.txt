Compiled from "IndexedItemBitSetMap.java"
public class com.vladsch.flexmark.util.collection.IndexedItemBitSetMap<K, M> extends com.vladsch.flexmark.util.collection.IndexedItemSetMapBase<K, java.util.BitSet, M> {
  private final com.vladsch.flexmark.util.Computable<K, M> myComputable;

  public com.vladsch.flexmark.util.collection.IndexedItemBitSetMap(com.vladsch.flexmark.util.Computable<K, M>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(Lcom/vladsch/flexmark/util/Computable;I)V
       6: return

  public com.vladsch.flexmark.util.collection.IndexedItemBitSetMap(com.vladsch.flexmark.util.Computable<K, M>, int);
    Code:
       0: aload_0
       1: iload_2
       2: invokespecial #2                  // Method com/vladsch/flexmark/util/collection/IndexedItemSetMapBase."<init>":(I)V
       5: aload_0
       6: aload_1
       7: putfield      #3                  // Field myComputable:Lcom/vladsch/flexmark/util/Computable;
      10: return

  public com.vladsch.flexmark.util.Computable<K, M> getComputable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field myComputable:Lcom/vladsch/flexmark/util/Computable;
       4: areturn

  public K mapKey(M);
    Code:
       0: aload_0
       1: getfield      #3                  // Field myComputable:Lcom/vladsch/flexmark/util/Computable;
       4: aload_1
       5: invokeinterface #4,  2            // InterfaceMethod com/vladsch/flexmark/util/Computable.compute:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public java.util.BitSet newSet();
    Code:
       0: new           #5                  // class java/util/BitSet
       3: dup
       4: invokespecial #6                  // Method java/util/BitSet."<init>":()V
       7: areturn

  public boolean addSetItem(java.util.BitSet, int);
    Code:
       0: aload_1
       1: iload_2
       2: invokevirtual #7                  // Method java/util/BitSet.get:(I)Z
       5: istore_3
       6: aload_1
       7: iload_2
       8: invokevirtual #8                  // Method java/util/BitSet.set:(I)V
      11: iload_3
      12: ireturn

  public boolean removeSetItem(java.util.BitSet, int);
    Code:
       0: aload_1
       1: iload_2
       2: invokevirtual #7                  // Method java/util/BitSet.get:(I)Z
       5: istore_3
       6: aload_1
       7: iload_2
       8: invokevirtual #9                  // Method java/util/BitSet.clear:(I)V
      11: iload_3
      12: ireturn

  public boolean containsSetItem(java.util.BitSet, int);
    Code:
       0: aload_1
       1: iload_2
       2: invokevirtual #7                  // Method java/util/BitSet.get:(I)Z
       5: ireturn

  public boolean containsSetItem(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #5                  // class java/util/BitSet
       5: iload_2
       6: invokevirtual #10                 // Method containsSetItem:(Ljava/util/BitSet;I)Z
       9: ireturn

  public boolean removeSetItem(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #5                  // class java/util/BitSet
       5: iload_2
       6: invokevirtual #11                 // Method removeSetItem:(Ljava/util/BitSet;I)Z
       9: ireturn

  public boolean addSetItem(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #5                  // class java/util/BitSet
       5: iload_2
       6: invokevirtual #12                 // Method addSetItem:(Ljava/util/BitSet;I)Z
       9: ireturn

  public java.lang.Object newSet();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method newSet:()Ljava/util/BitSet;
       4: areturn
}
