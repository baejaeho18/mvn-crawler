Compiled from "DelimitedBuilder.java"
public class com.vladsch.flexmark.util.options.DelimitedBuilder {
  private java.lang.String delimiter;

  private java.lang.StringBuilder out;

  private boolean hadSome;

  private boolean pending;

  private int lastLen;

  private java.util.Stack<java.lang.String> delimiterStack;

  public com.vladsch.flexmark.util.options.DelimitedBuilder();
    Code:
       0: aload_0
       1: ldc           #1                  // String ,
       3: iconst_0
       4: invokespecial #2                  // Method "<init>":(Ljava/lang/String;I)V
       7: return

  public com.vladsch.flexmark.util.options.DelimitedBuilder(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #2                  // Method "<init>":(Ljava/lang/String;I)V
       6: return

  public com.vladsch.flexmark.util.options.DelimitedBuilder(java.lang.String, int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #4                  // Field hadSome:Z
       9: aload_0
      10: iconst_0
      11: putfield      #5                  // Field pending:Z
      14: aload_0
      15: iconst_0
      16: putfield      #6                  // Field lastLen:I
      19: aload_0
      20: aconst_null
      21: putfield      #7                  // Field delimiterStack:Ljava/util/Stack;
      24: aload_0
      25: aload_1
      26: putfield      #8                  // Field delimiter:Ljava/lang/String;
      29: aload_0
      30: iload_2
      31: ifne          38
      34: aconst_null
      35: goto          46
      38: new           #9                  // class java/lang/StringBuilder
      41: dup
      42: iload_2
      43: invokespecial #10                 // Method java/lang/StringBuilder."<init>":(I)V
      46: putfield      #11                 // Field out:Ljava/lang/StringBuilder;
      49: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #7                  // Field delimiterStack:Ljava/util/Stack;
       4: ifnull        27
       7: aload_0
       8: getfield      #7                  // Field delimiterStack:Ljava/util/Stack;
      11: invokevirtual #12                 // Method java/util/Stack.isEmpty:()Z
      14: ifne          27
      17: new           #13                 // class java/lang/IllegalStateException
      20: dup
      21: ldc           #14                 // String Delimiter stack is not empty
      23: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
      31: ifnonnull     39
      34: ldc           #16                 // String
      36: goto          46
      39: aload_0
      40: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
      43: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: areturn

  public java.lang.String getAndClear();
    Code:
       0: aload_0
       1: getfield      #7                  // Field delimiterStack:Ljava/util/Stack;
       4: ifnull        27
       7: aload_0
       8: getfield      #7                  // Field delimiterStack:Ljava/util/Stack;
      11: invokevirtual #12                 // Method java/util/Stack.isEmpty:()Z
      14: ifne          27
      17: new           #13                 // class java/lang/IllegalStateException
      20: dup
      21: ldc           #14                 // String Delimiter stack is not empty
      23: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
      31: ifnonnull     39
      34: ldc           #16                 // String
      36: goto          46
      39: aload_0
      40: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
      43: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: astore_1
      47: aload_0
      48: invokevirtual #18                 // Method clear:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      51: pop
      52: aload_1
      53: areturn

  public com.vladsch.flexmark.util.options.DelimitedBuilder clear();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #11                 // Field out:Ljava/lang/StringBuilder;
       5: aload_0
       6: invokevirtual #19                 // Method unmark:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
       9: pop
      10: aload_0
      11: areturn

  public java.lang.String toStringOrNull();
    Code:
       0: aload_0
       1: getfield      #7                  // Field delimiterStack:Ljava/util/Stack;
       4: ifnull        27
       7: aload_0
       8: getfield      #7                  // Field delimiterStack:Ljava/util/Stack;
      11: invokevirtual #12                 // Method java/util/Stack.isEmpty:()Z
      14: ifne          27
      17: new           #13                 // class java/lang/IllegalStateException
      20: dup
      21: ldc           #14                 // String Delimiter stack is not empty
      23: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
      31: ifnonnull     38
      34: aconst_null
      35: goto          45
      38: aload_0
      39: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
      42: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: areturn

  public com.vladsch.flexmark.util.options.DelimitedBuilder mark();
    Code:
       0: aload_0
       1: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
       4: ifnull        17
       7: aload_0
       8: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
      11: invokevirtual #20                 // Method java/lang/StringBuilder.length:()I
      14: goto          18
      17: iconst_0
      18: istore_1
      19: aload_0
      20: aload_0
      21: getfield      #6                  // Field lastLen:I
      24: iload_1
      25: if_icmpeq     32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: putfield      #5                  // Field pending:Z
      36: aload_0
      37: iload_1
      38: putfield      #6                  // Field lastLen:I
      41: aload_0
      42: areturn

  public com.vladsch.flexmark.util.options.DelimitedBuilder unmark();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #5                  // Field pending:Z
       5: aload_0
       6: aload_0
       7: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
      10: ifnull        23
      13: aload_0
      14: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
      17: invokevirtual #20                 // Method java/lang/StringBuilder.length:()I
      20: goto          24
      23: iconst_0
      24: putfield      #6                  // Field lastLen:I
      27: aload_0
      28: areturn

  public com.vladsch.flexmark.util.options.DelimitedBuilder push();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field delimiter:Ljava/lang/String;
       5: invokevirtual #21                 // Method push:(Ljava/lang/String;)Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
       8: areturn

  public com.vladsch.flexmark.util.options.DelimitedBuilder push(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method unmark:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
       4: pop
       5: aload_0
       6: getfield      #7                  // Field delimiterStack:Ljava/util/Stack;
       9: ifnonnull     23
      12: aload_0
      13: new           #22                 // class java/util/Stack
      16: dup
      17: invokespecial #23                 // Method java/util/Stack."<init>":()V
      20: putfield      #7                  // Field delimiterStack:Ljava/util/Stack;
      23: aload_0
      24: getfield      #7                  // Field delimiterStack:Ljava/util/Stack;
      27: aload_0
      28: getfield      #8                  // Field delimiter:Ljava/lang/String;
      31: invokevirtual #24                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: aload_0
      36: aload_1
      37: putfield      #8                  // Field delimiter:Ljava/lang/String;
      40: aload_0
      41: areturn

  public com.vladsch.flexmark.util.options.DelimitedBuilder pop();
    Code:
       0: aload_0
       1: getfield      #7                  // Field delimiterStack:Ljava/util/Stack;
       4: ifnull        17
       7: aload_0
       8: getfield      #7                  // Field delimiterStack:Ljava/util/Stack;
      11: invokevirtual #12                 // Method java/util/Stack.isEmpty:()Z
      14: ifeq          27
      17: new           #13                 // class java/lang/IllegalStateException
      20: dup
      21: ldc           #25                 // String Nothing on the delimiter stack
      23: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: aload_0
      29: getfield      #7                  // Field delimiterStack:Ljava/util/Stack;
      32: invokevirtual #26                 // Method java/util/Stack.pop:()Ljava/lang/Object;
      35: checkcast     #27                 // class java/lang/String
      38: putfield      #8                  // Field delimiter:Ljava/lang/String;
      41: aload_0
      42: areturn

  private void doPending();
    Code:
       0: aload_0
       1: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
       4: ifnonnull     18
       7: aload_0
       8: new           #9                  // class java/lang/StringBuilder
      11: dup
      12: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      15: putfield      #11                 // Field out:Ljava/lang/StringBuilder;
      18: aload_0
      19: getfield      #5                  // Field pending:Z
      22: ifeq          42
      25: aload_0
      26: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #8                  // Field delimiter:Ljava/lang/String;
      33: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: pop
      37: aload_0
      38: iconst_0
      39: putfield      #5                  // Field pending:Z
      42: return

  private com.vladsch.flexmark.util.options.DelimitedBuilder had();
    Code:
       0: aload_0
       1: areturn

  public com.vladsch.flexmark.util.options.DelimitedBuilder append(char);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method doPending:()V
       4: aload_0
       5: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
       8: iload_1
       9: invokevirtual #31                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      12: pop
      13: aload_0
      14: invokespecial #32                 // Method had:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      17: areturn

  public com.vladsch.flexmark.util.options.DelimitedBuilder append(int);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method doPending:()V
       4: aload_0
       5: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
       8: iload_1
       9: invokevirtual #33                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      12: pop
      13: aload_0
      14: invokespecial #32                 // Method had:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      17: areturn

  public com.vladsch.flexmark.util.options.DelimitedBuilder append(boolean);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method doPending:()V
       4: aload_0
       5: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
       8: iload_1
       9: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      12: pop
      13: aload_0
      14: invokespecial #32                 // Method had:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      17: areturn

  public com.vladsch.flexmark.util.options.DelimitedBuilder append(long);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method doPending:()V
       4: aload_0
       5: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
       8: lload_1
       9: invokevirtual #35                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      12: pop
      13: aload_0
      14: invokespecial #32                 // Method had:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      17: areturn

  public com.vladsch.flexmark.util.options.DelimitedBuilder append(float);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method doPending:()V
       4: aload_0
       5: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
       8: fload_1
       9: invokevirtual #36                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
      12: pop
      13: aload_0
      14: invokespecial #32                 // Method had:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      17: areturn

  public com.vladsch.flexmark.util.options.DelimitedBuilder append(double);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method doPending:()V
       4: aload_0
       5: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
       8: dload_1
       9: invokevirtual #37                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      12: pop
      13: aload_0
      14: invokespecial #32                 // Method had:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      17: areturn

  public com.vladsch.flexmark.util.options.DelimitedBuilder append(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #38                 // Method java/lang/String.isEmpty:()Z
       4: ifne          20
       7: aload_0
       8: invokespecial #30                 // Method doPending:()V
      11: aload_0
      12: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
      15: aload_1
      16: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: pop
      20: aload_0
      21: invokespecial #32                 // Method had:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      24: areturn

  public com.vladsch.flexmark.util.options.DelimitedBuilder append(java.lang.String, int, int);
    Code:
       0: iload_2
       1: iload_3
       2: if_icmpge     20
       5: aload_0
       6: invokespecial #30                 // Method doPending:()V
       9: aload_0
      10: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
      13: aload_1
      14: iload_2
      15: iload_3
      16: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
      19: pop
      20: aload_0
      21: invokespecial #32                 // Method had:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      24: areturn

  public com.vladsch.flexmark.util.options.DelimitedBuilder append(java.lang.CharSequence);
    Code:
       0: aload_1
       1: invokeinterface #40,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       6: ifle          22
       9: aload_0
      10: invokespecial #30                 // Method doPending:()V
      13: aload_0
      14: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
      17: aload_1
      18: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      21: pop
      22: aload_0
      23: invokespecial #32                 // Method had:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      26: areturn

  public com.vladsch.flexmark.util.options.DelimitedBuilder append(java.lang.CharSequence, int, int);
    Code:
       0: iload_2
       1: iload_3
       2: if_icmpge     20
       5: aload_0
       6: invokespecial #30                 // Method doPending:()V
       9: aload_0
      10: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
      13: aload_1
      14: iload_2
      15: iload_3
      16: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
      19: pop
      20: aload_0
      21: invokespecial #32                 // Method had:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      24: areturn

  public com.vladsch.flexmark.util.options.DelimitedBuilder append(char[]);
    Code:
       0: aload_1
       1: arraylength
       2: ifle          18
       5: aload_0
       6: invokespecial #30                 // Method doPending:()V
       9: aload_0
      10: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
      13: aload_1
      14: invokevirtual #42                 // Method java/lang/StringBuilder.append:([C)Ljava/lang/StringBuilder;
      17: pop
      18: aload_0
      19: invokespecial #32                 // Method had:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      22: areturn

  public com.vladsch.flexmark.util.options.DelimitedBuilder append(char[], int, int);
    Code:
       0: iload_2
       1: iload_3
       2: if_icmpge     20
       5: aload_0
       6: invokespecial #30                 // Method doPending:()V
       9: aload_0
      10: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
      13: aload_1
      14: iload_2
      15: iload_3
      16: invokevirtual #43                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
      19: pop
      20: aload_0
      21: invokespecial #32                 // Method had:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      24: areturn

  public <V> com.vladsch.flexmark.util.options.DelimitedBuilder appendAll(V[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #44                 // Method appendAll:([Ljava/lang/Object;II)Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
       8: areturn

  public <V> com.vladsch.flexmark.util.options.DelimitedBuilder appendAll(V[], int, int);
    Code:
       0: iload_2
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     36
       9: aload_1
      10: iload         4
      12: aaload
      13: astore        5
      15: aload_0
      16: aload         5
      18: invokevirtual #45                 // Method java/lang/Object.toString:()Ljava/lang/String;
      21: invokevirtual #46                 // Method append:(Ljava/lang/String;)Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      24: pop
      25: aload_0
      26: invokevirtual #47                 // Method mark:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      29: pop
      30: iinc          4, 1
      33: goto          3
      36: aload_0
      37: areturn

  public <V> com.vladsch.flexmark.util.options.DelimitedBuilder appendAll(java.lang.String, V[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: aload_2
       5: arraylength
       6: invokevirtual #48                 // Method appendAll:(Ljava/lang/String;[Ljava/lang/Object;II)Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
       9: areturn

  public <V> com.vladsch.flexmark.util.options.DelimitedBuilder appendAll(java.lang.String, V[], int, int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
       4: ifnull        17
       7: aload_0
       8: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
      11: invokevirtual #20                 // Method java/lang/StringBuilder.length:()I
      14: goto          18
      17: iconst_0
      18: istore        5
      20: aload_0
      21: aload_1
      22: invokevirtual #21                 // Method push:(Ljava/lang/String;)Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      25: pop
      26: aload_0
      27: aload_2
      28: iload_3
      29: iload         4
      31: invokevirtual #44                 // Method appendAll:([Ljava/lang/Object;II)Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      34: pop
      35: aload_0
      36: invokevirtual #49                 // Method pop:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      39: pop
      40: iload         5
      42: aload_0
      43: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
      46: ifnull        59
      49: aload_0
      50: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
      53: invokevirtual #20                 // Method java/lang/StringBuilder.length:()I
      56: goto          60
      59: iconst_0
      60: if_icmpeq     71
      63: aload_0
      64: invokevirtual #47                 // Method mark:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      67: pop
      68: goto          76
      71: aload_0
      72: invokevirtual #19                 // Method unmark:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      75: pop
      76: aload_0
      77: areturn

  public <V> com.vladsch.flexmark.util.options.DelimitedBuilder appendAll(java.util.List<? extends V>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: invokeinterface #50,  1           // InterfaceMethod java/util/List.size:()I
       9: invokevirtual #51                 // Method appendAll:(Ljava/util/List;II)Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      12: areturn

  public <V> com.vladsch.flexmark.util.options.DelimitedBuilder appendAll(java.util.List<? extends V>, int, int);
    Code:
       0: iload_2
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     40
       9: aload_1
      10: iload         4
      12: invokeinterface #52,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      17: astore        5
      19: aload_0
      20: aload         5
      22: invokevirtual #45                 // Method java/lang/Object.toString:()Ljava/lang/String;
      25: invokevirtual #46                 // Method append:(Ljava/lang/String;)Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      28: pop
      29: aload_0
      30: invokevirtual #47                 // Method mark:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      33: pop
      34: iinc          4, 1
      37: goto          3
      40: aload_0
      41: areturn

  public <V> com.vladsch.flexmark.util.options.DelimitedBuilder appendAll(java.lang.String, java.util.List<? extends V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: aload_2
       5: invokeinterface #50,  1           // InterfaceMethod java/util/List.size:()I
      10: invokevirtual #53                 // Method appendAll:(Ljava/lang/String;Ljava/util/List;II)Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      13: areturn

  public <V> com.vladsch.flexmark.util.options.DelimitedBuilder appendAll(java.lang.String, java.util.List<? extends V>, int, int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
       4: ifnull        17
       7: aload_0
       8: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
      11: invokevirtual #20                 // Method java/lang/StringBuilder.length:()I
      14: goto          18
      17: iconst_0
      18: istore        5
      20: aload_0
      21: aload_1
      22: invokevirtual #21                 // Method push:(Ljava/lang/String;)Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      25: pop
      26: aload_0
      27: aload_2
      28: iload_3
      29: iload         4
      31: invokevirtual #51                 // Method appendAll:(Ljava/util/List;II)Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      34: pop
      35: aload_0
      36: invokevirtual #49                 // Method pop:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      39: pop
      40: iload         5
      42: aload_0
      43: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
      46: ifnull        59
      49: aload_0
      50: getfield      #11                 // Field out:Ljava/lang/StringBuilder;
      53: invokevirtual #20                 // Method java/lang/StringBuilder.length:()I
      56: goto          60
      59: iconst_0
      60: if_icmpeq     71
      63: aload_0
      64: invokevirtual #47                 // Method mark:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      67: pop
      68: goto          76
      71: aload_0
      72: invokevirtual #19                 // Method unmark:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      75: pop
      76: aload_0
      77: areturn
}
