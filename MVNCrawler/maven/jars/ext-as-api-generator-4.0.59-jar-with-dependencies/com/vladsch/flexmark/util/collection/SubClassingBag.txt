Compiled from "SubClassingBag.java"
public class com.vladsch.flexmark.util.collection.SubClassingBag<T> {
  private final com.vladsch.flexmark.util.collection.ClassificationBag<java.lang.Class, T> myItems;

  private final java.util.HashMap<java.lang.Class, java.util.BitSet> mySubClassMap;

  public com.vladsch.flexmark.util.collection.SubClassingBag(com.vladsch.flexmark.util.collection.ClassificationBag<java.lang.Class, T>, java.util.HashMap<java.lang.Class, java.util.List<java.lang.Class>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field myItems:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
       9: aload_0
      10: new           #3                  // class java/util/HashMap
      13: dup
      14: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      17: putfield      #5                  // Field mySubClassMap:Ljava/util/HashMap;
      20: aload_2
      21: invokevirtual #6                  // Method java/util/HashMap.keySet:()Ljava/util/Set;
      24: invokeinterface #7,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: astore_3
      30: aload_3
      31: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          95
      39: aload_3
      40: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #10                 // class java/lang/Class
      48: astore        4
      50: aload_2
      51: aload         4
      53: invokevirtual #11                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #12                 // class java/util/List
      59: astore        5
      61: aload_0
      62: getfield      #2                  // Field myItems:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
      65: aload         5
      67: invokevirtual #13                 // Method com/vladsch/flexmark/util/collection/ClassificationBag.categoriesBitSet:(Ljava/util/Collection;)Ljava/util/BitSet;
      70: astore        6
      72: aload         6
      74: invokevirtual #14                 // Method java/util/BitSet.isEmpty:()Z
      77: ifne          92
      80: aload_0
      81: getfield      #5                  // Field mySubClassMap:Ljava/util/HashMap;
      84: aload         4
      86: aload         6
      88: invokevirtual #15                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      91: pop
      92: goto          30
      95: return

  public com.vladsch.flexmark.util.collection.OrderedSet<T> getItems();
    Code:
       0: aload_0
       1: getfield      #2                  // Field myItems:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
       4: invokevirtual #16                 // Method com/vladsch/flexmark/util/collection/ClassificationBag.getItems:()Lcom/vladsch/flexmark/util/collection/OrderedSet;
       7: areturn

  public boolean contains(T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field myItems:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
       4: aload_1
       5: invokevirtual #17                 // Method com/vladsch/flexmark/util/collection/ClassificationBag.contains:(Ljava/lang/Object;)Z
       8: ireturn

  public boolean containsType(java.lang.Class);
    Code:
       0: aload_0
       1: getfield      #2                  // Field myItems:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
       4: aload_1
       5: invokevirtual #18                 // Method com/vladsch/flexmark/util/collection/ClassificationBag.containsCategory:(Ljava/lang/Object;)Z
       8: ireturn

  public java.util.BitSet getTypeSet(java.lang.Class);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mySubClassMap:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #11                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #19                 // class java/util/BitSet
      11: areturn

  public int getTypeCount(java.lang.Class);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mySubClassMap:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #11                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #19                 // class java/util/BitSet
      11: astore_2
      12: aload_2
      13: ifnonnull     20
      16: iconst_0
      17: goto          24
      20: aload_2
      21: invokevirtual #20                 // Method java/util/BitSet.cardinality:()I
      24: ireturn

  public final <X> com.vladsch.flexmark.util.collection.iteration.ReversibleIterable<X> itemsOfType(java.lang.Class<X>, java.lang.Class...);
    Code:
       0: aload_0
       1: getfield      #2                  // Field myItems:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
       4: aload_1
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokevirtual #21                 // Method typeBitSet:(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/util/BitSet;
      11: invokevirtual #22                 // Method com/vladsch/flexmark/util/collection/ClassificationBag.getCategoryItems:(Ljava/lang/Class;Ljava/util/BitSet;)Lcom/vladsch/flexmark/util/collection/iteration/ReversibleIterable;
      14: areturn

  public final <X> com.vladsch.flexmark.util.collection.iteration.ReversibleIterable<X> itemsOfType(java.lang.Class<X>, java.util.Collection<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field myItems:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
       4: aload_1
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokevirtual #23                 // Method typeBitSet:(Ljava/lang/Class;Ljava/util/Collection;)Ljava/util/BitSet;
      11: invokevirtual #22                 // Method com/vladsch/flexmark/util/collection/ClassificationBag.getCategoryItems:(Ljava/lang/Class;Ljava/util/BitSet;)Lcom/vladsch/flexmark/util/collection/iteration/ReversibleIterable;
      14: areturn

  public final <X> com.vladsch.flexmark.util.collection.iteration.ReversibleIterable<X> reversedItemsOfType(java.lang.Class<X>, java.lang.Class...);
    Code:
       0: aload_0
       1: getfield      #2                  // Field myItems:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
       4: aload_1
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokevirtual #21                 // Method typeBitSet:(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/util/BitSet;
      11: invokevirtual #24                 // Method com/vladsch/flexmark/util/collection/ClassificationBag.getCategoryItemsReversed:(Ljava/lang/Class;Ljava/util/BitSet;)Lcom/vladsch/flexmark/util/collection/iteration/ReversibleIterable;
      14: areturn

  public final <X> com.vladsch.flexmark.util.collection.iteration.ReversibleIterable<X> reversedItemsOfType(java.lang.Class<X>, java.util.Collection<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field myItems:Lcom/vladsch/flexmark/util/collection/ClassificationBag;
       4: aload_1
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokevirtual #23                 // Method typeBitSet:(Ljava/lang/Class;Ljava/util/Collection;)Ljava/util/BitSet;
      11: invokevirtual #24                 // Method com/vladsch/flexmark/util/collection/ClassificationBag.getCategoryItemsReversed:(Ljava/lang/Class;Ljava/util/BitSet;)Lcom/vladsch/flexmark/util/collection/iteration/ReversibleIterable;
      14: areturn

  public final java.util.BitSet typeBitSet(java.lang.Class<?>, java.lang.Class...);
    Code:
       0: new           #19                 // class java/util/BitSet
       3: dup
       4: invokespecial #25                 // Method java/util/BitSet."<init>":()V
       7: astore_3
       8: aload_2
       9: astore        4
      11: aload         4
      13: arraylength
      14: istore        5
      16: iconst_0
      17: istore        6
      19: iload         6
      21: iload         5
      23: if_icmpge     76
      26: aload         4
      28: iload         6
      30: aaload
      31: astore        7
      33: aload_1
      34: aload         7
      36: invokevirtual #26                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      39: ifeq          70
      42: aload_0
      43: getfield      #5                  // Field mySubClassMap:Ljava/util/HashMap;
      46: aload         7
      48: invokevirtual #27                 // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      51: ifeq          70
      54: aload_3
      55: aload_0
      56: getfield      #5                  // Field mySubClassMap:Ljava/util/HashMap;
      59: aload         7
      61: invokevirtual #11                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      64: checkcast     #19                 // class java/util/BitSet
      67: invokevirtual #28                 // Method java/util/BitSet.or:(Ljava/util/BitSet;)V
      70: iinc          6, 1
      73: goto          19
      76: aload_3
      77: areturn

  public final java.util.BitSet typeBitSet(java.lang.Class<?>, java.util.Collection<java.lang.Class<?>>);
    Code:
       0: new           #19                 // class java/util/BitSet
       3: dup
       4: invokespecial #25                 // Method java/util/BitSet."<init>":()V
       7: astore_3
       8: aload_2
       9: invokeinterface #29,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore        4
      16: aload         4
      18: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          78
      26: aload         4
      28: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #10                 // class java/lang/Class
      36: astore        5
      38: aload_1
      39: aload         5
      41: invokevirtual #26                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      44: ifeq          75
      47: aload_0
      48: getfield      #5                  // Field mySubClassMap:Ljava/util/HashMap;
      51: aload         5
      53: invokevirtual #27                 // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      56: ifeq          75
      59: aload_3
      60: aload_0
      61: getfield      #5                  // Field mySubClassMap:Ljava/util/HashMap;
      64: aload         5
      66: invokevirtual #11                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      69: checkcast     #19                 // class java/util/BitSet
      72: invokevirtual #28                 // Method java/util/BitSet.or:(Ljava/util/BitSet;)V
      75: goto          16
      78: aload_3
      79: areturn
}
