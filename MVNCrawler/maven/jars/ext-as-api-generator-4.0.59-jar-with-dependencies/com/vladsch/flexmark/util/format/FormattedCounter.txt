Compiled from "FormattedCounter.java"
public class com.vladsch.flexmark.util.format.FormattedCounter {
  private final com.vladsch.flexmark.util.format.NumberFormat myFormat;

  private final java.lang.Boolean myLowercase;

  private final java.lang.String myDelimiter;

  private int myCount;

  public com.vladsch.flexmark.util.format.FormattedCounter(com.vladsch.flexmark.util.format.NumberFormat, java.lang.Boolean, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field myFormat:Lcom/vladsch/flexmark/util/format/NumberFormat;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field myLowercase:Ljava/lang/Boolean;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field myDelimiter:Ljava/lang/String;
      19: aload_0
      20: invokevirtual #5                  // Method reset:()V
      23: return

  public void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #6                  // Field myCount:I
       5: return

  public int getCount();
    Code:
       0: aload_0
       1: getfield      #6                  // Field myCount:I
       4: ireturn

  public int nextCount();
    Code:
       0: aload_0
       1: dup
       2: getfield      #6                  // Field myCount:I
       5: iconst_1
       6: iadd
       7: dup_x1
       8: putfield      #6                  // Field myCount:I
      11: ireturn

  public java.lang.String getFormatted(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field myFormat:Lcom/vladsch/flexmark/util/format/NumberFormat;
       4: aload_0
       5: getfield      #6                  // Field myCount:I
       8: iconst_1
       9: newarray       int
      11: dup
      12: iconst_0
      13: iconst_1
      14: iastore
      15: invokestatic  #7                  // Method com/vladsch/flexmark/util/Utils.minLimit:(I[I)I
      18: invokestatic  #8                  // Method com/vladsch/flexmark/util/format/NumberFormat.getFormat:(Lcom/vladsch/flexmark/util/format/NumberFormat;I)Ljava/lang/String;
      21: astore_2
      22: aload_0
      23: getfield      #3                  // Field myLowercase:Ljava/lang/Boolean;
      26: ifnonnull     33
      29: aload_2
      30: goto          54
      33: aload_0
      34: getfield      #3                  // Field myLowercase:Ljava/lang/Boolean;
      37: invokevirtual #9                  // Method java/lang/Boolean.booleanValue:()Z
      40: ifeq          50
      43: aload_2
      44: invokevirtual #10                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      47: goto          54
      50: aload_2
      51: invokevirtual #11                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      54: astore_3
      55: iload_1
      56: ifeq          100
      59: aload_0
      60: getfield      #4                  // Field myDelimiter:Ljava/lang/String;
      63: ifnull        100
      66: aload_0
      67: getfield      #4                  // Field myDelimiter:Ljava/lang/String;
      70: invokevirtual #12                 // Method java/lang/String.isEmpty:()Z
      73: ifne          100
      76: new           #13                 // class java/lang/StringBuilder
      79: dup
      80: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      83: aload_3
      84: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_0
      88: getfield      #4                  // Field myDelimiter:Ljava/lang/String;
      91: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: goto          101
     100: aload_3
     101: areturn
}
