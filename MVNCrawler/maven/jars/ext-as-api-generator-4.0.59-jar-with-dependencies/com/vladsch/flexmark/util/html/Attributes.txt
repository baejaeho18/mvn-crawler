Compiled from "Attributes.java"
public class com.vladsch.flexmark.util.html.Attributes {
  public static final com.vladsch.flexmark.util.html.Attributes EMPTY;

  private java.util.LinkedHashMap<java.lang.String, com.vladsch.flexmark.util.html.Attribute> myAttributes;

  public com.vladsch.flexmark.util.html.Attributes();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
       9: return

  public com.vladsch.flexmark.util.html.Attributes(com.vladsch.flexmark.util.html.Attributes);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      13: ifnonnull     20
      16: aconst_null
      17: goto          31
      20: new           #3                  // class java/util/LinkedHashMap
      23: dup
      24: aload_1
      25: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      28: invokespecial #4                  // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      31: putfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      34: return

  protected java.util.LinkedHashMap<java.lang.String, com.vladsch.flexmark.util.html.Attribute> getAttributes();
    Code:
       0: aload_0
       1: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
       4: ifnonnull     18
       7: aload_0
       8: new           #3                  // class java/util/LinkedHashMap
      11: dup
      12: invokespecial #5                  // Method java/util/LinkedHashMap."<init>":()V
      15: putfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      18: aload_0
      19: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      22: areturn

  public com.vladsch.flexmark.util.html.Attribute get(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
       4: ifnull        20
       7: aload_1
       8: ifnull        20
      11: aload_1
      12: invokeinterface #6,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      17: ifne          22
      20: aconst_null
      21: areturn
      22: aload_1
      23: instanceof    #7                  // class java/lang/String
      26: ifeq          36
      29: aload_1
      30: checkcast     #7                  // class java/lang/String
      33: goto          40
      36: aload_1
      37: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      40: astore_2
      41: aload_0
      42: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      45: aload_2
      46: invokevirtual #9                  // Method java/util/LinkedHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #10                 // class com/vladsch/flexmark/util/html/Attribute
      52: areturn

  public java.lang.String getValue(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
       4: ifnull        20
       7: aload_1
       8: ifnull        20
      11: aload_1
      12: invokeinterface #6,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      17: ifne          23
      20: ldc           #11                 // String
      22: areturn
      23: aload_1
      24: instanceof    #7                  // class java/lang/String
      27: ifeq          37
      30: aload_1
      31: checkcast     #7                  // class java/lang/String
      34: goto          41
      37: aload_1
      38: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      41: astore_2
      42: aload_0
      43: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      46: aload_2
      47: invokevirtual #9                  // Method java/util/LinkedHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      50: checkcast     #10                 // class com/vladsch/flexmark/util/html/Attribute
      53: astore_3
      54: aload_3
      55: ifnonnull     61
      58: ldc           #11                 // String
      60: areturn
      61: aload_3
      62: invokeinterface #12,  1           // InterfaceMethod com/vladsch/flexmark/util/html/Attribute.getValue:()Ljava/lang/String;
      67: areturn

  public com.vladsch.flexmark.util.html.Attribute replaceValue(com.vladsch.flexmark.util.html.Attribute);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #13,  1           // InterfaceMethod com/vladsch/flexmark/util/html/Attribute.getName:()Ljava/lang/String;
       7: aload_1
       8: invokeinterface #12,  1           // InterfaceMethod com/vladsch/flexmark/util/html/Attribute.getValue:()Ljava/lang/String;
      13: invokevirtual #14                 // Method replaceValue:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/Attribute;
      16: areturn

  public com.vladsch.flexmark.util.html.Attribute replaceValue(java.lang.CharSequence, java.lang.CharSequence);
    Code:
       0: aload_1
       1: instanceof    #7                  // class java/lang/String
       4: ifeq          14
       7: aload_1
       8: checkcast     #7                  // class java/lang/String
      11: goto          18
      14: aload_1
      15: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      18: astore_3
      19: aload_0
      20: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      23: ifnonnull     36
      26: aload_3
      27: aload_2
      28: invokestatic  #15                 // Method com/vladsch/flexmark/util/html/AttributeImpl.of:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/AttributeImpl;
      31: astore        4
      33: goto          74
      36: aload_0
      37: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      40: aload_3
      41: invokevirtual #9                  // Method java/util/LinkedHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #10                 // class com/vladsch/flexmark/util/html/Attribute
      47: astore        4
      49: aload         4
      51: ifnull        67
      54: aload         4
      56: aload_2
      57: invokeinterface #16,  2           // InterfaceMethod com/vladsch/flexmark/util/html/Attribute.replaceValue:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/Attribute;
      62: astore        4
      64: goto          74
      67: aload_3
      68: aload_2
      69: invokestatic  #15                 // Method com/vladsch/flexmark/util/html/AttributeImpl.of:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/AttributeImpl;
      72: astore        4
      74: aload_0
      75: invokevirtual #17                 // Method getAttributes:()Ljava/util/LinkedHashMap;
      78: aload_3
      79: aload         4
      81: invokevirtual #18                 // Method java/util/LinkedHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: aload         4
      87: areturn

  public com.vladsch.flexmark.util.html.Attribute addValue(com.vladsch.flexmark.util.html.Attribute);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #13,  1           // InterfaceMethod com/vladsch/flexmark/util/html/Attribute.getName:()Ljava/lang/String;
       7: aload_1
       8: invokeinterface #12,  1           // InterfaceMethod com/vladsch/flexmark/util/html/Attribute.getValue:()Ljava/lang/String;
      13: invokevirtual #19                 // Method addValue:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/Attribute;
      16: areturn

  public com.vladsch.flexmark.util.html.Attributes addValues(com.vladsch.flexmark.util.html.Attributes);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method values:()Ljava/util/Collection;
       4: invokeinterface #21,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          49
      19: aload_2
      20: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #10                 // class com/vladsch/flexmark/util/html/Attribute
      28: astore_3
      29: aload_0
      30: aload_3
      31: invokeinterface #13,  1           // InterfaceMethod com/vladsch/flexmark/util/html/Attribute.getName:()Ljava/lang/String;
      36: aload_3
      37: invokeinterface #12,  1           // InterfaceMethod com/vladsch/flexmark/util/html/Attribute.getValue:()Ljava/lang/String;
      42: invokevirtual #19                 // Method addValue:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/Attribute;
      45: pop
      46: goto          10
      49: aload_0
      50: areturn

  public com.vladsch.flexmark.util.html.Attribute addValue(java.lang.CharSequence, java.lang.CharSequence);
    Code:
       0: aload_1
       1: instanceof    #7                  // class java/lang/String
       4: ifeq          14
       7: aload_1
       8: checkcast     #7                  // class java/lang/String
      11: goto          18
      14: aload_1
      15: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      18: astore        4
      20: aload_0
      21: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      24: ifnonnull     36
      27: aload_1
      28: aload_2
      29: invokestatic  #15                 // Method com/vladsch/flexmark/util/html/AttributeImpl.of:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/AttributeImpl;
      32: astore_3
      33: goto          71
      36: aload_0
      37: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      40: aload         4
      42: invokevirtual #9                  // Method java/util/LinkedHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #10                 // class com/vladsch/flexmark/util/html/Attribute
      48: astore_3
      49: aload_3
      50: ifnull        64
      53: aload_3
      54: aload_2
      55: invokeinterface #24,  2           // InterfaceMethod com/vladsch/flexmark/util/html/Attribute.setValue:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/Attribute;
      60: astore_3
      61: goto          71
      64: aload         4
      66: aload_2
      67: invokestatic  #15                 // Method com/vladsch/flexmark/util/html/AttributeImpl.of:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/AttributeImpl;
      70: astore_3
      71: aload_0
      72: invokevirtual #17                 // Method getAttributes:()Ljava/util/LinkedHashMap;
      75: aload         4
      77: aload_3
      78: invokevirtual #18                 // Method java/util/LinkedHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      81: pop
      82: aload_3
      83: areturn

  public com.vladsch.flexmark.util.html.Attribute removeValue(com.vladsch.flexmark.util.html.Attribute);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #13,  1           // InterfaceMethod com/vladsch/flexmark/util/html/Attribute.getName:()Ljava/lang/String;
       7: aload_1
       8: invokeinterface #12,  1           // InterfaceMethod com/vladsch/flexmark/util/html/Attribute.getValue:()Ljava/lang/String;
      13: invokevirtual #25                 // Method removeValue:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/Attribute;
      16: areturn

  public com.vladsch.flexmark.util.html.Attribute remove(com.vladsch.flexmark.util.html.Attribute);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #13,  1           // InterfaceMethod com/vladsch/flexmark/util/html/Attribute.getName:()Ljava/lang/String;
       7: invokevirtual #26                 // Method remove:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/Attribute;
      10: areturn

  public com.vladsch.flexmark.util.html.Attribute removeValue(java.lang.CharSequence, java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
       4: ifnull        20
       7: aload_1
       8: ifnull        20
      11: aload_1
      12: invokeinterface #6,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      17: ifne          22
      20: aconst_null
      21: areturn
      22: aload_1
      23: instanceof    #7                  // class java/lang/String
      26: ifeq          36
      29: aload_1
      30: checkcast     #7                  // class java/lang/String
      33: goto          40
      36: aload_1
      37: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      40: astore_3
      41: aload_0
      42: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      45: aload_3
      46: invokevirtual #9                  // Method java/util/LinkedHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #10                 // class com/vladsch/flexmark/util/html/Attribute
      52: astore        4
      54: aload         4
      56: aload_2
      57: invokeinterface #27,  2           // InterfaceMethod com/vladsch/flexmark/util/html/Attribute.removeValue:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/Attribute;
      62: astore        5
      64: aload_0
      65: invokevirtual #17                 // Method getAttributes:()Ljava/util/LinkedHashMap;
      68: aload_3
      69: aload         5
      71: invokevirtual #18                 // Method java/util/LinkedHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      74: pop
      75: aload         5
      77: areturn

  public boolean contains(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
       4: ifnull        20
       7: aload_1
       8: ifnull        20
      11: aload_1
      12: invokeinterface #6,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: instanceof    #7                  // class java/lang/String
      26: ifeq          36
      29: aload_1
      30: checkcast     #7                  // class java/lang/String
      33: goto          40
      36: aload_1
      37: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      40: astore_2
      41: aload_0
      42: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      45: aload_2
      46: invokevirtual #28                 // Method java/util/LinkedHashMap.containsKey:(Ljava/lang/Object;)Z
      49: ireturn

  public boolean containsValue(java.lang.CharSequence, java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: instanceof    #7                  // class java/lang/String
      13: ifeq          23
      16: aload_1
      17: checkcast     #7                  // class java/lang/String
      20: goto          27
      23: aload_1
      24: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      27: astore_3
      28: aload_0
      29: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      32: aload_3
      33: invokevirtual #9                  // Method java/util/LinkedHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #10                 // class com/vladsch/flexmark/util/html/Attribute
      39: astore        4
      41: aload         4
      43: ifnull        61
      46: aload         4
      48: aload_2
      49: invokeinterface #29,  2           // InterfaceMethod com/vladsch/flexmark/util/html/Attribute.containsValue:(Ljava/lang/CharSequence;)Z
      54: ifeq          61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
       4: ifnull        17
       7: aload_0
       8: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      11: invokevirtual #30                 // Method java/util/LinkedHashMap.isEmpty:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public void clear();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
       5: return

  public java.util.Set<com.vladsch.flexmark.util.sequence.BasedSequence> keySet();
    Code:
       0: aload_0
       1: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
       4: ifnull        17
       7: aload_0
       8: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      11: invokevirtual #31                 // Method java/util/LinkedHashMap.keySet:()Ljava/util/Set;
      14: goto          20
      17: getstatic     #32                 // Field java/util/Collections.EMPTY_SET:Ljava/util/Set;
      20: areturn

  public java.util.Collection<com.vladsch.flexmark.util.html.Attribute> values();
    Code:
       0: aload_0
       1: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
       4: ifnull        17
       7: aload_0
       8: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      11: invokevirtual #33                 // Method java/util/LinkedHashMap.values:()Ljava/util/Collection;
      14: goto          20
      17: getstatic     #34                 // Field java/util/Collections.EMPTY_LIST:Ljava/util/List;
      20: areturn

  public java.util.Set<java.util.Map$Entry<com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.util.html.Attribute>> entrySet();
    Code:
       0: aload_0
       1: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
       4: ifnull        17
       7: aload_0
       8: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      11: invokevirtual #35                 // Method java/util/LinkedHashMap.entrySet:()Ljava/util/Set;
      14: goto          20
      17: getstatic     #32                 // Field java/util/Collections.EMPTY_SET:Ljava/util/Set;
      20: areturn

  public void forEach(com.vladsch.flexmark.util.BiConsumer<java.lang.String, com.vladsch.flexmark.util.html.Attribute>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
       4: ifnull        60
       7: aload_0
       8: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      11: invokevirtual #35                 // Method java/util/LinkedHashMap.entrySet:()Ljava/util/Set;
      14: invokeinterface #36,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          60
      29: aload_2
      30: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #37                 // class java/util/Map$Entry
      38: astore_3
      39: aload_1
      40: aload_3
      41: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      46: aload_3
      47: invokeinterface #39,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      52: invokeinterface #40,  3           // InterfaceMethod com/vladsch/flexmark/util/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      57: goto          20
      60: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
       4: ifnonnull     11
       7: iconst_0
       8: goto          18
      11: aload_0
      12: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      15: invokevirtual #41                 // Method java/util/LinkedHashMap.size:()I
      18: ireturn

  public com.vladsch.flexmark.util.html.Attribute remove(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
       4: ifnull        20
       7: aload_1
       8: ifnull        20
      11: aload_1
      12: invokeinterface #6,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      17: ifne          22
      20: aconst_null
      21: areturn
      22: aload_1
      23: instanceof    #7                  // class java/lang/String
      26: ifeq          36
      29: aload_1
      30: checkcast     #7                  // class java/lang/String
      33: goto          40
      36: aload_1
      37: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      40: astore_2
      41: aload_0
      42: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      45: aload_2
      46: invokevirtual #9                  // Method java/util/LinkedHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #10                 // class com/vladsch/flexmark/util/html/Attribute
      52: astore_3
      53: aload_0
      54: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      57: aload_2
      58: invokevirtual #42                 // Method java/util/LinkedHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: aload_3
      63: areturn

  public void replaceValues(com.vladsch.flexmark.util.html.Attributes);
    Code:
       0: aload_0
       1: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
       4: ifnonnull     25
       7: aload_0
       8: new           #3                  // class java/util/LinkedHashMap
      11: dup
      12: aload_1
      13: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      16: invokespecial #4                  // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      19: putfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      22: goto          36
      25: aload_0
      26: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      29: aload_1
      30: getfield      #2                  // Field myAttributes:Ljava/util/LinkedHashMap;
      33: invokevirtual #43                 // Method java/util/LinkedHashMap.putAll:(Ljava/util/Map;)V
      36: return

  static {};
    Code:
       0: new           #44                 // class com/vladsch/flexmark/util/html/Attributes
       3: dup
       4: invokespecial #45                 // Method "<init>":()V
       7: putstatic     #46                 // Field EMPTY:Lcom/vladsch/flexmark/util/html/Attributes;
      10: return
}
