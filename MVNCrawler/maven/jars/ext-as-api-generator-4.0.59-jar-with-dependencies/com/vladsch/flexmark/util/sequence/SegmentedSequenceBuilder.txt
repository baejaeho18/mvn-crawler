Compiled from "SegmentedSequenceBuilder.java"
public final class com.vladsch.flexmark.util.sequence.SegmentedSequenceBuilder {
  private final java.util.ArrayList<com.vladsch.flexmark.util.sequence.BasedSequence> segments;

  private final com.vladsch.flexmark.util.sequence.BasedSequence base;

  public com.vladsch.flexmark.util.sequence.SegmentedSequenceBuilder(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field segments:Ljava/util/ArrayList;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field base:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      20: return

  public com.vladsch.flexmark.util.sequence.SegmentedSequenceBuilder(com.vladsch.flexmark.util.sequence.BasedSequence, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: iload_2
      10: invokespecial #6                  // Method java/util/ArrayList."<init>":(I)V
      13: putfield      #4                  // Field segments:Ljava/util/ArrayList;
      16: aload_0
      17: aload_1
      18: putfield      #5                  // Field base:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      21: return

  public com.vladsch.flexmark.util.sequence.SegmentedSequenceBuilder append(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: getfield      #4                  // Field segments:Ljava/util/ArrayList;
       4: aload_1
       5: invokevirtual #7                  // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: areturn

  public com.vladsch.flexmark.util.sequence.SegmentedSequenceBuilder append(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #5                  // Field base:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       6: iconst_0
       7: iconst_0
       8: invokestatic  #8                  // Method com/vladsch/flexmark/util/sequence/PrefixedSubSequence.of:(Ljava/lang/String;Lcom/vladsch/flexmark/util/sequence/BasedSequence;II)Lcom/vladsch/flexmark/util/sequence/PrefixedSubSequence;
      11: invokevirtual #9                  // Method append:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/util/sequence/SegmentedSequenceBuilder;
      14: areturn

  public com.vladsch.flexmark.util.sequence.BasedSequence toBasedSequence();
    Code:
       0: aload_0
       1: getfield      #4                  // Field segments:Ljava/util/ArrayList;
       4: aload_0
       5: getfield      #5                  // Field base:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       8: invokestatic  #10                 // Method com/vladsch/flexmark/util/sequence/SegmentedSequence.of:(Ljava/util/List;Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      11: areturn

  public com.vladsch.flexmark.util.sequence.BasedSequence[] toSegments();
    Code:
       0: aload_0
       1: getfield      #4                  // Field segments:Ljava/util/ArrayList;
       4: aload_0
       5: getfield      #4                  // Field segments:Ljava/util/ArrayList;
       8: invokevirtual #11                 // Method java/util/ArrayList.size:()I
      11: anewarray     #12                 // class com/vladsch/flexmark/util/sequence/BasedSequence
      14: invokevirtual #13                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      17: checkcast     #14                 // class "[Lcom/vladsch/flexmark/util/sequence/BasedSequence;"
      20: areturn

  public java.lang.String toString();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #4                  // Field segments:Ljava/util/ArrayList;
       6: invokevirtual #15                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          41
      19: aload_2
      20: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #12                 // class com/vladsch/flexmark/util/sequence/BasedSequence
      28: astore_3
      29: iload_1
      30: aload_3
      31: invokeinterface #18,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
      36: iadd
      37: istore_1
      38: goto          10
      41: new           #19                 // class java/lang/StringBuilder
      44: dup
      45: iload_1
      46: invokespecial #20                 // Method java/lang/StringBuilder."<init>":(I)V
      49: astore_2
      50: aload_0
      51: getfield      #4                  // Field segments:Ljava/util/ArrayList;
      54: invokevirtual #15                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      57: astore_3
      58: aload_3
      59: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      64: ifeq          90
      67: aload_3
      68: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #12                 // class com/vladsch/flexmark/util/sequence/BasedSequence
      76: astore        4
      78: aload         4
      80: aload_2
      81: invokeinterface #21,  2           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.appendTo:(Ljava/lang/StringBuilder;)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      86: pop
      87: goto          58
      90: aload_2
      91: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: areturn
}
