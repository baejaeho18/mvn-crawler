Compiled from "DataSet.java"
public class com.vladsch.flexmark.util.options.DataSet implements com.vladsch.flexmark.util.options.DataHolder {
  protected final java.util.HashMap<com.vladsch.flexmark.util.options.DataKey, java.lang.Object> dataSet;

  public com.vladsch.flexmark.util.options.DataSet();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field dataSet:Ljava/util/HashMap;
      15: return

  public com.vladsch.flexmark.util.options.DataSet(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field dataSet:Ljava/util/HashMap;
      15: aload_0
      16: getfield      #4                  // Field dataSet:Ljava/util/HashMap;
      19: aload_1
      20: invokeinterface #5,  1            // InterfaceMethod com/vladsch/flexmark/util/options/DataHolder.getAll:()Ljava/util/Map;
      25: invokevirtual #6                  // Method java/util/HashMap.putAll:(Ljava/util/Map;)V
      28: return

  public java.util.Map<com.vladsch.flexmark.util.options.DataKey, java.lang.Object> getAll();
    Code:
       0: aload_0
       1: getfield      #4                  // Field dataSet:Ljava/util/HashMap;
       4: areturn

  public java.util.Collection<com.vladsch.flexmark.util.options.DataKey> keySet();
    Code:
       0: aload_0
       1: getfield      #4                  // Field dataSet:Ljava/util/HashMap;
       4: invokevirtual #7                  // Method java/util/HashMap.keySet:()Ljava/util/Set;
       7: areturn

  public boolean contains(com.vladsch.flexmark.util.options.DataKey);
    Code:
       0: aload_0
       1: getfield      #4                  // Field dataSet:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #8                  // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
       8: ireturn

  public <T> T get(com.vladsch.flexmark.util.options.DataKey<T>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field dataSet:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #8                  // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
       8: ifeq          24
      11: aload_1
      12: aload_0
      13: getfield      #4                  // Field dataSet:Ljava/util/HashMap;
      16: aload_1
      17: invokevirtual #9                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: invokevirtual #10                 // Method com/vladsch/flexmark/util/options/DataKey.getValue:(Ljava/lang/Object;)Ljava/lang/Object;
      23: areturn
      24: aload_1
      25: aload_0
      26: invokevirtual #11                 // Method com/vladsch/flexmark/util/options/DataKey.getDefaultValue:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      29: areturn

  public static com.vladsch.flexmark.util.options.DataSet merge(com.vladsch.flexmark.util.options.DataHolder...);
    Code:
       0: new           #12                 // class com/vladsch/flexmark/util/options/DataSet
       3: dup
       4: invokespecial #13                 // Method "<init>":()V
       7: astore_1
       8: aload_0
       9: astore_2
      10: aload_2
      11: arraylength
      12: istore_3
      13: iconst_0
      14: istore        4
      16: iload         4
      18: iload_3
      19: if_icmpge     53
      22: aload_2
      23: iload         4
      25: aaload
      26: astore        5
      28: aload         5
      30: ifnull        47
      33: aload_1
      34: getfield      #4                  // Field dataSet:Ljava/util/HashMap;
      37: aload         5
      39: invokeinterface #5,  1            // InterfaceMethod com/vladsch/flexmark/util/options/DataHolder.getAll:()Ljava/util/Map;
      44: invokevirtual #6                  // Method java/util/HashMap.putAll:(Ljava/util/Map;)V
      47: iinc          4, 1
      50: goto          16
      53: aload_1
      54: areturn

  public com.vladsch.flexmark.util.options.MutableDataHolder toMutable();
    Code:
       0: new           #14                 // class com/vladsch/flexmark/util/options/MutableDataSet
       3: dup
       4: aload_0
       5: invokespecial #15                 // Method com/vladsch/flexmark/util/options/MutableDataSet."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
       8: areturn

  public com.vladsch.flexmark.util.options.DataHolder toImmutable();
    Code:
       0: aload_0
       1: areturn
}
