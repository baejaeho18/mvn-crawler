Compiled from "Escaping.java"
final class com.vladsch.flexmark.util.html.Escaping$5 implements com.vladsch.flexmark.util.html.Escaping$Replacer {
  com.vladsch.flexmark.util.html.Escaping$5();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void replace(java.lang.String, java.lang.StringBuilder);
    Code:
       0: aload_1
       1: ldc           #2                  // String %
       3: invokevirtual #3                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          47
       9: aload_1
      10: invokevirtual #4                  // Method java/lang/String.length:()I
      13: iconst_3
      14: if_icmpne     26
      17: aload_2
      18: aload_1
      19: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: pop
      23: goto          125
      26: aload_2
      27: ldc           #6                  // String %25
      29: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: pop
      33: aload_2
      34: aload_1
      35: iconst_1
      36: aload_1
      37: invokevirtual #4                  // Method java/lang/String.length:()I
      40: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
      43: pop
      44: goto          125
      47: aload_1
      48: ldc           #8                  // String UTF-8
      50: invokestatic  #9                  // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      53: invokevirtual #10                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      56: astore_3
      57: aload_3
      58: astore        4
      60: aload         4
      62: arraylength
      63: istore        5
      65: iconst_0
      66: istore        6
      68: iload         6
      70: iload         5
      72: if_icmpge     125
      75: aload         4
      77: iload         6
      79: baload
      80: istore        7
      82: aload_2
      83: bipush        37
      85: invokevirtual #11                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      88: pop
      89: aload_2
      90: getstatic     #12                 // Field com/vladsch/flexmark/util/html/Escaping.HEX_DIGITS:[C
      93: iload         7
      95: iconst_4
      96: ishr
      97: bipush        15
      99: iand
     100: caload
     101: invokevirtual #11                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     104: pop
     105: aload_2
     106: getstatic     #12                 // Field com/vladsch/flexmark/util/html/Escaping.HEX_DIGITS:[C
     109: iload         7
     111: bipush        15
     113: iand
     114: caload
     115: invokevirtual #11                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     118: pop
     119: iinc          6, 1
     122: goto          68
     125: return

  public void replace(com.vladsch.flexmark.util.sequence.BasedSequence, int, int, com.vladsch.flexmark.util.sequence.ReplacedTextMapper);
    Code:
       0: aload_1
       1: iload_2
       2: iload_3
       3: invokeinterface #13,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       8: astore        5
      10: aload         5
      12: ldc           #2                  // String %
      14: invokeinterface #14,  2           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.startsWith:(Ljava/lang/CharSequence;)Z
      19: ifeq          72
      22: aload         5
      24: invokeinterface #15,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
      29: iconst_3
      30: if_icmpne     43
      33: aload         4
      35: iload_2
      36: iload_3
      37: invokevirtual #16                 // Method com/vladsch/flexmark/util/sequence/ReplacedTextMapper.addOriginalText:(II)V
      40: goto          186
      43: aload         4
      45: iload_2
      46: iload_2
      47: iconst_1
      48: iadd
      49: ldc           #6                  // String %25
      51: getstatic     #17                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      54: invokestatic  #18                 // Method com/vladsch/flexmark/util/sequence/PrefixedSubSequence.of:(Ljava/lang/String;Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/util/sequence/PrefixedSubSequence;
      57: invokevirtual #19                 // Method com/vladsch/flexmark/util/sequence/ReplacedTextMapper.addReplacedText:(IILcom/vladsch/flexmark/util/sequence/BasedSequence;)V
      60: aload         4
      62: iload_2
      63: iconst_1
      64: iadd
      65: iload_3
      66: invokevirtual #16                 // Method com/vladsch/flexmark/util/sequence/ReplacedTextMapper.addOriginalText:(II)V
      69: goto          186
      72: aload         5
      74: invokevirtual #20                 // Method java/lang/Object.toString:()Ljava/lang/String;
      77: ldc           #8                  // String UTF-8
      79: invokestatic  #9                  // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      82: invokevirtual #10                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      85: astore        6
      87: new           #21                 // class java/lang/StringBuilder
      90: dup
      91: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      94: astore        7
      96: aload         6
      98: astore        8
     100: aload         8
     102: arraylength
     103: istore        9
     105: iconst_0
     106: istore        10
     108: iload         10
     110: iload         9
     112: if_icmpge     168
     115: aload         8
     117: iload         10
     119: baload
     120: istore        11
     122: aload         7
     124: bipush        37
     126: invokevirtual #11                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     129: pop
     130: aload         7
     132: getstatic     #12                 // Field com/vladsch/flexmark/util/html/Escaping.HEX_DIGITS:[C
     135: iload         11
     137: iconst_4
     138: ishr
     139: bipush        15
     141: iand
     142: caload
     143: invokevirtual #11                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     146: pop
     147: aload         7
     149: getstatic     #12                 // Field com/vladsch/flexmark/util/html/Escaping.HEX_DIGITS:[C
     152: iload         11
     154: bipush        15
     156: iand
     157: caload
     158: invokevirtual #11                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     161: pop
     162: iinc          10, 1
     165: goto          108
     168: aload         4
     170: iload_2
     171: iload_3
     172: aload         7
     174: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     177: getstatic     #17                 // Field com/vladsch/flexmark/util/sequence/BasedSequence.NULL:Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     180: invokestatic  #18                 // Method com/vladsch/flexmark/util/sequence/PrefixedSubSequence.of:(Ljava/lang/String;Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/util/sequence/PrefixedSubSequence;
     183: invokevirtual #19                 // Method com/vladsch/flexmark/util/sequence/ReplacedTextMapper.addReplacedText:(IILcom/vladsch/flexmark/util/sequence/BasedSequence;)V
     186: return
}
