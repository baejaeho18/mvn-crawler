Compiled from "OptionsParser.java"
public class com.vladsch.flexmark.util.options.OptionsParser<T> implements com.vladsch.flexmark.util.options.OptionParser<T> {
  public static final java.lang.String OPTION_0_IS_AMBIGUOUS;

  public static final java.lang.String KEY_OPTION_0_IS_AMBIGUOUS;

  public static final java.lang.String OPTION_0_DOES_NOT_MATCH;

  public static final java.lang.String KEY_OPTION_0_DOES_NOT_MATCH;

  private final java.lang.String myOptionName;

  private final com.vladsch.flexmark.util.options.OptionParser<T>[] myParsableOptions;

  private final char myOptionDelimiter;

  private final char myOptionValueDelimiter;

  public com.vladsch.flexmark.util.options.OptionsParser(java.lang.String, com.vladsch.flexmark.util.options.OptionParser<T>[], char, char);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field myOptionName:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field myParsableOptions:[Lcom/vladsch/flexmark/util/options/OptionParser;
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field myOptionDelimiter:C
      19: aload_0
      20: iload         4
      22: putfield      #5                  // Field myOptionValueDelimiter:C
      25: return

  public java.lang.String getOptionName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field myOptionName:Ljava/lang/String;
       4: areturn

  public com.vladsch.flexmark.util.Pair<T, java.util.List<com.vladsch.flexmark.util.options.ParsedOption<T>>> parseOption(com.vladsch.flexmark.util.sequence.BasedSequence, T, com.vladsch.flexmark.util.options.MessageProvider);
    Code:
       0: aconst_null
       1: astore        4
       3: aload_1
       4: aload_0
       5: getfield      #4                  // Field myOptionDelimiter:C
       8: iconst_0
       9: bipush        6
      11: invokeinterface #7,  4            // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.split:(CII)[Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      16: astore        5
      18: aload_2
      19: astore        6
      21: aload_3
      22: ifnonnull     29
      25: getstatic     #8                  // Field com/vladsch/flexmark/util/options/MessageProvider.DEFAULT:Lcom/vladsch/flexmark/util/options/MessageProvider;
      28: astore_3
      29: new           #9                  // class java/util/ArrayList
      32: dup
      33: aload         5
      35: arraylength
      36: invokespecial #10                 // Method java/util/ArrayList."<init>":(I)V
      39: astore        7
      41: aload         5
      43: astore        8
      45: aload         8
      47: arraylength
      48: istore        9
      50: iconst_0
      51: istore        10
      53: iload         10
      55: iload         9
      57: if_icmpge     496
      60: aload         8
      62: iload         10
      64: aaload
      65: astore        11
      67: aconst_null
      68: astore        12
      70: aconst_null
      71: astore        13
      73: aload         11
      75: aload_0
      76: getfield      #5                  // Field myOptionValueDelimiter:C
      79: iconst_2
      80: iconst_4
      81: invokeinterface #7,  4            // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.split:(CII)[Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      86: astore        14
      88: aload         14
      90: arraylength
      91: ifne          97
      94: goto          490
      97: aload         14
      99: iconst_0
     100: aaload
     101: astore        15
     103: aload         14
     105: arraylength
     106: iconst_1
     107: if_icmple     117
     110: aload         14
     112: iconst_1
     113: aaload
     114: goto          138
     117: aload         15
     119: aload         15
     121: invokeinterface #11,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
     126: aload         15
     128: invokeinterface #11,  1           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
     133: invokeinterface #12,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     138: astore        16
     140: aload_0
     141: getfield      #3                  // Field myParsableOptions:[Lcom/vladsch/flexmark/util/options/OptionParser;
     144: astore        17
     146: aload         17
     148: arraylength
     149: istore        18
     151: iconst_0
     152: istore        19
     154: iload         19
     156: iload         18
     158: if_icmpge     305
     161: aload         17
     163: iload         19
     165: aaload
     166: astore        20
     168: aload         20
     170: invokeinterface #13,  1           // InterfaceMethod com/vladsch/flexmark/util/options/OptionParser.getOptionName:()Ljava/lang/String;
     175: aload         15
     177: invokevirtual #14                 // Method java/lang/Object.toString:()Ljava/lang/String;
     180: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     183: ifeq          196
     186: aload         20
     188: astore        12
     190: aconst_null
     191: astore        13
     193: goto          305
     196: aload         20
     198: invokeinterface #13,  1           // InterfaceMethod com/vladsch/flexmark/util/options/OptionParser.getOptionName:()Ljava/lang/String;
     203: aload         15
     205: invokevirtual #14                 // Method java/lang/Object.toString:()Ljava/lang/String;
     208: invokevirtual #16                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     211: ifeq          299
     214: aload         12
     216: ifnonnull     226
     219: aload         20
     221: astore        12
     223: goto          299
     226: aload         13
     228: ifnonnull     283
     231: new           #17                 // class com/vladsch/flexmark/util/options/DelimitedBuilder
     234: dup
     235: ldc           #18                 // String ,
     237: invokespecial #19                 // Method com/vladsch/flexmark/util/options/DelimitedBuilder."<init>":(Ljava/lang/String;)V
     240: astore        13
     242: aload         13
     244: aload_3
     245: ldc           #21                 // String options.parser.option.ambiguous
     247: ldc           #22                 // String Option {0} matches:
     249: iconst_1
     250: anewarray     #23                 // class java/lang/Object
     253: dup
     254: iconst_0
     255: aload         15
     257: aastore
     258: invokeinterface #24,  4           // InterfaceMethod com/vladsch/flexmark/util/options/MessageProvider.message:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     263: invokevirtual #25                 // Method com/vladsch/flexmark/util/options/DelimitedBuilder.append:(Ljava/lang/String;)Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
     266: pop
     267: aload         13
     269: aload         12
     271: invokeinterface #13,  1           // InterfaceMethod com/vladsch/flexmark/util/options/OptionParser.getOptionName:()Ljava/lang/String;
     276: invokevirtual #25                 // Method com/vladsch/flexmark/util/options/DelimitedBuilder.append:(Ljava/lang/String;)Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
     279: invokevirtual #26                 // Method com/vladsch/flexmark/util/options/DelimitedBuilder.mark:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
     282: pop
     283: aload         13
     285: aload         20
     287: invokeinterface #13,  1           // InterfaceMethod com/vladsch/flexmark/util/options/OptionParser.getOptionName:()Ljava/lang/String;
     292: invokevirtual #25                 // Method com/vladsch/flexmark/util/options/DelimitedBuilder.append:(Ljava/lang/String;)Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
     295: invokevirtual #26                 // Method com/vladsch/flexmark/util/options/DelimitedBuilder.mark:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
     298: pop
     299: iinc          19, 1
     302: goto          154
     305: aload         12
     307: ifnull        410
     310: aload         13
     312: ifnonnull     369
     315: aload         12
     317: aload         16
     319: aload         6
     321: aload_3
     322: invokeinterface #27,  4           // InterfaceMethod com/vladsch/flexmark/util/options/OptionParser.parseOption:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;Ljava/lang/Object;Lcom/vladsch/flexmark/util/options/MessageProvider;)Lcom/vladsch/flexmark/util/Pair;
     327: astore        17
     329: aload         17
     331: invokevirtual #28                 // Method com/vladsch/flexmark/util/Pair.getFirst:()Ljava/lang/Object;
     334: astore        6
     336: aload         7
     338: new           #29                 // class com/vladsch/flexmark/util/options/ParsedOption
     341: dup
     342: aload         11
     344: aload_0
     345: getstatic     #30                 // Field com/vladsch/flexmark/util/options/ParsedOptionStatus.VALID:Lcom/vladsch/flexmark/util/options/ParsedOptionStatus;
     348: aconst_null
     349: aload         17
     351: invokevirtual #31                 // Method com/vladsch/flexmark/util/Pair.getSecond:()Ljava/lang/Object;
     354: checkcast     #32                 // class java/util/List
     357: invokespecial #33                 // Method com/vladsch/flexmark/util/options/ParsedOption."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/options/OptionParser;Lcom/vladsch/flexmark/util/options/ParsedOptionStatus;Ljava/util/List;Ljava/util/List;)V
     360: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     365: pop
     366: goto          490
     369: aload         7
     371: new           #29                 // class com/vladsch/flexmark/util/options/ParsedOption
     374: dup
     375: aload         11
     377: aload_0
     378: getstatic     #35                 // Field com/vladsch/flexmark/util/options/ParsedOptionStatus.ERROR:Lcom/vladsch/flexmark/util/options/ParsedOptionStatus;
     381: new           #36                 // class com/vladsch/flexmark/util/options/ParserMessage
     384: dup
     385: aload         15
     387: getstatic     #35                 // Field com/vladsch/flexmark/util/options/ParsedOptionStatus.ERROR:Lcom/vladsch/flexmark/util/options/ParsedOptionStatus;
     390: aload         13
     392: invokevirtual #37                 // Method com/vladsch/flexmark/util/options/DelimitedBuilder.toString:()Ljava/lang/String;
     395: invokespecial #38                 // Method com/vladsch/flexmark/util/options/ParserMessage."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/options/ParsedOptionStatus;Ljava/lang/String;)V
     398: invokespecial #39                 // Method com/vladsch/flexmark/util/options/ParsedOption."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/options/OptionParser;Lcom/vladsch/flexmark/util/options/ParsedOptionStatus;Lcom/vladsch/flexmark/util/options/ParserMessage;)V
     401: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     406: pop
     407: goto          490
     410: new           #17                 // class com/vladsch/flexmark/util/options/DelimitedBuilder
     413: dup
     414: ldc           #18                 // String ,
     416: invokespecial #19                 // Method com/vladsch/flexmark/util/options/DelimitedBuilder."<init>":(Ljava/lang/String;)V
     419: astore        13
     421: aload         13
     423: aload_3
     424: ldc           #40                 // String options.parser.option.unknown
     426: ldc           #41                 // String Option {0} does not match any of:
     428: iconst_1
     429: anewarray     #23                 // class java/lang/Object
     432: dup
     433: iconst_0
     434: aload         15
     436: aastore
     437: invokeinterface #24,  4           // InterfaceMethod com/vladsch/flexmark/util/options/MessageProvider.message:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     442: invokevirtual #25                 // Method com/vladsch/flexmark/util/options/DelimitedBuilder.append:(Ljava/lang/String;)Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
     445: pop
     446: aload_0
     447: aload         13
     449: invokevirtual #42                 // Method appendOptionNames:(Lcom/vladsch/flexmark/util/options/DelimitedBuilder;)V
     452: aload         7
     454: new           #29                 // class com/vladsch/flexmark/util/options/ParsedOption
     457: dup
     458: aload         11
     460: aload_0
     461: getstatic     #35                 // Field com/vladsch/flexmark/util/options/ParsedOptionStatus.ERROR:Lcom/vladsch/flexmark/util/options/ParsedOptionStatus;
     464: new           #36                 // class com/vladsch/flexmark/util/options/ParserMessage
     467: dup
     468: aload         15
     470: getstatic     #35                 // Field com/vladsch/flexmark/util/options/ParsedOptionStatus.ERROR:Lcom/vladsch/flexmark/util/options/ParsedOptionStatus;
     473: aload         13
     475: invokevirtual #37                 // Method com/vladsch/flexmark/util/options/DelimitedBuilder.toString:()Ljava/lang/String;
     478: invokespecial #38                 // Method com/vladsch/flexmark/util/options/ParserMessage."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/options/ParsedOptionStatus;Ljava/lang/String;)V
     481: invokespecial #39                 // Method com/vladsch/flexmark/util/options/ParsedOption."<init>":(Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/util/options/OptionParser;Lcom/vladsch/flexmark/util/options/ParsedOptionStatus;Lcom/vladsch/flexmark/util/options/ParserMessage;)V
     484: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     489: pop
     490: iinc          10, 1
     493: goto          53
     496: new           #43                 // class com/vladsch/flexmark/util/Pair
     499: dup
     500: aload         6
     502: aload         7
     504: invokespecial #44                 // Method com/vladsch/flexmark/util/Pair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     507: areturn

  public void appendOptionNames(com.vladsch.flexmark.util.options.DelimitedBuilder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field myParsableOptions:[Lcom/vladsch/flexmark/util/options/OptionParser;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     44
      17: aload_2
      18: iload         4
      20: aaload
      21: astore        5
      23: aload_1
      24: aload         5
      26: invokeinterface #13,  1           // InterfaceMethod com/vladsch/flexmark/util/options/OptionParser.getOptionName:()Ljava/lang/String;
      31: invokevirtual #25                 // Method com/vladsch/flexmark/util/options/DelimitedBuilder.append:(Ljava/lang/String;)Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      34: invokevirtual #26                 // Method com/vladsch/flexmark/util/options/DelimitedBuilder.mark:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      37: pop
      38: iinc          4, 1
      41: goto          11
      44: return

  public java.lang.String getOptionText(T, T);
    Code:
       0: new           #17                 // class com/vladsch/flexmark/util/options/DelimitedBuilder
       3: dup
       4: aload_0
       5: getfield      #4                  // Field myOptionDelimiter:C
       8: invokestatic  #45                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;
      11: invokespecial #19                 // Method com/vladsch/flexmark/util/options/DelimitedBuilder."<init>":(Ljava/lang/String;)V
      14: astore_3
      15: aload_0
      16: getfield      #3                  // Field myParsableOptions:[Lcom/vladsch/flexmark/util/options/OptionParser;
      19: astore        4
      21: aload         4
      23: arraylength
      24: istore        5
      26: iconst_0
      27: istore        6
      29: iload         6
      31: iload         5
      33: if_icmpge     81
      36: aload         4
      38: iload         6
      40: aaload
      41: astore        7
      43: aload         7
      45: aload_1
      46: aload_2
      47: invokeinterface #46,  3           // InterfaceMethod com/vladsch/flexmark/util/options/OptionParser.getOptionText:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
      52: invokevirtual #47                 // Method java/lang/String.trim:()Ljava/lang/String;
      55: astore        8
      57: aload         8
      59: invokevirtual #48                 // Method java/lang/String.isEmpty:()Z
      62: ifne          75
      65: aload_3
      66: aload         8
      68: invokevirtual #25                 // Method com/vladsch/flexmark/util/options/DelimitedBuilder.append:(Ljava/lang/String;)Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      71: invokevirtual #26                 // Method com/vladsch/flexmark/util/options/DelimitedBuilder.mark:()Lcom/vladsch/flexmark/util/options/DelimitedBuilder;
      74: pop
      75: iinc          6, 1
      78: goto          29
      81: aload_3
      82: invokevirtual #37                 // Method com/vladsch/flexmark/util/options/DelimitedBuilder.toString:()Ljava/lang/String;
      85: areturn
}
