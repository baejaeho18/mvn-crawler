Compiled from "Table.java"
public class com.vladsch.flexmark.util.format.Table$TableSection {
  public final java.util.List<com.vladsch.flexmark.util.format.Table$TableRow> rows;

  public int row;

  public int column;

  public com.vladsch.flexmark.util.format.Table$TableSection();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field rows:Ljava/util/List;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field row:I
      20: aload_0
      21: iconst_0
      22: putfield      #6                  // Field column:I
      25: return

  public void nextRow();
    Code:
       0: aload_0
       1: dup
       2: getfield      #5                  // Field row:I
       5: iconst_1
       6: iadd
       7: putfield      #5                  // Field row:I
      10: aload_0
      11: iconst_0
      12: putfield      #6                  // Field column:I
      15: return

  public void setCell(int, int, com.vladsch.flexmark.util.format.Table$TableCell);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #7                  // Method expandTo:(I)Lcom/vladsch/flexmark/util/format/Table$TableRow;
       5: iload_2
       6: aload_3
       7: invokevirtual #8                  // Method com/vladsch/flexmark/util/format/Table$TableRow.set:(ILcom/vladsch/flexmark/util/format/Table$TableCell;)V
      10: return

  public void cleanup();
    Code:
       0: aload_0
       1: getfield      #4                  // Field rows:Ljava/util/List;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          36
      19: aload_1
      20: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #12                 // class com/vladsch/flexmark/util/format/Table$TableRow
      28: astore_2
      29: aload_2
      30: invokevirtual #13                 // Method com/vladsch/flexmark/util/format/Table$TableRow.cleanup:()V
      33: goto          10
      36: return

  public com.vladsch.flexmark.util.format.Table$TableRow expandTo(int);
    Code:
       0: aload_0
       1: iload_1
       2: aconst_null
       3: invokevirtual #14                 // Method expandTo:(ILcom/vladsch/flexmark/util/format/Table$TableCell;)Lcom/vladsch/flexmark/util/format/Table$TableRow;
       6: areturn

  public com.vladsch.flexmark.util.format.Table$TableRow expandTo(int, com.vladsch.flexmark.util.format.Table$TableCell);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #4                  // Field rows:Ljava/util/List;
       5: invokeinterface #15,  1           // InterfaceMethod java/util/List.size:()I
      10: if_icmplt     35
      13: new           #12                 // class com/vladsch/flexmark/util/format/Table$TableRow
      16: dup
      17: invokespecial #16                 // Method com/vladsch/flexmark/util/format/Table$TableRow."<init>":()V
      20: astore_3
      21: aload_0
      22: getfield      #4                  // Field rows:Ljava/util/List;
      25: aload_3
      26: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      31: pop
      32: goto          0
      35: aload_0
      36: getfield      #4                  // Field rows:Ljava/util/List;
      39: iload_1
      40: invokeinterface #18,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      45: checkcast     #12                 // class com/vladsch/flexmark/util/format/Table$TableRow
      48: areturn

  public com.vladsch.flexmark.util.format.Table$TableRow expandTo(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aconst_null
       4: invokevirtual #19                 // Method expandTo:(IILcom/vladsch/flexmark/util/format/Table$TableCell;)Lcom/vladsch/flexmark/util/format/Table$TableRow;
       7: areturn

  public com.vladsch.flexmark.util.format.Table$TableRow expandTo(int, int, com.vladsch.flexmark.util.format.Table$TableCell);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #4                  // Field rows:Ljava/util/List;
       5: invokeinterface #15,  1           // InterfaceMethod java/util/List.size:()I
      10: if_icmplt     45
      13: new           #12                 // class com/vladsch/flexmark/util/format/Table$TableRow
      16: dup
      17: invokespecial #16                 // Method com/vladsch/flexmark/util/format/Table$TableRow."<init>":()V
      20: astore        4
      22: aload         4
      24: iload_2
      25: aload_3
      26: invokevirtual #20                 // Method com/vladsch/flexmark/util/format/Table$TableRow.expandTo:(ILcom/vladsch/flexmark/util/format/Table$TableCell;)Lcom/vladsch/flexmark/util/format/Table$TableRow;
      29: pop
      30: aload_0
      31: getfield      #4                  // Field rows:Ljava/util/List;
      34: aload         4
      36: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      41: pop
      42: goto          0
      45: aload_0
      46: getfield      #4                  // Field rows:Ljava/util/List;
      49: iload_1
      50: invokeinterface #18,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      55: checkcast     #12                 // class com/vladsch/flexmark/util/format/Table$TableRow
      58: iload_2
      59: invokevirtual #21                 // Method com/vladsch/flexmark/util/format/Table$TableRow.expandTo:(I)Lcom/vladsch/flexmark/util/format/Table$TableRow;
      62: areturn

  public com.vladsch.flexmark.util.format.Table$TableRow get(int);
    Code:
       0: aload_0
       1: iload_1
       2: aconst_null
       3: invokevirtual #14                 // Method expandTo:(ILcom/vladsch/flexmark/util/format/Table$TableCell;)Lcom/vladsch/flexmark/util/format/Table$TableRow;
       6: areturn

  public int getMaxColumns();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #4                  // Field rows:Ljava/util/List;
       6: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          49
      21: aload_2
      22: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #12                 // class com/vladsch/flexmark/util/format/Table$TableRow
      30: astore_3
      31: aload_3
      32: invokevirtual #22                 // Method com/vladsch/flexmark/util/format/Table$TableRow.getSpannedColumns:()I
      35: istore        4
      37: iload_1
      38: iload         4
      40: if_icmpge     46
      43: iload         4
      45: istore_1
      46: goto          12
      49: iload_1
      50: ireturn

  public int getMinColumns();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #4                  // Field rows:Ljava/util/List;
       6: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          53
      21: aload_2
      22: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #12                 // class com/vladsch/flexmark/util/format/Table$TableRow
      30: astore_3
      31: aload_3
      32: invokevirtual #22                 // Method com/vladsch/flexmark/util/format/Table$TableRow.getSpannedColumns:()I
      35: istore        4
      37: iload_1
      38: iload         4
      40: if_icmpgt     47
      43: iload_1
      44: ifne          50
      47: iload         4
      49: istore_1
      50: goto          12
      53: iload_1
      54: ireturn
}
