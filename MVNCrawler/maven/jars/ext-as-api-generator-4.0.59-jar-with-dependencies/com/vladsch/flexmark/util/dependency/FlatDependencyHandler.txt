Compiled from "FlatDependencyHandler.java"
public class com.vladsch.flexmark.util.dependency.FlatDependencyHandler<T extends com.vladsch.flexmark.util.dependency.Dependent<T>> extends com.vladsch.flexmark.util.dependency.DependencyHandler<T, com.vladsch.flexmark.util.dependency.FlatDependencyStage<T>, com.vladsch.flexmark.util.dependency.FlatDependencies<T>> {
  public com.vladsch.flexmark.util.dependency.FlatDependencyHandler();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/vladsch/flexmark/util/dependency/DependencyHandler."<init>":()V
       4: return

  public java.util.List<T> resolvedDependencies(java.util.List<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method resolveDependencies:(Ljava/util/List;)Lcom/vladsch/flexmark/util/dependency/ResolvedDependencies;
       5: checkcast     #3                  // class com/vladsch/flexmark/util/dependency/FlatDependencies
       8: astore_2
       9: aload_2
      10: getfield      #4                  // Field com/vladsch/flexmark/util/dependency/FlatDependencies.myLinkResolverFactories:Ljava/util/ArrayList;
      13: areturn

  protected com.vladsch.flexmark.util.dependency.FlatDependencyStage<T> createStage(java.util.List<T>);
    Code:
       0: new           #5                  // class com/vladsch/flexmark/util/dependency/FlatDependencyStage
       3: dup
       4: aload_1
       5: invokespecial #6                  // Method com/vladsch/flexmark/util/dependency/FlatDependencyStage."<init>":(Ljava/util/List;)V
       8: areturn

  protected java.lang.Class<? extends T> getDependentClass(T);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: areturn

  protected com.vladsch.flexmark.util.dependency.FlatDependencies<T> createResolvedDependencies(java.util.List<com.vladsch.flexmark.util.dependency.FlatDependencyStage<T>>);
    Code:
       0: new           #3                  // class com/vladsch/flexmark/util/dependency/FlatDependencies
       3: dup
       4: aload_1
       5: invokespecial #8                  // Method com/vladsch/flexmark/util/dependency/FlatDependencies."<init>":(Ljava/util/List;)V
       8: areturn

  public static <T extends com.vladsch.flexmark.util.dependency.Dependent<T>> java.util.List<T> computeDependencies(java.util.List<T>);
    Code:
       0: new           #9                  // class com/vladsch/flexmark/util/dependency/FlatDependencyHandler
       3: dup
       4: invokespecial #10                 // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #11                 // Method resolvedDependencies:(Ljava/util/List;)Ljava/util/List;
      13: areturn

  protected com.vladsch.flexmark.util.dependency.ResolvedDependencies createResolvedDependencies(java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method createResolvedDependencies:(Ljava/util/List;)Lcom/vladsch/flexmark/util/dependency/FlatDependencies;
       5: areturn

  protected java.lang.Object createStage(java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method createStage:(Ljava/util/List;)Lcom/vladsch/flexmark/util/dependency/FlatDependencyStage;
       5: areturn
}
