Compiled from "FormattingAppendable.java"
public interface com.vladsch.flexmark.util.html.FormattingAppendable extends java.lang.Appendable {
  public static final int CONVERT_TABS;

  public static final int COLLAPSE_WHITESPACE;

  public static final int SUPPRESS_TRAILING_WHITESPACE;

  public static final int PREFIX_AFTER_PENDING_EOL;

  public static final int FORMAT_ALL;

  public abstract java.io.IOException getIOException();

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable append(java.lang.CharSequence);

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable append(java.lang.CharSequence, int, int);

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable append(char);

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable repeat(char, int);

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable repeat(java.lang.CharSequence, int);

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable repeat(java.lang.CharSequence, int, int, int);

  public abstract java.lang.Appendable getAppendable();

  public abstract java.lang.String getText();

  public abstract java.lang.String getText(int);

  public abstract int getOptions();

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable setOptions(int);

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable flush();

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable flushWhitespaces();

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable flush(int);

  public abstract java.lang.CharSequence getIndentPrefix();

  public abstract java.lang.CharSequence getTotalIndentPrefix();

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable setIndentPrefix(java.lang.CharSequence);

  public abstract java.lang.CharSequence getPrefix();

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable setPrefix(java.lang.CharSequence);

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable addPrefix(java.lang.CharSequence);

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable pushPrefix();

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable popPrefix();

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable addAfterEolRunnable(int, java.lang.Runnable);

  public abstract int getPushedPrefixCount();

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable line();

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable addLine();

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable lineIf(boolean);

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable line(com.vladsch.flexmark.util.Ref<java.lang.Boolean>);

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable lineIf(com.vladsch.flexmark.util.Ref<java.lang.Boolean>);

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable blankLine();

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable blankLineIf(boolean);

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable blankLine(int);

  public abstract int getIndent();

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable setIndentOffset(int);

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable indent();

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable willIndent();

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable unIndent();

  public abstract int getModCount();

  public abstract int getLineCount();

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable lastOffset(com.vladsch.flexmark.util.Ref<java.lang.Integer>);

  public abstract int lastOffset();

  public abstract int offset();

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable openPreFormatted(boolean);

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable closePreFormatted();

  public abstract boolean isPreFormatted();

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable openConditional(com.vladsch.flexmark.util.html.ConditionalFormatter);

  public abstract com.vladsch.flexmark.util.html.FormattingAppendable closeConditional(com.vladsch.flexmark.util.html.ConditionalFormatter);

  public abstract boolean isPendingSpace();

  public abstract boolean isPendingEOL();

  public abstract int getPendingEOL();
}
