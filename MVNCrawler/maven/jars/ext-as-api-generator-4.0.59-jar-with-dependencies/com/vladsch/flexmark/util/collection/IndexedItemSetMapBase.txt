Compiled from "IndexedItemSetMapBase.java"
public abstract class com.vladsch.flexmark.util.collection.IndexedItemSetMapBase<K, S, M> implements com.vladsch.flexmark.util.collection.IndexedItemSetMap<K, S, M> {
  protected final java.util.HashMap<K, S> myBag;

  public com.vladsch.flexmark.util.collection.IndexedItemSetMapBase();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method "<init>":(I)V
       5: return

  public com.vladsch.flexmark.util.collection.IndexedItemSetMapBase(int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      12: putfield      #5                  // Field myBag:Ljava/util/HashMap;
      15: return

  public abstract K mapKey(M);

  public abstract S newSet();

  public abstract boolean addSetItem(S, int);

  public abstract boolean removeSetItem(S, int);

  public abstract boolean containsSetItem(S, int);

  public boolean addItem(M, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method mapKey:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_3
       6: aload_0
       7: getfield      #5                  // Field myBag:Ljava/util/HashMap;
      10: aload_3
      11: invokevirtual #7                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: astore        4
      16: aload         4
      18: ifnonnull     38
      21: aload_0
      22: invokevirtual #8                  // Method newSet:()Ljava/lang/Object;
      25: astore        4
      27: aload_0
      28: getfield      #5                  // Field myBag:Ljava/util/HashMap;
      31: aload_3
      32: aload         4
      34: invokevirtual #9                  // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_0
      39: aload         4
      41: iload_2
      42: invokevirtual #10                 // Method addSetItem:(Ljava/lang/Object;I)Z
      45: ireturn

  public boolean removeItem(M, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method mapKey:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_3
       6: aload_0
       7: getfield      #5                  // Field myBag:Ljava/util/HashMap;
      10: aload_3
      11: invokevirtual #7                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: astore        4
      16: aload         4
      18: ifnull        35
      21: aload_0
      22: aload         4
      24: iload_2
      25: invokevirtual #11                 // Method removeSetItem:(Ljava/lang/Object;I)Z
      28: ifeq          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  public boolean containsItem(M, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method mapKey:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_3
       6: aload_0
       7: getfield      #5                  // Field myBag:Ljava/util/HashMap;
      10: aload_3
      11: invokevirtual #7                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: astore        4
      16: aload         4
      18: ifnull        35
      21: aload_0
      22: aload         4
      24: iload_2
      25: invokevirtual #12                 // Method containsSetItem:(Ljava/lang/Object;I)Z
      28: ifeq          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBag:Ljava/util/HashMap;
       4: invokevirtual #13                 // Method java/util/HashMap.size:()I
       7: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBag:Ljava/util/HashMap;
       4: invokevirtual #14                 // Method java/util/HashMap.isEmpty:()Z
       7: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBag:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #15                 // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
       8: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBag:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #16                 // Method java/util/HashMap.containsValue:(Ljava/lang/Object;)Z
       8: ireturn

  public S get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBag:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #7                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public S put(K, S);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBag:Ljava/util/HashMap;
       4: aload_1
       5: aload_2
       6: invokevirtual #9                  // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public S remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBag:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #17                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public void putAll(java.util.Map<? extends K, ? extends S>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBag:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #18                 // Method java/util/HashMap.putAll:(Ljava/util/Map;)V
       8: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBag:Ljava/util/HashMap;
       4: invokevirtual #19                 // Method java/util/HashMap.clear:()V
       7: return

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBag:Ljava/util/HashMap;
       4: invokevirtual #20                 // Method java/util/HashMap.keySet:()Ljava/util/Set;
       7: areturn

  public java.util.Collection<S> values();
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBag:Ljava/util/HashMap;
       4: invokevirtual #21                 // Method java/util/HashMap.values:()Ljava/util/Collection;
       7: areturn

  public java.util.Set<java.util.Map$Entry<K, S>> entrySet();
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBag:Ljava/util/HashMap;
       4: invokevirtual #22                 // Method java/util/HashMap.entrySet:()Ljava/util/Set;
       7: areturn
}
