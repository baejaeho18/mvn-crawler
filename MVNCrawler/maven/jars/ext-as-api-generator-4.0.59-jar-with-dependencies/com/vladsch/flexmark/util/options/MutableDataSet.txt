Compiled from "MutableDataSet.java"
public class com.vladsch.flexmark.util.options.MutableDataSet extends com.vladsch.flexmark.util.options.DataSet implements com.vladsch.flexmark.util.options.MutableDataHolder {
  public com.vladsch.flexmark.util.options.MutableDataSet();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/vladsch/flexmark/util/options/DataSet."<init>":()V
       4: return

  public com.vladsch.flexmark.util.options.MutableDataSet(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method com/vladsch/flexmark/util/options/DataSet."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
       5: return

  public <T> com.vladsch.flexmark.util.options.MutableDataSet set(com.vladsch.flexmark.util.options.DataKey<T>, T);
    Code:
       0: aload_0
       1: getfield      #3                  // Field dataSet:Ljava/util/HashMap;
       4: aload_1
       5: aload_2
       6: invokevirtual #4                  // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: areturn

  public com.vladsch.flexmark.util.options.MutableDataHolder setFrom(com.vladsch.flexmark.util.options.MutableDataSetter);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #5,  2            // InterfaceMethod com/vladsch/flexmark/util/options/MutableDataSetter.setIn:(Lcom/vladsch/flexmark/util/options/MutableDataHolder;)Lcom/vladsch/flexmark/util/options/MutableDataHolder;
       7: areturn

  public com.vladsch.flexmark.util.options.MutableDataSet setAll(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_1
       1: invokeinterface #6,  1            // InterfaceMethod com/vladsch/flexmark/util/options/DataHolder.keySet:()Ljava/util/Collection;
       6: invokeinterface #7,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          47
      21: aload_2
      22: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #10                 // class com/vladsch/flexmark/util/options/DataKey
      30: astore_3
      31: aload_0
      32: aload_3
      33: aload_1
      34: aload_3
      35: invokeinterface #11,  2           // InterfaceMethod com/vladsch/flexmark/util/options/DataHolder.get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
      40: invokevirtual #12                 // Method set:(Lcom/vladsch/flexmark/util/options/DataKey;Ljava/lang/Object;)Lcom/vladsch/flexmark/util/options/MutableDataSet;
      43: pop
      44: goto          12
      47: aload_0
      48: areturn

  public com.vladsch.flexmark.util.options.MutableDataHolder setIn(com.vladsch.flexmark.util.options.MutableDataHolder);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #13,  2           // InterfaceMethod com/vladsch/flexmark/util/options/MutableDataHolder.setAll:(Lcom/vladsch/flexmark/util/options/DataHolder;)Lcom/vladsch/flexmark/util/options/MutableDataHolder;
       7: pop
       8: aload_1
       9: areturn

  public <T> T get(com.vladsch.flexmark.util.options.DataKey<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #14                 // Method com/vladsch/flexmark/util/options/DataKey.getFactory:()Lcom/vladsch/flexmark/util/collection/DataValueFactory;
       6: invokevirtual #15                 // Method getOrCompute:(Lcom/vladsch/flexmark/util/options/DataKey;Lcom/vladsch/flexmark/util/collection/DataValueFactory;)Ljava/lang/Object;
       9: areturn

  public <T> com.vladsch.flexmark.util.options.MutableDataSet remove(com.vladsch.flexmark.util.options.DataKey<T>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field dataSet:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #16                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: aload_0
      10: areturn

  public <T> T getOrCompute(com.vladsch.flexmark.util.options.DataKey<T>, com.vladsch.flexmark.util.collection.DataValueFactory<T>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field dataSet:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #17                 // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
       8: ifeq          24
      11: aload_1
      12: aload_0
      13: getfield      #3                  // Field dataSet:Ljava/util/HashMap;
      16: aload_1
      17: invokevirtual #18                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: invokevirtual #19                 // Method com/vladsch/flexmark/util/options/DataKey.getValue:(Ljava/lang/Object;)Ljava/lang/Object;
      23: areturn
      24: aload_2
      25: aload_0
      26: invokeinterface #20,  2           // InterfaceMethod com/vladsch/flexmark/util/collection/DataValueFactory.create:(Ljava/lang/Object;)Ljava/lang/Object;
      31: astore_3
      32: aload_0
      33: getfield      #3                  // Field dataSet:Ljava/util/HashMap;
      36: aload_1
      37: aload_3
      38: invokevirtual #4                  // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: aload_3
      43: areturn

  public static com.vladsch.flexmark.util.options.MutableDataSet merge(com.vladsch.flexmark.util.options.DataHolder...);
    Code:
       0: new           #21                 // class com/vladsch/flexmark/util/options/MutableDataSet
       3: dup
       4: invokespecial #22                 // Method "<init>":()V
       7: astore_1
       8: aload_0
       9: astore_2
      10: aload_2
      11: arraylength
      12: istore_3
      13: iconst_0
      14: istore        4
      16: iload         4
      18: iload_3
      19: if_icmpge     53
      22: aload_2
      23: iload         4
      25: aaload
      26: astore        5
      28: aload         5
      30: ifnull        47
      33: aload_1
      34: getfield      #3                  // Field dataSet:Ljava/util/HashMap;
      37: aload         5
      39: invokeinterface #23,  1           // InterfaceMethod com/vladsch/flexmark/util/options/DataHolder.getAll:()Ljava/util/Map;
      44: invokevirtual #24                 // Method java/util/HashMap.putAll:(Ljava/util/Map;)V
      47: iinc          4, 1
      50: goto          16
      53: aload_1
      54: areturn

  public com.vladsch.flexmark.util.options.MutableDataSet toMutable();
    Code:
       0: aload_0
       1: areturn

  public com.vladsch.flexmark.util.options.DataHolder toImmutable();
    Code:
       0: new           #25                 // class com/vladsch/flexmark/util/options/DataSet
       3: dup
       4: aload_0
       5: invokespecial #2                  // Method com/vladsch/flexmark/util/options/DataSet."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
       8: areturn

  public com.vladsch.flexmark.util.options.MutableDataHolder clear();
    Code:
       0: aload_0
       1: getfield      #3                  // Field dataSet:Ljava/util/HashMap;
       4: invokevirtual #26                 // Method java/util/HashMap.clear:()V
       7: aload_0
       8: areturn

  public com.vladsch.flexmark.util.options.MutableDataHolder toMutable();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method toMutable:()Lcom/vladsch/flexmark/util/options/MutableDataSet;
       4: areturn

  public com.vladsch.flexmark.util.options.MutableDataHolder setAll(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method setAll:(Lcom/vladsch/flexmark/util/options/DataHolder;)Lcom/vladsch/flexmark/util/options/MutableDataSet;
       5: areturn

  public com.vladsch.flexmark.util.options.MutableDataHolder remove(com.vladsch.flexmark.util.options.DataKey);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method remove:(Lcom/vladsch/flexmark/util/options/DataKey;)Lcom/vladsch/flexmark/util/options/MutableDataSet;
       5: areturn

  public com.vladsch.flexmark.util.options.MutableDataHolder set(com.vladsch.flexmark.util.options.DataKey, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #12                 // Method set:(Lcom/vladsch/flexmark/util/options/DataKey;Ljava/lang/Object;)Lcom/vladsch/flexmark/util/options/MutableDataSet;
       6: areturn
}
