Compiled from "CopyOnWriteRef.java"
public class com.vladsch.flexmark.util.collection.CopyOnWriteRef<T> {
  private T myValue;

  private int myReferenceCount;

  private com.vladsch.flexmark.util.Computable<T, T> myCloner;

  private boolean myMutable;

  public com.vladsch.flexmark.util.collection.CopyOnWriteRef(T, com.vladsch.flexmark.util.Computable<T, T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field myValue:Ljava/lang/Object;
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field myReferenceCount:I
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field myCloner:Lcom/vladsch/flexmark/util/Computable;
      19: return

  public T getPeek();
    Code:
       0: aload_0
       1: getfield      #2                  // Field myValue:Ljava/lang/Object;
       4: areturn

  public T getImmutable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field myValue:Ljava/lang/Object;
       4: ifnull        17
       7: aload_0
       8: dup
       9: getfield      #3                  // Field myReferenceCount:I
      12: iconst_1
      13: iadd
      14: putfield      #3                  // Field myReferenceCount:I
      17: aload_0
      18: getfield      #2                  // Field myValue:Ljava/lang/Object;
      21: areturn

  public T getMutable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field myReferenceCount:I
       4: ifle          29
       7: aload_0
       8: aload_0
       9: getfield      #4                  // Field myCloner:Lcom/vladsch/flexmark/util/Computable;
      12: aload_0
      13: getfield      #2                  // Field myValue:Ljava/lang/Object;
      16: invokeinterface #5,  2            // InterfaceMethod com/vladsch/flexmark/util/Computable.compute:(Ljava/lang/Object;)Ljava/lang/Object;
      21: putfield      #2                  // Field myValue:Ljava/lang/Object;
      24: aload_0
      25: iconst_0
      26: putfield      #3                  // Field myReferenceCount:I
      29: aload_0
      30: getfield      #2                  // Field myValue:Ljava/lang/Object;
      33: areturn

  public void setValue(T);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #3                  // Field myReferenceCount:I
       5: aload_0
       6: aload_0
       7: getfield      #4                  // Field myCloner:Lcom/vladsch/flexmark/util/Computable;
      10: aload_1
      11: invokeinterface #5,  2            // InterfaceMethod com/vladsch/flexmark/util/Computable.compute:(Ljava/lang/Object;)Ljava/lang/Object;
      16: putfield      #2                  // Field myValue:Ljava/lang/Object;
      19: return

  public boolean isMutable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field myReferenceCount:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn
}
