Compiled from "BitIntegerSet.java"
public class com.vladsch.flexmark.util.collection.BitIntegerSet implements java.util.Set<java.lang.Integer>, com.vladsch.flexmark.util.collection.iteration.ReversibleIterable<java.lang.Integer> {
  private final java.util.BitSet myBits;

  private final boolean myReversed;

  public com.vladsch.flexmark.util.collection.BitIntegerSet();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method "<init>":(I)V
       5: return

  public com.vladsch.flexmark.util.collection.BitIntegerSet(int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/BitSet
       8: dup
       9: iload_1
      10: invokespecial #4                  // Method java/util/BitSet."<init>":(I)V
      13: putfield      #5                  // Field myBits:Ljava/util/BitSet;
      16: aload_0
      17: iconst_0
      18: putfield      #6                  // Field myReversed:Z
      21: return

  public com.vladsch.flexmark.util.collection.BitIntegerSet(java.util.BitSet);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #7                  // Method java/util/BitSet.clone:()Ljava/lang/Object;
       9: checkcast     #3                  // class java/util/BitSet
      12: putfield      #5                  // Field myBits:Ljava/util/BitSet;
      15: aload_0
      16: iconst_0
      17: putfield      #6                  // Field myReversed:Z
      20: return

  public com.vladsch.flexmark.util.collection.BitIntegerSet(com.vladsch.flexmark.util.collection.BitIntegerSet);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #8                  // Method isReversed:()Z
       6: invokespecial #9                  // Method "<init>":(Lcom/vladsch/flexmark/util/collection/BitIntegerSet;Z)V
       9: return

  private com.vladsch.flexmark.util.collection.BitIntegerSet(com.vladsch.flexmark.util.collection.BitIntegerSet, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       9: invokevirtual #7                  // Method java/util/BitSet.clone:()Ljava/lang/Object;
      12: checkcast     #3                  // class java/util/BitSet
      15: putfield      #5                  // Field myBits:Ljava/util/BitSet;
      18: aload_0
      19: iload_2
      20: putfield      #6                  // Field myReversed:Z
      23: return

  public int cardinality();
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: invokevirtual #10                 // Method java/util/BitSet.cardinality:()I
       7: ireturn

  public int cardinality(int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       6: invokevirtual #11                 // Method java/util/BitSet.length:()I
       9: invokevirtual #12                 // Method cardinality:(II)I
      12: ireturn

  public int cardinality(int, int);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_1
       3: iflt          196
       6: iload_2
       7: ifle          196
      10: iload_1
      11: iload_2
      12: if_icmpge     196
      15: aload_0
      16: getfield      #5                  // Field myBits:Ljava/util/BitSet;
      19: iconst_0
      20: invokevirtual #13                 // Method java/util/BitSet.nextSetBit:(I)I
      23: istore        4
      25: aload_0
      26: getfield      #5                  // Field myBits:Ljava/util/BitSet;
      29: aload_0
      30: getfield      #5                  // Field myBits:Ljava/util/BitSet;
      33: invokevirtual #11                 // Method java/util/BitSet.length:()I
      36: invokevirtual #14                 // Method java/util/BitSet.previousSetBit:(I)I
      39: iconst_1
      40: iadd
      41: istore        5
      43: iload_1
      44: iload         4
      46: if_icmpge     52
      49: iload         4
      51: istore_1
      52: iload_2
      53: iload         5
      55: if_icmple     61
      58: iload         5
      60: istore_2
      61: iload_1
      62: iload_2
      63: if_icmpgt     196
      66: aload_0
      67: getfield      #5                  // Field myBits:Ljava/util/BitSet;
      70: invokevirtual #11                 // Method java/util/BitSet.length:()I
      73: ifle          196
      76: iload_1
      77: bipush        6
      79: ishr
      80: istore        6
      82: iload_2
      83: bipush        6
      85: ishr
      86: istore        7
      88: ldc2_w        #15                 // long -1l
      91: iload_1
      92: bipush        63
      94: iand
      95: lshl
      96: lstore        8
      98: ldc2_w        #15                 // long -1l
     101: iload_2
     102: bipush        63
     104: iand
     105: lshl
     106: ldc2_w        #15                 // long -1l
     109: lxor
     110: lstore        10
     112: lload         10
     114: lconst_0
     115: lcmp
     116: ifne          127
     119: iinc          7, -1
     122: ldc2_w        #15                 // long -1l
     125: lstore        10
     127: aload_0
     128: getfield      #5                  // Field myBits:Ljava/util/BitSet;
     131: invokevirtual #17                 // Method java/util/BitSet.toLongArray:()[J
     134: astore        12
     136: iload         6
     138: istore        13
     140: iload         13
     142: iload         7
     144: if_icmpgt     196
     147: aload         12
     149: iload         13
     151: laload
     152: lstore        14
     154: iload         13
     156: iload         6
     158: if_icmpne     168
     161: lload         14
     163: lload         8
     165: land
     166: lstore        14
     168: iload         13
     170: iload         7
     172: if_icmpne     182
     175: lload         14
     177: lload         10
     179: land
     180: lstore        14
     182: iload_3
     183: lload         14
     185: invokestatic  #18                 // Method java/lang/Long.bitCount:(J)I
     188: iadd
     189: istore_3
     190: iinc          13, 1
     193: goto          140
     196: iload_3
     197: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #19                 // class java/lang/Integer
       4: ifeq          28
       7: aload_0
       8: getfield      #5                  // Field myBits:Ljava/util/BitSet;
      11: aload_1
      12: checkcast     #19                 // class java/lang/Integer
      15: invokevirtual #20                 // Method java/lang/Integer.intValue:()I
      18: invokevirtual #21                 // Method java/util/BitSet.get:(I)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method cardinality:()I
       4: anewarray     #23                 // class java/lang/Object
       7: astore_1
       8: iconst_0
       9: istore_2
      10: aload_0
      11: invokevirtual #24                 // Method iterator:()Lcom/vladsch/flexmark/util/collection/iteration/ReversibleIterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          46
      24: aload_3
      25: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #19                 // class java/lang/Integer
      33: astore        4
      35: aload_1
      36: iload_2
      37: iinc          2, 1
      40: aload         4
      42: aastore
      43: goto          15
      46: aload_1
      47: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: aload_1
       1: astore_2
       2: aload_0
       3: invokevirtual #22                 // Method cardinality:()I
       6: istore_3
       7: aload_1
       8: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #28                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      14: ldc           #19                 // class java/lang/Integer
      16: invokevirtual #29                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      19: ifne          55
      22: new           #30                 // class java/lang/ArrayStoreException
      25: dup
      26: new           #31                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #33                 // String Cannot store Integer in array of
      35: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_1
      39: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      42: invokevirtual #35                 // Method java/lang/Class.getName:()Ljava/lang/String;
      45: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #37                 // Method java/lang/ArrayStoreException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_1
      56: arraylength
      57: iload_3
      58: if_icmpge     95
      61: aload_1
      62: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      65: ldc           #38                 // class "[Ljava/lang/Object;"
      67: if_acmpne     77
      70: iload_3
      71: anewarray     #23                 // class java/lang/Object
      74: goto          94
      77: aload_1
      78: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      81: invokevirtual #28                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      84: iload_3
      85: invokestatic  #39                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
      88: checkcast     #38                 // class "[Ljava/lang/Object;"
      91: checkcast     #38                 // class "[Ljava/lang/Object;"
      94: astore_2
      95: iconst_0
      96: istore        4
      98: aload_0
      99: invokevirtual #24                 // Method iterator:()Lcom/vladsch/flexmark/util/collection/iteration/ReversibleIterator;
     102: astore        5
     104: aload         5
     106: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     111: ifeq          138
     114: aload         5
     116: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     121: checkcast     #19                 // class java/lang/Integer
     124: astore        6
     126: aload_1
     127: iload         4
     129: iinc          4, 1
     132: aload         6
     134: aastore
     135: goto          104
     138: aload_2
     139: arraylength
     140: iinc          4, 1
     143: iload         4
     145: if_icmple     153
     148: aload_2
     149: iload         4
     151: aconst_null
     152: aastore
     153: aload_2
     154: checkcast     #38                 // class "[Ljava/lang/Object;"
     157: areturn

  public boolean add(java.lang.Integer);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: aload_1
       5: invokevirtual #20                 // Method java/lang/Integer.intValue:()I
       8: invokevirtual #21                 // Method java/util/BitSet.get:(I)Z
      11: istore_2
      12: aload_0
      13: getfield      #5                  // Field myBits:Ljava/util/BitSet;
      16: aload_1
      17: invokevirtual #20                 // Method java/lang/Integer.intValue:()I
      20: invokevirtual #40                 // Method java/util/BitSet.set:(I)V
      23: iload_2
      24: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #19                 // class java/lang/Integer
       4: ifeq          24
       7: aload_0
       8: getfield      #5                  // Field myBits:Ljava/util/BitSet;
      11: aload_1
      12: checkcast     #19                 // class java/lang/Integer
      15: invokevirtual #20                 // Method java/lang/Integer.intValue:()I
      18: invokevirtual #21                 // Method java/util/BitSet.get:(I)Z
      21: ifne          26
      24: iconst_0
      25: ireturn
      26: aload_0
      27: getfield      #5                  // Field myBits:Ljava/util/BitSet;
      30: aload_1
      31: checkcast     #19                 // class java/lang/Integer
      34: invokevirtual #20                 // Method java/lang/Integer.intValue:()I
      37: invokevirtual #41                 // Method java/util/BitSet.clear:(I)V
      40: iconst_1
      41: ireturn

  public boolean containsAll(java.util.Collection<?>);
    Code:
       0: aload_1
       1: instanceof    #42                 // class com/vladsch/flexmark/util/collection/BitIntegerSet
       4: ifeq          41
       7: aload_1
       8: checkcast     #42                 // class com/vladsch/flexmark/util/collection/BitIntegerSet
      11: getfield      #5                  // Field myBits:Ljava/util/BitSet;
      14: astore_2
      15: aload_0
      16: getfield      #5                  // Field myBits:Ljava/util/BitSet;
      19: invokevirtual #7                  // Method java/util/BitSet.clone:()Ljava/lang/Object;
      22: checkcast     #3                  // class java/util/BitSet
      25: astore_3
      26: aload_3
      27: aload_2
      28: invokevirtual #43                 // Method java/util/BitSet.xor:(Ljava/util/BitSet;)V
      31: aload_3
      32: aload_2
      33: invokevirtual #44                 // Method java/util/BitSet.and:(Ljava/util/BitSet;)V
      36: aload_3
      37: invokevirtual #45                 // Method java/util/BitSet.isEmpty:()Z
      40: ireturn
      41: aload_1
      42: invokeinterface #46,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      47: astore_2
      48: aload_2
      49: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      54: ifeq          77
      57: aload_2
      58: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      63: astore_3
      64: aload_0
      65: aload_3
      66: invokevirtual #47                 // Method contains:(Ljava/lang/Object;)Z
      69: ifne          74
      72: iconst_0
      73: ireturn
      74: goto          48
      77: iconst_1
      78: ireturn

  public boolean addAll(java.util.Collection<? extends java.lang.Integer>);
    Code:
       0: aload_1
       1: instanceof    #42                 // class com/vladsch/flexmark/util/collection/BitIntegerSet
       4: ifeq          52
       7: aload_1
       8: checkcast     #42                 // class com/vladsch/flexmark/util/collection/BitIntegerSet
      11: getfield      #5                  // Field myBits:Ljava/util/BitSet;
      14: astore_2
      15: aload_0
      16: getfield      #5                  // Field myBits:Ljava/util/BitSet;
      19: invokevirtual #7                  // Method java/util/BitSet.clone:()Ljava/lang/Object;
      22: checkcast     #3                  // class java/util/BitSet
      25: astore_3
      26: aload_0
      27: getfield      #5                  // Field myBits:Ljava/util/BitSet;
      30: aload_2
      31: invokevirtual #48                 // Method java/util/BitSet.or:(Ljava/util/BitSet;)V
      34: aload_3
      35: aload_3
      36: invokevirtual #43                 // Method java/util/BitSet.xor:(Ljava/util/BitSet;)V
      39: aload_3
      40: invokevirtual #45                 // Method java/util/BitSet.isEmpty:()Z
      43: ifne          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ireturn
      52: iconst_0
      53: istore_2
      54: aload_1
      55: invokeinterface #46,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      60: astore_3
      61: aload_3
      62: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      67: ifeq          95
      70: aload_3
      71: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      76: astore        4
      78: aload_0
      79: aload         4
      81: checkcast     #19                 // class java/lang/Integer
      84: invokevirtual #49                 // Method add:(Ljava/lang/Integer;)Z
      87: ifeq          92
      90: iconst_1
      91: istore_2
      92: goto          61
      95: iload_2
      96: ireturn

  public boolean retainAll(java.util.Collection<?>);
    Code:
       0: aload_1
       1: instanceof    #3                  // class java/util/BitSet
       4: ifne          66
       7: new           #3                  // class java/util/BitSet
      10: dup
      11: invokespecial #50                 // Method java/util/BitSet."<init>":()V
      14: astore_2
      15: aload_1
      16: invokeinterface #46,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      21: astore_3
      22: aload_3
      23: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          63
      31: aload_3
      32: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: astore        4
      39: aload_0
      40: aload         4
      42: invokevirtual #47                 // Method contains:(Ljava/lang/Object;)Z
      45: ifeq          60
      48: aload_2
      49: aload         4
      51: checkcast     #19                 // class java/lang/Integer
      54: invokevirtual #20                 // Method java/lang/Integer.intValue:()I
      57: invokevirtual #40                 // Method java/util/BitSet.set:(I)V
      60: goto          22
      63: goto          71
      66: aload_1
      67: checkcast     #3                  // class java/util/BitSet
      70: astore_2
      71: aload_0
      72: getfield      #5                  // Field myBits:Ljava/util/BitSet;
      75: invokevirtual #7                  // Method java/util/BitSet.clone:()Ljava/lang/Object;
      78: checkcast     #3                  // class java/util/BitSet
      81: astore_3
      82: aload_0
      83: getfield      #5                  // Field myBits:Ljava/util/BitSet;
      86: aload_2
      87: invokevirtual #44                 // Method java/util/BitSet.and:(Ljava/util/BitSet;)V
      90: aload_3
      91: aload_3
      92: invokevirtual #43                 // Method java/util/BitSet.xor:(Ljava/util/BitSet;)V
      95: aload_3
      96: invokevirtual #45                 // Method java/util/BitSet.isEmpty:()Z
      99: ifne          106
     102: iconst_1
     103: goto          107
     106: iconst_0
     107: ireturn

  public boolean removeAll(java.util.Collection<?>);
    Code:
       0: aload_1
       1: instanceof    #42                 // class com/vladsch/flexmark/util/collection/BitIntegerSet
       4: ifeq          52
       7: aload_1
       8: checkcast     #42                 // class com/vladsch/flexmark/util/collection/BitIntegerSet
      11: getfield      #5                  // Field myBits:Ljava/util/BitSet;
      14: astore_2
      15: aload_0
      16: getfield      #5                  // Field myBits:Ljava/util/BitSet;
      19: invokevirtual #7                  // Method java/util/BitSet.clone:()Ljava/lang/Object;
      22: checkcast     #3                  // class java/util/BitSet
      25: astore_3
      26: aload_0
      27: getfield      #5                  // Field myBits:Ljava/util/BitSet;
      30: aload_2
      31: invokevirtual #51                 // Method java/util/BitSet.andNot:(Ljava/util/BitSet;)V
      34: aload_3
      35: aload_3
      36: invokevirtual #43                 // Method java/util/BitSet.xor:(Ljava/util/BitSet;)V
      39: aload_3
      40: invokevirtual #45                 // Method java/util/BitSet.isEmpty:()Z
      43: ifne          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ireturn
      52: iconst_0
      53: istore_2
      54: aload_1
      55: invokeinterface #46,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      60: astore_3
      61: aload_3
      62: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      67: ifeq          107
      70: aload_3
      71: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      76: astore        4
      78: aload_0
      79: aload         4
      81: invokevirtual #47                 // Method contains:(Ljava/lang/Object;)Z
      84: ifeq          104
      87: aload_0
      88: getfield      #5                  // Field myBits:Ljava/util/BitSet;
      91: aload         4
      93: checkcast     #19                 // class java/lang/Integer
      96: invokevirtual #20                 // Method java/lang/Integer.intValue:()I
      99: invokevirtual #41                 // Method java/util/BitSet.clear:(I)V
     102: iconst_1
     103: istore_2
     104: goto          61
     107: iload_2
     108: ireturn

  public void forEach(com.vladsch.flexmark.util.collection.Consumer<? super java.lang.Integer>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: iconst_0
       5: invokevirtual #13                 // Method java/util/BitSet.nextSetBit:(I)I
       8: istore_2
       9: iload_2
      10: iflt          37
      13: aload_1
      14: iload_2
      15: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      18: invokeinterface #53,  2           // InterfaceMethod com/vladsch/flexmark/util/collection/Consumer.accept:(Ljava/lang/Object;)V
      23: aload_0
      24: getfield      #5                  // Field myBits:Ljava/util/BitSet;
      27: iload_2
      28: iconst_1
      29: iadd
      30: invokevirtual #13                 // Method java/util/BitSet.nextSetBit:(I)I
      33: istore_2
      34: goto          9
      37: return

  public void forEach(com.vladsch.flexmark.util.IntConsumer);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: iconst_0
       5: invokevirtual #13                 // Method java/util/BitSet.nextSetBit:(I)I
       8: istore_2
       9: iload_2
      10: iflt          34
      13: aload_1
      14: iload_2
      15: invokeinterface #54,  2           // InterfaceMethod com/vladsch/flexmark/util/IntConsumer.accept:(I)V
      20: aload_0
      21: getfield      #5                  // Field myBits:Ljava/util/BitSet;
      24: iload_2
      25: iconst_1
      26: iadd
      27: invokevirtual #13                 // Method java/util/BitSet.nextSetBit:(I)I
      30: istore_2
      31: goto          9
      34: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: invokevirtual #11                 // Method java/util/BitSet.length:()I
       7: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: invokevirtual #45                 // Method java/util/BitSet.isEmpty:()Z
       7: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: invokevirtual #55                 // Method java/util/BitSet.clear:()V
       7: return

  public static com.vladsch.flexmark.util.collection.BitIntegerSet valueOf(long[]);
    Code:
       0: new           #42                 // class com/vladsch/flexmark/util/collection/BitIntegerSet
       3: dup
       4: aload_0
       5: invokestatic  #56                 // Method java/util/BitSet.valueOf:([J)Ljava/util/BitSet;
       8: invokespecial #57                 // Method "<init>":(Ljava/util/BitSet;)V
      11: areturn

  public static com.vladsch.flexmark.util.collection.BitIntegerSet valueOf(java.nio.LongBuffer);
    Code:
       0: new           #42                 // class com/vladsch/flexmark/util/collection/BitIntegerSet
       3: dup
       4: aload_0
       5: invokestatic  #58                 // Method java/util/BitSet.valueOf:(Ljava/nio/LongBuffer;)Ljava/util/BitSet;
       8: invokespecial #57                 // Method "<init>":(Ljava/util/BitSet;)V
      11: areturn

  public static com.vladsch.flexmark.util.collection.BitIntegerSet valueOf(byte[]);
    Code:
       0: new           #42                 // class com/vladsch/flexmark/util/collection/BitIntegerSet
       3: dup
       4: aload_0
       5: invokestatic  #59                 // Method java/util/BitSet.valueOf:([B)Ljava/util/BitSet;
       8: invokespecial #57                 // Method "<init>":(Ljava/util/BitSet;)V
      11: areturn

  public static com.vladsch.flexmark.util.collection.BitIntegerSet valueOf(java.nio.ByteBuffer);
    Code:
       0: new           #42                 // class com/vladsch/flexmark/util/collection/BitIntegerSet
       3: dup
       4: aload_0
       5: invokestatic  #60                 // Method java/util/BitSet.valueOf:(Ljava/nio/ByteBuffer;)Ljava/util/BitSet;
       8: invokespecial #57                 // Method "<init>":(Ljava/util/BitSet;)V
      11: areturn

  public byte[] toByteArray();
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: invokevirtual #61                 // Method java/util/BitSet.toByteArray:()[B
       7: areturn

  public long[] toLongArray();
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: invokevirtual #17                 // Method java/util/BitSet.toLongArray:()[J
       7: areturn

  public com.vladsch.flexmark.util.collection.BitIntegerSet flip(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: iload_1
       5: invokevirtual #62                 // Method java/util/BitSet.flip:(I)V
       8: aload_0
       9: areturn

  public com.vladsch.flexmark.util.collection.BitIntegerSet flip(int, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: iload_1
       5: iload_2
       6: invokevirtual #63                 // Method java/util/BitSet.flip:(II)V
       9: aload_0
      10: areturn

  public com.vladsch.flexmark.util.collection.BitIntegerSet set(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: iload_1
       5: invokevirtual #40                 // Method java/util/BitSet.set:(I)V
       8: aload_0
       9: areturn

  public com.vladsch.flexmark.util.collection.BitIntegerSet set(int, boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: iload_1
       5: iload_2
       6: invokevirtual #64                 // Method java/util/BitSet.set:(IZ)V
       9: aload_0
      10: areturn

  public com.vladsch.flexmark.util.collection.BitIntegerSet set(int, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: iload_1
       5: iload_2
       6: invokevirtual #65                 // Method java/util/BitSet.set:(II)V
       9: aload_0
      10: areturn

  public com.vladsch.flexmark.util.collection.BitIntegerSet set(int, int, boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: iload_1
       5: iload_2
       6: iload_3
       7: invokevirtual #66                 // Method java/util/BitSet.set:(IIZ)V
      10: aload_0
      11: areturn

  public com.vladsch.flexmark.util.collection.BitIntegerSet clear(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: iload_1
       5: invokevirtual #41                 // Method java/util/BitSet.clear:(I)V
       8: aload_0
       9: areturn

  public com.vladsch.flexmark.util.collection.BitIntegerSet clear(int, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: iload_1
       5: iload_2
       6: invokevirtual #67                 // Method java/util/BitSet.clear:(II)V
       9: aload_0
      10: areturn

  public com.vladsch.flexmark.util.collection.BitIntegerSet and(java.util.BitSet);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: aload_1
       5: invokevirtual #44                 // Method java/util/BitSet.and:(Ljava/util/BitSet;)V
       8: aload_0
       9: areturn

  public com.vladsch.flexmark.util.collection.BitIntegerSet or(java.util.BitSet);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: aload_1
       5: invokevirtual #48                 // Method java/util/BitSet.or:(Ljava/util/BitSet;)V
       8: aload_0
       9: areturn

  public com.vladsch.flexmark.util.collection.BitIntegerSet xor(java.util.BitSet);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: aload_1
       5: invokevirtual #43                 // Method java/util/BitSet.xor:(Ljava/util/BitSet;)V
       8: aload_0
       9: areturn

  public com.vladsch.flexmark.util.collection.BitIntegerSet andNot(java.util.BitSet);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: aload_1
       5: invokevirtual #51                 // Method java/util/BitSet.andNot:(Ljava/util/BitSet;)V
       8: aload_0
       9: areturn

  public com.vladsch.flexmark.util.collection.BitIntegerSet and(com.vladsch.flexmark.util.collection.BitIntegerSet);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: aload_1
       5: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       8: invokevirtual #44                 // Method java/util/BitSet.and:(Ljava/util/BitSet;)V
      11: aload_0
      12: areturn

  public com.vladsch.flexmark.util.collection.BitIntegerSet or(com.vladsch.flexmark.util.collection.BitIntegerSet);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: aload_1
       5: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       8: invokevirtual #48                 // Method java/util/BitSet.or:(Ljava/util/BitSet;)V
      11: aload_0
      12: areturn

  public com.vladsch.flexmark.util.collection.BitIntegerSet xor(com.vladsch.flexmark.util.collection.BitIntegerSet);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: aload_1
       5: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       8: invokevirtual #43                 // Method java/util/BitSet.xor:(Ljava/util/BitSet;)V
      11: aload_0
      12: areturn

  public com.vladsch.flexmark.util.collection.BitIntegerSet andNot(com.vladsch.flexmark.util.collection.BitIntegerSet);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: aload_1
       5: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       8: invokevirtual #51                 // Method java/util/BitSet.andNot:(Ljava/util/BitSet;)V
      11: aload_0
      12: areturn

  public boolean get(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: iload_1
       5: invokevirtual #21                 // Method java/util/BitSet.get:(I)Z
       8: ireturn

  public com.vladsch.flexmark.util.collection.BitIntegerSet get(int, int);
    Code:
       0: new           #42                 // class com/vladsch/flexmark/util/collection/BitIntegerSet
       3: dup
       4: aload_0
       5: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       8: iload_1
       9: iload_2
      10: invokevirtual #68                 // Method java/util/BitSet.get:(II)Ljava/util/BitSet;
      13: invokespecial #57                 // Method "<init>":(Ljava/util/BitSet;)V
      16: areturn

  public int nextSetBit(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: iload_1
       5: invokevirtual #13                 // Method java/util/BitSet.nextSetBit:(I)I
       8: ireturn

  public int nextClearBit(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: iload_1
       5: invokevirtual #69                 // Method java/util/BitSet.nextClearBit:(I)I
       8: ireturn

  public int previousSetBit(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: iload_1
       5: invokevirtual #14                 // Method java/util/BitSet.previousSetBit:(I)I
       8: ireturn

  public int previousClearBit(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: iload_1
       5: invokevirtual #70                 // Method java/util/BitSet.previousClearBit:(I)I
       8: ireturn

  public boolean intersects(java.util.BitSet);
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: aload_1
       5: invokevirtual #71                 // Method java/util/BitSet.intersects:(Ljava/util/BitSet;)Z
       8: ireturn

  public java.util.BitSet bitSet();
    Code:
       0: aload_0
       1: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       4: areturn

  public com.vladsch.flexmark.util.collection.iteration.ReversibleIterator<java.lang.Integer> iterator();
    Code:
       0: new           #72                 // class com/vladsch/flexmark/util/collection/iteration/BitSetIterator
       3: dup
       4: aload_0
       5: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       8: aload_0
       9: getfield      #6                  // Field myReversed:Z
      12: invokespecial #73                 // Method com/vladsch/flexmark/util/collection/iteration/BitSetIterator."<init>":(Ljava/util/BitSet;Z)V
      15: areturn

  public com.vladsch.flexmark.util.collection.iteration.ReversibleIterable<java.lang.Integer> reversed();
    Code:
       0: new           #42                 // class com/vladsch/flexmark/util/collection/BitIntegerSet
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #6                  // Field myReversed:Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: invokespecial #9                  // Method "<init>":(Lcom/vladsch/flexmark/util/collection/BitIntegerSet;Z)V
      20: areturn

  public boolean isReversed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field myReversed:Z
       4: ireturn

  public com.vladsch.flexmark.util.collection.iteration.ReversibleIterator<java.lang.Integer> reversedIterator();
    Code:
       0: new           #72                 // class com/vladsch/flexmark/util/collection/iteration/BitSetIterator
       3: dup
       4: aload_0
       5: getfield      #5                  // Field myBits:Ljava/util/BitSet;
       8: aload_0
       9: getfield      #6                  // Field myReversed:Z
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: invokespecial #73                 // Method com/vladsch/flexmark/util/collection/iteration/BitSetIterator."<init>":(Ljava/util/BitSet;Z)V
      23: areturn

  public boolean add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #19                 // class java/lang/Integer
       5: invokevirtual #49                 // Method add:(Ljava/lang/Integer;)Z
       8: ireturn

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method iterator:()Lcom/vladsch/flexmark/util/collection/iteration/ReversibleIterator;
       4: areturn
}
