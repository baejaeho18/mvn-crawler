Compiled from "AttributeImpl.java"
public class com.vladsch.flexmark.util.html.AttributeImpl implements com.vladsch.flexmark.util.html.Attribute {
  private final java.lang.String myName;

  private final char myValueListDelimiter;

  private final char myValueNameDelimiter;

  private final java.lang.String myValue;

  private com.vladsch.flexmark.util.html.AttributeImpl(java.lang.CharSequence, java.lang.CharSequence, char, char);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: instanceof    #2                  // class java/lang/String
       9: ifeq          19
      12: aload_1
      13: checkcast     #2                  // class java/lang/String
      16: goto          23
      19: aload_1
      20: invokestatic  #3                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      23: putfield      #4                  // Field myName:Ljava/lang/String;
      26: aload_0
      27: iload_3
      28: putfield      #5                  // Field myValueListDelimiter:C
      31: aload_0
      32: iload         4
      34: putfield      #6                  // Field myValueNameDelimiter:C
      37: aload_0
      38: aload_2
      39: ifnonnull     47
      42: ldc           #7                  // String
      44: goto          65
      47: aload_2
      48: instanceof    #2                  // class java/lang/String
      51: ifeq          61
      54: aload_2
      55: checkcast     #2                  // class java/lang/String
      58: goto          65
      61: aload_2
      62: invokestatic  #3                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      65: putfield      #8                  // Field myValue:Ljava/lang/String;
      68: return

  public com.vladsch.flexmark.util.html.MutableAttribute toMutable();
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method com/vladsch/flexmark/util/html/MutableAttributeImpl.of:(Lcom/vladsch/flexmark/util/html/Attribute;)Lcom/vladsch/flexmark/util/html/MutableAttributeImpl;
       4: areturn

  public char getValueListDelimiter();
    Code:
       0: aload_0
       1: getfield      #5                  // Field myValueListDelimiter:C
       4: ireturn

  public char getValueNameDelimiter();
    Code:
       0: aload_0
       1: getfield      #6                  // Field myValueNameDelimiter:C
       4: ireturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field myName:Ljava/lang/String;
       4: areturn

  public java.lang.String getValue();
    Code:
       0: aload_0
       1: getfield      #8                  // Field myValue:Ljava/lang/String;
       4: areturn

  public boolean isNonRendering();
    Code:
       0: aload_0
       1: getfield      #4                  // Field myName:Ljava/lang/String;
       4: bipush        32
       6: invokevirtual #10                 // Method java/lang/String.indexOf:(I)I
       9: iconst_m1
      10: if_icmpne     38
      13: aload_0
      14: getfield      #8                  // Field myValue:Ljava/lang/String;
      17: invokevirtual #11                 // Method java/lang/String.isEmpty:()Z
      20: ifeq          42
      23: getstatic     #12                 // Field NON_RENDERING_WHEN_EMPTY:Ljava/util/Set;
      26: aload_0
      27: getfield      #4                  // Field myName:Ljava/lang/String;
      30: invokeinterface #13,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      35: ifeq          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ireturn

  public static int indexOfValue(java.lang.CharSequence, java.lang.CharSequence, char, char);
    Code:
       0: aload_1
       1: invokeinterface #14,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       6: ifeq          18
       9: aload_0
      10: invokeinterface #14,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      15: ifne          20
      18: iconst_m1
      19: ireturn
      20: iload_2
      21: ifne          38
      24: aload_0
      25: aload_1
      26: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      29: ifeq          36
      32: iconst_0
      33: goto          37
      36: iconst_m1
      37: ireturn
      38: iconst_0
      39: istore        4
      41: aload_0
      42: invokestatic  #16                 // Method com/vladsch/flexmark/util/sequence/SubSequence.of:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      45: astore        5
      47: iload         4
      49: aload_0
      50: invokeinterface #14,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      55: if_icmpge     178
      58: aload         5
      60: aload_1
      61: iload         4
      63: invokeinterface #17,  3           // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.indexOf:(Ljava/lang/CharSequence;I)I
      68: istore        6
      70: iload         6
      72: iconst_m1
      73: if_icmpne     79
      76: goto          178
      79: iload         6
      81: aload_1
      82: invokeinterface #14,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      87: iadd
      88: istore        7
      90: iload         6
      92: ifeq          127
      95: aload_0
      96: iload         6
      98: iconst_1
      99: isub
     100: invokeinterface #18,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     105: iload_2
     106: if_icmpeq     127
     109: iload_3
     110: ifeq          169
     113: aload_0
     114: iload         6
     116: iconst_1
     117: isub
     118: invokeinterface #18,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     123: iload_3
     124: if_icmpne     169
     127: iload         7
     129: aload_0
     130: invokeinterface #14,  1           // InterfaceMethod java/lang/CharSequence.length:()I
     135: if_icmpge     166
     138: aload_0
     139: iload         7
     141: invokeinterface #18,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     146: iload_2
     147: if_icmpeq     166
     150: iload_3
     151: ifeq          169
     154: aload_0
     155: iload         7
     157: invokeinterface #18,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     162: iload_3
     163: if_icmpne     169
     166: iload         6
     168: ireturn
     169: iload         7
     171: iconst_1
     172: iadd
     173: istore        4
     175: goto          47
     178: iconst_m1
     179: ireturn

  public boolean containsValue(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #8                  // Field myValue:Ljava/lang/String;
       4: aload_1
       5: aload_0
       6: getfield      #5                  // Field myValueListDelimiter:C
       9: aload_0
      10: getfield      #6                  // Field myValueNameDelimiter:C
      13: invokestatic  #19                 // Method indexOfValue:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;CC)I
      16: iconst_m1
      17: if_icmpeq     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public com.vladsch.flexmark.util.html.Attribute replaceValue(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #8                  // Field myValue:Ljava/lang/String;
       4: aload_1
       5: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       8: ifeq          15
      11: aload_0
      12: goto          31
      15: aload_0
      16: getfield      #4                  // Field myName:Ljava/lang/String;
      19: aload_1
      20: aload_0
      21: getfield      #5                  // Field myValueListDelimiter:C
      24: aload_0
      25: getfield      #6                  // Field myValueNameDelimiter:C
      28: invokestatic  #21                 // Method of:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;CC)Lcom/vladsch/flexmark/util/html/AttributeImpl;
      31: areturn

  public com.vladsch.flexmark.util.html.Attribute setValue(java.lang.CharSequence);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method toMutable:()Lcom/vladsch/flexmark/util/html/MutableAttribute;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod com/vladsch/flexmark/util/html/MutableAttribute.setValue:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/MutableAttribute;
      10: astore_2
      11: aload_2
      12: aload_0
      13: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      16: ifeq          23
      19: aload_0
      20: goto          32
      23: aload_2
      24: invokeinterface #24,  1           // InterfaceMethod com/vladsch/flexmark/util/html/MutableAttribute.toImmutable:()Lcom/vladsch/flexmark/util/Immutable;
      29: checkcast     #25                 // class com/vladsch/flexmark/util/html/Attribute
      32: areturn

  public com.vladsch.flexmark.util.html.Attribute removeValue(java.lang.CharSequence);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method toMutable:()Lcom/vladsch/flexmark/util/html/MutableAttribute;
       4: aload_1
       5: invokeinterface #26,  2           // InterfaceMethod com/vladsch/flexmark/util/html/MutableAttribute.removeValue:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/MutableAttribute;
      10: astore_2
      11: aload_2
      12: aload_0
      13: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      16: ifeq          23
      19: aload_0
      20: goto          32
      23: aload_2
      24: invokeinterface #24,  1           // InterfaceMethod com/vladsch/flexmark/util/html/MutableAttribute.toImmutable:()Lcom/vladsch/flexmark/util/Immutable;
      29: checkcast     #25                 // class com/vladsch/flexmark/util/html/Attribute
      32: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #25                 // class com/vladsch/flexmark/util/html/Attribute
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #25                 // class com/vladsch/flexmark/util/html/Attribute
      20: astore_2
      21: aload_0
      22: getfield      #4                  // Field myName:Ljava/lang/String;
      25: aload_2
      26: invokeinterface #27,  1           // InterfaceMethod com/vladsch/flexmark/util/html/Attribute.getName:()Ljava/lang/String;
      31: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      34: ifne          39
      37: iconst_0
      38: ireturn
      39: aload_0
      40: getfield      #8                  // Field myValue:Ljava/lang/String;
      43: aload_2
      44: invokeinterface #28,  1           // InterfaceMethod com/vladsch/flexmark/util/html/Attribute.getValue:()Ljava/lang/String;
      49: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      52: ifne          57
      55: iconst_0
      56: ireturn
      57: iconst_1
      58: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field myName:Ljava/lang/String;
       4: invokevirtual #29                 // Method java/lang/String.hashCode:()I
       7: istore_1
       8: bipush        31
      10: iload_1
      11: imul
      12: aload_0
      13: getfield      #8                  // Field myValue:Ljava/lang/String;
      16: invokevirtual #29                 // Method java/lang/String.hashCode:()I
      19: iadd
      20: istore_1
      21: iload_1
      22: ireturn

  public java.lang.String toString();
    Code:
       0: new           #30                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #32                 // String AttributeImpl { myName=\'
       9: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #4                  // Field myName:Ljava/lang/String;
      16: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: bipush        39
      21: invokevirtual #34                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: ldc           #35                 // String , myValue=\'
      26: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #8                  // Field myValue:Ljava/lang/String;
      33: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: bipush        39
      38: invokevirtual #34                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      41: ldc           #36                 // String  }
      43: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: areturn

  public static com.vladsch.flexmark.util.html.AttributeImpl of(com.vladsch.flexmark.util.html.Attribute);
    Code:
       0: aload_0
       1: invokeinterface #27,  1           // InterfaceMethod com/vladsch/flexmark/util/html/Attribute.getName:()Ljava/lang/String;
       6: aload_0
       7: invokeinterface #28,  1           // InterfaceMethod com/vladsch/flexmark/util/html/Attribute.getValue:()Ljava/lang/String;
      12: aload_0
      13: invokeinterface #38,  1           // InterfaceMethod com/vladsch/flexmark/util/html/Attribute.getValueListDelimiter:()C
      18: aload_0
      19: invokeinterface #39,  1           // InterfaceMethod com/vladsch/flexmark/util/html/Attribute.getValueNameDelimiter:()C
      24: invokestatic  #21                 // Method of:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;CC)Lcom/vladsch/flexmark/util/html/AttributeImpl;
      27: areturn

  public static com.vladsch.flexmark.util.html.AttributeImpl of(java.lang.CharSequence);
    Code:
       0: aload_0
       1: aload_0
       2: iconst_0
       3: iconst_0
       4: invokestatic  #21                 // Method of:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;CC)Lcom/vladsch/flexmark/util/html/AttributeImpl;
       7: areturn

  public static com.vladsch.flexmark.util.html.AttributeImpl of(java.lang.CharSequence, java.lang.CharSequence);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: iconst_0
       4: invokestatic  #21                 // Method of:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;CC)Lcom/vladsch/flexmark/util/html/AttributeImpl;
       7: areturn

  public static com.vladsch.flexmark.util.html.AttributeImpl of(java.lang.CharSequence, java.lang.CharSequence, char);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_0
       4: invokestatic  #21                 // Method of:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;CC)Lcom/vladsch/flexmark/util/html/AttributeImpl;
       7: areturn

  public static com.vladsch.flexmark.util.html.AttributeImpl of(java.lang.CharSequence, java.lang.CharSequence, char, char);
    Code:
       0: ldc           #40                 // String class
       2: aload_0
       3: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          22
       9: new           #41                 // class com/vladsch/flexmark/util/html/AttributeImpl
      12: dup
      13: aload_0
      14: aload_1
      15: bipush        32
      17: iconst_0
      18: invokespecial #42                 // Method "<init>":(Ljava/lang/CharSequence;Ljava/lang/CharSequence;CC)V
      21: areturn
      22: ldc           #43                 // String style
      24: aload_0
      25: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: ifeq          45
      31: new           #41                 // class com/vladsch/flexmark/util/html/AttributeImpl
      34: dup
      35: aload_0
      36: aload_1
      37: bipush        59
      39: bipush        58
      41: invokespecial #42                 // Method "<init>":(Ljava/lang/CharSequence;Ljava/lang/CharSequence;CC)V
      44: areturn
      45: new           #41                 // class com/vladsch/flexmark/util/html/AttributeImpl
      48: dup
      49: aload_0
      50: aload_1
      51: iload_2
      52: iload_3
      53: invokespecial #42                 // Method "<init>":(Ljava/lang/CharSequence;Ljava/lang/CharSequence;CC)V
      56: areturn

  public com.vladsch.flexmark.util.Mutable toMutable();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method toMutable:()Lcom/vladsch/flexmark/util/html/MutableAttribute;
       4: areturn
}
