Compiled from "Table.java"
public class com.vladsch.flexmark.util.format.Table$TableRow {
  public final java.util.List<com.vladsch.flexmark.util.format.Table$TableCell> cells;

  com.vladsch.flexmark.util.format.Table$TableRow();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field cells:Ljava/util/List;
      15: return

  public int getColumns();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cells:Ljava/util/List;
       4: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public int getSpannedColumns();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #4                  // Field cells:Ljava/util/List;
       6: invokeinterface #6,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          48
      21: aload_2
      22: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #9                  // class com/vladsch/flexmark/util/format/Table$TableCell
      30: astore_3
      31: aload_3
      32: ifnonnull     38
      35: goto          12
      38: iload_1
      39: aload_3
      40: getfield      #10                 // Field com/vladsch/flexmark/util/format/Table$TableCell.columnSpan:I
      43: iadd
      44: istore_1
      45: goto          12
      48: iload_1
      49: ireturn

  public com.vladsch.flexmark.util.format.Table$TableRow expandTo(int);
    Code:
       0: aload_0
       1: iload_1
       2: aconst_null
       3: invokevirtual #11                 // Method expandTo:(ILcom/vladsch/flexmark/util/format/Table$TableCell;)Lcom/vladsch/flexmark/util/format/Table$TableRow;
       6: areturn

  public com.vladsch.flexmark.util.format.Table$TableRow expandTo(int, com.vladsch.flexmark.util.format.Table$TableCell);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #4                  // Field cells:Ljava/util/List;
       5: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I
      10: if_icmplt     27
      13: aload_0
      14: getfield      #4                  // Field cells:Ljava/util/List;
      17: aload_2
      18: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: goto          0
      27: aload_0
      28: areturn

  public void set(int, com.vladsch.flexmark.util.format.Table$TableCell);
    Code:
       0: aload_0
       1: iload_1
       2: aconst_null
       3: invokevirtual #11                 // Method expandTo:(ILcom/vladsch/flexmark/util/format/Table$TableCell;)Lcom/vladsch/flexmark/util/format/Table$TableRow;
       6: pop
       7: aload_0
       8: getfield      #4                  // Field cells:Ljava/util/List;
      11: iload_1
      12: aload_2
      13: invokeinterface #13,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: return

  public void cleanup();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #4                  // Field cells:Ljava/util/List;
       7: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I
      12: if_icmpge     60
      15: aload_0
      16: getfield      #4                  // Field cells:Ljava/util/List;
      19: iload_1
      20: invokeinterface #14,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: checkcast     #9                  // class com/vladsch/flexmark/util/format/Table$TableCell
      28: astore_2
      29: aload_2
      30: ifnull        40
      33: aload_2
      34: getstatic     #15                 // Field com/vladsch/flexmark/util/format/Table$TableCell.NULL:Lcom/vladsch/flexmark/util/format/Table$TableCell;
      37: if_acmpne     54
      40: aload_0
      41: getfield      #4                  // Field cells:Ljava/util/List;
      44: iload_1
      45: invokeinterface #16,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      50: pop
      51: goto          57
      54: iinc          1, 1
      57: goto          2
      60: return
}
