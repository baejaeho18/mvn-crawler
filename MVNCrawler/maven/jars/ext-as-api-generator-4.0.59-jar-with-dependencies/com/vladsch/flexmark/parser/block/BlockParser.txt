Compiled from "BlockParser.java"
public interface com.vladsch.flexmark.parser.block.BlockParser {
  public abstract boolean isContainer();

  public abstract boolean canContain(com.vladsch.flexmark.parser.block.ParserState, com.vladsch.flexmark.parser.block.BlockParser, com.vladsch.flexmark.ast.Block);

  public abstract com.vladsch.flexmark.ast.Block getBlock();

  public abstract com.vladsch.flexmark.parser.block.BlockContinue tryContinue(com.vladsch.flexmark.parser.block.ParserState);

  public abstract void addLine(com.vladsch.flexmark.parser.block.ParserState, com.vladsch.flexmark.util.sequence.BasedSequence);

  public abstract void closeBlock(com.vladsch.flexmark.parser.block.ParserState);

  public abstract boolean isClosed();

  public abstract boolean isPropagatingLastBlankLine(com.vladsch.flexmark.parser.block.BlockParser);

  public abstract boolean breakOutOnDoubleBlankLine();

  public abstract boolean isParagraphParser();

  public abstract com.vladsch.flexmark.ast.BlockContent getBlockContent();

  public abstract void finalizeClosedBlock();

  public abstract void parseInlines(com.vladsch.flexmark.parser.InlineParser);

  public abstract boolean isInterruptible();

  public abstract boolean isRawText();

  public abstract boolean canInterruptBy(com.vladsch.flexmark.parser.block.BlockParserFactory);

  public abstract com.vladsch.flexmark.util.options.MutableDataHolder getDataHolder();
}
