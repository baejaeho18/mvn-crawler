Compiled from "ParserState.java"
public interface com.vladsch.flexmark.parser.block.ParserState extends com.vladsch.flexmark.util.BlockTracker,com.vladsch.flexmark.internal.BlockParserTracker {
  public abstract com.vladsch.flexmark.util.sequence.BasedSequence getLine();

  public abstract com.vladsch.flexmark.util.sequence.BasedSequence getLineWithEOL();

  public abstract int getIndex();

  public abstract int getNextNonSpaceIndex();

  public abstract int getColumn();

  public abstract int getIndent();

  public abstract boolean isBlank();

  public abstract com.vladsch.flexmark.parser.block.BlockParser getActiveBlockParser();

  public abstract java.util.List<com.vladsch.flexmark.parser.block.BlockParser> getActiveBlockParsers();

  public abstract com.vladsch.flexmark.parser.block.BlockParser getActiveBlockParser(com.vladsch.flexmark.ast.Block);

  public abstract com.vladsch.flexmark.parser.InlineParser getInlineParser();

  public abstract int getLineNumber();

  public abstract int getLineStart();

  public abstract int getLineEolLength();

  public abstract int getLineEndIndex();

  public abstract boolean endsWithBlankLine(com.vladsch.flexmark.ast.Node);

  public abstract boolean isLastLineBlank(com.vladsch.flexmark.ast.Node);

  public abstract com.vladsch.flexmark.util.options.MutableDataHolder getProperties();

  public abstract com.vladsch.flexmark.parser.block.ParserPhase getParserPhase();

  public abstract com.vladsch.flexmark.ast.util.Parsing getParsing();

  public abstract java.util.List<com.vladsch.flexmark.util.sequence.BasedSequence> getLineSegments();
}
