Compiled from "Parser.java"
public class com.vladsch.flexmark.parser.Parser implements com.vladsch.flexmark.IParse {
  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Iterable<com.vladsch.flexmark.Extension>> EXTENSIONS;

  public static final com.vladsch.flexmark.util.options.DataKey<com.vladsch.flexmark.util.KeepType> REFERENCES_KEEP;

  public static final com.vladsch.flexmark.util.options.DataKey<com.vladsch.flexmark.ast.util.ReferenceRepository> REFERENCES;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> ASTERISK_DELIMITER_PROCESSOR;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> TRACK_DOCUMENT_LINES;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> BLOCK_QUOTE_PARSER;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> BLOCK_QUOTE_TO_BLANK_LINE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> BLOCK_QUOTE_IGNORE_BLANK_LINE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> BLOCK_QUOTE_ALLOW_LEADING_SPACE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> BLOCK_QUOTE_INTERRUPTS_PARAGRAPH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> BLOCK_QUOTE_INTERRUPTS_ITEM_PARAGRAPH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> BLOCK_QUOTE_WITH_LEAD_SPACES_INTERRUPTS_ITEM_PARAGRAPH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> FENCED_CODE_BLOCK_PARSER;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> MATCH_CLOSING_FENCE_CHARACTERS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> FENCED_CODE_CONTENT_BLOCK;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> CODE_SOFT_LINE_BREAKS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> CODE_CONTENT_BLOCK;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> HARD_LINE_BREAK_LIMIT;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> HEADING_PARSER;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Integer> HEADING_SETEXT_MARKER_LENGTH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> HEADING_NO_ATX_SPACE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> HEADING_NO_EMPTY_HEADING_WITHOUT_SPACE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> HEADING_NO_LEAD_SPACE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> HEADING_CAN_INTERRUPT_ITEM_PARAGRAPH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> HTML_BLOCK_PARSER;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> HTML_COMMENT_BLOCKS_INTERRUPT_PARAGRAPH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> INLINE_DELIMITER_DIRECTIONAL_PUNCTUATIONS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> INDENTED_CODE_BLOCK_PARSER;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> INDENTED_CODE_NO_TRAILING_BLANK_LINES;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> INTELLIJ_DUMMY_IDENTIFIER;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> MATCH_NESTED_LINK_REFS_FIRST;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> PARSE_INNER_HTML_COMMENTS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> PARSE_MULTI_LINE_IMAGE_URLS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> PARSE_JEKYLL_MACROS_IN_URLS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> SPACE_IN_LINK_URLS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> SPACE_IN_LINK_ELEMENTS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> REFERENCE_PARAGRAPH_PRE_PROCESSOR;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> THEMATIC_BREAK_PARSER;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> THEMATIC_BREAK_RELAXED_START;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> UNDERSCORE_DELIMITER_PROCESSOR;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> BLANK_LINES_IN_AST;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> STRONG_WRAPS_EMPHASIS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LINKS_ALLOW_MATCHED_PARENTHESES;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LIST_BLOCK_PARSER;

  public static final com.vladsch.flexmark.util.options.DataKey<com.vladsch.flexmark.parser.ParserEmulationProfile> PARSER_EMULATION_PROFILE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> HTML_BLOCK_DEEP_PARSER;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> HTML_BLOCK_DEEP_PARSE_NON_BLOCK;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> HTML_BLOCK_COMMENT_ONLY_FULL_LINE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> HTML_BLOCK_START_ONLY_ON_BLOCK_TAGS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> HTML_BLOCK_DEEP_PARSE_BLANK_LINE_INTERRUPTS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> HTML_BLOCK_DEEP_PARSE_FIRST_OPEN_TAG_ON_ONE_LINE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> HTML_BLOCK_DEEP_PARSE_MARKDOWN_INTERRUPTS_CLOSED;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> HTML_BLOCK_DEEP_PARSE_BLANK_LINE_INTERRUPTS_PARTIAL_TAG;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> HTML_BLOCK_DEEP_PARSE_INDENTED_CODE_INTERRUPTS;

  public static final com.vladsch.flexmark.util.options.DataKey<com.vladsch.flexmark.parser.ParserEmulationProfile> PARSER_EMULATION_FAMILY;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Integer> LISTS_CODE_INDENT;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Integer> LISTS_ITEM_INDENT;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Integer> LISTS_NEW_ITEM_CODE_INDENT;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_ITEM_MARKER_SPACE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.String[]> LISTS_ITEM_MARKER_SUFFIXES;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_NUMBERED_ITEM_MARKER_SUFFIXED;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_AUTO_LOOSE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_AUTO_LOOSE_ONE_LEVEL_LISTS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_LOOSE_WHEN_PREV_HAS_TRAILING_BLANK_LINE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_LOOSE_WHEN_LAST_ITEM_PREV_HAS_TRAILING_BLANK_LINE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_LOOSE_WHEN_HAS_NON_LIST_CHILDREN;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_LOOSE_WHEN_BLANK_LINE_FOLLOWS_ITEM_PARAGRAPH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_LOOSE_WHEN_HAS_LOOSE_SUB_ITEM;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_LOOSE_WHEN_HAS_TRAILING_BLANK_LINE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_LOOSE_WHEN_CONTAINS_BLANK_LINE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_DELIMITER_MISMATCH_TO_NEW_LIST;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_END_ON_DOUBLE_BLANK;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_ITEM_TYPE_MISMATCH_TO_NEW_LIST;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_ITEM_TYPE_MISMATCH_TO_SUB_LIST;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_ORDERED_ITEM_DOT_ONLY;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_ORDERED_LIST_MANUAL_START;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_ITEM_CONTENT_AFTER_SUFFIX;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_BULLET_ITEM_INTERRUPTS_PARAGRAPH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_ORDERED_ITEM_INTERRUPTS_PARAGRAPH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_ORDERED_NON_ONE_ITEM_INTERRUPTS_PARAGRAPH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_EMPTY_BULLET_ITEM_INTERRUPTS_PARAGRAPH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_EMPTY_ORDERED_ITEM_INTERRUPTS_PARAGRAPH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_EMPTY_ORDERED_NON_ONE_ITEM_INTERRUPTS_PARAGRAPH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_BULLET_ITEM_INTERRUPTS_ITEM_PARAGRAPH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_ORDERED_ITEM_INTERRUPTS_ITEM_PARAGRAPH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_ORDERED_NON_ONE_ITEM_INTERRUPTS_ITEM_PARAGRAPH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_EMPTY_BULLET_ITEM_INTERRUPTS_ITEM_PARAGRAPH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_EMPTY_ORDERED_ITEM_INTERRUPTS_ITEM_PARAGRAPH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_EMPTY_ORDERED_NON_ONE_ITEM_INTERRUPTS_ITEM_PARAGRAPH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_EMPTY_BULLET_SUB_ITEM_INTERRUPTS_ITEM_PARAGRAPH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_EMPTY_ORDERED_SUB_ITEM_INTERRUPTS_ITEM_PARAGRAPH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> LISTS_EMPTY_ORDERED_NON_ONE_SUB_ITEM_INTERRUPTS_ITEM_PARAGRAPH;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.String> LISTS_ITEM_PREFIX_CHARS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Integer> CODE_BLOCK_INDENT;

  private final java.util.List<com.vladsch.flexmark.parser.block.CustomBlockParserFactory> blockParserFactories;

  private final java.util.Map<java.lang.Character, com.vladsch.flexmark.parser.delimiter.DelimiterProcessor> delimiterProcessors;

  private final java.util.BitSet delimiterCharacters;

  private final java.util.BitSet specialCharacters;

  private final com.vladsch.flexmark.parser.Parser$Builder builder;

  private final com.vladsch.flexmark.internal.PostProcessorManager$PostProcessorDependencies postProcessorDependencies;

  private final com.vladsch.flexmark.internal.DocumentParser$ParagraphPreProcessorDependencies paragraphPreProcessorFactories;

  private final com.vladsch.flexmark.internal.DocumentParser$BlockPreProcessorDependencies blockPreProcessorDependencies;

  private final com.vladsch.flexmark.internal.LinkRefProcessorData linkRefProcessors;

  private final java.util.List<com.vladsch.flexmark.parser.InlineParserExtensionFactory> inlineParserExtensionFactories;

  private final com.vladsch.flexmark.parser.InlineParserFactory inlineParserFactory;

  private final com.vladsch.flexmark.util.options.DataHolder options;

  private com.vladsch.flexmark.parser.Parser(com.vladsch.flexmark.parser.Parser$Builder);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class com/vladsch/flexmark/parser/Parser$Builder
       8: dup
       9: aload_1
      10: invokespecial #4                  // Method com/vladsch/flexmark/parser/Parser$Builder."<init>":(Lcom/vladsch/flexmark/parser/Parser$Builder;)V
      13: putfield      #5                  // Field builder:Lcom/vladsch/flexmark/parser/Parser$Builder;
      16: aload_0
      17: new           #6                  // class com/vladsch/flexmark/util/options/DataSet
      20: dup
      21: aload_1
      22: invokespecial #7                  // Method com/vladsch/flexmark/util/options/DataSet."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
      25: putfield      #8                  // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
      28: aload_0
      29: aload_0
      30: getfield      #8                  // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
      33: aload_1
      34: invokestatic  #9                  // Method com/vladsch/flexmark/parser/Parser$Builder.access$000:(Lcom/vladsch/flexmark/parser/Parser$Builder;)Ljava/util/List;
      37: invokestatic  #10                 // Method com/vladsch/flexmark/internal/DocumentParser.calculateBlockParserFactories:(Lcom/vladsch/flexmark/util/options/DataHolder;Ljava/util/List;)Ljava/util/List;
      40: putfield      #11                 // Field blockParserFactories:Ljava/util/List;
      43: aload_0
      44: aload_1
      45: invokestatic  #12                 // Method com/vladsch/flexmark/parser/Parser$Builder.access$100:(Lcom/vladsch/flexmark/parser/Parser$Builder;)Lcom/vladsch/flexmark/parser/InlineParserFactory;
      48: ifnonnull     57
      51: getstatic     #13                 // Field com/vladsch/flexmark/internal/DocumentParser.INLINE_PARSER_FACTORY:Lcom/vladsch/flexmark/parser/InlineParserFactory;
      54: goto          61
      57: aload_1
      58: invokestatic  #12                 // Method com/vladsch/flexmark/parser/Parser$Builder.access$100:(Lcom/vladsch/flexmark/parser/Parser$Builder;)Lcom/vladsch/flexmark/parser/InlineParserFactory;
      61: putfield      #14                 // Field inlineParserFactory:Lcom/vladsch/flexmark/parser/InlineParserFactory;
      64: aload_0
      65: aload_0
      66: getfield      #8                  // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
      69: aload_1
      70: invokestatic  #15                 // Method com/vladsch/flexmark/parser/Parser$Builder.access$200:(Lcom/vladsch/flexmark/parser/Parser$Builder;)Ljava/util/List;
      73: aload_0
      74: getfield      #14                 // Field inlineParserFactory:Lcom/vladsch/flexmark/parser/InlineParserFactory;
      77: invokestatic  #16                 // Method com/vladsch/flexmark/internal/DocumentParser.calculateParagraphPreProcessors:(Lcom/vladsch/flexmark/util/options/DataHolder;Ljava/util/List;Lcom/vladsch/flexmark/parser/InlineParserFactory;)Lcom/vladsch/flexmark/internal/DocumentParser$ParagraphPreProcessorDependencies;
      80: putfield      #17                 // Field paragraphPreProcessorFactories:Lcom/vladsch/flexmark/internal/DocumentParser$ParagraphPreProcessorDependencies;
      83: aload_0
      84: aload_0
      85: getfield      #8                  // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
      88: aload_1
      89: invokestatic  #18                 // Method com/vladsch/flexmark/parser/Parser$Builder.access$300:(Lcom/vladsch/flexmark/parser/Parser$Builder;)Ljava/util/List;
      92: aload_0
      93: getfield      #14                 // Field inlineParserFactory:Lcom/vladsch/flexmark/parser/InlineParserFactory;
      96: invokestatic  #19                 // Method com/vladsch/flexmark/internal/DocumentParser.calculateBlockPreProcessors:(Lcom/vladsch/flexmark/util/options/DataHolder;Ljava/util/List;Lcom/vladsch/flexmark/parser/InlineParserFactory;)Lcom/vladsch/flexmark/internal/DocumentParser$BlockPreProcessorDependencies;
      99: putfield      #20                 // Field blockPreProcessorDependencies:Lcom/vladsch/flexmark/internal/DocumentParser$BlockPreProcessorDependencies;
     102: aload_0
     103: aload_0
     104: getfield      #8                  // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
     107: aload_1
     108: invokestatic  #21                 // Method com/vladsch/flexmark/parser/Parser$Builder.access$400:(Lcom/vladsch/flexmark/parser/Parser$Builder;)Ljava/util/List;
     111: invokestatic  #22                 // Method com/vladsch/flexmark/internal/InlineParserImpl.calculateDelimiterProcessors:(Lcom/vladsch/flexmark/util/options/DataHolder;Ljava/util/List;)Ljava/util/Map;
     114: putfield      #23                 // Field delimiterProcessors:Ljava/util/Map;
     117: aload_0
     118: aload_0
     119: getfield      #8                  // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
     122: aload_0
     123: getfield      #23                 // Field delimiterProcessors:Ljava/util/Map;
     126: invokeinterface #24,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     131: invokestatic  #25                 // Method com/vladsch/flexmark/internal/InlineParserImpl.calculateDelimiterCharacters:(Lcom/vladsch/flexmark/util/options/DataHolder;Ljava/util/Set;)Ljava/util/BitSet;
     134: putfield      #26                 // Field delimiterCharacters:Ljava/util/BitSet;
     137: aload_0
     138: aload_0
     139: getfield      #8                  // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
     142: aload_1
     143: invokestatic  #27                 // Method com/vladsch/flexmark/parser/Parser$Builder.access$500:(Lcom/vladsch/flexmark/parser/Parser$Builder;)Ljava/util/List;
     146: invokestatic  #28                 // Method com/vladsch/flexmark/internal/InlineParserImpl.calculateLinkRefProcessors:(Lcom/vladsch/flexmark/util/options/DataHolder;Ljava/util/List;)Lcom/vladsch/flexmark/internal/LinkRefProcessorData;
     149: putfield      #29                 // Field linkRefProcessors:Lcom/vladsch/flexmark/internal/LinkRefProcessorData;
     152: aload_0
     153: aload_0
     154: getfield      #8                  // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
     157: aload_0
     158: getfield      #26                 // Field delimiterCharacters:Ljava/util/BitSet;
     161: invokestatic  #30                 // Method com/vladsch/flexmark/internal/InlineParserImpl.calculateSpecialCharacters:(Lcom/vladsch/flexmark/util/options/DataHolder;Ljava/util/BitSet;)Ljava/util/BitSet;
     164: putfield      #31                 // Field specialCharacters:Ljava/util/BitSet;
     167: aload_0
     168: aload_0
     169: getfield      #8                  // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
     172: aload_1
     173: invokestatic  #32                 // Method com/vladsch/flexmark/parser/Parser$Builder.access$600:(Lcom/vladsch/flexmark/parser/Parser$Builder;)Ljava/util/List;
     176: invokestatic  #33                 // Method com/vladsch/flexmark/internal/PostProcessorManager.calculatePostProcessors:(Lcom/vladsch/flexmark/util/options/DataHolder;Ljava/util/List;)Lcom/vladsch/flexmark/internal/PostProcessorManager$PostProcessorDependencies;
     179: putfield      #34                 // Field postProcessorDependencies:Lcom/vladsch/flexmark/internal/PostProcessorManager$PostProcessorDependencies;
     182: aload_0
     183: aload_1
     184: invokestatic  #35                 // Method com/vladsch/flexmark/parser/Parser$Builder.access$700:(Lcom/vladsch/flexmark/parser/Parser$Builder;)Ljava/util/List;
     187: putfield      #36                 // Field inlineParserExtensionFactories:Ljava/util/List;
     190: return

  public static com.vladsch.flexmark.parser.Parser$Builder builder();
    Code:
       0: new           #3                  // class com/vladsch/flexmark/parser/Parser$Builder
       3: dup
       4: invokespecial #37                 // Method com/vladsch/flexmark/parser/Parser$Builder."<init>":()V
       7: areturn

  public static com.vladsch.flexmark.parser.Parser$Builder builder(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: new           #3                  // class com/vladsch/flexmark/parser/Parser$Builder
       3: dup
       4: aload_0
       5: invokespecial #38                 // Method com/vladsch/flexmark/parser/Parser$Builder."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
       8: areturn

  public com.vladsch.flexmark.ast.Document parse(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: new           #39                 // class com/vladsch/flexmark/internal/DocumentParser
       3: dup
       4: aload_0
       5: getfield      #8                  // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
       8: aload_0
       9: getfield      #11                 // Field blockParserFactories:Ljava/util/List;
      12: aload_0
      13: getfield      #17                 // Field paragraphPreProcessorFactories:Lcom/vladsch/flexmark/internal/DocumentParser$ParagraphPreProcessorDependencies;
      16: aload_0
      17: getfield      #20                 // Field blockPreProcessorDependencies:Lcom/vladsch/flexmark/internal/DocumentParser$BlockPreProcessorDependencies;
      20: aload_0
      21: getfield      #14                 // Field inlineParserFactory:Lcom/vladsch/flexmark/parser/InlineParserFactory;
      24: aload_0
      25: getfield      #8                  // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
      28: aload_0
      29: getfield      #31                 // Field specialCharacters:Ljava/util/BitSet;
      32: aload_0
      33: getfield      #26                 // Field delimiterCharacters:Ljava/util/BitSet;
      36: aload_0
      37: getfield      #23                 // Field delimiterProcessors:Ljava/util/Map;
      40: aload_0
      41: getfield      #29                 // Field linkRefProcessors:Lcom/vladsch/flexmark/internal/LinkRefProcessorData;
      44: aload_0
      45: getfield      #36                 // Field inlineParserExtensionFactories:Ljava/util/List;
      48: invokeinterface #40,  7           // InterfaceMethod com/vladsch/flexmark/parser/InlineParserFactory.inlineParser:(Lcom/vladsch/flexmark/util/options/DataHolder;Ljava/util/BitSet;Ljava/util/BitSet;Ljava/util/Map;Lcom/vladsch/flexmark/internal/LinkRefProcessorData;Ljava/util/List;)Lcom/vladsch/flexmark/parser/InlineParser;
      53: invokespecial #41                 // Method com/vladsch/flexmark/internal/DocumentParser."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;Ljava/util/List;Lcom/vladsch/flexmark/internal/DocumentParser$ParagraphPreProcessorDependencies;Lcom/vladsch/flexmark/internal/DocumentParser$BlockPreProcessorDependencies;Lcom/vladsch/flexmark/parser/InlineParser;)V
      56: astore_2
      57: aload_2
      58: aload_1
      59: invokevirtual #42                 // Method com/vladsch/flexmark/internal/DocumentParser.parse:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/ast/Document;
      62: astore_3
      63: aload_0
      64: aload_3
      65: invokespecial #43                 // Method postProcess:(Lcom/vladsch/flexmark/ast/Document;)Lcom/vladsch/flexmark/ast/Document;
      68: areturn

  public com.vladsch.flexmark.ast.Document parse(java.lang.String);
    Code:
       0: new           #39                 // class com/vladsch/flexmark/internal/DocumentParser
       3: dup
       4: aload_0
       5: getfield      #8                  // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
       8: aload_0
       9: getfield      #11                 // Field blockParserFactories:Ljava/util/List;
      12: aload_0
      13: getfield      #17                 // Field paragraphPreProcessorFactories:Lcom/vladsch/flexmark/internal/DocumentParser$ParagraphPreProcessorDependencies;
      16: aload_0
      17: getfield      #20                 // Field blockPreProcessorDependencies:Lcom/vladsch/flexmark/internal/DocumentParser$BlockPreProcessorDependencies;
      20: aload_0
      21: getfield      #14                 // Field inlineParserFactory:Lcom/vladsch/flexmark/parser/InlineParserFactory;
      24: aload_0
      25: getfield      #8                  // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
      28: aload_0
      29: getfield      #31                 // Field specialCharacters:Ljava/util/BitSet;
      32: aload_0
      33: getfield      #26                 // Field delimiterCharacters:Ljava/util/BitSet;
      36: aload_0
      37: getfield      #23                 // Field delimiterProcessors:Ljava/util/Map;
      40: aload_0
      41: getfield      #29                 // Field linkRefProcessors:Lcom/vladsch/flexmark/internal/LinkRefProcessorData;
      44: aload_0
      45: getfield      #36                 // Field inlineParserExtensionFactories:Ljava/util/List;
      48: invokeinterface #40,  7           // InterfaceMethod com/vladsch/flexmark/parser/InlineParserFactory.inlineParser:(Lcom/vladsch/flexmark/util/options/DataHolder;Ljava/util/BitSet;Ljava/util/BitSet;Ljava/util/Map;Lcom/vladsch/flexmark/internal/LinkRefProcessorData;Ljava/util/List;)Lcom/vladsch/flexmark/parser/InlineParser;
      53: invokespecial #41                 // Method com/vladsch/flexmark/internal/DocumentParser."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;Ljava/util/List;Lcom/vladsch/flexmark/internal/DocumentParser$ParagraphPreProcessorDependencies;Lcom/vladsch/flexmark/internal/DocumentParser$BlockPreProcessorDependencies;Lcom/vladsch/flexmark/parser/InlineParser;)V
      56: astore_2
      57: aload_2
      58: aload_1
      59: invokestatic  #44                 // Method com/vladsch/flexmark/util/sequence/CharSubSequence.of:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/sequence/CharSubSequence;
      62: invokevirtual #42                 // Method com/vladsch/flexmark/internal/DocumentParser.parse:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/ast/Document;
      65: astore_3
      66: aload_0
      67: aload_3
      68: invokespecial #43                 // Method postProcess:(Lcom/vladsch/flexmark/ast/Document;)Lcom/vladsch/flexmark/ast/Document;
      71: areturn

  public com.vladsch.flexmark.ast.Document parseReader(java.io.Reader) throws java.io.IOException;
    Code:
       0: new           #39                 // class com/vladsch/flexmark/internal/DocumentParser
       3: dup
       4: aload_0
       5: getfield      #8                  // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
       8: aload_0
       9: getfield      #11                 // Field blockParserFactories:Ljava/util/List;
      12: aload_0
      13: getfield      #17                 // Field paragraphPreProcessorFactories:Lcom/vladsch/flexmark/internal/DocumentParser$ParagraphPreProcessorDependencies;
      16: aload_0
      17: getfield      #20                 // Field blockPreProcessorDependencies:Lcom/vladsch/flexmark/internal/DocumentParser$BlockPreProcessorDependencies;
      20: aload_0
      21: getfield      #14                 // Field inlineParserFactory:Lcom/vladsch/flexmark/parser/InlineParserFactory;
      24: aload_0
      25: getfield      #8                  // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
      28: aload_0
      29: getfield      #31                 // Field specialCharacters:Ljava/util/BitSet;
      32: aload_0
      33: getfield      #26                 // Field delimiterCharacters:Ljava/util/BitSet;
      36: aload_0
      37: getfield      #23                 // Field delimiterProcessors:Ljava/util/Map;
      40: aload_0
      41: getfield      #29                 // Field linkRefProcessors:Lcom/vladsch/flexmark/internal/LinkRefProcessorData;
      44: aload_0
      45: getfield      #36                 // Field inlineParserExtensionFactories:Ljava/util/List;
      48: invokeinterface #40,  7           // InterfaceMethod com/vladsch/flexmark/parser/InlineParserFactory.inlineParser:(Lcom/vladsch/flexmark/util/options/DataHolder;Ljava/util/BitSet;Ljava/util/BitSet;Ljava/util/Map;Lcom/vladsch/flexmark/internal/LinkRefProcessorData;Ljava/util/List;)Lcom/vladsch/flexmark/parser/InlineParser;
      53: invokespecial #41                 // Method com/vladsch/flexmark/internal/DocumentParser."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;Ljava/util/List;Lcom/vladsch/flexmark/internal/DocumentParser$ParagraphPreProcessorDependencies;Lcom/vladsch/flexmark/internal/DocumentParser$BlockPreProcessorDependencies;Lcom/vladsch/flexmark/parser/InlineParser;)V
      56: astore_2
      57: aload_2
      58: aload_1
      59: invokevirtual #45                 // Method com/vladsch/flexmark/internal/DocumentParser.parse:(Ljava/io/Reader;)Lcom/vladsch/flexmark/ast/Document;
      62: astore_3
      63: aload_0
      64: aload_3
      65: invokespecial #43                 // Method postProcess:(Lcom/vladsch/flexmark/ast/Document;)Lcom/vladsch/flexmark/ast/Document;
      68: areturn

  private com.vladsch.flexmark.ast.Document postProcess(com.vladsch.flexmark.ast.Document);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #34                 // Field postProcessorDependencies:Lcom/vladsch/flexmark/internal/PostProcessorManager$PostProcessorDependencies;
       5: invokestatic  #46                 // Method com/vladsch/flexmark/internal/PostProcessorManager.processDocument:(Lcom/vladsch/flexmark/ast/Document;Lcom/vladsch/flexmark/internal/PostProcessorManager$PostProcessorDependencies;)Lcom/vladsch/flexmark/ast/Document;
       8: astore_1
       9: aload_1
      10: areturn

  public com.vladsch.flexmark.parser.Parser withOptions(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: aload_0
       5: goto          57
       8: aload_1
       9: getstatic     #47                 // Field EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
      12: invokeinterface #48,  2           // InterfaceMethod com/vladsch/flexmark/util/options/DataHolder.contains:(Lcom/vladsch/flexmark/util/options/DataKey;)Z
      17: ifeq          38
      20: new           #49                 // class com/vladsch/flexmark/parser/Parser
      23: dup
      24: new           #3                  // class com/vladsch/flexmark/parser/Parser$Builder
      27: dup
      28: aload_1
      29: invokespecial #38                 // Method com/vladsch/flexmark/parser/Parser$Builder."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
      32: invokespecial #1                  // Method "<init>":(Lcom/vladsch/flexmark/parser/Parser$Builder;)V
      35: goto          57
      38: new           #49                 // class com/vladsch/flexmark/parser/Parser
      41: dup
      42: new           #3                  // class com/vladsch/flexmark/parser/Parser$Builder
      45: dup
      46: aload_0
      47: getfield      #5                  // Field builder:Lcom/vladsch/flexmark/parser/Parser$Builder;
      50: aload_1
      51: invokespecial #50                 // Method com/vladsch/flexmark/parser/Parser$Builder."<init>":(Lcom/vladsch/flexmark/parser/Parser$Builder;Lcom/vladsch/flexmark/util/options/DataHolder;)V
      54: invokespecial #1                  // Method "<init>":(Lcom/vladsch/flexmark/parser/Parser$Builder;)V
      57: areturn

  public boolean transferReferences(com.vladsch.flexmark.ast.Document, com.vladsch.flexmark.ast.Document);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_0
       3: getfield      #8                  // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
       6: getstatic     #47                 // Field EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
       9: invokeinterface #48,  2           // InterfaceMethod com/vladsch/flexmark/util/options/DataHolder.contains:(Lcom/vladsch/flexmark/util/options/DataKey;)Z
      14: ifeq          93
      17: aload_0
      18: getfield      #8                  // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
      21: getstatic     #47                 // Field EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
      24: invokeinterface #51,  2           // InterfaceMethod com/vladsch/flexmark/util/options/DataHolder.get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
      29: checkcast     #52                 // class java/lang/Iterable
      32: invokeinterface #53,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      37: astore        4
      39: aload         4
      41: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          93
      49: aload         4
      51: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #56                 // class com/vladsch/flexmark/Extension
      59: astore        5
      61: aload         5
      63: instanceof    #57                 // class com/vladsch/flexmark/parser/Parser$ReferenceHoldingExtension
      66: ifeq          90
      69: aload         5
      71: checkcast     #57                 // class com/vladsch/flexmark/parser/Parser$ReferenceHoldingExtension
      74: astore        6
      76: aload         6
      78: aload_1
      79: aload_2
      80: invokeinterface #58,  3           // InterfaceMethod com/vladsch/flexmark/parser/Parser$ReferenceHoldingExtension.transferReferences:(Lcom/vladsch/flexmark/util/options/MutableDataHolder;Lcom/vladsch/flexmark/util/options/DataHolder;)Z
      85: ifeq          90
      88: iconst_1
      89: istore_3
      90: goto          39
      93: aload_1
      94: getstatic     #59                 // Field REFERENCES:Lcom/vladsch/flexmark/util/options/DataKey;
      97: invokevirtual #60                 // Method com/vladsch/flexmark/ast/Document.contains:(Lcom/vladsch/flexmark/util/options/DataKey;)Z
     100: ifeq          159
     103: aload_2
     104: getstatic     #59                 // Field REFERENCES:Lcom/vladsch/flexmark/util/options/DataKey;
     107: invokevirtual #60                 // Method com/vladsch/flexmark/ast/Document.contains:(Lcom/vladsch/flexmark/util/options/DataKey;)Z
     110: ifeq          159
     113: getstatic     #59                 // Field REFERENCES:Lcom/vladsch/flexmark/util/options/DataKey;
     116: aload_1
     117: invokevirtual #61                 // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     120: checkcast     #62                 // class com/vladsch/flexmark/ast/NodeRepository
     123: getstatic     #59                 // Field REFERENCES:Lcom/vladsch/flexmark/util/options/DataKey;
     126: aload_2
     127: invokevirtual #61                 // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     130: checkcast     #62                 // class com/vladsch/flexmark/ast/NodeRepository
     133: getstatic     #63                 // Field REFERENCES_KEEP:Lcom/vladsch/flexmark/util/options/DataKey;
     136: aload_1
     137: invokevirtual #61                 // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     140: getstatic     #64                 // Field com/vladsch/flexmark/util/KeepType.FIRST:Lcom/vladsch/flexmark/util/KeepType;
     143: if_acmpne     150
     146: iconst_1
     147: goto          151
     150: iconst_0
     151: invokestatic  #65                 // Method transferReferences:(Lcom/vladsch/flexmark/ast/NodeRepository;Lcom/vladsch/flexmark/ast/NodeRepository;Z)Z
     154: ifeq          159
     157: iconst_1
     158: istore_3
     159: iload_3
     160: ifeq          175
     163: aload_1
     164: getstatic     #66                 // Field com/vladsch/flexmark/html/HtmlRenderer.RECHECK_UNDEFINED_REFERENCES:Lcom/vladsch/flexmark/util/options/DataKey;
     167: iconst_1
     168: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     171: invokevirtual #68                 // Method com/vladsch/flexmark/ast/Document.set:(Lcom/vladsch/flexmark/util/options/DataKey;Ljava/lang/Object;)Lcom/vladsch/flexmark/util/options/MutableDataHolder;
     174: pop
     175: iload_3
     176: ireturn

  public static <T extends com.vladsch.flexmark.ast.Node> boolean transferReferences(com.vladsch.flexmark.ast.NodeRepository<T>, com.vladsch.flexmark.ast.NodeRepository<T>, boolean);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_1
       3: invokevirtual #69                 // Method com/vladsch/flexmark/ast/NodeRepository.entrySet:()Ljava/util/Set;
       6: invokeinterface #70,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore        4
      13: aload         4
      15: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          80
      23: aload         4
      25: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #71                 // class java/util/Map$Entry
      33: astore        5
      35: iload_2
      36: ifeq          53
      39: aload_0
      40: aload         5
      42: invokeinterface #72,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      47: invokevirtual #73                 // Method com/vladsch/flexmark/ast/NodeRepository.containsKey:(Ljava/lang/Object;)Z
      50: ifne          77
      53: aload_0
      54: aload         5
      56: invokeinterface #72,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      61: checkcast     #74                 // class java/lang/String
      64: aload         5
      66: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      71: invokevirtual #76                 // Method com/vladsch/flexmark/ast/NodeRepository.put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      74: pop
      75: iconst_1
      76: istore_3
      77: goto          13
      80: iconst_1
      81: ireturn

  public static com.vladsch.flexmark.util.options.MutableDataHolder addExtensions(com.vladsch.flexmark.util.options.MutableDataHolder, com.vladsch.flexmark.Extension...);
    Code:
       0: aload_0
       1: getstatic     #47                 // Field EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
       4: invokeinterface #77,  2           // InterfaceMethod com/vladsch/flexmark/util/options/MutableDataHolder.get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
       9: checkcast     #52                 // class java/lang/Iterable
      12: astore_2
      13: new           #78                 // class java/util/ArrayList
      16: dup
      17: invokespecial #79                 // Method java/util/ArrayList."<init>":()V
      20: astore_3
      21: aload_3
      22: aload_1
      23: invokestatic  #80                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      26: invokevirtual #81                 // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      29: pop
      30: aload_2
      31: invokeinterface #53,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      36: astore        4
      38: aload         4
      40: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          70
      48: aload         4
      50: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #56                 // class com/vladsch/flexmark/Extension
      58: astore        5
      60: aload_3
      61: aload         5
      63: invokevirtual #82                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      66: pop
      67: goto          38
      70: aload_0
      71: getstatic     #47                 // Field EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
      74: aload_3
      75: invokeinterface #83,  3           // InterfaceMethod com/vladsch/flexmark/util/options/MutableDataHolder.set:(Lcom/vladsch/flexmark/util/options/DataKey;Ljava/lang/Object;)Lcom/vladsch/flexmark/util/options/MutableDataHolder;
      80: pop
      81: aload_0
      82: areturn

  public static com.vladsch.flexmark.util.options.MutableDataHolder removeExtensions(com.vladsch.flexmark.util.options.MutableDataHolder, java.lang.Class...);
    Code:
       0: aload_0
       1: getstatic     #47                 // Field EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
       4: invokeinterface #77,  2           // InterfaceMethod com/vladsch/flexmark/util/options/MutableDataHolder.get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
       9: checkcast     #52                 // class java/lang/Iterable
      12: astore_2
      13: new           #84                 // class java/util/HashSet
      16: dup
      17: invokespecial #85                 // Method java/util/HashSet."<init>":()V
      20: astore_3
      21: aload_2
      22: invokeinterface #53,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      27: astore        4
      29: aload         4
      31: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          116
      39: aload         4
      41: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #56                 // class com/vladsch/flexmark/Extension
      49: astore        5
      51: iconst_1
      52: istore        6
      54: aload_1
      55: astore        7
      57: aload         7
      59: arraylength
      60: istore        8
      62: iconst_0
      63: istore        9
      65: iload         9
      67: iload         8
      69: if_icmpge     101
      72: aload         7
      74: iload         9
      76: aaload
      77: astore        10
      79: aload         10
      81: aload         5
      83: invokevirtual #86                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      86: ifeq          95
      89: iconst_0
      90: istore        6
      92: goto          101
      95: iinc          9, 1
      98: goto          65
     101: iload         6
     103: ifeq          113
     106: aload_3
     107: aload         5
     109: invokevirtual #87                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
     112: pop
     113: goto          29
     116: aload_0
     117: getstatic     #47                 // Field EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
     120: aload_3
     121: invokeinterface #83,  3           // InterfaceMethod com/vladsch/flexmark/util/options/MutableDataHolder.set:(Lcom/vladsch/flexmark/util/options/DataKey;Ljava/lang/Object;)Lcom/vladsch/flexmark/util/options/MutableDataHolder;
     126: pop
     127: aload_0
     128: areturn

  public com.vladsch.flexmark.IParse withOptions(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #88                 // Method withOptions:(Lcom/vladsch/flexmark/util/options/DataHolder;)Lcom/vladsch/flexmark/parser/Parser;
       5: areturn

  public com.vladsch.flexmark.ast.Node parseReader(java.io.Reader) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #89                 // Method parseReader:(Ljava/io/Reader;)Lcom/vladsch/flexmark/ast/Document;
       5: areturn

  public com.vladsch.flexmark.ast.Node parse(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #90                 // Method parse:(Ljava/lang/String;)Lcom/vladsch/flexmark/ast/Document;
       5: areturn

  public com.vladsch.flexmark.ast.Node parse(com.vladsch.flexmark.util.sequence.BasedSequence);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #91                 // Method parse:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/ast/Document;
       5: areturn

  com.vladsch.flexmark.parser.Parser(com.vladsch.flexmark.parser.Parser$Builder, com.vladsch.flexmark.parser.Parser$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lcom/vladsch/flexmark/parser/Parser$Builder;)V
       5: return

  static {};
    Code:
       0: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
       3: dup
       4: ldc           #93                 // String EXTENSIONS
       6: getstatic     #94                 // Field com/vladsch/flexmark/Extension.EMPTY_LIST:Ljava/lang/Iterable;
       9: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      12: putstatic     #47                 // Field EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
      15: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
      18: dup
      19: ldc           #96                 // String REFERENCES_KEEP
      21: getstatic     #64                 // Field com/vladsch/flexmark/util/KeepType.FIRST:Lcom/vladsch/flexmark/util/KeepType;
      24: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      27: putstatic     #63                 // Field REFERENCES_KEEP:Lcom/vladsch/flexmark/util/options/DataKey;
      30: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
      33: dup
      34: ldc           #97                 // String REFERENCES
      36: new           #98                 // class com/vladsch/flexmark/parser/Parser$1
      39: dup
      40: invokespecial #99                 // Method com/vladsch/flexmark/parser/Parser$1."<init>":()V
      43: invokespecial #100                // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Lcom/vladsch/flexmark/util/collection/DataValueFactory;)V
      46: putstatic     #59                 // Field REFERENCES:Lcom/vladsch/flexmark/util/options/DataKey;
      49: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
      52: dup
      53: ldc           #101                // String ASTERISK_DELIMITER_PROCESSOR
      55: iconst_1
      56: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      59: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      62: putstatic     #102                // Field ASTERISK_DELIMITER_PROCESSOR:Lcom/vladsch/flexmark/util/options/DataKey;
      65: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
      68: dup
      69: ldc           #103                // String TRACK_DOCUMENT_LINES
      71: iconst_0
      72: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      75: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      78: putstatic     #104                // Field TRACK_DOCUMENT_LINES:Lcom/vladsch/flexmark/util/options/DataKey;
      81: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
      84: dup
      85: ldc           #105                // String BLOCK_QUOTE_PARSER
      87: iconst_1
      88: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      91: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      94: putstatic     #106                // Field BLOCK_QUOTE_PARSER:Lcom/vladsch/flexmark/util/options/DataKey;
      97: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     100: dup
     101: ldc           #107                // String BLOCK_QUOTE_TO_BLANK_LINE
     103: iconst_0
     104: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     107: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     110: putstatic     #108                // Field BLOCK_QUOTE_TO_BLANK_LINE:Lcom/vladsch/flexmark/util/options/DataKey;
     113: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     116: dup
     117: ldc           #109                // String BLOCK_QUOTE_IGNORE_BLANK_LINE
     119: iconst_0
     120: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     123: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     126: putstatic     #110                // Field BLOCK_QUOTE_IGNORE_BLANK_LINE:Lcom/vladsch/flexmark/util/options/DataKey;
     129: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     132: dup
     133: ldc           #111                // String BLOCK_QUOTE_ALLOW_LEADING_SPACE
     135: iconst_1
     136: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     139: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     142: putstatic     #112                // Field BLOCK_QUOTE_ALLOW_LEADING_SPACE:Lcom/vladsch/flexmark/util/options/DataKey;
     145: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     148: dup
     149: ldc           #113                // String BLOCK_QUOTE_INTERRUPTS_PARAGRAPH
     151: iconst_1
     152: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     155: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     158: putstatic     #114                // Field BLOCK_QUOTE_INTERRUPTS_PARAGRAPH:Lcom/vladsch/flexmark/util/options/DataKey;
     161: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     164: dup
     165: ldc           #115                // String BLOCK_QUOTE_INTERRUPTS_ITEM_PARAGRAPH
     167: iconst_1
     168: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     171: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     174: putstatic     #116                // Field BLOCK_QUOTE_INTERRUPTS_ITEM_PARAGRAPH:Lcom/vladsch/flexmark/util/options/DataKey;
     177: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     180: dup
     181: ldc           #117                // String BLOCK_QUOTE_WITH_LEAD_SPACES_INTERRUPTS_ITEM_PARAGRAPH
     183: iconst_1
     184: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     187: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     190: putstatic     #118                // Field BLOCK_QUOTE_WITH_LEAD_SPACES_INTERRUPTS_ITEM_PARAGRAPH:Lcom/vladsch/flexmark/util/options/DataKey;
     193: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     196: dup
     197: ldc           #119                // String FENCED_CODE_BLOCK_PARSER
     199: iconst_1
     200: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     203: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     206: putstatic     #120                // Field FENCED_CODE_BLOCK_PARSER:Lcom/vladsch/flexmark/util/options/DataKey;
     209: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     212: dup
     213: ldc           #121                // String MATCH_CLOSING_FENCE_CHARACTERS
     215: iconst_1
     216: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     219: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     222: putstatic     #122                // Field MATCH_CLOSING_FENCE_CHARACTERS:Lcom/vladsch/flexmark/util/options/DataKey;
     225: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     228: dup
     229: ldc           #123                // String FENCED_CODE_CONTENT_BLOCK
     231: iconst_0
     232: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     235: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     238: putstatic     #124                // Field FENCED_CODE_CONTENT_BLOCK:Lcom/vladsch/flexmark/util/options/DataKey;
     241: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     244: dup
     245: ldc           #125                // String CODE_SOFT_LINE_BREAKS
     247: iconst_0
     248: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     251: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     254: putstatic     #126                // Field CODE_SOFT_LINE_BREAKS:Lcom/vladsch/flexmark/util/options/DataKey;
     257: getstatic     #124                // Field FENCED_CODE_CONTENT_BLOCK:Lcom/vladsch/flexmark/util/options/DataKey;
     260: putstatic     #127                // Field CODE_CONTENT_BLOCK:Lcom/vladsch/flexmark/util/options/DataKey;
     263: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     266: dup
     267: ldc           #128                // String HARD_LINE_BREAK_LIMIT
     269: iconst_0
     270: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     273: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     276: putstatic     #129                // Field HARD_LINE_BREAK_LIMIT:Lcom/vladsch/flexmark/util/options/DataKey;
     279: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     282: dup
     283: ldc           #130                // String HEADING_PARSER
     285: iconst_1
     286: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     289: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     292: putstatic     #131                // Field HEADING_PARSER:Lcom/vladsch/flexmark/util/options/DataKey;
     295: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     298: dup
     299: ldc           #132                // String HEADING_SETEXT_MARKER_LENGTH
     301: iconst_1
     302: invokestatic  #133                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     305: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     308: putstatic     #134                // Field HEADING_SETEXT_MARKER_LENGTH:Lcom/vladsch/flexmark/util/options/DataKey;
     311: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     314: dup
     315: ldc           #135                // String HEADING_NO_ATX_SPACE
     317: iconst_0
     318: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     321: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     324: putstatic     #136                // Field HEADING_NO_ATX_SPACE:Lcom/vladsch/flexmark/util/options/DataKey;
     327: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     330: dup
     331: ldc           #137                // String HEADING_NO_EMPTY_HEADING_WITHOUT_SPACE
     333: iconst_0
     334: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     337: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     340: putstatic     #138                // Field HEADING_NO_EMPTY_HEADING_WITHOUT_SPACE:Lcom/vladsch/flexmark/util/options/DataKey;
     343: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     346: dup
     347: ldc           #139                // String HEADING_NO_LEAD_SPACE
     349: iconst_0
     350: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     353: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     356: putstatic     #140                // Field HEADING_NO_LEAD_SPACE:Lcom/vladsch/flexmark/util/options/DataKey;
     359: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     362: dup
     363: ldc           #141                // String HEADING_CAN_INTERRUPT_ITEM_PARAGRAPH
     365: iconst_1
     366: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     369: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     372: putstatic     #142                // Field HEADING_CAN_INTERRUPT_ITEM_PARAGRAPH:Lcom/vladsch/flexmark/util/options/DataKey;
     375: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     378: dup
     379: ldc           #143                // String HTML_BLOCK_PARSER
     381: iconst_1
     382: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     385: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     388: putstatic     #144                // Field HTML_BLOCK_PARSER:Lcom/vladsch/flexmark/util/options/DataKey;
     391: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     394: dup
     395: ldc           #145                // String HTML_COMMENT_BLOCKS_INTERRUPT_PARAGRAPH
     397: iconst_1
     398: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     401: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     404: putstatic     #146                // Field HTML_COMMENT_BLOCKS_INTERRUPT_PARAGRAPH:Lcom/vladsch/flexmark/util/options/DataKey;
     407: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     410: dup
     411: ldc           #147                // String INLINE_DELIMITER_DIRECTIONAL_PUNCTUATIONS
     413: iconst_0
     414: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     417: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     420: putstatic     #148                // Field INLINE_DELIMITER_DIRECTIONAL_PUNCTUATIONS:Lcom/vladsch/flexmark/util/options/DataKey;
     423: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     426: dup
     427: ldc           #149                // String INDENTED_CODE_BLOCK_PARSER
     429: iconst_1
     430: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     433: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     436: putstatic     #150                // Field INDENTED_CODE_BLOCK_PARSER:Lcom/vladsch/flexmark/util/options/DataKey;
     439: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     442: dup
     443: ldc           #151                // String INDENTED_CODE_NO_TRAILING_BLANK_LINES
     445: iconst_1
     446: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     449: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     452: putstatic     #152                // Field INDENTED_CODE_NO_TRAILING_BLANK_LINES:Lcom/vladsch/flexmark/util/options/DataKey;
     455: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     458: dup
     459: ldc           #153                // String INTELLIJ_DUMMY_IDENTIFIER
     461: iconst_0
     462: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     465: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     468: putstatic     #154                // Field INTELLIJ_DUMMY_IDENTIFIER:Lcom/vladsch/flexmark/util/options/DataKey;
     471: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     474: dup
     475: ldc           #155                // String MATCH_NESTED_LINK_REFS_FIRST
     477: iconst_1
     478: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     481: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     484: putstatic     #156                // Field MATCH_NESTED_LINK_REFS_FIRST:Lcom/vladsch/flexmark/util/options/DataKey;
     487: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     490: dup
     491: ldc           #157                // String PARSE_INNER_HTML_COMMENTS
     493: iconst_0
     494: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     497: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     500: putstatic     #158                // Field PARSE_INNER_HTML_COMMENTS:Lcom/vladsch/flexmark/util/options/DataKey;
     503: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     506: dup
     507: ldc           #159                // String PARSE_MULTI_LINE_IMAGE_URLS
     509: iconst_0
     510: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     513: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     516: putstatic     #160                // Field PARSE_MULTI_LINE_IMAGE_URLS:Lcom/vladsch/flexmark/util/options/DataKey;
     519: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     522: dup
     523: ldc           #161                // String PARSE_JEKYLL_MACROS_IN_URLS
     525: iconst_0
     526: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     529: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     532: putstatic     #162                // Field PARSE_JEKYLL_MACROS_IN_URLS:Lcom/vladsch/flexmark/util/options/DataKey;
     535: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     538: dup
     539: ldc           #163                // String SPACE_IN_LINK_URLS
     541: iconst_0
     542: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     545: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     548: putstatic     #164                // Field SPACE_IN_LINK_URLS:Lcom/vladsch/flexmark/util/options/DataKey;
     551: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     554: dup
     555: ldc           #165                // String SPACE_IN_LINK_ELEMENTS
     557: iconst_0
     558: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     561: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     564: putstatic     #166                // Field SPACE_IN_LINK_ELEMENTS:Lcom/vladsch/flexmark/util/options/DataKey;
     567: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     570: dup
     571: ldc           #167                // String REFERENCE_BLOCK_PRE_PROCESSOR
     573: iconst_1
     574: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     577: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     580: putstatic     #168                // Field REFERENCE_PARAGRAPH_PRE_PROCESSOR:Lcom/vladsch/flexmark/util/options/DataKey;
     583: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     586: dup
     587: ldc           #169                // String THEMATIC_BREAK_PARSER
     589: iconst_1
     590: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     593: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     596: putstatic     #170                // Field THEMATIC_BREAK_PARSER:Lcom/vladsch/flexmark/util/options/DataKey;
     599: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     602: dup
     603: ldc           #171                // String THEMATIC_BREAK_RELAXED_START
     605: iconst_1
     606: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     609: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     612: putstatic     #172                // Field THEMATIC_BREAK_RELAXED_START:Lcom/vladsch/flexmark/util/options/DataKey;
     615: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     618: dup
     619: ldc           #173                // String UNDERSCORE_DELIMITER_PROCESSOR
     621: iconst_1
     622: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     625: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     628: putstatic     #174                // Field UNDERSCORE_DELIMITER_PROCESSOR:Lcom/vladsch/flexmark/util/options/DataKey;
     631: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     634: dup
     635: ldc           #175                // String BLANK_LINES_IN_AST
     637: iconst_0
     638: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     641: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     644: putstatic     #176                // Field BLANK_LINES_IN_AST:Lcom/vladsch/flexmark/util/options/DataKey;
     647: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     650: dup
     651: ldc           #177                // String STRONG_WRAPS_EMPHASIS
     653: iconst_0
     654: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     657: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     660: putstatic     #178                // Field STRONG_WRAPS_EMPHASIS:Lcom/vladsch/flexmark/util/options/DataKey;
     663: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     666: dup
     667: ldc           #179                // String LINKS_ALLOW_MATCHED_PARENTHESES
     669: iconst_1
     670: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     673: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     676: putstatic     #180                // Field LINKS_ALLOW_MATCHED_PARENTHESES:Lcom/vladsch/flexmark/util/options/DataKey;
     679: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     682: dup
     683: ldc           #181                // String LIST_BLOCK_PARSER
     685: iconst_1
     686: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     689: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     692: putstatic     #182                // Field LIST_BLOCK_PARSER:Lcom/vladsch/flexmark/util/options/DataKey;
     695: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     698: dup
     699: ldc           #183                // String PARSER_EMULATION_PROFILE
     701: getstatic     #184                // Field com/vladsch/flexmark/parser/ParserEmulationProfile.COMMONMARK:Lcom/vladsch/flexmark/parser/ParserEmulationProfile;
     704: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     707: putstatic     #185                // Field PARSER_EMULATION_PROFILE:Lcom/vladsch/flexmark/util/options/DataKey;
     710: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     713: dup
     714: ldc           #186                // String HTML_BLOCK_DEEP_PARSER
     716: iconst_0
     717: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     720: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     723: putstatic     #187                // Field HTML_BLOCK_DEEP_PARSER:Lcom/vladsch/flexmark/util/options/DataKey;
     726: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     729: dup
     730: ldc           #188                // String HTML_BLOCK_DEEP_PARSE_NON_BLOCK
     732: iconst_1
     733: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     736: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     739: putstatic     #189                // Field HTML_BLOCK_DEEP_PARSE_NON_BLOCK:Lcom/vladsch/flexmark/util/options/DataKey;
     742: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     745: dup
     746: ldc           #190                // String HTML_BLOCK_COMMENT_ONLY_FULL_LINE
     748: iconst_0
     749: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     752: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     755: putstatic     #191                // Field HTML_BLOCK_COMMENT_ONLY_FULL_LINE:Lcom/vladsch/flexmark/util/options/DataKey;
     758: new           #192                // class com/vladsch/flexmark/util/collection/DynamicDefaultKey
     761: dup
     762: ldc           #193                // String HTML_BLOCK_START_ONLY_ON_BLOCK_TAGS
     764: getstatic     #187                // Field HTML_BLOCK_DEEP_PARSER:Lcom/vladsch/flexmark/util/options/DataKey;
     767: invokespecial #194                // Method com/vladsch/flexmark/util/collection/DynamicDefaultKey."<init>":(Ljava/lang/String;Lcom/vladsch/flexmark/util/options/DataKey;)V
     770: putstatic     #195                // Field HTML_BLOCK_START_ONLY_ON_BLOCK_TAGS:Lcom/vladsch/flexmark/util/options/DataKey;
     773: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     776: dup
     777: ldc           #196                // String HTML_BL OCK_DEEP_PARSE_BLANK_LINE_INTERRUPTS
     779: iconst_1
     780: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     783: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     786: putstatic     #197                // Field HTML_BLOCK_DEEP_PARSE_BLANK_LINE_INTERRUPTS:Lcom/vladsch/flexmark/util/options/DataKey;
     789: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     792: dup
     793: ldc           #198                // String HTML_BL HTML_BLOCK_DEEP_PARSE_FIRST_OPEN_TAG_ON_ONE_LINE
     795: iconst_0
     796: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     799: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     802: putstatic     #199                // Field HTML_BLOCK_DEEP_PARSE_FIRST_OPEN_TAG_ON_ONE_LINE:Lcom/vladsch/flexmark/util/options/DataKey;
     805: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     808: dup
     809: ldc           #200                // String HTML_BLOCK_DEEP_PARSE_MARKDOWN_INTERRUPTS_CLOSED
     811: iconst_0
     812: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     815: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     818: putstatic     #201                // Field HTML_BLOCK_DEEP_PARSE_MARKDOWN_INTERRUPTS_CLOSED:Lcom/vladsch/flexmark/util/options/DataKey;
     821: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     824: dup
     825: ldc           #202                // String HTML_BLOCK_DEEP_PARSE_BLANK_LINE_INTERRUPTS_PARTIAL_TAG
     827: iconst_1
     828: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     831: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     834: putstatic     #203                // Field HTML_BLOCK_DEEP_PARSE_BLANK_LINE_INTERRUPTS_PARTIAL_TAG:Lcom/vladsch/flexmark/util/options/DataKey;
     837: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     840: dup
     841: ldc           #204                // String HTML_BLOCK_DEEP_PARSE_INDENTED_CODE_INTERRUPTS
     843: iconst_0
     844: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     847: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     850: putstatic     #205                // Field HTML_BLOCK_DEEP_PARSE_INDENTED_CODE_INTERRUPTS:Lcom/vladsch/flexmark/util/options/DataKey;
     853: getstatic     #185                // Field PARSER_EMULATION_PROFILE:Lcom/vladsch/flexmark/util/options/DataKey;
     856: putstatic     #206                // Field PARSER_EMULATION_FAMILY:Lcom/vladsch/flexmark/util/options/DataKey;
     859: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     862: dup
     863: ldc           #207                // String LISTS_CODE_INDENT
     865: iconst_4
     866: invokestatic  #133                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     869: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     872: putstatic     #208                // Field LISTS_CODE_INDENT:Lcom/vladsch/flexmark/util/options/DataKey;
     875: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     878: dup
     879: ldc           #209                // String LISTS_ITEM_INDENT
     881: iconst_4
     882: invokestatic  #133                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     885: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     888: putstatic     #210                // Field LISTS_ITEM_INDENT:Lcom/vladsch/flexmark/util/options/DataKey;
     891: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     894: dup
     895: ldc           #211                // String LISTS_NEW_ITEM_CODE_INDENT
     897: iconst_4
     898: invokestatic  #133                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     901: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     904: putstatic     #212                // Field LISTS_NEW_ITEM_CODE_INDENT:Lcom/vladsch/flexmark/util/options/DataKey;
     907: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     910: dup
     911: ldc           #213                // String LISTS_ITEM_MARKER_SPACE
     913: iconst_0
     914: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     917: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     920: putstatic     #214                // Field LISTS_ITEM_MARKER_SPACE:Lcom/vladsch/flexmark/util/options/DataKey;
     923: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     926: dup
     927: ldc           #215                // String LISTS_ITEM_MARKER_SUFFIXES
     929: iconst_0
     930: anewarray     #74                 // class java/lang/String
     933: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     936: putstatic     #216                // Field LISTS_ITEM_MARKER_SUFFIXES:Lcom/vladsch/flexmark/util/options/DataKey;
     939: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     942: dup
     943: ldc           #217                // String LISTS_NUMBERED_ITEM_MARKER_SUFFIXED
     945: iconst_1
     946: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     949: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     952: putstatic     #218                // Field LISTS_NUMBERED_ITEM_MARKER_SUFFIXED:Lcom/vladsch/flexmark/util/options/DataKey;
     955: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     958: dup
     959: ldc           #219                // String LISTS_AUTO_LOOSE
     961: iconst_1
     962: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     965: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     968: putstatic     #220                // Field LISTS_AUTO_LOOSE:Lcom/vladsch/flexmark/util/options/DataKey;
     971: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     974: dup
     975: ldc           #221                // String LISTS_AUTO_LOOSE_ONE_LEVEL_LISTS
     977: iconst_0
     978: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     981: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     984: putstatic     #222                // Field LISTS_AUTO_LOOSE_ONE_LEVEL_LISTS:Lcom/vladsch/flexmark/util/options/DataKey;
     987: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
     990: dup
     991: ldc           #223                // String LISTS_LOOSE_WHEN_PREV_HAS_TRAILING_BLANK_LINE
     993: iconst_0
     994: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     997: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1000: putstatic     #224                // Field LISTS_LOOSE_WHEN_PREV_HAS_TRAILING_BLANK_LINE:Lcom/vladsch/flexmark/util/options/DataKey;
    1003: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1006: dup
    1007: ldc           #225                // String LISTS_LOOSE_WHEN_LAST_ITEM_PREV_HAS_TRAILING_BLANK_LINE
    1009: iconst_0
    1010: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1013: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1016: putstatic     #226                // Field LISTS_LOOSE_WHEN_LAST_ITEM_PREV_HAS_TRAILING_BLANK_LINE:Lcom/vladsch/flexmark/util/options/DataKey;
    1019: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1022: dup
    1023: ldc           #227                // String LISTS_LOOSE_WHEN_HAS_NON_LIST_CHILDREN
    1025: iconst_0
    1026: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1029: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1032: putstatic     #228                // Field LISTS_LOOSE_WHEN_HAS_NON_LIST_CHILDREN:Lcom/vladsch/flexmark/util/options/DataKey;
    1035: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1038: dup
    1039: ldc           #229                // String LISTS_LOOSE_WHEN_BLANK_LINE_FOLLOWS_ITEM_PARAGRAPH
    1041: iconst_0
    1042: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1045: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1048: putstatic     #230                // Field LISTS_LOOSE_WHEN_BLANK_LINE_FOLLOWS_ITEM_PARAGRAPH:Lcom/vladsch/flexmark/util/options/DataKey;
    1051: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1054: dup
    1055: ldc           #231                // String LISTS_LOOSE_WHEN_HAS_LOOSE_SUB_ITEM
    1057: iconst_0
    1058: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1061: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1064: putstatic     #232                // Field LISTS_LOOSE_WHEN_HAS_LOOSE_SUB_ITEM:Lcom/vladsch/flexmark/util/options/DataKey;
    1067: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1070: dup
    1071: ldc           #233                // String LISTS_LOOSE_WHEN_HAS_TRAILING_BLANK_LINE
    1073: iconst_1
    1074: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1077: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1080: putstatic     #234                // Field LISTS_LOOSE_WHEN_HAS_TRAILING_BLANK_LINE:Lcom/vladsch/flexmark/util/options/DataKey;
    1083: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1086: dup
    1087: ldc           #235                // String LISTS_LOOSE_WHEN_CONTAINS_BLANK_LINE
    1089: iconst_0
    1090: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1093: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1096: putstatic     #236                // Field LISTS_LOOSE_WHEN_CONTAINS_BLANK_LINE:Lcom/vladsch/flexmark/util/options/DataKey;
    1099: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1102: dup
    1103: ldc           #237                // String LISTS_DELIMITER_MISMATCH_TO_NEW_LIST
    1105: iconst_1
    1106: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1109: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1112: putstatic     #238                // Field LISTS_DELIMITER_MISMATCH_TO_NEW_LIST:Lcom/vladsch/flexmark/util/options/DataKey;
    1115: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1118: dup
    1119: ldc           #239                // String LISTS_END_ON_DOUBLE_BLANK
    1121: iconst_0
    1122: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1125: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1128: putstatic     #240                // Field LISTS_END_ON_DOUBLE_BLANK:Lcom/vladsch/flexmark/util/options/DataKey;
    1131: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1134: dup
    1135: ldc           #241                // String LISTS_ITEM_TYPE_MISMATCH_TO_NEW_LIST
    1137: iconst_1
    1138: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1141: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1144: putstatic     #242                // Field LISTS_ITEM_TYPE_MISMATCH_TO_NEW_LIST:Lcom/vladsch/flexmark/util/options/DataKey;
    1147: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1150: dup
    1151: ldc           #243                // String LISTS_ITEM_TYPE_MISMATCH_TO_SUB_LIST
    1153: iconst_0
    1154: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1157: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1160: putstatic     #244                // Field LISTS_ITEM_TYPE_MISMATCH_TO_SUB_LIST:Lcom/vladsch/flexmark/util/options/DataKey;
    1163: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1166: dup
    1167: ldc           #245                // String LISTS_ORDERED_ITEM_DOT_ONLY
    1169: iconst_0
    1170: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1173: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1176: putstatic     #246                // Field LISTS_ORDERED_ITEM_DOT_ONLY:Lcom/vladsch/flexmark/util/options/DataKey;
    1179: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1182: dup
    1183: ldc           #247                // String LISTS_ORDERED_LIST_MANUAL_START
    1185: iconst_1
    1186: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1189: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1192: putstatic     #248                // Field LISTS_ORDERED_LIST_MANUAL_START:Lcom/vladsch/flexmark/util/options/DataKey;
    1195: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1198: dup
    1199: ldc           #249                // String LISTS_ITEM_CONTENT_AFTER_SUFFIX
    1201: iconst_0
    1202: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1205: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1208: putstatic     #250                // Field LISTS_ITEM_CONTENT_AFTER_SUFFIX:Lcom/vladsch/flexmark/util/options/DataKey;
    1211: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1214: dup
    1215: ldc           #251                // String LISTS_BULLET_ITEM_INTERRUPTS_PARAGRAPH
    1217: iconst_1
    1218: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1221: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1224: putstatic     #252                // Field LISTS_BULLET_ITEM_INTERRUPTS_PARAGRAPH:Lcom/vladsch/flexmark/util/options/DataKey;
    1227: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1230: dup
    1231: ldc           #253                // String LISTS_ORDERED_ITEM_INTERRUPTS_PARAGRAPH
    1233: iconst_1
    1234: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1237: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1240: putstatic     #254                // Field LISTS_ORDERED_ITEM_INTERRUPTS_PARAGRAPH:Lcom/vladsch/flexmark/util/options/DataKey;
    1243: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1246: dup
    1247: ldc           #255                // String LISTS_ORDERED_NON_ONE_ITEM_INTERRUPTS_PARAGRAPH
    1249: iconst_0
    1250: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1253: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1256: putstatic     #256                // Field LISTS_ORDERED_NON_ONE_ITEM_INTERRUPTS_PARAGRAPH:Lcom/vladsch/flexmark/util/options/DataKey;
    1259: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1262: dup
    1263: ldc_w         #257                // String LISTS_EMPTY_BULLET_ITEM_INTERRUPTS_PARAGRAPH
    1266: iconst_0
    1267: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1270: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1273: putstatic     #258                // Field LISTS_EMPTY_BULLET_ITEM_INTERRUPTS_PARAGRAPH:Lcom/vladsch/flexmark/util/options/DataKey;
    1276: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1279: dup
    1280: ldc_w         #259                // String LISTS_EMPTY_ORDERED_ITEM_INTERRUPTS_PARAGRAPH
    1283: iconst_0
    1284: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1287: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1290: putstatic     #260                // Field LISTS_EMPTY_ORDERED_ITEM_INTERRUPTS_PARAGRAPH:Lcom/vladsch/flexmark/util/options/DataKey;
    1293: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1296: dup
    1297: ldc_w         #261                // String LISTS_EMPTY_ORDERED_NON_ONE_ITEM_INTERRUPTS_PARAGRAPH
    1300: iconst_0
    1301: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1304: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1307: putstatic     #262                // Field LISTS_EMPTY_ORDERED_NON_ONE_ITEM_INTERRUPTS_PARAGRAPH:Lcom/vladsch/flexmark/util/options/DataKey;
    1310: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1313: dup
    1314: ldc_w         #263                // String LISTS_BULLET_ITEM_INTERRUPTS_ITEM_PARAGRAPH
    1317: iconst_1
    1318: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1321: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1324: putstatic     #264                // Field LISTS_BULLET_ITEM_INTERRUPTS_ITEM_PARAGRAPH:Lcom/vladsch/flexmark/util/options/DataKey;
    1327: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1330: dup
    1331: ldc_w         #265                // String LISTS_ORDERED_ITEM_INTERRUPTS_ITEM_PARAGRAPH
    1334: iconst_1
    1335: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1338: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1341: putstatic     #266                // Field LISTS_ORDERED_ITEM_INTERRUPTS_ITEM_PARAGRAPH:Lcom/vladsch/flexmark/util/options/DataKey;
    1344: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1347: dup
    1348: ldc_w         #267                // String LISTS_ORDERED_NON_ONE_ITEM_INTERRUPTS_ITEM_PARAGRAPH
    1351: iconst_1
    1352: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1355: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1358: putstatic     #268                // Field LISTS_ORDERED_NON_ONE_ITEM_INTERRUPTS_ITEM_PARAGRAPH:Lcom/vladsch/flexmark/util/options/DataKey;
    1361: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1364: dup
    1365: ldc_w         #269                // String LISTS_EMPTY_BULLET_ITEM_INTERRUPTS_ITEM_PARAGRAPH
    1368: iconst_1
    1369: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1372: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1375: putstatic     #270                // Field LISTS_EMPTY_BULLET_ITEM_INTERRUPTS_ITEM_PARAGRAPH:Lcom/vladsch/flexmark/util/options/DataKey;
    1378: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1381: dup
    1382: ldc_w         #271                // String LISTS_EMPTY_ORDERED_ITEM_INTERRUPTS_ITEM_PARAGRAPH
    1385: iconst_1
    1386: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1389: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1392: putstatic     #272                // Field LISTS_EMPTY_ORDERED_ITEM_INTERRUPTS_ITEM_PARAGRAPH:Lcom/vladsch/flexmark/util/options/DataKey;
    1395: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1398: dup
    1399: ldc_w         #273                // String LISTS_EMPTY_ORDERED_NON_ONE_ITEM_INTERRUPTS_ITEM_PARAGRAPH
    1402: iconst_1
    1403: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1406: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1409: putstatic     #274                // Field LISTS_EMPTY_ORDERED_NON_ONE_ITEM_INTERRUPTS_ITEM_PARAGRAPH:Lcom/vladsch/flexmark/util/options/DataKey;
    1412: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1415: dup
    1416: ldc_w         #275                // String LISTS_EMPTY_BULLET_SUB_ITEM_INTERRUPTS_ITEM_PARAGRAPH
    1419: iconst_0
    1420: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1423: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1426: putstatic     #276                // Field LISTS_EMPTY_BULLET_SUB_ITEM_INTERRUPTS_ITEM_PARAGRAPH:Lcom/vladsch/flexmark/util/options/DataKey;
    1429: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1432: dup
    1433: ldc_w         #277                // String LISTS_EMPTY_ORDERED_SUB_ITEM_INTERRUPTS_ITEM_PARAGRAPH
    1436: iconst_0
    1437: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1440: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1443: putstatic     #278                // Field LISTS_EMPTY_ORDERED_SUB_ITEM_INTERRUPTS_ITEM_PARAGRAPH:Lcom/vladsch/flexmark/util/options/DataKey;
    1446: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1449: dup
    1450: ldc_w         #279                // String LISTS_EMPTY_ORDERED_NON_ONE_SUB_ITEM_INTERRUPTS_ITEM_PARAGRAPH
    1453: iconst_0
    1454: invokestatic  #67                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1457: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1460: putstatic     #280                // Field LISTS_EMPTY_ORDERED_NON_ONE_SUB_ITEM_INTERRUPTS_ITEM_PARAGRAPH:Lcom/vladsch/flexmark/util/options/DataKey;
    1463: new           #92                 // class com/vladsch/flexmark/util/options/DataKey
    1466: dup
    1467: ldc_w         #281                // String LISTS_ITEM_PREFIX_CHARS
    1470: ldc_w         #282                // String *-+
    1473: invokespecial #95                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
    1476: putstatic     #283                // Field LISTS_ITEM_PREFIX_CHARS:Lcom/vladsch/flexmark/util/options/DataKey;
    1479: new           #192                // class com/vladsch/flexmark/util/collection/DynamicDefaultKey
    1482: dup
    1483: ldc_w         #284                // String CODE_BLOCK_INDENT
    1486: getstatic     #210                // Field LISTS_ITEM_INDENT:Lcom/vladsch/flexmark/util/options/DataKey;
    1489: invokespecial #194                // Method com/vladsch/flexmark/util/collection/DynamicDefaultKey."<init>":(Ljava/lang/String;Lcom/vladsch/flexmark/util/options/DataKey;)V
    1492: putstatic     #285                // Field CODE_BLOCK_INDENT:Lcom/vladsch/flexmark/util/options/DataKey;
    1495: return
}
