Compiled from "Parser.java"
public class com.vladsch.flexmark.parser.Parser$Builder extends com.vladsch.flexmark.util.options.MutableDataSet {
  private final java.util.List<com.vladsch.flexmark.parser.block.CustomBlockParserFactory> blockParserFactories;

  private final java.util.List<com.vladsch.flexmark.parser.delimiter.DelimiterProcessor> delimiterProcessors;

  private final java.util.List<com.vladsch.flexmark.parser.PostProcessorFactory> postProcessorFactories;

  private final java.util.List<com.vladsch.flexmark.parser.block.ParagraphPreProcessorFactory> paragraphPreProcessorFactories;

  private final java.util.List<com.vladsch.flexmark.parser.block.BlockPreProcessorFactory> blockPreProcessorFactories;

  private final java.util.List<com.vladsch.flexmark.parser.LinkRefProcessorFactory> linkRefProcessors;

  private final java.util.List<com.vladsch.flexmark.parser.InlineParserExtensionFactory> inlineParserExtensionFactories;

  private com.vladsch.flexmark.parser.InlineParserFactory inlineParserFactory;

  private final java.util.HashSet<com.vladsch.flexmark.parser.Parser$ParserExtension> loadedExtensions;

  public com.vladsch.flexmark.parser.Parser$Builder(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method com/vladsch/flexmark/util/options/MutableDataSet."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
       5: aload_0
       6: new           #10                 // class java/util/ArrayList
       9: dup
      10: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      13: putfield      #8                  // Field blockParserFactories:Ljava/util/List;
      16: aload_0
      17: new           #10                 // class java/util/ArrayList
      20: dup
      21: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      24: putfield      #4                  // Field delimiterProcessors:Ljava/util/List;
      27: aload_0
      28: new           #10                 // class java/util/ArrayList
      31: dup
      32: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      35: putfield      #2                  // Field postProcessorFactories:Ljava/util/List;
      38: aload_0
      39: new           #10                 // class java/util/ArrayList
      42: dup
      43: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      46: putfield      #6                  // Field paragraphPreProcessorFactories:Ljava/util/List;
      49: aload_0
      50: new           #10                 // class java/util/ArrayList
      53: dup
      54: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      57: putfield      #5                  // Field blockPreProcessorFactories:Ljava/util/List;
      60: aload_0
      61: new           #10                 // class java/util/ArrayList
      64: dup
      65: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      68: putfield      #3                  // Field linkRefProcessors:Ljava/util/List;
      71: aload_0
      72: new           #10                 // class java/util/ArrayList
      75: dup
      76: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      79: putfield      #1                  // Field inlineParserExtensionFactories:Ljava/util/List;
      82: aload_0
      83: aconst_null
      84: putfield      #7                  // Field inlineParserFactory:Lcom/vladsch/flexmark/parser/InlineParserFactory;
      87: aload_0
      88: new           #12                 // class java/util/HashSet
      91: dup
      92: invokespecial #13                 // Method java/util/HashSet."<init>":()V
      95: putfield      #14                 // Field loadedExtensions:Ljava/util/HashSet;
      98: aload_0
      99: getstatic     #15                 // Field com/vladsch/flexmark/parser/Parser.EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
     102: invokevirtual #16                 // Method contains:(Lcom/vladsch/flexmark/util/options/DataKey;)Z
     105: ifeq          123
     108: aload_0
     109: aload_0
     110: getstatic     #15                 // Field com/vladsch/flexmark/parser/Parser.EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
     113: invokevirtual #17                 // Method get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
     116: checkcast     #18                 // class java/lang/Iterable
     119: invokevirtual #19                 // Method extensions:(Ljava/lang/Iterable;)Lcom/vladsch/flexmark/parser/Parser$Builder;
     122: pop
     123: return

  public com.vladsch.flexmark.parser.Parser$Builder();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method com/vladsch/flexmark/util/options/MutableDataSet."<init>":()V
       4: aload_0
       5: new           #10                 // class java/util/ArrayList
       8: dup
       9: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #8                  // Field blockParserFactories:Ljava/util/List;
      15: aload_0
      16: new           #10                 // class java/util/ArrayList
      19: dup
      20: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #4                  // Field delimiterProcessors:Ljava/util/List;
      26: aload_0
      27: new           #10                 // class java/util/ArrayList
      30: dup
      31: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      34: putfield      #2                  // Field postProcessorFactories:Ljava/util/List;
      37: aload_0
      38: new           #10                 // class java/util/ArrayList
      41: dup
      42: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      45: putfield      #6                  // Field paragraphPreProcessorFactories:Ljava/util/List;
      48: aload_0
      49: new           #10                 // class java/util/ArrayList
      52: dup
      53: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      56: putfield      #5                  // Field blockPreProcessorFactories:Ljava/util/List;
      59: aload_0
      60: new           #10                 // class java/util/ArrayList
      63: dup
      64: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      67: putfield      #3                  // Field linkRefProcessors:Ljava/util/List;
      70: aload_0
      71: new           #10                 // class java/util/ArrayList
      74: dup
      75: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      78: putfield      #1                  // Field inlineParserExtensionFactories:Ljava/util/List;
      81: aload_0
      82: aconst_null
      83: putfield      #7                  // Field inlineParserFactory:Lcom/vladsch/flexmark/parser/InlineParserFactory;
      86: aload_0
      87: new           #12                 // class java/util/HashSet
      90: dup
      91: invokespecial #13                 // Method java/util/HashSet."<init>":()V
      94: putfield      #14                 // Field loadedExtensions:Ljava/util/HashSet;
      97: return

  public com.vladsch.flexmark.parser.Parser$Builder(com.vladsch.flexmark.parser.Parser$Builder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method com/vladsch/flexmark/util/options/MutableDataSet."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
       5: aload_0
       6: new           #10                 // class java/util/ArrayList
       9: dup
      10: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      13: putfield      #8                  // Field blockParserFactories:Ljava/util/List;
      16: aload_0
      17: new           #10                 // class java/util/ArrayList
      20: dup
      21: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      24: putfield      #4                  // Field delimiterProcessors:Ljava/util/List;
      27: aload_0
      28: new           #10                 // class java/util/ArrayList
      31: dup
      32: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      35: putfield      #2                  // Field postProcessorFactories:Ljava/util/List;
      38: aload_0
      39: new           #10                 // class java/util/ArrayList
      42: dup
      43: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      46: putfield      #6                  // Field paragraphPreProcessorFactories:Ljava/util/List;
      49: aload_0
      50: new           #10                 // class java/util/ArrayList
      53: dup
      54: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      57: putfield      #5                  // Field blockPreProcessorFactories:Ljava/util/List;
      60: aload_0
      61: new           #10                 // class java/util/ArrayList
      64: dup
      65: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      68: putfield      #3                  // Field linkRefProcessors:Ljava/util/List;
      71: aload_0
      72: new           #10                 // class java/util/ArrayList
      75: dup
      76: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      79: putfield      #1                  // Field inlineParserExtensionFactories:Ljava/util/List;
      82: aload_0
      83: aconst_null
      84: putfield      #7                  // Field inlineParserFactory:Lcom/vladsch/flexmark/parser/InlineParserFactory;
      87: aload_0
      88: new           #12                 // class java/util/HashSet
      91: dup
      92: invokespecial #13                 // Method java/util/HashSet."<init>":()V
      95: putfield      #14                 // Field loadedExtensions:Ljava/util/HashSet;
      98: aload_0
      99: getfield      #8                  // Field blockParserFactories:Ljava/util/List;
     102: aload_1
     103: getfield      #8                  // Field blockParserFactories:Ljava/util/List;
     106: invokeinterface #21,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     111: pop
     112: aload_0
     113: getfield      #4                  // Field delimiterProcessors:Ljava/util/List;
     116: aload_1
     117: getfield      #4                  // Field delimiterProcessors:Ljava/util/List;
     120: invokeinterface #21,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     125: pop
     126: aload_0
     127: getfield      #2                  // Field postProcessorFactories:Ljava/util/List;
     130: aload_1
     131: getfield      #2                  // Field postProcessorFactories:Ljava/util/List;
     134: invokeinterface #21,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     139: pop
     140: aload_0
     141: getfield      #6                  // Field paragraphPreProcessorFactories:Ljava/util/List;
     144: aload_1
     145: getfield      #6                  // Field paragraphPreProcessorFactories:Ljava/util/List;
     148: invokeinterface #21,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     153: pop
     154: aload_0
     155: getfield      #5                  // Field blockPreProcessorFactories:Ljava/util/List;
     158: aload_1
     159: getfield      #5                  // Field blockPreProcessorFactories:Ljava/util/List;
     162: invokeinterface #21,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     167: pop
     168: aload_0
     169: getfield      #3                  // Field linkRefProcessors:Ljava/util/List;
     172: aload_1
     173: getfield      #3                  // Field linkRefProcessors:Ljava/util/List;
     176: invokeinterface #21,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     181: pop
     182: aload_0
     183: aload_1
     184: getfield      #7                  // Field inlineParserFactory:Lcom/vladsch/flexmark/parser/InlineParserFactory;
     187: putfield      #7                  // Field inlineParserFactory:Lcom/vladsch/flexmark/parser/InlineParserFactory;
     190: aload_0
     191: getfield      #1                  // Field inlineParserExtensionFactories:Ljava/util/List;
     194: aload_1
     195: getfield      #1                  // Field inlineParserExtensionFactories:Ljava/util/List;
     198: invokeinterface #21,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     203: pop
     204: aload_0
     205: getfield      #14                 // Field loadedExtensions:Ljava/util/HashSet;
     208: aload_1
     209: getfield      #14                 // Field loadedExtensions:Ljava/util/HashSet;
     212: invokevirtual #22                 // Method java/util/HashSet.addAll:(Ljava/util/Collection;)Z
     215: pop
     216: return

  public com.vladsch.flexmark.parser.Parser$Builder(com.vladsch.flexmark.parser.Parser$Builder, com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method com/vladsch/flexmark/util/options/MutableDataSet."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
       5: aload_0
       6: new           #10                 // class java/util/ArrayList
       9: dup
      10: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      13: putfield      #8                  // Field blockParserFactories:Ljava/util/List;
      16: aload_0
      17: new           #10                 // class java/util/ArrayList
      20: dup
      21: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      24: putfield      #4                  // Field delimiterProcessors:Ljava/util/List;
      27: aload_0
      28: new           #10                 // class java/util/ArrayList
      31: dup
      32: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      35: putfield      #2                  // Field postProcessorFactories:Ljava/util/List;
      38: aload_0
      39: new           #10                 // class java/util/ArrayList
      42: dup
      43: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      46: putfield      #6                  // Field paragraphPreProcessorFactories:Ljava/util/List;
      49: aload_0
      50: new           #10                 // class java/util/ArrayList
      53: dup
      54: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      57: putfield      #5                  // Field blockPreProcessorFactories:Ljava/util/List;
      60: aload_0
      61: new           #10                 // class java/util/ArrayList
      64: dup
      65: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      68: putfield      #3                  // Field linkRefProcessors:Ljava/util/List;
      71: aload_0
      72: new           #10                 // class java/util/ArrayList
      75: dup
      76: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      79: putfield      #1                  // Field inlineParserExtensionFactories:Ljava/util/List;
      82: aload_0
      83: aconst_null
      84: putfield      #7                  // Field inlineParserFactory:Lcom/vladsch/flexmark/parser/InlineParserFactory;
      87: aload_0
      88: new           #12                 // class java/util/HashSet
      91: dup
      92: invokespecial #13                 // Method java/util/HashSet."<init>":()V
      95: putfield      #14                 // Field loadedExtensions:Ljava/util/HashSet;
      98: new           #10                 // class java/util/ArrayList
     101: dup
     102: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
     105: astore_3
     106: new           #12                 // class java/util/HashSet
     109: dup
     110: invokespecial #13                 // Method java/util/HashSet."<init>":()V
     113: astore        4
     115: aload_0
     116: getstatic     #15                 // Field com/vladsch/flexmark/parser/Parser.EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
     119: invokevirtual #17                 // Method get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
     122: checkcast     #18                 // class java/lang/Iterable
     125: invokeinterface #23,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     130: astore        5
     132: aload         5
     134: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     139: ifeq          177
     142: aload         5
     144: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     149: checkcast     #26                 // class com/vladsch/flexmark/Extension
     152: astore        6
     154: aload_3
     155: aload         6
     157: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     162: pop
     163: aload         4
     165: aload         6
     167: invokevirtual #28                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     170: invokevirtual #29                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
     173: pop
     174: goto          132
     177: aload_2
     178: ifnull        311
     181: aload_2
     182: invokeinterface #30,  1           // InterfaceMethod com/vladsch/flexmark/util/options/DataHolder.keySet:()Ljava/util/Collection;
     187: invokeinterface #31,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     192: astore        5
     194: aload         5
     196: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     201: ifeq          311
     204: aload         5
     206: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     211: checkcast     #32                 // class com/vladsch/flexmark/util/options/DataKey
     214: astore        6
     216: aload         6
     218: getstatic     #15                 // Field com/vladsch/flexmark/parser/Parser.EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
     221: if_acmpne     293
     224: aload_2
     225: getstatic     #15                 // Field com/vladsch/flexmark/parser/Parser.EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
     228: invokeinterface #33,  2           // InterfaceMethod com/vladsch/flexmark/util/options/DataHolder.get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
     233: checkcast     #18                 // class java/lang/Iterable
     236: invokeinterface #23,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     241: astore        7
     243: aload         7
     245: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     250: ifeq          290
     253: aload         7
     255: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     260: checkcast     #26                 // class com/vladsch/flexmark/Extension
     263: astore        8
     265: aload         4
     267: aload         8
     269: invokevirtual #28                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     272: invokevirtual #34                 // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
     275: ifne          287
     278: aload_3
     279: aload         8
     281: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     286: pop
     287: goto          243
     290: goto          308
     293: aload_0
     294: aload         6
     296: aload_2
     297: aload         6
     299: invokeinterface #33,  2           // InterfaceMethod com/vladsch/flexmark/util/options/DataHolder.get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
     304: invokevirtual #35                 // Method set:(Lcom/vladsch/flexmark/util/options/DataKey;Ljava/lang/Object;)Lcom/vladsch/flexmark/util/options/MutableDataSet;
     307: pop
     308: goto          194
     311: aload_0
     312: getstatic     #15                 // Field com/vladsch/flexmark/parser/Parser.EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
     315: aload_3
     316: invokevirtual #35                 // Method set:(Lcom/vladsch/flexmark/util/options/DataKey;Ljava/lang/Object;)Lcom/vladsch/flexmark/util/options/MutableDataSet;
     319: pop
     320: aload_0
     321: aload_3
     322: invokevirtual #19                 // Method extensions:(Ljava/lang/Iterable;)Lcom/vladsch/flexmark/parser/Parser$Builder;
     325: pop
     326: return

  public com.vladsch.flexmark.parser.Parser build();
    Code:
       0: new           #36                 // class com/vladsch/flexmark/parser/Parser
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #37                 // Method com/vladsch/flexmark/parser/Parser."<init>":(Lcom/vladsch/flexmark/parser/Parser$Builder;Lcom/vladsch/flexmark/parser/Parser$1;)V
       9: areturn

  public com.vladsch.flexmark.parser.Parser$Builder extensions(java.lang.Iterable<? extends com.vladsch.flexmark.Extension>);
    Code:
       0: aload_1
       1: invokeinterface #23,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          61
      16: aload_2
      17: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #26                 // class com/vladsch/flexmark/Extension
      25: astore_3
      26: aload_3
      27: instanceof    #38                 // class com/vladsch/flexmark/parser/Parser$ParserExtension
      30: ifeq          58
      33: aload_0
      34: getfield      #14                 // Field loadedExtensions:Ljava/util/HashSet;
      37: aload_3
      38: invokevirtual #34                 // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
      41: ifne          58
      44: aload_3
      45: checkcast     #38                 // class com/vladsch/flexmark/parser/Parser$ParserExtension
      48: astore        4
      50: aload         4
      52: aload_0
      53: invokeinterface #39,  2           // InterfaceMethod com/vladsch/flexmark/parser/Parser$ParserExtension.parserOptions:(Lcom/vladsch/flexmark/util/options/MutableDataHolder;)V
      58: goto          7
      61: aload_1
      62: invokeinterface #23,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      67: astore_2
      68: aload_2
      69: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      74: ifeq          132
      77: aload_2
      78: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      83: checkcast     #26                 // class com/vladsch/flexmark/Extension
      86: astore_3
      87: aload_3
      88: instanceof    #38                 // class com/vladsch/flexmark/parser/Parser$ParserExtension
      91: ifeq          129
      94: aload_0
      95: getfield      #14                 // Field loadedExtensions:Ljava/util/HashSet;
      98: aload_3
      99: invokevirtual #34                 // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
     102: ifne          129
     105: aload_3
     106: checkcast     #38                 // class com/vladsch/flexmark/parser/Parser$ParserExtension
     109: astore        4
     111: aload         4
     113: aload_0
     114: invokeinterface #40,  2           // InterfaceMethod com/vladsch/flexmark/parser/Parser$ParserExtension.extend:(Lcom/vladsch/flexmark/parser/Parser$Builder;)V
     119: aload_0
     120: getfield      #14                 // Field loadedExtensions:Ljava/util/HashSet;
     123: aload         4
     125: invokevirtual #29                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
     128: pop
     129: goto          68
     132: aload_0
     133: areturn

  public com.vladsch.flexmark.parser.Parser$Builder customBlockParserFactory(com.vladsch.flexmark.parser.block.CustomBlockParserFactory);
    Code:
       0: aload_0
       1: getfield      #8                  // Field blockParserFactories:Ljava/util/List;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public com.vladsch.flexmark.parser.Parser$Builder customInlineParserExtensionFactory(com.vladsch.flexmark.parser.InlineParserExtensionFactory);
    Code:
       0: aload_0
       1: getfield      #1                  // Field inlineParserExtensionFactories:Ljava/util/List;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public com.vladsch.flexmark.parser.Parser$Builder customInlineParserFactory(com.vladsch.flexmark.parser.InlineParserFactory);
    Code:
       0: aload_0
       1: getfield      #7                  // Field inlineParserFactory:Lcom/vladsch/flexmark/parser/InlineParserFactory;
       4: ifnull        43
       7: new           #41                 // class java/lang/IllegalStateException
      10: dup
      11: new           #42                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #44                 // String custom inline parser factory is already set to
      20: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: getfield      #7                  // Field inlineParserFactory:Lcom/vladsch/flexmark/parser/InlineParserFactory;
      27: invokevirtual #28                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      30: invokevirtual #46                 // Method java/lang/Class.getName:()Ljava/lang/String;
      33: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #48                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: aload_1
      45: putfield      #7                  // Field inlineParserFactory:Lcom/vladsch/flexmark/parser/InlineParserFactory;
      48: aload_0
      49: areturn

  public com.vladsch.flexmark.parser.Parser$Builder customDelimiterProcessor(com.vladsch.flexmark.parser.delimiter.DelimiterProcessor);
    Code:
       0: aload_0
       1: getfield      #4                  // Field delimiterProcessors:Ljava/util/List;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public com.vladsch.flexmark.parser.Parser$Builder postProcessorFactory(com.vladsch.flexmark.parser.PostProcessorFactory);
    Code:
       0: aload_0
       1: getfield      #2                  // Field postProcessorFactories:Ljava/util/List;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public com.vladsch.flexmark.parser.Parser$Builder paragraphPreProcessorFactory(com.vladsch.flexmark.parser.block.ParagraphPreProcessorFactory);
    Code:
       0: aload_0
       1: getfield      #6                  // Field paragraphPreProcessorFactories:Ljava/util/List;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public com.vladsch.flexmark.parser.Parser$Builder blockPreProcessorFactory(com.vladsch.flexmark.parser.block.BlockPreProcessorFactory);
    Code:
       0: aload_0
       1: getfield      #5                  // Field blockPreProcessorFactories:Ljava/util/List;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public com.vladsch.flexmark.parser.Parser$Builder linkRefProcessorFactory(com.vladsch.flexmark.parser.LinkRefProcessorFactory);
    Code:
       0: aload_0
       1: getfield      #3                  // Field linkRefProcessors:Ljava/util/List;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  static java.util.List access$000(com.vladsch.flexmark.parser.Parser$Builder);
    Code:
       0: aload_0
       1: getfield      #8                  // Field blockParserFactories:Ljava/util/List;
       4: areturn

  static com.vladsch.flexmark.parser.InlineParserFactory access$100(com.vladsch.flexmark.parser.Parser$Builder);
    Code:
       0: aload_0
       1: getfield      #7                  // Field inlineParserFactory:Lcom/vladsch/flexmark/parser/InlineParserFactory;
       4: areturn

  static java.util.List access$200(com.vladsch.flexmark.parser.Parser$Builder);
    Code:
       0: aload_0
       1: getfield      #6                  // Field paragraphPreProcessorFactories:Ljava/util/List;
       4: areturn

  static java.util.List access$300(com.vladsch.flexmark.parser.Parser$Builder);
    Code:
       0: aload_0
       1: getfield      #5                  // Field blockPreProcessorFactories:Ljava/util/List;
       4: areturn

  static java.util.List access$400(com.vladsch.flexmark.parser.Parser$Builder);
    Code:
       0: aload_0
       1: getfield      #4                  // Field delimiterProcessors:Ljava/util/List;
       4: areturn

  static java.util.List access$500(com.vladsch.flexmark.parser.Parser$Builder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field linkRefProcessors:Ljava/util/List;
       4: areturn

  static java.util.List access$600(com.vladsch.flexmark.parser.Parser$Builder);
    Code:
       0: aload_0
       1: getfield      #2                  // Field postProcessorFactories:Ljava/util/List;
       4: areturn

  static java.util.List access$700(com.vladsch.flexmark.parser.Parser$Builder);
    Code:
       0: aload_0
       1: getfield      #1                  // Field inlineParserExtensionFactories:Ljava/util/List;
       4: areturn
}
