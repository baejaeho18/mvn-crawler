Compiled from "DelimiterProcessor.java"
public interface com.vladsch.flexmark.parser.delimiter.DelimiterProcessor {
  public abstract char getOpeningCharacter();

  public abstract char getClosingCharacter();

  public abstract int getMinLength();

  public abstract int getDelimiterUse(com.vladsch.flexmark.parser.delimiter.DelimiterRun, com.vladsch.flexmark.parser.delimiter.DelimiterRun);

  public abstract void process(com.vladsch.flexmark.internal.Delimiter, com.vladsch.flexmark.internal.Delimiter, int);

  public abstract com.vladsch.flexmark.ast.Node unmatchedDelimiterNode(com.vladsch.flexmark.parser.InlineParser, com.vladsch.flexmark.parser.delimiter.DelimiterRun);

  public abstract boolean canBeOpener(java.lang.String, java.lang.String, boolean, boolean, boolean, boolean, boolean, boolean);

  public abstract boolean canBeCloser(java.lang.String, java.lang.String, boolean, boolean, boolean, boolean, boolean, boolean);

  public abstract boolean skipNonOpenerCloser();
}
