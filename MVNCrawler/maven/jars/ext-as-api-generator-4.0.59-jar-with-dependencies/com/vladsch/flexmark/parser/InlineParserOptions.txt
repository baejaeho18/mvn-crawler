Compiled from "InlineParserOptions.java"
public class com.vladsch.flexmark.parser.InlineParserOptions {
  public final boolean matchLookaheadFirst;

  public final boolean parseMultiLineImageUrls;

  public final boolean hardLineBreakLimit;

  public final boolean spaceInLinkUrls;

  public final boolean spaceInLinkElements;

  public final boolean codeSoftLineBreaks;

  public final boolean inlineDelimiterDirectionalPunctuations;

  public final boolean linksAllowMatchedParentheses;

  public com.vladsch.flexmark.parser.InlineParserOptions(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field com/vladsch/flexmark/parser/Parser.MATCH_NESTED_LINK_REFS_FIRST:Lcom/vladsch/flexmark/util/options/DataKey;
       8: aload_1
       9: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      12: checkcast     #4                  // class java/lang/Boolean
      15: invokevirtual #5                  // Method java/lang/Boolean.booleanValue:()Z
      18: putfield      #6                  // Field matchLookaheadFirst:Z
      21: aload_0
      22: getstatic     #7                  // Field com/vladsch/flexmark/parser/Parser.PARSE_MULTI_LINE_IMAGE_URLS:Lcom/vladsch/flexmark/util/options/DataKey;
      25: aload_1
      26: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      29: checkcast     #4                  // class java/lang/Boolean
      32: invokevirtual #5                  // Method java/lang/Boolean.booleanValue:()Z
      35: putfield      #8                  // Field parseMultiLineImageUrls:Z
      38: aload_0
      39: getstatic     #9                  // Field com/vladsch/flexmark/parser/Parser.HARD_LINE_BREAK_LIMIT:Lcom/vladsch/flexmark/util/options/DataKey;
      42: aload_1
      43: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      46: checkcast     #4                  // class java/lang/Boolean
      49: invokevirtual #5                  // Method java/lang/Boolean.booleanValue:()Z
      52: putfield      #10                 // Field hardLineBreakLimit:Z
      55: aload_0
      56: getstatic     #11                 // Field com/vladsch/flexmark/parser/Parser.SPACE_IN_LINK_URLS:Lcom/vladsch/flexmark/util/options/DataKey;
      59: aload_1
      60: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      63: checkcast     #4                  // class java/lang/Boolean
      66: invokevirtual #5                  // Method java/lang/Boolean.booleanValue:()Z
      69: putfield      #12                 // Field spaceInLinkUrls:Z
      72: aload_0
      73: getstatic     #13                 // Field com/vladsch/flexmark/parser/Parser.SPACE_IN_LINK_ELEMENTS:Lcom/vladsch/flexmark/util/options/DataKey;
      76: aload_1
      77: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      80: checkcast     #4                  // class java/lang/Boolean
      83: invokevirtual #5                  // Method java/lang/Boolean.booleanValue:()Z
      86: putfield      #14                 // Field spaceInLinkElements:Z
      89: aload_0
      90: getstatic     #15                 // Field com/vladsch/flexmark/parser/Parser.CODE_SOFT_LINE_BREAKS:Lcom/vladsch/flexmark/util/options/DataKey;
      93: aload_1
      94: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      97: checkcast     #4                  // class java/lang/Boolean
     100: invokevirtual #5                  // Method java/lang/Boolean.booleanValue:()Z
     103: putfield      #16                 // Field codeSoftLineBreaks:Z
     106: aload_0
     107: getstatic     #17                 // Field com/vladsch/flexmark/parser/Parser.INLINE_DELIMITER_DIRECTIONAL_PUNCTUATIONS:Lcom/vladsch/flexmark/util/options/DataKey;
     110: aload_1
     111: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     114: checkcast     #4                  // class java/lang/Boolean
     117: invokevirtual #5                  // Method java/lang/Boolean.booleanValue:()Z
     120: putfield      #18                 // Field inlineDelimiterDirectionalPunctuations:Z
     123: aload_0
     124: getstatic     #19                 // Field com/vladsch/flexmark/parser/Parser.LINKS_ALLOW_MATCHED_PARENTHESES:Lcom/vladsch/flexmark/util/options/DataKey;
     127: aload_1
     128: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     131: checkcast     #4                  // class java/lang/Boolean
     134: invokevirtual #5                  // Method java/lang/Boolean.booleanValue:()Z
     137: putfield      #20                 // Field linksAllowMatchedParentheses:Z
     140: return
}
