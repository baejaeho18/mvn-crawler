Compiled from "HtmlRenderer.java"
class com.vladsch.flexmark.html.HtmlRenderer$MainNodeRenderer extends com.vladsch.flexmark.html.NodeRendererSubContext implements com.vladsch.flexmark.html.renderer.NodeRendererContext {
  private final com.vladsch.flexmark.ast.Document document;

  private final java.util.Map<java.lang.Class<?>, com.vladsch.flexmark.html.NodeRenderingHandlerWrapper> renderers;

  private final java.util.List<com.vladsch.flexmark.html.renderer.PhasedNodeRenderer> phasedRenderers;

  private final com.vladsch.flexmark.html.LinkResolver[] myLinkResolvers;

  private final java.util.Set<com.vladsch.flexmark.html.renderer.RenderingPhase> renderingPhases;

  private final com.vladsch.flexmark.util.options.DataHolder options;

  private com.vladsch.flexmark.html.renderer.RenderingPhase phase;

  private final com.vladsch.flexmark.html.renderer.HtmlIdGenerator htmlIdGenerator;

  private final java.util.HashMap<com.vladsch.flexmark.html.renderer.LinkType, java.util.HashMap<java.lang.String, com.vladsch.flexmark.html.renderer.ResolvedLink>> resolvedLinkMap;

  private final com.vladsch.flexmark.html.AttributeProvider[] attributeProviders;

  final com.vladsch.flexmark.html.HtmlRenderer this$0;

  com.vladsch.flexmark.html.HtmlRenderer$MainNodeRenderer(com.vladsch.flexmark.html.HtmlRenderer, com.vladsch.flexmark.util.options.DataHolder, com.vladsch.flexmark.html.HtmlWriter, com.vladsch.flexmark.ast.Document);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/vladsch/flexmark/html/HtmlRenderer;
       5: aload_0
       6: aload_3
       7: invokespecial #2                  // Method com/vladsch/flexmark/html/NodeRendererSubContext."<init>":(Lcom/vladsch/flexmark/html/HtmlWriter;)V
      10: aload_0
      11: new           #3                  // class java/util/HashMap
      14: dup
      15: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      18: putfield      #5                  // Field resolvedLinkMap:Ljava/util/HashMap;
      21: aload_0
      22: new           #6                  // class com/vladsch/flexmark/util/options/ScopedDataSet
      25: dup
      26: aload_2
      27: aload         4
      29: invokespecial #7                  // Method com/vladsch/flexmark/util/options/ScopedDataSet."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;Lcom/vladsch/flexmark/util/options/DataHolder;)V
      32: putfield      #8                  // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
      35: aload_0
      36: aload         4
      38: putfield      #9                  // Field document:Lcom/vladsch/flexmark/ast/Document;
      41: aload_0
      42: new           #3                  // class java/util/HashMap
      45: dup
      46: bipush        32
      48: invokespecial #10                 // Method java/util/HashMap."<init>":(I)V
      51: putfield      #11                 // Field renderers:Ljava/util/Map;
      54: aload_0
      55: new           #12                 // class java/util/HashSet
      58: dup
      59: invokestatic  #13                 // Method com/vladsch/flexmark/html/renderer/RenderingPhase.values:()[Lcom/vladsch/flexmark/html/renderer/RenderingPhase;
      62: arraylength
      63: invokespecial #14                 // Method java/util/HashSet."<init>":(I)V
      66: putfield      #15                 // Field renderingPhases:Ljava/util/Set;
      69: aload_0
      70: new           #16                 // class java/util/ArrayList
      73: dup
      74: aload_1
      75: invokestatic  #17                 // Method com/vladsch/flexmark/html/HtmlRenderer.access$200:(Lcom/vladsch/flexmark/html/HtmlRenderer;)Ljava/util/List;
      78: invokeinterface #18,  1           // InterfaceMethod java/util/List.size:()I
      83: invokespecial #19                 // Method java/util/ArrayList."<init>":(I)V
      86: putfield      #20                 // Field phasedRenderers:Ljava/util/List;
      89: aload_0
      90: aload_1
      91: invokestatic  #21                 // Method com/vladsch/flexmark/html/HtmlRenderer.access$300:(Lcom/vladsch/flexmark/html/HtmlRenderer;)Ljava/util/List;
      94: invokeinterface #18,  1           // InterfaceMethod java/util/List.size:()I
      99: anewarray     #22                 // class com/vladsch/flexmark/html/LinkResolver
     102: putfield      #23                 // Field myLinkResolvers:[Lcom/vladsch/flexmark/html/LinkResolver;
     105: aload_0
     106: aload_1
     107: invokestatic  #24                 // Method com/vladsch/flexmark/html/HtmlRenderer.access$400:(Lcom/vladsch/flexmark/html/HtmlRenderer;)Lcom/vladsch/flexmark/html/HtmlRendererOptions;
     110: getfield      #25                 // Field com/vladsch/flexmark/html/HtmlRendererOptions.doNotRenderLinksInDocument:Z
     113: ifeq          120
     116: iconst_0
     117: goto          121
     120: iconst_1
     121: putfield      #26                 // Field doNotRenderLinksNesting:I
     124: aload_0
     125: aload_1
     126: invokestatic  #27                 // Method com/vladsch/flexmark/html/HtmlRenderer.access$500:(Lcom/vladsch/flexmark/html/HtmlRenderer;)Lcom/vladsch/flexmark/html/renderer/HeaderIdGeneratorFactory;
     129: ifnull        145
     132: aload_1
     133: invokestatic  #27                 // Method com/vladsch/flexmark/html/HtmlRenderer.access$500:(Lcom/vladsch/flexmark/html/HtmlRenderer;)Lcom/vladsch/flexmark/html/renderer/HeaderIdGeneratorFactory;
     136: aload_0
     137: invokeinterface #28,  2           // InterfaceMethod com/vladsch/flexmark/html/renderer/HeaderIdGeneratorFactory.create:(Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;)Lcom/vladsch/flexmark/html/renderer/HtmlIdGenerator;
     142: goto          182
     145: aload_1
     146: invokestatic  #24                 // Method com/vladsch/flexmark/html/HtmlRenderer.access$400:(Lcom/vladsch/flexmark/html/HtmlRenderer;)Lcom/vladsch/flexmark/html/HtmlRendererOptions;
     149: getfield      #29                 // Field com/vladsch/flexmark/html/HtmlRendererOptions.renderHeaderId:Z
     152: ifne          171
     155: aload_1
     156: invokestatic  #24                 // Method com/vladsch/flexmark/html/HtmlRenderer.access$400:(Lcom/vladsch/flexmark/html/HtmlRenderer;)Lcom/vladsch/flexmark/html/HtmlRendererOptions;
     159: getfield      #30                 // Field com/vladsch/flexmark/html/HtmlRendererOptions.generateHeaderIds:Z
     162: ifne          171
     165: getstatic     #31                 // Field com/vladsch/flexmark/html/renderer/HtmlIdGenerator.NULL:Lcom/vladsch/flexmark/html/renderer/HtmlIdGenerator;
     168: goto          182
     171: new           #32                 // class com/vladsch/flexmark/html/renderer/HeaderIdGenerator$Factory
     174: dup
     175: invokespecial #33                 // Method com/vladsch/flexmark/html/renderer/HeaderIdGenerator$Factory."<init>":()V
     178: aload_0
     179: invokevirtual #34                 // Method com/vladsch/flexmark/html/renderer/HeaderIdGenerator$Factory.create:(Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;)Lcom/vladsch/flexmark/html/renderer/HtmlIdGenerator;
     182: putfield      #35                 // Field htmlIdGenerator:Lcom/vladsch/flexmark/html/renderer/HtmlIdGenerator;
     185: aload_3
     186: aload_0
     187: invokevirtual #36                 // Method com/vladsch/flexmark/html/HtmlWriter.setContext:(Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;)V
     190: aload_1
     191: invokestatic  #17                 // Method com/vladsch/flexmark/html/HtmlRenderer.access$200:(Lcom/vladsch/flexmark/html/HtmlRenderer;)Ljava/util/List;
     194: invokeinterface #18,  1           // InterfaceMethod java/util/List.size:()I
     199: iconst_1
     200: isub
     201: istore        5
     203: iload         5
     205: iflt          370
     208: aload_1
     209: invokestatic  #17                 // Method com/vladsch/flexmark/html/HtmlRenderer.access$200:(Lcom/vladsch/flexmark/html/HtmlRenderer;)Ljava/util/List;
     212: iload         5
     214: invokeinterface #37,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     219: checkcast     #38                 // class com/vladsch/flexmark/html/renderer/NodeRendererFactory
     222: astore        6
     224: aload         6
     226: aload_0
     227: invokevirtual #39                 // Method getOptions:()Lcom/vladsch/flexmark/util/options/DataHolder;
     230: invokeinterface #40,  2           // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererFactory.create:(Lcom/vladsch/flexmark/util/options/DataHolder;)Lcom/vladsch/flexmark/html/renderer/NodeRenderer;
     235: astore        7
     237: aload         7
     239: invokeinterface #41,  1           // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRenderer.getNodeRenderingHandlers:()Ljava/util/Set;
     244: invokeinterface #42,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     249: astore        8
     251: aload         8
     253: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     258: ifeq          321
     261: aload         8
     263: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     268: checkcast     #45                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     271: astore        9
     273: new           #46                 // class com/vladsch/flexmark/html/NodeRenderingHandlerWrapper
     276: dup
     277: aload         9
     279: aload_0
     280: getfield      #11                 // Field renderers:Ljava/util/Map;
     283: aload         9
     285: invokevirtual #47                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler.getNodeType:()Ljava/lang/Class;
     288: invokeinterface #48,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     293: checkcast     #46                 // class com/vladsch/flexmark/html/NodeRenderingHandlerWrapper
     296: invokespecial #49                 // Method com/vladsch/flexmark/html/NodeRenderingHandlerWrapper."<init>":(Lcom/vladsch/flexmark/html/renderer/NodeRenderingHandler;Lcom/vladsch/flexmark/html/NodeRenderingHandlerWrapper;)V
     299: astore        10
     301: aload_0
     302: getfield      #11                 // Field renderers:Ljava/util/Map;
     305: aload         9
     307: invokevirtual #47                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler.getNodeType:()Ljava/lang/Class;
     310: aload         10
     312: invokeinterface #50,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     317: pop
     318: goto          251
     321: aload         7
     323: instanceof    #51                 // class com/vladsch/flexmark/html/renderer/PhasedNodeRenderer
     326: ifeq          364
     329: aload_0
     330: getfield      #15                 // Field renderingPhases:Ljava/util/Set;
     333: aload         7
     335: checkcast     #51                 // class com/vladsch/flexmark/html/renderer/PhasedNodeRenderer
     338: invokeinterface #52,  1           // InterfaceMethod com/vladsch/flexmark/html/renderer/PhasedNodeRenderer.getRenderingPhases:()Ljava/util/Set;
     343: invokeinterface #53,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     348: pop
     349: aload_0
     350: getfield      #20                 // Field phasedRenderers:Ljava/util/List;
     353: aload         7
     355: checkcast     #51                 // class com/vladsch/flexmark/html/renderer/PhasedNodeRenderer
     358: invokeinterface #54,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     363: pop
     364: iinc          5, -1
     367: goto          203
     370: iconst_0
     371: istore        5
     373: iload         5
     375: aload_1
     376: invokestatic  #21                 // Method com/vladsch/flexmark/html/HtmlRenderer.access$300:(Lcom/vladsch/flexmark/html/HtmlRenderer;)Ljava/util/List;
     379: invokeinterface #18,  1           // InterfaceMethod java/util/List.size:()I
     384: if_icmpge     420
     387: aload_0
     388: getfield      #23                 // Field myLinkResolvers:[Lcom/vladsch/flexmark/html/LinkResolver;
     391: iload         5
     393: aload_1
     394: invokestatic  #21                 // Method com/vladsch/flexmark/html/HtmlRenderer.access$300:(Lcom/vladsch/flexmark/html/HtmlRenderer;)Ljava/util/List;
     397: iload         5
     399: invokeinterface #37,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     404: checkcast     #55                 // class com/vladsch/flexmark/html/LinkResolverFactory
     407: aload_0
     408: invokeinterface #56,  2           // InterfaceMethod com/vladsch/flexmark/html/LinkResolverFactory.create:(Lcom/vladsch/flexmark/html/renderer/LinkResolverContext;)Lcom/vladsch/flexmark/html/LinkResolver;
     413: aastore
     414: iinc          5, 1
     417: goto          373
     420: aload_0
     421: aload_1
     422: invokestatic  #57                 // Method com/vladsch/flexmark/html/HtmlRenderer.access$600:(Lcom/vladsch/flexmark/html/HtmlRenderer;)Ljava/util/List;
     425: invokeinterface #18,  1           // InterfaceMethod java/util/List.size:()I
     430: anewarray     #58                 // class com/vladsch/flexmark/html/AttributeProvider
     433: putfield      #59                 // Field attributeProviders:[Lcom/vladsch/flexmark/html/AttributeProvider;
     436: iconst_0
     437: istore        5
     439: iload         5
     441: aload_1
     442: invokestatic  #57                 // Method com/vladsch/flexmark/html/HtmlRenderer.access$600:(Lcom/vladsch/flexmark/html/HtmlRenderer;)Ljava/util/List;
     445: invokeinterface #18,  1           // InterfaceMethod java/util/List.size:()I
     450: if_icmpge     486
     453: aload_0
     454: getfield      #59                 // Field attributeProviders:[Lcom/vladsch/flexmark/html/AttributeProvider;
     457: iload         5
     459: aload_1
     460: invokestatic  #57                 // Method com/vladsch/flexmark/html/HtmlRenderer.access$600:(Lcom/vladsch/flexmark/html/HtmlRenderer;)Ljava/util/List;
     463: iload         5
     465: invokeinterface #37,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     470: checkcast     #60                 // class com/vladsch/flexmark/html/AttributeProviderFactory
     473: aload_0
     474: invokeinterface #61,  2           // InterfaceMethod com/vladsch/flexmark/html/AttributeProviderFactory.create:(Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;)Lcom/vladsch/flexmark/html/AttributeProvider;
     479: aastore
     480: iinc          5, 1
     483: goto          439
     486: return

  public com.vladsch.flexmark.ast.Node getCurrentNode();
    Code:
       0: aload_0
       1: getfield      #62                 // Field renderingNode:Lcom/vladsch/flexmark/ast/Node;
       4: areturn

  public com.vladsch.flexmark.html.renderer.ResolvedLink resolveLink(com.vladsch.flexmark.html.renderer.LinkType, java.lang.CharSequence, java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: checkcast     #63                 // class com/vladsch/flexmark/util/html/Attributes
       7: aload_3
       8: invokevirtual #64                 // Method resolveLink:(Lcom/vladsch/flexmark/html/renderer/LinkType;Ljava/lang/CharSequence;Lcom/vladsch/flexmark/util/html/Attributes;Ljava/lang/Boolean;)Lcom/vladsch/flexmark/html/renderer/ResolvedLink;
      11: areturn

  public com.vladsch.flexmark.html.renderer.ResolvedLink resolveLink(com.vladsch.flexmark.html.renderer.LinkType, java.lang.CharSequence, com.vladsch.flexmark.util.html.Attributes, java.lang.Boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field resolvedLinkMap:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #65                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #3                  // class java/util/HashMap
      11: astore        5
      13: aload         5
      15: ifnonnull     38
      18: new           #3                  // class java/util/HashMap
      21: dup
      22: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      25: astore        5
      27: aload_0
      28: getfield      #5                  // Field resolvedLinkMap:Ljava/util/HashMap;
      31: aload_1
      32: aload         5
      34: invokevirtual #66                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_2
      39: instanceof    #67                 // class java/lang/String
      42: ifeq          52
      45: aload_2
      46: checkcast     #67                 // class java/lang/String
      49: goto          56
      52: aload_2
      53: invokestatic  #68                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      56: astore        6
      58: aload         5
      60: aload         6
      62: invokevirtual #65                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      65: checkcast     #69                 // class com/vladsch/flexmark/html/renderer/ResolvedLink
      68: astore        7
      70: aload         7
      72: ifnonnull     220
      75: new           #69                 // class com/vladsch/flexmark/html/renderer/ResolvedLink
      78: dup
      79: aload_1
      80: aload         6
      82: aload_3
      83: invokespecial #70                 // Method com/vladsch/flexmark/html/renderer/ResolvedLink."<init>":(Lcom/vladsch/flexmark/html/renderer/LinkType;Ljava/lang/CharSequence;Lcom/vladsch/flexmark/util/html/Attributes;)V
      86: astore        7
      88: aload         6
      90: invokevirtual #71                 // Method java/lang/String.isEmpty:()Z
      93: ifne          210
      96: aload_0
      97: invokevirtual #72                 // Method getCurrentNode:()Lcom/vladsch/flexmark/ast/Node;
     100: astore        8
     102: aload_0
     103: getfield      #23                 // Field myLinkResolvers:[Lcom/vladsch/flexmark/html/LinkResolver;
     106: astore        9
     108: aload         9
     110: arraylength
     111: istore        10
     113: iconst_0
     114: istore        11
     116: iload         11
     118: iload         10
     120: if_icmpge     164
     123: aload         9
     125: iload         11
     127: aaload
     128: astore        12
     130: aload         12
     132: aload         8
     134: aload_0
     135: aload         7
     137: invokeinterface #73,  4           // InterfaceMethod com/vladsch/flexmark/html/LinkResolver.resolveLink:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/html/renderer/LinkResolverContext;Lcom/vladsch/flexmark/html/renderer/ResolvedLink;)Lcom/vladsch/flexmark/html/renderer/ResolvedLink;
     142: astore        7
     144: aload         7
     146: invokevirtual #74                 // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getStatus:()Lcom/vladsch/flexmark/html/renderer/LinkStatus;
     149: getstatic     #75                 // Field com/vladsch/flexmark/html/renderer/LinkStatus.UNKNOWN:Lcom/vladsch/flexmark/html/renderer/LinkStatus;
     152: if_acmpeq     158
     155: goto          164
     158: iinc          11, 1
     161: goto          116
     164: aload         4
     166: ifnonnull     182
     169: aload_0
     170: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/html/HtmlRenderer;
     173: invokestatic  #24                 // Method com/vladsch/flexmark/html/HtmlRenderer.access$400:(Lcom/vladsch/flexmark/html/HtmlRenderer;)Lcom/vladsch/flexmark/html/HtmlRendererOptions;
     176: getfield      #76                 // Field com/vladsch/flexmark/html/HtmlRendererOptions.percentEncodeUrls:Z
     179: ifne          195
     182: aload         4
     184: ifnull        210
     187: aload         4
     189: invokevirtual #77                 // Method java/lang/Boolean.booleanValue:()Z
     192: ifeq          210
     195: aload         7
     197: aload         7
     199: invokevirtual #78                 // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getUrl:()Ljava/lang/String;
     202: invokestatic  #79                 // Method com/vladsch/flexmark/util/html/Escaping.percentEncodeUrl:(Ljava/lang/CharSequence;)Ljava/lang/String;
     205: invokevirtual #80                 // Method com/vladsch/flexmark/html/renderer/ResolvedLink.withUrl:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/html/renderer/ResolvedLink;
     208: astore        7
     210: aload         5
     212: aload         6
     214: aload         7
     216: invokevirtual #66                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     219: pop
     220: aload         7
     222: areturn

  public java.lang.String getNodeId(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_0
       1: getfield      #35                 // Field htmlIdGenerator:Lcom/vladsch/flexmark/html/renderer/HtmlIdGenerator;
       4: aload_1
       5: invokeinterface #81,  2           // InterfaceMethod com/vladsch/flexmark/html/renderer/HtmlIdGenerator.getId:(Lcom/vladsch/flexmark/ast/Node;)Ljava/lang/String;
      10: astore_2
      11: aload_0
      12: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/html/HtmlRenderer;
      15: invokestatic  #57                 // Method com/vladsch/flexmark/html/HtmlRenderer.access$600:(Lcom/vladsch/flexmark/html/HtmlRenderer;)Ljava/util/List;
      18: invokeinterface #18,  1           // InterfaceMethod java/util/List.size:()I
      23: ifeq          102
      26: new           #63                 // class com/vladsch/flexmark/util/html/Attributes
      29: dup
      30: invokespecial #82                 // Method com/vladsch/flexmark/util/html/Attributes."<init>":()V
      33: astore_3
      34: aload_2
      35: ifnull        46
      38: aload_3
      39: ldc           #83                 // String id
      41: aload_2
      42: invokevirtual #84                 // Method com/vladsch/flexmark/util/html/Attributes.replaceValue:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/Attribute;
      45: pop
      46: aload_0
      47: getfield      #59                 // Field attributeProviders:[Lcom/vladsch/flexmark/html/AttributeProvider;
      50: astore        4
      52: aload         4
      54: arraylength
      55: istore        5
      57: iconst_0
      58: istore        6
      60: iload         6
      62: iload         5
      64: if_icmpge     95
      67: aload         4
      69: iload         6
      71: aaload
      72: astore        7
      74: aload         7
      76: aload_0
      77: getfield      #62                 // Field renderingNode:Lcom/vladsch/flexmark/ast/Node;
      80: getstatic     #85                 // Field com/vladsch/flexmark/html/renderer/AttributablePart.ID:Lcom/vladsch/flexmark/html/renderer/AttributablePart;
      83: aload_3
      84: invokeinterface #86,  4           // InterfaceMethod com/vladsch/flexmark/html/AttributeProvider.setAttributes:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/html/renderer/AttributablePart;Lcom/vladsch/flexmark/util/html/Attributes;)V
      89: iinc          6, 1
      92: goto          60
      95: aload_3
      96: ldc           #83                 // String id
      98: invokevirtual #87                 // Method com/vladsch/flexmark/util/html/Attributes.getValue:(Ljava/lang/CharSequence;)Ljava/lang/String;
     101: astore_2
     102: aload_2
     103: areturn

  public com.vladsch.flexmark.util.options.DataHolder getOptions();
    Code:
       0: aload_0
       1: getfield      #8                  // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
       4: areturn

  public com.vladsch.flexmark.html.HtmlRendererOptions getHtmlOptions();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/html/HtmlRenderer;
       4: invokestatic  #24                 // Method com/vladsch/flexmark/html/HtmlRenderer.access$400:(Lcom/vladsch/flexmark/html/HtmlRenderer;)Lcom/vladsch/flexmark/html/HtmlRendererOptions;
       7: areturn

  public com.vladsch.flexmark.ast.Document getDocument();
    Code:
       0: aload_0
       1: getfield      #9                  // Field document:Lcom/vladsch/flexmark/ast/Document;
       4: areturn

  public com.vladsch.flexmark.html.renderer.RenderingPhase getRenderingPhase();
    Code:
       0: aload_0
       1: getfield      #88                 // Field phase:Lcom/vladsch/flexmark/html/renderer/RenderingPhase;
       4: areturn

  public java.lang.String encodeUrl(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/vladsch/flexmark/html/HtmlRenderer;
       4: invokestatic  #24                 // Method com/vladsch/flexmark/html/HtmlRenderer.access$400:(Lcom/vladsch/flexmark/html/HtmlRenderer;)Lcom/vladsch/flexmark/html/HtmlRendererOptions;
       7: getfield      #76                 // Field com/vladsch/flexmark/html/HtmlRendererOptions.percentEncodeUrls:Z
      10: ifeq          18
      13: aload_1
      14: invokestatic  #79                 // Method com/vladsch/flexmark/util/html/Escaping.percentEncodeUrl:(Ljava/lang/CharSequence;)Ljava/lang/String;
      17: areturn
      18: aload_1
      19: instanceof    #67                 // class java/lang/String
      22: ifeq          32
      25: aload_1
      26: checkcast     #67                 // class java/lang/String
      29: goto          36
      32: aload_1
      33: invokestatic  #68                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      36: areturn

  public com.vladsch.flexmark.util.html.Attributes extendRenderingNodeAttributes(com.vladsch.flexmark.html.renderer.AttributablePart, com.vladsch.flexmark.util.html.Attributes);
    Code:
       0: aload_2
       1: ifnull        8
       4: aload_2
       5: goto          15
       8: new           #63                 // class com/vladsch/flexmark/util/html/Attributes
      11: dup
      12: invokespecial #82                 // Method com/vladsch/flexmark/util/html/Attributes."<init>":()V
      15: astore_3
      16: aload_0
      17: getfield      #59                 // Field attributeProviders:[Lcom/vladsch/flexmark/html/AttributeProvider;
      20: astore        4
      22: aload         4
      24: arraylength
      25: istore        5
      27: iconst_0
      28: istore        6
      30: iload         6
      32: iload         5
      34: if_icmpge     63
      37: aload         4
      39: iload         6
      41: aaload
      42: astore        7
      44: aload         7
      46: aload_0
      47: getfield      #62                 // Field renderingNode:Lcom/vladsch/flexmark/ast/Node;
      50: aload_1
      51: aload_3
      52: invokeinterface #86,  4           // InterfaceMethod com/vladsch/flexmark/html/AttributeProvider.setAttributes:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/html/renderer/AttributablePart;Lcom/vladsch/flexmark/util/html/Attributes;)V
      57: iinc          6, 1
      60: goto          30
      63: aload_3
      64: areturn

  public void render(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #89                 // Method renderNode:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/html/NodeRendererSubContext;)V
       6: return

  public void delegateRender();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #90                 // Method renderByPreviousHandler:(Lcom/vladsch/flexmark/html/NodeRendererSubContext;)V
       5: return

  void renderByPreviousHandler(com.vladsch.flexmark.html.NodeRendererSubContext);
    Code:
       0: aload_1
       1: getfield      #91                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingNode:Lcom/vladsch/flexmark/ast/Node;
       4: ifnull        99
       7: aload_1
       8: getfield      #92                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingHandlerWrapper:Lcom/vladsch/flexmark/html/NodeRenderingHandlerWrapper;
      11: getfield      #93                 // Field com/vladsch/flexmark/html/NodeRenderingHandlerWrapper.myPreviousRenderingHandler:Lcom/vladsch/flexmark/html/NodeRenderingHandlerWrapper;
      14: astore_2
      15: aload_2
      16: ifnull        96
      19: aload_1
      20: getfield      #91                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingNode:Lcom/vladsch/flexmark/ast/Node;
      23: astore_3
      24: aload_1
      25: getfield      #94                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.doNotRenderLinksNesting:I
      28: istore        4
      30: aload_1
      31: getfield      #92                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingHandlerWrapper:Lcom/vladsch/flexmark/html/NodeRenderingHandlerWrapper;
      34: astore        5
      36: aload_1
      37: aload_2
      38: putfield      #92                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingHandlerWrapper:Lcom/vladsch/flexmark/html/NodeRenderingHandlerWrapper;
      41: aload_2
      42: getfield      #95                 // Field com/vladsch/flexmark/html/NodeRenderingHandlerWrapper.myRenderingHandler:Lcom/vladsch/flexmark/html/renderer/NodeRenderingHandler;
      45: aload_3
      46: aload_1
      47: aload_1
      48: getfield      #96                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.htmlWriter:Lcom/vladsch/flexmark/html/HtmlWriter;
      51: invokevirtual #97                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler.render:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
      54: aload_1
      55: aload_3
      56: putfield      #91                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingNode:Lcom/vladsch/flexmark/ast/Node;
      59: aload_1
      60: iload         4
      62: putfield      #94                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.doNotRenderLinksNesting:I
      65: aload_1
      66: aload         5
      68: putfield      #92                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingHandlerWrapper:Lcom/vladsch/flexmark/html/NodeRenderingHandlerWrapper;
      71: goto          96
      74: astore        6
      76: aload_1
      77: aload_3
      78: putfield      #91                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingNode:Lcom/vladsch/flexmark/ast/Node;
      81: aload_1
      82: iload         4
      84: putfield      #94                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.doNotRenderLinksNesting:I
      87: aload_1
      88: aload         5
      90: putfield      #92                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingHandlerWrapper:Lcom/vladsch/flexmark/html/NodeRenderingHandlerWrapper;
      93: aload         6
      95: athrow
      96: goto          109
      99: new           #98                 // class java/lang/IllegalStateException
     102: dup
     103: ldc           #99                 // String renderingByPreviousHandler called outside node rendering code
     105: invokespecial #100                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     108: athrow
     109: return
    Exception table:
       from    to  target type
          36    54    74   any
          74    76    74   any

  public com.vladsch.flexmark.html.renderer.NodeRendererContext getSubContext(java.lang.Appendable, boolean);
    Code:
       0: new           #101                // class com/vladsch/flexmark/html/HtmlWriter
       3: dup
       4: aload_0
       5: invokevirtual #102                // Method getHtmlWriter:()Lcom/vladsch/flexmark/html/HtmlWriter;
       8: aload_1
       9: iload_2
      10: invokespecial #103                // Method com/vladsch/flexmark/html/HtmlWriter."<init>":(Lcom/vladsch/flexmark/html/HtmlWriter;Ljava/lang/Appendable;Z)V
      13: astore_3
      14: aload_3
      15: aload_0
      16: invokevirtual #36                 // Method com/vladsch/flexmark/html/HtmlWriter.setContext:(Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;)V
      19: new           #104                // class com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer$SubNodeRenderer
      22: dup
      23: aload_0
      24: aload_0
      25: aload_3
      26: iconst_0
      27: invokespecial #105                // Method com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer$SubNodeRenderer."<init>":(Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;Lcom/vladsch/flexmark/html/HtmlWriter;Z)V
      30: areturn

  public com.vladsch.flexmark.html.renderer.NodeRendererContext getDelegatedSubContext(java.lang.Appendable, boolean);
    Code:
       0: new           #101                // class com/vladsch/flexmark/html/HtmlWriter
       3: dup
       4: aload_0
       5: invokevirtual #102                // Method getHtmlWriter:()Lcom/vladsch/flexmark/html/HtmlWriter;
       8: aload_1
       9: iload_2
      10: invokespecial #103                // Method com/vladsch/flexmark/html/HtmlWriter."<init>":(Lcom/vladsch/flexmark/html/HtmlWriter;Ljava/lang/Appendable;Z)V
      13: astore_3
      14: aload_3
      15: aload_0
      16: invokevirtual #36                 // Method com/vladsch/flexmark/html/HtmlWriter.setContext:(Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;)V
      19: new           #104                // class com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer$SubNodeRenderer
      22: dup
      23: aload_0
      24: aload_0
      25: aload_3
      26: iconst_1
      27: invokespecial #105                // Method com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer$SubNodeRenderer."<init>":(Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;Lcom/vladsch/flexmark/html/HtmlWriter;Z)V
      30: areturn

  void renderNode(com.vladsch.flexmark.ast.Node, com.vladsch.flexmark.html.NodeRendererSubContext);
    Code:
       0: aload_1
       1: instanceof    #106                // class com/vladsch/flexmark/ast/Document
       4: ifeq          311
       7: aload_2
       8: invokevirtual #107                // Method com/vladsch/flexmark/html/NodeRendererSubContext.getDoNotRenderLinksNesting:()I
      11: istore_3
      12: aload_0
      13: invokevirtual #108                // Method getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      16: getfield      #25                 // Field com/vladsch/flexmark/html/HtmlRendererOptions.doNotRenderLinksInDocument:Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: istore        4
      29: aload_0
      30: getfield      #35                 // Field htmlIdGenerator:Lcom/vladsch/flexmark/html/renderer/HtmlIdGenerator;
      33: aload_0
      34: getfield      #9                  // Field document:Lcom/vladsch/flexmark/ast/Document;
      37: invokeinterface #109,  2          // InterfaceMethod com/vladsch/flexmark/html/renderer/HtmlIdGenerator.generateIds:(Lcom/vladsch/flexmark/ast/Document;)V
      42: invokestatic  #13                 // Method com/vladsch/flexmark/html/renderer/RenderingPhase.values:()[Lcom/vladsch/flexmark/html/renderer/RenderingPhase;
      45: astore        5
      47: aload         5
      49: arraylength
      50: istore        6
      52: iconst_0
      53: istore        7
      55: iload         7
      57: iload         6
      59: if_icmpge     308
      62: aload         5
      64: iload         7
      66: aaload
      67: astore        8
      69: aload         8
      71: getstatic     #110                // Field com/vladsch/flexmark/html/renderer/RenderingPhase.BODY:Lcom/vladsch/flexmark/html/renderer/RenderingPhase;
      74: if_acmpeq     94
      77: aload_0
      78: getfield      #15                 // Field renderingPhases:Ljava/util/Set;
      81: aload         8
      83: invokeinterface #111,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      88: ifne          94
      91: goto          302
      94: aload_0
      95: aload         8
      97: putfield      #88                 // Field phase:Lcom/vladsch/flexmark/html/renderer/RenderingPhase;
     100: aload_0
     101: getfield      #20                 // Field phasedRenderers:Ljava/util/List;
     104: invokeinterface #112,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     109: astore        9
     111: aload         9
     113: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     118: ifeq          192
     121: aload         9
     123: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     128: checkcast     #51                 // class com/vladsch/flexmark/html/renderer/PhasedNodeRenderer
     131: astore        10
     133: aload         10
     135: invokeinterface #52,  1           // InterfaceMethod com/vladsch/flexmark/html/renderer/PhasedNodeRenderer.getRenderingPhases:()Ljava/util/Set;
     140: aload         8
     142: invokeinterface #111,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     147: ifeq          189
     150: aload_2
     151: iload         4
     153: putfield      #94                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.doNotRenderLinksNesting:I
     156: aload_2
     157: aload_1
     158: putfield      #91                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingNode:Lcom/vladsch/flexmark/ast/Node;
     161: aload         10
     163: aload_2
     164: aload_2
     165: getfield      #96                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.htmlWriter:Lcom/vladsch/flexmark/html/HtmlWriter;
     168: aload_1
     169: checkcast     #106                // class com/vladsch/flexmark/ast/Document
     172: aload         8
     174: invokeinterface #113,  5          // InterfaceMethod com/vladsch/flexmark/html/renderer/PhasedNodeRenderer.renderDocument:(Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;Lcom/vladsch/flexmark/ast/Document;Lcom/vladsch/flexmark/html/renderer/RenderingPhase;)V
     179: aload_2
     180: aconst_null
     181: putfield      #91                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingNode:Lcom/vladsch/flexmark/ast/Node;
     184: aload_2
     185: iload_3
     186: putfield      #94                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.doNotRenderLinksNesting:I
     189: goto          111
     192: aload_0
     193: invokevirtual #114                // Method getRenderingPhase:()Lcom/vladsch/flexmark/html/renderer/RenderingPhase;
     196: getstatic     #110                // Field com/vladsch/flexmark/html/renderer/RenderingPhase.BODY:Lcom/vladsch/flexmark/html/renderer/RenderingPhase;
     199: if_acmpne     302
     202: aload_0
     203: getfield      #11                 // Field renderers:Ljava/util/Map;
     206: aload_1
     207: invokevirtual #115                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     210: invokeinterface #48,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     215: checkcast     #46                 // class com/vladsch/flexmark/html/NodeRenderingHandlerWrapper
     218: astore        9
     220: aload         9
     222: ifnull        302
     225: aload_2
     226: iload         4
     228: putfield      #94                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.doNotRenderLinksNesting:I
     231: aload_2
     232: getfield      #92                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingHandlerWrapper:Lcom/vladsch/flexmark/html/NodeRenderingHandlerWrapper;
     235: astore        10
     237: aload_2
     238: aload_1
     239: putfield      #91                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingNode:Lcom/vladsch/flexmark/ast/Node;
     242: aload_2
     243: aload         9
     245: putfield      #92                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingHandlerWrapper:Lcom/vladsch/flexmark/html/NodeRenderingHandlerWrapper;
     248: aload         9
     250: getfield      #95                 // Field com/vladsch/flexmark/html/NodeRenderingHandlerWrapper.myRenderingHandler:Lcom/vladsch/flexmark/html/renderer/NodeRenderingHandler;
     253: aload_1
     254: aload_2
     255: aload_2
     256: getfield      #96                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.htmlWriter:Lcom/vladsch/flexmark/html/HtmlWriter;
     259: invokevirtual #97                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler.render:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
     262: aload_2
     263: aload         10
     265: putfield      #92                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingHandlerWrapper:Lcom/vladsch/flexmark/html/NodeRenderingHandlerWrapper;
     268: aload_2
     269: aconst_null
     270: putfield      #91                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingNode:Lcom/vladsch/flexmark/ast/Node;
     273: aload_2
     274: iload_3
     275: putfield      #94                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.doNotRenderLinksNesting:I
     278: goto          302
     281: astore        11
     283: aload_2
     284: aload         10
     286: putfield      #92                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingHandlerWrapper:Lcom/vladsch/flexmark/html/NodeRenderingHandlerWrapper;
     289: aload_2
     290: aconst_null
     291: putfield      #91                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingNode:Lcom/vladsch/flexmark/ast/Node;
     294: aload_2
     295: iload_3
     296: putfield      #94                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.doNotRenderLinksNesting:I
     299: aload         11
     301: athrow
     302: iinc          7, 1
     305: goto          55
     308: goto          417
     311: aload_0
     312: getfield      #11                 // Field renderers:Ljava/util/Map;
     315: aload_1
     316: invokevirtual #115                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     319: invokeinterface #48,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     324: checkcast     #46                 // class com/vladsch/flexmark/html/NodeRenderingHandlerWrapper
     327: astore_3
     328: aload_3
     329: ifnull        417
     332: aload_0
     333: getfield      #62                 // Field renderingNode:Lcom/vladsch/flexmark/ast/Node;
     336: astore        4
     338: aload_2
     339: getfield      #94                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.doNotRenderLinksNesting:I
     342: istore        5
     344: aload_2
     345: getfield      #92                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingHandlerWrapper:Lcom/vladsch/flexmark/html/NodeRenderingHandlerWrapper;
     348: astore        6
     350: aload_2
     351: aload_1
     352: putfield      #91                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingNode:Lcom/vladsch/flexmark/ast/Node;
     355: aload_2
     356: aload_3
     357: putfield      #92                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingHandlerWrapper:Lcom/vladsch/flexmark/html/NodeRenderingHandlerWrapper;
     360: aload_3
     361: getfield      #95                 // Field com/vladsch/flexmark/html/NodeRenderingHandlerWrapper.myRenderingHandler:Lcom/vladsch/flexmark/html/renderer/NodeRenderingHandler;
     364: aload_1
     365: aload_2
     366: aload_2
     367: getfield      #96                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.htmlWriter:Lcom/vladsch/flexmark/html/HtmlWriter;
     370: invokevirtual #97                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler.render:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
     373: aload_2
     374: aload         4
     376: putfield      #91                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingNode:Lcom/vladsch/flexmark/ast/Node;
     379: aload_2
     380: iload         5
     382: putfield      #94                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.doNotRenderLinksNesting:I
     385: aload_2
     386: aload         6
     388: putfield      #92                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingHandlerWrapper:Lcom/vladsch/flexmark/html/NodeRenderingHandlerWrapper;
     391: goto          417
     394: astore        12
     396: aload_2
     397: aload         4
     399: putfield      #91                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingNode:Lcom/vladsch/flexmark/ast/Node;
     402: aload_2
     403: iload         5
     405: putfield      #94                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.doNotRenderLinksNesting:I
     408: aload_2
     409: aload         6
     411: putfield      #92                 // Field com/vladsch/flexmark/html/NodeRendererSubContext.renderingHandlerWrapper:Lcom/vladsch/flexmark/html/NodeRenderingHandlerWrapper;
     414: aload         12
     416: athrow
     417: return
    Exception table:
       from    to  target type
         237   262   281   any
         281   283   281   any
         350   373   394   any
         394   396   394   any

  public void renderChildren(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #116                // Method renderChildrenNode:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/html/NodeRendererSubContext;)V
       6: return

  protected void renderChildrenNode(com.vladsch.flexmark.ast.Node, com.vladsch.flexmark.html.NodeRendererSubContext);
    Code:
       0: aload_1
       1: invokevirtual #117                // Method com/vladsch/flexmark/ast/Node.getFirstChild:()Lcom/vladsch/flexmark/ast/Node;
       4: astore_3
       5: aload_3
       6: ifnull        27
       9: aload_3
      10: invokevirtual #118                // Method com/vladsch/flexmark/ast/Node.getNext:()Lcom/vladsch/flexmark/ast/Node;
      13: astore        4
      15: aload_0
      16: aload_3
      17: aload_2
      18: invokevirtual #89                 // Method renderNode:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/html/NodeRendererSubContext;)V
      21: aload         4
      23: astore_3
      24: goto          5
      27: return
}
