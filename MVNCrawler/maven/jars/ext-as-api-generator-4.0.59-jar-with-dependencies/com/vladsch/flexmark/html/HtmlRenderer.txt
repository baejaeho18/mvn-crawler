Compiled from "HtmlRenderer.java"
public class com.vladsch.flexmark.html.HtmlRenderer implements com.vladsch.flexmark.IRender {
  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.String> SOFT_BREAK;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.String> HARD_BREAK;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.String> STRONG_EMPHASIS_STYLE_HTML_OPEN;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.String> STRONG_EMPHASIS_STYLE_HTML_CLOSE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.String> EMPHASIS_STYLE_HTML_OPEN;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.String> EMPHASIS_STYLE_HTML_CLOSE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.String> CODE_STYLE_HTML_OPEN;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.String> CODE_STYLE_HTML_CLOSE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.String> INLINE_CODE_SPLICE_CLASS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> PERCENT_ENCODE_URLS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Integer> INDENT_SIZE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> ESCAPE_HTML;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> ESCAPE_HTML_BLOCKS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> ESCAPE_HTML_COMMENT_BLOCKS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> ESCAPE_INLINE_HTML;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> ESCAPE_INLINE_HTML_COMMENTS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> SUPPRESS_HTML;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> SUPPRESS_HTML_BLOCKS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> SUPPRESS_HTML_COMMENT_BLOCKS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> SUPPRESS_INLINE_HTML;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> SUPPRESS_INLINE_HTML_COMMENTS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> SOURCE_WRAP_HTML;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> SOURCE_WRAP_HTML_BLOCKS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> HEADER_ID_GENERATOR_RESOLVE_DUPES;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.String> HEADER_ID_GENERATOR_TO_DASH_CHARS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> HEADER_ID_GENERATOR_NO_DUPED_DASHES;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> RENDER_HEADER_ID;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> GENERATE_HEADER_ID;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> DO_NOT_RENDER_LINKS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.String> FENCED_CODE_LANGUAGE_CLASS_PREFIX;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.String> FENCED_CODE_NO_LANGUAGE_CLASS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.String> SOURCE_POSITION_ATTRIBUTE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> SOURCE_POSITION_PARAGRAPH_LINES;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.String> TYPE;

  public static final com.vladsch.flexmark.util.options.DataKey<java.util.ArrayList<com.vladsch.flexmark.util.sequence.TagRange>> TAG_RANGES;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> RECHECK_UNDEFINED_REFERENCES;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> OBFUSCATE_EMAIL;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> OBFUSCATE_EMAIL_RANDOM;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> HTML_BLOCK_OPEN_TAG_EOL;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> HTML_BLOCK_CLOSE_TAG_EOL;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> UNESCAPE_HTML_ENTITIES;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Boolean> WRAP_TIGHT_ITEM_PARAGRAPH_IN_SPAN;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.String> AUTOLINK_WWW_PREFIX;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Integer> FORMAT_FLAGS;

  public static final com.vladsch.flexmark.util.options.DataKey<java.lang.Integer> MAX_TRAILING_BLANK_LINES;

  public static final int FORMAT_CONVERT_TABS;

  public static final int FORMAT_COLLAPSE_WHITESPACE;

  public static final int FORMAT_SUPPRESS_TRAILING_WHITESPACE;

  public static final int FORMAT_ALL_OPTIONS;

  private final java.util.List<com.vladsch.flexmark.html.AttributeProviderFactory> attributeProviderFactories;

  private final java.util.List<com.vladsch.flexmark.html.DelegatingNodeRendererFactoryWrapper> nodeRendererFactories;

  private final java.util.List<com.vladsch.flexmark.html.LinkResolverFactory> linkResolverFactories;

  private final com.vladsch.flexmark.html.renderer.HeaderIdGeneratorFactory htmlIdGeneratorFactory;

  private final com.vladsch.flexmark.html.HtmlRendererOptions htmlOptions;

  private final com.vladsch.flexmark.util.options.DataHolder options;

  private final com.vladsch.flexmark.html.HtmlRenderer$Builder builder;

  com.vladsch.flexmark.html.HtmlRenderer(com.vladsch.flexmark.html.HtmlRenderer$Builder);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #8                  // class com/vladsch/flexmark/html/HtmlRenderer$Builder
       8: dup
       9: aload_1
      10: invokespecial #9                  // Method com/vladsch/flexmark/html/HtmlRenderer$Builder."<init>":(Lcom/vladsch/flexmark/html/HtmlRenderer$Builder;)V
      13: putfield      #10                 // Field builder:Lcom/vladsch/flexmark/html/HtmlRenderer$Builder;
      16: aload_0
      17: new           #11                 // class com/vladsch/flexmark/util/options/DataSet
      20: dup
      21: aload_1
      22: invokespecial #12                 // Method com/vladsch/flexmark/util/options/DataSet."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
      25: putfield      #13                 // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
      28: aload_0
      29: new           #14                 // class com/vladsch/flexmark/html/HtmlRendererOptions
      32: dup
      33: aload_0
      34: getfield      #13                 // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
      37: invokespecial #15                 // Method com/vladsch/flexmark/html/HtmlRendererOptions."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
      40: putfield      #4                  // Field htmlOptions:Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      43: aload_0
      44: aload_1
      45: getfield      #16                 // Field com/vladsch/flexmark/html/HtmlRenderer$Builder.htmlIdGeneratorFactory:Lcom/vladsch/flexmark/html/renderer/HeaderIdGeneratorFactory;
      48: putfield      #3                  // Field htmlIdGeneratorFactory:Lcom/vladsch/flexmark/html/renderer/HeaderIdGeneratorFactory;
      51: new           #17                 // class java/util/ArrayList
      54: dup
      55: aload_1
      56: getfield      #18                 // Field com/vladsch/flexmark/html/HtmlRenderer$Builder.nodeRendererFactories:Ljava/util/List;
      59: invokeinterface #19,  1           // InterfaceMethod java/util/List.size:()I
      64: invokespecial #20                 // Method java/util/ArrayList."<init>":(I)V
      67: astore_2
      68: aload_1
      69: getfield      #18                 // Field com/vladsch/flexmark/html/HtmlRenderer$Builder.nodeRendererFactories:Ljava/util/List;
      72: invokeinterface #19,  1           // InterfaceMethod java/util/List.size:()I
      77: iconst_1
      78: isub
      79: istore_3
      80: iload_3
      81: iflt          132
      84: aload_1
      85: getfield      #18                 // Field com/vladsch/flexmark/html/HtmlRenderer$Builder.nodeRendererFactories:Ljava/util/List;
      88: iload_3
      89: invokeinterface #21,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      94: checkcast     #22                 // class com/vladsch/flexmark/html/renderer/NodeRendererFactory
      97: astore        4
      99: iconst_1
     100: anewarray     #23                 // class java/util/Set
     103: dup
     104: iconst_0
     105: aconst_null
     106: aastore
     107: astore        5
     109: aload_2
     110: new           #24                 // class com/vladsch/flexmark/html/DelegatingNodeRendererFactoryWrapper
     113: dup
     114: aload_2
     115: aload         4
     117: invokespecial #25                 // Method com/vladsch/flexmark/html/DelegatingNodeRendererFactoryWrapper."<init>":(Ljava/util/List;Lcom/vladsch/flexmark/html/renderer/NodeRendererFactory;)V
     120: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     125: pop
     126: iinc          3, -1
     129: goto          80
     132: new           #27                 // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$Factory
     135: dup
     136: invokespecial #28                 // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$Factory."<init>":()V
     139: astore_3
     140: aload_2
     141: new           #24                 // class com/vladsch/flexmark/html/DelegatingNodeRendererFactoryWrapper
     144: dup
     145: aload_2
     146: aload_3
     147: invokespecial #25                 // Method com/vladsch/flexmark/html/DelegatingNodeRendererFactoryWrapper."<init>":(Ljava/util/List;Lcom/vladsch/flexmark/html/renderer/NodeRendererFactory;)V
     150: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     155: pop
     156: new           #29                 // class com/vladsch/flexmark/html/HtmlRenderer$RendererDependencyHandler
     159: dup
     160: aconst_null
     161: invokespecial #30                 // Method com/vladsch/flexmark/html/HtmlRenderer$RendererDependencyHandler."<init>":(Lcom/vladsch/flexmark/html/HtmlRenderer$1;)V
     164: astore        4
     166: aload_0
     167: aload         4
     169: aload_2
     170: invokevirtual #31                 // Method com/vladsch/flexmark/html/HtmlRenderer$RendererDependencyHandler.resolveDependencies:(Ljava/util/List;)Lcom/vladsch/flexmark/util/dependency/ResolvedDependencies;
     173: checkcast     #32                 // class com/vladsch/flexmark/html/HtmlRenderer$RendererDependencies
     176: invokevirtual #33                 // Method com/vladsch/flexmark/html/HtmlRenderer$RendererDependencies.getNodeRendererFactories:()Ljava/util/List;
     179: putfield      #6                  // Field nodeRendererFactories:Ljava/util/List;
     182: aload_0
     183: aload_1
     184: getfield      #34                 // Field com/vladsch/flexmark/html/HtmlRenderer$Builder.attributeProviderFactories:Ljava/util/List;
     187: invokestatic  #35                 // Method com/vladsch/flexmark/util/dependency/FlatDependencyHandler.computeDependencies:(Ljava/util/List;)Ljava/util/List;
     190: putfield      #2                  // Field attributeProviderFactories:Ljava/util/List;
     193: aload_0
     194: aload_1
     195: getfield      #36                 // Field com/vladsch/flexmark/html/HtmlRenderer$Builder.linkResolverFactories:Ljava/util/List;
     198: invokestatic  #35                 // Method com/vladsch/flexmark/util/dependency/FlatDependencyHandler.computeDependencies:(Ljava/util/List;)Ljava/util/List;
     201: putfield      #5                  // Field linkResolverFactories:Ljava/util/List;
     204: return

  public static com.vladsch.flexmark.html.HtmlRenderer$Builder builder();
    Code:
       0: new           #8                  // class com/vladsch/flexmark/html/HtmlRenderer$Builder
       3: dup
       4: invokespecial #37                 // Method com/vladsch/flexmark/html/HtmlRenderer$Builder."<init>":()V
       7: areturn

  public static com.vladsch.flexmark.html.HtmlRenderer$Builder builder(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: new           #8                  // class com/vladsch/flexmark/html/HtmlRenderer$Builder
       3: dup
       4: aload_0
       5: invokespecial #38                 // Method com/vladsch/flexmark/html/HtmlRenderer$Builder."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
       8: areturn

  public void render(com.vladsch.flexmark.ast.Node, java.lang.Appendable);
    Code:
       0: new           #39                 // class com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #13                 // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
       9: new           #40                 // class com/vladsch/flexmark/html/HtmlWriter
      12: dup
      13: aload_2
      14: aload_0
      15: getfield      #4                  // Field htmlOptions:Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      18: getfield      #41                 // Field com/vladsch/flexmark/html/HtmlRendererOptions.indentSize:I
      21: aload_0
      22: getfield      #4                  // Field htmlOptions:Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      25: getfield      #42                 // Field com/vladsch/flexmark/html/HtmlRendererOptions.formatFlags:I
      28: aload_0
      29: getfield      #4                  // Field htmlOptions:Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      32: getfield      #43                 // Field com/vladsch/flexmark/html/HtmlRendererOptions.htmlBlockOpenTagEol:Z
      35: ifne          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: aload_0
      44: getfield      #4                  // Field htmlOptions:Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      47: getfield      #44                 // Field com/vladsch/flexmark/html/HtmlRendererOptions.htmlBlockCloseTagEol:Z
      50: ifne          57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: invokespecial #45                 // Method com/vladsch/flexmark/html/HtmlWriter."<init>":(Ljava/lang/Appendable;IIZZ)V
      61: aload_1
      62: invokevirtual #46                 // Method com/vladsch/flexmark/ast/Node.getDocument:()Lcom/vladsch/flexmark/ast/Document;
      65: invokespecial #47                 // Method com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer."<init>":(Lcom/vladsch/flexmark/html/HtmlRenderer;Lcom/vladsch/flexmark/util/options/DataHolder;Lcom/vladsch/flexmark/html/HtmlWriter;Lcom/vladsch/flexmark/ast/Document;)V
      68: astore_3
      69: aload_3
      70: aload_1
      71: invokevirtual #48                 // Method com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer.render:(Lcom/vladsch/flexmark/ast/Node;)V
      74: aload_3
      75: aload_0
      76: getfield      #4                  // Field htmlOptions:Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      79: getfield      #49                 // Field com/vladsch/flexmark/html/HtmlRendererOptions.maxTrailingBlankLines:I
      82: invokevirtual #50                 // Method com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer.flush:(I)V
      85: return

  public void render(com.vladsch.flexmark.ast.Node, java.lang.Appendable, int);
    Code:
       0: new           #39                 // class com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #13                 // Field options:Lcom/vladsch/flexmark/util/options/DataHolder;
       9: new           #40                 // class com/vladsch/flexmark/html/HtmlWriter
      12: dup
      13: aload_2
      14: aload_0
      15: getfield      #4                  // Field htmlOptions:Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      18: getfield      #41                 // Field com/vladsch/flexmark/html/HtmlRendererOptions.indentSize:I
      21: aload_0
      22: getfield      #4                  // Field htmlOptions:Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      25: getfield      #42                 // Field com/vladsch/flexmark/html/HtmlRendererOptions.formatFlags:I
      28: aload_0
      29: getfield      #4                  // Field htmlOptions:Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      32: getfield      #43                 // Field com/vladsch/flexmark/html/HtmlRendererOptions.htmlBlockOpenTagEol:Z
      35: ifne          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: aload_0
      44: getfield      #4                  // Field htmlOptions:Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      47: getfield      #44                 // Field com/vladsch/flexmark/html/HtmlRendererOptions.htmlBlockCloseTagEol:Z
      50: ifne          57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: invokespecial #45                 // Method com/vladsch/flexmark/html/HtmlWriter."<init>":(Ljava/lang/Appendable;IIZZ)V
      61: aload_1
      62: invokevirtual #46                 // Method com/vladsch/flexmark/ast/Node.getDocument:()Lcom/vladsch/flexmark/ast/Document;
      65: invokespecial #47                 // Method com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer."<init>":(Lcom/vladsch/flexmark/html/HtmlRenderer;Lcom/vladsch/flexmark/util/options/DataHolder;Lcom/vladsch/flexmark/html/HtmlWriter;Lcom/vladsch/flexmark/ast/Document;)V
      68: astore        4
      70: aload         4
      72: aload_1
      73: invokevirtual #48                 // Method com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer.render:(Lcom/vladsch/flexmark/ast/Node;)V
      76: aload         4
      78: iload_3
      79: invokevirtual #50                 // Method com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer.flush:(I)V
      82: return

  public java.lang.String render(com.vladsch.flexmark.ast.Node);
    Code:
       0: new           #51                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokevirtual #53                 // Method render:(Lcom/vladsch/flexmark/ast/Node;Ljava/lang/Appendable;)V
      14: aload_2
      15: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      18: areturn

  public com.vladsch.flexmark.html.HtmlRenderer withOptions(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: aload_0
       5: goto          27
       8: new           #55                 // class com/vladsch/flexmark/html/HtmlRenderer
      11: dup
      12: new           #8                  // class com/vladsch/flexmark/html/HtmlRenderer$Builder
      15: dup
      16: aload_0
      17: getfield      #10                 // Field builder:Lcom/vladsch/flexmark/html/HtmlRenderer$Builder;
      20: aload_1
      21: invokespecial #56                 // Method com/vladsch/flexmark/html/HtmlRenderer$Builder."<init>":(Lcom/vladsch/flexmark/html/HtmlRenderer$Builder;Lcom/vladsch/flexmark/util/options/DataHolder;)V
      24: invokespecial #57                 // Method "<init>":(Lcom/vladsch/flexmark/html/HtmlRenderer$Builder;)V
      27: areturn

  public com.vladsch.flexmark.IRender withOptions(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #58                 // Method withOptions:(Lcom/vladsch/flexmark/util/options/DataHolder;)Lcom/vladsch/flexmark/html/HtmlRenderer;
       5: areturn

  static java.util.List access$200(com.vladsch.flexmark.html.HtmlRenderer);
    Code:
       0: aload_0
       1: getfield      #6                  // Field nodeRendererFactories:Ljava/util/List;
       4: areturn

  static java.util.List access$300(com.vladsch.flexmark.html.HtmlRenderer);
    Code:
       0: aload_0
       1: getfield      #5                  // Field linkResolverFactories:Ljava/util/List;
       4: areturn

  static com.vladsch.flexmark.html.HtmlRendererOptions access$400(com.vladsch.flexmark.html.HtmlRenderer);
    Code:
       0: aload_0
       1: getfield      #4                  // Field htmlOptions:Lcom/vladsch/flexmark/html/HtmlRendererOptions;
       4: areturn

  static com.vladsch.flexmark.html.renderer.HeaderIdGeneratorFactory access$500(com.vladsch.flexmark.html.HtmlRenderer);
    Code:
       0: aload_0
       1: getfield      #3                  // Field htmlIdGeneratorFactory:Lcom/vladsch/flexmark/html/renderer/HeaderIdGeneratorFactory;
       4: areturn

  static java.util.List access$600(com.vladsch.flexmark.html.HtmlRenderer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field attributeProviderFactories:Ljava/util/List;
       4: areturn

  static {};
    Code:
       0: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
       3: dup
       4: ldc           #60                 // String SOFT_BREAK
       6: ldc           #61                 // String \n
       8: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      11: putstatic     #63                 // Field SOFT_BREAK:Lcom/vladsch/flexmark/util/options/DataKey;
      14: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
      17: dup
      18: ldc           #64                 // String HARD_BREAK
      20: ldc           #65                 // String <br />\n
      22: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      25: putstatic     #66                 // Field HARD_BREAK:Lcom/vladsch/flexmark/util/options/DataKey;
      28: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
      31: dup
      32: ldc           #67                 // String STRONG_EMPHASIS_STYLE_HTML_OPEN
      34: aconst_null
      35: checkcast     #68                 // class java/lang/String
      38: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      41: putstatic     #69                 // Field STRONG_EMPHASIS_STYLE_HTML_OPEN:Lcom/vladsch/flexmark/util/options/DataKey;
      44: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
      47: dup
      48: ldc           #70                 // String STRONG_EMPHASIS_STYLE_HTML_CLOSE
      50: aconst_null
      51: checkcast     #68                 // class java/lang/String
      54: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      57: putstatic     #71                 // Field STRONG_EMPHASIS_STYLE_HTML_CLOSE:Lcom/vladsch/flexmark/util/options/DataKey;
      60: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
      63: dup
      64: ldc           #72                 // String EMPHASIS_STYLE_HTML_OPEN
      66: aconst_null
      67: checkcast     #68                 // class java/lang/String
      70: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      73: putstatic     #73                 // Field EMPHASIS_STYLE_HTML_OPEN:Lcom/vladsch/flexmark/util/options/DataKey;
      76: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
      79: dup
      80: ldc           #74                 // String EMPHASIS_STYLE_HTML_CLOSE
      82: aconst_null
      83: checkcast     #68                 // class java/lang/String
      86: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      89: putstatic     #75                 // Field EMPHASIS_STYLE_HTML_CLOSE:Lcom/vladsch/flexmark/util/options/DataKey;
      92: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
      95: dup
      96: ldc           #76                 // String CODE_STYLE_HTML_OPEN
      98: aconst_null
      99: checkcast     #68                 // class java/lang/String
     102: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     105: putstatic     #77                 // Field CODE_STYLE_HTML_OPEN:Lcom/vladsch/flexmark/util/options/DataKey;
     108: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     111: dup
     112: ldc           #78                 // String CODE_STYLE_HTML_CLOSE
     114: aconst_null
     115: checkcast     #68                 // class java/lang/String
     118: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     121: putstatic     #79                 // Field CODE_STYLE_HTML_CLOSE:Lcom/vladsch/flexmark/util/options/DataKey;
     124: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     127: dup
     128: ldc           #80                 // String INLINE_CODE_SPLICE_CLASS
     130: aconst_null
     131: checkcast     #68                 // class java/lang/String
     134: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     137: putstatic     #81                 // Field INLINE_CODE_SPLICE_CLASS:Lcom/vladsch/flexmark/util/options/DataKey;
     140: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     143: dup
     144: ldc           #82                 // String PERCENT_ENCODE_URLS
     146: iconst_0
     147: invokestatic  #83                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     150: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     153: putstatic     #84                 // Field PERCENT_ENCODE_URLS:Lcom/vladsch/flexmark/util/options/DataKey;
     156: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     159: dup
     160: ldc           #85                 // String INDENT_SIZE
     162: iconst_0
     163: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     166: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     169: putstatic     #87                 // Field INDENT_SIZE:Lcom/vladsch/flexmark/util/options/DataKey;
     172: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     175: dup
     176: ldc           #88                 // String ESCAPE_HTML
     178: iconst_0
     179: invokestatic  #83                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     182: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     185: putstatic     #89                 // Field ESCAPE_HTML:Lcom/vladsch/flexmark/util/options/DataKey;
     188: new           #90                 // class com/vladsch/flexmark/util/collection/DynamicDefaultKey
     191: dup
     192: ldc           #91                 // String ESCAPE_HTML_BLOCKS
     194: getstatic     #89                 // Field ESCAPE_HTML:Lcom/vladsch/flexmark/util/options/DataKey;
     197: invokespecial #92                 // Method com/vladsch/flexmark/util/collection/DynamicDefaultKey."<init>":(Ljava/lang/String;Lcom/vladsch/flexmark/util/options/DataKey;)V
     200: putstatic     #93                 // Field ESCAPE_HTML_BLOCKS:Lcom/vladsch/flexmark/util/options/DataKey;
     203: new           #90                 // class com/vladsch/flexmark/util/collection/DynamicDefaultKey
     206: dup
     207: ldc           #94                 // String ESCAPE_HTML_COMMENT_BLOCKS
     209: getstatic     #93                 // Field ESCAPE_HTML_BLOCKS:Lcom/vladsch/flexmark/util/options/DataKey;
     212: invokespecial #92                 // Method com/vladsch/flexmark/util/collection/DynamicDefaultKey."<init>":(Ljava/lang/String;Lcom/vladsch/flexmark/util/options/DataKey;)V
     215: putstatic     #95                 // Field ESCAPE_HTML_COMMENT_BLOCKS:Lcom/vladsch/flexmark/util/options/DataKey;
     218: new           #90                 // class com/vladsch/flexmark/util/collection/DynamicDefaultKey
     221: dup
     222: ldc           #91                 // String ESCAPE_HTML_BLOCKS
     224: getstatic     #89                 // Field ESCAPE_HTML:Lcom/vladsch/flexmark/util/options/DataKey;
     227: invokespecial #92                 // Method com/vladsch/flexmark/util/collection/DynamicDefaultKey."<init>":(Ljava/lang/String;Lcom/vladsch/flexmark/util/options/DataKey;)V
     230: putstatic     #96                 // Field ESCAPE_INLINE_HTML:Lcom/vladsch/flexmark/util/options/DataKey;
     233: new           #90                 // class com/vladsch/flexmark/util/collection/DynamicDefaultKey
     236: dup
     237: ldc           #97                 // String ESCAPE_INLINE_HTML_COMMENTS
     239: getstatic     #96                 // Field ESCAPE_INLINE_HTML:Lcom/vladsch/flexmark/util/options/DataKey;
     242: invokespecial #92                 // Method com/vladsch/flexmark/util/collection/DynamicDefaultKey."<init>":(Ljava/lang/String;Lcom/vladsch/flexmark/util/options/DataKey;)V
     245: putstatic     #98                 // Field ESCAPE_INLINE_HTML_COMMENTS:Lcom/vladsch/flexmark/util/options/DataKey;
     248: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     251: dup
     252: ldc           #99                 // String SUPPRESS_HTML
     254: iconst_0
     255: invokestatic  #83                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     258: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     261: putstatic     #100                // Field SUPPRESS_HTML:Lcom/vladsch/flexmark/util/options/DataKey;
     264: new           #90                 // class com/vladsch/flexmark/util/collection/DynamicDefaultKey
     267: dup
     268: ldc           #101                // String SUPPRESS_HTML_BLOCKS
     270: getstatic     #100                // Field SUPPRESS_HTML:Lcom/vladsch/flexmark/util/options/DataKey;
     273: invokespecial #92                 // Method com/vladsch/flexmark/util/collection/DynamicDefaultKey."<init>":(Ljava/lang/String;Lcom/vladsch/flexmark/util/options/DataKey;)V
     276: putstatic     #102                // Field SUPPRESS_HTML_BLOCKS:Lcom/vladsch/flexmark/util/options/DataKey;
     279: new           #90                 // class com/vladsch/flexmark/util/collection/DynamicDefaultKey
     282: dup
     283: ldc           #103                // String SUPPRESS_HTML_COMMENT_BLOCKS
     285: getstatic     #102                // Field SUPPRESS_HTML_BLOCKS:Lcom/vladsch/flexmark/util/options/DataKey;
     288: invokespecial #92                 // Method com/vladsch/flexmark/util/collection/DynamicDefaultKey."<init>":(Ljava/lang/String;Lcom/vladsch/flexmark/util/options/DataKey;)V
     291: putstatic     #104                // Field SUPPRESS_HTML_COMMENT_BLOCKS:Lcom/vladsch/flexmark/util/options/DataKey;
     294: new           #90                 // class com/vladsch/flexmark/util/collection/DynamicDefaultKey
     297: dup
     298: ldc           #105                // String SUPPRESS_INLINE_HTML
     300: getstatic     #100                // Field SUPPRESS_HTML:Lcom/vladsch/flexmark/util/options/DataKey;
     303: invokespecial #92                 // Method com/vladsch/flexmark/util/collection/DynamicDefaultKey."<init>":(Ljava/lang/String;Lcom/vladsch/flexmark/util/options/DataKey;)V
     306: putstatic     #106                // Field SUPPRESS_INLINE_HTML:Lcom/vladsch/flexmark/util/options/DataKey;
     309: new           #90                 // class com/vladsch/flexmark/util/collection/DynamicDefaultKey
     312: dup
     313: ldc           #107                // String SUPPRESS_INLINE_HTML_COMMENTS
     315: getstatic     #106                // Field SUPPRESS_INLINE_HTML:Lcom/vladsch/flexmark/util/options/DataKey;
     318: invokespecial #92                 // Method com/vladsch/flexmark/util/collection/DynamicDefaultKey."<init>":(Ljava/lang/String;Lcom/vladsch/flexmark/util/options/DataKey;)V
     321: putstatic     #108                // Field SUPPRESS_INLINE_HTML_COMMENTS:Lcom/vladsch/flexmark/util/options/DataKey;
     324: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     327: dup
     328: ldc           #109                // String SOURCE_WRAP_HTML
     330: iconst_0
     331: invokestatic  #83                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     334: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     337: putstatic     #110                // Field SOURCE_WRAP_HTML:Lcom/vladsch/flexmark/util/options/DataKey;
     340: new           #90                 // class com/vladsch/flexmark/util/collection/DynamicDefaultKey
     343: dup
     344: ldc           #111                // String SOURCE_WRAP_HTML_BLOCKS
     346: getstatic     #110                // Field SOURCE_WRAP_HTML:Lcom/vladsch/flexmark/util/options/DataKey;
     349: invokespecial #92                 // Method com/vladsch/flexmark/util/collection/DynamicDefaultKey."<init>":(Ljava/lang/String;Lcom/vladsch/flexmark/util/options/DataKey;)V
     352: putstatic     #112                // Field SOURCE_WRAP_HTML_BLOCKS:Lcom/vladsch/flexmark/util/options/DataKey;
     355: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     358: dup
     359: ldc           #113                // String HEADER_ID_GENERATOR_RESOLVE_DUPES
     361: iconst_1
     362: invokestatic  #83                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     365: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     368: putstatic     #114                // Field HEADER_ID_GENERATOR_RESOLVE_DUPES:Lcom/vladsch/flexmark/util/options/DataKey;
     371: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     374: dup
     375: ldc           #115                // String HEADER_ID_GENERATOR_TO_DASH_CHARS
     377: ldc           #116                // String  -_
     379: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     382: putstatic     #117                // Field HEADER_ID_GENERATOR_TO_DASH_CHARS:Lcom/vladsch/flexmark/util/options/DataKey;
     385: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     388: dup
     389: ldc           #118                // String HEADER_ID_GENERATOR_NO_DUPED_DASHES
     391: iconst_0
     392: invokestatic  #83                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     395: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     398: putstatic     #119                // Field HEADER_ID_GENERATOR_NO_DUPED_DASHES:Lcom/vladsch/flexmark/util/options/DataKey;
     401: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     404: dup
     405: ldc           #120                // String RENDER_HEADER_ID
     407: iconst_0
     408: invokestatic  #83                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     411: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     414: putstatic     #121                // Field RENDER_HEADER_ID:Lcom/vladsch/flexmark/util/options/DataKey;
     417: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     420: dup
     421: ldc           #122                // String GENERATE_HEADER_ID
     423: iconst_1
     424: invokestatic  #83                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     427: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     430: putstatic     #123                // Field GENERATE_HEADER_ID:Lcom/vladsch/flexmark/util/options/DataKey;
     433: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     436: dup
     437: ldc           #124                // String DO_NOT_RENDER_LINKS
     439: iconst_0
     440: invokestatic  #83                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     443: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     446: putstatic     #125                // Field DO_NOT_RENDER_LINKS:Lcom/vladsch/flexmark/util/options/DataKey;
     449: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     452: dup
     453: ldc           #126                // String FENCED_CODE_LANGUAGE_CLASS_PREFIX
     455: ldc           #127                // String language-
     457: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     460: putstatic     #128                // Field FENCED_CODE_LANGUAGE_CLASS_PREFIX:Lcom/vladsch/flexmark/util/options/DataKey;
     463: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     466: dup
     467: ldc           #129                // String FENCED_CODE_NO_LANGUAGE_CLASS
     469: ldc           #130                // String
     471: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     474: putstatic     #131                // Field FENCED_CODE_NO_LANGUAGE_CLASS:Lcom/vladsch/flexmark/util/options/DataKey;
     477: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     480: dup
     481: ldc           #132                // String SOURCE_POSITION_ATTRIBUTE
     483: ldc           #130                // String
     485: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     488: putstatic     #133                // Field SOURCE_POSITION_ATTRIBUTE:Lcom/vladsch/flexmark/util/options/DataKey;
     491: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     494: dup
     495: ldc           #134                // String SOURCE_POSITION_PARAGRAPH_LINES
     497: iconst_0
     498: invokestatic  #83                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     501: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     504: putstatic     #135                // Field SOURCE_POSITION_PARAGRAPH_LINES:Lcom/vladsch/flexmark/util/options/DataKey;
     507: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     510: dup
     511: ldc           #136                // String TYPE
     513: ldc           #137                // String HTML
     515: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     518: putstatic     #138                // Field TYPE:Lcom/vladsch/flexmark/util/options/DataKey;
     521: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     524: dup
     525: ldc           #139                // String TAG_RANGES
     527: new           #140                // class com/vladsch/flexmark/html/HtmlRenderer$1
     530: dup
     531: invokespecial #141                // Method com/vladsch/flexmark/html/HtmlRenderer$1."<init>":()V
     534: invokespecial #142                // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Lcom/vladsch/flexmark/util/collection/DataValueFactory;)V
     537: putstatic     #143                // Field TAG_RANGES:Lcom/vladsch/flexmark/util/options/DataKey;
     540: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     543: dup
     544: ldc           #144                // String RECHECK_UNDEFINED_REFERENCES
     546: iconst_0
     547: invokestatic  #83                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     550: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     553: putstatic     #145                // Field RECHECK_UNDEFINED_REFERENCES:Lcom/vladsch/flexmark/util/options/DataKey;
     556: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     559: dup
     560: ldc           #146                // String OBFUSCATE_EMAIL
     562: iconst_0
     563: invokestatic  #83                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     566: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     569: putstatic     #147                // Field OBFUSCATE_EMAIL:Lcom/vladsch/flexmark/util/options/DataKey;
     572: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     575: dup
     576: ldc           #148                // String OBFUSCATE_EMAIL_RANDOM
     578: iconst_1
     579: invokestatic  #83                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     582: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     585: putstatic     #149                // Field OBFUSCATE_EMAIL_RANDOM:Lcom/vladsch/flexmark/util/options/DataKey;
     588: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     591: dup
     592: ldc           #150                // String HTML_BLOCK_OPEN_TAG_EOL
     594: iconst_1
     595: invokestatic  #83                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     598: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     601: putstatic     #151                // Field HTML_BLOCK_OPEN_TAG_EOL:Lcom/vladsch/flexmark/util/options/DataKey;
     604: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     607: dup
     608: ldc           #152                // String HTML_BLOCK_CLOSE_TAG_EOL
     610: iconst_1
     611: invokestatic  #83                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     614: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     617: putstatic     #153                // Field HTML_BLOCK_CLOSE_TAG_EOL:Lcom/vladsch/flexmark/util/options/DataKey;
     620: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     623: dup
     624: ldc           #154                // String UNESCAPE_HTML_ENTITIES
     626: iconst_1
     627: invokestatic  #83                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     630: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     633: putstatic     #155                // Field UNESCAPE_HTML_ENTITIES:Lcom/vladsch/flexmark/util/options/DataKey;
     636: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     639: dup
     640: ldc           #156                // String WRAP_TIGHT_ITEM_PARAGRAPH_IN_SPAN
     642: iconst_0
     643: invokestatic  #83                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     646: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     649: putstatic     #157                // Field WRAP_TIGHT_ITEM_PARAGRAPH_IN_SPAN:Lcom/vladsch/flexmark/util/options/DataKey;
     652: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     655: dup
     656: ldc           #158                // String AUTOLINK_WWW_PREFIX
     658: ldc           #159                // String http://
     660: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     663: putstatic     #160                // Field AUTOLINK_WWW_PREFIX:Lcom/vladsch/flexmark/util/options/DataKey;
     666: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     669: dup
     670: ldc           #161                // String FORMAT_FLAGS
     672: iconst_0
     673: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     676: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     679: putstatic     #162                // Field FORMAT_FLAGS:Lcom/vladsch/flexmark/util/options/DataKey;
     682: new           #59                 // class com/vladsch/flexmark/util/options/DataKey
     685: dup
     686: ldc           #163                // String MAX_TRAILING_BLANK_LINES
     688: iconst_1
     689: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     692: invokespecial #62                 // Method com/vladsch/flexmark/util/options/DataKey."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
     695: putstatic     #164                // Field MAX_TRAILING_BLANK_LINES:Lcom/vladsch/flexmark/util/options/DataKey;
     698: return
}
