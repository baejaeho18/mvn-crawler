Compiled from "HeaderIdGenerator.java"
class com.vladsch.flexmark.html.renderer.HeaderIdGenerator$1 extends com.vladsch.flexmark.ast.util.AnchorRefTargetBlockVisitor {
  final java.lang.String val$toDashChars;

  final boolean val$noDupedDashes;

  final boolean val$resolveDupes;

  final java.util.HashMap val$headerBaseIds;

  final com.vladsch.flexmark.html.renderer.HeaderIdGenerator this$0;

  com.vladsch.flexmark.html.renderer.HeaderIdGenerator$1(com.vladsch.flexmark.html.renderer.HeaderIdGenerator, java.lang.String, boolean, boolean, java.util.HashMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/vladsch/flexmark/html/renderer/HeaderIdGenerator;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$toDashChars:Ljava/lang/String;
      10: aload_0
      11: iload_3
      12: putfield      #3                  // Field val$noDupedDashes:Z
      15: aload_0
      16: iload         4
      18: putfield      #4                  // Field val$resolveDupes:Z
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field val$headerBaseIds:Ljava/util/HashMap;
      27: aload_0
      28: invokespecial #6                  // Method com/vladsch/flexmark/ast/util/AnchorRefTargetBlockVisitor."<init>":()V
      31: return

  protected void visit(com.vladsch.flexmark.ast.AnchorRefTarget);
    Code:
       0: aload_1
       1: invokeinterface #7,  1            // InterfaceMethod com/vladsch/flexmark/ast/AnchorRefTarget.getAnchorRefId:()Ljava/lang/String;
       6: invokevirtual #8                  // Method java/lang/String.isEmpty:()Z
       9: ifeq          138
      12: aload_1
      13: invokeinterface #9,  1            // InterfaceMethod com/vladsch/flexmark/ast/AnchorRefTarget.getAnchorRefText:()Ljava/lang/String;
      18: astore_2
      19: aload_2
      20: invokevirtual #8                  // Method java/lang/String.isEmpty:()Z
      23: ifne          138
      26: aload_2
      27: aload_0
      28: getfield      #2                  // Field val$toDashChars:Ljava/lang/String;
      31: aload_0
      32: getfield      #3                  // Field val$noDupedDashes:Z
      35: invokestatic  #10                 // Method com/vladsch/flexmark/html/renderer/HeaderIdGenerator.generateId:(Ljava/lang/CharSequence;Ljava/lang/String;Z)Ljava/lang/String;
      38: astore_3
      39: aload_0
      40: getfield      #4                  // Field val$resolveDupes:Z
      43: ifeq          131
      46: aload_0
      47: getfield      #5                  // Field val$headerBaseIds:Ljava/util/HashMap;
      50: aload_3
      51: invokevirtual #11                 // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      54: ifeq          118
      57: aload_0
      58: getfield      #5                  // Field val$headerBaseIds:Ljava/util/HashMap;
      61: aload_3
      62: invokevirtual #12                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      65: checkcast     #13                 // class java/lang/Integer
      68: invokevirtual #14                 // Method java/lang/Integer.intValue:()I
      71: istore        4
      73: iinc          4, 1
      76: aload_0
      77: getfield      #5                  // Field val$headerBaseIds:Ljava/util/HashMap;
      80: aload_3
      81: iload         4
      83: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      86: invokevirtual #16                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      89: pop
      90: new           #17                 // class java/lang/StringBuilder
      93: dup
      94: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      97: aload_3
      98: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: ldc           #20                 // String -
     103: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: iload         4
     108: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     111: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: astore_3
     115: goto          131
     118: aload_0
     119: getfield      #5                  // Field val$headerBaseIds:Ljava/util/HashMap;
     122: aload_3
     123: iconst_0
     124: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     127: invokevirtual #16                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     130: pop
     131: aload_1
     132: aload_3
     133: invokeinterface #23,  2           // InterfaceMethod com/vladsch/flexmark/ast/AnchorRefTarget.setAnchorRefId:(Ljava/lang/String;)V
     138: return
}
