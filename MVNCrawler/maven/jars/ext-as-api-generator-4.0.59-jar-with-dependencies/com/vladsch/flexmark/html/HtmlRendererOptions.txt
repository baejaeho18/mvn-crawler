Compiled from "HtmlRendererOptions.java"
public class com.vladsch.flexmark.html.HtmlRendererOptions {
  public final java.lang.String softBreak;

  public final boolean isSoftBreakAllSpaces;

  public final java.lang.String hardBreak;

  public final java.lang.String strongEmphasisStyleHtmlOpen;

  public final java.lang.String strongEmphasisStyleHtmlClose;

  public final java.lang.String emphasisStyleHtmlOpen;

  public final java.lang.String emphasisStyleHtmlClose;

  public final java.lang.String codeStyleHtmlOpen;

  public final java.lang.String codeStyleHtmlClose;

  public final boolean escapeHtmlBlocks;

  public final boolean escapeHtmlCommentBlocks;

  public final boolean escapeInlineHtml;

  public final boolean escapeInlineHtmlComments;

  public final boolean percentEncodeUrls;

  public final int indentSize;

  public final boolean suppressHtmlBlocks;

  public final boolean suppressHtmlCommentBlocks;

  public final boolean suppressInlineHtml;

  public final boolean suppressInlineHtmlComments;

  public final boolean doNotRenderLinksInDocument;

  public final boolean renderHeaderId;

  public final boolean generateHeaderIds;

  public final java.lang.String languageClassPrefix;

  public final java.lang.String noLanguageClass;

  public final java.lang.String sourcePositionAttribute;

  public final java.lang.String inlineCodeSpliceClass;

  public final boolean sourcePositionParagraphLines;

  public final boolean sourceWrapHtmlBlocks;

  public final int formatFlags;

  public final int maxTrailingBlankLines;

  public final boolean htmlBlockOpenTagEol;

  public final boolean htmlBlockCloseTagEol;

  public final boolean unescapeHtmlEntities;

  public final boolean wrapTightItemParagraphInSpan;

  public final java.lang.String autolinkWwwPrefix;

  public com.vladsch.flexmark.html.HtmlRendererOptions(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field com/vladsch/flexmark/html/HtmlRenderer.SOFT_BREAK:Lcom/vladsch/flexmark/util/options/DataKey;
       8: aload_1
       9: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      12: checkcast     #4                  // class java/lang/String
      15: putfield      #5                  // Field softBreak:Ljava/lang/String;
      18: aload_0
      19: aload_0
      20: getfield      #5                  // Field softBreak:Ljava/lang/String;
      23: invokestatic  #6                  // Method com/vladsch/flexmark/util/Utils.isWhiteSpaceNoEOL:(Ljava/lang/String;)Z
      26: putfield      #7                  // Field isSoftBreakAllSpaces:Z
      29: aload_0
      30: getstatic     #8                  // Field com/vladsch/flexmark/html/HtmlRenderer.HARD_BREAK:Lcom/vladsch/flexmark/util/options/DataKey;
      33: aload_1
      34: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      37: checkcast     #4                  // class java/lang/String
      40: putfield      #9                  // Field hardBreak:Ljava/lang/String;
      43: aload_0
      44: getstatic     #10                 // Field com/vladsch/flexmark/html/HtmlRenderer.STRONG_EMPHASIS_STYLE_HTML_OPEN:Lcom/vladsch/flexmark/util/options/DataKey;
      47: aload_1
      48: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      51: checkcast     #4                  // class java/lang/String
      54: putfield      #11                 // Field strongEmphasisStyleHtmlOpen:Ljava/lang/String;
      57: aload_0
      58: getstatic     #12                 // Field com/vladsch/flexmark/html/HtmlRenderer.STRONG_EMPHASIS_STYLE_HTML_CLOSE:Lcom/vladsch/flexmark/util/options/DataKey;
      61: aload_1
      62: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      65: checkcast     #4                  // class java/lang/String
      68: putfield      #13                 // Field strongEmphasisStyleHtmlClose:Ljava/lang/String;
      71: aload_0
      72: getstatic     #14                 // Field com/vladsch/flexmark/html/HtmlRenderer.EMPHASIS_STYLE_HTML_OPEN:Lcom/vladsch/flexmark/util/options/DataKey;
      75: aload_1
      76: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      79: checkcast     #4                  // class java/lang/String
      82: putfield      #15                 // Field emphasisStyleHtmlOpen:Ljava/lang/String;
      85: aload_0
      86: getstatic     #16                 // Field com/vladsch/flexmark/html/HtmlRenderer.EMPHASIS_STYLE_HTML_CLOSE:Lcom/vladsch/flexmark/util/options/DataKey;
      89: aload_1
      90: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      93: checkcast     #4                  // class java/lang/String
      96: putfield      #17                 // Field emphasisStyleHtmlClose:Ljava/lang/String;
      99: aload_0
     100: getstatic     #18                 // Field com/vladsch/flexmark/html/HtmlRenderer.CODE_STYLE_HTML_OPEN:Lcom/vladsch/flexmark/util/options/DataKey;
     103: aload_1
     104: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     107: checkcast     #4                  // class java/lang/String
     110: putfield      #19                 // Field codeStyleHtmlOpen:Ljava/lang/String;
     113: aload_0
     114: getstatic     #20                 // Field com/vladsch/flexmark/html/HtmlRenderer.CODE_STYLE_HTML_CLOSE:Lcom/vladsch/flexmark/util/options/DataKey;
     117: aload_1
     118: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     121: checkcast     #4                  // class java/lang/String
     124: putfield      #21                 // Field codeStyleHtmlClose:Ljava/lang/String;
     127: aload_0
     128: getstatic     #22                 // Field com/vladsch/flexmark/html/HtmlRenderer.ESCAPE_HTML_BLOCKS:Lcom/vladsch/flexmark/util/options/DataKey;
     131: aload_1
     132: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     135: checkcast     #23                 // class java/lang/Boolean
     138: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
     141: putfield      #25                 // Field escapeHtmlBlocks:Z
     144: aload_0
     145: getstatic     #26                 // Field com/vladsch/flexmark/html/HtmlRenderer.ESCAPE_HTML_COMMENT_BLOCKS:Lcom/vladsch/flexmark/util/options/DataKey;
     148: aload_1
     149: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     152: checkcast     #23                 // class java/lang/Boolean
     155: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
     158: putfield      #27                 // Field escapeHtmlCommentBlocks:Z
     161: aload_0
     162: getstatic     #28                 // Field com/vladsch/flexmark/html/HtmlRenderer.ESCAPE_INLINE_HTML:Lcom/vladsch/flexmark/util/options/DataKey;
     165: aload_1
     166: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     169: checkcast     #23                 // class java/lang/Boolean
     172: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
     175: putfield      #29                 // Field escapeInlineHtml:Z
     178: aload_0
     179: getstatic     #30                 // Field com/vladsch/flexmark/html/HtmlRenderer.ESCAPE_INLINE_HTML_COMMENTS:Lcom/vladsch/flexmark/util/options/DataKey;
     182: aload_1
     183: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     186: checkcast     #23                 // class java/lang/Boolean
     189: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
     192: putfield      #31                 // Field escapeInlineHtmlComments:Z
     195: aload_0
     196: getstatic     #32                 // Field com/vladsch/flexmark/html/HtmlRenderer.PERCENT_ENCODE_URLS:Lcom/vladsch/flexmark/util/options/DataKey;
     199: aload_1
     200: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     203: checkcast     #23                 // class java/lang/Boolean
     206: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
     209: putfield      #33                 // Field percentEncodeUrls:Z
     212: aload_0
     213: getstatic     #34                 // Field com/vladsch/flexmark/html/HtmlRenderer.INDENT_SIZE:Lcom/vladsch/flexmark/util/options/DataKey;
     216: aload_1
     217: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     220: checkcast     #35                 // class java/lang/Integer
     223: invokevirtual #36                 // Method java/lang/Integer.intValue:()I
     226: putfield      #37                 // Field indentSize:I
     229: aload_0
     230: getstatic     #38                 // Field com/vladsch/flexmark/html/HtmlRenderer.SUPPRESS_HTML_BLOCKS:Lcom/vladsch/flexmark/util/options/DataKey;
     233: aload_1
     234: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     237: checkcast     #23                 // class java/lang/Boolean
     240: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
     243: putfield      #39                 // Field suppressHtmlBlocks:Z
     246: aload_0
     247: getstatic     #40                 // Field com/vladsch/flexmark/html/HtmlRenderer.SUPPRESS_HTML_COMMENT_BLOCKS:Lcom/vladsch/flexmark/util/options/DataKey;
     250: aload_1
     251: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     254: checkcast     #23                 // class java/lang/Boolean
     257: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
     260: putfield      #41                 // Field suppressHtmlCommentBlocks:Z
     263: aload_0
     264: getstatic     #42                 // Field com/vladsch/flexmark/html/HtmlRenderer.SUPPRESS_INLINE_HTML:Lcom/vladsch/flexmark/util/options/DataKey;
     267: aload_1
     268: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     271: checkcast     #23                 // class java/lang/Boolean
     274: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
     277: putfield      #43                 // Field suppressInlineHtml:Z
     280: aload_0
     281: getstatic     #44                 // Field com/vladsch/flexmark/html/HtmlRenderer.SUPPRESS_INLINE_HTML_COMMENTS:Lcom/vladsch/flexmark/util/options/DataKey;
     284: aload_1
     285: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     288: checkcast     #23                 // class java/lang/Boolean
     291: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
     294: putfield      #45                 // Field suppressInlineHtmlComments:Z
     297: aload_0
     298: getstatic     #46                 // Field com/vladsch/flexmark/html/HtmlRenderer.DO_NOT_RENDER_LINKS:Lcom/vladsch/flexmark/util/options/DataKey;
     301: aload_1
     302: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     305: checkcast     #23                 // class java/lang/Boolean
     308: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
     311: putfield      #47                 // Field doNotRenderLinksInDocument:Z
     314: aload_0
     315: getstatic     #48                 // Field com/vladsch/flexmark/html/HtmlRenderer.RENDER_HEADER_ID:Lcom/vladsch/flexmark/util/options/DataKey;
     318: aload_1
     319: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     322: checkcast     #23                 // class java/lang/Boolean
     325: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
     328: putfield      #49                 // Field renderHeaderId:Z
     331: aload_0
     332: getstatic     #50                 // Field com/vladsch/flexmark/html/HtmlRenderer.GENERATE_HEADER_ID:Lcom/vladsch/flexmark/util/options/DataKey;
     335: aload_1
     336: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     339: checkcast     #23                 // class java/lang/Boolean
     342: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
     345: putfield      #51                 // Field generateHeaderIds:Z
     348: aload_0
     349: getstatic     #52                 // Field com/vladsch/flexmark/html/HtmlRenderer.FENCED_CODE_LANGUAGE_CLASS_PREFIX:Lcom/vladsch/flexmark/util/options/DataKey;
     352: aload_1
     353: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     356: checkcast     #4                  // class java/lang/String
     359: putfield      #53                 // Field languageClassPrefix:Ljava/lang/String;
     362: aload_0
     363: getstatic     #54                 // Field com/vladsch/flexmark/html/HtmlRenderer.FENCED_CODE_NO_LANGUAGE_CLASS:Lcom/vladsch/flexmark/util/options/DataKey;
     366: aload_1
     367: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     370: checkcast     #4                  // class java/lang/String
     373: putfield      #55                 // Field noLanguageClass:Ljava/lang/String;
     376: aload_0
     377: getstatic     #56                 // Field com/vladsch/flexmark/html/HtmlRenderer.SOURCE_POSITION_ATTRIBUTE:Lcom/vladsch/flexmark/util/options/DataKey;
     380: aload_1
     381: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     384: checkcast     #4                  // class java/lang/String
     387: putfield      #57                 // Field sourcePositionAttribute:Ljava/lang/String;
     390: aload_0
     391: aload_0
     392: getfield      #57                 // Field sourcePositionAttribute:Ljava/lang/String;
     395: invokevirtual #58                 // Method java/lang/String.isEmpty:()Z
     398: ifne          421
     401: getstatic     #59                 // Field com/vladsch/flexmark/html/HtmlRenderer.SOURCE_POSITION_PARAGRAPH_LINES:Lcom/vladsch/flexmark/util/options/DataKey;
     404: aload_1
     405: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     408: checkcast     #23                 // class java/lang/Boolean
     411: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
     414: ifeq          421
     417: iconst_1
     418: goto          422
     421: iconst_0
     422: putfield      #60                 // Field sourcePositionParagraphLines:Z
     425: aload_0
     426: aload_0
     427: getfield      #57                 // Field sourcePositionAttribute:Ljava/lang/String;
     430: invokevirtual #58                 // Method java/lang/String.isEmpty:()Z
     433: ifne          456
     436: getstatic     #61                 // Field com/vladsch/flexmark/html/HtmlRenderer.SOURCE_WRAP_HTML_BLOCKS:Lcom/vladsch/flexmark/util/options/DataKey;
     439: aload_1
     440: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     443: checkcast     #23                 // class java/lang/Boolean
     446: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
     449: ifeq          456
     452: iconst_1
     453: goto          457
     456: iconst_0
     457: putfield      #62                 // Field sourceWrapHtmlBlocks:Z
     460: aload_0
     461: getstatic     #63                 // Field com/vladsch/flexmark/html/HtmlRenderer.FORMAT_FLAGS:Lcom/vladsch/flexmark/util/options/DataKey;
     464: aload_1
     465: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     468: checkcast     #35                 // class java/lang/Integer
     471: invokevirtual #36                 // Method java/lang/Integer.intValue:()I
     474: putfield      #64                 // Field formatFlags:I
     477: aload_0
     478: getstatic     #65                 // Field com/vladsch/flexmark/html/HtmlRenderer.MAX_TRAILING_BLANK_LINES:Lcom/vladsch/flexmark/util/options/DataKey;
     481: aload_1
     482: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     485: checkcast     #35                 // class java/lang/Integer
     488: invokevirtual #36                 // Method java/lang/Integer.intValue:()I
     491: putfield      #66                 // Field maxTrailingBlankLines:I
     494: aload_0
     495: getstatic     #67                 // Field com/vladsch/flexmark/html/HtmlRenderer.HTML_BLOCK_OPEN_TAG_EOL:Lcom/vladsch/flexmark/util/options/DataKey;
     498: aload_1
     499: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     502: checkcast     #23                 // class java/lang/Boolean
     505: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
     508: putfield      #68                 // Field htmlBlockOpenTagEol:Z
     511: aload_0
     512: getstatic     #69                 // Field com/vladsch/flexmark/html/HtmlRenderer.HTML_BLOCK_CLOSE_TAG_EOL:Lcom/vladsch/flexmark/util/options/DataKey;
     515: aload_1
     516: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     519: checkcast     #23                 // class java/lang/Boolean
     522: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
     525: putfield      #70                 // Field htmlBlockCloseTagEol:Z
     528: aload_0
     529: getstatic     #71                 // Field com/vladsch/flexmark/html/HtmlRenderer.UNESCAPE_HTML_ENTITIES:Lcom/vladsch/flexmark/util/options/DataKey;
     532: aload_1
     533: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     536: checkcast     #23                 // class java/lang/Boolean
     539: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
     542: putfield      #72                 // Field unescapeHtmlEntities:Z
     545: aload_0
     546: getstatic     #73                 // Field com/vladsch/flexmark/html/HtmlRenderer.INLINE_CODE_SPLICE_CLASS:Lcom/vladsch/flexmark/util/options/DataKey;
     549: aload_1
     550: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     553: checkcast     #4                  // class java/lang/String
     556: putfield      #74                 // Field inlineCodeSpliceClass:Ljava/lang/String;
     559: aload_0
     560: getstatic     #75                 // Field com/vladsch/flexmark/html/HtmlRenderer.AUTOLINK_WWW_PREFIX:Lcom/vladsch/flexmark/util/options/DataKey;
     563: aload_1
     564: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     567: checkcast     #4                  // class java/lang/String
     570: putfield      #76                 // Field autolinkWwwPrefix:Ljava/lang/String;
     573: aload_0
     574: getstatic     #77                 // Field com/vladsch/flexmark/html/HtmlRenderer.WRAP_TIGHT_ITEM_PARAGRAPH_IN_SPAN:Lcom/vladsch/flexmark/util/options/DataKey;
     577: aload_1
     578: invokevirtual #3                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     581: checkcast     #23                 // class java/lang/Boolean
     584: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
     587: putfield      #78                 // Field wrapTightItemParagraphInSpan:Z
     590: return
}
