Compiled from "HtmlRenderer.java"
public class com.vladsch.flexmark.html.HtmlRenderer$Builder extends com.vladsch.flexmark.util.options.MutableDataSet {
  java.util.List<com.vladsch.flexmark.html.AttributeProviderFactory> attributeProviderFactories;

  java.util.List<com.vladsch.flexmark.html.renderer.NodeRendererFactory> nodeRendererFactories;

  java.util.List<com.vladsch.flexmark.html.LinkResolverFactory> linkResolverFactories;

  private final java.util.HashSet<com.vladsch.flexmark.html.HtmlRenderer$HtmlRendererExtension> loadedExtensions;

  com.vladsch.flexmark.html.renderer.HeaderIdGeneratorFactory htmlIdGeneratorFactory;

  public com.vladsch.flexmark.html.HtmlRenderer$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/vladsch/flexmark/util/options/MutableDataSet."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field attributeProviderFactories:Ljava/util/List;
      15: aload_0
      16: new           #2                  // class java/util/ArrayList
      19: dup
      20: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #5                  // Field nodeRendererFactories:Ljava/util/List;
      26: aload_0
      27: new           #2                  // class java/util/ArrayList
      30: dup
      31: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      34: putfield      #6                  // Field linkResolverFactories:Ljava/util/List;
      37: aload_0
      38: new           #7                  // class java/util/HashSet
      41: dup
      42: invokespecial #8                  // Method java/util/HashSet."<init>":()V
      45: putfield      #9                  // Field loadedExtensions:Ljava/util/HashSet;
      48: aload_0
      49: aconst_null
      50: putfield      #10                 // Field htmlIdGeneratorFactory:Lcom/vladsch/flexmark/html/renderer/HeaderIdGeneratorFactory;
      53: return

  public com.vladsch.flexmark.html.HtmlRenderer$Builder(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method com/vladsch/flexmark/util/options/MutableDataSet."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
       5: aload_0
       6: new           #2                  // class java/util/ArrayList
       9: dup
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      13: putfield      #4                  // Field attributeProviderFactories:Ljava/util/List;
      16: aload_0
      17: new           #2                  // class java/util/ArrayList
      20: dup
      21: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      24: putfield      #5                  // Field nodeRendererFactories:Ljava/util/List;
      27: aload_0
      28: new           #2                  // class java/util/ArrayList
      31: dup
      32: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      35: putfield      #6                  // Field linkResolverFactories:Ljava/util/List;
      38: aload_0
      39: new           #7                  // class java/util/HashSet
      42: dup
      43: invokespecial #8                  // Method java/util/HashSet."<init>":()V
      46: putfield      #9                  // Field loadedExtensions:Ljava/util/HashSet;
      49: aload_0
      50: aconst_null
      51: putfield      #10                 // Field htmlIdGeneratorFactory:Lcom/vladsch/flexmark/html/renderer/HeaderIdGeneratorFactory;
      54: aload_1
      55: getstatic     #12                 // Field com/vladsch/flexmark/parser/Parser.EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
      58: invokeinterface #13,  2           // InterfaceMethod com/vladsch/flexmark/util/options/DataHolder.contains:(Lcom/vladsch/flexmark/util/options/DataKey;)Z
      63: ifeq          81
      66: aload_0
      67: aload_0
      68: getstatic     #12                 // Field com/vladsch/flexmark/parser/Parser.EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
      71: invokevirtual #14                 // Method get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
      74: checkcast     #15                 // class java/lang/Iterable
      77: invokevirtual #16                 // Method extensions:(Ljava/lang/Iterable;)Lcom/vladsch/flexmark/html/HtmlRenderer$Builder;
      80: pop
      81: return

  public com.vladsch.flexmark.html.HtmlRenderer$Builder(com.vladsch.flexmark.html.HtmlRenderer$Builder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method com/vladsch/flexmark/util/options/MutableDataSet."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
       5: aload_0
       6: new           #2                  // class java/util/ArrayList
       9: dup
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      13: putfield      #4                  // Field attributeProviderFactories:Ljava/util/List;
      16: aload_0
      17: new           #2                  // class java/util/ArrayList
      20: dup
      21: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      24: putfield      #5                  // Field nodeRendererFactories:Ljava/util/List;
      27: aload_0
      28: new           #2                  // class java/util/ArrayList
      31: dup
      32: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      35: putfield      #6                  // Field linkResolverFactories:Ljava/util/List;
      38: aload_0
      39: new           #7                  // class java/util/HashSet
      42: dup
      43: invokespecial #8                  // Method java/util/HashSet."<init>":()V
      46: putfield      #9                  // Field loadedExtensions:Ljava/util/HashSet;
      49: aload_0
      50: aconst_null
      51: putfield      #10                 // Field htmlIdGeneratorFactory:Lcom/vladsch/flexmark/html/renderer/HeaderIdGeneratorFactory;
      54: aload_0
      55: getfield      #4                  // Field attributeProviderFactories:Ljava/util/List;
      58: aload_1
      59: getfield      #4                  // Field attributeProviderFactories:Ljava/util/List;
      62: invokeinterface #17,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      67: pop
      68: aload_0
      69: getfield      #5                  // Field nodeRendererFactories:Ljava/util/List;
      72: aload_1
      73: getfield      #5                  // Field nodeRendererFactories:Ljava/util/List;
      76: invokeinterface #17,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      81: pop
      82: aload_0
      83: getfield      #6                  // Field linkResolverFactories:Ljava/util/List;
      86: aload_1
      87: getfield      #6                  // Field linkResolverFactories:Ljava/util/List;
      90: invokeinterface #17,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      95: pop
      96: aload_0
      97: getfield      #9                  // Field loadedExtensions:Ljava/util/HashSet;
     100: aload_1
     101: getfield      #9                  // Field loadedExtensions:Ljava/util/HashSet;
     104: invokevirtual #18                 // Method java/util/HashSet.addAll:(Ljava/util/Collection;)Z
     107: pop
     108: aload_0
     109: aload_1
     110: getfield      #10                 // Field htmlIdGeneratorFactory:Lcom/vladsch/flexmark/html/renderer/HeaderIdGeneratorFactory;
     113: putfield      #10                 // Field htmlIdGeneratorFactory:Lcom/vladsch/flexmark/html/renderer/HeaderIdGeneratorFactory;
     116: return

  public com.vladsch.flexmark.html.HtmlRenderer$Builder(com.vladsch.flexmark.html.HtmlRenderer$Builder, com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method com/vladsch/flexmark/util/options/MutableDataSet."<init>":(Lcom/vladsch/flexmark/util/options/DataHolder;)V
       5: aload_0
       6: new           #2                  // class java/util/ArrayList
       9: dup
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      13: putfield      #4                  // Field attributeProviderFactories:Ljava/util/List;
      16: aload_0
      17: new           #2                  // class java/util/ArrayList
      20: dup
      21: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      24: putfield      #5                  // Field nodeRendererFactories:Ljava/util/List;
      27: aload_0
      28: new           #2                  // class java/util/ArrayList
      31: dup
      32: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      35: putfield      #6                  // Field linkResolverFactories:Ljava/util/List;
      38: aload_0
      39: new           #7                  // class java/util/HashSet
      42: dup
      43: invokespecial #8                  // Method java/util/HashSet."<init>":()V
      46: putfield      #9                  // Field loadedExtensions:Ljava/util/HashSet;
      49: aload_0
      50: aconst_null
      51: putfield      #10                 // Field htmlIdGeneratorFactory:Lcom/vladsch/flexmark/html/renderer/HeaderIdGeneratorFactory;
      54: new           #2                  // class java/util/ArrayList
      57: dup
      58: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      61: astore_3
      62: new           #7                  // class java/util/HashSet
      65: dup
      66: invokespecial #8                  // Method java/util/HashSet."<init>":()V
      69: astore        4
      71: aload_0
      72: getstatic     #12                 // Field com/vladsch/flexmark/parser/Parser.EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
      75: invokevirtual #14                 // Method get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
      78: checkcast     #15                 // class java/lang/Iterable
      81: invokeinterface #19,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      86: astore        5
      88: aload         5
      90: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      95: ifeq          133
      98: aload         5
     100: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     105: checkcast     #22                 // class com/vladsch/flexmark/Extension
     108: astore        6
     110: aload_3
     111: aload         6
     113: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     118: pop
     119: aload         4
     121: aload         6
     123: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     126: invokevirtual #25                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
     129: pop
     130: goto          88
     133: aload_2
     134: ifnull        267
     137: aload_2
     138: invokeinterface #26,  1           // InterfaceMethod com/vladsch/flexmark/util/options/DataHolder.keySet:()Ljava/util/Collection;
     143: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     148: astore        5
     150: aload         5
     152: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     157: ifeq          267
     160: aload         5
     162: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     167: checkcast     #28                 // class com/vladsch/flexmark/util/options/DataKey
     170: astore        6
     172: aload         6
     174: getstatic     #12                 // Field com/vladsch/flexmark/parser/Parser.EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
     177: if_acmpne     249
     180: aload_2
     181: getstatic     #12                 // Field com/vladsch/flexmark/parser/Parser.EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
     184: invokeinterface #29,  2           // InterfaceMethod com/vladsch/flexmark/util/options/DataHolder.get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
     189: checkcast     #15                 // class java/lang/Iterable
     192: invokeinterface #19,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     197: astore        7
     199: aload         7
     201: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     206: ifeq          246
     209: aload         7
     211: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     216: checkcast     #22                 // class com/vladsch/flexmark/Extension
     219: astore        8
     221: aload         4
     223: aload         8
     225: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     228: invokevirtual #30                 // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
     231: ifne          243
     234: aload_3
     235: aload         8
     237: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     242: pop
     243: goto          199
     246: goto          264
     249: aload_0
     250: aload         6
     252: aload_2
     253: aload         6
     255: invokeinterface #29,  2           // InterfaceMethod com/vladsch/flexmark/util/options/DataHolder.get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
     260: invokevirtual #31                 // Method set:(Lcom/vladsch/flexmark/util/options/DataKey;Ljava/lang/Object;)Lcom/vladsch/flexmark/util/options/MutableDataSet;
     263: pop
     264: goto          150
     267: aload_0
     268: getstatic     #12                 // Field com/vladsch/flexmark/parser/Parser.EXTENSIONS:Lcom/vladsch/flexmark/util/options/DataKey;
     271: aload_3
     272: invokevirtual #31                 // Method set:(Lcom/vladsch/flexmark/util/options/DataKey;Ljava/lang/Object;)Lcom/vladsch/flexmark/util/options/MutableDataSet;
     275: pop
     276: aload_0
     277: aload_3
     278: invokevirtual #16                 // Method extensions:(Ljava/lang/Iterable;)Lcom/vladsch/flexmark/html/HtmlRenderer$Builder;
     281: pop
     282: return

  public com.vladsch.flexmark.html.HtmlRenderer build();
    Code:
       0: new           #32                 // class com/vladsch/flexmark/html/HtmlRenderer
       3: dup
       4: aload_0
       5: invokespecial #33                 // Method com/vladsch/flexmark/html/HtmlRenderer."<init>":(Lcom/vladsch/flexmark/html/HtmlRenderer$Builder;)V
       8: areturn

  public com.vladsch.flexmark.html.HtmlRenderer$Builder softBreak(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #34                 // Field com/vladsch/flexmark/html/HtmlRenderer.SOFT_BREAK:Lcom/vladsch/flexmark/util/options/DataKey;
       4: aload_1
       5: invokevirtual #31                 // Method set:(Lcom/vladsch/flexmark/util/options/DataKey;Ljava/lang/Object;)Lcom/vladsch/flexmark/util/options/MutableDataSet;
       8: pop
       9: aload_0
      10: areturn

  public com.vladsch.flexmark.html.HtmlRenderer$Builder indentSize(int);
    Code:
       0: aload_0
       1: getstatic     #35                 // Field com/vladsch/flexmark/html/HtmlRenderer.INDENT_SIZE:Lcom/vladsch/flexmark/util/options/DataKey;
       4: iload_1
       5: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokevirtual #31                 // Method set:(Lcom/vladsch/flexmark/util/options/DataKey;Ljava/lang/Object;)Lcom/vladsch/flexmark/util/options/MutableDataSet;
      11: pop
      12: aload_0
      13: areturn

  public com.vladsch.flexmark.html.HtmlRenderer$Builder escapeHtml(boolean);
    Code:
       0: aload_0
       1: getstatic     #37                 // Field com/vladsch/flexmark/html/HtmlRenderer.ESCAPE_HTML:Lcom/vladsch/flexmark/util/options/DataKey;
       4: iload_1
       5: invokestatic  #38                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       8: invokevirtual #31                 // Method set:(Lcom/vladsch/flexmark/util/options/DataKey;Ljava/lang/Object;)Lcom/vladsch/flexmark/util/options/MutableDataSet;
      11: pop
      12: aload_0
      13: areturn

  public com.vladsch.flexmark.html.HtmlRenderer$Builder percentEncodeUrls(boolean);
    Code:
       0: aload_0
       1: getstatic     #39                 // Field com/vladsch/flexmark/html/HtmlRenderer.PERCENT_ENCODE_URLS:Lcom/vladsch/flexmark/util/options/DataKey;
       4: iload_1
       5: invokestatic  #38                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       8: invokevirtual #31                 // Method set:(Lcom/vladsch/flexmark/util/options/DataKey;Ljava/lang/Object;)Lcom/vladsch/flexmark/util/options/MutableDataSet;
      11: pop
      12: aload_0
      13: areturn

  public com.vladsch.flexmark.html.HtmlRenderer$Builder attributeProviderFactory(com.vladsch.flexmark.html.AttributeProviderFactory);
    Code:
       0: aload_0
       1: getfield      #4                  // Field attributeProviderFactories:Ljava/util/List;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public com.vladsch.flexmark.html.HtmlRenderer$Builder nodeRendererFactory(com.vladsch.flexmark.html.renderer.NodeRendererFactory);
    Code:
       0: aload_0
       1: getfield      #5                  // Field nodeRendererFactories:Ljava/util/List;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public com.vladsch.flexmark.html.HtmlRenderer$Builder linkResolverFactory(com.vladsch.flexmark.html.LinkResolverFactory);
    Code:
       0: aload_0
       1: getfield      #6                  // Field linkResolverFactories:Ljava/util/List;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public com.vladsch.flexmark.html.HtmlRenderer$Builder htmlIdGeneratorFactory(com.vladsch.flexmark.html.renderer.HeaderIdGeneratorFactory);
    Code:
       0: aload_0
       1: getfield      #10                 // Field htmlIdGeneratorFactory:Lcom/vladsch/flexmark/html/renderer/HeaderIdGeneratorFactory;
       4: ifnull        40
       7: new           #40                 // class java/lang/IllegalStateException
      10: dup
      11: new           #41                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #43                 // String custom header id factory is already set to
      20: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #45                 // Method java/lang/Class.getName:()Ljava/lang/String;
      30: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #47                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: aload_1
      42: putfield      #10                 // Field htmlIdGeneratorFactory:Lcom/vladsch/flexmark/html/renderer/HeaderIdGeneratorFactory;
      45: aload_0
      46: areturn

  public com.vladsch.flexmark.html.HtmlRenderer$Builder extensions(java.lang.Iterable<? extends com.vladsch.flexmark.Extension>);
    Code:
       0: aload_1
       1: invokeinterface #19,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          61
      16: aload_2
      17: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #22                 // class com/vladsch/flexmark/Extension
      25: astore_3
      26: aload_3
      27: instanceof    #48                 // class com/vladsch/flexmark/html/HtmlRenderer$HtmlRendererExtension
      30: ifeq          58
      33: aload_0
      34: getfield      #9                  // Field loadedExtensions:Ljava/util/HashSet;
      37: aload_3
      38: invokevirtual #30                 // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
      41: ifne          58
      44: aload_3
      45: checkcast     #48                 // class com/vladsch/flexmark/html/HtmlRenderer$HtmlRendererExtension
      48: astore        4
      50: aload         4
      52: aload_0
      53: invokeinterface #49,  2           // InterfaceMethod com/vladsch/flexmark/html/HtmlRenderer$HtmlRendererExtension.rendererOptions:(Lcom/vladsch/flexmark/util/options/MutableDataHolder;)V
      58: goto          7
      61: aload_1
      62: invokeinterface #19,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      67: astore_2
      68: aload_2
      69: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      74: ifeq          142
      77: aload_2
      78: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      83: checkcast     #22                 // class com/vladsch/flexmark/Extension
      86: astore_3
      87: aload_3
      88: instanceof    #48                 // class com/vladsch/flexmark/html/HtmlRenderer$HtmlRendererExtension
      91: ifeq          139
      94: aload_0
      95: getfield      #9                  // Field loadedExtensions:Ljava/util/HashSet;
      98: aload_3
      99: invokevirtual #30                 // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
     102: ifne          139
     105: aload_3
     106: checkcast     #48                 // class com/vladsch/flexmark/html/HtmlRenderer$HtmlRendererExtension
     109: astore        4
     111: aload         4
     113: aload_0
     114: aload_0
     115: getstatic     #50                 // Field com/vladsch/flexmark/html/HtmlRenderer.TYPE:Lcom/vladsch/flexmark/util/options/DataKey;
     118: invokevirtual #14                 // Method get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
     121: checkcast     #51                 // class java/lang/String
     124: invokeinterface #52,  3           // InterfaceMethod com/vladsch/flexmark/html/HtmlRenderer$HtmlRendererExtension.extend:(Lcom/vladsch/flexmark/html/HtmlRenderer$Builder;Ljava/lang/String;)V
     129: aload_0
     130: getfield      #9                  // Field loadedExtensions:Ljava/util/HashSet;
     133: aload         4
     135: invokevirtual #25                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
     138: pop
     139: goto          68
     142: aload_0
     143: areturn
}
