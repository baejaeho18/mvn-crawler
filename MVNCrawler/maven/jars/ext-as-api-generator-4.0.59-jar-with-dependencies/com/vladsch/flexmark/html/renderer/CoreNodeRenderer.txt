Compiled from "CoreNodeRenderer.java"
public class com.vladsch.flexmark.html.renderer.CoreNodeRenderer implements com.vladsch.flexmark.html.renderer.NodeRenderer {
  public static final com.vladsch.flexmark.html.renderer.AttributablePart LOOSE_LIST_ITEM;

  public static final com.vladsch.flexmark.html.renderer.AttributablePart TIGHT_LIST_ITEM;

  public static final com.vladsch.flexmark.html.renderer.AttributablePart PARAGRAPH_LINE;

  public static final com.vladsch.flexmark.html.renderer.AttributablePart CODE_CONTENT;

  private final com.vladsch.flexmark.parser.ListOptions listOptions;

  private final boolean obfuscateEmail;

  private final boolean obfuscateEmailRandom;

  private final com.vladsch.flexmark.ast.util.ReferenceRepository referenceRepository;

  private final boolean recheckUndefinedReferences;

  private final boolean codeContentBlock;

  private final boolean codeSoftLineBreaks;

  private java.util.List<com.vladsch.flexmark.util.sequence.Range> myLines;

  private java.util.List<java.lang.Integer> myEOLs;

  private int myNextLine;

  private int nextLineStartOffset;

  static final boolean $assertionsDisabled;

  public com.vladsch.flexmark.html.renderer.CoreNodeRenderer(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: invokespecial #35                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getstatic     #36                 // Field com/vladsch/flexmark/parser/Parser.REFERENCES:Lcom/vladsch/flexmark/util/options/DataKey;
       9: invokeinterface #37,  2           // InterfaceMethod com/vladsch/flexmark/util/options/DataHolder.get:(Lcom/vladsch/flexmark/util/options/DataKey;)Ljava/lang/Object;
      14: checkcast     #38                 // class com/vladsch/flexmark/ast/util/ReferenceRepository
      17: putfield      #39                 // Field referenceRepository:Lcom/vladsch/flexmark/ast/util/ReferenceRepository;
      20: aload_0
      21: aload_1
      22: invokestatic  #40                 // Method com/vladsch/flexmark/parser/ListOptions.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Lcom/vladsch/flexmark/parser/ListOptions;
      25: putfield      #41                 // Field listOptions:Lcom/vladsch/flexmark/parser/ListOptions;
      28: aload_0
      29: getstatic     #42                 // Field com/vladsch/flexmark/html/HtmlRenderer.RECHECK_UNDEFINED_REFERENCES:Lcom/vladsch/flexmark/util/options/DataKey;
      32: aload_1
      33: invokevirtual #43                 // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      36: checkcast     #44                 // class java/lang/Boolean
      39: invokevirtual #45                 // Method java/lang/Boolean.booleanValue:()Z
      42: putfield      #46                 // Field recheckUndefinedReferences:Z
      45: aload_0
      46: getstatic     #47                 // Field com/vladsch/flexmark/html/HtmlRenderer.OBFUSCATE_EMAIL:Lcom/vladsch/flexmark/util/options/DataKey;
      49: aload_1
      50: invokevirtual #43                 // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      53: checkcast     #44                 // class java/lang/Boolean
      56: invokevirtual #45                 // Method java/lang/Boolean.booleanValue:()Z
      59: putfield      #48                 // Field obfuscateEmail:Z
      62: aload_0
      63: getstatic     #49                 // Field com/vladsch/flexmark/html/HtmlRenderer.OBFUSCATE_EMAIL_RANDOM:Lcom/vladsch/flexmark/util/options/DataKey;
      66: aload_1
      67: invokevirtual #43                 // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      70: checkcast     #44                 // class java/lang/Boolean
      73: invokevirtual #45                 // Method java/lang/Boolean.booleanValue:()Z
      76: putfield      #50                 // Field obfuscateEmailRandom:Z
      79: aload_0
      80: getstatic     #51                 // Field com/vladsch/flexmark/parser/Parser.FENCED_CODE_CONTENT_BLOCK:Lcom/vladsch/flexmark/util/options/DataKey;
      83: aload_1
      84: invokevirtual #43                 // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      87: checkcast     #44                 // class java/lang/Boolean
      90: invokevirtual #45                 // Method java/lang/Boolean.booleanValue:()Z
      93: putfield      #52                 // Field codeContentBlock:Z
      96: aload_0
      97: getstatic     #53                 // Field com/vladsch/flexmark/parser/Parser.CODE_SOFT_LINE_BREAKS:Lcom/vladsch/flexmark/util/options/DataKey;
     100: aload_1
     101: invokevirtual #43                 // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
     104: checkcast     #44                 // class java/lang/Boolean
     107: invokevirtual #45                 // Method java/lang/Boolean.booleanValue:()Z
     110: putfield      #54                 // Field codeSoftLineBreaks:Z
     113: aload_0
     114: aconst_null
     115: putfield      #55                 // Field myLines:Ljava/util/List;
     118: aload_0
     119: aconst_null
     120: putfield      #56                 // Field myEOLs:Ljava/util/List;
     123: aload_0
     124: iconst_0
     125: putfield      #57                 // Field myNextLine:I
     128: aload_0
     129: iconst_0
     130: putfield      #58                 // Field nextLineStartOffset:I
     133: return

  public java.util.Set<com.vladsch.flexmark.html.renderer.NodeRenderingHandler<?>> getNodeRenderingHandlers();
    Code:
       0: new           #59                 // class java/util/HashSet
       3: dup
       4: bipush        33
       6: anewarray     #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
       9: dup
      10: iconst_0
      11: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
      14: dup
      15: ldc           #61                 // class com/vladsch/flexmark/ast/AutoLink
      17: new           #62                 // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$1
      20: dup
      21: aload_0
      22: invokespecial #63                 // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$1."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
      25: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
      28: aastore
      29: dup
      30: iconst_1
      31: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
      34: dup
      35: ldc           #65                 // class com/vladsch/flexmark/ast/BlockQuote
      37: new           #66                 // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$2
      40: dup
      41: aload_0
      42: invokespecial #67                 // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$2."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
      45: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
      48: aastore
      49: dup
      50: iconst_2
      51: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
      54: dup
      55: ldc           #68                 // class com/vladsch/flexmark/ast/BulletList
      57: new           #69                 // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$3
      60: dup
      61: aload_0
      62: invokespecial #70                 // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$3."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
      65: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
      68: aastore
      69: dup
      70: iconst_3
      71: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
      74: dup
      75: ldc           #71                 // class com/vladsch/flexmark/ast/Code
      77: new           #72                 // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$4
      80: dup
      81: aload_0
      82: invokespecial #73                 // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$4."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
      85: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
      88: aastore
      89: dup
      90: iconst_4
      91: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
      94: dup
      95: ldc           #74                 // class com/vladsch/flexmark/ast/CodeBlock
      97: new           #75                 // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$5
     100: dup
     101: aload_0
     102: invokespecial #76                 // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$5."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     105: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     108: aastore
     109: dup
     110: iconst_5
     111: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     114: dup
     115: ldc           #77                 // class com/vladsch/flexmark/ast/Document
     117: new           #78                 // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$6
     120: dup
     121: aload_0
     122: invokespecial #79                 // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$6."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     125: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     128: aastore
     129: dup
     130: bipush        6
     132: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     135: dup
     136: ldc           #80                 // class com/vladsch/flexmark/ast/Emphasis
     138: new           #81                 // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$7
     141: dup
     142: aload_0
     143: invokespecial #82                 // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$7."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     146: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     149: aastore
     150: dup
     151: bipush        7
     153: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     156: dup
     157: ldc           #83                 // class com/vladsch/flexmark/ast/FencedCodeBlock
     159: new           #84                 // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$8
     162: dup
     163: aload_0
     164: invokespecial #85                 // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$8."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     167: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     170: aastore
     171: dup
     172: bipush        8
     174: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     177: dup
     178: ldc           #86                 // class com/vladsch/flexmark/ast/HardLineBreak
     180: new           #87                 // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$9
     183: dup
     184: aload_0
     185: invokespecial #88                 // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$9."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     188: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     191: aastore
     192: dup
     193: bipush        9
     195: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     198: dup
     199: ldc           #89                 // class com/vladsch/flexmark/ast/Heading
     201: new           #90                 // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$10
     204: dup
     205: aload_0
     206: invokespecial #91                 // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$10."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     209: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     212: aastore
     213: dup
     214: bipush        10
     216: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     219: dup
     220: ldc           #92                 // class com/vladsch/flexmark/ast/HtmlBlock
     222: new           #93                 // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$11
     225: dup
     226: aload_0
     227: invokespecial #94                 // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$11."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     230: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     233: aastore
     234: dup
     235: bipush        11
     237: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     240: dup
     241: ldc           #95                 // class com/vladsch/flexmark/ast/HtmlCommentBlock
     243: new           #96                 // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$12
     246: dup
     247: aload_0
     248: invokespecial #97                 // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$12."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     251: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     254: aastore
     255: dup
     256: bipush        12
     258: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     261: dup
     262: ldc           #98                 // class com/vladsch/flexmark/ast/HtmlInnerBlock
     264: new           #99                 // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$13
     267: dup
     268: aload_0
     269: invokespecial #100                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$13."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     272: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     275: aastore
     276: dup
     277: bipush        13
     279: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     282: dup
     283: ldc           #101                // class com/vladsch/flexmark/ast/HtmlInnerBlockComment
     285: new           #102                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$14
     288: dup
     289: aload_0
     290: invokespecial #103                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$14."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     293: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     296: aastore
     297: dup
     298: bipush        14
     300: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     303: dup
     304: ldc           #104                // class com/vladsch/flexmark/ast/HtmlEntity
     306: new           #105                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$15
     309: dup
     310: aload_0
     311: invokespecial #106                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$15."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     314: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     317: aastore
     318: dup
     319: bipush        15
     321: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     324: dup
     325: ldc           #107                // class com/vladsch/flexmark/ast/HtmlInline
     327: new           #108                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$16
     330: dup
     331: aload_0
     332: invokespecial #109                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$16."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     335: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     338: aastore
     339: dup
     340: bipush        16
     342: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     345: dup
     346: ldc           #110                // class com/vladsch/flexmark/ast/HtmlInlineComment
     348: new           #111                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$17
     351: dup
     352: aload_0
     353: invokespecial #112                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$17."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     356: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     359: aastore
     360: dup
     361: bipush        17
     363: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     366: dup
     367: ldc           #113                // class com/vladsch/flexmark/ast/Image
     369: new           #114                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$18
     372: dup
     373: aload_0
     374: invokespecial #115                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$18."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     377: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     380: aastore
     381: dup
     382: bipush        18
     384: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     387: dup
     388: ldc           #116                // class com/vladsch/flexmark/ast/ImageRef
     390: new           #117                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$19
     393: dup
     394: aload_0
     395: invokespecial #118                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$19."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     398: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     401: aastore
     402: dup
     403: bipush        19
     405: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     408: dup
     409: ldc           #119                // class com/vladsch/flexmark/ast/IndentedCodeBlock
     411: new           #120                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$20
     414: dup
     415: aload_0
     416: invokespecial #121                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$20."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     419: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     422: aastore
     423: dup
     424: bipush        20
     426: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     429: dup
     430: ldc           #122                // class com/vladsch/flexmark/ast/Link
     432: new           #123                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$21
     435: dup
     436: aload_0
     437: invokespecial #124                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$21."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     440: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     443: aastore
     444: dup
     445: bipush        21
     447: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     450: dup
     451: ldc           #125                // class com/vladsch/flexmark/ast/LinkRef
     453: new           #126                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$22
     456: dup
     457: aload_0
     458: invokespecial #127                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$22."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     461: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     464: aastore
     465: dup
     466: bipush        22
     468: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     471: dup
     472: ldc           #128                // class com/vladsch/flexmark/ast/BulletListItem
     474: new           #129                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$23
     477: dup
     478: aload_0
     479: invokespecial #130                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$23."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     482: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     485: aastore
     486: dup
     487: bipush        23
     489: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     492: dup
     493: ldc           #131                // class com/vladsch/flexmark/ast/OrderedListItem
     495: new           #132                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$24
     498: dup
     499: aload_0
     500: invokespecial #133                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$24."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     503: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     506: aastore
     507: dup
     508: bipush        24
     510: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     513: dup
     514: ldc           #134                // class com/vladsch/flexmark/ast/MailLink
     516: new           #135                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$25
     519: dup
     520: aload_0
     521: invokespecial #136                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$25."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     524: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     527: aastore
     528: dup
     529: bipush        25
     531: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     534: dup
     535: ldc           #137                // class com/vladsch/flexmark/ast/OrderedList
     537: new           #138                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$26
     540: dup
     541: aload_0
     542: invokespecial #139                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$26."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     545: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     548: aastore
     549: dup
     550: bipush        26
     552: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     555: dup
     556: ldc           #140                // class com/vladsch/flexmark/ast/Paragraph
     558: new           #141                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$27
     561: dup
     562: aload_0
     563: invokespecial #142                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$27."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     566: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     569: aastore
     570: dup
     571: bipush        27
     573: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     576: dup
     577: ldc           #143                // class com/vladsch/flexmark/ast/Reference
     579: new           #144                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$28
     582: dup
     583: aload_0
     584: invokespecial #145                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$28."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     587: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     590: aastore
     591: dup
     592: bipush        28
     594: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     597: dup
     598: ldc           #146                // class com/vladsch/flexmark/ast/SoftLineBreak
     600: new           #147                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$29
     603: dup
     604: aload_0
     605: invokespecial #148                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$29."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     608: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     611: aastore
     612: dup
     613: bipush        29
     615: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     618: dup
     619: ldc           #149                // class com/vladsch/flexmark/ast/StrongEmphasis
     621: new           #150                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$30
     624: dup
     625: aload_0
     626: invokespecial #151                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$30."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     629: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     632: aastore
     633: dup
     634: bipush        30
     636: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     639: dup
     640: ldc           #152                // class com/vladsch/flexmark/ast/Text
     642: new           #153                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$31
     645: dup
     646: aload_0
     647: invokespecial #154                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$31."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     650: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     653: aastore
     654: dup
     655: bipush        31
     657: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     660: dup
     661: ldc           #155                // class com/vladsch/flexmark/ast/TextBase
     663: new           #156                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$32
     666: dup
     667: aload_0
     668: invokespecial #157                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$32."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     671: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     674: aastore
     675: dup
     676: bipush        32
     678: new           #60                 // class com/vladsch/flexmark/html/renderer/NodeRenderingHandler
     681: dup
     682: ldc           #158                // class com/vladsch/flexmark/ast/ThematicBreak
     684: new           #159                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$33
     687: dup
     688: aload_0
     689: invokespecial #160                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$33."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;)V
     692: invokespecial #64                 // Method com/vladsch/flexmark/html/renderer/NodeRenderingHandler."<init>":(Ljava/lang/Class;Lcom/vladsch/flexmark/html/CustomNodeRenderer;)V
     695: aastore
     696: invokestatic  #161                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     699: invokespecial #162                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     702: areturn

  private void render(com.vladsch.flexmark.ast.Document, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #163,  2          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
       7: return

  private void render(com.vladsch.flexmark.ast.Heading, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_2
       1: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
       6: getfield      #165                // Field com/vladsch/flexmark/html/HtmlRendererOptions.renderHeaderId:Z
       9: ifeq          35
      12: aload_2
      13: aload_1
      14: invokeinterface #166,  2          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getNodeId:(Lcom/vladsch/flexmark/ast/Node;)Ljava/lang/String;
      19: astore        4
      21: aload         4
      23: ifnull        35
      26: aload_3
      27: ldc           #167                // String id
      29: aload         4
      31: invokevirtual #168                // Method com/vladsch/flexmark/html/HtmlWriter.attr:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      34: pop
      35: aload_2
      36: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      41: getfield      #169                // Field com/vladsch/flexmark/html/HtmlRendererOptions.sourcePositionParagraphLines:Z
      44: ifeq          98
      47: aload_3
      48: aload_1
      49: invokevirtual #170                // Method com/vladsch/flexmark/ast/Heading.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      52: invokevirtual #171                // Method com/vladsch/flexmark/html/HtmlWriter.srcPos:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
      55: invokevirtual #172                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:()Lcom/vladsch/flexmark/html/HtmlWriter;
      58: new           #173                // class java/lang/StringBuilder
      61: dup
      62: invokespecial #174                // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #175                // String h
      67: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_1
      71: invokevirtual #177                // Method com/vladsch/flexmark/ast/Heading.getLevel:()I
      74: invokevirtual #178                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      77: invokevirtual #179                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: new           #180                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$34
      83: dup
      84: aload_0
      85: aload_3
      86: aload_1
      87: aload_2
      88: invokespecial #181                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$34."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;Lcom/vladsch/flexmark/html/HtmlWriter;Lcom/vladsch/flexmark/ast/Heading;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;)V
      91: invokevirtual #182                // Method com/vladsch/flexmark/html/HtmlWriter.tagLine:(Ljava/lang/CharSequence;Ljava/lang/Runnable;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      94: pop
      95: goto          145
      98: aload_3
      99: aload_1
     100: invokevirtual #183                // Method com/vladsch/flexmark/ast/Heading.getText:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     103: invokevirtual #171                // Method com/vladsch/flexmark/html/HtmlWriter.srcPos:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
     106: invokevirtual #172                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:()Lcom/vladsch/flexmark/html/HtmlWriter;
     109: new           #173                // class java/lang/StringBuilder
     112: dup
     113: invokespecial #174                // Method java/lang/StringBuilder."<init>":()V
     116: ldc           #175                // String h
     118: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: aload_1
     122: invokevirtual #177                // Method com/vladsch/flexmark/ast/Heading.getLevel:()I
     125: invokevirtual #178                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     128: invokevirtual #179                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     131: new           #184                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$35
     134: dup
     135: aload_0
     136: aload_2
     137: aload_1
     138: invokespecial #185                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$35."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/ast/Heading;)V
     141: invokevirtual #182                // Method com/vladsch/flexmark/html/HtmlWriter.tagLine:(Ljava/lang/CharSequence;Ljava/lang/Runnable;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     144: pop
     145: return

  private void render(com.vladsch.flexmark.ast.BlockQuote, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_3
       1: invokevirtual #172                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:()Lcom/vladsch/flexmark/html/HtmlWriter;
       4: ldc           #186                // String blockquote
       6: new           #187                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$36
       9: dup
      10: aload_0
      11: aload_2
      12: aload_1
      13: invokespecial #188                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$36."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/ast/BlockQuote;)V
      16: invokevirtual #189                // Method com/vladsch/flexmark/html/HtmlWriter.tagLineIndent:(Ljava/lang/CharSequence;Ljava/lang/Runnable;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      19: pop
      20: return

  private void render(com.vladsch.flexmark.ast.FencedCodeBlock, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_3
       1: invokevirtual #190                // Method com/vladsch/flexmark/html/HtmlWriter.line:()Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
       4: pop
       5: aload_3
       6: aload_1
       7: invokevirtual #191                // Method com/vladsch/flexmark/ast/FencedCodeBlock.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      10: invokevirtual #192                // Method com/vladsch/flexmark/html/HtmlWriter.srcPosWithTrailingEOL:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
      13: invokevirtual #172                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:()Lcom/vladsch/flexmark/html/HtmlWriter;
      16: ldc           #193                // String pre
      18: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      21: checkcast     #195                // class com/vladsch/flexmark/html/HtmlWriter
      24: invokevirtual #196                // Method com/vladsch/flexmark/html/HtmlWriter.openPre:()Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      27: pop
      28: aload_1
      29: invokevirtual #197                // Method com/vladsch/flexmark/ast/FencedCodeBlock.getInfo:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      32: astore        4
      34: aload         4
      36: invokeinterface #198,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.isNotNull:()Z
      41: ifeq          132
      44: aload         4
      46: invokeinterface #199,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.isBlank:()Z
      51: ifne          132
      54: aload         4
      56: bipush        32
      58: invokeinterface #200,  2          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.indexOf:(C)I
      63: istore        5
      65: iload         5
      67: iconst_m1
      68: if_icmpne     78
      71: aload         4
      73: astore        6
      75: goto          90
      78: aload         4
      80: iconst_0
      81: iload         5
      83: invokeinterface #201,  3          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.subSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      88: astore        6
      90: aload_3
      91: ldc           #202                // String class
      93: new           #173                // class java/lang/StringBuilder
      96: dup
      97: invokespecial #174                // Method java/lang/StringBuilder."<init>":()V
     100: aload_2
     101: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
     106: getfield      #203                // Field com/vladsch/flexmark/html/HtmlRendererOptions.languageClassPrefix:Ljava/lang/String;
     109: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: aload         6
     114: invokeinterface #204,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.unescape:()Ljava/lang/String;
     119: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: invokevirtual #179                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     125: invokevirtual #168                // Method com/vladsch/flexmark/html/HtmlWriter.attr:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     128: pop
     129: goto          163
     132: aload_2
     133: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
     138: getfield      #205                // Field com/vladsch/flexmark/html/HtmlRendererOptions.noLanguageClass:Ljava/lang/String;
     141: invokevirtual #206                // Method java/lang/String.trim:()Ljava/lang/String;
     144: astore        5
     146: aload         5
     148: invokevirtual #207                // Method java/lang/String.isEmpty:()Z
     151: ifne          163
     154: aload_3
     155: ldc           #202                // String class
     157: aload         5
     159: invokevirtual #168                // Method com/vladsch/flexmark/html/HtmlWriter.attr:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     162: pop
     163: aload_3
     164: aload_1
     165: invokevirtual #208                // Method com/vladsch/flexmark/ast/FencedCodeBlock.getContentChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     168: invokevirtual #209                // Method com/vladsch/flexmark/html/HtmlWriter.srcPosWithEOL:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
     171: getstatic     #210                // Field CODE_CONTENT:Lcom/vladsch/flexmark/html/renderer/AttributablePart;
     174: invokevirtual #211                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:(Lcom/vladsch/flexmark/html/renderer/AttributablePart;)Lcom/vladsch/flexmark/html/HtmlWriter;
     177: ldc           #212                // String code
     179: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     182: pop
     183: aload_0
     184: getfield      #52                 // Field codeContentBlock:Z
     187: ifeq          200
     190: aload_2
     191: aload_1
     192: invokeinterface #163,  2          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
     197: goto          214
     200: aload_3
     201: aload_1
     202: invokevirtual #208                // Method com/vladsch/flexmark/ast/FencedCodeBlock.getContentChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     205: invokeinterface #213,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.normalizeEOL:()Ljava/lang/String;
     210: invokevirtual #214                // Method com/vladsch/flexmark/html/HtmlWriter.text:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     213: pop
     214: aload_3
     215: ldc           #215                // String /code
     217: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     220: pop
     221: aload_3
     222: ldc           #216                // String /pre
     224: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     227: checkcast     #195                // class com/vladsch/flexmark/html/HtmlWriter
     230: invokevirtual #217                // Method com/vladsch/flexmark/html/HtmlWriter.closePre:()Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     233: pop
     234: aload_3
     235: aload_2
     236: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
     241: getfield      #218                // Field com/vladsch/flexmark/html/HtmlRendererOptions.htmlBlockCloseTagEol:Z
     244: invokevirtual #219                // Method com/vladsch/flexmark/html/HtmlWriter.lineIf:(Z)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     247: pop
     248: return

  private void render(com.vladsch.flexmark.ast.ThematicBreak, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #220                // Method com/vladsch/flexmark/ast/ThematicBreak.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: invokevirtual #171                // Method com/vladsch/flexmark/html/HtmlWriter.srcPos:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
       8: invokevirtual #172                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:()Lcom/vladsch/flexmark/html/HtmlWriter;
      11: ldc           #221                // String hr
      13: invokevirtual #222                // Method com/vladsch/flexmark/html/HtmlWriter.tagVoidLine:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      16: pop
      17: return

  private void render(com.vladsch.flexmark.ast.IndentedCodeBlock, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_3
       1: invokevirtual #190                // Method com/vladsch/flexmark/html/HtmlWriter.line:()Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
       4: pop
       5: aload_3
       6: aload_1
       7: invokevirtual #223                // Method com/vladsch/flexmark/ast/IndentedCodeBlock.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      10: invokevirtual #209                // Method com/vladsch/flexmark/html/HtmlWriter.srcPosWithEOL:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
      13: invokevirtual #172                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:()Lcom/vladsch/flexmark/html/HtmlWriter;
      16: ldc           #193                // String pre
      18: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      21: checkcast     #195                // class com/vladsch/flexmark/html/HtmlWriter
      24: invokevirtual #196                // Method com/vladsch/flexmark/html/HtmlWriter.openPre:()Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      27: pop
      28: aload_2
      29: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      34: getfield      #205                // Field com/vladsch/flexmark/html/HtmlRendererOptions.noLanguageClass:Ljava/lang/String;
      37: invokevirtual #206                // Method java/lang/String.trim:()Ljava/lang/String;
      40: astore        4
      42: aload         4
      44: invokevirtual #207                // Method java/lang/String.isEmpty:()Z
      47: ifne          59
      50: aload_3
      51: ldc           #202                // String class
      53: aload         4
      55: invokevirtual #168                // Method com/vladsch/flexmark/html/HtmlWriter.attr:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      58: pop
      59: aload_3
      60: aload_1
      61: invokevirtual #224                // Method com/vladsch/flexmark/ast/IndentedCodeBlock.getContentChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      64: invokevirtual #209                // Method com/vladsch/flexmark/html/HtmlWriter.srcPosWithEOL:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
      67: getstatic     #210                // Field CODE_CONTENT:Lcom/vladsch/flexmark/html/renderer/AttributablePart;
      70: invokevirtual #211                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:(Lcom/vladsch/flexmark/html/renderer/AttributablePart;)Lcom/vladsch/flexmark/html/HtmlWriter;
      73: ldc           #212                // String code
      75: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      78: pop
      79: aload_0
      80: getfield      #52                 // Field codeContentBlock:Z
      83: ifeq          96
      86: aload_2
      87: aload_1
      88: invokeinterface #163,  2          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
      93: goto          115
      96: aload_3
      97: aload_1
      98: invokevirtual #224                // Method com/vladsch/flexmark/ast/IndentedCodeBlock.getContentChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     101: invokeinterface #225,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.trimTailBlankLines:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     106: invokeinterface #226,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.normalizeEndWithEOL:()Ljava/lang/String;
     111: invokevirtual #214                // Method com/vladsch/flexmark/html/HtmlWriter.text:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     114: pop
     115: aload_3
     116: ldc           #215                // String /code
     118: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     121: pop
     122: aload_3
     123: ldc           #216                // String /pre
     125: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     128: checkcast     #195                // class com/vladsch/flexmark/html/HtmlWriter
     131: invokevirtual #217                // Method com/vladsch/flexmark/html/HtmlWriter.closePre:()Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     134: pop
     135: aload_3
     136: aload_2
     137: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
     142: getfield      #218                // Field com/vladsch/flexmark/html/HtmlRendererOptions.htmlBlockCloseTagEol:Z
     145: invokevirtual #219                // Method com/vladsch/flexmark/html/HtmlWriter.lineIf:(Z)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     148: pop
     149: return

  private void render(com.vladsch.flexmark.ast.CodeBlock, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_1
       1: invokevirtual #227                // Method com/vladsch/flexmark/ast/CodeBlock.getParent:()Lcom/vladsch/flexmark/ast/Block;
       4: instanceof    #119                // class com/vladsch/flexmark/ast/IndentedCodeBlock
       7: ifeq          32
      10: aload_3
      11: aload_1
      12: invokevirtual #228                // Method com/vladsch/flexmark/ast/CodeBlock.getContentChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      15: invokeinterface #225,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.trimTailBlankLines:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      20: invokeinterface #226,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.normalizeEndWithEOL:()Ljava/lang/String;
      25: invokevirtual #214                // Method com/vladsch/flexmark/html/HtmlWriter.text:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      28: pop
      29: goto          46
      32: aload_3
      33: aload_1
      34: invokevirtual #228                // Method com/vladsch/flexmark/ast/CodeBlock.getContentChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      37: invokeinterface #213,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.normalizeEOL:()Ljava/lang/String;
      42: invokevirtual #214                // Method com/vladsch/flexmark/html/HtmlWriter.text:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      45: pop
      46: return

  private void render(com.vladsch.flexmark.ast.BulletList, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_3
       1: invokevirtual #172                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:()Lcom/vladsch/flexmark/html/HtmlWriter;
       4: ldc           #229                // String ul
       6: new           #230                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$37
       9: dup
      10: aload_0
      11: aload_2
      12: aload_1
      13: invokespecial #231                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$37."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/ast/BulletList;)V
      16: invokevirtual #232                // Method com/vladsch/flexmark/html/HtmlWriter.tagIndent:(Ljava/lang/CharSequence;Ljava/lang/Runnable;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      19: pop
      20: return

  private void render(com.vladsch.flexmark.ast.OrderedList, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_1
       1: invokevirtual #233                // Method com/vladsch/flexmark/ast/OrderedList.getStartNumber:()I
       4: istore        4
       6: aload_0
       7: getfield      #41                 // Field listOptions:Lcom/vladsch/flexmark/parser/ListOptions;
      10: invokevirtual #234                // Method com/vladsch/flexmark/parser/ListOptions.isOrderedListManualStart:()Z
      13: ifeq          34
      16: iload         4
      18: iconst_1
      19: if_icmpeq     34
      22: aload_3
      23: ldc           #235                // String start
      25: iload         4
      27: invokestatic  #236                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      30: invokevirtual #168                // Method com/vladsch/flexmark/html/HtmlWriter.attr:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      33: pop
      34: aload_3
      35: invokevirtual #172                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:()Lcom/vladsch/flexmark/html/HtmlWriter;
      38: ldc           #237                // String ol
      40: new           #238                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$38
      43: dup
      44: aload_0
      45: aload_2
      46: aload_1
      47: invokespecial #239                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$38."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/ast/OrderedList;)V
      50: invokevirtual #232                // Method com/vladsch/flexmark/html/HtmlWriter.tagIndent:(Ljava/lang/CharSequence;Ljava/lang/Runnable;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      53: pop
      54: return

  private void render(com.vladsch.flexmark.ast.BulletListItem, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #240                // Method renderListItem:(Lcom/vladsch/flexmark/ast/ListItem;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  private void render(com.vladsch.flexmark.ast.OrderedListItem, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #240                // Method renderListItem:(Lcom/vladsch/flexmark/ast/ListItem;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  private void renderListItem(com.vladsch.flexmark.ast.ListItem, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: getfield      #41                 // Field listOptions:Lcom/vladsch/flexmark/parser/ListOptions;
       4: aload_1
       5: invokevirtual #241                // Method com/vladsch/flexmark/parser/ListOptions.isTightListItem:(Lcom/vladsch/flexmark/ast/ListItem;)Z
       8: ifeq          51
      11: aload_3
      12: aload_1
      13: invokevirtual #242                // Method com/vladsch/flexmark/ast/ListItem.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      16: invokevirtual #209                // Method com/vladsch/flexmark/html/HtmlWriter.srcPosWithEOL:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
      19: getstatic     #243                // Field TIGHT_LIST_ITEM:Lcom/vladsch/flexmark/html/renderer/AttributablePart;
      22: invokevirtual #211                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:(Lcom/vladsch/flexmark/html/renderer/AttributablePart;)Lcom/vladsch/flexmark/html/HtmlWriter;
      25: invokevirtual #244                // Method com/vladsch/flexmark/html/HtmlWriter.withCondIndent:()Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      28: checkcast     #195                // class com/vladsch/flexmark/html/HtmlWriter
      31: ldc           #245                // String li
      33: new           #246                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$39
      36: dup
      37: aload_0
      38: aload_3
      39: aload_1
      40: aload_2
      41: invokespecial #247                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$39."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;Lcom/vladsch/flexmark/html/HtmlWriter;Lcom/vladsch/flexmark/ast/ListItem;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;)V
      44: invokevirtual #182                // Method com/vladsch/flexmark/html/HtmlWriter.tagLine:(Ljava/lang/CharSequence;Ljava/lang/Runnable;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      47: pop
      48: goto          82
      51: aload_3
      52: aload_1
      53: invokevirtual #242                // Method com/vladsch/flexmark/ast/ListItem.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      56: invokevirtual #209                // Method com/vladsch/flexmark/html/HtmlWriter.srcPosWithEOL:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
      59: getstatic     #248                // Field LOOSE_LIST_ITEM:Lcom/vladsch/flexmark/html/renderer/AttributablePart;
      62: invokevirtual #211                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:(Lcom/vladsch/flexmark/html/renderer/AttributablePart;)Lcom/vladsch/flexmark/html/HtmlWriter;
      65: ldc           #245                // String li
      67: new           #249                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$40
      70: dup
      71: aload_0
      72: aload_3
      73: aload_1
      74: aload_2
      75: invokespecial #250                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$40."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;Lcom/vladsch/flexmark/html/HtmlWriter;Lcom/vladsch/flexmark/ast/ListItem;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;)V
      78: invokevirtual #232                // Method com/vladsch/flexmark/html/HtmlWriter.tagIndent:(Ljava/lang/CharSequence;Ljava/lang/Runnable;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      81: pop
      82: return

  public void renderTextBlockParagraphLines(com.vladsch.flexmark.ast.Paragraph, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter, boolean);
    Code:
       0: aload_2
       1: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
       6: getfield      #169                // Field com/vladsch/flexmark/html/HtmlRendererOptions.sourcePositionParagraphLines:Z
       9: ifeq          79
      12: aload_1
      13: invokevirtual #251                // Method com/vladsch/flexmark/ast/Paragraph.hasChildren:()Z
      16: ifeq          79
      19: new           #252                // class com/vladsch/flexmark/ast/util/LineCollectingVisitor
      22: dup
      23: invokespecial #253                // Method com/vladsch/flexmark/ast/util/LineCollectingVisitor."<init>":()V
      26: astore        5
      28: aload_0
      29: aload         5
      31: aload_1
      32: invokevirtual #254                // Method com/vladsch/flexmark/ast/util/LineCollectingVisitor.collectAndGetRanges:(Lcom/vladsch/flexmark/ast/Node;)Ljava/util/List;
      35: putfield      #55                 // Field myLines:Ljava/util/List;
      38: aload_0
      39: aload         5
      41: invokevirtual #255                // Method com/vladsch/flexmark/ast/util/LineCollectingVisitor.getEOLs:()Ljava/util/List;
      44: putfield      #56                 // Field myEOLs:Ljava/util/List;
      47: aload_0
      48: iconst_0
      49: putfield      #57                 // Field myNextLine:I
      52: aload_0
      53: aload_1
      54: aload_1
      55: invokevirtual #256                // Method com/vladsch/flexmark/ast/Paragraph.getFirstChild:()Lcom/vladsch/flexmark/ast/Node;
      58: aload_1
      59: aload_3
      60: invokespecial #257                // Method outputSourceLineSpan:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/html/HtmlWriter;)V
      63: aload_2
      64: aload_1
      65: invokeinterface #163,  2          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
      70: aload_3
      71: ldc_w         #258                // String /span
      74: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      77: pop
      78: return
      79: iload         4
      81: ifeq          110
      84: aload_3
      85: invokevirtual #172                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:()Lcom/vladsch/flexmark/html/HtmlWriter;
      88: ldc_w         #259                // String span
      91: iconst_0
      92: iconst_0
      93: new           #260                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$41
      96: dup
      97: aload_0
      98: aload_2
      99: aload_1
     100: invokespecial #261                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$41."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/ast/Paragraph;)V
     103: invokevirtual #262                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;ZZLjava/lang/Runnable;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     106: pop
     107: goto          117
     110: aload_2
     111: aload_1
     112: invokeinterface #163,  2          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
     117: return

  private void outputSourceLineSpan(com.vladsch.flexmark.ast.Node, com.vladsch.flexmark.ast.Node, com.vladsch.flexmark.ast.Node, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_2
       1: invokevirtual #263                // Method com/vladsch/flexmark/ast/Node.getStartOffset:()I
       4: istore        5
       6: aload_0
       7: getfield      #55                 // Field myLines:Ljava/util/List;
      10: aload_0
      11: getfield      #57                 // Field myNextLine:I
      14: invokeinterface #264,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      19: checkcast     #265                // class com/vladsch/flexmark/util/sequence/Range
      22: astore        6
      24: aload_0
      25: getfield      #56                 // Field myEOLs:Ljava/util/List;
      28: aload_0
      29: getfield      #57                 // Field myNextLine:I
      32: invokeinterface #264,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      37: checkcast     #266                // class java/lang/Integer
      40: invokevirtual #267                // Method java/lang/Integer.intValue:()I
      43: istore        7
      45: aload_3
      46: invokevirtual #268                // Method com/vladsch/flexmark/ast/Node.getEndOffset:()I
      49: istore        8
      51: aload         6
      53: invokevirtual #269                // Method com/vladsch/flexmark/util/sequence/Range.getEnd:()I
      56: iload         8
      58: if_icmpgt     159
      61: aload         6
      63: invokevirtual #269                // Method com/vladsch/flexmark/util/sequence/Range.getEnd:()I
      66: istore        8
      68: iload         8
      70: iload         7
      72: isub
      73: istore        8
      75: iload         8
      77: aload_1
      78: invokevirtual #270                // Method com/vladsch/flexmark/ast/Node.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      81: iload         5
      83: iload         8
      85: invokeinterface #271,  3          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.baseSubSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      90: ldc_w         #272                // String  \t
      93: invokeinterface #273,  2          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.countTrailing:(Ljava/lang/CharSequence;)I
      98: isub
      99: istore        8
     101: aload_0
     102: dup
     103: getfield      #57                 // Field myNextLine:I
     106: iconst_1
     107: iadd
     108: putfield      #57                 // Field myNextLine:I
     111: aload_0
     112: aload         6
     114: invokevirtual #269                // Method com/vladsch/flexmark/util/sequence/Range.getEnd:()I
     117: putfield      #58                 // Field nextLineStartOffset:I
     120: aload_0
     121: dup
     122: getfield      #58                 // Field nextLineStartOffset:I
     125: aload_1
     126: invokevirtual #270                // Method com/vladsch/flexmark/ast/Node.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     129: aload_0
     130: getfield      #58                 // Field nextLineStartOffset:I
     133: aload_1
     134: invokevirtual #270                // Method com/vladsch/flexmark/ast/Node.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     137: invokeinterface #274,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.getEndOffset:()I
     142: invokeinterface #271,  3          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.baseSubSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     147: ldc_w         #272                // String  \t
     150: invokeinterface #275,  2          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.countLeading:(Ljava/lang/CharSequence;)I
     155: iadd
     156: putfield      #58                 // Field nextLineStartOffset:I
     159: aload         6
     161: invokevirtual #276                // Method com/vladsch/flexmark/util/sequence/Range.getStart:()I
     164: iload         5
     166: if_icmple     176
     169: aload         6
     171: invokevirtual #276                // Method com/vladsch/flexmark/util/sequence/Range.getStart:()I
     174: istore        5
     176: aload         4
     178: iload         5
     180: iload         8
     182: invokevirtual #277                // Method com/vladsch/flexmark/html/HtmlWriter.srcPos:(II)Lcom/vladsch/flexmark/html/HtmlWriter;
     185: getstatic     #278                // Field PARAGRAPH_LINE:Lcom/vladsch/flexmark/html/renderer/AttributablePart;
     188: invokevirtual #211                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:(Lcom/vladsch/flexmark/html/renderer/AttributablePart;)Lcom/vladsch/flexmark/html/HtmlWriter;
     191: ldc_w         #259                // String span
     194: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     197: pop
     198: return

  private void outputNextLineBreakSpan(com.vladsch.flexmark.ast.Node, com.vladsch.flexmark.html.HtmlWriter, boolean);
    Code:
       0: aload_0
       1: getfield      #55                 // Field myLines:Ljava/util/List;
       4: aload_0
       5: getfield      #57                 // Field myNextLine:I
       8: invokeinterface #264,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      13: checkcast     #265                // class com/vladsch/flexmark/util/sequence/Range
      16: astore        4
      18: aload_0
      19: getfield      #56                 // Field myEOLs:Ljava/util/List;
      22: aload_0
      23: getfield      #57                 // Field myNextLine:I
      26: invokeinterface #264,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      31: checkcast     #266                // class java/lang/Integer
      34: invokevirtual #267                // Method java/lang/Integer.intValue:()I
      37: istore        5
      39: aload_0
      40: dup
      41: getfield      #57                 // Field myNextLine:I
      44: iconst_1
      45: iadd
      46: putfield      #57                 // Field myNextLine:I
      49: aload_1
      50: invokevirtual #270                // Method com/vladsch/flexmark/ast/Node.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      53: aload_0
      54: getfield      #58                 // Field nextLineStartOffset:I
      57: aload         4
      59: invokevirtual #269                // Method com/vladsch/flexmark/util/sequence/Range.getEnd:()I
      62: iload         5
      64: isub
      65: invokeinterface #271,  3          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.baseSubSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      70: ldc_w         #272                // String  \t
      73: invokeinterface #273,  2          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.countTrailing:(Ljava/lang/CharSequence;)I
      78: istore        6
      80: iload_3
      81: ifne          92
      84: iload         6
      86: ifle          92
      89: iinc          6, -1
      92: iload         5
      94: iload         6
      96: iadd
      97: istore        5
      99: aload_2
     100: aload_0
     101: getfield      #58                 // Field nextLineStartOffset:I
     104: aload         4
     106: invokevirtual #269                // Method com/vladsch/flexmark/util/sequence/Range.getEnd:()I
     109: iload         5
     111: isub
     112: invokevirtual #277                // Method com/vladsch/flexmark/html/HtmlWriter.srcPos:(II)Lcom/vladsch/flexmark/html/HtmlWriter;
     115: getstatic     #278                // Field PARAGRAPH_LINE:Lcom/vladsch/flexmark/html/renderer/AttributablePart;
     118: invokevirtual #211                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:(Lcom/vladsch/flexmark/html/renderer/AttributablePart;)Lcom/vladsch/flexmark/html/HtmlWriter;
     121: ldc_w         #259                // String span
     124: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     127: pop
     128: aload_0
     129: aload         4
     131: invokevirtual #269                // Method com/vladsch/flexmark/util/sequence/Range.getEnd:()I
     134: putfield      #58                 // Field nextLineStartOffset:I
     137: aload_0
     138: dup
     139: getfield      #58                 // Field nextLineStartOffset:I
     142: aload_1
     143: invokevirtual #270                // Method com/vladsch/flexmark/ast/Node.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     146: aload_0
     147: getfield      #58                 // Field nextLineStartOffset:I
     150: aload_1
     151: invokevirtual #270                // Method com/vladsch/flexmark/ast/Node.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     154: invokeinterface #279,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.getBaseSequence:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     159: invokeinterface #280,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.length:()I
     164: invokeinterface #271,  3          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.baseSubSequence:(II)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     169: ldc_w         #272                // String  \t
     172: invokeinterface #275,  2          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.countLeading:(Ljava/lang/CharSequence;)I
     177: iadd
     178: putfield      #58                 // Field nextLineStartOffset:I
     181: return

  private void renderLooseParagraph(com.vladsch.flexmark.ast.Paragraph, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #281                // Method com/vladsch/flexmark/ast/Paragraph.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: invokevirtual #209                // Method com/vladsch/flexmark/html/HtmlWriter.srcPosWithEOL:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
       8: invokevirtual #172                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:()Lcom/vladsch/flexmark/html/HtmlWriter;
      11: ldc_w         #282                // String p
      14: new           #283                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$42
      17: dup
      18: aload_0
      19: aload_1
      20: aload_2
      21: aload_3
      22: invokespecial #284                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$42."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;Lcom/vladsch/flexmark/ast/Paragraph;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
      25: invokevirtual #182                // Method com/vladsch/flexmark/html/HtmlWriter.tagLine:(Ljava/lang/CharSequence;Ljava/lang/Runnable;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      28: pop
      29: return

  private void render(com.vladsch.flexmark.ast.Paragraph, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_1
       1: invokevirtual #285                // Method com/vladsch/flexmark/ast/Paragraph.getParent:()Lcom/vladsch/flexmark/ast/Block;
       4: instanceof    #286                // class com/vladsch/flexmark/ast/ParagraphItemContainer
       7: ifeq          36
      10: aload_1
      11: invokevirtual #285                // Method com/vladsch/flexmark/ast/Paragraph.getParent:()Lcom/vladsch/flexmark/ast/Block;
      14: checkcast     #286                // class com/vladsch/flexmark/ast/ParagraphItemContainer
      17: aload_1
      18: aload_0
      19: getfield      #41                 // Field listOptions:Lcom/vladsch/flexmark/parser/ListOptions;
      22: aload_2
      23: invokeinterface #287,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getOptions:()Lcom/vladsch/flexmark/util/options/DataHolder;
      28: invokeinterface #288,  4          // InterfaceMethod com/vladsch/flexmark/ast/ParagraphItemContainer.isParagraphWrappingDisabled:(Lcom/vladsch/flexmark/ast/Paragraph;Lcom/vladsch/flexmark/parser/ListOptions;Lcom/vladsch/flexmark/util/options/DataHolder;)Z
      33: ifne          46
      36: aload_0
      37: aload_1
      38: aload_2
      39: aload_3
      40: invokespecial #289                // Method renderLooseParagraph:(Lcom/vladsch/flexmark/ast/Paragraph;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
      43: goto          62
      46: aload_0
      47: aload_1
      48: aload_2
      49: aload_3
      50: aload_2
      51: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      56: getfield      #290                // Field com/vladsch/flexmark/html/HtmlRendererOptions.wrapTightItemParagraphInSpan:Z
      59: invokevirtual #291                // Method renderTextBlockParagraphLines:(Lcom/vladsch/flexmark/ast/Paragraph;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;Z)V
      62: return

  private boolean renderLineBreak(java.lang.String, java.lang.String, com.vladsch.flexmark.ast.Node, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: getfield      #57                 // Field myNextLine:I
       4: aload_0
       5: getfield      #55                 // Field myLines:Ljava/util/List;
       8: invokeinterface #292,  1          // InterfaceMethod java/util/List.size:()I
      13: if_icmpge     269
      16: aload         5
      18: ldc_w         #259                // String span
      21: invokevirtual #293                // Method com/vladsch/flexmark/html/HtmlWriter.getOpenTagsAfterLast:(Ljava/lang/CharSequence;)Ljava/util/List;
      24: astore        6
      26: aload         6
      28: invokeinterface #292,  1          // InterfaceMethod java/util/List.size:()I
      33: istore        7
      35: iload         7
      37: ifeq          65
      40: aload_2
      41: ifnull        65
      44: aload_2
      45: aload         6
      47: iload         7
      49: iconst_1
      50: isub
      51: invokeinterface #264,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      56: checkcast     #294                // class java/lang/String
      59: invokevirtual #295                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      62: ifne          69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: istore        8
      72: iload         8
      74: ifne          94
      77: aload         5
      79: invokevirtual #296                // Method com/vladsch/flexmark/html/HtmlWriter.isPendingSpace:()Z
      82: ifne          94
      85: aload         5
      87: ldc_w         #297                // String
      90: invokevirtual #298                // Method com/vladsch/flexmark/html/HtmlWriter.raw:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      93: pop
      94: iload         7
      96: istore        9
      98: iload         9
     100: iinc          9, -1
     103: ifle          127
     106: aload         5
     108: aload         6
     110: iload         9
     112: invokeinterface #264,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     117: checkcast     #299                // class java/lang/CharSequence
     120: invokevirtual #300                // Method com/vladsch/flexmark/html/HtmlWriter.closeTag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     123: pop
     124: goto          98
     127: aload         5
     129: ldc_w         #258                // String /span
     132: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     135: pop
     136: iload         8
     138: ifeq          148
     141: aload         5
     143: aload_1
     144: invokevirtual #298                // Method com/vladsch/flexmark/html/HtmlWriter.raw:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     147: pop
     148: aload_0
     149: aload_3
     150: aload         5
     152: iload         8
     154: invokespecial #301                // Method outputNextLineBreakSpan:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/html/HtmlWriter;Z)V
     157: iconst_0
     158: istore        9
     160: iload         9
     162: iload         7
     164: if_icmpge     267
     167: iload         8
     169: ifne          243
     172: aload         4
     174: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
     179: getfield      #302                // Field com/vladsch/flexmark/html/HtmlRendererOptions.inlineCodeSpliceClass:Ljava/lang/String;
     182: ifnull        243
     185: aload         4
     187: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
     192: getfield      #302                // Field com/vladsch/flexmark/html/HtmlRendererOptions.inlineCodeSpliceClass:Ljava/lang/String;
     195: invokevirtual #207                // Method java/lang/String.isEmpty:()Z
     198: ifne          243
     201: aload         5
     203: ldc           #202                // String class
     205: aload         4
     207: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
     212: getfield      #302                // Field com/vladsch/flexmark/html/HtmlRendererOptions.inlineCodeSpliceClass:Ljava/lang/String;
     215: invokevirtual #168                // Method com/vladsch/flexmark/html/HtmlWriter.attr:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     218: checkcast     #195                // class com/vladsch/flexmark/html/HtmlWriter
     221: invokevirtual #172                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:()Lcom/vladsch/flexmark/html/HtmlWriter;
     224: aload         6
     226: iload         9
     228: invokeinterface #264,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     233: checkcast     #299                // class java/lang/CharSequence
     236: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     239: pop
     240: goto          261
     243: aload         5
     245: aload         6
     247: iload         9
     249: invokeinterface #264,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     254: checkcast     #299                // class java/lang/CharSequence
     257: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     260: pop
     261: iinc          9, 1
     264: goto          160
     267: iconst_1
     268: ireturn
     269: iconst_0
     270: ireturn

  private void render(com.vladsch.flexmark.ast.SoftLineBreak, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_2
       1: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
       6: getfield      #304                // Field com/vladsch/flexmark/html/HtmlRendererOptions.softBreak:Ljava/lang/String;
       9: astore        4
      11: aload_2
      12: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      17: getfield      #169                // Field com/vladsch/flexmark/html/HtmlRendererOptions.sourcePositionParagraphLines:Z
      20: ifeq          75
      23: aload_0
      24: aload         4
      26: aload         4
      28: ldc_w         #305                // String \n
      31: invokevirtual #306                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      34: ifne          59
      37: aload         4
      39: ldc_w         #307                // String \r\n
      42: invokevirtual #306                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      45: ifne          59
      48: aload         4
      50: ldc_w         #308                // String \r
      53: invokevirtual #306                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      56: ifeq          64
      59: ldc           #212                // String code
      61: goto          65
      64: aconst_null
      65: aload_1
      66: aload_2
      67: aload_3
      68: invokespecial #309                // Method renderLineBreak:(Ljava/lang/String;Ljava/lang/String;Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)Z
      71: ifeq          75
      74: return
      75: aload_3
      76: aload         4
      78: invokevirtual #298                // Method com/vladsch/flexmark/html/HtmlWriter.raw:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      81: pop
      82: return

  private void render(com.vladsch.flexmark.ast.HardLineBreak, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_2
       1: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
       6: getfield      #169                // Field com/vladsch/flexmark/html/HtmlRendererOptions.sourcePositionParagraphLines:Z
       9: ifeq          33
      12: aload_0
      13: aload_2
      14: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      19: getfield      #310                // Field com/vladsch/flexmark/html/HtmlRendererOptions.hardBreak:Ljava/lang/String;
      22: aconst_null
      23: aload_1
      24: aload_2
      25: aload_3
      26: invokespecial #309                // Method renderLineBreak:(Ljava/lang/String;Ljava/lang/String;Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)Z
      29: ifeq          33
      32: return
      33: aload_3
      34: aload_2
      35: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      40: getfield      #310                // Field com/vladsch/flexmark/html/HtmlRendererOptions.hardBreak:Ljava/lang/String;
      43: invokevirtual #298                // Method com/vladsch/flexmark/html/HtmlWriter.raw:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      46: pop
      47: return

  private void render(com.vladsch.flexmark.ast.Emphasis, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_2
       1: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
       6: astore        4
       8: aload         4
      10: getfield      #311                // Field com/vladsch/flexmark/html/HtmlRendererOptions.emphasisStyleHtmlOpen:Ljava/lang/String;
      13: ifnull        24
      16: aload         4
      18: getfield      #312                // Field com/vladsch/flexmark/html/HtmlRendererOptions.emphasisStyleHtmlClose:Ljava/lang/String;
      21: ifnonnull     86
      24: aload_2
      25: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      30: getfield      #169                // Field com/vladsch/flexmark/html/HtmlRendererOptions.sourcePositionParagraphLines:Z
      33: ifeq          50
      36: aload_3
      37: invokevirtual #172                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:()Lcom/vladsch/flexmark/html/HtmlWriter;
      40: ldc_w         #313                // String em
      43: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      46: pop
      47: goto          68
      50: aload_3
      51: aload_1
      52: invokevirtual #314                // Method com/vladsch/flexmark/ast/Emphasis.getText:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      55: invokevirtual #171                // Method com/vladsch/flexmark/html/HtmlWriter.srcPos:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
      58: invokevirtual #172                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:()Lcom/vladsch/flexmark/html/HtmlWriter;
      61: ldc_w         #313                // String em
      64: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      67: pop
      68: aload_2
      69: aload_1
      70: invokeinterface #163,  2          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
      75: aload_3
      76: ldc_w         #315                // String /em
      79: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      82: pop
      83: goto          113
      86: aload_3
      87: aload         4
      89: getfield      #311                // Field com/vladsch/flexmark/html/HtmlRendererOptions.emphasisStyleHtmlOpen:Ljava/lang/String;
      92: invokevirtual #298                // Method com/vladsch/flexmark/html/HtmlWriter.raw:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      95: pop
      96: aload_2
      97: aload_1
      98: invokeinterface #163,  2          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
     103: aload_3
     104: aload         4
     106: getfield      #312                // Field com/vladsch/flexmark/html/HtmlRendererOptions.emphasisStyleHtmlClose:Ljava/lang/String;
     109: invokevirtual #298                // Method com/vladsch/flexmark/html/HtmlWriter.raw:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     112: pop
     113: return

  private void render(com.vladsch.flexmark.ast.StrongEmphasis, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_2
       1: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
       6: astore        4
       8: aload         4
      10: getfield      #316                // Field com/vladsch/flexmark/html/HtmlRendererOptions.strongEmphasisStyleHtmlOpen:Ljava/lang/String;
      13: ifnull        24
      16: aload         4
      18: getfield      #317                // Field com/vladsch/flexmark/html/HtmlRendererOptions.strongEmphasisStyleHtmlClose:Ljava/lang/String;
      21: ifnonnull     86
      24: aload_2
      25: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      30: getfield      #169                // Field com/vladsch/flexmark/html/HtmlRendererOptions.sourcePositionParagraphLines:Z
      33: ifeq          50
      36: aload_3
      37: invokevirtual #172                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:()Lcom/vladsch/flexmark/html/HtmlWriter;
      40: ldc_w         #318                // String strong
      43: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      46: pop
      47: goto          68
      50: aload_3
      51: aload_1
      52: invokevirtual #319                // Method com/vladsch/flexmark/ast/StrongEmphasis.getText:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      55: invokevirtual #171                // Method com/vladsch/flexmark/html/HtmlWriter.srcPos:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
      58: invokevirtual #172                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:()Lcom/vladsch/flexmark/html/HtmlWriter;
      61: ldc_w         #318                // String strong
      64: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      67: pop
      68: aload_2
      69: aload_1
      70: invokeinterface #163,  2          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
      75: aload_3
      76: ldc_w         #320                // String /strong
      79: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      82: pop
      83: goto          113
      86: aload_3
      87: aload         4
      89: getfield      #316                // Field com/vladsch/flexmark/html/HtmlRendererOptions.strongEmphasisStyleHtmlOpen:Ljava/lang/String;
      92: invokevirtual #298                // Method com/vladsch/flexmark/html/HtmlWriter.raw:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      95: pop
      96: aload_2
      97: aload_1
      98: invokeinterface #163,  2          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
     103: aload_3
     104: aload         4
     106: getfield      #317                // Field com/vladsch/flexmark/html/HtmlRendererOptions.strongEmphasisStyleHtmlClose:Ljava/lang/String;
     109: invokevirtual #298                // Method com/vladsch/flexmark/html/HtmlWriter.raw:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     112: pop
     113: return

  private void render(com.vladsch.flexmark.ast.Text, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_3
       1: aload_1
       2: invokevirtual #321                // Method com/vladsch/flexmark/ast/Text.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       5: invokeinterface #204,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.unescape:()Ljava/lang/String;
      10: invokestatic  #322                // Method com/vladsch/flexmark/util/html/Escaping.normalizeEOL:(Ljava/lang/CharSequence;)Ljava/lang/String;
      13: invokevirtual #214                // Method com/vladsch/flexmark/html/HtmlWriter.text:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      16: pop
      17: return

  private void render(com.vladsch.flexmark.ast.TextBase, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #163,  2          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
       7: return

  private void render(com.vladsch.flexmark.ast.Code, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_2
       1: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
       6: astore        4
       8: aload         4
      10: getfield      #323                // Field com/vladsch/flexmark/html/HtmlRendererOptions.codeStyleHtmlOpen:Ljava/lang/String;
      13: ifnull        24
      16: aload         4
      18: getfield      #324                // Field com/vladsch/flexmark/html/HtmlRendererOptions.codeStyleHtmlClose:Ljava/lang/String;
      21: ifnonnull     176
      24: aload_2
      25: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      30: getfield      #169                // Field com/vladsch/flexmark/html/HtmlRendererOptions.sourcePositionParagraphLines:Z
      33: ifeq          49
      36: aload_3
      37: invokevirtual #172                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:()Lcom/vladsch/flexmark/html/HtmlWriter;
      40: ldc           #212                // String code
      42: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      45: pop
      46: goto          66
      49: aload_3
      50: aload_1
      51: invokevirtual #325                // Method com/vladsch/flexmark/ast/Code.getText:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      54: invokevirtual #171                // Method com/vladsch/flexmark/html/HtmlWriter.srcPos:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
      57: invokevirtual #172                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:()Lcom/vladsch/flexmark/html/HtmlWriter;
      60: ldc           #212                // String code
      62: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      65: pop
      66: aload_0
      67: getfield      #54                 // Field codeSoftLineBreaks:Z
      70: ifeq          153
      73: aload         4
      75: getfield      #326                // Field com/vladsch/flexmark/html/HtmlRendererOptions.isSoftBreakAllSpaces:Z
      78: ifne          153
      81: aload_1
      82: invokevirtual #327                // Method com/vladsch/flexmark/ast/Code.getChildren:()Lcom/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterable;
      85: invokeinterface #328,  1          // InterfaceMethod com/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterable.iterator:()Lcom/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterator;
      90: astore        5
      92: aload         5
      94: invokeinterface #329,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      99: ifeq          150
     102: aload         5
     104: invokeinterface #330,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     109: checkcast     #331                // class com/vladsch/flexmark/ast/Node
     112: astore        6
     114: aload         6
     116: instanceof    #152                // class com/vladsch/flexmark/ast/Text
     119: ifeq          139
     122: aload_3
     123: aload         6
     125: invokevirtual #270                // Method com/vladsch/flexmark/ast/Node.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     128: iconst_1
     129: invokestatic  #332                // Method com/vladsch/flexmark/util/html/Escaping.collapseWhitespace:(Ljava/lang/CharSequence;Z)Ljava/lang/String;
     132: invokevirtual #214                // Method com/vladsch/flexmark/html/HtmlWriter.text:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     135: pop
     136: goto          147
     139: aload_2
     140: aload         6
     142: invokeinterface #333,  2          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.render:(Lcom/vladsch/flexmark/ast/Node;)V
     147: goto          92
     150: goto          166
     153: aload_3
     154: aload_1
     155: invokevirtual #325                // Method com/vladsch/flexmark/ast/Code.getText:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     158: iconst_1
     159: invokestatic  #332                // Method com/vladsch/flexmark/util/html/Escaping.collapseWhitespace:(Ljava/lang/CharSequence;Z)Ljava/lang/String;
     162: invokevirtual #214                // Method com/vladsch/flexmark/html/HtmlWriter.text:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     165: pop
     166: aload_3
     167: ldc           #215                // String /code
     169: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     172: pop
     173: goto          296
     176: aload_3
     177: aload         4
     179: getfield      #323                // Field com/vladsch/flexmark/html/HtmlRendererOptions.codeStyleHtmlOpen:Ljava/lang/String;
     182: invokevirtual #298                // Method com/vladsch/flexmark/html/HtmlWriter.raw:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     185: pop
     186: aload_0
     187: getfield      #54                 // Field codeSoftLineBreaks:Z
     190: ifeq          273
     193: aload         4
     195: getfield      #326                // Field com/vladsch/flexmark/html/HtmlRendererOptions.isSoftBreakAllSpaces:Z
     198: ifne          273
     201: aload_1
     202: invokevirtual #327                // Method com/vladsch/flexmark/ast/Code.getChildren:()Lcom/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterable;
     205: invokeinterface #328,  1          // InterfaceMethod com/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterable.iterator:()Lcom/vladsch/flexmark/util/collection/iteration/ReversiblePeekingIterator;
     210: astore        5
     212: aload         5
     214: invokeinterface #329,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     219: ifeq          270
     222: aload         5
     224: invokeinterface #330,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     229: checkcast     #331                // class com/vladsch/flexmark/ast/Node
     232: astore        6
     234: aload         6
     236: instanceof    #152                // class com/vladsch/flexmark/ast/Text
     239: ifeq          259
     242: aload_3
     243: aload         6
     245: invokevirtual #270                // Method com/vladsch/flexmark/ast/Node.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     248: iconst_1
     249: invokestatic  #332                // Method com/vladsch/flexmark/util/html/Escaping.collapseWhitespace:(Ljava/lang/CharSequence;Z)Ljava/lang/String;
     252: invokevirtual #214                // Method com/vladsch/flexmark/html/HtmlWriter.text:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     255: pop
     256: goto          267
     259: aload_2
     260: aload         6
     262: invokeinterface #333,  2          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.render:(Lcom/vladsch/flexmark/ast/Node;)V
     267: goto          212
     270: goto          286
     273: aload_3
     274: aload_1
     275: invokevirtual #325                // Method com/vladsch/flexmark/ast/Code.getText:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     278: iconst_1
     279: invokestatic  #332                // Method com/vladsch/flexmark/util/html/Escaping.collapseWhitespace:(Ljava/lang/CharSequence;Z)Ljava/lang/String;
     282: invokevirtual #214                // Method com/vladsch/flexmark/html/HtmlWriter.text:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     285: pop
     286: aload_3
     287: aload         4
     289: getfield      #324                // Field com/vladsch/flexmark/html/HtmlRendererOptions.codeStyleHtmlClose:Ljava/lang/String;
     292: invokevirtual #298                // Method com/vladsch/flexmark/html/HtmlWriter.raw:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     295: pop
     296: return

  private void render(com.vladsch.flexmark.ast.HtmlBlock, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_3
       1: invokevirtual #190                // Method com/vladsch/flexmark/html/HtmlWriter.line:()Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
       4: pop
       5: aload_2
       6: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      11: getfield      #334                // Field com/vladsch/flexmark/html/HtmlRendererOptions.sourceWrapHtmlBlocks:Z
      14: ifeq          50
      17: aload_3
      18: aload_1
      19: invokevirtual #335                // Method com/vladsch/flexmark/ast/HtmlBlock.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      22: invokevirtual #171                // Method com/vladsch/flexmark/html/HtmlWriter.srcPos:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
      25: getstatic     #336                // Field com/vladsch/flexmark/html/renderer/AttributablePart.NODE_POSITION:Lcom/vladsch/flexmark/html/renderer/AttributablePart;
      28: invokevirtual #211                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:(Lcom/vladsch/flexmark/html/renderer/AttributablePart;)Lcom/vladsch/flexmark/html/HtmlWriter;
      31: ldc_w         #337                // String div
      34: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      37: checkcast     #195                // class com/vladsch/flexmark/html/HtmlWriter
      40: invokevirtual #338                // Method com/vladsch/flexmark/html/HtmlWriter.indent:()Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      43: checkcast     #195                // class com/vladsch/flexmark/html/HtmlWriter
      46: invokevirtual #190                // Method com/vladsch/flexmark/html/HtmlWriter.line:()Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      49: pop
      50: aload_1
      51: invokevirtual #339                // Method com/vladsch/flexmark/ast/HtmlBlock.hasChildren:()Z
      54: ifeq          67
      57: aload_2
      58: aload_1
      59: invokeinterface #163,  2          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
      64: goto          93
      67: aload_0
      68: aload_1
      69: aload_2
      70: aload_3
      71: aload_2
      72: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      77: getfield      #340                // Field com/vladsch/flexmark/html/HtmlRendererOptions.suppressHtmlBlocks:Z
      80: aload_2
      81: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      86: getfield      #341                // Field com/vladsch/flexmark/html/HtmlRendererOptions.escapeHtmlBlocks:Z
      89: iconst_0
      90: invokevirtual #342                // Method renderHtmlBlock:(Lcom/vladsch/flexmark/ast/HtmlBlockBase;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;ZZZ)V
      93: aload_2
      94: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      99: getfield      #334                // Field com/vladsch/flexmark/html/HtmlRendererOptions.sourceWrapHtmlBlocks:Z
     102: ifeq          119
     105: aload_3
     106: invokevirtual #343                // Method com/vladsch/flexmark/html/HtmlWriter.unIndent:()Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     109: checkcast     #195                // class com/vladsch/flexmark/html/HtmlWriter
     112: ldc_w         #344                // String /div
     115: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     118: pop
     119: aload_3
     120: aload_2
     121: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
     126: getfield      #218                // Field com/vladsch/flexmark/html/HtmlRendererOptions.htmlBlockCloseTagEol:Z
     129: invokevirtual #219                // Method com/vladsch/flexmark/html/HtmlWriter.lineIf:(Z)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     132: pop
     133: return

  private void render(com.vladsch.flexmark.ast.HtmlCommentBlock, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload_2
       5: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      10: getfield      #345                // Field com/vladsch/flexmark/html/HtmlRendererOptions.suppressHtmlCommentBlocks:Z
      13: aload_2
      14: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      19: getfield      #346                // Field com/vladsch/flexmark/html/HtmlRendererOptions.escapeHtmlCommentBlocks:Z
      22: iconst_0
      23: invokevirtual #342                // Method renderHtmlBlock:(Lcom/vladsch/flexmark/ast/HtmlBlockBase;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;ZZZ)V
      26: return

  private void render(com.vladsch.flexmark.ast.HtmlInnerBlock, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload_2
       5: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      10: getfield      #340                // Field com/vladsch/flexmark/html/HtmlRendererOptions.suppressHtmlBlocks:Z
      13: aload_2
      14: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      19: getfield      #341                // Field com/vladsch/flexmark/html/HtmlRendererOptions.escapeHtmlBlocks:Z
      22: iconst_0
      23: invokevirtual #342                // Method renderHtmlBlock:(Lcom/vladsch/flexmark/ast/HtmlBlockBase;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;ZZZ)V
      26: return

  private void render(com.vladsch.flexmark.ast.HtmlInnerBlockComment, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload_2
       5: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      10: getfield      #345                // Field com/vladsch/flexmark/html/HtmlRendererOptions.suppressHtmlCommentBlocks:Z
      13: aload_2
      14: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      19: getfield      #346                // Field com/vladsch/flexmark/html/HtmlRendererOptions.escapeHtmlCommentBlocks:Z
      22: iconst_0
      23: invokevirtual #342                // Method renderHtmlBlock:(Lcom/vladsch/flexmark/ast/HtmlBlockBase;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;ZZZ)V
      26: return

  public void renderHtmlBlock(com.vladsch.flexmark.ast.HtmlBlockBase, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter, boolean, boolean, boolean);
    Code:
       0: iload         4
       2: ifeq          6
       5: return
       6: aload_1
       7: instanceof    #92                 // class com/vladsch/flexmark/ast/HtmlBlock
      10: ifeq          18
      13: aload_3
      14: invokevirtual #190                // Method com/vladsch/flexmark/html/HtmlWriter.line:()Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      17: pop
      18: aload_1
      19: instanceof    #92                 // class com/vladsch/flexmark/ast/HtmlBlock
      22: ifeq          37
      25: aload_1
      26: invokevirtual #347                // Method com/vladsch/flexmark/ast/HtmlBlockBase.getContentChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      29: invokeinterface #213,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.normalizeEOL:()Ljava/lang/String;
      34: goto          46
      37: aload_1
      38: invokevirtual #348                // Method com/vladsch/flexmark/ast/HtmlBlockBase.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      41: invokeinterface #213,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.normalizeEOL:()Ljava/lang/String;
      46: astore        7
      48: iload         6
      50: ifeq          60
      53: aload         7
      55: invokevirtual #206                // Method java/lang/String.trim:()Ljava/lang/String;
      58: astore        7
      60: iload         5
      62: ifeq          150
      65: aload_1
      66: instanceof    #92                 // class com/vladsch/flexmark/ast/HtmlBlock
      69: ifeq          140
      72: aload         7
      74: invokevirtual #349                // Method java/lang/String.length:()I
      77: ifle          112
      80: aload         7
      82: aload         7
      84: invokevirtual #349                // Method java/lang/String.length:()I
      87: iconst_1
      88: isub
      89: invokevirtual #350                // Method java/lang/String.charAt:(I)C
      92: bipush        10
      94: if_icmpne     112
      97: aload         7
      99: iconst_0
     100: aload         7
     102: invokevirtual #349                // Method java/lang/String.length:()I
     105: iconst_1
     106: isub
     107: invokevirtual #351                // Method java/lang/String.substring:(II)Ljava/lang/String;
     110: astore        7
     112: aload_3
     113: ldc_w         #352                // String <p>
     116: invokevirtual #298                // Method com/vladsch/flexmark/html/HtmlWriter.raw:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     119: checkcast     #195                // class com/vladsch/flexmark/html/HtmlWriter
     122: aload         7
     124: invokevirtual #214                // Method com/vladsch/flexmark/html/HtmlWriter.text:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     127: checkcast     #195                // class com/vladsch/flexmark/html/HtmlWriter
     130: ldc_w         #353                // String </p>
     133: invokevirtual #298                // Method com/vladsch/flexmark/html/HtmlWriter.raw:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     136: pop
     137: goto          157
     140: aload_3
     141: aload         7
     143: invokevirtual #214                // Method com/vladsch/flexmark/html/HtmlWriter.text:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     146: pop
     147: goto          157
     150: aload_3
     151: aload         7
     153: invokevirtual #354                // Method com/vladsch/flexmark/html/HtmlWriter.rawPre:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     156: pop
     157: aload_1
     158: instanceof    #92                 // class com/vladsch/flexmark/ast/HtmlBlock
     161: ifeq          178
     164: aload_3
     165: aload_2
     166: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
     171: getfield      #218                // Field com/vladsch/flexmark/html/HtmlRendererOptions.htmlBlockCloseTagEol:Z
     174: invokevirtual #219                // Method com/vladsch/flexmark/html/HtmlWriter.lineIf:(Z)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     177: pop
     178: return

  private void render(com.vladsch.flexmark.ast.HtmlInline, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload_2
       5: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      10: getfield      #355                // Field com/vladsch/flexmark/html/HtmlRendererOptions.suppressInlineHtml:Z
      13: aload_2
      14: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      19: getfield      #356                // Field com/vladsch/flexmark/html/HtmlRendererOptions.escapeInlineHtml:Z
      22: invokevirtual #357                // Method renderInlineHtml:(Lcom/vladsch/flexmark/ast/HtmlInlineBase;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;ZZ)V
      25: return

  private void render(com.vladsch.flexmark.ast.HtmlInlineComment, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload_2
       5: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      10: getfield      #358                // Field com/vladsch/flexmark/html/HtmlRendererOptions.suppressInlineHtmlComments:Z
      13: aload_2
      14: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      19: getfield      #359                // Field com/vladsch/flexmark/html/HtmlRendererOptions.escapeInlineHtmlComments:Z
      22: invokevirtual #357                // Method renderInlineHtml:(Lcom/vladsch/flexmark/ast/HtmlInlineBase;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;ZZ)V
      25: return

  public void renderInlineHtml(com.vladsch.flexmark.ast.HtmlInlineBase, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter, boolean, boolean);
    Code:
       0: iload         4
       2: ifeq          6
       5: return
       6: iload         5
       8: ifeq          28
      11: aload_3
      12: aload_1
      13: invokevirtual #360                // Method com/vladsch/flexmark/ast/HtmlInlineBase.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      16: invokeinterface #213,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.normalizeEOL:()Ljava/lang/String;
      21: invokevirtual #214                // Method com/vladsch/flexmark/html/HtmlWriter.text:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      24: pop
      25: goto          42
      28: aload_3
      29: aload_1
      30: invokevirtual #360                // Method com/vladsch/flexmark/ast/HtmlInlineBase.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      33: invokeinterface #213,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.normalizeEOL:()Ljava/lang/String;
      38: invokevirtual #354                // Method com/vladsch/flexmark/html/HtmlWriter.rawPre:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      41: pop
      42: return

  private void render(com.vladsch.flexmark.ast.Reference, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: return

  private void render(com.vladsch.flexmark.ast.HtmlEntity, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_2
       1: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
       6: getfield      #361                // Field com/vladsch/flexmark/html/HtmlRendererOptions.unescapeHtmlEntities:Z
       9: ifeq          29
      12: aload_3
      13: aload_1
      14: invokevirtual #362                // Method com/vladsch/flexmark/ast/HtmlEntity.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      17: invokeinterface #204,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.unescape:()Ljava/lang/String;
      22: invokevirtual #214                // Method com/vladsch/flexmark/html/HtmlWriter.text:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      25: pop
      26: goto          43
      29: aload_3
      30: aload_1
      31: invokevirtual #362                // Method com/vladsch/flexmark/ast/HtmlEntity.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      34: invokeinterface #363,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.unescapeNoEntities:()Ljava/lang/String;
      39: invokevirtual #298                // Method com/vladsch/flexmark/html/HtmlWriter.raw:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      42: pop
      43: return

  private void render(com.vladsch.flexmark.ast.AutoLink, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_1
       1: invokevirtual #364                // Method com/vladsch/flexmark/ast/AutoLink.getText:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: invokevirtual #365                // Method java/lang/Object.toString:()Ljava/lang/String;
       7: astore        4
       9: aload_2
      10: invokeinterface #366,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.isDoNotRenderLinks:()Z
      15: ifeq          28
      18: aload_3
      19: aload         4
      21: invokevirtual #214                // Method com/vladsch/flexmark/html/HtmlWriter.text:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      24: pop
      25: goto          136
      28: aload_2
      29: getstatic     #367                // Field com/vladsch/flexmark/html/renderer/LinkType.LINK:Lcom/vladsch/flexmark/html/renderer/LinkType;
      32: aload         4
      34: aconst_null
      35: invokeinterface #368,  4          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.resolveLink:(Lcom/vladsch/flexmark/html/renderer/LinkType;Ljava/lang/CharSequence;Ljava/lang/Boolean;)Lcom/vladsch/flexmark/html/renderer/ResolvedLink;
      40: astore        5
      42: aload_3
      43: aload_1
      44: invokevirtual #364                // Method com/vladsch/flexmark/ast/AutoLink.getText:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      47: invokevirtual #171                // Method com/vladsch/flexmark/html/HtmlWriter.srcPos:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
      50: ldc_w         #369                // String href
      53: aload         5
      55: invokevirtual #370                // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getUrl:()Ljava/lang/String;
      58: ldc_w         #371                // String www.
      61: invokevirtual #372                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      64: ifeq          100
      67: new           #173                // class java/lang/StringBuilder
      70: dup
      71: invokespecial #174                // Method java/lang/StringBuilder."<init>":()V
      74: aload_2
      75: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      80: getfield      #373                // Field com/vladsch/flexmark/html/HtmlRendererOptions.autolinkWwwPrefix:Ljava/lang/String;
      83: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload         5
      88: invokevirtual #370                // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getUrl:()Ljava/lang/String;
      91: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: invokevirtual #179                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: goto          105
     100: aload         5
     102: invokevirtual #370                // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getUrl:()Ljava/lang/String;
     105: invokevirtual #168                // Method com/vladsch/flexmark/html/HtmlWriter.attr:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     108: checkcast     #195                // class com/vladsch/flexmark/html/HtmlWriter
     111: aload         5
     113: invokevirtual #374                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:(Lcom/vladsch/flexmark/html/renderer/ResolvedLink;)Lcom/vladsch/flexmark/html/HtmlWriter;
     116: ldc_w         #375                // String a
     119: iconst_0
     120: iconst_0
     121: new           #376                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer$43
     124: dup
     125: aload_0
     126: aload_3
     127: aload         4
     129: invokespecial #377                // Method com/vladsch/flexmark/html/renderer/CoreNodeRenderer$43."<init>":(Lcom/vladsch/flexmark/html/renderer/CoreNodeRenderer;Lcom/vladsch/flexmark/html/HtmlWriter;Ljava/lang/String;)V
     132: invokevirtual #262                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;ZZLjava/lang/Runnable;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     135: pop
     136: return

  private void render(com.vladsch.flexmark.ast.MailLink, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_1
       1: invokevirtual #378                // Method com/vladsch/flexmark/ast/MailLink.getText:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
       4: invokeinterface #204,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.unescape:()Ljava/lang/String;
       9: astore        4
      11: aload_2
      12: invokeinterface #366,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.isDoNotRenderLinks:()Z
      17: ifeq          30
      20: aload_3
      21: aload         4
      23: invokevirtual #214                // Method com/vladsch/flexmark/html/HtmlWriter.text:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      26: pop
      27: goto          217
      30: aload_2
      31: getstatic     #367                // Field com/vladsch/flexmark/html/renderer/LinkType.LINK:Lcom/vladsch/flexmark/html/renderer/LinkType;
      34: aload         4
      36: aconst_null
      37: invokeinterface #368,  4          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.resolveLink:(Lcom/vladsch/flexmark/html/renderer/LinkType;Ljava/lang/CharSequence;Ljava/lang/Boolean;)Lcom/vladsch/flexmark/html/renderer/ResolvedLink;
      42: astore        5
      44: aload_0
      45: getfield      #48                 // Field obfuscateEmail:Z
      48: ifeq          143
      51: new           #173                // class java/lang/StringBuilder
      54: dup
      55: invokespecial #174                // Method java/lang/StringBuilder."<init>":()V
      58: ldc_w         #379                // String mailto:
      61: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload         5
      66: invokevirtual #370                // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getUrl:()Ljava/lang/String;
      69: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #179                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: aload_0
      76: getfield      #50                 // Field obfuscateEmailRandom:Z
      79: invokestatic  #380                // Method com/vladsch/flexmark/util/html/Escaping.obfuscate:(Ljava/lang/String;Z)Ljava/lang/String;
      82: astore        6
      84: aload         4
      86: iconst_1
      87: invokestatic  #380                // Method com/vladsch/flexmark/util/html/Escaping.obfuscate:(Ljava/lang/String;Z)Ljava/lang/String;
      90: astore        4
      92: aload_3
      93: aload_1
      94: invokevirtual #378                // Method com/vladsch/flexmark/ast/MailLink.getText:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      97: invokevirtual #171                // Method com/vladsch/flexmark/html/HtmlWriter.srcPos:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
     100: ldc_w         #369                // String href
     103: aload         6
     105: invokevirtual #168                // Method com/vladsch/flexmark/html/HtmlWriter.attr:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     108: checkcast     #195                // class com/vladsch/flexmark/html/HtmlWriter
     111: aload         5
     113: invokevirtual #374                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:(Lcom/vladsch/flexmark/html/renderer/ResolvedLink;)Lcom/vladsch/flexmark/html/HtmlWriter;
     116: ldc_w         #375                // String a
     119: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     122: checkcast     #195                // class com/vladsch/flexmark/html/HtmlWriter
     125: aload         4
     127: invokevirtual #298                // Method com/vladsch/flexmark/html/HtmlWriter.raw:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     130: checkcast     #195                // class com/vladsch/flexmark/html/HtmlWriter
     133: ldc_w         #381                // String /a
     136: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     139: pop
     140: goto          217
     143: aload         5
     145: invokevirtual #370                // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getUrl:()Ljava/lang/String;
     148: astore        6
     150: aload_3
     151: aload_1
     152: invokevirtual #378                // Method com/vladsch/flexmark/ast/MailLink.getText:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     155: invokevirtual #171                // Method com/vladsch/flexmark/html/HtmlWriter.srcPos:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
     158: ldc_w         #369                // String href
     161: new           #173                // class java/lang/StringBuilder
     164: dup
     165: invokespecial #174                // Method java/lang/StringBuilder."<init>":()V
     168: ldc_w         #379                // String mailto:
     171: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: aload         6
     176: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: invokevirtual #179                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     182: invokevirtual #168                // Method com/vladsch/flexmark/html/HtmlWriter.attr:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     185: checkcast     #195                // class com/vladsch/flexmark/html/HtmlWriter
     188: aload         5
     190: invokevirtual #374                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:(Lcom/vladsch/flexmark/html/renderer/ResolvedLink;)Lcom/vladsch/flexmark/html/HtmlWriter;
     193: ldc_w         #375                // String a
     196: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     199: checkcast     #195                // class com/vladsch/flexmark/html/HtmlWriter
     202: aload         4
     204: invokevirtual #214                // Method com/vladsch/flexmark/html/HtmlWriter.text:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     207: checkcast     #195                // class com/vladsch/flexmark/html/HtmlWriter
     210: ldc_w         #381                // String /a
     213: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     216: pop
     217: return

  private void render(com.vladsch.flexmark.ast.Image, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_2
       1: invokeinterface #366,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.isDoNotRenderLinks:()Z
       6: ifne          219
       9: new           #382                // class com/vladsch/flexmark/ast/util/TextCollectingVisitor
      12: dup
      13: invokespecial #383                // Method com/vladsch/flexmark/ast/util/TextCollectingVisitor."<init>":()V
      16: aload_1
      17: invokevirtual #384                // Method com/vladsch/flexmark/ast/util/TextCollectingVisitor.collectAndGetText:(Lcom/vladsch/flexmark/ast/Node;)Ljava/lang/String;
      20: astore        4
      22: aload_2
      23: getstatic     #385                // Field com/vladsch/flexmark/html/renderer/LinkType.IMAGE:Lcom/vladsch/flexmark/html/renderer/LinkType;
      26: aload_1
      27: invokevirtual #386                // Method com/vladsch/flexmark/ast/Image.getUrl:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      30: invokeinterface #204,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.unescape:()Ljava/lang/String;
      35: aconst_null
      36: aconst_null
      37: invokeinterface #387,  5          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.resolveLink:(Lcom/vladsch/flexmark/html/renderer/LinkType;Ljava/lang/CharSequence;Lcom/vladsch/flexmark/util/html/Attributes;Ljava/lang/Boolean;)Lcom/vladsch/flexmark/html/renderer/ResolvedLink;
      42: astore        5
      44: aload         5
      46: invokevirtual #370                // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getUrl:()Ljava/lang/String;
      49: astore        6
      51: aload_1
      52: invokevirtual #388                // Method com/vladsch/flexmark/ast/Image.getUrlContent:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      55: invokeinterface #389,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.isEmpty:()Z
      60: ifne          121
      63: aload_1
      64: invokevirtual #388                // Method com/vladsch/flexmark/ast/Image.getUrlContent:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      67: invokestatic  #390                // Method com/vladsch/flexmark/util/html/Escaping.percentEncodeUrl:(Ljava/lang/CharSequence;)Ljava/lang/String;
      70: ldc_w         #391                // String +
      73: ldc_w         #392                // String %2B
      76: invokevirtual #393                // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      79: ldc_w         #394                // String %3D
      82: ldc_w         #395                // String =
      85: invokevirtual #393                // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      88: ldc_w         #396                // String %26
      91: ldc_w         #397                // String &amp;
      94: invokevirtual #393                // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      97: astore        7
      99: new           #173                // class java/lang/StringBuilder
     102: dup
     103: invokespecial #174                // Method java/lang/StringBuilder."<init>":()V
     106: aload         6
     108: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload         7
     113: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: invokevirtual #179                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: astore        6
     121: aload_3
     122: ldc_w         #398                // String src
     125: aload         6
     127: invokevirtual #168                // Method com/vladsch/flexmark/html/HtmlWriter.attr:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     130: pop
     131: aload_3
     132: ldc_w         #399                // String alt
     135: aload         4
     137: invokevirtual #168                // Method com/vladsch/flexmark/html/HtmlWriter.attr:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     140: pop
     141: aload_1
     142: invokevirtual #400                // Method com/vladsch/flexmark/ast/Image.getTitle:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     145: invokeinterface #198,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.isNotNull:()Z
     150: ifeq          177
     153: aload         5
     155: invokevirtual #401                // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getNonNullAttributes:()Lcom/vladsch/flexmark/util/html/Attributes;
     158: ldc_w         #402                // String title
     161: aload_1
     162: invokevirtual #400                // Method com/vladsch/flexmark/ast/Image.getTitle:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     165: invokeinterface #204,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.unescape:()Ljava/lang/String;
     170: invokevirtual #403                // Method com/vladsch/flexmark/util/html/Attributes.replaceValue:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/Attribute;
     173: pop
     174: goto          189
     177: aload         5
     179: invokevirtual #401                // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getNonNullAttributes:()Lcom/vladsch/flexmark/util/html/Attributes;
     182: ldc_w         #402                // String title
     185: invokevirtual #404                // Method com/vladsch/flexmark/util/html/Attributes.remove:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/Attribute;
     188: pop
     189: aload_3
     190: aload         5
     192: invokevirtual #405                // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getAttributes:()Lcom/vladsch/flexmark/util/html/Attributes;
     195: invokevirtual #406                // Method com/vladsch/flexmark/html/HtmlWriter.attr:(Lcom/vladsch/flexmark/util/html/Attributes;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     198: pop
     199: aload_3
     200: aload_1
     201: invokevirtual #407                // Method com/vladsch/flexmark/ast/Image.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     204: invokevirtual #171                // Method com/vladsch/flexmark/html/HtmlWriter.srcPos:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
     207: aload         5
     209: invokevirtual #374                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:(Lcom/vladsch/flexmark/html/renderer/ResolvedLink;)Lcom/vladsch/flexmark/html/HtmlWriter;
     212: ldc_w         #408                // String img
     215: invokevirtual #409                // Method com/vladsch/flexmark/html/HtmlWriter.tagVoid:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     218: pop
     219: return

  private void render(com.vladsch.flexmark.ast.Link, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_2
       1: invokeinterface #366,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.isDoNotRenderLinks:()Z
       6: ifeq          19
       9: aload_2
      10: aload_1
      11: invokeinterface #163,  2          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
      16: goto          151
      19: aload_2
      20: getstatic     #367                // Field com/vladsch/flexmark/html/renderer/LinkType.LINK:Lcom/vladsch/flexmark/html/renderer/LinkType;
      23: aload_1
      24: invokevirtual #410                // Method com/vladsch/flexmark/ast/Link.getUrl:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      27: invokeinterface #204,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.unescape:()Ljava/lang/String;
      32: aconst_null
      33: aconst_null
      34: invokeinterface #387,  5          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.resolveLink:(Lcom/vladsch/flexmark/html/renderer/LinkType;Ljava/lang/CharSequence;Lcom/vladsch/flexmark/util/html/Attributes;Ljava/lang/Boolean;)Lcom/vladsch/flexmark/html/renderer/ResolvedLink;
      39: astore        4
      41: aload_3
      42: ldc_w         #369                // String href
      45: aload         4
      47: invokevirtual #370                // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getUrl:()Ljava/lang/String;
      50: invokevirtual #168                // Method com/vladsch/flexmark/html/HtmlWriter.attr:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      53: pop
      54: aload_1
      55: invokevirtual #411                // Method com/vladsch/flexmark/ast/Link.getTitle:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      58: invokeinterface #198,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.isNotNull:()Z
      63: ifeq          90
      66: aload         4
      68: invokevirtual #401                // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getNonNullAttributes:()Lcom/vladsch/flexmark/util/html/Attributes;
      71: ldc_w         #402                // String title
      74: aload_1
      75: invokevirtual #411                // Method com/vladsch/flexmark/ast/Link.getTitle:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      78: invokeinterface #204,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.unescape:()Ljava/lang/String;
      83: invokevirtual #403                // Method com/vladsch/flexmark/util/html/Attributes.replaceValue:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/Attribute;
      86: pop
      87: goto          102
      90: aload         4
      92: invokevirtual #401                // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getNonNullAttributes:()Lcom/vladsch/flexmark/util/html/Attributes;
      95: ldc_w         #402                // String title
      98: invokevirtual #404                // Method com/vladsch/flexmark/util/html/Attributes.remove:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/Attribute;
     101: pop
     102: aload_3
     103: aload         4
     105: invokevirtual #405                // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getAttributes:()Lcom/vladsch/flexmark/util/html/Attributes;
     108: invokevirtual #406                // Method com/vladsch/flexmark/html/HtmlWriter.attr:(Lcom/vladsch/flexmark/util/html/Attributes;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     111: pop
     112: aload_3
     113: aload_1
     114: invokevirtual #412                // Method com/vladsch/flexmark/ast/Link.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     117: invokevirtual #171                // Method com/vladsch/flexmark/html/HtmlWriter.srcPos:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
     120: aload         4
     122: invokevirtual #374                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:(Lcom/vladsch/flexmark/html/renderer/ResolvedLink;)Lcom/vladsch/flexmark/html/HtmlWriter;
     125: ldc_w         #375                // String a
     128: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     131: pop
     132: aload_0
     133: aload_1
     134: aload_1
     135: invokevirtual #413                // Method com/vladsch/flexmark/ast/Link.getText:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     138: aload_2
     139: aload_3
     140: invokespecial #414                // Method renderChildrenSourceLineWrapped:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
     143: aload_3
     144: ldc_w         #381                // String /a
     147: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     150: pop
     151: return

  private void renderChildrenSourceLineWrapped(com.vladsch.flexmark.ast.Node, com.vladsch.flexmark.util.sequence.BasedSequence, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_3
       1: invokeinterface #164,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
       6: getfield      #169                // Field com/vladsch/flexmark/html/HtmlRendererOptions.sourcePositionParagraphLines:Z
       9: ifeq          69
      12: aload_2
      13: ldc_w         #307                // String \r\n
      16: invokeinterface #415,  2          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.indexOfAny:(Ljava/lang/CharSequence;)I
      21: iflt          69
      24: aload_0
      25: getfield      #57                 // Field myNextLine:I
      28: ifle          41
      31: aload_0
      32: dup
      33: getfield      #57                 // Field myNextLine:I
      36: iconst_1
      37: isub
      38: putfield      #57                 // Field myNextLine:I
      41: aload_0
      42: aload_1
      43: aload_1
      44: aload_1
      45: aload         4
      47: invokespecial #257                // Method outputSourceLineSpan:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/html/HtmlWriter;)V
      50: aload_3
      51: aload_1
      52: invokeinterface #163,  2          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
      57: aload         4
      59: ldc_w         #258                // String /span
      62: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
      65: pop
      66: goto          76
      69: aload_3
      70: aload_1
      71: invokeinterface #163,  2          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
      76: return

  private void render(com.vladsch.flexmark.ast.ImageRef, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aconst_null
       1: astore        4
       3: aload_1
       4: invokevirtual #416                // Method com/vladsch/flexmark/ast/ImageRef.isDefined:()Z
       7: ifne          33
      10: aload_0
      11: getfield      #46                 // Field recheckUndefinedReferences:Z
      14: ifeq          33
      17: aload_1
      18: aload_0
      19: getfield      #39                 // Field referenceRepository:Lcom/vladsch/flexmark/ast/util/ReferenceRepository;
      22: invokevirtual #417                // Method com/vladsch/flexmark/ast/ImageRef.getReferenceNode:(Lcom/vladsch/flexmark/ast/util/ReferenceRepository;)Lcom/vladsch/flexmark/ast/Reference;
      25: ifnull        33
      28: aload_1
      29: iconst_1
      30: invokevirtual #418                // Method com/vladsch/flexmark/ast/ImageRef.setDefined:(Z)V
      33: aload_1
      34: invokevirtual #416                // Method com/vladsch/flexmark/ast/ImageRef.isDefined:()Z
      37: ifeq          130
      40: aload_1
      41: aload_0
      42: getfield      #39                 // Field referenceRepository:Lcom/vladsch/flexmark/ast/util/ReferenceRepository;
      45: invokevirtual #417                // Method com/vladsch/flexmark/ast/ImageRef.getReferenceNode:(Lcom/vladsch/flexmark/ast/util/ReferenceRepository;)Lcom/vladsch/flexmark/ast/Reference;
      48: astore        5
      50: aload         5
      52: invokevirtual #419                // Method com/vladsch/flexmark/ast/Reference.getUrl:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      55: invokeinterface #204,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.unescape:()Ljava/lang/String;
      60: astore        6
      62: aload_2
      63: getstatic     #385                // Field com/vladsch/flexmark/html/renderer/LinkType.IMAGE:Lcom/vladsch/flexmark/html/renderer/LinkType;
      66: aload         6
      68: aconst_null
      69: aconst_null
      70: invokeinterface #387,  5          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.resolveLink:(Lcom/vladsch/flexmark/html/renderer/LinkType;Ljava/lang/CharSequence;Lcom/vladsch/flexmark/util/html/Attributes;Ljava/lang/Boolean;)Lcom/vladsch/flexmark/html/renderer/ResolvedLink;
      75: astore        4
      77: aload         5
      79: invokevirtual #420                // Method com/vladsch/flexmark/ast/Reference.getTitle:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      82: invokeinterface #198,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.isNotNull:()Z
      87: ifeq          115
      90: aload         4
      92: invokevirtual #401                // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getNonNullAttributes:()Lcom/vladsch/flexmark/util/html/Attributes;
      95: ldc_w         #402                // String title
      98: aload         5
     100: invokevirtual #420                // Method com/vladsch/flexmark/ast/Reference.getTitle:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     103: invokeinterface #204,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.unescape:()Ljava/lang/String;
     108: invokevirtual #403                // Method com/vladsch/flexmark/util/html/Attributes.replaceValue:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/Attribute;
     111: pop
     112: goto          127
     115: aload         4
     117: invokevirtual #401                // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getNonNullAttributes:()Lcom/vladsch/flexmark/util/html/Attributes;
     120: ldc_w         #402                // String title
     123: invokevirtual #404                // Method com/vladsch/flexmark/util/html/Attributes.remove:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/Attribute;
     126: pop
     127: goto          172
     130: aload_0
     131: getfield      #39                 // Field referenceRepository:Lcom/vladsch/flexmark/ast/util/ReferenceRepository;
     134: aload_1
     135: invokevirtual #421                // Method com/vladsch/flexmark/ast/ImageRef.getReference:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     138: invokevirtual #422                // Method com/vladsch/flexmark/ast/util/ReferenceRepository.normalizeKey:(Ljava/lang/CharSequence;)Ljava/lang/String;
     141: astore        5
     143: aload_2
     144: getstatic     #423                // Field com/vladsch/flexmark/html/renderer/LinkType.IMAGE_REF:Lcom/vladsch/flexmark/html/renderer/LinkType;
     147: aload         5
     149: aconst_null
     150: aconst_null
     151: invokeinterface #387,  5          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.resolveLink:(Lcom/vladsch/flexmark/html/renderer/LinkType;Ljava/lang/CharSequence;Lcom/vladsch/flexmark/util/html/Attributes;Ljava/lang/Boolean;)Lcom/vladsch/flexmark/html/renderer/ResolvedLink;
     156: astore        4
     158: aload         4
     160: invokevirtual #424                // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getStatus:()Lcom/vladsch/flexmark/html/renderer/LinkStatus;
     163: getstatic     #425                // Field com/vladsch/flexmark/html/renderer/LinkStatus.UNKNOWN:Lcom/vladsch/flexmark/html/renderer/LinkStatus;
     166: if_acmpne     172
     169: aconst_null
     170: astore        4
     172: aload         4
     174: ifnonnull     194
     177: aload_3
     178: aload_1
     179: invokevirtual #426                // Method com/vladsch/flexmark/ast/ImageRef.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     182: invokeinterface #204,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.unescape:()Ljava/lang/String;
     187: invokevirtual #214                // Method com/vladsch/flexmark/html/HtmlWriter.text:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     190: pop
     191: goto          269
     194: aload_2
     195: invokeinterface #366,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.isDoNotRenderLinks:()Z
     200: ifne          269
     203: new           #382                // class com/vladsch/flexmark/ast/util/TextCollectingVisitor
     206: dup
     207: invokespecial #383                // Method com/vladsch/flexmark/ast/util/TextCollectingVisitor."<init>":()V
     210: aload_1
     211: invokevirtual #384                // Method com/vladsch/flexmark/ast/util/TextCollectingVisitor.collectAndGetText:(Lcom/vladsch/flexmark/ast/Node;)Ljava/lang/String;
     214: astore        5
     216: aload_3
     217: ldc_w         #398                // String src
     220: aload         4
     222: invokevirtual #370                // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getUrl:()Ljava/lang/String;
     225: invokevirtual #168                // Method com/vladsch/flexmark/html/HtmlWriter.attr:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     228: pop
     229: aload_3
     230: ldc_w         #399                // String alt
     233: aload         5
     235: invokevirtual #168                // Method com/vladsch/flexmark/html/HtmlWriter.attr:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     238: pop
     239: aload_3
     240: aload         4
     242: invokevirtual #405                // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getAttributes:()Lcom/vladsch/flexmark/util/html/Attributes;
     245: invokevirtual #406                // Method com/vladsch/flexmark/html/HtmlWriter.attr:(Lcom/vladsch/flexmark/util/html/Attributes;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     248: pop
     249: aload_3
     250: aload_1
     251: invokevirtual #426                // Method com/vladsch/flexmark/ast/ImageRef.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     254: invokevirtual #171                // Method com/vladsch/flexmark/html/HtmlWriter.srcPos:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
     257: aload         4
     259: invokevirtual #374                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:(Lcom/vladsch/flexmark/html/renderer/ResolvedLink;)Lcom/vladsch/flexmark/html/HtmlWriter;
     262: ldc_w         #408                // String img
     265: invokevirtual #409                // Method com/vladsch/flexmark/html/HtmlWriter.tagVoid:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     268: pop
     269: return

  private void render(com.vladsch.flexmark.ast.LinkRef, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aconst_null
       1: astore        4
       3: aload_1
       4: invokevirtual #427                // Method com/vladsch/flexmark/ast/LinkRef.isDefined:()Z
       7: ifne          33
      10: aload_0
      11: getfield      #46                 // Field recheckUndefinedReferences:Z
      14: ifeq          33
      17: aload_1
      18: aload_0
      19: getfield      #39                 // Field referenceRepository:Lcom/vladsch/flexmark/ast/util/ReferenceRepository;
      22: invokevirtual #428                // Method com/vladsch/flexmark/ast/LinkRef.getReferenceNode:(Lcom/vladsch/flexmark/ast/util/ReferenceRepository;)Lcom/vladsch/flexmark/ast/Reference;
      25: ifnull        33
      28: aload_1
      29: iconst_1
      30: invokevirtual #429                // Method com/vladsch/flexmark/ast/LinkRef.setDefined:(Z)V
      33: aload_1
      34: invokevirtual #427                // Method com/vladsch/flexmark/ast/LinkRef.isDefined:()Z
      37: ifeq          130
      40: aload_1
      41: aload_0
      42: getfield      #39                 // Field referenceRepository:Lcom/vladsch/flexmark/ast/util/ReferenceRepository;
      45: invokevirtual #428                // Method com/vladsch/flexmark/ast/LinkRef.getReferenceNode:(Lcom/vladsch/flexmark/ast/util/ReferenceRepository;)Lcom/vladsch/flexmark/ast/Reference;
      48: astore        5
      50: aload         5
      52: invokevirtual #419                // Method com/vladsch/flexmark/ast/Reference.getUrl:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      55: invokeinterface #204,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.unescape:()Ljava/lang/String;
      60: astore        6
      62: aload_2
      63: getstatic     #367                // Field com/vladsch/flexmark/html/renderer/LinkType.LINK:Lcom/vladsch/flexmark/html/renderer/LinkType;
      66: aload         6
      68: aconst_null
      69: aconst_null
      70: invokeinterface #387,  5          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.resolveLink:(Lcom/vladsch/flexmark/html/renderer/LinkType;Ljava/lang/CharSequence;Lcom/vladsch/flexmark/util/html/Attributes;Ljava/lang/Boolean;)Lcom/vladsch/flexmark/html/renderer/ResolvedLink;
      75: astore        4
      77: aload         5
      79: invokevirtual #420                // Method com/vladsch/flexmark/ast/Reference.getTitle:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
      82: invokeinterface #198,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.isNotNull:()Z
      87: ifeq          115
      90: aload         4
      92: invokevirtual #401                // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getNonNullAttributes:()Lcom/vladsch/flexmark/util/html/Attributes;
      95: ldc_w         #402                // String title
      98: aload         5
     100: invokevirtual #420                // Method com/vladsch/flexmark/ast/Reference.getTitle:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     103: invokeinterface #204,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.unescape:()Ljava/lang/String;
     108: invokevirtual #403                // Method com/vladsch/flexmark/util/html/Attributes.replaceValue:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/Attribute;
     111: pop
     112: goto          127
     115: aload         4
     117: invokevirtual #401                // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getNonNullAttributes:()Lcom/vladsch/flexmark/util/html/Attributes;
     120: ldc_w         #402                // String title
     123: invokevirtual #404                // Method com/vladsch/flexmark/util/html/Attributes.remove:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/Attribute;
     126: pop
     127: goto          170
     130: aload_1
     131: invokevirtual #430                // Method com/vladsch/flexmark/ast/LinkRef.getReference:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     134: invokeinterface #204,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.unescape:()Ljava/lang/String;
     139: astore        5
     141: aload_2
     142: getstatic     #431                // Field com/vladsch/flexmark/html/renderer/LinkType.LINK_REF:Lcom/vladsch/flexmark/html/renderer/LinkType;
     145: aload         5
     147: aconst_null
     148: aconst_null
     149: invokeinterface #387,  5          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.resolveLink:(Lcom/vladsch/flexmark/html/renderer/LinkType;Ljava/lang/CharSequence;Lcom/vladsch/flexmark/util/html/Attributes;Ljava/lang/Boolean;)Lcom/vladsch/flexmark/html/renderer/ResolvedLink;
     154: astore        4
     156: aload         4
     158: invokevirtual #424                // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getStatus:()Lcom/vladsch/flexmark/html/renderer/LinkStatus;
     161: getstatic     #425                // Field com/vladsch/flexmark/html/renderer/LinkStatus.UNKNOWN:Lcom/vladsch/flexmark/html/renderer/LinkStatus;
     164: if_acmpne     170
     167: aconst_null
     168: astore        4
     170: aload         4
     172: ifnonnull     280
     175: getstatic     #432                // Field $assertionsDisabled:Z
     178: ifne          196
     181: aload_1
     182: invokevirtual #427                // Method com/vladsch/flexmark/ast/LinkRef.isDefined:()Z
     185: ifeq          196
     188: new           #433                // class java/lang/AssertionError
     191: dup
     192: invokespecial #434                // Method java/lang/AssertionError."<init>":()V
     195: athrow
     196: aload_1
     197: invokevirtual #435                // Method com/vladsch/flexmark/ast/LinkRef.hasChildren:()Z
     200: ifne          220
     203: aload_3
     204: aload_1
     205: invokevirtual #436                // Method com/vladsch/flexmark/ast/LinkRef.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     208: invokeinterface #204,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.unescape:()Ljava/lang/String;
     213: invokevirtual #214                // Method com/vladsch/flexmark/html/HtmlWriter.text:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     216: pop
     217: goto          361
     220: aload_3
     221: aload_1
     222: invokevirtual #436                // Method com/vladsch/flexmark/ast/LinkRef.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     225: aload_1
     226: invokevirtual #437                // Method com/vladsch/flexmark/ast/LinkRef.getChildChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     229: invokeinterface #438,  2          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.prefixOf:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     234: invokeinterface #204,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.unescape:()Ljava/lang/String;
     239: invokevirtual #214                // Method com/vladsch/flexmark/html/HtmlWriter.text:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     242: pop
     243: aload_0
     244: aload_1
     245: aload_1
     246: invokevirtual #439                // Method com/vladsch/flexmark/ast/LinkRef.getText:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     249: aload_2
     250: aload_3
     251: invokespecial #414                // Method renderChildrenSourceLineWrapped:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
     254: aload_3
     255: aload_1
     256: invokevirtual #436                // Method com/vladsch/flexmark/ast/LinkRef.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     259: aload_1
     260: invokevirtual #437                // Method com/vladsch/flexmark/ast/LinkRef.getChildChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     263: invokeinterface #440,  2          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.suffixOf:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     268: invokeinterface #204,  1          // InterfaceMethod com/vladsch/flexmark/util/sequence/BasedSequence.unescape:()Ljava/lang/String;
     273: invokevirtual #214                // Method com/vladsch/flexmark/html/HtmlWriter.text:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     276: pop
     277: goto          361
     280: aload_2
     281: invokeinterface #366,  1          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.isDoNotRenderLinks:()Z
     286: ifeq          299
     289: aload_2
     290: aload_1
     291: invokeinterface #163,  2          // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererContext.renderChildren:(Lcom/vladsch/flexmark/ast/Node;)V
     296: goto          361
     299: aload_3
     300: ldc_w         #369                // String href
     303: aload         4
     305: invokevirtual #370                // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getUrl:()Ljava/lang/String;
     308: invokevirtual #168                // Method com/vladsch/flexmark/html/HtmlWriter.attr:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     311: pop
     312: aload_3
     313: aload         4
     315: invokevirtual #405                // Method com/vladsch/flexmark/html/renderer/ResolvedLink.getAttributes:()Lcom/vladsch/flexmark/util/html/Attributes;
     318: invokevirtual #406                // Method com/vladsch/flexmark/html/HtmlWriter.attr:(Lcom/vladsch/flexmark/util/html/Attributes;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     321: pop
     322: aload_3
     323: aload_1
     324: invokevirtual #436                // Method com/vladsch/flexmark/ast/LinkRef.getChars:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     327: invokevirtual #171                // Method com/vladsch/flexmark/html/HtmlWriter.srcPos:(Lcom/vladsch/flexmark/util/sequence/BasedSequence;)Lcom/vladsch/flexmark/html/HtmlWriter;
     330: aload         4
     332: invokevirtual #374                // Method com/vladsch/flexmark/html/HtmlWriter.withAttr:(Lcom/vladsch/flexmark/html/renderer/ResolvedLink;)Lcom/vladsch/flexmark/html/HtmlWriter;
     335: ldc_w         #375                // String a
     338: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     341: pop
     342: aload_0
     343: aload_1
     344: aload_1
     345: invokevirtual #439                // Method com/vladsch/flexmark/ast/LinkRef.getText:()Lcom/vladsch/flexmark/util/sequence/BasedSequence;
     348: aload_2
     349: aload_3
     350: invokespecial #414                // Method renderChildrenSourceLineWrapped:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/util/sequence/BasedSequence;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
     353: aload_3
     354: ldc_w         #381                // String /a
     357: invokevirtual #194                // Method com/vladsch/flexmark/html/HtmlWriter.tag:(Ljava/lang/CharSequence;)Lcom/vladsch/flexmark/util/html/HtmlFormattingAppendableBase;
     360: pop
     361: return

  static void access$000(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.AutoLink, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #34                 // Method render:(Lcom/vladsch/flexmark/ast/AutoLink;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$100(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.BlockQuote, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #33                 // Method render:(Lcom/vladsch/flexmark/ast/BlockQuote;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$200(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.BulletList, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #32                 // Method render:(Lcom/vladsch/flexmark/ast/BulletList;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$300(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.Code, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #31                 // Method render:(Lcom/vladsch/flexmark/ast/Code;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$400(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.CodeBlock, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #30                 // Method render:(Lcom/vladsch/flexmark/ast/CodeBlock;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$500(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.Document, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #29                 // Method render:(Lcom/vladsch/flexmark/ast/Document;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$600(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.Emphasis, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #28                 // Method render:(Lcom/vladsch/flexmark/ast/Emphasis;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$700(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.FencedCodeBlock, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #27                 // Method render:(Lcom/vladsch/flexmark/ast/FencedCodeBlock;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$800(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.HardLineBreak, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #26                 // Method render:(Lcom/vladsch/flexmark/ast/HardLineBreak;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$900(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.Heading, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #25                 // Method render:(Lcom/vladsch/flexmark/ast/Heading;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$1000(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.HtmlBlock, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #24                 // Method render:(Lcom/vladsch/flexmark/ast/HtmlBlock;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$1100(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.HtmlCommentBlock, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #23                 // Method render:(Lcom/vladsch/flexmark/ast/HtmlCommentBlock;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$1200(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.HtmlInnerBlock, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #22                 // Method render:(Lcom/vladsch/flexmark/ast/HtmlInnerBlock;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$1300(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.HtmlInnerBlockComment, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #21                 // Method render:(Lcom/vladsch/flexmark/ast/HtmlInnerBlockComment;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$1400(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.HtmlEntity, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #20                 // Method render:(Lcom/vladsch/flexmark/ast/HtmlEntity;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$1500(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.HtmlInline, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #19                 // Method render:(Lcom/vladsch/flexmark/ast/HtmlInline;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$1600(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.HtmlInlineComment, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #18                 // Method render:(Lcom/vladsch/flexmark/ast/HtmlInlineComment;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$1700(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.Image, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #17                 // Method render:(Lcom/vladsch/flexmark/ast/Image;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$1800(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.ImageRef, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #16                 // Method render:(Lcom/vladsch/flexmark/ast/ImageRef;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$1900(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.IndentedCodeBlock, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #15                 // Method render:(Lcom/vladsch/flexmark/ast/IndentedCodeBlock;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$2000(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.Link, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #14                 // Method render:(Lcom/vladsch/flexmark/ast/Link;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$2100(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.LinkRef, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #13                 // Method render:(Lcom/vladsch/flexmark/ast/LinkRef;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$2200(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.BulletListItem, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #12                 // Method render:(Lcom/vladsch/flexmark/ast/BulletListItem;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$2300(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.OrderedListItem, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #11                 // Method render:(Lcom/vladsch/flexmark/ast/OrderedListItem;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$2400(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.MailLink, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #10                 // Method render:(Lcom/vladsch/flexmark/ast/MailLink;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$2500(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.OrderedList, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #9                  // Method render:(Lcom/vladsch/flexmark/ast/OrderedList;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$2600(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.Paragraph, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #8                  // Method render:(Lcom/vladsch/flexmark/ast/Paragraph;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$2700(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.Reference, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #7                  // Method render:(Lcom/vladsch/flexmark/ast/Reference;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$2800(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.SoftLineBreak, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #6                  // Method render:(Lcom/vladsch/flexmark/ast/SoftLineBreak;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$2900(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.StrongEmphasis, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #5                  // Method render:(Lcom/vladsch/flexmark/ast/StrongEmphasis;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$3000(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.Text, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #4                  // Method render:(Lcom/vladsch/flexmark/ast/Text;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$3100(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.TextBase, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #3                  // Method render:(Lcom/vladsch/flexmark/ast/TextBase;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static void access$3200(com.vladsch.flexmark.html.renderer.CoreNodeRenderer, com.vladsch.flexmark.ast.ThematicBreak, com.vladsch.flexmark.html.renderer.NodeRendererContext, com.vladsch.flexmark.html.HtmlWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #2                  // Method render:(Lcom/vladsch/flexmark/ast/ThematicBreak;Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;Lcom/vladsch/flexmark/html/HtmlWriter;)V
       7: return

  static {};
    Code:
       0: ldc_w         #441                // class com/vladsch/flexmark/html/renderer/CoreNodeRenderer
       3: invokevirtual #442                // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #432                // Field $assertionsDisabled:Z
      17: new           #443                // class com/vladsch/flexmark/html/renderer/AttributablePart
      20: dup
      21: ldc_w         #444                // String LOOSE_LIST_ITEM
      24: invokespecial #445                // Method com/vladsch/flexmark/html/renderer/AttributablePart."<init>":(Ljava/lang/String;)V
      27: putstatic     #248                // Field LOOSE_LIST_ITEM:Lcom/vladsch/flexmark/html/renderer/AttributablePart;
      30: new           #443                // class com/vladsch/flexmark/html/renderer/AttributablePart
      33: dup
      34: ldc_w         #446                // String TIGHT_LIST_ITEM
      37: invokespecial #445                // Method com/vladsch/flexmark/html/renderer/AttributablePart."<init>":(Ljava/lang/String;)V
      40: putstatic     #243                // Field TIGHT_LIST_ITEM:Lcom/vladsch/flexmark/html/renderer/AttributablePart;
      43: new           #443                // class com/vladsch/flexmark/html/renderer/AttributablePart
      46: dup
      47: ldc_w         #447                // String PARAGRAPH_LINE
      50: invokespecial #445                // Method com/vladsch/flexmark/html/renderer/AttributablePart."<init>":(Ljava/lang/String;)V
      53: putstatic     #278                // Field PARAGRAPH_LINE:Lcom/vladsch/flexmark/html/renderer/AttributablePart;
      56: new           #443                // class com/vladsch/flexmark/html/renderer/AttributablePart
      59: dup
      60: ldc_w         #448                // String FENCED_CODE_CONTENT
      63: invokespecial #445                // Method com/vladsch/flexmark/html/renderer/AttributablePart."<init>":(Ljava/lang/String;)V
      66: putstatic     #210                // Field CODE_CONTENT:Lcom/vladsch/flexmark/html/renderer/AttributablePart;
      69: return
}
