Compiled from "HtmlRenderer.java"
class com.vladsch.flexmark.html.HtmlRenderer$MainNodeRenderer$SubNodeRenderer extends com.vladsch.flexmark.html.NodeRendererSubContext implements com.vladsch.flexmark.html.renderer.NodeRendererContext {
  private final com.vladsch.flexmark.html.HtmlRenderer$MainNodeRenderer myMainNodeRenderer;

  final com.vladsch.flexmark.html.HtmlRenderer$MainNodeRenderer this$1;

  public com.vladsch.flexmark.html.HtmlRenderer$MainNodeRenderer$SubNodeRenderer(com.vladsch.flexmark.html.HtmlRenderer$MainNodeRenderer, com.vladsch.flexmark.html.HtmlRenderer$MainNodeRenderer, com.vladsch.flexmark.html.HtmlWriter, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;
       5: aload_0
       6: aload_3
       7: invokespecial #2                  // Method com/vladsch/flexmark/html/NodeRendererSubContext."<init>":(Lcom/vladsch/flexmark/html/HtmlWriter;)V
      10: aload_0
      11: aload_2
      12: putfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;
      15: aload_0
      16: aload_2
      17: invokevirtual #4                  // Method com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
      20: getfield      #5                  // Field com/vladsch/flexmark/html/HtmlRendererOptions.doNotRenderLinksInDocument:Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: putfield      #6                  // Field doNotRenderLinksNesting:I
      34: iload         4
      36: ifeq          55
      39: aload_0
      40: aload_2
      41: getfield      #7                  // Field com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer.renderingNode:Lcom/vladsch/flexmark/ast/Node;
      44: putfield      #8                  // Field renderingNode:Lcom/vladsch/flexmark/ast/Node;
      47: aload_0
      48: aload_2
      49: getfield      #9                  // Field com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer.renderingHandlerWrapper:Lcom/vladsch/flexmark/html/NodeRenderingHandlerWrapper;
      52: putfield      #10                 // Field renderingHandlerWrapper:Lcom/vladsch/flexmark/html/NodeRenderingHandlerWrapper;
      55: return

  public java.lang.String getNodeId(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;
       4: aload_1
       5: invokevirtual #11                 // Method com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer.getNodeId:(Lcom/vladsch/flexmark/ast/Node;)Ljava/lang/String;
       8: areturn

  public com.vladsch.flexmark.util.options.DataHolder getOptions();
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;
       4: invokevirtual #12                 // Method com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer.getOptions:()Lcom/vladsch/flexmark/util/options/DataHolder;
       7: areturn

  public com.vladsch.flexmark.html.HtmlRendererOptions getHtmlOptions();
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;
       4: invokevirtual #4                  // Method com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer.getHtmlOptions:()Lcom/vladsch/flexmark/html/HtmlRendererOptions;
       7: areturn

  public com.vladsch.flexmark.ast.Document getDocument();
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;
       4: invokevirtual #13                 // Method com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer.getDocument:()Lcom/vladsch/flexmark/ast/Document;
       7: areturn

  public com.vladsch.flexmark.html.renderer.RenderingPhase getRenderingPhase();
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;
       4: invokevirtual #14                 // Method com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer.getRenderingPhase:()Lcom/vladsch/flexmark/html/renderer/RenderingPhase;
       7: areturn

  public java.lang.String encodeUrl(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;
       4: aload_1
       5: invokevirtual #15                 // Method com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer.encodeUrl:(Ljava/lang/CharSequence;)Ljava/lang/String;
       8: areturn

  public com.vladsch.flexmark.util.html.Attributes extendRenderingNodeAttributes(com.vladsch.flexmark.html.renderer.AttributablePart, com.vladsch.flexmark.util.html.Attributes);
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;
       4: aload_1
       5: aload_2
       6: invokevirtual #16                 // Method com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer.extendRenderingNodeAttributes:(Lcom/vladsch/flexmark/html/renderer/AttributablePart;Lcom/vladsch/flexmark/util/html/Attributes;)Lcom/vladsch/flexmark/util/html/Attributes;
       9: areturn

  public void render(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;
       4: aload_1
       5: aload_0
       6: invokevirtual #17                 // Method com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer.renderNode:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/html/NodeRendererSubContext;)V
       9: return

  public void delegateRender();
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;
       4: aload_0
       5: invokevirtual #18                 // Method com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer.renderByPreviousHandler:(Lcom/vladsch/flexmark/html/NodeRendererSubContext;)V
       8: return

  public com.vladsch.flexmark.ast.Node getCurrentNode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;
       4: invokevirtual #19                 // Method com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer.getCurrentNode:()Lcom/vladsch/flexmark/ast/Node;
       7: areturn

  public com.vladsch.flexmark.html.renderer.ResolvedLink resolveLink(com.vladsch.flexmark.html.renderer.LinkType, java.lang.CharSequence, java.lang.Boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #20                 // Method com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer.resolveLink:(Lcom/vladsch/flexmark/html/renderer/LinkType;Ljava/lang/CharSequence;Ljava/lang/Boolean;)Lcom/vladsch/flexmark/html/renderer/ResolvedLink;
      10: areturn

  public com.vladsch.flexmark.html.renderer.ResolvedLink resolveLink(com.vladsch.flexmark.html.renderer.LinkType, java.lang.CharSequence, com.vladsch.flexmark.util.html.Attributes, java.lang.Boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #21                 // Method com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer.resolveLink:(Lcom/vladsch/flexmark/html/renderer/LinkType;Ljava/lang/CharSequence;Lcom/vladsch/flexmark/util/html/Attributes;Ljava/lang/Boolean;)Lcom/vladsch/flexmark/html/renderer/ResolvedLink;
      12: areturn

  public com.vladsch.flexmark.html.renderer.NodeRendererContext getSubContext(java.lang.Appendable, boolean);
    Code:
       0: new           #22                 // class com/vladsch/flexmark/html/HtmlWriter
       3: dup
       4: aload_0
       5: getfield      #23                 // Field htmlWriter:Lcom/vladsch/flexmark/html/HtmlWriter;
       8: aload_1
       9: iload_2
      10: invokespecial #24                 // Method com/vladsch/flexmark/html/HtmlWriter."<init>":(Lcom/vladsch/flexmark/html/HtmlWriter;Ljava/lang/Appendable;Z)V
      13: astore_3
      14: aload_3
      15: aload_0
      16: invokevirtual #25                 // Method com/vladsch/flexmark/html/HtmlWriter.setContext:(Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;)V
      19: new           #26                 // class com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer$SubNodeRenderer
      22: dup
      23: aload_0
      24: getfield      #1                  // Field this$1:Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;
      27: aload_0
      28: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;
      31: aload_3
      32: iconst_0
      33: invokespecial #27                 // Method "<init>":(Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;Lcom/vladsch/flexmark/html/HtmlWriter;Z)V
      36: areturn

  public com.vladsch.flexmark.html.renderer.NodeRendererContext getDelegatedSubContext(java.lang.Appendable, boolean);
    Code:
       0: new           #22                 // class com/vladsch/flexmark/html/HtmlWriter
       3: dup
       4: aload_0
       5: getfield      #23                 // Field htmlWriter:Lcom/vladsch/flexmark/html/HtmlWriter;
       8: aload_1
       9: iload_2
      10: invokespecial #24                 // Method com/vladsch/flexmark/html/HtmlWriter."<init>":(Lcom/vladsch/flexmark/html/HtmlWriter;Ljava/lang/Appendable;Z)V
      13: astore_3
      14: aload_3
      15: aload_0
      16: invokevirtual #25                 // Method com/vladsch/flexmark/html/HtmlWriter.setContext:(Lcom/vladsch/flexmark/html/renderer/NodeRendererContext;)V
      19: new           #26                 // class com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer$SubNodeRenderer
      22: dup
      23: aload_0
      24: getfield      #1                  // Field this$1:Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;
      27: aload_0
      28: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;
      31: aload_3
      32: iconst_1
      33: invokespecial #27                 // Method "<init>":(Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;Lcom/vladsch/flexmark/html/HtmlWriter;Z)V
      36: areturn

  public void renderChildren(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_0
       1: getfield      #3                  // Field myMainNodeRenderer:Lcom/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer;
       4: aload_1
       5: aload_0
       6: invokevirtual #28                 // Method com/vladsch/flexmark/html/HtmlRenderer$MainNodeRenderer.renderChildrenNode:(Lcom/vladsch/flexmark/ast/Node;Lcom/vladsch/flexmark/html/NodeRendererSubContext;)V
       9: return

  public com.vladsch.flexmark.html.HtmlWriter getHtmlWriter();
    Code:
       0: aload_0
       1: getfield      #23                 // Field htmlWriter:Lcom/vladsch/flexmark/html/HtmlWriter;
       4: areturn

  protected int getDoNotRenderLinksNesting();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method com/vladsch/flexmark/html/NodeRendererSubContext.getDoNotRenderLinksNesting:()I
       4: ireturn

  public boolean isDoNotRenderLinks();
    Code:
       0: aload_0
       1: invokespecial #30                 // Method com/vladsch/flexmark/html/NodeRendererSubContext.isDoNotRenderLinks:()Z
       4: ireturn

  public void doNotRenderLinks(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #31                 // Method com/vladsch/flexmark/html/NodeRendererSubContext.doNotRenderLinks:(Z)V
       5: return

  public void doNotRenderLinks();
    Code:
       0: aload_0
       1: invokespecial #32                 // Method com/vladsch/flexmark/html/NodeRendererSubContext.doNotRenderLinks:()V
       4: return

  public void doRenderLinks();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method com/vladsch/flexmark/html/NodeRendererSubContext.doRenderLinks:()V
       4: return
}
