Compiled from "DelegatingNodeRendererFactoryWrapper.java"
class com.vladsch.flexmark.html.DelegatingNodeRendererFactoryWrapper implements com.vladsch.flexmark.util.ComputableFactory<com.vladsch.flexmark.html.renderer.NodeRenderer, com.vladsch.flexmark.util.options.DataHolder>, com.vladsch.flexmark.util.dependency.Dependent<com.vladsch.flexmark.html.DelegatingNodeRendererFactoryWrapper>, com.vladsch.flexmark.html.renderer.DelegatingNodeRendererFactory {
  private final com.vladsch.flexmark.html.renderer.NodeRendererFactory nodeRendererFactory;

  private java.util.List<com.vladsch.flexmark.html.DelegatingNodeRendererFactoryWrapper> nodeRenderers;

  private java.util.Set<java.lang.Class> myDelegates;

  public com.vladsch.flexmark.html.DelegatingNodeRendererFactoryWrapper(java.util.List<com.vladsch.flexmark.html.DelegatingNodeRendererFactoryWrapper>, com.vladsch.flexmark.html.renderer.NodeRendererFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field myDelegates:Ljava/util/Set;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field nodeRendererFactory:Lcom/vladsch/flexmark/html/renderer/NodeRendererFactory;
      14: aload_0
      15: aload_1
      16: putfield      #4                  // Field nodeRenderers:Ljava/util/List;
      19: return

  public com.vladsch.flexmark.html.renderer.NodeRenderer create(com.vladsch.flexmark.util.options.DataHolder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field nodeRendererFactory:Lcom/vladsch/flexmark/html/renderer/NodeRendererFactory;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod com/vladsch/flexmark/html/renderer/NodeRendererFactory.create:(Lcom/vladsch/flexmark/util/options/DataHolder;)Lcom/vladsch/flexmark/html/renderer/NodeRenderer;
      10: areturn

  public com.vladsch.flexmark.html.renderer.NodeRendererFactory getFactory();
    Code:
       0: aload_0
       1: getfield      #3                  // Field nodeRendererFactory:Lcom/vladsch/flexmark/html/renderer/NodeRendererFactory;
       4: areturn

  public java.util.Set<java.lang.Class<? extends com.vladsch.flexmark.html.renderer.NodeRendererFactory>> getDelegates();
    Code:
       0: aload_0
       1: getfield      #3                  // Field nodeRendererFactory:Lcom/vladsch/flexmark/html/renderer/NodeRendererFactory;
       4: instanceof    #6                  // class com/vladsch/flexmark/html/renderer/DelegatingNodeRendererFactory
       7: ifeq          25
      10: aload_0
      11: getfield      #3                  // Field nodeRendererFactory:Lcom/vladsch/flexmark/html/renderer/NodeRendererFactory;
      14: checkcast     #6                  // class com/vladsch/flexmark/html/renderer/DelegatingNodeRendererFactory
      17: invokeinterface #7,  1            // InterfaceMethod com/vladsch/flexmark/html/renderer/DelegatingNodeRendererFactory.getDelegates:()Ljava/util/Set;
      22: goto          26
      25: aconst_null
      26: areturn

  public final java.util.Set<? extends java.lang.Class> getAfterDependents();
    Code:
       0: aconst_null
       1: areturn

  public java.util.Set<? extends java.lang.Class> getBeforeDependents();
    Code:
       0: aload_0
       1: getfield      #2                  // Field myDelegates:Ljava/util/Set;
       4: ifnonnull     104
       7: aload_0
       8: getfield      #4                  // Field nodeRenderers:Ljava/util/List;
      11: ifnull        104
      14: aload_0
      15: invokevirtual #8                  // Method getDelegates:()Ljava/util/Set;
      18: astore_1
      19: aload_1
      20: ifnull        99
      23: aload_0
      24: new           #9                  // class java/util/HashSet
      27: dup
      28: invokespecial #10                 // Method java/util/HashSet."<init>":()V
      31: putfield      #2                  // Field myDelegates:Ljava/util/Set;
      34: aload_0
      35: getfield      #4                  // Field nodeRenderers:Ljava/util/List;
      38: invokeinterface #11,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      43: astore_2
      44: aload_2
      45: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifeq          99
      53: aload_2
      54: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: checkcast     #14                 // class com/vladsch/flexmark/html/DelegatingNodeRendererFactoryWrapper
      62: astore_3
      63: aload_1
      64: aload_3
      65: invokevirtual #15                 // Method getFactory:()Lcom/vladsch/flexmark/html/renderer/NodeRendererFactory;
      68: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      71: invokeinterface #17,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      76: ifeq          96
      79: aload_0
      80: getfield      #2                  // Field myDelegates:Ljava/util/Set;
      83: aload_3
      84: invokevirtual #15                 // Method getFactory:()Lcom/vladsch/flexmark/html/renderer/NodeRendererFactory;
      87: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      90: invokeinterface #18,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      95: pop
      96: goto          44
      99: aload_0
     100: aconst_null
     101: putfield      #4                  // Field nodeRenderers:Ljava/util/List;
     104: aload_0
     105: getfield      #2                  // Field myDelegates:Ljava/util/Set;
     108: areturn

  public final boolean affectsGlobalScope();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.Object create(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #19                 // class com/vladsch/flexmark/util/options/DataHolder
       5: invokevirtual #20                 // Method create:(Lcom/vladsch/flexmark/util/options/DataHolder;)Lcom/vladsch/flexmark/html/renderer/NodeRenderer;
       8: areturn
}
