Compiled from "HeaderIdGenerator.java"
public class com.vladsch.flexmark.html.renderer.HeaderIdGenerator implements com.vladsch.flexmark.html.renderer.HtmlIdGenerator {
  public com.vladsch.flexmark.html.renderer.HeaderIdGenerator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void generateIds(com.vladsch.flexmark.ast.Document);
    Code:
       0: new           #2                  // class java/util/HashMap
       3: dup
       4: invokespecial #3                  // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: getstatic     #4                  // Field com/vladsch/flexmark/html/HtmlRenderer.HEADER_ID_GENERATOR_RESOLVE_DUPES:Lcom/vladsch/flexmark/util/options/DataKey;
      11: aload_1
      12: invokevirtual #5                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      15: checkcast     #6                  // class java/lang/Boolean
      18: invokevirtual #7                  // Method java/lang/Boolean.booleanValue:()Z
      21: istore_3
      22: getstatic     #8                  // Field com/vladsch/flexmark/html/HtmlRenderer.HEADER_ID_GENERATOR_TO_DASH_CHARS:Lcom/vladsch/flexmark/util/options/DataKey;
      25: aload_1
      26: invokevirtual #5                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      29: checkcast     #9                  // class java/lang/String
      32: astore        4
      34: getstatic     #10                 // Field com/vladsch/flexmark/html/HtmlRenderer.HEADER_ID_GENERATOR_NO_DUPED_DASHES:Lcom/vladsch/flexmark/util/options/DataKey;
      37: aload_1
      38: invokevirtual #5                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      41: checkcast     #6                  // class java/lang/Boolean
      44: invokevirtual #7                  // Method java/lang/Boolean.booleanValue:()Z
      47: istore        5
      49: new           #11                 // class com/vladsch/flexmark/html/renderer/HeaderIdGenerator$1
      52: dup
      53: aload_0
      54: aload         4
      56: iload         5
      58: iload_3
      59: aload_2
      60: invokespecial #12                 // Method com/vladsch/flexmark/html/renderer/HeaderIdGenerator$1."<init>":(Lcom/vladsch/flexmark/html/renderer/HeaderIdGenerator;Ljava/lang/String;ZZLjava/util/HashMap;)V
      63: aload_1
      64: invokevirtual #13                 // Method com/vladsch/flexmark/html/renderer/HeaderIdGenerator$1.visit:(Lcom/vladsch/flexmark/ast/Node;)V
      67: return

  public java.lang.String getId(com.vladsch.flexmark.ast.Node);
    Code:
       0: aload_1
       1: instanceof    #14                 // class com/vladsch/flexmark/ast/AnchorRefTarget
       4: ifeq          19
       7: aload_1
       8: checkcast     #14                 // class com/vladsch/flexmark/ast/AnchorRefTarget
      11: invokeinterface #15,  1           // InterfaceMethod com/vladsch/flexmark/ast/AnchorRefTarget.getAnchorRefId:()Ljava/lang/String;
      16: goto          20
      19: aconst_null
      20: areturn

  public static java.lang.String generateId(java.lang.CharSequence, java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokeinterface #16,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       6: istore_3
       7: new           #17                 // class java/lang/StringBuilder
      10: dup
      11: iload_3
      12: invokespecial #18                 // Method java/lang/StringBuilder."<init>":(I)V
      15: astore        4
      17: aload_1
      18: ifnonnull     32
      21: getstatic     #8                  // Field com/vladsch/flexmark/html/HtmlRenderer.HEADER_ID_GENERATOR_TO_DASH_CHARS:Lcom/vladsch/flexmark/util/options/DataKey;
      24: aconst_null
      25: invokevirtual #5                  // Method com/vladsch/flexmark/util/options/DataKey.getFrom:(Lcom/vladsch/flexmark/util/options/DataHolder;)Ljava/lang/Object;
      28: checkcast     #9                  // class java/lang/String
      31: astore_1
      32: iconst_0
      33: istore        5
      35: iload         5
      37: iload_3
      38: if_icmpge     160
      41: aload_0
      42: iload         5
      44: invokeinterface #19,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      49: istore        6
      51: iload         6
      53: invokestatic  #20                 // Method isAlphabetic:(C)Z
      56: ifeq          73
      59: aload         4
      61: iload         6
      63: invokestatic  #21                 // Method java/lang/Character.toLowerCase:(C)C
      66: invokevirtual #22                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      69: pop
      70: goto          154
      73: iload         6
      75: invokestatic  #23                 // Method java/lang/Character.isDigit:(C)Z
      78: ifeq          92
      81: aload         4
      83: iload         6
      85: invokevirtual #22                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      88: pop
      89: goto          154
      92: aload_1
      93: iload         6
      95: invokevirtual #24                 // Method java/lang/String.indexOf:(I)I
      98: iconst_m1
      99: if_icmpeq     154
     102: iload_2
     103: ifeq          146
     106: iload         6
     108: bipush        45
     110: if_icmpne     121
     113: aload         4
     115: invokevirtual #25                 // Method java/lang/StringBuilder.length:()I
     118: ifeq          146
     121: aload         4
     123: invokevirtual #25                 // Method java/lang/StringBuilder.length:()I
     126: ifeq          154
     129: aload         4
     131: aload         4
     133: invokevirtual #25                 // Method java/lang/StringBuilder.length:()I
     136: iconst_1
     137: isub
     138: invokevirtual #26                 // Method java/lang/StringBuilder.charAt:(I)C
     141: bipush        45
     143: if_icmpeq     154
     146: aload         4
     148: bipush        45
     150: invokevirtual #22                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     153: pop
     154: iinc          5, 1
     157: goto          35
     160: aload         4
     162: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     165: areturn

  public static boolean isAlphabetic(char);
    Code:
       0: sipush        1086
       3: iload_0
       4: invokestatic  #29                 // Method java/lang/Character.getType:(I)I
       7: ishr
       8: iconst_1
       9: iand
      10: ifeq          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn
}
