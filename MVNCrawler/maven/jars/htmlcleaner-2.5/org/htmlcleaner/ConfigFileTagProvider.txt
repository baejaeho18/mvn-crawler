Compiled from "ConfigFileTagProvider.java"
public class org.htmlcleaner.ConfigFileTagProvider extends java.util.HashMap implements org.htmlcleaner.ITagInfoProvider {
  static javax.xml.parsers.SAXParserFactory parserFactory;

  private boolean generateCode;

  private org.htmlcleaner.ConfigFileTagProvider();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/util/HashMap."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #1                  // Field generateCode:Z
       9: return

  public org.htmlcleaner.ConfigFileTagProvider(org.xml.sax.InputSource);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/util/HashMap."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #1                  // Field generateCode:Z
       9: new           #3                  // class org/htmlcleaner/ConfigFileTagProvider$ConfigParser
      12: dup
      13: aload_0
      14: aload_0
      15: invokespecial #4                  // Method org/htmlcleaner/ConfigFileTagProvider$ConfigParser."<init>":(Lorg/htmlcleaner/ConfigFileTagProvider;Ljava/util/Map;)V
      18: aload_1
      19: invokevirtual #5                  // Method org/htmlcleaner/ConfigFileTagProvider$ConfigParser.parse:(Lorg/xml/sax/InputSource;)V
      22: goto          37
      25: astore_2
      26: new           #7                  // class org/htmlcleaner/HtmlCleanerException
      29: dup
      30: ldc           #8                  // String Error parsing tag configuration file!
      32: aload_2
      33: invokespecial #9                  // Method org/htmlcleaner/HtmlCleanerException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      36: athrow
      37: return
    Exception table:
       from    to  target type
           9    22    25   Class java/lang/Exception

  public org.htmlcleaner.ConfigFileTagProvider(java.io.File);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/util/HashMap."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #1                  // Field generateCode:Z
       9: new           #3                  // class org/htmlcleaner/ConfigFileTagProvider$ConfigParser
      12: dup
      13: aload_0
      14: aload_0
      15: invokespecial #4                  // Method org/htmlcleaner/ConfigFileTagProvider$ConfigParser."<init>":(Lorg/htmlcleaner/ConfigFileTagProvider;Ljava/util/Map;)V
      18: new           #10                 // class org/xml/sax/InputSource
      21: dup
      22: new           #11                 // class java/io/FileReader
      25: dup
      26: aload_1
      27: invokespecial #12                 // Method java/io/FileReader."<init>":(Ljava/io/File;)V
      30: invokespecial #13                 // Method org/xml/sax/InputSource."<init>":(Ljava/io/Reader;)V
      33: invokevirtual #5                  // Method org/htmlcleaner/ConfigFileTagProvider$ConfigParser.parse:(Lorg/xml/sax/InputSource;)V
      36: goto          51
      39: astore_2
      40: new           #7                  // class org/htmlcleaner/HtmlCleanerException
      43: dup
      44: ldc           #8                  // String Error parsing tag configuration file!
      46: aload_2
      47: invokespecial #9                  // Method org/htmlcleaner/HtmlCleanerException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      50: athrow
      51: return
    Exception table:
       from    to  target type
           9    36    39   Class java/lang/Exception

  public org.htmlcleaner.ConfigFileTagProvider(java.net.URL);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/util/HashMap."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #1                  // Field generateCode:Z
       9: aload_1
      10: invokevirtual #14                 // Method java/net/URL.getContent:()Ljava/lang/Object;
      13: astore_2
      14: aload_2
      15: instanceof    #15                 // class java/io/InputStream
      18: ifeq          53
      21: new           #16                 // class java/io/InputStreamReader
      24: dup
      25: aload_2
      26: checkcast     #15                 // class java/io/InputStream
      29: invokespecial #17                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
      32: astore_3
      33: new           #3                  // class org/htmlcleaner/ConfigFileTagProvider$ConfigParser
      36: dup
      37: aload_0
      38: aload_0
      39: invokespecial #4                  // Method org/htmlcleaner/ConfigFileTagProvider$ConfigParser."<init>":(Lorg/htmlcleaner/ConfigFileTagProvider;Ljava/util/Map;)V
      42: new           #10                 // class org/xml/sax/InputSource
      45: dup
      46: aload_3
      47: invokespecial #13                 // Method org/xml/sax/InputSource."<init>":(Ljava/io/Reader;)V
      50: invokevirtual #5                  // Method org/htmlcleaner/ConfigFileTagProvider$ConfigParser.parse:(Lorg/xml/sax/InputSource;)V
      53: goto          68
      56: astore_2
      57: new           #7                  // class org/htmlcleaner/HtmlCleanerException
      60: dup
      61: ldc           #8                  // String Error parsing tag configuration file!
      63: aload_2
      64: invokespecial #9                  // Method org/htmlcleaner/HtmlCleanerException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      67: athrow
      68: return
    Exception table:
       from    to  target type
           9    53    56   Class java/lang/Exception

  public org.htmlcleaner.TagInfo getTagInfo(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #19                 // class org/htmlcleaner/TagInfo
       8: areturn

  public static void main(java.lang.String[]) throws java.io.IOException, org.xml.sax.SAXException, javax.xml.parsers.ParserConfigurationException;
    Code:
       0: new           #20                 // class org/htmlcleaner/ConfigFileTagProvider
       3: dup
       4: invokespecial #21                 // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: iconst_1
      10: putfield      #1                  // Field generateCode:Z
      13: new           #22                 // class java/io/File
      16: dup
      17: ldc           #23                 // String default.xml
      19: invokespecial #24                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: ldc           #25                 // String org.htmlcleaner
      25: astore_3
      26: ldc           #26                 // String DefaultTagProvider
      28: astore        4
      30: new           #3                  // class org/htmlcleaner/ConfigFileTagProvider$ConfigParser
      33: dup
      34: aload_1
      35: dup
      36: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      39: pop
      40: aload_1
      41: invokespecial #4                  // Method org/htmlcleaner/ConfigFileTagProvider$ConfigParser."<init>":(Lorg/htmlcleaner/ConfigFileTagProvider;Ljava/util/Map;)V
      44: astore        5
      46: getstatic     #28                 // Field java/lang/System.out:Ljava/io/PrintStream;
      49: new           #29                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #31                 // String package
      58: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_3
      62: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: ldc           #33                 // String ;
      67: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokevirtual #35                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      76: getstatic     #28                 // Field java/lang/System.out:Ljava/io/PrintStream;
      79: ldc           #36                 // String import java.util.HashMap;
      81: invokevirtual #35                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      84: getstatic     #28                 // Field java/lang/System.out:Ljava/io/PrintStream;
      87: new           #29                 // class java/lang/StringBuilder
      90: dup
      91: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      94: ldc           #37                 // String public class
      96: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload         4
     101: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: ldc           #38                 // String  extends HashMap implements ITagInfoProvider {
     106: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     112: invokevirtual #35                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     115: getstatic     #28                 // Field java/lang/System.out:Ljava/io/PrintStream;
     118: ldc           #39                 // String private ConcurrentMap<String, TagInfo> tagInfoMap = new ConcurrentHashMap<String, TagInfo>();
     120: invokevirtual #35                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     123: getstatic     #28                 // Field java/lang/System.out:Ljava/io/PrintStream;
     126: ldc           #40                 // String // singleton instance, used if no other TagInfoProvider is specified
     128: invokevirtual #35                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     131: getstatic     #28                 // Field java/lang/System.out:Ljava/io/PrintStream;
     134: ldc           #41                 // String public final static DefaultTagProvider INSTANCE= new DefaultTagProvider();
     136: invokevirtual #35                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     139: getstatic     #28                 // Field java/lang/System.out:Ljava/io/PrintStream;
     142: new           #29                 // class java/lang/StringBuilder
     145: dup
     146: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     149: ldc           #42                 // String public
     151: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: aload         4
     156: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: ldc           #43                 // String () {
     161: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokevirtual #35                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     170: getstatic     #28                 // Field java/lang/System.out:Ljava/io/PrintStream;
     173: ldc           #44                 // String TagInfo tagInfo;
     175: invokevirtual #35                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     178: aload         5
     180: new           #10                 // class org/xml/sax/InputSource
     183: dup
     184: new           #11                 // class java/io/FileReader
     187: dup
     188: aload_2
     189: invokespecial #12                 // Method java/io/FileReader."<init>":(Ljava/io/File;)V
     192: invokespecial #13                 // Method org/xml/sax/InputSource."<init>":(Ljava/io/Reader;)V
     195: invokevirtual #5                  // Method org/htmlcleaner/ConfigFileTagProvider$ConfigParser.parse:(Lorg/xml/sax/InputSource;)V
     198: getstatic     #28                 // Field java/lang/System.out:Ljava/io/PrintStream;
     201: ldc           #45                 // String }
     203: invokevirtual #35                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     206: getstatic     #28                 // Field java/lang/System.out:Ljava/io/PrintStream;
     209: ldc           #45                 // String }
     211: invokevirtual #35                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     214: return

  static boolean access$000(org.htmlcleaner.ConfigFileTagProvider);
    Code:
       0: aload_0
       1: getfield      #1                  // Field generateCode:Z
       4: ireturn

  static {};
    Code:
       0: invokestatic  #46                 // Method javax/xml/parsers/SAXParserFactory.newInstance:()Ljavax/xml/parsers/SAXParserFactory;
       3: putstatic     #47                 // Field parserFactory:Ljavax/xml/parsers/SAXParserFactory;
       6: getstatic     #47                 // Field parserFactory:Ljavax/xml/parsers/SAXParserFactory;
       9: iconst_0
      10: invokevirtual #48                 // Method javax/xml/parsers/SAXParserFactory.setValidating:(Z)V
      13: getstatic     #47                 // Field parserFactory:Ljavax/xml/parsers/SAXParserFactory;
      16: iconst_0
      17: invokevirtual #49                 // Method javax/xml/parsers/SAXParserFactory.setNamespaceAware:(Z)V
      20: return
}
