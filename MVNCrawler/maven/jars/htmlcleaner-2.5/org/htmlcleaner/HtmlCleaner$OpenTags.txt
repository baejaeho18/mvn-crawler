Compiled from "HtmlCleaner.java"
class org.htmlcleaner.HtmlCleaner$OpenTags {
  private java.util.List<org.htmlcleaner.HtmlCleaner$TagPos> list;

  private org.htmlcleaner.HtmlCleaner$TagPos last;

  private java.util.Set<java.lang.String> set;

  final org.htmlcleaner.HtmlCleaner this$0;

  private org.htmlcleaner.HtmlCleaner$OpenTags(org.htmlcleaner.HtmlCleaner);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field this$0:Lorg/htmlcleaner/HtmlCleaner;
       5: aload_0
       6: invokespecial #14                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #15                 // class java/util/ArrayList
      13: dup
      14: invokespecial #16                 // Method java/util/ArrayList."<init>":()V
      17: putfield      #10                 // Field list:Ljava/util/List;
      20: aload_0
      21: new           #17                 // class java/util/HashSet
      24: dup
      25: invokespecial #18                 // Method java/util/HashSet."<init>":()V
      28: putfield      #19                 // Field set:Ljava/util/Set;
      31: return

  private boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #10                 // Field list:Ljava/util/List;
       4: invokeinterface #20,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ireturn

  private void addTag(java.lang.String, int);
    Code:
       0: aload_0
       1: new           #21                 // class org/htmlcleaner/HtmlCleaner$TagPos
       4: dup
       5: aload_0
       6: getfield      #13                 // Field this$0:Lorg/htmlcleaner/HtmlCleaner;
       9: iload_2
      10: aload_1
      11: invokespecial #22                 // Method org/htmlcleaner/HtmlCleaner$TagPos."<init>":(Lorg/htmlcleaner/HtmlCleaner;ILjava/lang/String;)V
      14: putfield      #23                 // Field last:Lorg/htmlcleaner/HtmlCleaner$TagPos;
      17: aload_0
      18: getfield      #10                 // Field list:Ljava/util/List;
      21: aload_0
      22: getfield      #23                 // Field last:Lorg/htmlcleaner/HtmlCleaner$TagPos;
      25: invokeinterface #24,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      30: pop
      31: aload_0
      32: getfield      #19                 // Field set:Ljava/util/Set;
      35: aload_1
      36: invokeinterface #25,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      41: pop
      42: return

  private void removeTag(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field list:Ljava/util/List;
       4: aload_0
       5: getfield      #10                 // Field list:Ljava/util/List;
       8: invokeinterface #26,  1           // InterfaceMethod java/util/List.size:()I
      13: invokeinterface #27,  2           // InterfaceMethod java/util/List.listIterator:(I)Ljava/util/ListIterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #28,  1           // InterfaceMethod java/util/ListIterator.hasPrevious:()Z
      25: ifeq          61
      28: aload_2
      29: invokeinterface #29,  1           // InterfaceMethod java/util/ListIterator.previous:()Ljava/lang/Object;
      34: checkcast     #21                 // class org/htmlcleaner/HtmlCleaner$TagPos
      37: astore_3
      38: aload_1
      39: aload_3
      40: invokestatic  #30                 // Method org/htmlcleaner/HtmlCleaner$TagPos.access$000:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)Ljava/lang/String;
      43: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      46: ifeq          58
      49: aload_2
      50: invokeinterface #32,  1           // InterfaceMethod java/util/ListIterator.remove:()V
      55: goto          61
      58: goto          19
      61: aload_0
      62: aload_0
      63: getfield      #10                 // Field list:Ljava/util/List;
      66: invokeinterface #20,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      71: ifeq          78
      74: aconst_null
      75: goto          101
      78: aload_0
      79: getfield      #10                 // Field list:Ljava/util/List;
      82: aload_0
      83: getfield      #10                 // Field list:Ljava/util/List;
      86: invokeinterface #26,  1           // InterfaceMethod java/util/List.size:()I
      91: iconst_1
      92: isub
      93: invokeinterface #33,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      98: checkcast     #21                 // class org/htmlcleaner/HtmlCleaner$TagPos
     101: putfield      #23                 // Field last:Lorg/htmlcleaner/HtmlCleaner$TagPos;
     104: return

  private org.htmlcleaner.HtmlCleaner$TagPos findFirstTagPos();
    Code:
       0: aload_0
       1: getfield      #10                 // Field list:Ljava/util/List;
       4: invokeinterface #20,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          16
      12: aconst_null
      13: goto          29
      16: aload_0
      17: getfield      #10                 // Field list:Ljava/util/List;
      20: iconst_0
      21: invokeinterface #33,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      26: checkcast     #21                 // class org/htmlcleaner/HtmlCleaner$TagPos
      29: areturn

  private org.htmlcleaner.HtmlCleaner$TagPos getLastTagPos();
    Code:
       0: aload_0
       1: getfield      #23                 // Field last:Lorg/htmlcleaner/HtmlCleaner$TagPos;
       4: areturn

  private org.htmlcleaner.HtmlCleaner$TagPos findTag(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        107
       4: aload_0
       5: getfield      #10                 // Field list:Ljava/util/List;
       8: aload_0
       9: getfield      #10                 // Field list:Ljava/util/List;
      12: invokeinterface #26,  1           // InterfaceMethod java/util/List.size:()I
      17: invokeinterface #27,  2           // InterfaceMethod java/util/List.listIterator:(I)Ljava/util/ListIterator;
      22: astore_2
      23: aconst_null
      24: astore_3
      25: aload_0
      26: getfield      #13                 // Field this$0:Lorg/htmlcleaner/HtmlCleaner;
      29: invokevirtual #34                 // Method org/htmlcleaner/HtmlCleaner.getTagInfoProvider:()Lorg/htmlcleaner/ITagInfoProvider;
      32: aload_1
      33: invokeinterface #35,  2           // InterfaceMethod org/htmlcleaner/ITagInfoProvider.getTagInfo:(Ljava/lang/String;)Lorg/htmlcleaner/TagInfo;
      38: astore        4
      40: aload         4
      42: ifnull        51
      45: aload         4
      47: invokevirtual #36                 // Method org/htmlcleaner/TagInfo.getFatalTag:()Ljava/lang/String;
      50: astore_3
      51: aload_2
      52: invokeinterface #28,  1           // InterfaceMethod java/util/ListIterator.hasPrevious:()Z
      57: ifeq          107
      60: aload_2
      61: invokeinterface #29,  1           // InterfaceMethod java/util/ListIterator.previous:()Ljava/lang/Object;
      66: checkcast     #21                 // class org/htmlcleaner/HtmlCleaner$TagPos
      69: astore        5
      71: aload_1
      72: aload         5
      74: invokestatic  #30                 // Method org/htmlcleaner/HtmlCleaner$TagPos.access$000:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)Ljava/lang/String;
      77: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      80: ifeq          86
      83: aload         5
      85: areturn
      86: aload_3
      87: ifnull        104
      90: aload_3
      91: aload         5
      93: invokestatic  #30                 // Method org/htmlcleaner/HtmlCleaner$TagPos.access$000:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)Ljava/lang/String;
      96: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      99: ifeq          104
     102: aconst_null
     103: areturn
     104: goto          51
     107: aconst_null
     108: areturn

  private boolean tagExists(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method findTag:(Ljava/lang/String;)Lorg/htmlcleaner/HtmlCleaner$TagPos;
       5: astore_2
       6: aload_2
       7: ifnull        14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private org.htmlcleaner.HtmlCleaner$TagPos findTagToPlaceRubbish();
    Code:
       0: aconst_null
       1: astore_1
       2: aconst_null
       3: astore_2
       4: aload_0
       5: invokespecial #7                  // Method isEmpty:()Z
       8: ifne          77
      11: aload_0
      12: getfield      #10                 // Field list:Ljava/util/List;
      15: aload_0
      16: getfield      #10                 // Field list:Ljava/util/List;
      19: invokeinterface #26,  1           // InterfaceMethod java/util/List.size:()I
      24: invokeinterface #27,  2           // InterfaceMethod java/util/List.listIterator:(I)Ljava/util/ListIterator;
      29: astore_3
      30: aload_3
      31: invokeinterface #28,  1           // InterfaceMethod java/util/ListIterator.hasPrevious:()Z
      36: ifeq          77
      39: aload_3
      40: invokeinterface #29,  1           // InterfaceMethod java/util/ListIterator.previous:()Ljava/lang/Object;
      45: checkcast     #21                 // class org/htmlcleaner/HtmlCleaner$TagPos
      48: astore_1
      49: aload_1
      50: invokestatic  #37                 // Method org/htmlcleaner/HtmlCleaner$TagPos.access$200:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)Lorg/htmlcleaner/TagInfo;
      53: ifnull        66
      56: aload_1
      57: invokestatic  #37                 // Method org/htmlcleaner/HtmlCleaner$TagPos.access$200:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)Lorg/htmlcleaner/TagInfo;
      60: invokevirtual #38                 // Method org/htmlcleaner/TagInfo.allowsAnything:()Z
      63: ifeq          72
      66: aload_2
      67: ifnull        72
      70: aload_2
      71: areturn
      72: aload_1
      73: astore_2
      74: goto          30
      77: aload_1
      78: areturn

  private boolean tagEncountered(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #19                 // Field set:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ireturn

  private boolean someAlreadyOpen(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field list:Ljava/util/List;
       4: invokeinterface #40,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          47
      19: aload_2
      20: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #21                 // class org/htmlcleaner/HtmlCleaner$TagPos
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokestatic  #30                 // Method org/htmlcleaner/HtmlCleaner$TagPos.access$000:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)Ljava/lang/String;
      34: invokeinterface #39,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      39: ifeq          44
      42: iconst_1
      43: ireturn
      44: goto          10
      47: iconst_0
      48: ireturn

  static boolean access$300(org.htmlcleaner.HtmlCleaner$OpenTags, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method tagExists:(Ljava/lang/String;)Z
       5: ireturn

  static org.htmlcleaner.HtmlCleaner$TagPos access$400(org.htmlcleaner.HtmlCleaner$OpenTags, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #11                 // Method findTag:(Ljava/lang/String;)Lorg/htmlcleaner/HtmlCleaner$TagPos;
       5: areturn

  static java.util.List access$500(org.htmlcleaner.HtmlCleaner$OpenTags);
    Code:
       0: aload_0
       1: getfield      #10                 // Field list:Ljava/util/List;
       4: areturn

  static org.htmlcleaner.HtmlCleaner$TagPos access$600(org.htmlcleaner.HtmlCleaner$OpenTags);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method getLastTagPos:()Lorg/htmlcleaner/HtmlCleaner$TagPos;
       4: areturn

  static org.htmlcleaner.HtmlCleaner$TagPos access$700(org.htmlcleaner.HtmlCleaner$OpenTags);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method findTagToPlaceRubbish:()Lorg/htmlcleaner/HtmlCleaner$TagPos;
       4: areturn

  static boolean access$900(org.htmlcleaner.HtmlCleaner$OpenTags);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method isEmpty:()Z
       4: ireturn

  static boolean access$1000(org.htmlcleaner.HtmlCleaner$OpenTags, java.util.Set);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method someAlreadyOpen:(Ljava/util/Set;)Z
       5: ireturn

  static boolean access$1100(org.htmlcleaner.HtmlCleaner$OpenTags, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method tagEncountered:(Ljava/lang/String;)Z
       5: ireturn

  static void access$1200(org.htmlcleaner.HtmlCleaner$OpenTags, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #4                  // Method addTag:(Ljava/lang/String;I)V
       6: return

  static void access$1300(org.htmlcleaner.HtmlCleaner$OpenTags, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method removeTag:(Ljava/lang/String;)V
       5: return

  static org.htmlcleaner.HtmlCleaner$TagPos access$1400(org.htmlcleaner.HtmlCleaner$OpenTags);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method findFirstTagPos:()Lorg/htmlcleaner/HtmlCleaner$TagPos;
       4: areturn

  org.htmlcleaner.HtmlCleaner$OpenTags(org.htmlcleaner.HtmlCleaner, org.htmlcleaner.HtmlCleaner$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/htmlcleaner/HtmlCleaner;)V
       5: return
}
