Compiled from "AttributeTransformationPatternImpl.java"
public class org.htmlcleaner.AttributeTransformationPatternImpl implements org.htmlcleaner.AttributeTransformation {
  private final java.util.regex.Pattern attNamePattern;

  private final java.util.regex.Pattern attValuePattern;

  private final java.lang.String template;

  public org.htmlcleaner.AttributeTransformationPatternImpl(java.util.regex.Pattern, java.util.regex.Pattern, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field attNamePattern:Ljava/util/regex/Pattern;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field attValuePattern:Ljava/util/regex/Pattern;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field template:Ljava/lang/String;
      19: return

  public org.htmlcleaner.AttributeTransformationPatternImpl(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ifnonnull     13
       9: aconst_null
      10: goto          17
      13: aload_1
      14: invokestatic  #5                  // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      17: putfield      #2                  // Field attNamePattern:Ljava/util/regex/Pattern;
      20: aload_0
      21: aload_2
      22: ifnonnull     29
      25: aconst_null
      26: goto          33
      29: aload_2
      30: invokestatic  #5                  // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      33: putfield      #3                  // Field attValuePattern:Ljava/util/regex/Pattern;
      36: aload_0
      37: aload_3
      38: putfield      #4                  // Field template:Ljava/lang/String;
      41: return

  public boolean satisfy(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field attNamePattern:Ljava/util/regex/Pattern;
       4: ifnull        21
       7: aload_0
       8: getfield      #2                  // Field attNamePattern:Ljava/util/regex/Pattern;
      11: aload_1
      12: invokevirtual #6                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      15: invokevirtual #7                  // Method java/util/regex/Matcher.find:()Z
      18: ifeq          44
      21: aload_0
      22: getfield      #3                  // Field attValuePattern:Ljava/util/regex/Pattern;
      25: ifnull        42
      28: aload_0
      29: getfield      #3                  // Field attValuePattern:Ljava/util/regex/Pattern;
      32: aload_2
      33: invokevirtual #6                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      36: invokevirtual #7                  // Method java/util/regex/Matcher.find:()Z
      39: ifeq          44
      42: iconst_1
      43: ireturn
      44: iconst_0
      45: ireturn

  public java.lang.String getTemplate();
    Code:
       0: aload_0
       1: getfield      #4                  // Field template:Ljava/lang/String;
       4: areturn
}
