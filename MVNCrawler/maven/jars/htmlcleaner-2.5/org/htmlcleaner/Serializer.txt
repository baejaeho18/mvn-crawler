Compiled from "Serializer.java"
public abstract class org.htmlcleaner.Serializer {
  protected org.htmlcleaner.CleanerProperties props;

  protected org.htmlcleaner.Serializer(org.htmlcleaner.CleanerProperties);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field props:Lorg/htmlcleaner/CleanerProperties;
       9: return

  public void writeToStream(org.htmlcleaner.TagNode, java.io.OutputStream, java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #3                  // class java/io/OutputStreamWriter
       5: dup
       6: aload_2
       7: aload_3
       8: invokespecial #4                  // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/lang/String;)V
      11: aload_3
      12: iload         4
      14: invokevirtual #5                  // Method write:(Lorg/htmlcleaner/TagNode;Ljava/io/Writer;Ljava/lang/String;Z)V
      17: return

  public void writeToStream(org.htmlcleaner.TagNode, java.io.OutputStream, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_0
       5: invokevirtual #6                  // Method writeToStream:(Lorg/htmlcleaner/TagNode;Ljava/io/OutputStream;Ljava/lang/String;Z)V
       8: return

  public void writeToStream(org.htmlcleaner.TagNode, java.io.OutputStream, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #2                  // Field props:Lorg/htmlcleaner/CleanerProperties;
       7: invokevirtual #7                  // Method org/htmlcleaner/CleanerProperties.getCharset:()Ljava/lang/String;
      10: iload_3
      11: invokevirtual #6                  // Method writeToStream:(Lorg/htmlcleaner/TagNode;Ljava/io/OutputStream;Ljava/lang/String;Z)V
      14: return

  public void writeToStream(org.htmlcleaner.TagNode, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokevirtual #8                  // Method writeToStream:(Lorg/htmlcleaner/TagNode;Ljava/io/OutputStream;Z)V
       7: return

  public void writeToFile(org.htmlcleaner.TagNode, java.lang.String, java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #9                  // class java/io/FileOutputStream
       5: dup
       6: aload_2
       7: invokespecial #10                 // Method java/io/FileOutputStream."<init>":(Ljava/lang/String;)V
      10: aload_3
      11: iload         4
      13: invokevirtual #6                  // Method writeToStream:(Lorg/htmlcleaner/TagNode;Ljava/io/OutputStream;Ljava/lang/String;Z)V
      16: return

  public void writeToFile(org.htmlcleaner.TagNode, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_0
       5: invokevirtual #11                 // Method writeToFile:(Lorg/htmlcleaner/TagNode;Ljava/lang/String;Ljava/lang/String;Z)V
       8: return

  public void writeToFile(org.htmlcleaner.TagNode, java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #2                  // Field props:Lorg/htmlcleaner/CleanerProperties;
       7: invokevirtual #7                  // Method org/htmlcleaner/CleanerProperties.getCharset:()Ljava/lang/String;
      10: iload_3
      11: invokevirtual #11                 // Method writeToFile:(Lorg/htmlcleaner/TagNode;Ljava/lang/String;Ljava/lang/String;Z)V
      14: return

  public void writeToFile(org.htmlcleaner.TagNode, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokevirtual #12                 // Method writeToFile:(Lorg/htmlcleaner/TagNode;Ljava/lang/String;Z)V
       7: return

  public java.lang.String getAsString(org.htmlcleaner.TagNode, java.lang.String, boolean);
    Code:
       0: new           #13                 // class java/io/StringWriter
       3: dup
       4: invokespecial #14                 // Method java/io/StringWriter."<init>":()V
       7: astore        4
       9: aload_0
      10: aload_1
      11: aload         4
      13: aload_2
      14: iload_3
      15: invokevirtual #5                  // Method write:(Lorg/htmlcleaner/TagNode;Ljava/io/Writer;Ljava/lang/String;Z)V
      18: goto          33
      21: astore        5
      23: new           #16                 // class org/htmlcleaner/HtmlCleanerException
      26: dup
      27: aload         5
      29: invokespecial #17                 // Method org/htmlcleaner/HtmlCleanerException."<init>":(Ljava/lang/Throwable;)V
      32: athrow
      33: aload         4
      35: invokevirtual #18                 // Method java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;
      38: invokevirtual #19                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      41: areturn
    Exception table:
       from    to  target type
           9    18    21   Class java/io/IOException

  public java.lang.String getAsString(org.htmlcleaner.TagNode, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokevirtual #20                 // Method getAsString:(Lorg/htmlcleaner/TagNode;Ljava/lang/String;Z)Ljava/lang/String;
       7: areturn

  public java.lang.String getAsString(org.htmlcleaner.TagNode, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #2                  // Field props:Lorg/htmlcleaner/CleanerProperties;
       6: invokevirtual #7                  // Method org/htmlcleaner/CleanerProperties.getCharset:()Ljava/lang/String;
       9: iload_2
      10: invokevirtual #20                 // Method getAsString:(Lorg/htmlcleaner/TagNode;Ljava/lang/String;Z)Ljava/lang/String;
      13: areturn

  public java.lang.String getAsString(org.htmlcleaner.TagNode);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #21                 // Method getAsString:(Lorg/htmlcleaner/TagNode;Z)Ljava/lang/String;
       6: areturn

  public java.lang.String getAsString(java.lang.String);
    Code:
       0: new           #22                 // class org/htmlcleaner/HtmlCleaner
       3: dup
       4: aload_0
       5: getfield      #2                  // Field props:Lorg/htmlcleaner/CleanerProperties;
       8: invokespecial #23                 // Method org/htmlcleaner/HtmlCleaner."<init>":(Lorg/htmlcleaner/CleanerProperties;)V
      11: astore_2
      12: aload_2
      13: aload_1
      14: invokevirtual #24                 // Method org/htmlcleaner/HtmlCleaner.clean:(Ljava/lang/String;)Lorg/htmlcleaner/TagNode;
      17: astore_3
      18: aload_0
      19: aload_3
      20: aload_0
      21: getfield      #2                  // Field props:Lorg/htmlcleaner/CleanerProperties;
      24: invokevirtual #7                  // Method org/htmlcleaner/CleanerProperties.getCharset:()Ljava/lang/String;
      27: invokevirtual #25                 // Method getAsString:(Lorg/htmlcleaner/TagNode;Ljava/lang/String;)Ljava/lang/String;
      30: areturn

  public void write(org.htmlcleaner.TagNode, java.io.Writer, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_0
       5: invokevirtual #5                  // Method write:(Lorg/htmlcleaner/TagNode;Ljava/io/Writer;Ljava/lang/String;Z)V
       8: return

  public void write(org.htmlcleaner.TagNode, java.io.Writer, java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: iload         4
       2: ifeq          16
       5: new           #26                 // class org/htmlcleaner/Serializer$HeadlessTagNode
       8: dup
       9: aload_0
      10: aload_1
      11: aconst_null
      12: invokespecial #27                 // Method org/htmlcleaner/Serializer$HeadlessTagNode."<init>":(Lorg/htmlcleaner/Serializer;Lorg/htmlcleaner/TagNode;Lorg/htmlcleaner/Serializer$1;)V
      15: astore_1
      16: new           #28                 // class java/io/BufferedWriter
      19: dup
      20: aload_2
      21: invokespecial #29                 // Method java/io/BufferedWriter."<init>":(Ljava/io/Writer;)V
      24: astore_2
      25: aload_0
      26: getfield      #2                  // Field props:Lorg/htmlcleaner/CleanerProperties;
      29: invokevirtual #30                 // Method org/htmlcleaner/CleanerProperties.isOmitXmlDeclaration:()Z
      32: ifne          120
      35: ldc           #31                 // String <?xml version=\"1.0\"
      37: astore        5
      39: aload_3
      40: ifnull        74
      43: new           #32                 // class java/lang/StringBuilder
      46: dup
      47: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      50: aload         5
      52: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #35                 // String  encoding=\"
      57: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_3
      61: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: ldc           #36                 // String \"
      66: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: astore        5
      74: new           #32                 // class java/lang/StringBuilder
      77: dup
      78: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      81: aload         5
      83: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: ldc           #38                 // String ?>
      88: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: astore        5
      96: aload_2
      97: new           #32                 // class java/lang/StringBuilder
     100: dup
     101: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     104: aload         5
     106: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: ldc           #39                 // String \n
     111: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     117: invokevirtual #40                 // Method java/io/Writer.write:(Ljava/lang/String;)V
     120: aload_0
     121: getfield      #2                  // Field props:Lorg/htmlcleaner/CleanerProperties;
     124: invokevirtual #41                 // Method org/htmlcleaner/CleanerProperties.isOmitDoctypeDeclaration:()Z
     127: ifne          148
     130: aload_1
     131: invokevirtual #42                 // Method org/htmlcleaner/TagNode.getDocType:()Lorg/htmlcleaner/DoctypeToken;
     134: astore        5
     136: aload         5
     138: ifnull        148
     141: aload         5
     143: aload_0
     144: aload_2
     145: invokevirtual #43                 // Method org/htmlcleaner/DoctypeToken.serialize:(Lorg/htmlcleaner/Serializer;Ljava/io/Writer;)V
     148: aload_0
     149: aload_1
     150: aload_2
     151: invokevirtual #44                 // Method serialize:(Lorg/htmlcleaner/TagNode;Ljava/io/Writer;)V
     154: aload_2
     155: invokevirtual #45                 // Method java/io/Writer.flush:()V
     158: aload_2
     159: invokevirtual #46                 // Method java/io/Writer.close:()V
     162: return

  protected boolean isScriptOrStyle(org.htmlcleaner.TagNode);
    Code:
       0: aload_1
       1: invokevirtual #47                 // Method org/htmlcleaner/TagNode.getName:()Ljava/lang/String;
       4: astore_2
       5: ldc           #48                 // String script
       7: aload_2
       8: invokevirtual #49                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      11: ifne          23
      14: ldc           #50                 // String style
      16: aload_2
      17: invokevirtual #49                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  protected abstract void serialize(org.htmlcleaner.TagNode, java.io.Writer) throws java.io.IOException;
}
