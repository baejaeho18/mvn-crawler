Compiled from "TagNodeAttNameValueRegexCondition.java"
public class org.htmlcleaner.conditional.TagNodeAttNameValueRegexCondition implements org.htmlcleaner.conditional.ITagNodeCondition {
  private java.util.regex.Pattern attNameRegex;

  private java.util.regex.Pattern attValueRegex;

  public org.htmlcleaner.conditional.TagNodeAttNameValueRegexCondition(java.util.regex.Pattern, java.util.regex.Pattern);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field attNameRegex:Ljava/util/regex/Pattern;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field attValueRegex:Ljava/util/regex/Pattern;
      14: return

  public boolean satisfy(org.htmlcleaner.TagNode);
    Code:
       0: aload_1
       1: ifnull        101
       4: aload_1
       5: invokevirtual #4                  // Method org/htmlcleaner/TagNode.getAttributes:()Ljava/util/Map;
       8: invokeinterface #5,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      13: invokeinterface #6,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          101
      28: aload_2
      29: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #9                  // class java/util/Map$Entry
      37: astore_3
      38: aload_0
      39: getfield      #2                  // Field attNameRegex:Ljava/util/regex/Pattern;
      42: ifnull        67
      45: aload_0
      46: getfield      #2                  // Field attNameRegex:Ljava/util/regex/Pattern;
      49: aload_3
      50: invokeinterface #10,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      55: checkcast     #11                 // class java/lang/CharSequence
      58: invokevirtual #12                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      61: invokevirtual #13                 // Method java/util/regex/Matcher.find:()Z
      64: ifeq          98
      67: aload_0
      68: getfield      #3                  // Field attValueRegex:Ljava/util/regex/Pattern;
      71: ifnull        96
      74: aload_0
      75: getfield      #3                  // Field attValueRegex:Ljava/util/regex/Pattern;
      78: aload_3
      79: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      84: checkcast     #11                 // class java/lang/CharSequence
      87: invokevirtual #12                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      90: invokevirtual #13                 // Method java/util/regex/Matcher.find:()Z
      93: ifeq          98
      96: iconst_1
      97: ireturn
      98: goto          19
     101: iconst_0
     102: ireturn
}
