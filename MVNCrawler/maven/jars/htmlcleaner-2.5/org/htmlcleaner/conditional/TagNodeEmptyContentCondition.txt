Compiled from "TagNodeEmptyContentCondition.java"
public class org.htmlcleaner.conditional.TagNodeEmptyContentCondition implements org.htmlcleaner.conditional.ITagNodeCondition {
  private static final java.lang.String ID_ATTRIBUTE_NAME;

  private static final java.util.Set<java.lang.String> unsafeBlockElements;

  private org.htmlcleaner.ITagInfoProvider tagInfoProvider;

  public org.htmlcleaner.conditional.TagNodeEmptyContentCondition(org.htmlcleaner.ITagInfoProvider);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field tagInfoProvider:Lorg/htmlcleaner/ITagInfoProvider;
       9: return

  public boolean satisfy(org.htmlcleaner.TagNode);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #3                  // Method satisfy:(Lorg/htmlcleaner/TagNode;Z)Z
       6: ireturn

  private boolean satisfy(org.htmlcleaner.TagNode, boolean);
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method org/htmlcleaner/TagNode.getName:()Ljava/lang/String;
       4: astore_3
       5: aload_0
       6: getfield      #2                  // Field tagInfoProvider:Lorg/htmlcleaner/ITagInfoProvider;
       9: aload_3
      10: invokeinterface #5,  2            // InterfaceMethod org/htmlcleaner/ITagInfoProvider.getTagInfo:(Ljava/lang/String;)Lorg/htmlcleaner/TagInfo;
      15: astore        4
      17: aload         4
      19: ifnull        169
      22: aload_0
      23: aload_1
      24: invokespecial #6                  // Method hasIdAttributeSet:(Lorg/htmlcleaner/TagNode;)Z
      27: ifne          169
      30: getstatic     #7                  // Field org/htmlcleaner/Display.none:Lorg/htmlcleaner/Display;
      33: aload         4
      35: invokevirtual #8                  // Method org/htmlcleaner/TagInfo.getDisplay:()Lorg/htmlcleaner/Display;
      38: if_acmpeq     169
      41: aload         4
      43: invokevirtual #9                  // Method org/htmlcleaner/TagInfo.isEmptyTag:()Z
      46: ifne          169
      49: iload_2
      50: ifne          65
      53: getstatic     #10                 // Field unsafeBlockElements:Ljava/util/Set;
      56: aload_3
      57: invokeinterface #11,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      62: ifne          169
      65: aload_1
      66: invokevirtual #12                 // Method org/htmlcleaner/TagNode.getText:()Ljava/lang/CharSequence;
      69: astore        5
      71: aload         5
      73: invokestatic  #13                 // Method org/htmlcleaner/Utils.isEmptyString:(Ljava/lang/Object;)Z
      76: ifeq          169
      79: aload_1
      80: invokevirtual #14                 // Method org/htmlcleaner/TagNode.isEmpty:()Z
      83: ifeq          88
      86: iconst_1
      87: ireturn
      88: aload_1
      89: invokevirtual #15                 // Method org/htmlcleaner/TagNode.getAllChildren:()Ljava/util/List;
      92: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      97: astore        6
      99: aload         6
     101: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     106: ifeq          167
     109: aload         6
     111: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     116: astore        7
     118: aload         7
     120: instanceof    #19                 // class org/htmlcleaner/TagNode
     123: ifeq          141
     126: aload_0
     127: aload         7
     129: checkcast     #19                 // class org/htmlcleaner/TagNode
     132: iconst_1
     133: invokespecial #3                  // Method satisfy:(Lorg/htmlcleaner/TagNode;Z)Z
     136: ifne          164
     139: iconst_0
     140: ireturn
     141: aload         7
     143: instanceof    #20                 // class org/htmlcleaner/ContentNode
     146: ifeq          162
     149: aload         7
     151: checkcast     #20                 // class org/htmlcleaner/ContentNode
     154: invokevirtual #21                 // Method org/htmlcleaner/ContentNode.isBlank:()Z
     157: ifne          164
     160: iconst_0
     161: ireturn
     162: iconst_0
     163: ireturn
     164: goto          99
     167: iconst_1
     168: ireturn
     169: iconst_0
     170: ireturn

  private boolean hasIdAttributeSet(org.htmlcleaner.TagNode);
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method org/htmlcleaner/TagNode.getAttributes:()Ljava/util/Map;
       4: astore_2
       5: aload_2
       6: ldc           #23                 // String id
       8: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: invokestatic  #13                 // Method org/htmlcleaner/Utils.isEmptyString:(Ljava/lang/Object;)Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  static {};
    Code:
       0: new           #25                 // class java/util/HashSet
       3: dup
       4: invokespecial #26                 // Method java/util/HashSet."<init>":()V
       7: putstatic     #10                 // Field unsafeBlockElements:Ljava/util/Set;
      10: getstatic     #10                 // Field unsafeBlockElements:Ljava/util/Set;
      13: ldc           #27                 // String td
      15: invokeinterface #28,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      20: pop
      21: getstatic     #10                 // Field unsafeBlockElements:Ljava/util/Set;
      24: ldc           #29                 // String th
      26: invokeinterface #28,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      31: pop
      32: return
}
