Compiled from "CleanerProperties.java"
public class org.htmlcleaner.CleanerProperties implements org.htmlcleaner.audit.HtmlModificationListener {
  public static final java.lang.String DEFAULT_CHARSET;

  public static final java.lang.String BOOL_ATT_SELF;

  public static final java.lang.String BOOL_ATT_EMPTY;

  public static final java.lang.String BOOL_ATT_TRUE;

  private org.htmlcleaner.ITagInfoProvider tagInfoProvider;

  private boolean advancedXmlEscape;

  private boolean useCdataForScriptAndStyle;

  private boolean translateSpecialEntities;

  private boolean recognizeUnicodeChars;

  private boolean omitUnknownTags;

  private boolean treatUnknownTagsAsContent;

  private boolean omitDeprecatedTags;

  private boolean omitComments;

  private boolean treatDeprecatedTagsAsContent;

  private org.htmlcleaner.OptionalOutput omitXmlDeclaration;

  private org.htmlcleaner.OptionalOutput omitDoctypeDeclaration;

  private org.htmlcleaner.OptionalOutput omitHtmlEnvelope;

  private boolean useEmptyElementTags;

  private boolean allowMultiWordAttributes;

  private java.lang.String booleanAttributeValues;

  private boolean ignoreQuestAndExclam;

  private boolean allowHtmlInsideAttributes;

  private boolean namespacesAware;

  private boolean transSpecialEntitiesToNCR;

  private boolean addNewlineToHeadAndBody;

  private boolean keepWhitespaceAndCommentsInHead;

  private java.lang.String hyphenReplacementInComment;

  private java.lang.String pruneTags;

  private java.lang.String allowTags;

  private org.htmlcleaner.CleanerTransformations cleanerTransformations;

  private java.util.List<org.htmlcleaner.audit.HtmlModificationListener> htmlModificationListeners;

  private java.util.Set<org.htmlcleaner.conditional.ITagNodeCondition> pruneTagSet;

  private java.util.Set<org.htmlcleaner.conditional.ITagNodeCondition> allowTagSet;

  private java.lang.String charset;

  private boolean transResCharsToNCR;

  public org.htmlcleaner.CleanerProperties();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/htmlcleaner/CleanerTransformations
       8: dup
       9: invokespecial #3                  // Method org/htmlcleaner/CleanerTransformations."<init>":()V
      12: putfield      #4                  // Field cleanerTransformations:Lorg/htmlcleaner/CleanerTransformations;
      15: aload_0
      16: new           #5                  // class java/util/HashSet
      19: dup
      20: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      23: putfield      #7                  // Field pruneTagSet:Ljava/util/Set;
      26: aload_0
      27: new           #5                  // class java/util/HashSet
      30: dup
      31: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      34: putfield      #8                  // Field allowTagSet:Ljava/util/Set;
      37: aload_0
      38: ldc           #9                  // String UTF-8
      40: putfield      #10                 // Field charset:Ljava/lang/String;
      43: aload_0
      44: invokevirtual #11                 // Method reset:()V
      47: return

  public org.htmlcleaner.CleanerProperties(org.htmlcleaner.ITagInfoProvider);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/htmlcleaner/CleanerTransformations
       8: dup
       9: invokespecial #3                  // Method org/htmlcleaner/CleanerTransformations."<init>":()V
      12: putfield      #4                  // Field cleanerTransformations:Lorg/htmlcleaner/CleanerTransformations;
      15: aload_0
      16: new           #5                  // class java/util/HashSet
      19: dup
      20: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      23: putfield      #7                  // Field pruneTagSet:Ljava/util/Set;
      26: aload_0
      27: new           #5                  // class java/util/HashSet
      30: dup
      31: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      34: putfield      #8                  // Field allowTagSet:Ljava/util/Set;
      37: aload_0
      38: ldc           #9                  // String UTF-8
      40: putfield      #10                 // Field charset:Ljava/lang/String;
      43: aload_0
      44: invokevirtual #11                 // Method reset:()V
      47: aload_0
      48: aload_1
      49: putfield      #12                 // Field tagInfoProvider:Lorg/htmlcleaner/ITagInfoProvider;
      52: return

  void setTagInfoProvider(org.htmlcleaner.ITagInfoProvider);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field tagInfoProvider:Lorg/htmlcleaner/ITagInfoProvider;
       5: return

  public org.htmlcleaner.ITagInfoProvider getTagInfoProvider();
    Code:
       0: aload_0
       1: getfield      #12                 // Field tagInfoProvider:Lorg/htmlcleaner/ITagInfoProvider;
       4: areturn

  public boolean isAdvancedXmlEscape();
    Code:
       0: aload_0
       1: getfield      #13                 // Field advancedXmlEscape:Z
       4: ireturn

  public void setAdvancedXmlEscape(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field advancedXmlEscape:Z
       5: return

  public boolean isTransResCharsToNCR();
    Code:
       0: aload_0
       1: getfield      #14                 // Field transResCharsToNCR:Z
       4: ireturn

  public void setTransResCharsToNCR(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field transResCharsToNCR:Z
       5: return

  public boolean isUseCdataForScriptAndStyle();
    Code:
       0: aload_0
       1: getfield      #15                 // Field useCdataForScriptAndStyle:Z
       4: ireturn

  public void setUseCdataForScriptAndStyle(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field useCdataForScriptAndStyle:Z
       5: return

  public boolean isTranslateSpecialEntities();
    Code:
       0: aload_0
       1: getfield      #16                 // Field translateSpecialEntities:Z
       4: ireturn

  public void setTranslateSpecialEntities(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field translateSpecialEntities:Z
       5: return

  public boolean isRecognizeUnicodeChars();
    Code:
       0: aload_0
       1: getfield      #17                 // Field recognizeUnicodeChars:Z
       4: ireturn

  public void setRecognizeUnicodeChars(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field recognizeUnicodeChars:Z
       5: return

  public boolean isOmitUnknownTags();
    Code:
       0: aload_0
       1: getfield      #18                 // Field omitUnknownTags:Z
       4: ireturn

  public void setOmitUnknownTags(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field omitUnknownTags:Z
       5: return

  public boolean isTreatUnknownTagsAsContent();
    Code:
       0: aload_0
       1: getfield      #19                 // Field treatUnknownTagsAsContent:Z
       4: ireturn

  public void setTreatUnknownTagsAsContent(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field treatUnknownTagsAsContent:Z
       5: return

  public boolean isOmitDeprecatedTags();
    Code:
       0: aload_0
       1: getfield      #20                 // Field omitDeprecatedTags:Z
       4: ireturn

  public void setOmitDeprecatedTags(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field omitDeprecatedTags:Z
       5: return

  public boolean isTreatDeprecatedTagsAsContent();
    Code:
       0: aload_0
       1: getfield      #21                 // Field treatDeprecatedTagsAsContent:Z
       4: ireturn

  public void setTreatDeprecatedTagsAsContent(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field treatDeprecatedTagsAsContent:Z
       5: return

  public boolean isOmitComments();
    Code:
       0: aload_0
       1: getfield      #22                 // Field omitComments:Z
       4: ireturn

  public void setOmitComments(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field omitComments:Z
       5: return

  public boolean isOmitXmlDeclaration();
    Code:
       0: aload_0
       1: getfield      #23                 // Field omitXmlDeclaration:Lorg/htmlcleaner/OptionalOutput;
       4: getstatic     #24                 // Field org/htmlcleaner/OptionalOutput.omit:Lorg/htmlcleaner/OptionalOutput;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public void setOmitXmlDeclaration(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          11
       5: getstatic     #24                 // Field org/htmlcleaner/OptionalOutput.omit:Lorg/htmlcleaner/OptionalOutput;
       8: goto          14
      11: getstatic     #25                 // Field org/htmlcleaner/OptionalOutput.alwaysOutput:Lorg/htmlcleaner/OptionalOutput;
      14: putfield      #23                 // Field omitXmlDeclaration:Lorg/htmlcleaner/OptionalOutput;
      17: return

  public boolean isOmitDoctypeDeclaration();
    Code:
       0: aload_0
       1: getfield      #26                 // Field omitDoctypeDeclaration:Lorg/htmlcleaner/OptionalOutput;
       4: getstatic     #24                 // Field org/htmlcleaner/OptionalOutput.omit:Lorg/htmlcleaner/OptionalOutput;
       7: if_acmpeq     17
      10: aload_0
      11: invokevirtual #27                 // Method isOmitHtmlEnvelope:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public void setOmitDoctypeDeclaration(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          11
       5: getstatic     #24                 // Field org/htmlcleaner/OptionalOutput.omit:Lorg/htmlcleaner/OptionalOutput;
       8: goto          14
      11: getstatic     #25                 // Field org/htmlcleaner/OptionalOutput.alwaysOutput:Lorg/htmlcleaner/OptionalOutput;
      14: putfield      #26                 // Field omitDoctypeDeclaration:Lorg/htmlcleaner/OptionalOutput;
      17: return

  public boolean isOmitHtmlEnvelope();
    Code:
       0: aload_0
       1: getfield      #28                 // Field omitHtmlEnvelope:Lorg/htmlcleaner/OptionalOutput;
       4: getstatic     #24                 // Field org/htmlcleaner/OptionalOutput.omit:Lorg/htmlcleaner/OptionalOutput;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public void setOmitHtmlEnvelope(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          11
       5: getstatic     #24                 // Field org/htmlcleaner/OptionalOutput.omit:Lorg/htmlcleaner/OptionalOutput;
       8: goto          14
      11: getstatic     #25                 // Field org/htmlcleaner/OptionalOutput.alwaysOutput:Lorg/htmlcleaner/OptionalOutput;
      14: putfield      #28                 // Field omitHtmlEnvelope:Lorg/htmlcleaner/OptionalOutput;
      17: return

  public boolean isUseEmptyElementTags();
    Code:
       0: aload_0
       1: getfield      #29                 // Field useEmptyElementTags:Z
       4: ireturn

  public void setUseEmptyElementTags(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #29                 // Field useEmptyElementTags:Z
       5: return

  public boolean isAllowMultiWordAttributes();
    Code:
       0: aload_0
       1: getfield      #30                 // Field allowMultiWordAttributes:Z
       4: ireturn

  public void setAllowMultiWordAttributes(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #30                 // Field allowMultiWordAttributes:Z
       5: return

  public boolean isAllowHtmlInsideAttributes();
    Code:
       0: aload_0
       1: getfield      #31                 // Field allowHtmlInsideAttributes:Z
       4: ireturn

  public void setAllowHtmlInsideAttributes(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #31                 // Field allowHtmlInsideAttributes:Z
       5: return

  public boolean isIgnoreQuestAndExclam();
    Code:
       0: aload_0
       1: getfield      #32                 // Field ignoreQuestAndExclam:Z
       4: ireturn

  public void setIgnoreQuestAndExclam(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #32                 // Field ignoreQuestAndExclam:Z
       5: return

  public boolean isNamespacesAware();
    Code:
       0: aload_0
       1: getfield      #33                 // Field namespacesAware:Z
       4: ireturn

  public void setNamespacesAware(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #33                 // Field namespacesAware:Z
       5: return

  public boolean isAddNewlineToHeadAndBody();
    Code:
       0: aload_0
       1: getfield      #34                 // Field addNewlineToHeadAndBody:Z
       4: ireturn

  public void setAddNewlineToHeadAndBody(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #34                 // Field addNewlineToHeadAndBody:Z
       5: return

  public boolean isKeepWhitespaceAndCommentsInHead();
    Code:
       0: aload_0
       1: getfield      #35                 // Field keepWhitespaceAndCommentsInHead:Z
       4: ireturn

  public void setKeepWhitespaceAndCommentsInHead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #35                 // Field keepWhitespaceAndCommentsInHead:Z
       5: return

  public java.lang.String getHyphenReplacementInComment();
    Code:
       0: aload_0
       1: getfield      #36                 // Field hyphenReplacementInComment:Ljava/lang/String;
       4: areturn

  public void setHyphenReplacementInComment(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field hyphenReplacementInComment:Ljava/lang/String;
       5: return

  public java.lang.String getPruneTags();
    Code:
       0: aload_0
       1: getfield      #37                 // Field pruneTags:Ljava/lang/String;
       4: areturn

  public void setPruneTags(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field pruneTags:Ljava/lang/String;
       5: aload_0
       6: invokespecial #38                 // Method resetPruneTagSet:()V
       9: aload_0
      10: aload_0
      11: getfield      #7                  // Field pruneTagSet:Ljava/util/Set;
      14: aload_1
      15: invokespecial #39                 // Method addTagNameConditions:(Ljava/util/Set;Ljava/lang/String;)V
      18: return

  public void addPruneTagNodeCondition(org.htmlcleaner.conditional.ITagNodeCondition);
    Code:
       0: aload_0
       1: getfield      #7                  // Field pruneTagSet:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #40,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public java.util.Set<org.htmlcleaner.conditional.ITagNodeCondition> getPruneTagSet();
    Code:
       0: aload_0
       1: getfield      #7                  // Field pruneTagSet:Ljava/util/Set;
       4: areturn

  public java.lang.String getAllowTags();
    Code:
       0: aload_0
       1: getfield      #41                 // Field allowTags:Ljava/lang/String;
       4: areturn

  public void setAllowTags(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field allowTags:Ljava/lang/String;
       5: aload_0
       6: aload_1
       7: invokespecial #42                 // Method setAllowTagSet:(Ljava/lang/String;)V
      10: return

  private void setAllowTagSet(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field allowTagSet:Ljava/util/Set;
       4: invokeinterface #43,  1           // InterfaceMethod java/util/Set.clear:()V
       9: aload_0
      10: aload_0
      11: getfield      #8                  // Field allowTagSet:Ljava/util/Set;
      14: aload_1
      15: invokespecial #39                 // Method addTagNameConditions:(Ljava/util/Set;Ljava/lang/String;)V
      18: return

  public boolean isTransSpecialEntitiesToNCR();
    Code:
       0: aload_0
       1: getfield      #44                 // Field transSpecialEntitiesToNCR:Z
       4: ireturn

  public void setTransSpecialEntitiesToNCR(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #44                 // Field transSpecialEntitiesToNCR:Z
       5: return

  private void addTagNameConditions(java.util.Set<org.htmlcleaner.conditional.ITagNodeCondition>, java.lang.String);
    Code:
       0: aload_2
       1: ifnull        49
       4: new           #45                 // class java/util/StringTokenizer
       7: dup
       8: aload_2
       9: ldc           #46                 // String ,
      11: invokespecial #47                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      14: astore_3
      15: aload_3
      16: invokevirtual #48                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      19: ifeq          49
      22: aload_1
      23: new           #49                 // class org/htmlcleaner/conditional/TagNodeNameCondition
      26: dup
      27: aload_3
      28: invokevirtual #50                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      31: invokevirtual #51                 // Method java/lang/String.trim:()Ljava/lang/String;
      34: invokevirtual #52                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      37: invokespecial #53                 // Method org/htmlcleaner/conditional/TagNodeNameCondition."<init>":(Ljava/lang/String;)V
      40: invokeinterface #40,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      45: pop
      46: goto          15
      49: return

  public java.util.Set<org.htmlcleaner.conditional.ITagNodeCondition> getAllowTagSet();
    Code:
       0: aload_0
       1: getfield      #8                  // Field allowTagSet:Ljava/util/Set;
       4: areturn

  public void setCharset(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field charset:Ljava/lang/String;
       5: return

  public java.lang.String getCharset();
    Code:
       0: aload_0
       1: getfield      #10                 // Field charset:Ljava/lang/String;
       4: areturn

  public java.lang.String getBooleanAttributeValues();
    Code:
       0: aload_0
       1: getfield      #54                 // Field booleanAttributeValues:Ljava/lang/String;
       4: areturn

  public void setBooleanAttributeValues(java.lang.String);
    Code:
       0: ldc           #55                 // String self
       2: aload_1
       3: invokevirtual #56                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       6: ifne          27
       9: ldc           #57                 // String empty
      11: aload_1
      12: invokevirtual #56                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      15: ifne          27
      18: ldc           #58                 // String true
      20: aload_1
      21: invokevirtual #56                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      24: ifeq          38
      27: aload_0
      28: aload_1
      29: invokevirtual #52                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      32: putfield      #54                 // Field booleanAttributeValues:Ljava/lang/String;
      35: goto          44
      38: aload_0
      39: ldc           #55                 // String self
      41: putfield      #54                 // Field booleanAttributeValues:Ljava/lang/String;
      44: return

  public void reset();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #13                 // Field advancedXmlEscape:Z
       5: aload_0
       6: iconst_1
       7: putfield      #15                 // Field useCdataForScriptAndStyle:Z
      10: aload_0
      11: iconst_1
      12: putfield      #16                 // Field translateSpecialEntities:Z
      15: aload_0
      16: iconst_1
      17: putfield      #17                 // Field recognizeUnicodeChars:Z
      20: aload_0
      21: iconst_0
      22: putfield      #18                 // Field omitUnknownTags:Z
      25: aload_0
      26: iconst_0
      27: putfield      #19                 // Field treatUnknownTagsAsContent:Z
      30: aload_0
      31: iconst_0
      32: putfield      #20                 // Field omitDeprecatedTags:Z
      35: aload_0
      36: iconst_0
      37: putfield      #21                 // Field treatDeprecatedTagsAsContent:Z
      40: aload_0
      41: iconst_0
      42: putfield      #22                 // Field omitComments:Z
      45: aload_0
      46: getstatic     #25                 // Field org/htmlcleaner/OptionalOutput.alwaysOutput:Lorg/htmlcleaner/OptionalOutput;
      49: putfield      #23                 // Field omitXmlDeclaration:Lorg/htmlcleaner/OptionalOutput;
      52: aload_0
      53: getstatic     #25                 // Field org/htmlcleaner/OptionalOutput.alwaysOutput:Lorg/htmlcleaner/OptionalOutput;
      56: putfield      #26                 // Field omitDoctypeDeclaration:Lorg/htmlcleaner/OptionalOutput;
      59: aload_0
      60: getstatic     #25                 // Field org/htmlcleaner/OptionalOutput.alwaysOutput:Lorg/htmlcleaner/OptionalOutput;
      63: putfield      #28                 // Field omitHtmlEnvelope:Lorg/htmlcleaner/OptionalOutput;
      66: aload_0
      67: iconst_1
      68: putfield      #29                 // Field useEmptyElementTags:Z
      71: aload_0
      72: iconst_1
      73: putfield      #30                 // Field allowMultiWordAttributes:Z
      76: aload_0
      77: iconst_0
      78: putfield      #31                 // Field allowHtmlInsideAttributes:Z
      81: aload_0
      82: iconst_0
      83: putfield      #32                 // Field ignoreQuestAndExclam:Z
      86: aload_0
      87: iconst_1
      88: putfield      #33                 // Field namespacesAware:Z
      91: aload_0
      92: iconst_1
      93: putfield      #34                 // Field addNewlineToHeadAndBody:Z
      96: aload_0
      97: iconst_1
      98: putfield      #35                 // Field keepWhitespaceAndCommentsInHead:Z
     101: aload_0
     102: ldc           #59                 // String =
     104: putfield      #36                 // Field hyphenReplacementInComment:Ljava/lang/String;
     107: aload_0
     108: aconst_null
     109: invokevirtual #60                 // Method setPruneTags:(Ljava/lang/String;)V
     112: aload_0
     113: aconst_null
     114: invokevirtual #61                 // Method setAllowTags:(Ljava/lang/String;)V
     117: aload_0
     118: ldc           #55                 // String self
     120: putfield      #54                 // Field booleanAttributeValues:Ljava/lang/String;
     123: aload_0
     124: ldc           #9                  // String UTF-8
     126: putfield      #10                 // Field charset:Ljava/lang/String;
     129: aload_0
     130: getfield      #4                  // Field cleanerTransformations:Lorg/htmlcleaner/CleanerTransformations;
     133: invokevirtual #62                 // Method org/htmlcleaner/CleanerTransformations.clear:()V
     136: aload_0
     137: invokespecial #38                 // Method resetPruneTagSet:()V
     140: aload_0
     141: getstatic     #63                 // Field org/htmlcleaner/DefaultTagProvider.INSTANCE:Lorg/htmlcleaner/DefaultTagProvider;
     144: putfield      #12                 // Field tagInfoProvider:Lorg/htmlcleaner/ITagInfoProvider;
     147: aload_0
     148: new           #64                 // class java/util/ArrayList
     151: dup
     152: invokespecial #65                 // Method java/util/ArrayList."<init>":()V
     155: putfield      #66                 // Field htmlModificationListeners:Ljava/util/List;
     158: return

  private void resetPruneTagSet();
    Code:
       0: aload_0
       1: getfield      #7                  // Field pruneTagSet:Ljava/util/Set;
       4: invokeinterface #43,  1           // InterfaceMethod java/util/Set.clear:()V
       9: aload_0
      10: getfield      #7                  // Field pruneTagSet:Ljava/util/Set;
      13: getstatic     #67                 // Field org/htmlcleaner/conditional/TagNodeAutoGeneratedCondition.INSTANCE:Lorg/htmlcleaner/conditional/TagNodeAutoGeneratedCondition;
      16: invokeinterface #40,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      21: pop
      22: return

  public org.htmlcleaner.CleanerTransformations getCleanerTransformations();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cleanerTransformations:Lorg/htmlcleaner/CleanerTransformations;
       4: areturn

  public void setCleanerTransformations(org.htmlcleaner.CleanerTransformations);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: aload_0
       5: getfield      #4                  // Field cleanerTransformations:Lorg/htmlcleaner/CleanerTransformations;
       8: invokevirtual #62                 // Method org/htmlcleaner/CleanerTransformations.clear:()V
      11: goto          19
      14: aload_0
      15: aload_1
      16: putfield      #4                  // Field cleanerTransformations:Lorg/htmlcleaner/CleanerTransformations;
      19: return

  public void addHtmlModificationListener(org.htmlcleaner.audit.HtmlModificationListener);
    Code:
       0: aload_0
       1: getfield      #66                 // Field htmlModificationListeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #68,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void fireConditionModification(org.htmlcleaner.conditional.ITagNodeCondition, org.htmlcleaner.TagNode);
    Code:
       0: aload_0
       1: getfield      #66                 // Field htmlModificationListeners:Ljava/util/List;
       4: invokeinterface #69,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          42
      19: aload_3
      20: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #72                 // class org/htmlcleaner/audit/HtmlModificationListener
      28: astore        4
      30: aload         4
      32: aload_1
      33: aload_2
      34: invokeinterface #73,  3           // InterfaceMethod org/htmlcleaner/audit/HtmlModificationListener.fireConditionModification:(Lorg/htmlcleaner/conditional/ITagNodeCondition;Lorg/htmlcleaner/TagNode;)V
      39: goto          10
      42: return

  public void fireHtmlError(boolean, org.htmlcleaner.TagNode, org.htmlcleaner.audit.ErrorType);
    Code:
       0: aload_0
       1: getfield      #66                 // Field htmlModificationListeners:Ljava/util/List;
       4: invokeinterface #69,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore        4
      11: aload         4
      13: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          46
      21: aload         4
      23: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #72                 // class org/htmlcleaner/audit/HtmlModificationListener
      31: astore        5
      33: aload         5
      35: iload_1
      36: aload_2
      37: aload_3
      38: invokeinterface #74,  4           // InterfaceMethod org/htmlcleaner/audit/HtmlModificationListener.fireHtmlError:(ZLorg/htmlcleaner/TagNode;Lorg/htmlcleaner/audit/ErrorType;)V
      43: goto          11
      46: return

  public void fireUglyHtml(boolean, org.htmlcleaner.TagNode, org.htmlcleaner.audit.ErrorType);
    Code:
       0: aload_0
       1: getfield      #66                 // Field htmlModificationListeners:Ljava/util/List;
       4: invokeinterface #69,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore        4
      11: aload         4
      13: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          46
      21: aload         4
      23: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #72                 // class org/htmlcleaner/audit/HtmlModificationListener
      31: astore        5
      33: aload         5
      35: iload_1
      36: aload_2
      37: aload_3
      38: invokeinterface #75,  4           // InterfaceMethod org/htmlcleaner/audit/HtmlModificationListener.fireUglyHtml:(ZLorg/htmlcleaner/TagNode;Lorg/htmlcleaner/audit/ErrorType;)V
      43: goto          11
      46: return

  public void fireUserDefinedModification(boolean, org.htmlcleaner.TagNode, org.htmlcleaner.audit.ErrorType);
    Code:
       0: aload_0
       1: getfield      #66                 // Field htmlModificationListeners:Ljava/util/List;
       4: invokeinterface #69,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore        4
      11: aload         4
      13: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          46
      21: aload         4
      23: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #72                 // class org/htmlcleaner/audit/HtmlModificationListener
      31: astore        5
      33: aload         5
      35: iload_1
      36: aload_2
      37: aload_3
      38: invokeinterface #76,  4           // InterfaceMethod org/htmlcleaner/audit/HtmlModificationListener.fireUserDefinedModification:(ZLorg/htmlcleaner/TagNode;Lorg/htmlcleaner/audit/ErrorType;)V
      43: goto          11
      46: return
}
