Compiled from "HtmlCleaner.java"
class org.htmlcleaner.HtmlCleaner$ChildBreaks {
  private java.util.Stack<org.htmlcleaner.HtmlCleaner$TagPos> closedByChildBreak;

  private java.util.Stack<org.htmlcleaner.HtmlCleaner$TagPos> breakingTags;

  private org.htmlcleaner.HtmlCleaner$ChildBreaks();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/Stack
       8: dup
       9: invokespecial #5                  // Method java/util/Stack."<init>":()V
      12: putfield      #2                  // Field closedByChildBreak:Ljava/util/Stack;
      15: aload_0
      16: new           #4                  // class java/util/Stack
      19: dup
      20: invokespecial #5                  // Method java/util/Stack."<init>":()V
      23: putfield      #6                  // Field breakingTags:Ljava/util/Stack;
      26: return

  public void addBreak(org.htmlcleaner.HtmlCleaner$TagPos, org.htmlcleaner.HtmlCleaner$TagPos);
    Code:
       0: aload_0
       1: getfield      #2                  // Field closedByChildBreak:Ljava/util/Stack;
       4: aload_1
       5: invokevirtual #7                  // Method java/util/Stack.add:(Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: getfield      #6                  // Field breakingTags:Ljava/util/Stack;
      13: aload_2
      14: invokevirtual #7                  // Method java/util/Stack.add:(Ljava/lang/Object;)Z
      17: pop
      18: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #2                  // Field closedByChildBreak:Ljava/util/Stack;
       4: invokevirtual #8                  // Method java/util/Stack.isEmpty:()Z
       7: ireturn

  public java.lang.String getLastBreakingTag();
    Code:
       0: aload_0
       1: getfield      #6                  // Field breakingTags:Ljava/util/Stack;
       4: invokevirtual #9                  // Method java/util/Stack.peek:()Ljava/lang/Object;
       7: checkcast     #10                 // class org/htmlcleaner/HtmlCleaner$TagPos
      10: invokestatic  #11                 // Method org/htmlcleaner/HtmlCleaner$TagPos.access$000:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)Ljava/lang/String;
      13: areturn

  public org.htmlcleaner.HtmlCleaner$TagPos pop();
    Code:
       0: aload_0
       1: getfield      #6                  // Field breakingTags:Ljava/util/Stack;
       4: invokevirtual #12                 // Method java/util/Stack.pop:()Ljava/lang/Object;
       7: pop
       8: aload_0
       9: getfield      #2                  // Field closedByChildBreak:Ljava/util/Stack;
      12: invokevirtual #12                 // Method java/util/Stack.pop:()Ljava/lang/Object;
      15: checkcast     #10                 // class org/htmlcleaner/HtmlCleaner$TagPos
      18: areturn

  public int getLastBreakingTagPosition();
    Code:
       0: aload_0
       1: getfield      #6                  // Field breakingTags:Ljava/util/Stack;
       4: invokevirtual #8                  // Method java/util/Stack.isEmpty:()Z
       7: ifeq          14
      10: iconst_m1
      11: goto          27
      14: aload_0
      15: getfield      #6                  // Field breakingTags:Ljava/util/Stack;
      18: invokevirtual #9                  // Method java/util/Stack.peek:()Ljava/lang/Object;
      21: checkcast     #10                 // class org/htmlcleaner/HtmlCleaner$TagPos
      24: invokestatic  #13                 // Method org/htmlcleaner/HtmlCleaner$TagPos.access$100:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)I
      27: ireturn

  static java.util.Stack access$800(org.htmlcleaner.HtmlCleaner$ChildBreaks);
    Code:
       0: aload_0
       1: getfield      #2                  // Field closedByChildBreak:Ljava/util/Stack;
       4: areturn

  org.htmlcleaner.HtmlCleaner$ChildBreaks(org.htmlcleaner.HtmlCleaner$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
