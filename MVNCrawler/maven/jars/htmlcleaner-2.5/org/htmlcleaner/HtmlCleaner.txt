Compiled from "HtmlCleaner.java"
public class org.htmlcleaner.HtmlCleaner {
  private static final java.lang.String MARKER_ATTRIBUTE;

  private org.htmlcleaner.CleanerProperties properties;

  private org.htmlcleaner.CleanerTransformations transformations;

  private transient java.util.Stack<org.htmlcleaner.HtmlCleaner$NestingState> nestingStates;

  private transient boolean _headOpened;

  private transient boolean _bodyOpened;

  private transient java.util.Set<org.htmlcleaner.TagNode> _headTags;

  private java.util.Set<java.lang.String> allTags;

  private org.htmlcleaner.TagNode htmlNode;

  private org.htmlcleaner.TagNode bodyNode;

  private org.htmlcleaner.TagNode headNode;

  private org.htmlcleaner.TagNode rootNode;

  private java.util.Set<org.htmlcleaner.TagNode> pruneNodeSet;

  private java.util.Set<org.htmlcleaner.conditional.ITagNodeCondition> pruneTagSet;

  private java.util.Set<org.htmlcleaner.conditional.ITagNodeCondition> allowTagSet;

  public org.htmlcleaner.HtmlCleaner();
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(Lorg/htmlcleaner/ITagInfoProvider;Lorg/htmlcleaner/CleanerProperties;)V
       6: return

  public org.htmlcleaner.HtmlCleaner(org.htmlcleaner.ITagInfoProvider);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(Lorg/htmlcleaner/ITagInfoProvider;Lorg/htmlcleaner/CleanerProperties;)V
       6: return

  public org.htmlcleaner.HtmlCleaner(org.htmlcleaner.CleanerProperties);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokespecial #1                  // Method "<init>":(Lorg/htmlcleaner/ITagInfoProvider;Lorg/htmlcleaner/CleanerProperties;)V
       6: return

  public org.htmlcleaner.HtmlCleaner(org.htmlcleaner.ITagInfoProvider, org.htmlcleaner.CleanerProperties);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/Stack
       8: dup
       9: invokespecial #4                  // Method java/util/Stack."<init>":()V
      12: putfield      #5                  // Field nestingStates:Ljava/util/Stack;
      15: aload_0
      16: new           #6                  // class java/util/LinkedHashSet
      19: dup
      20: invokespecial #7                  // Method java/util/LinkedHashSet."<init>":()V
      23: putfield      #8                  // Field _headTags:Ljava/util/Set;
      26: aload_0
      27: new           #9                  // class java/util/TreeSet
      30: dup
      31: invokespecial #10                 // Method java/util/TreeSet."<init>":()V
      34: putfield      #11                 // Field allTags:Ljava/util/Set;
      37: aload_0
      38: new           #12                 // class java/util/HashSet
      41: dup
      42: invokespecial #13                 // Method java/util/HashSet."<init>":()V
      45: putfield      #14                 // Field pruneNodeSet:Ljava/util/Set;
      48: aload_0
      49: aload_2
      50: ifnonnull     63
      53: new           #15                 // class org/htmlcleaner/CleanerProperties
      56: dup
      57: invokespecial #16                 // Method org/htmlcleaner/CleanerProperties."<init>":()V
      60: goto          64
      63: aload_2
      64: putfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
      67: aload_0
      68: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
      71: aload_1
      72: ifnonnull     81
      75: getstatic     #18                 // Field org/htmlcleaner/DefaultTagProvider.INSTANCE:Lorg/htmlcleaner/DefaultTagProvider;
      78: goto          82
      81: aload_1
      82: invokevirtual #19                 // Method org/htmlcleaner/CleanerProperties.setTagInfoProvider:(Lorg/htmlcleaner/ITagInfoProvider;)V
      85: return

  public org.htmlcleaner.TagNode clean(java.lang.String);
    Code:
       0: aload_0
       1: new           #20                 // class java/io/StringReader
       4: dup
       5: aload_1
       6: invokespecial #21                 // Method java/io/StringReader."<init>":(Ljava/lang/String;)V
       9: invokevirtual #22                 // Method clean:(Ljava/io/Reader;)Lorg/htmlcleaner/TagNode;
      12: areturn
      13: astore_2
      14: new           #24                 // class org/htmlcleaner/HtmlCleanerException
      17: dup
      18: aload_2
      19: invokespecial #25                 // Method org/htmlcleaner/HtmlCleanerException."<init>":(Ljava/lang/Throwable;)V
      22: athrow
    Exception table:
       from    to  target type
           0    12    13   Class java/io/IOException

  public org.htmlcleaner.TagNode clean(java.io.File, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #26                 // class java/io/FileInputStream
       3: dup
       4: aload_1
       5: invokespecial #27                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
       8: astore_3
       9: aconst_null
      10: astore        4
      12: new           #28                 // class java/io/InputStreamReader
      15: dup
      16: aload_3
      17: aload_2
      18: invokespecial #29                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
      21: astore        4
      23: aload_0
      24: aload         4
      26: invokevirtual #22                 // Method clean:(Ljava/io/Reader;)Lorg/htmlcleaner/TagNode;
      29: areturn
      30: astore        5
      32: aload         4
      34: ifnull        42
      37: aload         4
      39: invokevirtual #31                 // Method java/io/Reader.close:()V
      42: aload_3
      43: invokevirtual #32                 // Method java/io/FileInputStream.close:()V
      46: aload         5
      48: athrow
      49: astore        5
      51: aload         4
      53: ifnull        61
      56: aload         4
      58: invokevirtual #31                 // Method java/io/Reader.close:()V
      61: aload_3
      62: invokevirtual #32                 // Method java/io/FileInputStream.close:()V
      65: aload         5
      67: athrow
    Exception table:
       from    to  target type
          12    29    30   Class java/lang/RuntimeException
          12    29    49   Class java/io/IOException

  public org.htmlcleaner.TagNode clean(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
       6: invokevirtual #33                 // Method org/htmlcleaner/CleanerProperties.getCharset:()Ljava/lang/String;
       9: invokevirtual #34                 // Method clean:(Ljava/io/File;Ljava/lang/String;)Lorg/htmlcleaner/TagNode;
      12: areturn

  public org.htmlcleaner.TagNode clean(java.net.URL, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #35                 // Method org/htmlcleaner/Utils.readUrl:(Ljava/net/URL;Ljava/lang/String;)Ljava/lang/CharSequence;
       5: astore_3
       6: new           #20                 // class java/io/StringReader
       9: dup
      10: aload_3
      11: invokevirtual #36                 // Method java/lang/Object.toString:()Ljava/lang/String;
      14: invokespecial #21                 // Method java/io/StringReader."<init>":(Ljava/lang/String;)V
      17: astore        4
      19: aload_0
      20: aload         4
      22: invokevirtual #22                 // Method clean:(Ljava/io/Reader;)Lorg/htmlcleaner/TagNode;
      25: areturn

  public org.htmlcleaner.TagNode clean(java.net.URL) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
       6: invokevirtual #33                 // Method org/htmlcleaner/CleanerProperties.getCharset:()Ljava/lang/String;
       9: invokevirtual #37                 // Method clean:(Ljava/net/URL;Ljava/lang/String;)Lorg/htmlcleaner/TagNode;
      12: areturn

  public org.htmlcleaner.TagNode clean(java.io.InputStream, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #28                 // class java/io/InputStreamReader
       4: dup
       5: aload_1
       6: aload_2
       7: invokespecial #29                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
      10: invokevirtual #22                 // Method clean:(Ljava/io/Reader;)Lorg/htmlcleaner/TagNode;
      13: areturn

  public org.htmlcleaner.TagNode clean(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
       6: invokevirtual #33                 // Method org/htmlcleaner/CleanerProperties.getCharset:()Ljava/lang/String;
       9: invokevirtual #38                 // Method clean:(Ljava/io/InputStream;Ljava/lang/String;)Lorg/htmlcleaner/TagNode;
      12: areturn

  public org.htmlcleaner.TagNode clean(java.io.Reader) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #39                 // Method pushNesting:()Lorg/htmlcleaner/HtmlCleaner$NestingState;
       4: pop
       5: aload_0
       6: iconst_0
       7: putfield      #40                 // Field _headOpened:Z
      10: aload_0
      11: iconst_0
      12: putfield      #41                 // Field _bodyOpened:Z
      15: aload_0
      16: getfield      #8                  // Field _headTags:Ljava/util/Set;
      19: invokeinterface #42,  1           // InterfaceMethod java/util/Set.clear:()V
      24: aload_0
      25: getfield      #11                 // Field allTags:Ljava/util/Set;
      28: invokeinterface #42,  1           // InterfaceMethod java/util/Set.clear:()V
      33: aload_0
      34: new           #12                 // class java/util/HashSet
      37: dup
      38: aload_0
      39: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
      42: invokevirtual #43                 // Method org/htmlcleaner/CleanerProperties.getPruneTagSet:()Ljava/util/Set;
      45: invokespecial #44                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      48: putfield      #45                 // Field pruneTagSet:Ljava/util/Set;
      51: aload_0
      52: new           #12                 // class java/util/HashSet
      55: dup
      56: aload_0
      57: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
      60: invokevirtual #46                 // Method org/htmlcleaner/CleanerProperties.getAllowTagSet:()Ljava/util/Set;
      63: invokespecial #44                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      66: putfield      #47                 // Field allowTagSet:Ljava/util/Set;
      69: aload_0
      70: aload_0
      71: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
      74: invokevirtual #48                 // Method org/htmlcleaner/CleanerProperties.getCleanerTransformations:()Lorg/htmlcleaner/CleanerTransformations;
      77: putfield      #49                 // Field transformations:Lorg/htmlcleaner/CleanerTransformations;
      80: aload_0
      81: getfield      #14                 // Field pruneNodeSet:Ljava/util/Set;
      84: invokeinterface #42,  1           // InterfaceMethod java/util/Set.clear:()V
      89: aload_0
      90: aload_0
      91: ldc           #50                 // String html
      93: invokespecial #51                 // Method newTagNode:(Ljava/lang/String;)Lorg/htmlcleaner/TagNode;
      96: putfield      #52                 // Field htmlNode:Lorg/htmlcleaner/TagNode;
      99: aload_0
     100: aload_0
     101: ldc           #53                 // String body
     103: invokespecial #51                 // Method newTagNode:(Ljava/lang/String;)Lorg/htmlcleaner/TagNode;
     106: putfield      #54                 // Field bodyNode:Lorg/htmlcleaner/TagNode;
     109: aload_0
     110: aload_0
     111: ldc           #55                 // String head
     113: invokespecial #51                 // Method newTagNode:(Ljava/lang/String;)Lorg/htmlcleaner/TagNode;
     116: putfield      #56                 // Field headNode:Lorg/htmlcleaner/TagNode;
     119: aload_0
     120: aconst_null
     121: putfield      #57                 // Field rootNode:Lorg/htmlcleaner/TagNode;
     124: aload_0
     125: getfield      #52                 // Field htmlNode:Lorg/htmlcleaner/TagNode;
     128: aload_0
     129: getfield      #56                 // Field headNode:Lorg/htmlcleaner/TagNode;
     132: invokevirtual #58                 // Method org/htmlcleaner/TagNode.addChild:(Ljava/lang/Object;)V
     135: aload_0
     136: getfield      #52                 // Field htmlNode:Lorg/htmlcleaner/TagNode;
     139: aload_0
     140: getfield      #54                 // Field bodyNode:Lorg/htmlcleaner/TagNode;
     143: invokevirtual #58                 // Method org/htmlcleaner/TagNode.addChild:(Ljava/lang/Object;)V
     146: new           #59                 // class org/htmlcleaner/HtmlTokenizer
     149: dup
     150: aload_0
     151: aload_1
     152: invokespecial #60                 // Method org/htmlcleaner/HtmlTokenizer."<init>":(Lorg/htmlcleaner/HtmlCleaner;Ljava/io/Reader;)V
     155: astore_2
     156: aload_2
     157: invokevirtual #61                 // Method org/htmlcleaner/HtmlTokenizer.start:()V
     160: aload_2
     161: invokevirtual #62                 // Method org/htmlcleaner/HtmlTokenizer.getTokenList:()Ljava/util/List;
     164: astore_3
     165: aload_0
     166: aload_3
     167: invokespecial #63                 // Method closeAll:(Ljava/util/List;)V
     170: aload_0
     171: aload_3
     172: invokespecial #64                 // Method createDocumentNodes:(Ljava/util/List;)V
     175: aload_0
     176: aload_2
     177: invokevirtual #65                 // Method org/htmlcleaner/HtmlTokenizer.getNamespacePrefixes:()Ljava/util/Set;
     180: invokespecial #66                 // Method calculateRootNode:(Ljava/util/Set;)V
     183: aload_0
     184: aload_3
     185: invokespecial #67                 // Method markNodesToPrune:(Ljava/util/List;)Z
     188: ifeq          194
     191: goto          183
     194: aload_0
     195: getfield      #14                 // Field pruneNodeSet:Ljava/util/Set;
     198: ifnull        269
     201: aload_0
     202: getfield      #14                 // Field pruneNodeSet:Ljava/util/Set;
     205: invokeinterface #68,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     210: ifne          269
     213: aload_0
     214: getfield      #14                 // Field pruneNodeSet:Ljava/util/Set;
     217: invokeinterface #69,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     222: astore        4
     224: aload         4
     226: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     231: ifeq          269
     234: aload         4
     236: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     241: checkcast     #72                 // class org/htmlcleaner/TagNode
     244: astore        5
     246: aload         5
     248: invokevirtual #73                 // Method org/htmlcleaner/TagNode.getParent:()Lorg/htmlcleaner/TagNode;
     251: astore        6
     253: aload         6
     255: ifnull        266
     258: aload         6
     260: aload         5
     262: invokevirtual #74                 // Method org/htmlcleaner/TagNode.removeChild:(Ljava/lang/Object;)Z
     265: pop
     266: goto          224
     269: aload_0
     270: getfield      #57                 // Field rootNode:Lorg/htmlcleaner/TagNode;
     273: aload_2
     274: invokevirtual #75                 // Method org/htmlcleaner/HtmlTokenizer.getDocType:()Lorg/htmlcleaner/DoctypeToken;
     277: invokevirtual #76                 // Method org/htmlcleaner/TagNode.setDocType:(Lorg/htmlcleaner/DoctypeToken;)V
     280: aload_0
     281: invokespecial #77                 // Method popNesting:()Lorg/htmlcleaner/HtmlCleaner$NestingState;
     284: pop
     285: aload_0
     286: getfield      #57                 // Field rootNode:Lorg/htmlcleaner/TagNode;
     289: areturn

  private boolean markNodesToPrune(java.util.List);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokeinterface #78,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          92
      18: aload_3
      19: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: astore        4
      26: aload         4
      28: instanceof    #72                 // class org/htmlcleaner/TagNode
      31: ifeq          89
      34: aload_0
      35: getfield      #14                 // Field pruneNodeSet:Ljava/util/Set;
      38: aload         4
      40: invokeinterface #79,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      45: ifne          89
      48: aload         4
      50: checkcast     #72                 // class org/htmlcleaner/TagNode
      53: astore        5
      55: aload_0
      56: aload         5
      58: invokespecial #80                 // Method addIfNeededToPruneSet:(Lorg/htmlcleaner/TagNode;)Z
      61: ifeq          69
      64: iconst_1
      65: istore_2
      66: goto          89
      69: aload         5
      71: invokevirtual #81                 // Method org/htmlcleaner/TagNode.isEmpty:()Z
      74: ifne          89
      77: iload_2
      78: aload_0
      79: aload         5
      81: invokevirtual #82                 // Method org/htmlcleaner/TagNode.getAllChildren:()Ljava/util/List;
      84: invokespecial #67                 // Method markNodesToPrune:(Ljava/util/List;)Z
      87: ior
      88: istore_2
      89: goto          9
      92: iload_2
      93: ireturn

  private void calculateRootNode(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #52                 // Field htmlNode:Lorg/htmlcleaner/TagNode;
       5: putfield      #57                 // Field rootNode:Lorg/htmlcleaner/TagNode;
       8: aload_0
       9: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
      12: invokevirtual #83                 // Method org/htmlcleaner/CleanerProperties.isOmitHtmlEnvelope:()Z
      15: ifeq          78
      18: aload_0
      19: getfield      #54                 // Field bodyNode:Lorg/htmlcleaner/TagNode;
      22: invokevirtual #82                 // Method org/htmlcleaner/TagNode.getAllChildren:()Ljava/util/List;
      25: astore_2
      26: aload_0
      27: new           #72                 // class org/htmlcleaner/TagNode
      30: dup
      31: aconst_null
      32: invokespecial #84                 // Method org/htmlcleaner/TagNode."<init>":(Ljava/lang/String;)V
      35: putfield      #57                 // Field rootNode:Lorg/htmlcleaner/TagNode;
      38: aload_2
      39: ifnull        78
      42: aload_2
      43: invokeinterface #85,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      48: astore_3
      49: aload_3
      50: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      55: ifeq          78
      58: aload_3
      59: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      64: astore        4
      66: aload_0
      67: getfield      #57                 // Field rootNode:Lorg/htmlcleaner/TagNode;
      70: aload         4
      72: invokevirtual #58                 // Method org/htmlcleaner/TagNode.addChild:(Ljava/lang/Object;)V
      75: goto          49
      78: aload_0
      79: getfield      #57                 // Field rootNode:Lorg/htmlcleaner/TagNode;
      82: invokevirtual #86                 // Method org/htmlcleaner/TagNode.getAttributes:()Ljava/util/Map;
      85: astore_2
      86: aload_0
      87: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
      90: invokevirtual #87                 // Method org/htmlcleaner/CleanerProperties.isNamespacesAware:()Z
      93: ifeq          184
      96: aload_1
      97: ifnull        184
     100: aload_1
     101: invokeinterface #69,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     106: astore_3
     107: aload_3
     108: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     113: ifeq          184
     116: aload_3
     117: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     122: checkcast     #88                 // class java/lang/String
     125: astore        4
     127: new           #89                 // class java/lang/StringBuilder
     130: dup
     131: invokespecial #90                 // Method java/lang/StringBuilder."<init>":()V
     134: ldc           #91                 // String xmlns:
     136: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: aload         4
     141: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: invokevirtual #93                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     147: astore        5
     149: aload_2
     150: aload         5
     152: invokeinterface #94,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     157: ifne          181
     160: aload         4
     162: ldc           #95                 // String xml
     164: invokevirtual #96                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     167: ifne          181
     170: aload_0
     171: getfield      #57                 // Field rootNode:Lorg/htmlcleaner/TagNode;
     174: aload         5
     176: aload         4
     178: invokevirtual #97                 // Method org/htmlcleaner/TagNode.addAttribute:(Ljava/lang/String;Ljava/lang/String;)V
     181: goto          107
     184: return

  private void addAttributesToTag(org.htmlcleaner.TagNode, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_2
       1: ifnull        90
       4: aload_1
       5: invokevirtual #86                 // Method org/htmlcleaner/TagNode.getAttributes:()Ljava/util/Map;
       8: astore_3
       9: aload_2
      10: invokeinterface #98,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      15: invokeinterface #99,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      20: astore        4
      22: aload         4
      24: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          90
      32: aload         4
      34: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #100                // class java/util/Map$Entry
      42: astore        5
      44: aload         5
      46: invokeinterface #101,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      51: checkcast     #88                 // class java/lang/String
      54: astore        6
      56: aload_3
      57: aload         6
      59: invokeinterface #94,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      64: ifne          87
      67: aload         5
      69: invokeinterface #102,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      74: checkcast     #88                 // class java/lang/String
      77: astore        7
      79: aload_1
      80: aload         6
      82: aload         7
      84: invokevirtual #97                 // Method org/htmlcleaner/TagNode.addAttribute:(Ljava/lang/String;Ljava/lang/String;)V
      87: goto          22
      90: return

  private boolean isFatalTagSatisfied(org.htmlcleaner.TagInfo);
    Code:
       0: aload_1
       1: ifnull        26
       4: aload_1
       5: invokevirtual #103                // Method org/htmlcleaner/TagInfo.getFatalTag:()Ljava/lang/String;
       8: astore_2
       9: aload_2
      10: ifnonnull     17
      13: iconst_1
      14: goto          25
      17: aload_0
      18: invokespecial #104                // Method getOpenTags:()Lorg/htmlcleaner/HtmlCleaner$OpenTags;
      21: aload_2
      22: invokestatic  #105                // Method org/htmlcleaner/HtmlCleaner$OpenTags.access$300:(Lorg/htmlcleaner/HtmlCleaner$OpenTags;Ljava/lang/String;)Z
      25: ireturn
      26: iconst_1
      27: ireturn

  private boolean mustAddRequiredParent(org.htmlcleaner.TagInfo);
    Code:
       0: aload_1
       1: ifnull        128
       4: aload_1
       5: invokevirtual #106                // Method org/htmlcleaner/TagInfo.getRequiredParent:()Ljava/lang/String;
       8: astore_2
       9: aload_2
      10: ifnull        128
      13: aload_1
      14: invokevirtual #103                // Method org/htmlcleaner/TagInfo.getFatalTag:()Ljava/lang/String;
      17: astore_3
      18: iconst_m1
      19: istore        4
      21: aload_3
      22: ifnull        47
      25: aload_0
      26: invokespecial #104                // Method getOpenTags:()Lorg/htmlcleaner/HtmlCleaner$OpenTags;
      29: aload_3
      30: invokestatic  #107                // Method org/htmlcleaner/HtmlCleaner$OpenTags.access$400:(Lorg/htmlcleaner/HtmlCleaner$OpenTags;Ljava/lang/String;)Lorg/htmlcleaner/HtmlCleaner$TagPos;
      33: astore        5
      35: aload         5
      37: ifnull        47
      40: aload         5
      42: invokestatic  #108                // Method org/htmlcleaner/HtmlCleaner$TagPos.access$100:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)I
      45: istore        4
      47: aload_0
      48: invokespecial #104                // Method getOpenTags:()Lorg/htmlcleaner/HtmlCleaner$OpenTags;
      51: invokestatic  #109                // Method org/htmlcleaner/HtmlCleaner$OpenTags.access$500:(Lorg/htmlcleaner/HtmlCleaner$OpenTags;)Ljava/util/List;
      54: aload_0
      55: invokespecial #104                // Method getOpenTags:()Lorg/htmlcleaner/HtmlCleaner$OpenTags;
      58: invokestatic  #109                // Method org/htmlcleaner/HtmlCleaner$OpenTags.access$500:(Lorg/htmlcleaner/HtmlCleaner$OpenTags;)Ljava/util/List;
      61: invokeinterface #110,  1          // InterfaceMethod java/util/List.size:()I
      66: invokeinterface #111,  2          // InterfaceMethod java/util/List.listIterator:(I)Ljava/util/ListIterator;
      71: astore        5
      73: aload         5
      75: invokeinterface #112,  1          // InterfaceMethod java/util/ListIterator.hasPrevious:()Z
      80: ifeq          126
      83: aload         5
      85: invokeinterface #113,  1          // InterfaceMethod java/util/ListIterator.previous:()Ljava/lang/Object;
      90: checkcast     #114                // class org/htmlcleaner/HtmlCleaner$TagPos
      93: astore        6
      95: aload_1
      96: aload         6
      98: invokestatic  #115                // Method org/htmlcleaner/HtmlCleaner$TagPos.access$000:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)Ljava/lang/String;
     101: invokevirtual #116                // Method org/htmlcleaner/TagInfo.isHigher:(Ljava/lang/String;)Z
     104: ifeq          123
     107: aload         6
     109: invokestatic  #108                // Method org/htmlcleaner/HtmlCleaner$TagPos.access$100:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)I
     112: iload         4
     114: if_icmpgt     121
     117: iconst_1
     118: goto          122
     121: iconst_0
     122: ireturn
     123: goto          73
     126: iconst_1
     127: ireturn
     128: iconst_0
     129: ireturn

  private org.htmlcleaner.TagNode newTagNode(java.lang.String);
    Code:
       0: new           #72                 // class org/htmlcleaner/TagNode
       3: dup
       4: aload_1
       5: invokespecial #84                 // Method org/htmlcleaner/TagNode."<init>":(Ljava/lang/String;)V
       8: astore_2
       9: aload_2
      10: areturn

  private org.htmlcleaner.TagNode createTagNode(org.htmlcleaner.TagNode);
    Code:
       0: aload_1
       1: invokevirtual #117                // Method org/htmlcleaner/TagNode.setFormed:()V
       4: aload_1
       5: areturn

  private boolean isAllowedInLastOpenTag(org.htmlcleaner.BaseToken);
    Code:
       0: aload_0
       1: invokespecial #104                // Method getOpenTags:()Lorg/htmlcleaner/HtmlCleaner$OpenTags;
       4: invokestatic  #118                // Method org/htmlcleaner/HtmlCleaner$OpenTags.access$600:(Lorg/htmlcleaner/HtmlCleaner$OpenTags;)Lorg/htmlcleaner/HtmlCleaner$TagPos;
       7: astore_2
       8: aload_2
       9: ifnull        28
      12: aload_2
      13: invokestatic  #119                // Method org/htmlcleaner/HtmlCleaner$TagPos.access$200:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)Lorg/htmlcleaner/TagInfo;
      16: ifnull        28
      19: aload_2
      20: invokestatic  #119                // Method org/htmlcleaner/HtmlCleaner$TagPos.access$200:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)Lorg/htmlcleaner/TagInfo;
      23: aload_1
      24: invokevirtual #120                // Method org/htmlcleaner/TagInfo.allowsItem:(Lorg/htmlcleaner/BaseToken;)Z
      27: ireturn
      28: iconst_1
      29: ireturn

  private void saveToLastOpenTag(java.util.List, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #104                // Method getOpenTags:()Lorg/htmlcleaner/HtmlCleaner$OpenTags;
       4: invokestatic  #118                // Method org/htmlcleaner/HtmlCleaner$OpenTags.access$600:(Lorg/htmlcleaner/HtmlCleaner$OpenTags;)Lorg/htmlcleaner/HtmlCleaner$TagPos;
       7: astore_3
       8: aload_3
       9: ifnull        30
      12: aload_3
      13: invokestatic  #119                // Method org/htmlcleaner/HtmlCleaner$TagPos.access$200:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)Lorg/htmlcleaner/TagInfo;
      16: ifnull        30
      19: aload_3
      20: invokestatic  #119                // Method org/htmlcleaner/HtmlCleaner$TagPos.access$200:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)Lorg/htmlcleaner/TagInfo;
      23: invokevirtual #121                // Method org/htmlcleaner/TagInfo.isIgnorePermitted:()Z
      26: ifeq          30
      29: return
      30: aload_0
      31: invokespecial #104                // Method getOpenTags:()Lorg/htmlcleaner/HtmlCleaner$OpenTags;
      34: invokestatic  #122                // Method org/htmlcleaner/HtmlCleaner$OpenTags.access$700:(Lorg/htmlcleaner/HtmlCleaner$OpenTags;)Lorg/htmlcleaner/HtmlCleaner$TagPos;
      37: astore        4
      39: aload         4
      41: ifnull        66
      44: aload_1
      45: aload         4
      47: invokestatic  #108                // Method org/htmlcleaner/HtmlCleaner$TagPos.access$100:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)I
      50: invokeinterface #123,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      55: checkcast     #72                 // class org/htmlcleaner/TagNode
      58: astore        5
      60: aload         5
      62: aload_2
      63: invokevirtual #124                // Method org/htmlcleaner/TagNode.addItemForMoving:(Ljava/lang/Object;)V
      66: return

  private boolean isStartToken(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #72                 // class org/htmlcleaner/TagNode
       4: ifeq          21
       7: aload_1
       8: checkcast     #72                 // class org/htmlcleaner/TagNode
      11: invokevirtual #125                // Method org/htmlcleaner/TagNode.isFormed:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  void makeTree(java.util.List, java.util.ListIterator<org.htmlcleaner.BaseToken>);
    Code:
       0: aload_2
       1: invokeinterface #126,  1          // InterfaceMethod java/util/ListIterator.hasNext:()Z
       6: ifeq          1531
       9: aload_2
      10: invokeinterface #127,  1          // InterfaceMethod java/util/ListIterator.next:()Ljava/lang/Object;
      15: checkcast     #128                // class org/htmlcleaner/BaseToken
      18: astore_3
      19: aload_3
      20: instanceof    #129                // class org/htmlcleaner/EndTagToken
      23: ifeq          491
      26: aload_3
      27: checkcast     #129                // class org/htmlcleaner/EndTagToken
      30: astore        4
      32: aload         4
      34: invokevirtual #130                // Method org/htmlcleaner/EndTagToken.getName:()Ljava/lang/String;
      37: astore        5
      39: aload_0
      40: invokevirtual #131                // Method getTagInfoProvider:()Lorg/htmlcleaner/ITagInfoProvider;
      43: aload         5
      45: invokeinterface #132,  2          // InterfaceMethod org/htmlcleaner/ITagInfoProvider.getTagInfo:(Ljava/lang/String;)Lorg/htmlcleaner/TagInfo;
      50: astore        6
      52: aload         6
      54: ifnonnull     67
      57: aload_0
      58: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
      61: invokevirtual #133                // Method org/htmlcleaner/CleanerProperties.isOmitUnknownTags:()Z
      64: ifne          90
      67: aload         6
      69: ifnull        100
      72: aload         6
      74: invokevirtual #134                // Method org/htmlcleaner/TagInfo.isDeprecated:()Z
      77: ifeq          100
      80: aload_0
      81: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
      84: invokevirtual #135                // Method org/htmlcleaner/CleanerProperties.isOmitDeprecatedTags:()Z
      87: ifeq          100
      90: aload_2
      91: aconst_null
      92: invokeinterface #136,  2          // InterfaceMethod java/util/ListIterator.set:(Ljava/lang/Object;)V
      97: goto          488
     100: aload         6
     102: ifnull        123
     105: aload         6
     107: invokevirtual #137                // Method org/htmlcleaner/TagInfo.allowsBody:()Z
     110: ifne          123
     113: aload_2
     114: aconst_null
     115: invokeinterface #136,  2          // InterfaceMethod java/util/ListIterator.set:(Ljava/lang/Object;)V
     120: goto          488
     123: aload_0
     124: invokespecial #104                // Method getOpenTags:()Lorg/htmlcleaner/HtmlCleaner$OpenTags;
     127: aload         5
     129: invokestatic  #107                // Method org/htmlcleaner/HtmlCleaner$OpenTags.access$400:(Lorg/htmlcleaner/HtmlCleaner$OpenTags;Ljava/lang/String;)Lorg/htmlcleaner/HtmlCleaner$TagPos;
     132: astore        7
     134: aload         7
     136: ifnull        488
     139: aload_0
     140: aload_1
     141: aload         7
     143: aload         4
     145: invokespecial #138                // Method closeSnippet:(Ljava/util/List;Lorg/htmlcleaner/HtmlCleaner$TagPos;Ljava/lang/Object;)Ljava/util/List;
     148: astore        8
     150: aload_2
     151: aconst_null
     152: invokeinterface #136,  2          // InterfaceMethod java/util/ListIterator.set:(Ljava/lang/Object;)V
     157: aload         8
     159: invokeinterface #110,  1          // InterfaceMethod java/util/List.size:()I
     164: iconst_1
     165: isub
     166: istore        9
     168: iload         9
     170: iflt          244
     173: aload         8
     175: iload         9
     177: invokeinterface #123,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     182: checkcast     #72                 // class org/htmlcleaner/TagNode
     185: astore        10
     187: iload         9
     189: ifle          238
     192: aload         6
     194: ifnull        238
     197: aload         6
     199: aload         10
     201: invokevirtual #139                // Method org/htmlcleaner/TagNode.getName:()Ljava/lang/String;
     204: invokevirtual #140                // Method org/htmlcleaner/TagInfo.isContinueAfter:(Ljava/lang/String;)Z
     207: ifeq          238
     210: aload         10
     212: invokevirtual #141                // Method org/htmlcleaner/TagNode.makeCopy:()Lorg/htmlcleaner/TagNode;
     215: astore        11
     217: aload         11
     219: iconst_1
     220: invokevirtual #142                // Method org/htmlcleaner/TagNode.setAutoGenerated:(Z)V
     223: aload_2
     224: aload         11
     226: invokeinterface #143,  2          // InterfaceMethod java/util/ListIterator.add:(Ljava/lang/Object;)V
     231: aload_2
     232: invokeinterface #113,  1          // InterfaceMethod java/util/ListIterator.previous:()Ljava/lang/Object;
     237: pop
     238: iinc          9, -1
     241: goto          168
     244: aload_0
     245: invokespecial #144                // Method getChildBreaks:()Lorg/htmlcleaner/HtmlCleaner$ChildBreaks;
     248: invokevirtual #145                // Method org/htmlcleaner/HtmlCleaner$ChildBreaks.isEmpty:()Z
     251: ifne          280
     254: aload         7
     256: invokestatic  #108                // Method org/htmlcleaner/HtmlCleaner$TagPos.access$100:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)I
     259: aload_0
     260: invokespecial #144                // Method getChildBreaks:()Lorg/htmlcleaner/HtmlCleaner$ChildBreaks;
     263: invokevirtual #146                // Method org/htmlcleaner/HtmlCleaner$ChildBreaks.getLastBreakingTagPosition:()I
     266: if_icmpge     280
     269: aload_0
     270: invokespecial #144                // Method getChildBreaks:()Lorg/htmlcleaner/HtmlCleaner$ChildBreaks;
     273: invokevirtual #147                // Method org/htmlcleaner/HtmlCleaner$ChildBreaks.pop:()Lorg/htmlcleaner/HtmlCleaner$TagPos;
     276: pop
     277: goto          254
     280: aload_0
     281: invokespecial #144                // Method getChildBreaks:()Lorg/htmlcleaner/HtmlCleaner$ChildBreaks;
     284: invokevirtual #145                // Method org/htmlcleaner/HtmlCleaner$ChildBreaks.isEmpty:()Z
     287: ifne          488
     290: aload         5
     292: aload_0
     293: invokespecial #144                // Method getChildBreaks:()Lorg/htmlcleaner/HtmlCleaner$ChildBreaks;
     296: invokevirtual #148                // Method org/htmlcleaner/HtmlCleaner$ChildBreaks.getLastBreakingTag:()Ljava/lang/String;
     299: invokevirtual #96                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     302: ifeq          488
     305: aload         7
     307: invokestatic  #108                // Method org/htmlcleaner/HtmlCleaner$TagPos.access$100:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)I
     310: aload_0
     311: invokespecial #144                // Method getChildBreaks:()Lorg/htmlcleaner/HtmlCleaner$ChildBreaks;
     314: invokevirtual #146                // Method org/htmlcleaner/HtmlCleaner$ChildBreaks.getLastBreakingTagPosition:()I
     317: if_icmpne     488
     320: aload_1
     321: aload_0
     322: invokespecial #144                // Method getChildBreaks:()Lorg/htmlcleaner/HtmlCleaner$ChildBreaks;
     325: invokestatic  #149                // Method org/htmlcleaner/HtmlCleaner$ChildBreaks.access$800:(Lorg/htmlcleaner/HtmlCleaner$ChildBreaks;)Ljava/util/Stack;
     328: invokevirtual #150                // Method java/util/Stack.peek:()Ljava/lang/Object;
     331: checkcast     #114                // class org/htmlcleaner/HtmlCleaner$TagPos
     334: invokestatic  #108                // Method org/htmlcleaner/HtmlCleaner$TagPos.access$100:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)I
     337: invokeinterface #123,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     342: ifnull        477
     345: aload_0
     346: invokespecial #144                // Method getChildBreaks:()Lorg/htmlcleaner/HtmlCleaner$ChildBreaks;
     349: invokevirtual #147                // Method org/htmlcleaner/HtmlCleaner$ChildBreaks.pop:()Lorg/htmlcleaner/HtmlCleaner$TagPos;
     352: invokestatic  #108                // Method org/htmlcleaner/HtmlCleaner$TagPos.access$100:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)I
     355: istore        9
     357: aload_1
     358: iload         9
     360: invokeinterface #123,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     365: astore        10
     367: aload         10
     369: instanceof    #72                 // class org/htmlcleaner/TagNode
     372: ifeq          388
     375: aload_0
     376: aload_2
     377: aload         10
     379: checkcast     #72                 // class org/htmlcleaner/TagNode
     382: invokespecial #151                // Method reopenBrokenNode:(Ljava/util/ListIterator;Lorg/htmlcleaner/TagNode;)V
     385: goto          474
     388: aload         10
     390: instanceof    #152                // class java/util/List
     393: ifeq          474
     396: aload         10
     398: checkcast     #152                // class java/util/List
     401: astore        11
     403: aload         11
     405: invokeinterface #78,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     410: astore        12
     412: aload         12
     414: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     419: ifeq          464
     422: aload         12
     424: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     429: checkcast     #72                 // class org/htmlcleaner/TagNode
     432: astore        13
     434: aload_2
     435: aload         13
     437: invokeinterface #143,  2          // InterfaceMethod java/util/ListIterator.add:(Ljava/lang/Object;)V
     442: aload_0
     443: aload_1
     444: aload_1
     445: aload_1
     446: invokeinterface #110,  1          // InterfaceMethod java/util/List.size:()I
     451: iconst_1
     452: isub
     453: invokeinterface #111,  2          // InterfaceMethod java/util/List.listIterator:(I)Ljava/util/ListIterator;
     458: invokevirtual #153                // Method makeTree:(Ljava/util/List;Ljava/util/ListIterator;)V
     461: goto          412
     464: aload_1
     465: iload         9
     467: aconst_null
     468: invokeinterface #154,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     473: pop
     474: goto          280
     477: aload_0
     478: invokespecial #144                // Method getChildBreaks:()Lorg/htmlcleaner/HtmlCleaner$ChildBreaks;
     481: invokevirtual #147                // Method org/htmlcleaner/HtmlCleaner$ChildBreaks.pop:()Lorg/htmlcleaner/HtmlCleaner$TagPos;
     484: pop
     485: goto          280
     488: goto          1528
     491: aload_0
     492: aload_3
     493: invokespecial #155                // Method isStartToken:(Ljava/lang/Object;)Z
     496: ifeq          1369
     499: aload_3
     500: checkcast     #72                 // class org/htmlcleaner/TagNode
     503: astore        4
     505: aload         4
     507: invokevirtual #139                // Method org/htmlcleaner/TagNode.getName:()Ljava/lang/String;
     510: astore        5
     512: aload_0
     513: invokevirtual #131                // Method getTagInfoProvider:()Lorg/htmlcleaner/ITagInfoProvider;
     516: aload         5
     518: invokeinterface #132,  2          // InterfaceMethod org/htmlcleaner/ITagInfoProvider.getTagInfo:(Ljava/lang/String;)Lorg/htmlcleaner/TagInfo;
     523: astore        6
     525: aload_0
     526: invokespecial #104                // Method getOpenTags:()Lorg/htmlcleaner/HtmlCleaner$OpenTags;
     529: invokestatic  #156                // Method org/htmlcleaner/HtmlCleaner$OpenTags.access$900:(Lorg/htmlcleaner/HtmlCleaner$OpenTags;)Z
     532: ifeq          539
     535: aconst_null
     536: goto          546
     539: aload_0
     540: invokespecial #104                // Method getOpenTags:()Lorg/htmlcleaner/HtmlCleaner$OpenTags;
     543: invokestatic  #118                // Method org/htmlcleaner/HtmlCleaner$OpenTags.access$600:(Lorg/htmlcleaner/HtmlCleaner$OpenTags;)Lorg/htmlcleaner/HtmlCleaner$TagPos;
     546: astore        7
     548: aload         7
     550: ifnonnull     557
     553: aconst_null
     554: goto          571
     557: aload_0
     558: invokevirtual #131                // Method getTagInfoProvider:()Lorg/htmlcleaner/ITagInfoProvider;
     561: aload         7
     563: invokestatic  #115                // Method org/htmlcleaner/HtmlCleaner$TagPos.access$000:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)Ljava/lang/String;
     566: invokeinterface #132,  2          // InterfaceMethod org/htmlcleaner/ITagInfoProvider.getTagInfo:(Ljava/lang/String;)Lorg/htmlcleaner/TagInfo;
     571: astore        8
     573: aload_0
     574: getfield      #11                 // Field allTags:Ljava/util/Set;
     577: aload         5
     579: invokeinterface #157,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     584: pop
     585: ldc           #50                 // String html
     587: aload         5
     589: invokevirtual #96                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     592: ifeq          618
     595: aload_0
     596: aload_0
     597: getfield      #52                 // Field htmlNode:Lorg/htmlcleaner/TagNode;
     600: aload         4
     602: invokevirtual #86                 // Method org/htmlcleaner/TagNode.getAttributes:()Ljava/util/Map;
     605: invokespecial #158                // Method addAttributesToTag:(Lorg/htmlcleaner/TagNode;Ljava/util/Map;)V
     608: aload_2
     609: aconst_null
     610: invokeinterface #136,  2          // InterfaceMethod java/util/ListIterator.set:(Ljava/lang/Object;)V
     615: goto          1366
     618: ldc           #53                 // String body
     620: aload         5
     622: invokevirtual #96                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     625: ifeq          656
     628: aload_0
     629: iconst_1
     630: putfield      #41                 // Field _bodyOpened:Z
     633: aload_0
     634: aload_0
     635: getfield      #54                 // Field bodyNode:Lorg/htmlcleaner/TagNode;
     638: aload         4
     640: invokevirtual #86                 // Method org/htmlcleaner/TagNode.getAttributes:()Ljava/util/Map;
     643: invokespecial #158                // Method addAttributesToTag:(Lorg/htmlcleaner/TagNode;Ljava/util/Map;)V
     646: aload_2
     647: aconst_null
     648: invokeinterface #136,  2          // InterfaceMethod java/util/ListIterator.set:(Ljava/lang/Object;)V
     653: goto          1366
     656: ldc           #55                 // String head
     658: aload         5
     660: invokevirtual #96                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     663: ifeq          694
     666: aload_0
     667: iconst_1
     668: putfield      #40                 // Field _headOpened:Z
     671: aload_0
     672: aload_0
     673: getfield      #56                 // Field headNode:Lorg/htmlcleaner/TagNode;
     676: aload         4
     678: invokevirtual #86                 // Method org/htmlcleaner/TagNode.getAttributes:()Ljava/util/Map;
     681: invokespecial #158                // Method addAttributesToTag:(Lorg/htmlcleaner/TagNode;Ljava/util/Map;)V
     684: aload_2
     685: aconst_null
     686: invokeinterface #136,  2          // InterfaceMethod java/util/ListIterator.set:(Ljava/lang/Object;)V
     691: goto          1366
     694: aload         6
     696: ifnonnull     732
     699: aload_0
     700: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
     703: invokevirtual #133                // Method org/htmlcleaner/CleanerProperties.isOmitUnknownTags:()Z
     706: ifeq          732
     709: aload_2
     710: aconst_null
     711: invokeinterface #136,  2          // InterfaceMethod java/util/ListIterator.set:(Ljava/lang/Object;)V
     716: aload_0
     717: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
     720: iconst_1
     721: aload         4
     723: getstatic     #159                // Field org/htmlcleaner/audit/ErrorType.Unknown:Lorg/htmlcleaner/audit/ErrorType;
     726: invokevirtual #160                // Method org/htmlcleaner/CleanerProperties.fireUglyHtml:(ZLorg/htmlcleaner/TagNode;Lorg/htmlcleaner/audit/ErrorType;)V
     729: goto          1366
     732: aload         6
     734: ifnull        778
     737: aload         6
     739: invokevirtual #134                // Method org/htmlcleaner/TagInfo.isDeprecated:()Z
     742: ifeq          778
     745: aload_0
     746: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
     749: invokevirtual #135                // Method org/htmlcleaner/CleanerProperties.isOmitDeprecatedTags:()Z
     752: ifeq          778
     755: aload_2
     756: aconst_null
     757: invokeinterface #136,  2          // InterfaceMethod java/util/ListIterator.set:(Ljava/lang/Object;)V
     762: aload_0
     763: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
     766: iconst_1
     767: aload         4
     769: getstatic     #161                // Field org/htmlcleaner/audit/ErrorType.Deprecated:Lorg/htmlcleaner/audit/ErrorType;
     772: invokevirtual #160                // Method org/htmlcleaner/CleanerProperties.fireUglyHtml:(ZLorg/htmlcleaner/TagNode;Lorg/htmlcleaner/audit/ErrorType;)V
     775: goto          1366
     778: aload         6
     780: ifnonnull     816
     783: aload         8
     785: ifnull        816
     788: aload         8
     790: invokevirtual #162                // Method org/htmlcleaner/TagInfo.allowsAnything:()Z
     793: ifne          816
     796: aload_0
     797: aload_1
     798: aload         7
     800: aload         4
     802: invokespecial #138                // Method closeSnippet:(Ljava/util/List;Lorg/htmlcleaner/HtmlCleaner$TagPos;Ljava/lang/Object;)Ljava/util/List;
     805: pop
     806: aload_2
     807: invokeinterface #113,  1          // InterfaceMethod java/util/ListIterator.previous:()Ljava/lang/Object;
     812: pop
     813: goto          1366
     816: aload         6
     818: ifnull        854
     821: aload         6
     823: invokevirtual #163                // Method org/htmlcleaner/TagInfo.hasPermittedTags:()Z
     826: ifeq          854
     829: aload_0
     830: invokespecial #104                // Method getOpenTags:()Lorg/htmlcleaner/HtmlCleaner$OpenTags;
     833: aload         6
     835: invokevirtual #164                // Method org/htmlcleaner/TagInfo.getPermittedTags:()Ljava/util/Set;
     838: invokestatic  #165                // Method org/htmlcleaner/HtmlCleaner$OpenTags.access$1000:(Lorg/htmlcleaner/HtmlCleaner$OpenTags;Ljava/util/Set;)Z
     841: ifeq          854
     844: aload_2
     845: aconst_null
     846: invokeinterface #136,  2          // InterfaceMethod java/util/ListIterator.set:(Ljava/lang/Object;)V
     851: goto          1366
     854: aload         6
     856: ifnull        902
     859: aload         6
     861: invokevirtual #166                // Method org/htmlcleaner/TagInfo.isUnique:()Z
     864: ifeq          902
     867: aload_0
     868: invokespecial #104                // Method getOpenTags:()Lorg/htmlcleaner/HtmlCleaner$OpenTags;
     871: aload         5
     873: invokestatic  #167                // Method org/htmlcleaner/HtmlCleaner$OpenTags.access$1100:(Lorg/htmlcleaner/HtmlCleaner$OpenTags;Ljava/lang/String;)Z
     876: ifeq          902
     879: aload_2
     880: aconst_null
     881: invokeinterface #136,  2          // InterfaceMethod java/util/ListIterator.set:(Ljava/lang/Object;)V
     886: aload_0
     887: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
     890: iconst_1
     891: aload         4
     893: getstatic     #168                // Field org/htmlcleaner/audit/ErrorType.UniqueTagDuplicated:Lorg/htmlcleaner/audit/ErrorType;
     896: invokevirtual #169                // Method org/htmlcleaner/CleanerProperties.fireHtmlError:(ZLorg/htmlcleaner/TagNode;Lorg/htmlcleaner/audit/ErrorType;)V
     899: goto          1366
     902: aload_0
     903: aload         6
     905: invokespecial #170                // Method isFatalTagSatisfied:(Lorg/htmlcleaner/TagInfo;)Z
     908: ifne          934
     911: aload_2
     912: aconst_null
     913: invokeinterface #136,  2          // InterfaceMethod java/util/ListIterator.set:(Ljava/lang/Object;)V
     918: aload_0
     919: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
     922: iconst_1
     923: aload         4
     925: getstatic     #171                // Field org/htmlcleaner/audit/ErrorType.FatalTagMissing:Lorg/htmlcleaner/audit/ErrorType;
     928: invokevirtual #169                // Method org/htmlcleaner/CleanerProperties.fireHtmlError:(ZLorg/htmlcleaner/TagNode;Lorg/htmlcleaner/audit/ErrorType;)V
     931: goto          1366
     934: aload_0
     935: aload         6
     937: invokespecial #172                // Method mustAddRequiredParent:(Lorg/htmlcleaner/TagInfo;)Z
     940: ifeq          1002
     943: aload         6
     945: invokevirtual #106                // Method org/htmlcleaner/TagInfo.getRequiredParent:()Ljava/lang/String;
     948: astore        9
     950: aload_0
     951: aload         9
     953: invokespecial #51                 // Method newTagNode:(Ljava/lang/String;)Lorg/htmlcleaner/TagNode;
     956: astore        10
     958: aload         10
     960: iconst_1
     961: invokevirtual #142                // Method org/htmlcleaner/TagNode.setAutoGenerated:(Z)V
     964: aload_2
     965: invokeinterface #113,  1          // InterfaceMethod java/util/ListIterator.previous:()Ljava/lang/Object;
     970: pop
     971: aload_2
     972: aload         10
     974: invokeinterface #143,  2          // InterfaceMethod java/util/ListIterator.add:(Ljava/lang/Object;)V
     979: aload_2
     980: invokeinterface #113,  1          // InterfaceMethod java/util/ListIterator.previous:()Ljava/lang/Object;
     985: pop
     986: aload_0
     987: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
     990: iconst_1
     991: aload         4
     993: getstatic     #173                // Field org/htmlcleaner/audit/ErrorType.RequiredParentMissing:Lorg/htmlcleaner/audit/ErrorType;
     996: invokevirtual #169                // Method org/htmlcleaner/CleanerProperties.fireHtmlError:(ZLorg/htmlcleaner/TagNode;Lorg/htmlcleaner/audit/ErrorType;)V
     999: goto          1366
    1002: aload         6
    1004: ifnull        1287
    1007: aload         7
    1009: ifnull        1287
    1012: aload         6
    1014: aload         8
    1016: invokevirtual #174                // Method org/htmlcleaner/TagInfo.isMustCloseTag:(Lorg/htmlcleaner/TagInfo;)Z
    1019: ifeq          1287
    1022: aload_0
    1023: invokespecial #144                // Method getChildBreaks:()Lorg/htmlcleaner/HtmlCleaner$ChildBreaks;
    1026: aload         7
    1028: new           #114                // class org/htmlcleaner/HtmlCleaner$TagPos
    1031: dup
    1032: aload_0
    1033: aload_2
    1034: invokeinterface #175,  1          // InterfaceMethod java/util/ListIterator.previousIndex:()I
    1039: aload         6
    1041: invokevirtual #176                // Method org/htmlcleaner/TagInfo.getName:()Ljava/lang/String;
    1044: invokespecial #177                // Method org/htmlcleaner/HtmlCleaner$TagPos."<init>":(Lorg/htmlcleaner/HtmlCleaner;ILjava/lang/String;)V
    1047: invokevirtual #178                // Method org/htmlcleaner/HtmlCleaner$ChildBreaks.addBreak:(Lorg/htmlcleaner/HtmlCleaner$TagPos;Lorg/htmlcleaner/HtmlCleaner$TagPos;)V
    1050: aload         4
    1052: ldc           #179                // String id
    1054: invokevirtual #180                // Method org/htmlcleaner/TagNode.hasAttribute:(Ljava/lang/String;)Z
    1057: ifeq          1064
    1060: iconst_0
    1061: goto          1065
    1064: iconst_1
    1065: istore        9
    1067: aload_0
    1068: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
    1071: iload         9
    1073: aload_1
    1074: aload         7
    1076: invokestatic  #108                // Method org/htmlcleaner/HtmlCleaner$TagPos.access$100:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)I
    1079: invokeinterface #123,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
    1084: checkcast     #72                 // class org/htmlcleaner/TagNode
    1087: getstatic     #181                // Field org/htmlcleaner/audit/ErrorType.UnpermittedChild:Lorg/htmlcleaner/audit/ErrorType;
    1090: invokevirtual #169                // Method org/htmlcleaner/CleanerProperties.fireHtmlError:(ZLorg/htmlcleaner/TagNode;Lorg/htmlcleaner/audit/ErrorType;)V
    1093: aload_0
    1094: aload_1
    1095: aload         7
    1097: aload         4
    1099: invokespecial #138                // Method closeSnippet:(Ljava/util/List;Lorg/htmlcleaner/HtmlCleaner$TagPos;Ljava/lang/Object;)Ljava/util/List;
    1102: astore        10
    1104: aload         10
    1106: invokeinterface #110,  1          // InterfaceMethod java/util/List.size:()I
    1111: istore        11
    1113: aload         6
    1115: invokevirtual #182                // Method org/htmlcleaner/TagInfo.hasCopyTags:()Z
    1118: ifeq          1277
    1121: iload         11
    1123: ifle          1277
    1126: aload         10
    1128: iload         11
    1130: invokeinterface #111,  2          // InterfaceMethod java/util/List.listIterator:(I)Ljava/util/ListIterator;
    1135: astore        12
    1137: new           #183                // class java/util/ArrayList
    1140: dup
    1141: invokespecial #184                // Method java/util/ArrayList."<init>":()V
    1144: astore        13
    1146: aload         12
    1148: invokeinterface #112,  1          // InterfaceMethod java/util/ListIterator.hasPrevious:()Z
    1153: ifeq          1194
    1156: aload         12
    1158: invokeinterface #113,  1          // InterfaceMethod java/util/ListIterator.previous:()Ljava/lang/Object;
    1163: checkcast     #72                 // class org/htmlcleaner/TagNode
    1166: astore        14
    1168: aload         6
    1170: aload         14
    1172: invokevirtual #139                // Method org/htmlcleaner/TagNode.getName:()Ljava/lang/String;
    1175: invokevirtual #185                // Method org/htmlcleaner/TagInfo.isCopy:(Ljava/lang/String;)Z
    1178: ifeq          1194
    1181: aload         13
    1183: iconst_0
    1184: aload         14
    1186: invokeinterface #186,  3          // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
    1191: goto          1146
    1194: aload         13
    1196: invokeinterface #110,  1          // InterfaceMethod java/util/List.size:()I
    1201: ifle          1277
    1204: aload         13
    1206: invokeinterface #85,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
    1211: astore        14
    1213: aload         14
    1215: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
    1220: ifeq          1249
    1223: aload         14
    1225: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
    1230: checkcast     #72                 // class org/htmlcleaner/TagNode
    1233: astore        15
    1235: aload_2
    1236: aload         15
    1238: invokevirtual #141                // Method org/htmlcleaner/TagNode.makeCopy:()Lorg/htmlcleaner/TagNode;
    1241: invokeinterface #143,  2          // InterfaceMethod java/util/ListIterator.add:(Ljava/lang/Object;)V
    1246: goto          1213
    1249: iconst_0
    1250: istore        15
    1252: iload         15
    1254: aload         13
    1256: invokeinterface #110,  1          // InterfaceMethod java/util/List.size:()I
    1261: if_icmpge     1277
    1264: aload_2
    1265: invokeinterface #113,  1          // InterfaceMethod java/util/ListIterator.previous:()Ljava/lang/Object;
    1270: pop
    1271: iinc          15, 1
    1274: goto          1252
    1277: aload_2
    1278: invokeinterface #113,  1          // InterfaceMethod java/util/ListIterator.previous:()Ljava/lang/Object;
    1283: pop
    1284: goto          1366
    1287: aload_0
    1288: aload_3
    1289: invokespecial #187                // Method isAllowedInLastOpenTag:(Lorg/htmlcleaner/BaseToken;)Z
    1292: ifne          1311
    1295: aload_0
    1296: aload_1
    1297: aload_3
    1298: invokespecial #188                // Method saveToLastOpenTag:(Ljava/util/List;Ljava/lang/Object;)V
    1301: aload_2
    1302: aconst_null
    1303: invokeinterface #136,  2          // InterfaceMethod java/util/ListIterator.set:(Ljava/lang/Object;)V
    1308: goto          1366
    1311: aload         6
    1313: ifnull        1351
    1316: aload         6
    1318: invokevirtual #137                // Method org/htmlcleaner/TagInfo.allowsBody:()Z
    1321: ifne          1351
    1324: aload_0
    1325: aload         4
    1327: invokespecial #189                // Method createTagNode:(Lorg/htmlcleaner/TagNode;)Lorg/htmlcleaner/TagNode;
    1330: astore        9
    1332: aload_0
    1333: aload         6
    1335: aload         9
    1337: invokespecial #190                // Method addPossibleHeadCandidate:(Lorg/htmlcleaner/TagInfo;Lorg/htmlcleaner/TagNode;)V
    1340: aload_2
    1341: aload         9
    1343: invokeinterface #136,  2          // InterfaceMethod java/util/ListIterator.set:(Ljava/lang/Object;)V
    1348: goto          1366
    1351: aload_0
    1352: invokespecial #104                // Method getOpenTags:()Lorg/htmlcleaner/HtmlCleaner$OpenTags;
    1355: aload         5
    1357: aload_2
    1358: invokeinterface #175,  1          // InterfaceMethod java/util/ListIterator.previousIndex:()I
    1363: invokestatic  #191                // Method org/htmlcleaner/HtmlCleaner$OpenTags.access$1200:(Lorg/htmlcleaner/HtmlCleaner$OpenTags;Ljava/lang/String;I)V
    1366: goto          1528
    1369: aload_0
    1370: getfield      #40                 // Field _headOpened:Z
    1373: ifeq          1507
    1376: aload_0
    1377: getfield      #41                 // Field _bodyOpened:Z
    1380: ifne          1507
    1383: aload_0
    1384: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
    1387: invokevirtual #192                // Method org/htmlcleaner/CleanerProperties.isKeepWhitespaceAndCommentsInHead:()Z
    1390: ifeq          1507
    1393: aload_3
    1394: instanceof    #193                // class org/htmlcleaner/CommentNode
    1397: ifeq          1438
    1400: aload_0
    1401: invokespecial #104                // Method getOpenTags:()Lorg/htmlcleaner/HtmlCleaner$OpenTags;
    1404: invokestatic  #118                // Method org/htmlcleaner/HtmlCleaner$OpenTags.access$600:(Lorg/htmlcleaner/HtmlCleaner$OpenTags;)Lorg/htmlcleaner/HtmlCleaner$TagPos;
    1407: ifnonnull     1507
    1410: aload_0
    1411: getfield      #8                  // Field _headTags:Ljava/util/Set;
    1414: new           #194                // class org/htmlcleaner/ProxyTagNode
    1417: dup
    1418: aload_3
    1419: checkcast     #193                // class org/htmlcleaner/CommentNode
    1422: aload_0
    1423: getfield      #54                 // Field bodyNode:Lorg/htmlcleaner/TagNode;
    1426: invokespecial #195                // Method org/htmlcleaner/ProxyTagNode."<init>":(Lorg/htmlcleaner/CommentNode;Lorg/htmlcleaner/TagNode;)V
    1429: invokeinterface #157,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
    1434: pop
    1435: goto          1507
    1438: aload_3
    1439: instanceof    #196                // class org/htmlcleaner/ContentNode
    1442: ifeq          1507
    1445: aload_3
    1446: checkcast     #196                // class org/htmlcleaner/ContentNode
    1449: astore        4
    1451: aload         4
    1453: invokevirtual #197                // Method org/htmlcleaner/ContentNode.isBlank:()Z
    1456: ifeq          1507
    1459: aload_1
    1460: aload_1
    1461: invokeinterface #110,  1          // InterfaceMethod java/util/List.size:()I
    1466: iconst_1
    1467: isub
    1468: invokeinterface #123,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
    1473: checkcast     #128                // class org/htmlcleaner/BaseToken
    1476: astore        5
    1478: aload         5
    1480: aload_3
    1481: if_acmpne     1507
    1484: aload_0
    1485: getfield      #8                  // Field _headTags:Ljava/util/Set;
    1488: new           #194                // class org/htmlcleaner/ProxyTagNode
    1491: dup
    1492: aload         4
    1494: aload_0
    1495: getfield      #54                 // Field bodyNode:Lorg/htmlcleaner/TagNode;
    1498: invokespecial #198                // Method org/htmlcleaner/ProxyTagNode."<init>":(Lorg/htmlcleaner/ContentNode;Lorg/htmlcleaner/TagNode;)V
    1501: invokeinterface #157,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
    1506: pop
    1507: aload_0
    1508: aload_3
    1509: invokespecial #187                // Method isAllowedInLastOpenTag:(Lorg/htmlcleaner/BaseToken;)Z
    1512: ifne          1528
    1515: aload_0
    1516: aload_1
    1517: aload_3
    1518: invokespecial #188                // Method saveToLastOpenTag:(Ljava/util/List;Ljava/lang/Object;)V
    1521: aload_2
    1522: aconst_null
    1523: invokeinterface #136,  2          // InterfaceMethod java/util/ListIterator.set:(Ljava/lang/Object;)V
    1528: goto          0
    1531: return

  private void reopenBrokenNode(java.util.ListIterator<org.htmlcleaner.BaseToken>, org.htmlcleaner.TagNode);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: invokevirtual #141                // Method org/htmlcleaner/TagNode.makeCopy:()Lorg/htmlcleaner/TagNode;
       6: astore        4
       8: aload         4
      10: iconst_1
      11: invokevirtual #142                // Method org/htmlcleaner/TagNode.setAutoGenerated:(Z)V
      14: aload         4
      16: ldc           #179                // String id
      18: invokevirtual #199                // Method org/htmlcleaner/TagNode.removeAttribute:(Ljava/lang/String;)V
      21: aload_1
      22: aload         4
      24: invokeinterface #143,  2          // InterfaceMethod java/util/ListIterator.add:(Ljava/lang/Object;)V
      29: aload_0
      30: invokespecial #104                // Method getOpenTags:()Lorg/htmlcleaner/HtmlCleaner$OpenTags;
      33: aload_3
      34: invokevirtual #139                // Method org/htmlcleaner/TagNode.getName:()Ljava/lang/String;
      37: aload_1
      38: invokeinterface #175,  1          // InterfaceMethod java/util/ListIterator.previousIndex:()I
      43: invokestatic  #191                // Method org/htmlcleaner/HtmlCleaner$OpenTags.access$1200:(Lorg/htmlcleaner/HtmlCleaner$OpenTags;Ljava/lang/String;I)V
      46: return

  protected boolean isRemovingNodeReasonablySafe(org.htmlcleaner.TagNode);
    Code:
       0: aload_1
       1: ldc           #179                // String id
       3: invokevirtual #180                // Method org/htmlcleaner/TagNode.hasAttribute:(Ljava/lang/String;)Z
       6: ifne          31
       9: aload_1
      10: ldc           #200                // String name
      12: invokevirtual #180                // Method org/htmlcleaner/TagNode.hasAttribute:(Ljava/lang/String;)Z
      15: ifne          31
      18: aload_1
      19: ldc           #201                // String class
      21: invokevirtual #180                // Method org/htmlcleaner/TagNode.hasAttribute:(Ljava/lang/String;)Z
      24: ifne          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  private void createDocumentNodes(java.util.List);
    Code:
       0: aload_1
       1: invokeinterface #85,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          115
      16: aload_2
      17: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: astore_3
      23: aload_3
      24: ifnonnull     30
      27: goto          7
      30: iconst_1
      31: istore        4
      33: aload_3
      34: instanceof    #72                 // class org/htmlcleaner/TagNode
      37: ifeq          73
      40: aload_3
      41: checkcast     #72                 // class org/htmlcleaner/TagNode
      44: astore        5
      46: aload_0
      47: invokevirtual #131                // Method getTagInfoProvider:()Lorg/htmlcleaner/ITagInfoProvider;
      50: aload         5
      52: invokevirtual #139                // Method org/htmlcleaner/TagNode.getName:()Ljava/lang/String;
      55: invokeinterface #132,  2          // InterfaceMethod org/htmlcleaner/ITagInfoProvider.getTagInfo:(Ljava/lang/String;)Lorg/htmlcleaner/TagInfo;
      60: astore        6
      62: aload_0
      63: aload         6
      65: aload         5
      67: invokespecial #190                // Method addPossibleHeadCandidate:(Lorg/htmlcleaner/TagInfo;Lorg/htmlcleaner/TagNode;)V
      70: goto          99
      73: aload_3
      74: instanceof    #196                // class org/htmlcleaner/ContentNode
      77: ifeq          99
      80: ldc           #202                // String
      82: aload_3
      83: invokevirtual #36                 // Method java/lang/Object.toString:()Ljava/lang/String;
      86: invokevirtual #96                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      89: ifne          96
      92: iconst_1
      93: goto          97
      96: iconst_0
      97: istore        4
      99: iload         4
     101: ifeq          112
     104: aload_0
     105: getfield      #54                 // Field bodyNode:Lorg/htmlcleaner/TagNode;
     108: aload_3
     109: invokevirtual #58                 // Method org/htmlcleaner/TagNode.addChild:(Ljava/lang/Object;)V
     112: goto          7
     115: aload_0
     116: getfield      #8                  // Field _headTags:Ljava/util/Set;
     119: invokeinterface #69,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     124: astore_3
     125: aload_3
     126: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     131: ifeq          213
     134: aload_3
     135: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     140: checkcast     #72                 // class org/htmlcleaner/TagNode
     143: astore        4
     145: aload         4
     147: invokevirtual #73                 // Method org/htmlcleaner/TagNode.getParent:()Lorg/htmlcleaner/TagNode;
     150: astore        5
     152: iconst_1
     153: istore        6
     155: aload         5
     157: ifnull        190
     160: aload_0
     161: getfield      #8                  // Field _headTags:Ljava/util/Set;
     164: aload         5
     166: invokeinterface #79,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     171: ifeq          180
     174: iconst_0
     175: istore        6
     177: goto          190
     180: aload         5
     182: invokevirtual #73                 // Method org/htmlcleaner/TagNode.getParent:()Lorg/htmlcleaner/TagNode;
     185: astore        5
     187: goto          155
     190: iload         6
     192: ifeq          210
     195: aload         4
     197: invokevirtual #203                // Method org/htmlcleaner/TagNode.removeFromTree:()Z
     200: pop
     201: aload_0
     202: getfield      #56                 // Field headNode:Lorg/htmlcleaner/TagNode;
     205: aload         4
     207: invokevirtual #58                 // Method org/htmlcleaner/TagNode.addChild:(Ljava/lang/Object;)V
     210: goto          125
     213: return

  private java.util.List<org.htmlcleaner.TagNode> closeSnippet(java.util.List, org.htmlcleaner.HtmlCleaner$TagPos, java.lang.Object);
    Code:
       0: new           #183                // class java/util/ArrayList
       3: dup
       4: invokespecial #184                // Method java/util/ArrayList."<init>":()V
       7: astore        4
       9: aload_1
      10: aload_2
      11: invokestatic  #108                // Method org/htmlcleaner/HtmlCleaner$TagPos.access$100:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)I
      14: invokeinterface #111,  2          // InterfaceMethod java/util/List.listIterator:(I)Ljava/util/ListIterator;
      19: astore        5
      21: aconst_null
      22: astore        6
      24: aload         5
      26: invokeinterface #127,  1          // InterfaceMethod java/util/ListIterator.next:()Ljava/lang/Object;
      31: astore        7
      33: iconst_0
      34: istore        8
      36: aload_3
      37: ifnonnull     45
      40: iload         8
      42: ifeq          55
      45: aload_3
      46: ifnull        299
      49: aload         7
      51: aload_3
      52: if_acmpeq     299
      55: aload_0
      56: aload         7
      58: invokespecial #155                // Method isStartToken:(Ljava/lang/Object;)Z
      61: ifeq          246
      64: aload         7
      66: checkcast     #72                 // class org/htmlcleaner/TagNode
      69: astore        9
      71: aload         4
      73: aload         9
      75: invokeinterface #204,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      80: pop
      81: aload         9
      83: invokevirtual #205                // Method org/htmlcleaner/TagNode.getItemsToMove:()Ljava/util/List;
      86: astore        10
      88: aload         10
      90: ifnull        129
      93: aload_0
      94: invokespecial #39                 // Method pushNesting:()Lorg/htmlcleaner/HtmlCleaner$NestingState;
      97: pop
      98: aload_0
      99: aload         10
     101: aload         10
     103: iconst_0
     104: invokeinterface #111,  2          // InterfaceMethod java/util/List.listIterator:(I)Ljava/util/ListIterator;
     109: invokevirtual #153                // Method makeTree:(Ljava/util/List;Ljava/util/ListIterator;)V
     112: aload_0
     113: aload         10
     115: invokespecial #63                 // Method closeAll:(Ljava/util/List;)V
     118: aload         9
     120: aconst_null
     121: invokevirtual #206                // Method org/htmlcleaner/TagNode.setItemsToMove:(Ljava/util/List;)V
     124: aload_0
     125: invokespecial #77                 // Method popNesting:()Lorg/htmlcleaner/HtmlCleaner$NestingState;
     128: pop
     129: aload_0
     130: aload         9
     132: invokespecial #189                // Method createTagNode:(Lorg/htmlcleaner/TagNode;)Lorg/htmlcleaner/TagNode;
     135: astore        11
     137: aload_0
     138: invokevirtual #131                // Method getTagInfoProvider:()Lorg/htmlcleaner/ITagInfoProvider;
     141: aload         11
     143: invokevirtual #139                // Method org/htmlcleaner/TagNode.getName:()Ljava/lang/String;
     146: invokeinterface #132,  2          // InterfaceMethod org/htmlcleaner/ITagInfoProvider.getTagInfo:(Ljava/lang/String;)Lorg/htmlcleaner/TagInfo;
     151: astore        12
     153: aload_0
     154: aload         12
     156: aload         11
     158: invokespecial #190                // Method addPossibleHeadCandidate:(Lorg/htmlcleaner/TagInfo;Lorg/htmlcleaner/TagNode;)V
     161: aload         6
     163: ifnull        191
     166: aload         6
     168: aload         10
     170: invokevirtual #207                // Method org/htmlcleaner/TagNode.addChildren:(Ljava/util/List;)V
     173: aload         6
     175: aload         11
     177: invokevirtual #58                 // Method org/htmlcleaner/TagNode.addChild:(Ljava/lang/Object;)V
     180: aload         5
     182: aconst_null
     183: invokeinterface #136,  2          // InterfaceMethod java/util/ListIterator.set:(Ljava/lang/Object;)V
     188: goto          227
     191: aload         10
     193: ifnull        218
     196: aload         10
     198: aload         11
     200: invokeinterface #204,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     205: pop
     206: aload         5
     208: aload         10
     210: invokeinterface #136,  2          // InterfaceMethod java/util/ListIterator.set:(Ljava/lang/Object;)V
     215: goto          227
     218: aload         5
     220: aload         11
     222: invokeinterface #136,  2          // InterfaceMethod java/util/ListIterator.set:(Ljava/lang/Object;)V
     227: aload_0
     228: invokespecial #104                // Method getOpenTags:()Lorg/htmlcleaner/HtmlCleaner$OpenTags;
     231: aload         11
     233: invokevirtual #139                // Method org/htmlcleaner/TagNode.getName:()Ljava/lang/String;
     236: invokestatic  #208                // Method org/htmlcleaner/HtmlCleaner$OpenTags.access$1300:(Lorg/htmlcleaner/HtmlCleaner$OpenTags;Ljava/lang/String;)V
     239: aload         11
     241: astore        6
     243: goto          271
     246: aload         6
     248: ifnull        271
     251: aload         5
     253: aconst_null
     254: invokeinterface #136,  2          // InterfaceMethod java/util/ListIterator.set:(Ljava/lang/Object;)V
     259: aload         7
     261: ifnull        271
     264: aload         6
     266: aload         7
     268: invokevirtual #58                 // Method org/htmlcleaner/TagNode.addChild:(Ljava/lang/Object;)V
     271: aload         5
     273: invokeinterface #126,  1          // InterfaceMethod java/util/ListIterator.hasNext:()Z
     278: ifeq          293
     281: aload         5
     283: invokeinterface #127,  1          // InterfaceMethod java/util/ListIterator.next:()Ljava/lang/Object;
     288: astore        7
     290: goto          36
     293: iconst_1
     294: istore        8
     296: goto          36
     299: aload         4
     301: areturn

  private void closeAll(java.util.List);
    Code:
       0: aload_0
       1: invokespecial #104                // Method getOpenTags:()Lorg/htmlcleaner/HtmlCleaner$OpenTags;
       4: invokestatic  #209                // Method org/htmlcleaner/HtmlCleaner$OpenTags.access$1400:(Lorg/htmlcleaner/HtmlCleaner$OpenTags;)Lorg/htmlcleaner/HtmlCleaner$TagPos;
       7: astore_2
       8: aload_0
       9: invokespecial #104                // Method getOpenTags:()Lorg/htmlcleaner/HtmlCleaner$OpenTags;
      12: invokestatic  #109                // Method org/htmlcleaner/HtmlCleaner$OpenTags.access$500:(Lorg/htmlcleaner/HtmlCleaner$OpenTags;)Ljava/util/List;
      15: invokeinterface #78,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore_3
      21: aload_3
      22: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          69
      30: aload_3
      31: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #114                // class org/htmlcleaner/HtmlCleaner$TagPos
      39: astore        4
      41: aload_0
      42: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
      45: iconst_1
      46: aload_1
      47: aload         4
      49: invokestatic  #108                // Method org/htmlcleaner/HtmlCleaner$TagPos.access$100:(Lorg/htmlcleaner/HtmlCleaner$TagPos;)I
      52: invokeinterface #123,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      57: checkcast     #72                 // class org/htmlcleaner/TagNode
      60: getstatic     #210                // Field org/htmlcleaner/audit/ErrorType.UnclosedTag:Lorg/htmlcleaner/audit/ErrorType;
      63: invokevirtual #169                // Method org/htmlcleaner/CleanerProperties.fireHtmlError:(ZLorg/htmlcleaner/TagNode;Lorg/htmlcleaner/audit/ErrorType;)V
      66: goto          21
      69: aload_2
      70: ifnull        81
      73: aload_0
      74: aload_1
      75: aload_2
      76: aconst_null
      77: invokespecial #138                // Method closeSnippet:(Ljava/util/List;Lorg/htmlcleaner/HtmlCleaner$TagPos;Ljava/lang/Object;)Ljava/util/List;
      80: pop
      81: return

  private void addPossibleHeadCandidate(org.htmlcleaner.TagInfo, org.htmlcleaner.TagNode);
    Code:
       0: aload_1
       1: ifnull        47
       4: aload_2
       5: ifnull        47
       8: aload_1
       9: invokevirtual #211                // Method org/htmlcleaner/TagInfo.isHeadTag:()Z
      12: ifne          36
      15: aload_1
      16: invokevirtual #212                // Method org/htmlcleaner/TagInfo.isHeadAndBodyTag:()Z
      19: ifeq          47
      22: aload_0
      23: getfield      #40                 // Field _headOpened:Z
      26: ifeq          47
      29: aload_0
      30: getfield      #41                 // Field _bodyOpened:Z
      33: ifne          47
      36: aload_0
      37: getfield      #8                  // Field _headTags:Ljava/util/Set;
      40: aload_2
      41: invokeinterface #157,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      46: pop
      47: return

  public org.htmlcleaner.CleanerProperties getProperties();
    Code:
       0: aload_0
       1: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
       4: areturn

  public java.util.Set<org.htmlcleaner.conditional.ITagNodeCondition> getPruneTagSet();
    Code:
       0: aload_0
       1: getfield      #45                 // Field pruneTagSet:Ljava/util/Set;
       4: areturn

  public java.util.Set<org.htmlcleaner.conditional.ITagNodeCondition> getAllowTagSet();
    Code:
       0: aload_0
       1: getfield      #47                 // Field allowTagSet:Ljava/util/Set;
       4: areturn

  public void addPruneNode(org.htmlcleaner.TagNode);
    Code:
       0: aload_1
       1: iconst_1
       2: invokevirtual #213                // Method org/htmlcleaner/TagNode.setPruned:(Z)V
       5: aload_0
       6: getfield      #14                 // Field pruneNodeSet:Ljava/util/Set;
       9: aload_1
      10: invokeinterface #157,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      15: pop
      16: return

  private boolean addIfNeededToPruneSet(org.htmlcleaner.TagNode);
    Code:
       0: aload_0
       1: getfield      #45                 // Field pruneTagSet:Ljava/util/Set;
       4: ifnull        65
       7: aload_0
       8: getfield      #45                 // Field pruneTagSet:Ljava/util/Set;
      11: invokeinterface #99,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          65
      26: aload_2
      27: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #214                // class org/htmlcleaner/conditional/ITagNodeCondition
      35: astore_3
      36: aload_3
      37: aload_1
      38: invokeinterface #215,  2          // InterfaceMethod org/htmlcleaner/conditional/ITagNodeCondition.satisfy:(Lorg/htmlcleaner/TagNode;)Z
      43: ifeq          62
      46: aload_0
      47: aload_1
      48: invokevirtual #216                // Method addPruneNode:(Lorg/htmlcleaner/TagNode;)V
      51: aload_0
      52: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
      55: aload_3
      56: aload_1
      57: invokevirtual #217                // Method org/htmlcleaner/CleanerProperties.fireConditionModification:(Lorg/htmlcleaner/conditional/ITagNodeCondition;Lorg/htmlcleaner/TagNode;)V
      60: iconst_1
      61: ireturn
      62: goto          17
      65: aload_0
      66: getfield      #47                 // Field allowTagSet:Ljava/util/Set;
      69: ifnull        154
      72: aload_0
      73: getfield      #47                 // Field allowTagSet:Ljava/util/Set;
      76: invokeinterface #68,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      81: ifne          154
      84: aload_0
      85: getfield      #47                 // Field allowTagSet:Ljava/util/Set;
      88: invokeinterface #99,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      93: astore_2
      94: aload_2
      95: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     100: ifeq          128
     103: aload_2
     104: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     109: checkcast     #214                // class org/htmlcleaner/conditional/ITagNodeCondition
     112: astore_3
     113: aload_3
     114: aload_1
     115: invokeinterface #215,  2          // InterfaceMethod org/htmlcleaner/conditional/ITagNodeCondition.satisfy:(Lorg/htmlcleaner/TagNode;)Z
     120: ifeq          125
     123: iconst_0
     124: ireturn
     125: goto          94
     128: aload_1
     129: invokevirtual #218                // Method org/htmlcleaner/TagNode.isAutoGenerated:()Z
     132: ifne          147
     135: aload_0
     136: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
     139: iconst_1
     140: aload_1
     141: getstatic     #219                // Field org/htmlcleaner/audit/ErrorType.NotAllowedTag:Lorg/htmlcleaner/audit/ErrorType;
     144: invokevirtual #220                // Method org/htmlcleaner/CleanerProperties.fireUserDefinedModification:(ZLorg/htmlcleaner/TagNode;Lorg/htmlcleaner/audit/ErrorType;)V
     147: aload_0
     148: aload_1
     149: invokevirtual #216                // Method addPruneNode:(Lorg/htmlcleaner/TagNode;)V
     152: iconst_1
     153: ireturn
     154: iconst_0
     155: ireturn

  public java.util.Set<java.lang.String> getAllTags();
    Code:
       0: aload_0
       1: getfield      #11                 // Field allTags:Ljava/util/Set;
       4: areturn

  public org.htmlcleaner.ITagInfoProvider getTagInfoProvider();
    Code:
       0: aload_0
       1: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
       4: invokevirtual #221                // Method org/htmlcleaner/CleanerProperties.getTagInfoProvider:()Lorg/htmlcleaner/ITagInfoProvider;
       7: areturn

  public org.htmlcleaner.CleanerTransformations getTransformations();
    Code:
       0: aload_0
       1: getfield      #49                 // Field transformations:Lorg/htmlcleaner/CleanerTransformations;
       4: areturn

  public java.lang.String getInnerHtml(org.htmlcleaner.TagNode);
    Code:
       0: aload_1
       1: ifnull        89
       4: new           #222                // class org/htmlcleaner/SimpleXmlSerializer
       7: dup
       8: aload_0
       9: getfield      #17                 // Field properties:Lorg/htmlcleaner/CleanerProperties;
      12: invokespecial #223                // Method org/htmlcleaner/SimpleXmlSerializer."<init>":(Lorg/htmlcleaner/CleanerProperties;)V
      15: aload_1
      16: invokevirtual #224                // Method org/htmlcleaner/SimpleXmlSerializer.getAsString:(Lorg/htmlcleaner/TagNode;)Ljava/lang/String;
      19: astore_2
      20: aload_2
      21: new           #89                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #90                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #225                // String <
      30: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_1
      34: invokevirtual #139                // Method org/htmlcleaner/TagNode.getName:()Ljava/lang/String;
      37: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #93                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokevirtual #226                // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      46: istore_3
      47: aload_2
      48: bipush        62
      50: iload_3
      51: iconst_1
      52: iadd
      53: invokevirtual #227                // Method java/lang/String.indexOf:(II)I
      56: istore_3
      57: aload_2
      58: bipush        60
      60: invokevirtual #228                // Method java/lang/String.lastIndexOf:(I)I
      63: istore        4
      65: iload_3
      66: iflt          87
      69: iload_3
      70: iload         4
      72: if_icmpgt     87
      75: aload_2
      76: iload_3
      77: iconst_1
      78: iadd
      79: iload         4
      81: invokevirtual #229                // Method java/lang/String.substring:(II)Ljava/lang/String;
      84: goto          88
      87: aconst_null
      88: areturn
      89: new           #24                 // class org/htmlcleaner/HtmlCleanerException
      92: dup
      93: ldc           #230                // String Cannot return inner html of the null node!
      95: invokespecial #231                // Method org/htmlcleaner/HtmlCleanerException."<init>":(Ljava/lang/String;)V
      98: athrow

  public void setInnerHtml(org.htmlcleaner.TagNode, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        166
       4: aload_1
       5: invokevirtual #139                // Method org/htmlcleaner/TagNode.getName:()Ljava/lang/String;
       8: astore_3
       9: new           #89                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #90                 // Method java/lang/StringBuilder."<init>":()V
      16: astore        4
      18: aload         4
      20: ldc           #225                // String <
      22: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_3
      26: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #232                // String  htmlcleaner_marker=\'\'>
      31: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_2
      35: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #233                // String </
      40: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_3
      44: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc           #234                // String >
      49: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: pop
      53: aload_1
      54: invokevirtual #73                 // Method org/htmlcleaner/TagNode.getParent:()Lorg/htmlcleaner/TagNode;
      57: astore        5
      59: aload         5
      61: ifnull        131
      64: aload         5
      66: invokevirtual #139                // Method org/htmlcleaner/TagNode.getName:()Ljava/lang/String;
      69: astore        6
      71: aload         4
      73: iconst_0
      74: new           #89                 // class java/lang/StringBuilder
      77: dup
      78: invokespecial #90                 // Method java/lang/StringBuilder."<init>":()V
      81: ldc           #225                // String <
      83: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload         6
      88: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: ldc           #234                // String >
      93: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #93                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: invokevirtual #235                // Method java/lang/StringBuilder.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;
     102: pop
     103: aload         4
     105: ldc           #233                // String </
     107: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload         6
     112: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: ldc           #234                // String >
     117: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: pop
     121: aload         5
     123: invokevirtual #73                 // Method org/htmlcleaner/TagNode.getParent:()Lorg/htmlcleaner/TagNode;
     126: astore        5
     128: goto          59
     131: aload_0
     132: aload         4
     134: invokevirtual #93                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     137: invokevirtual #236                // Method clean:(Ljava/lang/String;)Lorg/htmlcleaner/TagNode;
     140: astore        6
     142: aload         6
     144: ldc           #237                // String htmlcleaner_marker
     146: iconst_1
     147: invokevirtual #238                // Method org/htmlcleaner/TagNode.findElementHavingAttribute:(Ljava/lang/String;Z)Lorg/htmlcleaner/TagNode;
     150: astore        7
     152: aload         7
     154: ifnull        166
     157: aload_1
     158: aload         7
     160: invokevirtual #82                 // Method org/htmlcleaner/TagNode.getAllChildren:()Ljava/util/List;
     163: invokevirtual #239                // Method org/htmlcleaner/TagNode.setChildren:(Ljava/util/List;)V
     166: return

  public void initCleanerTransformations(java.util.Map);
    Code:
       0: aload_0
       1: new           #240                // class org/htmlcleaner/CleanerTransformations
       4: dup
       5: aload_1
       6: invokespecial #241                // Method org/htmlcleaner/CleanerTransformations."<init>":(Ljava/util/Map;)V
       9: putfield      #49                 // Field transformations:Lorg/htmlcleaner/CleanerTransformations;
      12: return

  private org.htmlcleaner.HtmlCleaner$OpenTags getOpenTags();
    Code:
       0: aload_0
       1: getfield      #5                  // Field nestingStates:Ljava/util/Stack;
       4: invokevirtual #150                // Method java/util/Stack.peek:()Ljava/lang/Object;
       7: checkcast     #242                // class org/htmlcleaner/HtmlCleaner$NestingState
      10: invokevirtual #243                // Method org/htmlcleaner/HtmlCleaner$NestingState.getOpenTags:()Lorg/htmlcleaner/HtmlCleaner$OpenTags;
      13: areturn

  private org.htmlcleaner.HtmlCleaner$ChildBreaks getChildBreaks();
    Code:
       0: aload_0
       1: getfield      #5                  // Field nestingStates:Ljava/util/Stack;
       4: invokevirtual #150                // Method java/util/Stack.peek:()Ljava/lang/Object;
       7: checkcast     #242                // class org/htmlcleaner/HtmlCleaner$NestingState
      10: invokevirtual #244                // Method org/htmlcleaner/HtmlCleaner$NestingState.getChildBreaks:()Lorg/htmlcleaner/HtmlCleaner$ChildBreaks;
      13: areturn

  private org.htmlcleaner.HtmlCleaner$NestingState pushNesting();
    Code:
       0: aload_0
       1: getfield      #5                  // Field nestingStates:Ljava/util/Stack;
       4: new           #242                // class org/htmlcleaner/HtmlCleaner$NestingState
       7: dup
       8: aload_0
       9: invokespecial #245                // Method org/htmlcleaner/HtmlCleaner$NestingState."<init>":(Lorg/htmlcleaner/HtmlCleaner;)V
      12: invokevirtual #246                // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #242                // class org/htmlcleaner/HtmlCleaner$NestingState
      18: areturn

  private org.htmlcleaner.HtmlCleaner$NestingState popNesting();
    Code:
       0: aload_0
       1: getfield      #5                  // Field nestingStates:Ljava/util/Stack;
       4: invokevirtual #247                // Method java/util/Stack.pop:()Ljava/lang/Object;
       7: checkcast     #242                // class org/htmlcleaner/HtmlCleaner$NestingState
      10: areturn
}
