Compiled from "DomSerializer.java"
public class org.htmlcleaner.DomSerializer {
  protected org.htmlcleaner.CleanerProperties props;

  protected boolean escapeXml;

  public org.htmlcleaner.DomSerializer(org.htmlcleaner.CleanerProperties, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field escapeXml:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field props:Lorg/htmlcleaner/CleanerProperties;
      14: aload_0
      15: iload_2
      16: putfield      #2                  // Field escapeXml:Z
      19: return

  public org.htmlcleaner.DomSerializer(org.htmlcleaner.CleanerProperties);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #4                  // Method "<init>":(Lorg/htmlcleaner/CleanerProperties;Z)V
       6: return

  public org.w3c.dom.Document createDOM(org.htmlcleaner.TagNode) throws javax.xml.parsers.ParserConfigurationException;
    Code:
       0: invokestatic  #5                  // Method javax/xml/parsers/DocumentBuilderFactory.newInstance:()Ljavax/xml/parsers/DocumentBuilderFactory;
       3: astore_2
       4: aload_2
       5: invokevirtual #6                  // Method javax/xml/parsers/DocumentBuilderFactory.newDocumentBuilder:()Ljavax/xml/parsers/DocumentBuilder;
       8: invokevirtual #7                  // Method javax/xml/parsers/DocumentBuilder.newDocument:()Lorg/w3c/dom/Document;
      11: astore_3
      12: aload_3
      13: aload_1
      14: invokevirtual #8                  // Method org/htmlcleaner/TagNode.getName:()Ljava/lang/String;
      17: invokeinterface #9,  2            // InterfaceMethod org/w3c/dom/Document.createElement:(Ljava/lang/String;)Lorg/w3c/dom/Element;
      22: astore        4
      24: aload_3
      25: aload         4
      27: invokeinterface #10,  2           // InterfaceMethod org/w3c/dom/Document.appendChild:(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;
      32: pop
      33: aload_0
      34: aload_3
      35: aload         4
      37: aload_1
      38: invokevirtual #11                 // Method org/htmlcleaner/TagNode.getAllChildren:()Ljava/util/List;
      41: invokespecial #12                 // Method createSubnodes:(Lorg/w3c/dom/Document;Lorg/w3c/dom/Element;Ljava/util/List;)V
      44: aload_3
      45: areturn

  protected boolean isScriptOrStyle(org.w3c.dom.Element);
    Code:
       0: aload_1
       1: invokeinterface #13,  1           // InterfaceMethod org/w3c/dom/Element.getNodeName:()Ljava/lang/String;
       6: astore_2
       7: ldc           #14                 // String script
       9: aload_2
      10: invokevirtual #15                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      13: ifne          25
      16: ldc           #16                 // String style
      18: aload_2
      19: invokevirtual #15                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      22: ifeq          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  protected boolean dontEscape(org.w3c.dom.Element);
    Code:
       0: aload_0
       1: getfield      #3                  // Field props:Lorg/htmlcleaner/CleanerProperties;
       4: invokevirtual #17                 // Method org/htmlcleaner/CleanerProperties.isUseCdataForScriptAndStyle:()Z
       7: ifeq          31
      10: aload_0
      11: aload_1
      12: invokevirtual #18                 // Method isScriptOrStyle:(Lorg/w3c/dom/Element;)Z
      15: ifeq          31
      18: aload_1
      19: invokeinterface #19,  1           // InterfaceMethod org/w3c/dom/Element.hasChildNodes:()Z
      24: ifne          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  private void createSubnodes(org.w3c.dom.Document, org.w3c.dom.Element, java.util.List);
    Code:
       0: aload_3
       1: ifnull        336
       4: aload_3
       5: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      10: astore        4
      12: aload         4
      14: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          336
      22: aload         4
      24: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: astore        5
      31: aload         5
      33: instanceof    #23                 // class org/htmlcleaner/CommentNode
      36: ifeq          71
      39: aload         5
      41: checkcast     #23                 // class org/htmlcleaner/CommentNode
      44: astore        6
      46: aload_1
      47: aload         6
      49: invokevirtual #24                 // Method org/htmlcleaner/CommentNode.getContent:()Ljava/lang/String;
      52: invokeinterface #25,  2           // InterfaceMethod org/w3c/dom/Document.createComment:(Ljava/lang/String;)Lorg/w3c/dom/Comment;
      57: astore        7
      59: aload_2
      60: aload         7
      62: invokeinterface #26,  2           // InterfaceMethod org/w3c/dom/Element.appendChild:(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;
      67: pop
      68: goto          333
      71: aload         5
      73: instanceof    #27                 // class org/htmlcleaner/ContentNode
      76: ifeq          158
      79: aload         5
      81: checkcast     #27                 // class org/htmlcleaner/ContentNode
      84: astore        6
      86: aload         6
      88: invokevirtual #28                 // Method org/htmlcleaner/ContentNode.getContent:()Ljava/lang/String;
      91: astore        7
      93: aload_0
      94: aload_2
      95: invokevirtual #29                 // Method dontEscape:(Lorg/w3c/dom/Element;)Z
      98: istore        8
     100: aload_0
     101: getfield      #2                  // Field escapeXml:Z
     104: ifeq          124
     107: iload         8
     109: ifne          124
     112: aload         7
     114: aload_0
     115: getfield      #3                  // Field props:Lorg/htmlcleaner/CleanerProperties;
     118: iconst_1
     119: invokestatic  #30                 // Method org/htmlcleaner/Utils.escapeXml:(Ljava/lang/String;Lorg/htmlcleaner/CleanerProperties;Z)Ljava/lang/String;
     122: astore        7
     124: aload_2
     125: iload         8
     127: ifeq          141
     130: aload_1
     131: aload         7
     133: invokeinterface #31,  2           // InterfaceMethod org/w3c/dom/Document.createCDATASection:(Ljava/lang/String;)Lorg/w3c/dom/CDATASection;
     138: goto          149
     141: aload_1
     142: aload         7
     144: invokeinterface #32,  2           // InterfaceMethod org/w3c/dom/Document.createTextNode:(Ljava/lang/String;)Lorg/w3c/dom/Text;
     149: invokeinterface #26,  2           // InterfaceMethod org/w3c/dom/Element.appendChild:(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;
     154: pop
     155: goto          333
     158: aload         5
     160: instanceof    #33                 // class org/htmlcleaner/TagNode
     163: ifeq          310
     166: aload         5
     168: checkcast     #33                 // class org/htmlcleaner/TagNode
     171: astore        6
     173: aload_1
     174: aload         6
     176: invokevirtual #8                  // Method org/htmlcleaner/TagNode.getName:()Ljava/lang/String;
     179: invokeinterface #9,  2            // InterfaceMethod org/w3c/dom/Document.createElement:(Ljava/lang/String;)Lorg/w3c/dom/Element;
     184: astore        7
     186: aload         6
     188: invokevirtual #34                 // Method org/htmlcleaner/TagNode.getAttributes:()Ljava/util/Map;
     191: astore        8
     193: aload         8
     195: invokeinterface #35,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     200: invokeinterface #36,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     205: astore        9
     207: aload         9
     209: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     214: ifeq          286
     217: aload         9
     219: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     224: checkcast     #37                 // class java/util/Map$Entry
     227: astore        10
     229: aload         10
     231: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     236: checkcast     #39                 // class java/lang/String
     239: astore        11
     241: aload         10
     243: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     248: checkcast     #39                 // class java/lang/String
     251: astore        12
     253: aload_0
     254: getfield      #2                  // Field escapeXml:Z
     257: ifeq          272
     260: aload         12
     262: aload_0
     263: getfield      #3                  // Field props:Lorg/htmlcleaner/CleanerProperties;
     266: iconst_1
     267: invokestatic  #30                 // Method org/htmlcleaner/Utils.escapeXml:(Ljava/lang/String;Lorg/htmlcleaner/CleanerProperties;Z)Ljava/lang/String;
     270: astore        12
     272: aload         7
     274: aload         11
     276: aload         12
     278: invokeinterface #41,  3           // InterfaceMethod org/w3c/dom/Element.setAttribute:(Ljava/lang/String;Ljava/lang/String;)V
     283: goto          207
     286: aload_0
     287: aload_1
     288: aload         7
     290: aload         6
     292: invokevirtual #11                 // Method org/htmlcleaner/TagNode.getAllChildren:()Ljava/util/List;
     295: invokespecial #12                 // Method createSubnodes:(Lorg/w3c/dom/Document;Lorg/w3c/dom/Element;Ljava/util/List;)V
     298: aload_2
     299: aload         7
     301: invokeinterface #26,  2           // InterfaceMethod org/w3c/dom/Element.appendChild:(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;
     306: pop
     307: goto          333
     310: aload         5
     312: instanceof    #42                 // class java/util/List
     315: ifeq          333
     318: aload         5
     320: checkcast     #42                 // class java/util/List
     323: astore        6
     325: aload_0
     326: aload_1
     327: aload_2
     328: aload         6
     330: invokespecial #12                 // Method createSubnodes:(Lorg/w3c/dom/Document;Lorg/w3c/dom/Element;Ljava/util/List;)V
     333: goto          12
     336: return
}
