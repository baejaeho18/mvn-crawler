Compiled from "ByteBufferWriter.java"
final class com.google.protobuf.ByteBufferWriter {
  private static final int MIN_CACHED_BUFFER_SIZE;

  private static final int MAX_CACHED_BUFFER_SIZE;

  private static final float BUFFER_REALLOCATION_THRESHOLD;

  private static final java.lang.ThreadLocal<java.lang.ref.SoftReference<byte[]>> BUFFER;

  private static final java.lang.Class<?> FILE_OUTPUT_STREAM_CLASS;

  private static final long CHANNEL_FIELD_OFFSET;

  private com.google.protobuf.ByteBufferWriter();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object."<init>":()V
       4: return

  static void clearCachedBuffer();
    Code:
       0: getstatic     #30                 // Field BUFFER:Ljava/lang/ThreadLocal;
       3: aconst_null
       4: invokevirtual #36                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
       7: return

  static void write(java.nio.ByteBuffer, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method java/nio/ByteBuffer.position:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #50                 // Method java/nio/ByteBuffer.hasArray:()Z
       9: ifeq          36
      12: aload_1
      13: aload_0
      14: invokevirtual #54                 // Method java/nio/ByteBuffer.array:()[B
      17: aload_0
      18: invokevirtual #57                 // Method java/nio/ByteBuffer.arrayOffset:()I
      21: aload_0
      22: invokevirtual #46                 // Method java/nio/ByteBuffer.position:()I
      25: iadd
      26: aload_0
      27: invokevirtual #60                 // Method java/nio/ByteBuffer.remaining:()I
      30: invokevirtual #65                 // Method java/io/OutputStream.write:([BII)V
      33: goto          90
      36: aload_0
      37: aload_1
      38: invokestatic  #69                 // Method writeToChannel:(Ljava/nio/ByteBuffer;Ljava/io/OutputStream;)Z
      41: ifne          90
      44: aload_0
      45: invokevirtual #60                 // Method java/nio/ByteBuffer.remaining:()I
      48: invokestatic  #73                 // Method getOrCreateBuffer:(I)[B
      51: astore_3
      52: aload_0
      53: invokevirtual #78                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      56: ifeq          90
      59: aload_0
      60: invokevirtual #60                 // Method java/nio/ByteBuffer.remaining:()I
      63: aload_3
      64: arraylength
      65: invokestatic  #84                 // Method java/lang/Math.min:(II)I
      68: istore        4
      70: aload_0
      71: aload_3
      72: iconst_0
      73: iload         4
      75: invokevirtual #88                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      78: pop
      79: aload_1
      80: aload_3
      81: iconst_0
      82: iload         4
      84: invokevirtual #65                 // Method java/io/OutputStream.write:([BII)V
      87: goto          52
      90: aload_0
      91: iload_2
      92: invokevirtual #91                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
      95: pop
      96: goto          110
      99: astore        5
     101: aload_0
     102: iload_2
     103: invokevirtual #91                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
     106: pop
     107: aload         5
     109: athrow
     110: return
    Exception table:
       from    to  target type
           5    90    99   any
          99   101    99   any

  private static byte[] getOrCreateBuffer(int);
    Code:
       0: iload_0
       1: sipush        1024
       4: invokestatic  #102                // Method java/lang/Math.max:(II)I
       7: istore_0
       8: invokestatic  #105                // Method getBuffer:()[B
      11: astore_1
      12: aload_1
      13: ifnull        25
      16: iload_0
      17: aload_1
      18: arraylength
      19: invokestatic  #109                // Method needToReallocate:(II)Z
      22: ifeq          40
      25: iload_0
      26: newarray       byte
      28: astore_1
      29: iload_0
      30: sipush        16384
      33: if_icmpgt     40
      36: aload_1
      37: invokestatic  #113                // Method setBuffer:([B)V
      40: aload_1
      41: areturn

  private static boolean needToReallocate(int, int);
    Code:
       0: iload_1
       1: iload_0
       2: if_icmpge     20
       5: iload_1
       6: i2f
       7: iload_0
       8: i2f
       9: ldc           #13                 // float 0.5f
      11: fmul
      12: fcmpg
      13: ifge          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  private static byte[] getBuffer();
    Code:
       0: getstatic     #30                 // Field BUFFER:Ljava/lang/ThreadLocal;
       3: invokevirtual #118                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #120                // class java/lang/ref/SoftReference
       9: astore_0
      10: aload_0
      11: ifnonnull     18
      14: aconst_null
      15: goto          25
      18: aload_0
      19: invokevirtual #121                // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      22: checkcast     #75                 // class "[B"
      25: areturn

  private static void setBuffer(byte[]);
    Code:
       0: getstatic     #30                 // Field BUFFER:Ljava/lang/ThreadLocal;
       3: new           #120                // class java/lang/ref/SoftReference
       6: dup
       7: aload_0
       8: invokespecial #126                // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      11: invokevirtual #36                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      14: return

  private static boolean writeToChannel(java.nio.ByteBuffer, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: getstatic     #131                // Field CHANNEL_FIELD_OFFSET:J
       3: lconst_0
       4: lcmp
       5: iflt          49
       8: getstatic     #133                // Field FILE_OUTPUT_STREAM_CLASS:Ljava/lang/Class;
      11: aload_1
      12: invokevirtual #139                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      15: ifeq          49
      18: aconst_null
      19: astore_2
      20: aload_1
      21: getstatic     #131                // Field CHANNEL_FIELD_OFFSET:J
      24: invokestatic  #145                // Method com/google/protobuf/UnsafeUtil.getObject:(Ljava/lang/Object;J)Ljava/lang/Object;
      27: checkcast     #147                // class java/nio/channels/WritableByteChannel
      30: astore_2
      31: goto          35
      34: astore_3
      35: aload_2
      36: ifnull        49
      39: aload_2
      40: aload_0
      41: invokeinterface #150,  2          // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I
      46: pop
      47: iconst_1
      48: ireturn
      49: iconst_0
      50: ireturn
    Exception table:
       from    to  target type
          20    31    34   Class java/lang/ClassCastException

  private static java.lang.Class<?> safeGetClass(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #160                // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       4: areturn
       5: astore_1
       6: aconst_null
       7: areturn
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/ClassNotFoundException

  private static long getChannelFieldOffset(java.lang.Class<?>);
    Code:
       0: aload_0
       1: ifnull        22
       4: invokestatic  #170                // Method com/google/protobuf/UnsafeUtil.hasUnsafeArrayOperations:()Z
       7: ifeq          22
      10: aload_0
      11: ldc           #171                // String channel
      13: invokevirtual #175                // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      16: astore_1
      17: aload_1
      18: invokestatic  #179                // Method com/google/protobuf/UnsafeUtil.objectFieldOffset:(Ljava/lang/reflect/Field;)J
      21: lreturn
      22: goto          26
      25: astore_1
      26: ldc2_w        #180                // long -1l
      29: lreturn
    Exception table:
       from    to  target type
           0    21    25   Class java/lang/Throwable

  static {};
    Code:
       0: new           #32                 // class java/lang/ThreadLocal
       3: dup
       4: invokespecial #186                // Method java/lang/ThreadLocal."<init>":()V
       7: putstatic     #30                 // Field BUFFER:Ljava/lang/ThreadLocal;
      10: ldc           #188                // String java.io.FileOutputStream
      12: invokestatic  #190                // Method safeGetClass:(Ljava/lang/String;)Ljava/lang/Class;
      15: putstatic     #133                // Field FILE_OUTPUT_STREAM_CLASS:Ljava/lang/Class;
      18: getstatic     #133                // Field FILE_OUTPUT_STREAM_CLASS:Ljava/lang/Class;
      21: invokestatic  #192                // Method getChannelFieldOffset:(Ljava/lang/Class;)J
      24: putstatic     #131                // Field CHANNEL_FIELD_OFFSET:J
      27: return
}
