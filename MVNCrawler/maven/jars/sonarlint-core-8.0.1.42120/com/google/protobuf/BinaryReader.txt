Compiled from "BinaryReader.java"
abstract class com.google.protobuf.BinaryReader implements com.google.protobuf.Reader {
  private static final int FIXED32_MULTIPLE_MASK;

  private static final int FIXED64_MULTIPLE_MASK;

  public static com.google.protobuf.BinaryReader newInstance(java.nio.ByteBuffer, boolean);
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method java/nio/ByteBuffer.hasArray:()Z
       4: ifeq          17
       7: new           #11                 // class com/google/protobuf/BinaryReader$SafeHeapReader
      10: dup
      11: aload_0
      12: iload_1
      13: invokespecial #29                 // Method com/google/protobuf/BinaryReader$SafeHeapReader."<init>":(Ljava/nio/ByteBuffer;Z)V
      16: areturn
      17: new           #31                 // class java/lang/IllegalArgumentException
      20: dup
      21: ldc           #33                 // String Direct buffers not yet supported
      23: invokespecial #36                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow

  private com.google.protobuf.BinaryReader();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method java/lang/Object."<init>":()V
       4: return

  public abstract int getTotalBytesRead();

  public boolean shouldDiscardUnknownFields();
    Code:
       0: iconst_0
       1: ireturn

  com.google.protobuf.BinaryReader(com.google.protobuf.BinaryReader$1);
    Code:
       0: aload_0
       1: invokespecial #50                 // Method "<init>":()V
       4: return
}
