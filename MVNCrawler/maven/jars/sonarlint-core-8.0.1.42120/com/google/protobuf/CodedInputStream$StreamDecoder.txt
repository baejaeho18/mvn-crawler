Compiled from "CodedInputStream.java"
final class com.google.protobuf.CodedInputStream$StreamDecoder extends com.google.protobuf.CodedInputStream {
  private final java.io.InputStream input;

  private final byte[] buffer;

  private int bufferSize;

  private int bufferSizeAfterLimit;

  private int pos;

  private int lastTag;

  private int totalBytesRetired;

  private int currentLimit;

  private com.google.protobuf.CodedInputStream$StreamDecoder$RefillCallback refillCallback;

  private com.google.protobuf.CodedInputStream$StreamDecoder(java.io.InputStream, int);
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #42                 // Method com/google/protobuf/CodedInputStream."<init>":(Lcom/google/protobuf/CodedInputStream$1;)V
       5: aload_0
       6: ldc           #43                 // int 2147483647
       8: putfield      #45                 // Field currentLimit:I
      11: aload_0
      12: aconst_null
      13: putfield      #47                 // Field refillCallback:Lcom/google/protobuf/CodedInputStream$StreamDecoder$RefillCallback;
      16: aload_1
      17: ldc           #48                 // String input
      19: invokestatic  #54                 // Method com/google/protobuf/Internal.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      22: pop
      23: aload_0
      24: aload_1
      25: putfield      #56                 // Field input:Ljava/io/InputStream;
      28: aload_0
      29: iload_2
      30: newarray       byte
      32: putfield      #58                 // Field buffer:[B
      35: aload_0
      36: iconst_0
      37: putfield      #60                 // Field bufferSize:I
      40: aload_0
      41: iconst_0
      42: putfield      #62                 // Field pos:I
      45: aload_0
      46: iconst_0
      47: putfield      #64                 // Field totalBytesRetired:I
      50: return

  public int readTag() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method isAtEnd:()Z
       4: ifeq          14
       7: aload_0
       8: iconst_0
       9: putfield      #76                 // Field lastTag:I
      12: iconst_0
      13: ireturn
      14: aload_0
      15: aload_0
      16: invokevirtual #79                 // Method readRawVarint32:()I
      19: putfield      #76                 // Field lastTag:I
      22: aload_0
      23: getfield      #76                 // Field lastTag:I
      26: invokestatic  #85                 // Method com/google/protobuf/WireFormat.getTagFieldNumber:(I)I
      29: ifne          36
      32: invokestatic  #89                 // Method com/google/protobuf/InvalidProtocolBufferException.invalidTag:()Lcom/google/protobuf/InvalidProtocolBufferException;
      35: athrow
      36: aload_0
      37: getfield      #76                 // Field lastTag:I
      40: ireturn

  public void checkLastTagWas(int) throws com.google.protobuf.InvalidProtocolBufferException;
    Code:
       0: aload_0
       1: getfield      #76                 // Field lastTag:I
       4: iload_1
       5: if_icmpeq     12
       8: invokestatic  #94                 // Method com/google/protobuf/InvalidProtocolBufferException.invalidEndTag:()Lcom/google/protobuf/InvalidProtocolBufferException;
      11: athrow
      12: return

  public int getLastTag();
    Code:
       0: aload_0
       1: getfield      #76                 // Field lastTag:I
       4: ireturn

  public boolean skipField(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: invokestatic  #101                // Method com/google/protobuf/WireFormat.getTagWireType:(I)I
       4: tableswitch   { // 0 to 5
                     0: 44
                     1: 50
                     2: 58
                     3: 68
                     4: 86
                     5: 88
               default: 95
          }
      44: aload_0
      45: invokespecial #105                // Method skipRawVarint:()V
      48: iconst_1
      49: ireturn
      50: aload_0
      51: bipush        8
      53: invokevirtual #108                // Method skipRawBytes:(I)V
      56: iconst_1
      57: ireturn
      58: aload_0
      59: aload_0
      60: invokevirtual #79                 // Method readRawVarint32:()I
      63: invokevirtual #108                // Method skipRawBytes:(I)V
      66: iconst_1
      67: ireturn
      68: aload_0
      69: invokevirtual #111                // Method skipMessage:()V
      72: aload_0
      73: iload_1
      74: invokestatic  #85                 // Method com/google/protobuf/WireFormat.getTagFieldNumber:(I)I
      77: iconst_4
      78: invokestatic  #115                // Method com/google/protobuf/WireFormat.makeTag:(II)I
      81: invokevirtual #117                // Method checkLastTagWas:(I)V
      84: iconst_1
      85: ireturn
      86: iconst_0
      87: ireturn
      88: aload_0
      89: iconst_4
      90: invokevirtual #108                // Method skipRawBytes:(I)V
      93: iconst_1
      94: ireturn
      95: invokestatic  #121                // Method com/google/protobuf/InvalidProtocolBufferException.invalidWireType:()Lcom/google/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;
      98: athrow

  public boolean skipField(int, com.google.protobuf.CodedOutputStream) throws java.io.IOException;
    Code:
       0: iload_1
       1: invokestatic  #101                // Method com/google/protobuf/WireFormat.getTagWireType:(I)I
       4: tableswitch   { // 0 to 5
                     0: 44
                     1: 61
                     2: 78
                     3: 95
                     4: 126
                     5: 128
               default: 145
          }
      44: aload_0
      45: invokevirtual #127                // Method readInt64:()J
      48: lstore_3
      49: aload_2
      50: iload_1
      51: invokevirtual #132                // Method com/google/protobuf/CodedOutputStream.writeRawVarint32:(I)V
      54: aload_2
      55: lload_3
      56: invokevirtual #136                // Method com/google/protobuf/CodedOutputStream.writeUInt64NoTag:(J)V
      59: iconst_1
      60: ireturn
      61: aload_0
      62: invokevirtual #139                // Method readRawLittleEndian64:()J
      65: lstore_3
      66: aload_2
      67: iload_1
      68: invokevirtual #132                // Method com/google/protobuf/CodedOutputStream.writeRawVarint32:(I)V
      71: aload_2
      72: lload_3
      73: invokevirtual #142                // Method com/google/protobuf/CodedOutputStream.writeFixed64NoTag:(J)V
      76: iconst_1
      77: ireturn
      78: aload_0
      79: invokevirtual #146                // Method readBytes:()Lcom/google/protobuf/ByteString;
      82: astore_3
      83: aload_2
      84: iload_1
      85: invokevirtual #132                // Method com/google/protobuf/CodedOutputStream.writeRawVarint32:(I)V
      88: aload_2
      89: aload_3
      90: invokevirtual #150                // Method com/google/protobuf/CodedOutputStream.writeBytesNoTag:(Lcom/google/protobuf/ByteString;)V
      93: iconst_1
      94: ireturn
      95: aload_2
      96: iload_1
      97: invokevirtual #132                // Method com/google/protobuf/CodedOutputStream.writeRawVarint32:(I)V
     100: aload_0
     101: aload_2
     102: invokevirtual #153                // Method skipMessage:(Lcom/google/protobuf/CodedOutputStream;)V
     105: iload_1
     106: invokestatic  #85                 // Method com/google/protobuf/WireFormat.getTagFieldNumber:(I)I
     109: iconst_4
     110: invokestatic  #115                // Method com/google/protobuf/WireFormat.makeTag:(II)I
     113: istore_3
     114: aload_0
     115: iload_3
     116: invokevirtual #117                // Method checkLastTagWas:(I)V
     119: aload_2
     120: iload_3
     121: invokevirtual #132                // Method com/google/protobuf/CodedOutputStream.writeRawVarint32:(I)V
     124: iconst_1
     125: ireturn
     126: iconst_0
     127: ireturn
     128: aload_0
     129: invokevirtual #156                // Method readRawLittleEndian32:()I
     132: istore_3
     133: aload_2
     134: iload_1
     135: invokevirtual #132                // Method com/google/protobuf/CodedOutputStream.writeRawVarint32:(I)V
     138: aload_2
     139: iload_3
     140: invokevirtual #159                // Method com/google/protobuf/CodedOutputStream.writeFixed32NoTag:(I)V
     143: iconst_1
     144: ireturn
     145: invokestatic  #121                // Method com/google/protobuf/InvalidProtocolBufferException.invalidWireType:()Lcom/google/protobuf/InvalidProtocolBufferException$InvalidWireTypeException;
     148: athrow

  public void skipMessage() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #166                // Method readTag:()I
       4: istore_1
       5: iload_1
       6: ifeq          17
       9: aload_0
      10: iload_1
      11: invokevirtual #168                // Method skipField:(I)Z
      14: ifne          18
      17: return
      18: goto          0

  public void skipMessage(com.google.protobuf.CodedOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #166                // Method readTag:()I
       4: istore_2
       5: iload_2
       6: ifeq          18
       9: aload_0
      10: iload_2
      11: aload_1
      12: invokevirtual #170                // Method skipField:(ILcom/google/protobuf/CodedOutputStream;)Z
      15: ifne          19
      18: return
      19: goto          0

  public double readDouble() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #139                // Method readRawLittleEndian64:()J
       4: invokestatic  #178                // Method java/lang/Double.longBitsToDouble:(J)D
       7: dreturn

  public float readFloat() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #156                // Method readRawLittleEndian32:()I
       4: invokestatic  #186                // Method java/lang/Float.intBitsToFloat:(I)F
       7: freturn

  public long readUInt64() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #190                // Method readRawVarint64:()J
       4: lreturn

  public long readInt64() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #190                // Method readRawVarint64:()J
       4: lreturn

  public int readInt32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method readRawVarint32:()I
       4: ireturn

  public long readFixed64() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #139                // Method readRawLittleEndian64:()J
       4: lreturn

  public int readFixed32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #156                // Method readRawLittleEndian32:()I
       4: ireturn

  public boolean readBool() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #190                // Method readRawVarint64:()J
       4: lconst_0
       5: lcmp
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public java.lang.String readString() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method readRawVarint32:()I
       4: istore_1
       5: iload_1
       6: ifle          54
       9: iload_1
      10: aload_0
      11: getfield      #60                 // Field bufferSize:I
      14: aload_0
      15: getfield      #62                 // Field pos:I
      18: isub
      19: if_icmpgt     54
      22: new           #198                // class java/lang/String
      25: dup
      26: aload_0
      27: getfield      #58                 // Field buffer:[B
      30: aload_0
      31: getfield      #62                 // Field pos:I
      34: iload_1
      35: getstatic     #202                // Field com/google/protobuf/Internal.UTF_8:Ljava/nio/charset/Charset;
      38: invokespecial #205                // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
      41: astore_2
      42: aload_0
      43: dup
      44: getfield      #62                 // Field pos:I
      47: iload_1
      48: iadd
      49: putfield      #62                 // Field pos:I
      52: aload_2
      53: areturn
      54: iload_1
      55: ifne          61
      58: ldc           #207                // String
      60: areturn
      61: iload_1
      62: aload_0
      63: getfield      #60                 // Field bufferSize:I
      66: if_icmpgt     106
      69: aload_0
      70: iload_1
      71: invokespecial #210                // Method refillBuffer:(I)V
      74: new           #198                // class java/lang/String
      77: dup
      78: aload_0
      79: getfield      #58                 // Field buffer:[B
      82: aload_0
      83: getfield      #62                 // Field pos:I
      86: iload_1
      87: getstatic     #202                // Field com/google/protobuf/Internal.UTF_8:Ljava/nio/charset/Charset;
      90: invokespecial #205                // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
      93: astore_2
      94: aload_0
      95: dup
      96: getfield      #62                 // Field pos:I
      99: iload_1
     100: iadd
     101: putfield      #62                 // Field pos:I
     104: aload_2
     105: areturn
     106: new           #198                // class java/lang/String
     109: dup
     110: aload_0
     111: iload_1
     112: iconst_0
     113: invokespecial #214                // Method readRawBytesSlowPath:(IZ)[B
     116: getstatic     #202                // Field com/google/protobuf/Internal.UTF_8:Ljava/nio/charset/Charset;
     119: invokespecial #217                // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
     122: areturn

  public java.lang.String readStringRequireUtf8() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method readRawVarint32:()I
       4: istore_1
       5: aload_0
       6: getfield      #62                 // Field pos:I
       9: istore_3
      10: iload_1
      11: aload_0
      12: getfield      #60                 // Field bufferSize:I
      15: iload_3
      16: isub
      17: if_icmpgt     42
      20: iload_1
      21: ifle          42
      24: aload_0
      25: getfield      #58                 // Field buffer:[B
      28: astore_2
      29: aload_0
      30: iload_3
      31: iload_1
      32: iadd
      33: putfield      #62                 // Field pos:I
      36: iload_3
      37: istore        4
      39: goto          91
      42: iload_1
      43: ifne          49
      46: ldc           #207                // String
      48: areturn
      49: iload_1
      50: aload_0
      51: getfield      #60                 // Field bufferSize:I
      54: if_icmpgt     81
      57: aload_0
      58: iload_1
      59: invokespecial #210                // Method refillBuffer:(I)V
      62: aload_0
      63: getfield      #58                 // Field buffer:[B
      66: astore_2
      67: iconst_0
      68: istore        4
      70: aload_0
      71: iload         4
      73: iload_1
      74: iadd
      75: putfield      #62                 // Field pos:I
      78: goto          91
      81: aload_0
      82: iload_1
      83: iconst_0
      84: invokespecial #214                // Method readRawBytesSlowPath:(IZ)[B
      87: astore_2
      88: iconst_0
      89: istore        4
      91: aload_2
      92: iload         4
      94: iload_1
      95: invokestatic  #228                // Method com/google/protobuf/Utf8.decodeUtf8:([BII)Ljava/lang/String;
      98: areturn

  public void readGroup(int, com.google.protobuf.MessageLite$Builder, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #236                // Field recursionDepth:I
       4: aload_0
       5: getfield      #239                // Field recursionLimit:I
       8: if_icmplt     15
      11: invokestatic  #242                // Method com/google/protobuf/InvalidProtocolBufferException.recursionLimitExceeded:()Lcom/google/protobuf/InvalidProtocolBufferException;
      14: athrow
      15: aload_0
      16: dup
      17: getfield      #236                // Field recursionDepth:I
      20: iconst_1
      21: iadd
      22: putfield      #236                // Field recursionDepth:I
      25: aload_2
      26: aload_0
      27: aload_3
      28: invokeinterface #246,  3          // InterfaceMethod com/google/protobuf/MessageLite$Builder.mergeFrom:(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/MessageLite$Builder;
      33: pop
      34: aload_0
      35: iload_1
      36: iconst_4
      37: invokestatic  #115                // Method com/google/protobuf/WireFormat.makeTag:(II)I
      40: invokevirtual #117                // Method checkLastTagWas:(I)V
      43: aload_0
      44: dup
      45: getfield      #236                // Field recursionDepth:I
      48: iconst_1
      49: isub
      50: putfield      #236                // Field recursionDepth:I
      53: return

  public <T extends com.google.protobuf.MessageLite> T readGroup(int, com.google.protobuf.Parser<T>, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #236                // Field recursionDepth:I
       4: aload_0
       5: getfield      #239                // Field recursionLimit:I
       8: if_icmplt     15
      11: invokestatic  #242                // Method com/google/protobuf/InvalidProtocolBufferException.recursionLimitExceeded:()Lcom/google/protobuf/InvalidProtocolBufferException;
      14: athrow
      15: aload_0
      16: dup
      17: getfield      #236                // Field recursionDepth:I
      20: iconst_1
      21: iadd
      22: putfield      #236                // Field recursionDepth:I
      25: aload_2
      26: aload_0
      27: aload_3
      28: invokeinterface #259,  3          // InterfaceMethod com/google/protobuf/Parser.parsePartialFrom:(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      33: checkcast     #16                 // class com/google/protobuf/MessageLite
      36: astore        4
      38: aload_0
      39: iload_1
      40: iconst_4
      41: invokestatic  #115                // Method com/google/protobuf/WireFormat.makeTag:(II)I
      44: invokevirtual #117                // Method checkLastTagWas:(I)V
      47: aload_0
      48: dup
      49: getfield      #236                // Field recursionDepth:I
      52: iconst_1
      53: isub
      54: putfield      #236                // Field recursionDepth:I
      57: aload         4
      59: areturn

  public void readUnknownGroup(int, com.google.protobuf.MessageLite$Builder) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #273                // Method com/google/protobuf/ExtensionRegistryLite.getEmptyRegistry:()Lcom/google/protobuf/ExtensionRegistryLite;
       6: invokevirtual #275                // Method readGroup:(ILcom/google/protobuf/MessageLite$Builder;Lcom/google/protobuf/ExtensionRegistryLite;)V
       9: return

  public void readMessage(com.google.protobuf.MessageLite$Builder, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method readRawVarint32:()I
       4: istore_3
       5: aload_0
       6: getfield      #236                // Field recursionDepth:I
       9: aload_0
      10: getfield      #239                // Field recursionLimit:I
      13: if_icmplt     20
      16: invokestatic  #242                // Method com/google/protobuf/InvalidProtocolBufferException.recursionLimitExceeded:()Lcom/google/protobuf/InvalidProtocolBufferException;
      19: athrow
      20: aload_0
      21: iload_3
      22: invokevirtual #280                // Method pushLimit:(I)I
      25: istore        4
      27: aload_0
      28: dup
      29: getfield      #236                // Field recursionDepth:I
      32: iconst_1
      33: iadd
      34: putfield      #236                // Field recursionDepth:I
      37: aload_1
      38: aload_0
      39: aload_2
      40: invokeinterface #246,  3          // InterfaceMethod com/google/protobuf/MessageLite$Builder.mergeFrom:(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Lcom/google/protobuf/MessageLite$Builder;
      45: pop
      46: aload_0
      47: iconst_0
      48: invokevirtual #117                // Method checkLastTagWas:(I)V
      51: aload_0
      52: dup
      53: getfield      #236                // Field recursionDepth:I
      56: iconst_1
      57: isub
      58: putfield      #236                // Field recursionDepth:I
      61: aload_0
      62: iload         4
      64: invokevirtual #283                // Method popLimit:(I)V
      67: return

  public <T extends com.google.protobuf.MessageLite> T readMessage(com.google.protobuf.Parser<T>, com.google.protobuf.ExtensionRegistryLite) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method readRawVarint32:()I
       4: istore_3
       5: aload_0
       6: getfield      #236                // Field recursionDepth:I
       9: aload_0
      10: getfield      #239                // Field recursionLimit:I
      13: if_icmplt     20
      16: invokestatic  #242                // Method com/google/protobuf/InvalidProtocolBufferException.recursionLimitExceeded:()Lcom/google/protobuf/InvalidProtocolBufferException;
      19: athrow
      20: aload_0
      21: iload_3
      22: invokevirtual #280                // Method pushLimit:(I)I
      25: istore        4
      27: aload_0
      28: dup
      29: getfield      #236                // Field recursionDepth:I
      32: iconst_1
      33: iadd
      34: putfield      #236                // Field recursionDepth:I
      37: aload_1
      38: aload_0
      39: aload_2
      40: invokeinterface #259,  3          // InterfaceMethod com/google/protobuf/Parser.parsePartialFrom:(Lcom/google/protobuf/CodedInputStream;Lcom/google/protobuf/ExtensionRegistryLite;)Ljava/lang/Object;
      45: checkcast     #16                 // class com/google/protobuf/MessageLite
      48: astore        5
      50: aload_0
      51: iconst_0
      52: invokevirtual #117                // Method checkLastTagWas:(I)V
      55: aload_0
      56: dup
      57: getfield      #236                // Field recursionDepth:I
      60: iconst_1
      61: isub
      62: putfield      #236                // Field recursionDepth:I
      65: aload_0
      66: iload         4
      68: invokevirtual #283                // Method popLimit:(I)V
      71: aload         5
      73: areturn

  public com.google.protobuf.ByteString readBytes() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method readRawVarint32:()I
       4: istore_1
       5: iload_1
       6: aload_0
       7: getfield      #60                 // Field bufferSize:I
      10: aload_0
      11: getfield      #62                 // Field pos:I
      14: isub
      15: if_icmpgt     47
      18: iload_1
      19: ifle          47
      22: aload_0
      23: getfield      #58                 // Field buffer:[B
      26: aload_0
      27: getfield      #62                 // Field pos:I
      30: iload_1
      31: invokestatic  #293                // Method com/google/protobuf/ByteString.copyFrom:([BII)Lcom/google/protobuf/ByteString;
      34: astore_2
      35: aload_0
      36: dup
      37: getfield      #62                 // Field pos:I
      40: iload_1
      41: iadd
      42: putfield      #62                 // Field pos:I
      45: aload_2
      46: areturn
      47: iload_1
      48: ifne          55
      51: getstatic     #296                // Field com/google/protobuf/ByteString.EMPTY:Lcom/google/protobuf/ByteString;
      54: areturn
      55: aload_0
      56: iload_1
      57: invokespecial #300                // Method readBytesSlowPath:(I)Lcom/google/protobuf/ByteString;
      60: areturn

  public byte[] readByteArray() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method readRawVarint32:()I
       4: istore_1
       5: iload_1
       6: aload_0
       7: getfield      #60                 // Field bufferSize:I
      10: aload_0
      11: getfield      #62                 // Field pos:I
      14: isub
      15: if_icmpgt     52
      18: iload_1
      19: ifle          52
      22: aload_0
      23: getfield      #58                 // Field buffer:[B
      26: aload_0
      27: getfield      #62                 // Field pos:I
      30: aload_0
      31: getfield      #62                 // Field pos:I
      34: iload_1
      35: iadd
      36: invokestatic  #308                // Method java/util/Arrays.copyOfRange:([BII)[B
      39: astore_2
      40: aload_0
      41: dup
      42: getfield      #62                 // Field pos:I
      45: iload_1
      46: iadd
      47: putfield      #62                 // Field pos:I
      50: aload_2
      51: areturn
      52: aload_0
      53: iload_1
      54: iconst_0
      55: invokespecial #214                // Method readRawBytesSlowPath:(IZ)[B
      58: areturn

  public java.nio.ByteBuffer readByteBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method readRawVarint32:()I
       4: istore_1
       5: iload_1
       6: aload_0
       7: getfield      #60                 // Field bufferSize:I
      10: aload_0
      11: getfield      #62                 // Field pos:I
      14: isub
      15: if_icmpgt     55
      18: iload_1
      19: ifle          55
      22: aload_0
      23: getfield      #58                 // Field buffer:[B
      26: aload_0
      27: getfield      #62                 // Field pos:I
      30: aload_0
      31: getfield      #62                 // Field pos:I
      34: iload_1
      35: iadd
      36: invokestatic  #308                // Method java/util/Arrays.copyOfRange:([BII)[B
      39: invokestatic  #316                // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      42: astore_2
      43: aload_0
      44: dup
      45: getfield      #62                 // Field pos:I
      48: iload_1
      49: iadd
      50: putfield      #62                 // Field pos:I
      53: aload_2
      54: areturn
      55: iload_1
      56: ifne          63
      59: getstatic     #320                // Field com/google/protobuf/Internal.EMPTY_BYTE_BUFFER:Ljava/nio/ByteBuffer;
      62: areturn
      63: aload_0
      64: iload_1
      65: iconst_1
      66: invokespecial #214                // Method readRawBytesSlowPath:(IZ)[B
      69: invokestatic  #316                // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      72: areturn

  public int readUInt32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method readRawVarint32:()I
       4: ireturn

  public int readEnum() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method readRawVarint32:()I
       4: ireturn

  public int readSFixed32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #156                // Method readRawLittleEndian32:()I
       4: ireturn

  public long readSFixed64() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #139                // Method readRawLittleEndian64:()J
       4: lreturn

  public int readSInt32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method readRawVarint32:()I
       4: invokestatic  #328                // Method decodeZigZag32:(I)I
       7: ireturn

  public long readSInt64() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #190                // Method readRawVarint64:()J
       4: invokestatic  #333                // Method decodeZigZag64:(J)J
       7: lreturn

  public int readRawVarint32() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #62                 // Field pos:I
       4: istore_1
       5: aload_0
       6: getfield      #60                 // Field bufferSize:I
       9: iload_1
      10: if_icmpne     16
      13: goto          209
      16: aload_0
      17: getfield      #58                 // Field buffer:[B
      20: astore_2
      21: aload_2
      22: iload_1
      23: iinc          1, 1
      26: baload
      27: dup
      28: istore_3
      29: iflt          39
      32: aload_0
      33: iload_1
      34: putfield      #62                 // Field pos:I
      37: iload_3
      38: ireturn
      39: aload_0
      40: getfield      #60                 // Field bufferSize:I
      43: iload_1
      44: isub
      45: bipush        9
      47: if_icmpge     53
      50: goto          209
      53: iload_3
      54: aload_2
      55: iload_1
      56: iinc          1, 1
      59: baload
      60: bipush        7
      62: ishl
      63: ixor
      64: dup
      65: istore_3
      66: ifge          77
      69: iload_3
      70: bipush        -128
      72: ixor
      73: istore_3
      74: goto          202
      77: iload_3
      78: aload_2
      79: iload_1
      80: iinc          1, 1
      83: baload
      84: bipush        14
      86: ishl
      87: ixor
      88: dup
      89: istore_3
      90: iflt          102
      93: iload_3
      94: sipush        16256
      97: ixor
      98: istore_3
      99: goto          202
     102: iload_3
     103: aload_2
     104: iload_1
     105: iinc          1, 1
     108: baload
     109: bipush        21
     111: ishl
     112: ixor
     113: dup
     114: istore_3
     115: ifge          127
     118: iload_3
     119: ldc_w         #334                // int -2080896
     122: ixor
     123: istore_3
     124: goto          202
     127: aload_2
     128: iload_1
     129: iinc          1, 1
     132: baload
     133: istore        4
     135: iload_3
     136: iload         4
     138: bipush        28
     140: ishl
     141: ixor
     142: istore_3
     143: iload_3
     144: ldc_w         #335                // int 266354560
     147: ixor
     148: istore_3
     149: iload         4
     151: ifge          202
     154: aload_2
     155: iload_1
     156: iinc          1, 1
     159: baload
     160: ifge          202
     163: aload_2
     164: iload_1
     165: iinc          1, 1
     168: baload
     169: ifge          202
     172: aload_2
     173: iload_1
     174: iinc          1, 1
     177: baload
     178: ifge          202
     181: aload_2
     182: iload_1
     183: iinc          1, 1
     186: baload
     187: ifge          202
     190: aload_2
     191: iload_1
     192: iinc          1, 1
     195: baload
     196: ifge          202
     199: goto          209
     202: aload_0
     203: iload_1
     204: putfield      #62                 // Field pos:I
     207: iload_3
     208: ireturn
     209: aload_0
     210: invokevirtual #338                // Method readRawVarint64SlowPath:()J
     213: l2i
     214: ireturn

  private void skipRawVarint() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #60                 // Field bufferSize:I
       4: aload_0
       5: getfield      #62                 // Field pos:I
       8: isub
       9: bipush        10
      11: if_icmplt     21
      14: aload_0
      15: invokespecial #343                // Method skipRawVarintFastPath:()V
      18: goto          25
      21: aload_0
      22: invokespecial #346                // Method skipRawVarintSlowPath:()V
      25: return

  private void skipRawVarintFastPath() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: bipush        10
       5: if_icmpge     34
       8: aload_0
       9: getfield      #58                 // Field buffer:[B
      12: aload_0
      13: dup
      14: getfield      #62                 // Field pos:I
      17: dup_x1
      18: iconst_1
      19: iadd
      20: putfield      #62                 // Field pos:I
      23: baload
      24: iflt          28
      27: return
      28: iinc          1, 1
      31: goto          2
      34: invokestatic  #349                // Method com/google/protobuf/InvalidProtocolBufferException.malformedVarint:()Lcom/google/protobuf/InvalidProtocolBufferException;
      37: athrow

  private void skipRawVarintSlowPath() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: bipush        10
       5: if_icmpge     22
       8: aload_0
       9: invokevirtual #354                // Method readRawByte:()B
      12: iflt          16
      15: return
      16: iinc          1, 1
      19: goto          2
      22: invokestatic  #349                // Method com/google/protobuf/InvalidProtocolBufferException.malformedVarint:()Lcom/google/protobuf/InvalidProtocolBufferException;
      25: athrow

  public long readRawVarint64() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #62                 // Field pos:I
       4: istore_1
       5: aload_0
       6: getfield      #60                 // Field bufferSize:I
       9: iload_1
      10: if_icmpne     16
      13: goto          303
      16: aload_0
      17: getfield      #58                 // Field buffer:[B
      20: astore_2
      21: aload_2
      22: iload_1
      23: iinc          1, 1
      26: baload
      27: dup
      28: istore        5
      30: iflt          42
      33: aload_0
      34: iload_1
      35: putfield      #62                 // Field pos:I
      38: iload         5
      40: i2l
      41: lreturn
      42: aload_0
      43: getfield      #60                 // Field bufferSize:I
      46: iload_1
      47: isub
      48: bipush        9
      50: if_icmpge     56
      53: goto          303
      56: iload         5
      58: aload_2
      59: iload_1
      60: iinc          1, 1
      63: baload
      64: bipush        7
      66: ishl
      67: ixor
      68: dup
      69: istore        5
      71: ifge          84
      74: iload         5
      76: bipush        -128
      78: ixor
      79: i2l
      80: lstore_3
      81: goto          296
      84: iload         5
      86: aload_2
      87: iload_1
      88: iinc          1, 1
      91: baload
      92: bipush        14
      94: ishl
      95: ixor
      96: dup
      97: istore        5
      99: iflt          113
     102: iload         5
     104: sipush        16256
     107: ixor
     108: i2l
     109: lstore_3
     110: goto          296
     113: iload         5
     115: aload_2
     116: iload_1
     117: iinc          1, 1
     120: baload
     121: bipush        21
     123: ishl
     124: ixor
     125: dup
     126: istore        5
     128: ifge          142
     131: iload         5
     133: ldc_w         #334                // int -2080896
     136: ixor
     137: i2l
     138: lstore_3
     139: goto          296
     142: iload         5
     144: i2l
     145: aload_2
     146: iload_1
     147: iinc          1, 1
     150: baload
     151: i2l
     152: bipush        28
     154: lshl
     155: lxor
     156: dup2
     157: lstore_3
     158: lconst_0
     159: lcmp
     160: iflt          172
     163: lload_3
     164: ldc2_w        #355                // long 266354560l
     167: lxor
     168: lstore_3
     169: goto          296
     172: lload_3
     173: aload_2
     174: iload_1
     175: iinc          1, 1
     178: baload
     179: i2l
     180: bipush        35
     182: lshl
     183: lxor
     184: dup2
     185: lstore_3
     186: lconst_0
     187: lcmp
     188: ifge          200
     191: lload_3
     192: ldc2_w        #357                // long -34093383808l
     195: lxor
     196: lstore_3
     197: goto          296
     200: lload_3
     201: aload_2
     202: iload_1
     203: iinc          1, 1
     206: baload
     207: i2l
     208: bipush        42
     210: lshl
     211: lxor
     212: dup2
     213: lstore_3
     214: lconst_0
     215: lcmp
     216: iflt          228
     219: lload_3
     220: ldc2_w        #359                // long 4363953127296l
     223: lxor
     224: lstore_3
     225: goto          296
     228: lload_3
     229: aload_2
     230: iload_1
     231: iinc          1, 1
     234: baload
     235: i2l
     236: bipush        49
     238: lshl
     239: lxor
     240: dup2
     241: lstore_3
     242: lconst_0
     243: lcmp
     244: ifge          256
     247: lload_3
     248: ldc2_w        #361                // long -558586000294016l
     251: lxor
     252: lstore_3
     253: goto          296
     256: lload_3
     257: aload_2
     258: iload_1
     259: iinc          1, 1
     262: baload
     263: i2l
     264: bipush        56
     266: lshl
     267: lxor
     268: lstore_3
     269: lload_3
     270: ldc2_w        #363                // long 71499008037633920l
     273: lxor
     274: lstore_3
     275: lload_3
     276: lconst_0
     277: lcmp
     278: ifge          296
     281: aload_2
     282: iload_1
     283: iinc          1, 1
     286: baload
     287: i2l
     288: lconst_0
     289: lcmp
     290: ifge          296
     293: goto          303
     296: aload_0
     297: iload_1
     298: putfield      #62                 // Field pos:I
     301: lload_3
     302: lreturn
     303: aload_0
     304: invokevirtual #338                // Method readRawVarint64SlowPath:()J
     307: lreturn

  long readRawVarint64SlowPath() throws java.io.IOException;
    Code:
       0: lconst_0
       1: lstore_1
       2: iconst_0
       3: istore_3
       4: iload_3
       5: bipush        64
       7: if_icmpge     44
      10: aload_0
      11: invokevirtual #354                // Method readRawByte:()B
      14: istore        4
      16: lload_1
      17: iload         4
      19: bipush        127
      21: iand
      22: i2l
      23: iload_3
      24: lshl
      25: lor
      26: lstore_1
      27: iload         4
      29: sipush        128
      32: iand
      33: ifne          38
      36: lload_1
      37: lreturn
      38: iinc          3, 7
      41: goto          4
      44: invokestatic  #349                // Method com/google/protobuf/InvalidProtocolBufferException.malformedVarint:()Lcom/google/protobuf/InvalidProtocolBufferException;
      47: athrow

  public int readRawLittleEndian32() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #62                 // Field pos:I
       4: istore_1
       5: aload_0
       6: getfield      #60                 // Field bufferSize:I
       9: iload_1
      10: isub
      11: iconst_4
      12: if_icmpge     25
      15: aload_0
      16: iconst_4
      17: invokespecial #210                // Method refillBuffer:(I)V
      20: aload_0
      21: getfield      #62                 // Field pos:I
      24: istore_1
      25: aload_0
      26: getfield      #58                 // Field buffer:[B
      29: astore_2
      30: aload_0
      31: iload_1
      32: iconst_4
      33: iadd
      34: putfield      #62                 // Field pos:I
      37: aload_2
      38: iload_1
      39: baload
      40: sipush        255
      43: iand
      44: aload_2
      45: iload_1
      46: iconst_1
      47: iadd
      48: baload
      49: sipush        255
      52: iand
      53: bipush        8
      55: ishl
      56: ior
      57: aload_2
      58: iload_1
      59: iconst_2
      60: iadd
      61: baload
      62: sipush        255
      65: iand
      66: bipush        16
      68: ishl
      69: ior
      70: aload_2
      71: iload_1
      72: iconst_3
      73: iadd
      74: baload
      75: sipush        255
      78: iand
      79: bipush        24
      81: ishl
      82: ior
      83: ireturn

  public long readRawLittleEndian64() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #62                 // Field pos:I
       4: istore_1
       5: aload_0
       6: getfield      #60                 // Field bufferSize:I
       9: iload_1
      10: isub
      11: bipush        8
      13: if_icmpge     27
      16: aload_0
      17: bipush        8
      19: invokespecial #210                // Method refillBuffer:(I)V
      22: aload_0
      23: getfield      #62                 // Field pos:I
      26: istore_1
      27: aload_0
      28: getfield      #58                 // Field buffer:[B
      31: astore_2
      32: aload_0
      33: iload_1
      34: bipush        8
      36: iadd
      37: putfield      #62                 // Field pos:I
      40: aload_2
      41: iload_1
      42: baload
      43: i2l
      44: ldc2_w        #368                // long 255l
      47: land
      48: aload_2
      49: iload_1
      50: iconst_1
      51: iadd
      52: baload
      53: i2l
      54: ldc2_w        #368                // long 255l
      57: land
      58: bipush        8
      60: lshl
      61: lor
      62: aload_2
      63: iload_1
      64: iconst_2
      65: iadd
      66: baload
      67: i2l
      68: ldc2_w        #368                // long 255l
      71: land
      72: bipush        16
      74: lshl
      75: lor
      76: aload_2
      77: iload_1
      78: iconst_3
      79: iadd
      80: baload
      81: i2l
      82: ldc2_w        #368                // long 255l
      85: land
      86: bipush        24
      88: lshl
      89: lor
      90: aload_2
      91: iload_1
      92: iconst_4
      93: iadd
      94: baload
      95: i2l
      96: ldc2_w        #368                // long 255l
      99: land
     100: bipush        32
     102: lshl
     103: lor
     104: aload_2
     105: iload_1
     106: iconst_5
     107: iadd
     108: baload
     109: i2l
     110: ldc2_w        #368                // long 255l
     113: land
     114: bipush        40
     116: lshl
     117: lor
     118: aload_2
     119: iload_1
     120: bipush        6
     122: iadd
     123: baload
     124: i2l
     125: ldc2_w        #368                // long 255l
     128: land
     129: bipush        48
     131: lshl
     132: lor
     133: aload_2
     134: iload_1
     135: bipush        7
     137: iadd
     138: baload
     139: i2l
     140: ldc2_w        #368                // long 255l
     143: land
     144: bipush        56
     146: lshl
     147: lor
     148: lreturn

  public void enableAliasing(boolean);
    Code:
       0: return

  public void resetSizeCounter();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #62                 // Field pos:I
       5: ineg
       6: putfield      #64                 // Field totalBytesRetired:I
       9: return

  public int pushLimit(int) throws com.google.protobuf.InvalidProtocolBufferException;
    Code:
       0: iload_1
       1: ifge          8
       4: invokestatic  #377                // Method com/google/protobuf/InvalidProtocolBufferException.negativeSize:()Lcom/google/protobuf/InvalidProtocolBufferException;
       7: athrow
       8: iload_1
       9: aload_0
      10: getfield      #64                 // Field totalBytesRetired:I
      13: aload_0
      14: getfield      #62                 // Field pos:I
      17: iadd
      18: iadd
      19: istore_1
      20: aload_0
      21: getfield      #45                 // Field currentLimit:I
      24: istore_2
      25: iload_1
      26: iload_2
      27: if_icmple     34
      30: invokestatic  #380                // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
      33: athrow
      34: aload_0
      35: iload_1
      36: putfield      #45                 // Field currentLimit:I
      39: aload_0
      40: invokespecial #383                // Method recomputeBufferSizeAfterLimit:()V
      43: iload_2
      44: ireturn

  private void recomputeBufferSizeAfterLimit();
    Code:
       0: aload_0
       1: dup
       2: getfield      #60                 // Field bufferSize:I
       5: aload_0
       6: getfield      #386                // Field bufferSizeAfterLimit:I
       9: iadd
      10: putfield      #60                 // Field bufferSize:I
      13: aload_0
      14: getfield      #64                 // Field totalBytesRetired:I
      17: aload_0
      18: getfield      #60                 // Field bufferSize:I
      21: iadd
      22: istore_1
      23: iload_1
      24: aload_0
      25: getfield      #45                 // Field currentLimit:I
      28: if_icmple     57
      31: aload_0
      32: iload_1
      33: aload_0
      34: getfield      #45                 // Field currentLimit:I
      37: isub
      38: putfield      #386                // Field bufferSizeAfterLimit:I
      41: aload_0
      42: dup
      43: getfield      #60                 // Field bufferSize:I
      46: aload_0
      47: getfield      #386                // Field bufferSizeAfterLimit:I
      50: isub
      51: putfield      #60                 // Field bufferSize:I
      54: goto          62
      57: aload_0
      58: iconst_0
      59: putfield      #386                // Field bufferSizeAfterLimit:I
      62: return

  public void popLimit(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #45                 // Field currentLimit:I
       5: aload_0
       6: invokespecial #383                // Method recomputeBufferSizeAfterLimit:()V
       9: return

  public int getBytesUntilLimit();
    Code:
       0: aload_0
       1: getfield      #45                 // Field currentLimit:I
       4: ldc           #43                 // int 2147483647
       6: if_icmpne     11
       9: iconst_m1
      10: ireturn
      11: aload_0
      12: getfield      #64                 // Field totalBytesRetired:I
      15: aload_0
      16: getfield      #62                 // Field pos:I
      19: iadd
      20: istore_1
      21: aload_0
      22: getfield      #45                 // Field currentLimit:I
      25: iload_1
      26: isub
      27: ireturn

  public boolean isAtEnd() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #62                 // Field pos:I
       4: aload_0
       5: getfield      #60                 // Field bufferSize:I
       8: if_icmpne     23
      11: aload_0
      12: iconst_1
      13: invokespecial #392                // Method tryRefillBuffer:(I)Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public int getTotalBytesRead();
    Code:
       0: aload_0
       1: getfield      #64                 // Field totalBytesRetired:I
       4: aload_0
       5: getfield      #62                 // Field pos:I
       8: iadd
       9: ireturn

  private void refillBuffer(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #392                // Method tryRefillBuffer:(I)Z
       5: ifne          34
       8: iload_1
       9: aload_0
      10: getfield      #396                // Field sizeLimit:I
      13: aload_0
      14: getfield      #64                 // Field totalBytesRetired:I
      17: isub
      18: aload_0
      19: getfield      #62                 // Field pos:I
      22: isub
      23: if_icmple     30
      26: invokestatic  #399                // Method com/google/protobuf/InvalidProtocolBufferException.sizeLimitExceeded:()Lcom/google/protobuf/InvalidProtocolBufferException;
      29: athrow
      30: invokestatic  #380                // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
      33: athrow
      34: return

  private boolean tryRefillBuffer(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #62                 // Field pos:I
       4: iload_1
       5: iadd
       6: aload_0
       7: getfield      #60                 // Field bufferSize:I
      10: if_icmpgt     50
      13: new           #402                // class java/lang/IllegalStateException
      16: dup
      17: bipush        77
      19: new           #404                // class java/lang/StringBuilder
      22: dup_x1
      23: swap
      24: invokespecial #406                // Method java/lang/StringBuilder."<init>":(I)V
      27: ldc_w         #408                // String refillBuffer() called when
      30: invokevirtual #412                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: iload_1
      34: invokevirtual #415                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      37: ldc_w         #417                // String  bytes were already available in buffer
      40: invokevirtual #412                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #420                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #423                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: iload_1
      51: aload_0
      52: getfield      #396                // Field sizeLimit:I
      55: aload_0
      56: getfield      #64                 // Field totalBytesRetired:I
      59: isub
      60: aload_0
      61: getfield      #62                 // Field pos:I
      64: isub
      65: if_icmple     70
      68: iconst_0
      69: ireturn
      70: aload_0
      71: getfield      #64                 // Field totalBytesRetired:I
      74: aload_0
      75: getfield      #62                 // Field pos:I
      78: iadd
      79: iload_1
      80: iadd
      81: aload_0
      82: getfield      #45                 // Field currentLimit:I
      85: if_icmple     90
      88: iconst_0
      89: ireturn
      90: aload_0
      91: getfield      #47                 // Field refillCallback:Lcom/google/protobuf/CodedInputStream$StreamDecoder$RefillCallback;
      94: ifnull        106
      97: aload_0
      98: getfield      #47                 // Field refillCallback:Lcom/google/protobuf/CodedInputStream$StreamDecoder$RefillCallback;
     101: invokeinterface #426,  1          // InterfaceMethod com/google/protobuf/CodedInputStream$StreamDecoder$RefillCallback.onRefill:()V
     106: aload_0
     107: getfield      #62                 // Field pos:I
     110: istore_2
     111: iload_2
     112: ifle          167
     115: aload_0
     116: getfield      #60                 // Field bufferSize:I
     119: iload_2
     120: if_icmple     142
     123: aload_0
     124: getfield      #58                 // Field buffer:[B
     127: iload_2
     128: aload_0
     129: getfield      #58                 // Field buffer:[B
     132: iconst_0
     133: aload_0
     134: getfield      #60                 // Field bufferSize:I
     137: iload_2
     138: isub
     139: invokestatic  #432                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     142: aload_0
     143: dup
     144: getfield      #64                 // Field totalBytesRetired:I
     147: iload_2
     148: iadd
     149: putfield      #64                 // Field totalBytesRetired:I
     152: aload_0
     153: dup
     154: getfield      #60                 // Field bufferSize:I
     157: iload_2
     158: isub
     159: putfield      #60                 // Field bufferSize:I
     162: aload_0
     163: iconst_0
     164: putfield      #62                 // Field pos:I
     167: aload_0
     168: getfield      #56                 // Field input:Ljava/io/InputStream;
     171: aload_0
     172: getfield      #58                 // Field buffer:[B
     175: aload_0
     176: getfield      #60                 // Field bufferSize:I
     179: aload_0
     180: getfield      #58                 // Field buffer:[B
     183: arraylength
     184: aload_0
     185: getfield      #60                 // Field bufferSize:I
     188: isub
     189: aload_0
     190: getfield      #396                // Field sizeLimit:I
     193: aload_0
     194: getfield      #64                 // Field totalBytesRetired:I
     197: isub
     198: aload_0
     199: getfield      #60                 // Field bufferSize:I
     202: isub
     203: invokestatic  #437                // Method java/lang/Math.min:(II)I
     206: invokevirtual #443                // Method java/io/InputStream.read:([BII)I
     209: istore_3
     210: iload_3
     211: ifeq          228
     214: iload_3
     215: iconst_m1
     216: if_icmplt     228
     219: iload_3
     220: aload_0
     221: getfield      #58                 // Field buffer:[B
     224: arraylength
     225: if_icmple     291
     228: new           #402                // class java/lang/IllegalStateException
     231: dup
     232: aload_0
     233: getfield      #56                 // Field input:Ljava/io/InputStream;
     236: invokevirtual #449                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     239: invokestatic  #453                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     242: astore        4
     244: bipush        91
     246: aload         4
     248: invokestatic  #453                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     251: invokevirtual #455                // Method java/lang/String.length:()I
     254: iadd
     255: new           #404                // class java/lang/StringBuilder
     258: dup_x1
     259: swap
     260: invokespecial #406                // Method java/lang/StringBuilder."<init>":(I)V
     263: aload         4
     265: invokevirtual #412                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     268: ldc_w         #457                // String #read(byte[]) returned invalid result:
     271: invokevirtual #412                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     274: iload_3
     275: invokevirtual #415                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     278: ldc_w         #459                // String \nThe InputStream implementation is buggy.
     281: invokevirtual #412                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     284: invokevirtual #420                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     287: invokespecial #423                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     290: athrow
     291: iload_3
     292: ifle          327
     295: aload_0
     296: dup
     297: getfield      #60                 // Field bufferSize:I
     300: iload_3
     301: iadd
     302: putfield      #60                 // Field bufferSize:I
     305: aload_0
     306: invokespecial #383                // Method recomputeBufferSizeAfterLimit:()V
     309: aload_0
     310: getfield      #60                 // Field bufferSize:I
     313: iload_1
     314: if_icmplt     321
     317: iconst_1
     318: goto          326
     321: aload_0
     322: iload_1
     323: invokespecial #392                // Method tryRefillBuffer:(I)Z
     326: ireturn
     327: iconst_0
     328: ireturn

  public byte readRawByte() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #62                 // Field pos:I
       4: aload_0
       5: getfield      #60                 // Field bufferSize:I
       8: if_icmpne     16
      11: aload_0
      12: iconst_1
      13: invokespecial #210                // Method refillBuffer:(I)V
      16: aload_0
      17: getfield      #58                 // Field buffer:[B
      20: aload_0
      21: dup
      22: getfield      #62                 // Field pos:I
      25: dup_x1
      26: iconst_1
      27: iadd
      28: putfield      #62                 // Field pos:I
      31: baload
      32: ireturn

  public byte[] readRawBytes(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #62                 // Field pos:I
       4: istore_2
       5: iload_1
       6: aload_0
       7: getfield      #60                 // Field bufferSize:I
      10: iload_2
      11: isub
      12: if_icmpgt     38
      15: iload_1
      16: ifle          38
      19: aload_0
      20: iload_2
      21: iload_1
      22: iadd
      23: putfield      #62                 // Field pos:I
      26: aload_0
      27: getfield      #58                 // Field buffer:[B
      30: iload_2
      31: iload_2
      32: iload_1
      33: iadd
      34: invokestatic  #308                // Method java/util/Arrays.copyOfRange:([BII)[B
      37: areturn
      38: aload_0
      39: iload_1
      40: iconst_0
      41: invokespecial #214                // Method readRawBytesSlowPath:(IZ)[B
      44: areturn

  private byte[] readRawBytesSlowPath(int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #465                // Method readRawBytesSlowPathOneChunk:(I)[B
       5: astore_3
       6: aload_3
       7: ifnull        26
      10: iload_2
      11: ifeq          24
      14: aload_3
      15: invokevirtual #469                // Method "[B".clone:()Ljava/lang/Object;
      18: checkcast     #222                // class "[B"
      21: goto          25
      24: aload_3
      25: areturn
      26: aload_0
      27: getfield      #62                 // Field pos:I
      30: istore        4
      32: aload_0
      33: getfield      #60                 // Field bufferSize:I
      36: aload_0
      37: getfield      #62                 // Field pos:I
      40: isub
      41: istore        5
      43: aload_0
      44: dup
      45: getfield      #64                 // Field totalBytesRetired:I
      48: aload_0
      49: getfield      #60                 // Field bufferSize:I
      52: iadd
      53: putfield      #64                 // Field totalBytesRetired:I
      56: aload_0
      57: iconst_0
      58: putfield      #62                 // Field pos:I
      61: aload_0
      62: iconst_0
      63: putfield      #60                 // Field bufferSize:I
      66: iload_1
      67: iload         5
      69: isub
      70: istore        6
      72: aload_0
      73: iload         6
      75: invokespecial #473                // Method readRawBytesSlowPathRemainingChunks:(I)Ljava/util/List;
      78: astore        7
      80: iload_1
      81: newarray       byte
      83: astore        8
      85: aload_0
      86: getfield      #58                 // Field buffer:[B
      89: iload         4
      91: aload         8
      93: iconst_0
      94: iload         5
      96: invokestatic  #432                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      99: iload         5
     101: istore        9
     103: aload         7
     105: invokeinterface #479,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     110: astore        10
     112: aload         10
     114: invokeinterface #484,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     119: ifeq          158
     122: aload         10
     124: invokeinterface #487,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     129: checkcast     #222                // class "[B"
     132: astore        11
     134: aload         11
     136: iconst_0
     137: aload         8
     139: iload         9
     141: aload         11
     143: arraylength
     144: invokestatic  #432                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     147: iload         9
     149: aload         11
     151: arraylength
     152: iadd
     153: istore        9
     155: goto          112
     158: aload         8
     160: areturn

  private byte[] readRawBytesSlowPathOneChunk(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifne          8
       4: getstatic     #498                // Field com/google/protobuf/Internal.EMPTY_BYTE_ARRAY:[B
       7: areturn
       8: iload_1
       9: ifge          16
      12: invokestatic  #377                // Method com/google/protobuf/InvalidProtocolBufferException.negativeSize:()Lcom/google/protobuf/InvalidProtocolBufferException;
      15: athrow
      16: aload_0
      17: getfield      #64                 // Field totalBytesRetired:I
      20: aload_0
      21: getfield      #62                 // Field pos:I
      24: iadd
      25: iload_1
      26: iadd
      27: istore_2
      28: iload_2
      29: aload_0
      30: getfield      #396                // Field sizeLimit:I
      33: isub
      34: ifle          41
      37: invokestatic  #399                // Method com/google/protobuf/InvalidProtocolBufferException.sizeLimitExceeded:()Lcom/google/protobuf/InvalidProtocolBufferException;
      40: athrow
      41: iload_2
      42: aload_0
      43: getfield      #45                 // Field currentLimit:I
      46: if_icmple     71
      49: aload_0
      50: aload_0
      51: getfield      #45                 // Field currentLimit:I
      54: aload_0
      55: getfield      #64                 // Field totalBytesRetired:I
      58: isub
      59: aload_0
      60: getfield      #62                 // Field pos:I
      63: isub
      64: invokevirtual #108                // Method skipRawBytes:(I)V
      67: invokestatic  #380                // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
      70: athrow
      71: aload_0
      72: getfield      #60                 // Field bufferSize:I
      75: aload_0
      76: getfield      #62                 // Field pos:I
      79: isub
      80: istore_3
      81: iload_1
      82: iload_3
      83: isub
      84: istore        4
      86: iload         4
      88: sipush        4096
      91: if_icmplt     106
      94: iload         4
      96: aload_0
      97: getfield      #56                 // Field input:Ljava/io/InputStream;
     100: invokevirtual #501                // Method java/io/InputStream.available:()I
     103: if_icmpgt     211
     106: iload_1
     107: newarray       byte
     109: astore        5
     111: aload_0
     112: getfield      #58                 // Field buffer:[B
     115: aload_0
     116: getfield      #62                 // Field pos:I
     119: aload         5
     121: iconst_0
     122: iload_3
     123: invokestatic  #432                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     126: aload_0
     127: dup
     128: getfield      #64                 // Field totalBytesRetired:I
     131: aload_0
     132: getfield      #60                 // Field bufferSize:I
     135: iadd
     136: putfield      #64                 // Field totalBytesRetired:I
     139: aload_0
     140: iconst_0
     141: putfield      #62                 // Field pos:I
     144: aload_0
     145: iconst_0
     146: putfield      #60                 // Field bufferSize:I
     149: iload_3
     150: istore        6
     152: iload         6
     154: aload         5
     156: arraylength
     157: if_icmpge     208
     160: aload_0
     161: getfield      #56                 // Field input:Ljava/io/InputStream;
     164: aload         5
     166: iload         6
     168: iload_1
     169: iload         6
     171: isub
     172: invokevirtual #443                // Method java/io/InputStream.read:([BII)I
     175: istore        7
     177: iload         7
     179: iconst_m1
     180: if_icmpne     187
     183: invokestatic  #380                // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
     186: athrow
     187: aload_0
     188: dup
     189: getfield      #64                 // Field totalBytesRetired:I
     192: iload         7
     194: iadd
     195: putfield      #64                 // Field totalBytesRetired:I
     198: iload         6
     200: iload         7
     202: iadd
     203: istore        6
     205: goto          152
     208: aload         5
     210: areturn
     211: aconst_null
     212: areturn

  private java.util.List<byte[]> readRawBytesSlowPathRemainingChunks(int) throws java.io.IOException;
    Code:
       0: new           #505                // class java/util/ArrayList
       3: dup
       4: invokespecial #507                // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: iload_1
       9: ifle          96
      12: iload_1
      13: sipush        4096
      16: invokestatic  #437                // Method java/lang/Math.min:(II)I
      19: newarray       byte
      21: astore_3
      22: iconst_0
      23: istore        4
      25: iload         4
      27: aload_3
      28: arraylength
      29: if_icmpge     80
      32: aload_0
      33: getfield      #56                 // Field input:Ljava/io/InputStream;
      36: aload_3
      37: iload         4
      39: aload_3
      40: arraylength
      41: iload         4
      43: isub
      44: invokevirtual #443                // Method java/io/InputStream.read:([BII)I
      47: istore        5
      49: iload         5
      51: iconst_m1
      52: if_icmpne     59
      55: invokestatic  #380                // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
      58: athrow
      59: aload_0
      60: dup
      61: getfield      #64                 // Field totalBytesRetired:I
      64: iload         5
      66: iadd
      67: putfield      #64                 // Field totalBytesRetired:I
      70: iload         4
      72: iload         5
      74: iadd
      75: istore        4
      77: goto          25
      80: iload_1
      81: aload_3
      82: arraylength
      83: isub
      84: istore_1
      85: aload_2
      86: aload_3
      87: invokeinterface #511,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      92: pop
      93: goto          8
      96: aload_2
      97: areturn

  private com.google.protobuf.ByteString readBytesSlowPath(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #465                // Method readRawBytesSlowPathOneChunk:(I)[B
       5: astore_2
       6: aload_2
       7: ifnull        15
      10: aload_2
      11: invokestatic  #514                // Method com/google/protobuf/ByteString.copyFrom:([B)Lcom/google/protobuf/ByteString;
      14: areturn
      15: aload_0
      16: getfield      #62                 // Field pos:I
      19: istore_3
      20: aload_0
      21: getfield      #60                 // Field bufferSize:I
      24: aload_0
      25: getfield      #62                 // Field pos:I
      28: isub
      29: istore        4
      31: aload_0
      32: dup
      33: getfield      #64                 // Field totalBytesRetired:I
      36: aload_0
      37: getfield      #60                 // Field bufferSize:I
      40: iadd
      41: putfield      #64                 // Field totalBytesRetired:I
      44: aload_0
      45: iconst_0
      46: putfield      #62                 // Field pos:I
      49: aload_0
      50: iconst_0
      51: putfield      #60                 // Field bufferSize:I
      54: iload_1
      55: iload         4
      57: isub
      58: istore        5
      60: aload_0
      61: iload         5
      63: invokespecial #473                // Method readRawBytesSlowPathRemainingChunks:(I)Ljava/util/List;
      66: astore        6
      68: iload_1
      69: newarray       byte
      71: astore        7
      73: aload_0
      74: getfield      #58                 // Field buffer:[B
      77: iload_3
      78: aload         7
      80: iconst_0
      81: iload         4
      83: invokestatic  #432                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      86: iload         4
      88: istore        8
      90: aload         6
      92: invokeinterface #479,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      97: astore        9
      99: aload         9
     101: invokeinterface #484,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     106: ifeq          145
     109: aload         9
     111: invokeinterface #487,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     116: checkcast     #222                // class "[B"
     119: astore        10
     121: aload         10
     123: iconst_0
     124: aload         7
     126: iload         8
     128: aload         10
     130: arraylength
     131: invokestatic  #432                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     134: iload         8
     136: aload         10
     138: arraylength
     139: iadd
     140: istore        8
     142: goto          99
     145: aload         7
     147: invokestatic  #516                // Method com/google/protobuf/ByteString.wrap:([B)Lcom/google/protobuf/ByteString;
     150: areturn

  public void skipRawBytes(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #60                 // Field bufferSize:I
       5: aload_0
       6: getfield      #62                 // Field pos:I
       9: isub
      10: if_icmpgt     30
      13: iload_1
      14: iflt          30
      17: aload_0
      18: dup
      19: getfield      #62                 // Field pos:I
      22: iload_1
      23: iadd
      24: putfield      #62                 // Field pos:I
      27: goto          35
      30: aload_0
      31: iload_1
      32: invokespecial #519                // Method skipRawBytesSlowPath:(I)V
      35: return

  private void skipRawBytesSlowPath(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifge          8
       4: invokestatic  #377                // Method com/google/protobuf/InvalidProtocolBufferException.negativeSize:()Lcom/google/protobuf/InvalidProtocolBufferException;
       7: athrow
       8: aload_0
       9: getfield      #64                 // Field totalBytesRetired:I
      12: aload_0
      13: getfield      #62                 // Field pos:I
      16: iadd
      17: iload_1
      18: iadd
      19: aload_0
      20: getfield      #45                 // Field currentLimit:I
      23: if_icmple     48
      26: aload_0
      27: aload_0
      28: getfield      #45                 // Field currentLimit:I
      31: aload_0
      32: getfield      #64                 // Field totalBytesRetired:I
      35: isub
      36: aload_0
      37: getfield      #62                 // Field pos:I
      40: isub
      41: invokevirtual #108                // Method skipRawBytes:(I)V
      44: invokestatic  #380                // Method com/google/protobuf/InvalidProtocolBufferException.truncatedMessage:()Lcom/google/protobuf/InvalidProtocolBufferException;
      47: athrow
      48: iconst_0
      49: istore_2
      50: aload_0
      51: getfield      #47                 // Field refillCallback:Lcom/google/protobuf/CodedInputStream$StreamDecoder$RefillCallback;
      54: ifnonnull     244
      57: aload_0
      58: dup
      59: getfield      #64                 // Field totalBytesRetired:I
      62: aload_0
      63: getfield      #62                 // Field pos:I
      66: iadd
      67: putfield      #64                 // Field totalBytesRetired:I
      70: aload_0
      71: getfield      #60                 // Field bufferSize:I
      74: aload_0
      75: getfield      #62                 // Field pos:I
      78: isub
      79: istore_2
      80: aload_0
      81: iconst_0
      82: putfield      #60                 // Field bufferSize:I
      85: aload_0
      86: iconst_0
      87: putfield      #62                 // Field pos:I
      90: iload_2
      91: iload_1
      92: if_icmpge     208
      95: iload_1
      96: iload_2
      97: isub
      98: istore_3
      99: aload_0
     100: getfield      #56                 // Field input:Ljava/io/InputStream;
     103: iload_3
     104: i2l
     105: invokevirtual #522                // Method java/io/InputStream.skip:(J)J
     108: lstore        4
     110: lload         4
     112: lconst_0
     113: lcmp
     114: iflt          125
     117: lload         4
     119: iload_3
     120: i2l
     121: lcmp
     122: ifle          189
     125: new           #402                // class java/lang/IllegalStateException
     128: dup
     129: aload_0
     130: getfield      #56                 // Field input:Ljava/io/InputStream;
     133: invokevirtual #449                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     136: invokestatic  #453                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     139: astore        6
     141: bipush        92
     143: aload         6
     145: invokestatic  #453                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     148: invokevirtual #455                // Method java/lang/String.length:()I
     151: iadd
     152: new           #404                // class java/lang/StringBuilder
     155: dup_x1
     156: swap
     157: invokespecial #406                // Method java/lang/StringBuilder."<init>":(I)V
     160: aload         6
     162: invokevirtual #412                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: ldc_w         #524                // String #skip returned invalid result:
     168: invokevirtual #412                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     171: lload         4
     173: invokevirtual #527                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     176: ldc_w         #459                // String \nThe InputStream implementation is buggy.
     179: invokevirtual #412                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: invokevirtual #420                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     185: invokespecial #423                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     188: athrow
     189: lload         4
     191: lconst_0
     192: lcmp
     193: ifne          199
     196: goto          208
     199: iload_2
     200: lload         4
     202: l2i
     203: iadd
     204: istore_2
     205: goto          90
     208: aload_0
     209: dup
     210: getfield      #64                 // Field totalBytesRetired:I
     213: iload_2
     214: iadd
     215: putfield      #64                 // Field totalBytesRetired:I
     218: aload_0
     219: invokespecial #383                // Method recomputeBufferSizeAfterLimit:()V
     222: goto          244
     225: astore        7
     227: aload_0
     228: dup
     229: getfield      #64                 // Field totalBytesRetired:I
     232: iload_2
     233: iadd
     234: putfield      #64                 // Field totalBytesRetired:I
     237: aload_0
     238: invokespecial #383                // Method recomputeBufferSizeAfterLimit:()V
     241: aload         7
     243: athrow
     244: iload_2
     245: iload_1
     246: if_icmpge     312
     249: aload_0
     250: getfield      #60                 // Field bufferSize:I
     253: aload_0
     254: getfield      #62                 // Field pos:I
     257: isub
     258: istore_3
     259: aload_0
     260: aload_0
     261: getfield      #60                 // Field bufferSize:I
     264: putfield      #62                 // Field pos:I
     267: aload_0
     268: iconst_1
     269: invokespecial #210                // Method refillBuffer:(I)V
     272: iload_1
     273: iload_3
     274: isub
     275: aload_0
     276: getfield      #60                 // Field bufferSize:I
     279: if_icmple     305
     282: iload_3
     283: aload_0
     284: getfield      #60                 // Field bufferSize:I
     287: iadd
     288: istore_3
     289: aload_0
     290: aload_0
     291: getfield      #60                 // Field bufferSize:I
     294: putfield      #62                 // Field pos:I
     297: aload_0
     298: iconst_1
     299: invokespecial #210                // Method refillBuffer:(I)V
     302: goto          272
     305: aload_0
     306: iload_1
     307: iload_3
     308: isub
     309: putfield      #62                 // Field pos:I
     312: return
    Exception table:
       from    to  target type
          90   208   225   any
         225   227   225   any

  com.google.protobuf.CodedInputStream$StreamDecoder(java.io.InputStream, int, com.google.protobuf.CodedInputStream$1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #535                // Method "<init>":(Ljava/io/InputStream;I)V
       6: return

  static int access$500(com.google.protobuf.CodedInputStream$StreamDecoder);
    Code:
       0: aload_0
       1: getfield      #62                 // Field pos:I
       4: ireturn

  static byte[] access$600(com.google.protobuf.CodedInputStream$StreamDecoder);
    Code:
       0: aload_0
       1: getfield      #58                 // Field buffer:[B
       4: areturn
}
