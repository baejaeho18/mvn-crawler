Compiled from "FileEqualsFileFilter.java"
public class org.sonarsource.sonarlint.shaded.org.apache.commons.io.filefilter.FileEqualsFileFilter extends org.sonarsource.sonarlint.shaded.org.apache.commons.io.filefilter.AbstractFileFilter {
  private final java.io.File file;

  private final java.nio.file.Path path;

  public org.sonarsource.sonarlint.shaded.org.apache.commons.io.filefilter.FileEqualsFileFilter(java.io.File);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/filefilter/AbstractFileFilter."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #15                 // String file
       8: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #23                 // class java/io/File
      14: putfield      #25                 // Field file:Ljava/io/File;
      17: aload_0
      18: aload_1
      19: invokevirtual #29                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      22: putfield      #31                 // Field path:Ljava/nio/file/Path;
      25: return

  public boolean accept(java.io.File);
    Code:
       0: aload_0
       1: getfield      #25                 // Field file:Ljava/io/File;
       4: aload_1
       5: invokestatic  #39                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ireturn

  public java.nio.file.FileVisitResult accept(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes);
    Code:
       0: aload_0
       1: getfield      #31                 // Field path:Ljava/nio/file/Path;
       4: aload_1
       5: invokestatic  #39                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: aload_1
       9: invokestatic  #44                 // Method toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;
      12: areturn
}
