Compiled from "JsonWriter.java"
public class org.sonarsource.sonarlint.shaded.com.google.gson.stream.JsonWriter implements java.io.Closeable,java.io.Flushable {
  private static final java.lang.String[] REPLACEMENT_CHARS;

  private static final java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS;

  private final java.io.Writer out;

  private int[] stack;

  private int stackSize;

  private java.lang.String indent;

  private java.lang.String separator;

  private boolean lenient;

  private boolean htmlSafe;

  private java.lang.String deferredName;

  private boolean serializeNulls;

  public org.sonarsource.sonarlint.shaded.com.google.gson.stream.JsonWriter(java.io.Writer);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        32
       7: newarray       int
       9: putfield      #33                 // Field stack:[I
      12: aload_0
      13: iconst_0
      14: putfield      #35                 // Field stackSize:I
      17: aload_0
      18: bipush        6
      20: invokespecial #39                 // Method push:(I)V
      23: aload_0
      24: ldc           #41                 // String :
      26: putfield      #43                 // Field separator:Ljava/lang/String;
      29: aload_0
      30: iconst_1
      31: putfield      #45                 // Field serializeNulls:Z
      34: aload_1
      35: ifnonnull     48
      38: new           #47                 // class java/lang/NullPointerException
      41: dup
      42: ldc           #49                 // String out == null
      44: invokespecial #52                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: aload_1
      50: putfield      #56                 // Field out:Ljava/io/Writer;
      53: return

  public final void setIndent(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #65                 // Method java/lang/String.length:()I
       4: ifne          21
       7: aload_0
       8: aconst_null
       9: putfield      #67                 // Field indent:Ljava/lang/String;
      12: aload_0
      13: ldc           #41                 // String :
      15: putfield      #43                 // Field separator:Ljava/lang/String;
      18: goto          32
      21: aload_0
      22: aload_1
      23: putfield      #67                 // Field indent:Ljava/lang/String;
      26: aload_0
      27: ldc           #69                 // String :
      29: putfield      #43                 // Field separator:Ljava/lang/String;
      32: return

  public final void setLenient(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #73                 // Field lenient:Z
       5: return

  public boolean isLenient();
    Code:
       0: aload_0
       1: getfield      #73                 // Field lenient:Z
       4: ireturn

  public final void setHtmlSafe(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #78                 // Field htmlSafe:Z
       5: return

  public final boolean isHtmlSafe();
    Code:
       0: aload_0
       1: getfield      #78                 // Field htmlSafe:Z
       4: ireturn

  public final void setSerializeNulls(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #45                 // Field serializeNulls:Z
       5: return

  public final boolean getSerializeNulls();
    Code:
       0: aload_0
       1: getfield      #45                 // Field serializeNulls:Z
       4: ireturn

  public org.sonarsource.sonarlint.shaded.com.google.gson.stream.JsonWriter beginArray() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #88                 // Method writeDeferredName:()V
       4: aload_0
       5: iconst_1
       6: bipush        91
       8: invokespecial #92                 // Method open:(IC)Lorg/sonarsource/sonarlint/shaded/com/google/gson/stream/JsonWriter;
      11: areturn

  public org.sonarsource.sonarlint.shaded.com.google.gson.stream.JsonWriter endArray() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: iconst_2
       3: bipush        93
       5: invokespecial #97                 // Method close:(IIC)Lorg/sonarsource/sonarlint/shaded/com/google/gson/stream/JsonWriter;
       8: areturn

  public org.sonarsource.sonarlint.shaded.com.google.gson.stream.JsonWriter beginObject() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #88                 // Method writeDeferredName:()V
       4: aload_0
       5: iconst_3
       6: bipush        123
       8: invokespecial #92                 // Method open:(IC)Lorg/sonarsource/sonarlint/shaded/com/google/gson/stream/JsonWriter;
      11: areturn

  public org.sonarsource.sonarlint.shaded.com.google.gson.stream.JsonWriter endObject() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_3
       2: iconst_5
       3: bipush        125
       5: invokespecial #97                 // Method close:(IIC)Lorg/sonarsource/sonarlint/shaded/com/google/gson/stream/JsonWriter;
       8: areturn

  private org.sonarsource.sonarlint.shaded.com.google.gson.stream.JsonWriter open(int, char) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #102                // Method beforeValue:()V
       4: aload_0
       5: iload_1
       6: invokespecial #39                 // Method push:(I)V
       9: aload_0
      10: getfield      #56                 // Field out:Ljava/io/Writer;
      13: iload_2
      14: invokevirtual #105                // Method java/io/Writer.write:(I)V
      17: aload_0
      18: areturn

  private org.sonarsource.sonarlint.shaded.com.google.gson.stream.JsonWriter close(int, int, char) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #111                // Method peek:()I
       4: istore        4
       6: iload         4
       8: iload_2
       9: if_icmpeq     28
      12: iload         4
      14: iload_1
      15: if_icmpeq     28
      18: new           #113                // class java/lang/IllegalStateException
      21: dup
      22: ldc           #115                // String Nesting problem.
      24: invokespecial #116                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: getfield      #118                // Field deferredName:Ljava/lang/String;
      32: ifnull        65
      35: new           #113                // class java/lang/IllegalStateException
      38: dup
      39: new           #120                // class java/lang/StringBuilder
      42: dup
      43: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #123                // String Dangling name:
      48: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_0
      52: getfield      #118                // Field deferredName:Ljava/lang/String;
      55: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #131                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokespecial #116                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: aload_0
      66: dup
      67: getfield      #35                 // Field stackSize:I
      70: iconst_1
      71: isub
      72: putfield      #35                 // Field stackSize:I
      75: iload         4
      77: iload_2
      78: if_icmpne     85
      81: aload_0
      82: invokespecial #134                // Method newline:()V
      85: aload_0
      86: getfield      #56                 // Field out:Ljava/io/Writer;
      89: iload_3
      90: invokevirtual #105                // Method java/io/Writer.write:(I)V
      93: aload_0
      94: areturn

  private void push(int);
    Code:
       0: aload_0
       1: getfield      #35                 // Field stackSize:I
       4: aload_0
       5: getfield      #33                 // Field stack:[I
       8: arraylength
       9: if_icmpne     29
      12: aload_0
      13: aload_0
      14: getfield      #33                 // Field stack:[I
      17: aload_0
      18: getfield      #35                 // Field stackSize:I
      21: iconst_2
      22: imul
      23: invokestatic  #143                // Method java/util/Arrays.copyOf:([II)[I
      26: putfield      #33                 // Field stack:[I
      29: aload_0
      30: getfield      #33                 // Field stack:[I
      33: aload_0
      34: dup
      35: getfield      #35                 // Field stackSize:I
      38: dup_x1
      39: iconst_1
      40: iadd
      41: putfield      #35                 // Field stackSize:I
      44: iload_1
      45: iastore
      46: return

  private int peek();
    Code:
       0: aload_0
       1: getfield      #35                 // Field stackSize:I
       4: ifne          17
       7: new           #113                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #146                // String JsonWriter is closed.
      13: invokespecial #116                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #33                 // Field stack:[I
      21: aload_0
      22: getfield      #35                 // Field stackSize:I
      25: iconst_1
      26: isub
      27: iaload
      28: ireturn

  private void replaceTop(int);
    Code:
       0: aload_0
       1: getfield      #33                 // Field stack:[I
       4: aload_0
       5: getfield      #35                 // Field stackSize:I
       8: iconst_1
       9: isub
      10: iload_1
      11: iastore
      12: return

  public org.sonarsource.sonarlint.shaded.com.google.gson.stream.JsonWriter name(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #47                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #152                // String name == null
      10: invokespecial #52                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #118                // Field deferredName:Ljava/lang/String;
      18: ifnull        29
      21: new           #113                // class java/lang/IllegalStateException
      24: dup
      25: invokespecial #153                // Method java/lang/IllegalStateException."<init>":()V
      28: athrow
      29: aload_0
      30: getfield      #35                 // Field stackSize:I
      33: ifne          46
      36: new           #113                // class java/lang/IllegalStateException
      39: dup
      40: ldc           #146                // String JsonWriter is closed.
      42: invokespecial #116                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: aload_1
      48: putfield      #118                // Field deferredName:Ljava/lang/String;
      51: aload_0
      52: areturn

  private void writeDeferredName() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #118                // Field deferredName:Ljava/lang/String;
       4: ifnull        24
       7: aload_0
       8: invokespecial #156                // Method beforeName:()V
      11: aload_0
      12: aload_0
      13: getfield      #118                // Field deferredName:Ljava/lang/String;
      16: invokespecial #159                // Method string:(Ljava/lang/String;)V
      19: aload_0
      20: aconst_null
      21: putfield      #118                // Field deferredName:Ljava/lang/String;
      24: return

  public org.sonarsource.sonarlint.shaded.com.google.gson.stream.JsonWriter value(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_0
       5: invokevirtual #163                // Method nullValue:()Lorg/sonarsource/sonarlint/shaded/com/google/gson/stream/JsonWriter;
       8: areturn
       9: aload_0
      10: invokespecial #88                 // Method writeDeferredName:()V
      13: aload_0
      14: invokespecial #102                // Method beforeValue:()V
      17: aload_0
      18: aload_1
      19: invokespecial #159                // Method string:(Ljava/lang/String;)V
      22: aload_0
      23: areturn

  public org.sonarsource.sonarlint.shaded.com.google.gson.stream.JsonWriter jsonValue(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_0
       5: invokevirtual #163                // Method nullValue:()Lorg/sonarsource/sonarlint/shaded/com/google/gson/stream/JsonWriter;
       8: areturn
       9: aload_0
      10: invokespecial #88                 // Method writeDeferredName:()V
      13: aload_0
      14: invokespecial #102                // Method beforeValue:()V
      17: aload_0
      18: getfield      #56                 // Field out:Ljava/io/Writer;
      21: aload_1
      22: invokevirtual #167                // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      25: pop
      26: aload_0
      27: areturn

  public org.sonarsource.sonarlint.shaded.com.google.gson.stream.JsonWriter nullValue() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #118                // Field deferredName:Ljava/lang/String;
       4: ifnull        28
       7: aload_0
       8: getfield      #45                 // Field serializeNulls:Z
      11: ifeq          21
      14: aload_0
      15: invokespecial #88                 // Method writeDeferredName:()V
      18: goto          28
      21: aload_0
      22: aconst_null
      23: putfield      #118                // Field deferredName:Ljava/lang/String;
      26: aload_0
      27: areturn
      28: aload_0
      29: invokespecial #102                // Method beforeValue:()V
      32: aload_0
      33: getfield      #56                 // Field out:Ljava/io/Writer;
      36: ldc           #169                // String null
      38: invokevirtual #171                // Method java/io/Writer.write:(Ljava/lang/String;)V
      41: aload_0
      42: areturn

  public org.sonarsource.sonarlint.shaded.com.google.gson.stream.JsonWriter value(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #88                 // Method writeDeferredName:()V
       4: aload_0
       5: invokespecial #102                // Method beforeValue:()V
       8: aload_0
       9: getfield      #56                 // Field out:Ljava/io/Writer;
      12: iload_1
      13: ifeq          21
      16: ldc           #174                // String true
      18: goto          23
      21: ldc           #176                // String false
      23: invokevirtual #171                // Method java/io/Writer.write:(Ljava/lang/String;)V
      26: aload_0
      27: areturn

  public org.sonarsource.sonarlint.shaded.com.google.gson.stream.JsonWriter value(java.lang.Boolean) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_0
       5: invokevirtual #163                // Method nullValue:()Lorg/sonarsource/sonarlint/shaded/com/google/gson/stream/JsonWriter;
       8: areturn
       9: aload_0
      10: invokespecial #88                 // Method writeDeferredName:()V
      13: aload_0
      14: invokespecial #102                // Method beforeValue:()V
      17: aload_0
      18: getfield      #56                 // Field out:Ljava/io/Writer;
      21: aload_1
      22: invokevirtual #182                // Method java/lang/Boolean.booleanValue:()Z
      25: ifeq          33
      28: ldc           #174                // String true
      30: goto          35
      33: ldc           #176                // String false
      35: invokevirtual #171                // Method java/io/Writer.write:(Ljava/lang/String;)V
      38: aload_0
      39: areturn

  public org.sonarsource.sonarlint.shaded.com.google.gson.stream.JsonWriter value(double) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #88                 // Method writeDeferredName:()V
       4: aload_0
       5: getfield      #73                 // Field lenient:Z
       8: ifne          52
      11: dload_1
      12: invokestatic  #190                // Method java/lang/Double.isNaN:(D)Z
      15: ifne          25
      18: dload_1
      19: invokestatic  #193                // Method java/lang/Double.isInfinite:(D)Z
      22: ifeq          52
      25: new           #195                // class java/lang/IllegalArgumentException
      28: dup
      29: new           #120                // class java/lang/StringBuilder
      32: dup
      33: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #197                // String Numeric values must be finite, but was
      38: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: dload_1
      42: invokevirtual #200                // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      45: invokevirtual #131                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #201                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_0
      53: invokespecial #102                // Method beforeValue:()V
      56: aload_0
      57: getfield      #56                 // Field out:Ljava/io/Writer;
      60: dload_1
      61: invokestatic  #204                // Method java/lang/Double.toString:(D)Ljava/lang/String;
      64: invokevirtual #167                // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      67: pop
      68: aload_0
      69: areturn

  public org.sonarsource.sonarlint.shaded.com.google.gson.stream.JsonWriter value(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #88                 // Method writeDeferredName:()V
       4: aload_0
       5: invokespecial #102                // Method beforeValue:()V
       8: aload_0
       9: getfield      #56                 // Field out:Ljava/io/Writer;
      12: lload_1
      13: invokestatic  #211                // Method java/lang/Long.toString:(J)Ljava/lang/String;
      16: invokevirtual #171                // Method java/io/Writer.write:(Ljava/lang/String;)V
      19: aload_0
      20: areturn

  public org.sonarsource.sonarlint.shaded.com.google.gson.stream.JsonWriter value(java.lang.Number) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_0
       5: invokevirtual #163                // Method nullValue:()Lorg/sonarsource/sonarlint/shaded/com/google/gson/stream/JsonWriter;
       8: areturn
       9: aload_0
      10: invokespecial #88                 // Method writeDeferredName:()V
      13: aload_1
      14: invokevirtual #214                // Method java/lang/Object.toString:()Ljava/lang/String;
      17: astore_2
      18: aload_0
      19: getfield      #73                 // Field lenient:Z
      22: ifne          79
      25: aload_2
      26: ldc           #216                // String -Infinity
      28: invokevirtual #220                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      31: ifne          52
      34: aload_2
      35: ldc           #222                // String Infinity
      37: invokevirtual #220                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ifne          52
      43: aload_2
      44: ldc           #224                // String NaN
      46: invokevirtual #220                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      49: ifeq          79
      52: new           #195                // class java/lang/IllegalArgumentException
      55: dup
      56: new           #120                // class java/lang/StringBuilder
      59: dup
      60: invokespecial #121                // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #197                // String Numeric values must be finite, but was
      65: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_1
      69: invokevirtual #227                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: invokevirtual #131                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokespecial #201                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: aload_0
      80: invokespecial #102                // Method beforeValue:()V
      83: aload_0
      84: getfield      #56                 // Field out:Ljava/io/Writer;
      87: aload_2
      88: invokevirtual #167                // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      91: pop
      92: aload_0
      93: areturn

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field stackSize:I
       4: ifne          17
       7: new           #113                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #146                // String JsonWriter is closed.
      13: invokespecial #116                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #56                 // Field out:Ljava/io/Writer;
      21: invokevirtual #231                // Method java/io/Writer.flush:()V
      24: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #56                 // Field out:Ljava/io/Writer;
       4: invokevirtual #233                // Method java/io/Writer.close:()V
       7: aload_0
       8: getfield      #35                 // Field stackSize:I
      11: istore_1
      12: iload_1
      13: iconst_1
      14: if_icmpgt     35
      17: iload_1
      18: iconst_1
      19: if_icmpne     45
      22: aload_0
      23: getfield      #33                 // Field stack:[I
      26: iload_1
      27: iconst_1
      28: isub
      29: iaload
      30: bipush        7
      32: if_icmpeq     45
      35: new           #85                 // class java/io/IOException
      38: dup
      39: ldc           #235                // String Incomplete document
      41: invokespecial #236                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: iconst_0
      47: putfield      #35                 // Field stackSize:I
      50: return

  private void string(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #78                 // Field htmlSafe:Z
       4: ifeq          13
       7: getstatic     #239                // Field HTML_SAFE_REPLACEMENT_CHARS:[Ljava/lang/String;
      10: goto          16
      13: getstatic     #241                // Field REPLACEMENT_CHARS:[Ljava/lang/String;
      16: astore_2
      17: aload_0
      18: getfield      #56                 // Field out:Ljava/io/Writer;
      21: bipush        34
      23: invokevirtual #105                // Method java/io/Writer.write:(I)V
      26: iconst_0
      27: istore_3
      28: aload_1
      29: invokevirtual #65                 // Method java/lang/String.length:()I
      32: istore        4
      34: iconst_0
      35: istore        5
      37: iload         5
      39: iload         4
      41: if_icmpge     140
      44: aload_1
      45: iload         5
      47: invokevirtual #246                // Method java/lang/String.charAt:(I)C
      50: istore        6
      52: iload         6
      54: sipush        128
      57: if_icmpge     74
      60: aload_2
      61: iload         6
      63: aaload
      64: astore        7
      66: aload         7
      68: ifnonnull     101
      71: goto          134
      74: iload         6
      76: sipush        8232
      79: if_icmpne     89
      82: ldc           #248                // String \\u2028
      84: astore        7
      86: goto          101
      89: iload         6
      91: sipush        8233
      94: if_icmpne     134
      97: ldc           #250                // String \\u2029
      99: astore        7
     101: iload_3
     102: iload         5
     104: if_icmpge     120
     107: aload_0
     108: getfield      #56                 // Field out:Ljava/io/Writer;
     111: aload_1
     112: iload_3
     113: iload         5
     115: iload_3
     116: isub
     117: invokevirtual #253                // Method java/io/Writer.write:(Ljava/lang/String;II)V
     120: aload_0
     121: getfield      #56                 // Field out:Ljava/io/Writer;
     124: aload         7
     126: invokevirtual #171                // Method java/io/Writer.write:(Ljava/lang/String;)V
     129: iload         5
     131: iconst_1
     132: iadd
     133: istore_3
     134: iinc          5, 1
     137: goto          37
     140: iload_3
     141: iload         4
     143: if_icmpge     159
     146: aload_0
     147: getfield      #56                 // Field out:Ljava/io/Writer;
     150: aload_1
     151: iload_3
     152: iload         4
     154: iload_3
     155: isub
     156: invokevirtual #253                // Method java/io/Writer.write:(Ljava/lang/String;II)V
     159: aload_0
     160: getfield      #56                 // Field out:Ljava/io/Writer;
     163: bipush        34
     165: invokevirtual #105                // Method java/io/Writer.write:(I)V
     168: return

  private void newline() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #67                 // Field indent:Ljava/lang/String;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #56                 // Field out:Ljava/io/Writer;
      12: bipush        10
      14: invokevirtual #105                // Method java/io/Writer.write:(I)V
      17: iconst_1
      18: istore_1
      19: aload_0
      20: getfield      #35                 // Field stackSize:I
      23: istore_2
      24: iload_1
      25: iload_2
      26: if_icmpge     46
      29: aload_0
      30: getfield      #56                 // Field out:Ljava/io/Writer;
      33: aload_0
      34: getfield      #67                 // Field indent:Ljava/lang/String;
      37: invokevirtual #171                // Method java/io/Writer.write:(Ljava/lang/String;)V
      40: iinc          1, 1
      43: goto          24
      46: return

  private void beforeName() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #111                // Method peek:()I
       4: istore_1
       5: iload_1
       6: iconst_5
       7: if_icmpne     22
      10: aload_0
      11: getfield      #56                 // Field out:Ljava/io/Writer;
      14: bipush        44
      16: invokevirtual #105                // Method java/io/Writer.write:(I)V
      19: goto          37
      22: iload_1
      23: iconst_3
      24: if_icmpeq     37
      27: new           #113                // class java/lang/IllegalStateException
      30: dup
      31: ldc           #115                // String Nesting problem.
      33: invokespecial #116                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: invokespecial #134                // Method newline:()V
      41: aload_0
      42: iconst_4
      43: invokespecial #260                // Method replaceTop:(I)V
      46: return

  private void beforeValue() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #111                // Method peek:()I
       4: tableswitch   { // 1 to 7
                     1: 75
                     2: 87
                     3: 124
                     4: 104
                     5: 124
                     6: 66
                     7: 48
               default: 124
          }
      48: aload_0
      49: getfield      #73                 // Field lenient:Z
      52: ifne          66
      55: new           #113                // class java/lang/IllegalStateException
      58: dup
      59: ldc_w         #262                // String JSON must have only one top-level value.
      62: invokespecial #116                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload_0
      67: bipush        7
      69: invokespecial #260                // Method replaceTop:(I)V
      72: goto          134
      75: aload_0
      76: iconst_2
      77: invokespecial #260                // Method replaceTop:(I)V
      80: aload_0
      81: invokespecial #134                // Method newline:()V
      84: goto          134
      87: aload_0
      88: getfield      #56                 // Field out:Ljava/io/Writer;
      91: bipush        44
      93: invokevirtual #265                // Method java/io/Writer.append:(C)Ljava/io/Writer;
      96: pop
      97: aload_0
      98: invokespecial #134                // Method newline:()V
     101: goto          134
     104: aload_0
     105: getfield      #56                 // Field out:Ljava/io/Writer;
     108: aload_0
     109: getfield      #43                 // Field separator:Ljava/lang/String;
     112: invokevirtual #167                // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
     115: pop
     116: aload_0
     117: iconst_5
     118: invokespecial #260                // Method replaceTop:(I)V
     121: goto          134
     124: new           #113                // class java/lang/IllegalStateException
     127: dup
     128: ldc           #115                // String Nesting problem.
     130: invokespecial #116                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     133: athrow
     134: return

  static {};
    Code:
       0: sipush        128
       3: anewarray     #61                 // class java/lang/String
       6: putstatic     #241                // Field REPLACEMENT_CHARS:[Ljava/lang/String;
       9: iconst_0
      10: istore_0
      11: iload_0
      12: bipush        31
      14: if_icmpgt     45
      17: getstatic     #241                // Field REPLACEMENT_CHARS:[Ljava/lang/String;
      20: iload_0
      21: ldc_w         #268                // String \\u%04x
      24: iconst_1
      25: anewarray     #4                  // class java/lang/Object
      28: dup
      29: iconst_0
      30: iload_0
      31: invokestatic  #274                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: aastore
      35: invokestatic  #278                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      38: aastore
      39: iinc          0, 1
      42: goto          11
      45: getstatic     #241                // Field REPLACEMENT_CHARS:[Ljava/lang/String;
      48: bipush        34
      50: ldc_w         #280                // String \\\"
      53: aastore
      54: getstatic     #241                // Field REPLACEMENT_CHARS:[Ljava/lang/String;
      57: bipush        92
      59: ldc_w         #282                // String \\\\
      62: aastore
      63: getstatic     #241                // Field REPLACEMENT_CHARS:[Ljava/lang/String;
      66: bipush        9
      68: ldc_w         #284                // String \\t
      71: aastore
      72: getstatic     #241                // Field REPLACEMENT_CHARS:[Ljava/lang/String;
      75: bipush        8
      77: ldc_w         #286                // String \\b
      80: aastore
      81: getstatic     #241                // Field REPLACEMENT_CHARS:[Ljava/lang/String;
      84: bipush        10
      86: ldc_w         #288                // String \\n
      89: aastore
      90: getstatic     #241                // Field REPLACEMENT_CHARS:[Ljava/lang/String;
      93: bipush        13
      95: ldc_w         #290                // String \\r
      98: aastore
      99: getstatic     #241                // Field REPLACEMENT_CHARS:[Ljava/lang/String;
     102: bipush        12
     104: ldc_w         #292                // String \\f
     107: aastore
     108: getstatic     #241                // Field REPLACEMENT_CHARS:[Ljava/lang/String;
     111: invokevirtual #296                // Method "[Ljava/lang/String;".clone:()Ljava/lang/Object;
     114: checkcast     #242                // class "[Ljava/lang/String;"
     117: putstatic     #239                // Field HTML_SAFE_REPLACEMENT_CHARS:[Ljava/lang/String;
     120: getstatic     #239                // Field HTML_SAFE_REPLACEMENT_CHARS:[Ljava/lang/String;
     123: bipush        60
     125: ldc_w         #298                // String \\u003c
     128: aastore
     129: getstatic     #239                // Field HTML_SAFE_REPLACEMENT_CHARS:[Ljava/lang/String;
     132: bipush        62
     134: ldc_w         #300                // String \\u003e
     137: aastore
     138: getstatic     #239                // Field HTML_SAFE_REPLACEMENT_CHARS:[Ljava/lang/String;
     141: bipush        38
     143: ldc_w         #302                // String \\u0026
     146: aastore
     147: getstatic     #239                // Field HTML_SAFE_REPLACEMENT_CHARS:[Ljava/lang/String;
     150: bipush        61
     152: ldc_w         #304                // String \\u003d
     155: aastore
     156: getstatic     #239                // Field HTML_SAFE_REPLACEMENT_CHARS:[Ljava/lang/String;
     159: bipush        39
     161: ldc_w         #306                // String \\u0027
     164: aastore
     165: return
}
