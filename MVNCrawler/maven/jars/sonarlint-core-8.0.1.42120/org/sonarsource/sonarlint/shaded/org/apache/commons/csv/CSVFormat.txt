Compiled from "CSVFormat.java"
public final class org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat implements java.io.Serializable {
  public static final org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat DEFAULT;

  public static final org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat EXCEL;

  public static final org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat INFORMIX_UNLOAD;

  public static final org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat INFORMIX_UNLOAD_CSV;

  public static final org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat MONGODB_CSV;

  public static final org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat MONGODB_TSV;

  public static final org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat MYSQL;

  public static final org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat ORACLE;

  public static final org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat POSTGRESQL_CSV;

  public static final org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat POSTGRESQL_TEXT;

  public static final org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat RFC4180;

  private static final long serialVersionUID;

  public static final org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat TDF;

  private final boolean allowDuplicateHeaderNames;

  private final boolean allowMissingColumnNames;

  private final boolean autoFlush;

  private final java.lang.Character commentMarker;

  private final java.lang.String delimiter;

  private final java.lang.Character escapeCharacter;

  private final java.lang.String[] header;

  private final java.lang.String[] headerComments;

  private final boolean ignoreEmptyLines;

  private final boolean ignoreHeaderCase;

  private final boolean ignoreSurroundingSpaces;

  private final java.lang.String nullString;

  private final java.lang.Character quoteCharacter;

  private final java.lang.String quotedNullString;

  private final org.sonarsource.sonarlint.shaded.org.apache.commons.csv.QuoteMode quoteMode;

  private final java.lang.String recordSeparator;

  private final boolean skipHeaderRecord;

  private final boolean trailingDelimiter;

  private final boolean trim;

  static <T> T[] clone(T...);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aconst_null
       5: goto          15
       8: aload_0
       9: invokevirtual #65                 // Method "[Ljava/lang/Object;".clone:()Ljava/lang/Object;
      12: checkcast     #62                 // class "[Ljava/lang/Object;"
      15: areturn

  private static boolean contains(java.lang.String, char);
    Code:
       0: aload_0
       1: ldc           #71                 // String source
       3: invokestatic  #77                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: checkcast     #79                 // class java/lang/String
       9: iload_1
      10: invokevirtual #83                 // Method java/lang/String.indexOf:(I)I
      13: iflt          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  private static boolean containsLineBreak(java.lang.String);
    Code:
       0: aload_0
       1: bipush        13
       3: invokestatic  #89                 // Method contains:(Ljava/lang/String;C)Z
       6: ifne          18
       9: aload_0
      10: bipush        10
      12: invokestatic  #89                 // Method contains:(Ljava/lang/String;C)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  private static boolean isLineBreak(char);
    Code:
       0: iload_0
       1: bipush        10
       3: if_icmpeq     12
       6: iload_0
       7: bipush        13
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private static boolean isLineBreak(java.lang.Character);
    Code:
       0: aload_0
       1: ifnull        18
       4: aload_0
       5: invokevirtual #99                 // Method java/lang/Character.charValue:()C
       8: invokestatic  #101                // Method isLineBreak:(C)Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat newFormat(char);
    Code:
       0: new           #2                  // class org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat
       3: dup
       4: iload_0
       5: invokestatic  #107                // Method java/lang/String.valueOf:(C)Ljava/lang/String;
       8: aconst_null
       9: aconst_null
      10: aconst_null
      11: aconst_null
      12: iconst_0
      13: iconst_0
      14: aconst_null
      15: aconst_null
      16: aconst_null
      17: aconst_null
      18: iconst_0
      19: iconst_0
      20: iconst_0
      21: iconst_0
      22: iconst_0
      23: iconst_0
      24: iconst_1
      25: invokespecial #111                // Method "<init>":(Ljava/lang/String;Ljava/lang/Character;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZZ)V
      28: areturn

  static java.lang.String[] toStringArray(java.lang.Object[]);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: arraylength
       8: anewarray     #79                 // class java/lang/String
      11: astore_1
      12: iconst_0
      13: istore_2
      14: iload_2
      15: aload_0
      16: arraylength
      17: if_icmpge     36
      20: aload_1
      21: iload_2
      22: aload_0
      23: iload_2
      24: aaload
      25: aconst_null
      26: invokestatic  #118                // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
      29: aastore
      30: iinc          2, 1
      33: goto          14
      36: aload_1
      37: areturn

  static java.lang.CharSequence trim(java.lang.CharSequence);
    Code:
       0: aload_0
       1: instanceof    #79                 // class java/lang/String
       4: ifeq          15
       7: aload_0
       8: checkcast     #79                 // class java/lang/String
      11: invokevirtual #125                // Method java/lang/String.trim:()Ljava/lang/String;
      14: areturn
      15: aload_0
      16: invokeinterface #131,  1          // InterfaceMethod java/lang/CharSequence.length:()I
      21: istore_1
      22: iload_1
      23: istore_2
      24: iconst_0
      25: istore_3
      26: iload_3
      27: iload_2
      28: if_icmpge     49
      31: aload_0
      32: iload_3
      33: invokeinterface #135,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      38: bipush        32
      40: if_icmpgt     49
      43: iinc          3, 1
      46: goto          26
      49: iload_3
      50: iload_2
      51: if_icmpge     74
      54: aload_0
      55: iload_2
      56: iconst_1
      57: isub
      58: invokeinterface #135,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      63: bipush        32
      65: if_icmpgt     74
      68: iinc          2, -1
      71: goto          49
      74: iload_3
      75: ifgt          83
      78: iload_2
      79: iload_1
      80: if_icmpge     94
      83: aload_0
      84: iload_3
      85: iload_2
      86: invokeinterface #139,  3          // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
      91: goto          95
      94: aload_0
      95: areturn

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat valueOf(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #148                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Predefined.valueOf:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Predefined;
       4: invokevirtual #152                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Predefined.getFormat:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
       7: areturn

  private org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat(org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat$Builder);
    Code:
       0: aload_0
       1: invokespecial #157                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #161                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.access$2200:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;
       9: putfield      #163                // Field delimiter:Ljava/lang/String;
      12: aload_0
      13: aload_1
      14: invokestatic  #167                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.access$2300:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;
      17: putfield      #169                // Field quoteCharacter:Ljava/lang/Character;
      20: aload_0
      21: aload_1
      22: invokestatic  #173                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.access$2400:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
      25: putfield      #175                // Field quoteMode:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
      28: aload_0
      29: aload_1
      30: invokestatic  #178                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.access$2500:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;
      33: putfield      #180                // Field commentMarker:Ljava/lang/Character;
      36: aload_0
      37: aload_1
      38: invokestatic  #183                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.access$2600:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;
      41: putfield      #185                // Field escapeCharacter:Ljava/lang/Character;
      44: aload_0
      45: aload_1
      46: invokestatic  #189                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.access$2700:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;)Z
      49: putfield      #191                // Field ignoreSurroundingSpaces:Z
      52: aload_0
      53: aload_1
      54: invokestatic  #194                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.access$2800:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;)Z
      57: putfield      #196                // Field allowMissingColumnNames:Z
      60: aload_0
      61: aload_1
      62: invokestatic  #199                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.access$2900:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;)Z
      65: putfield      #201                // Field ignoreEmptyLines:Z
      68: aload_0
      69: aload_1
      70: invokestatic  #204                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.access$3000:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;
      73: putfield      #206                // Field recordSeparator:Ljava/lang/String;
      76: aload_0
      77: aload_1
      78: invokestatic  #209                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.access$3100:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;
      81: putfield      #211                // Field nullString:Ljava/lang/String;
      84: aload_0
      85: aload_1
      86: invokestatic  #215                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.access$3200:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;
      89: putfield      #217                // Field headerComments:[Ljava/lang/String;
      92: aload_0
      93: aload_1
      94: invokestatic  #220                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.access$3300:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;
      97: putfield      #222                // Field header:[Ljava/lang/String;
     100: aload_0
     101: aload_1
     102: invokestatic  #225                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.access$3400:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;)Z
     105: putfield      #227                // Field skipHeaderRecord:Z
     108: aload_0
     109: aload_1
     110: invokestatic  #230                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.access$3500:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;)Z
     113: putfield      #232                // Field ignoreHeaderCase:Z
     116: aload_0
     117: aload_1
     118: invokestatic  #235                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.access$3600:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;)Z
     121: putfield      #237                // Field trailingDelimiter:Z
     124: aload_0
     125: aload_1
     126: invokestatic  #240                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.access$3700:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;)Z
     129: putfield      #242                // Field trim:Z
     132: aload_0
     133: aload_1
     134: invokestatic  #245                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.access$3800:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;)Z
     137: putfield      #247                // Field autoFlush:Z
     140: aload_0
     141: aload_1
     142: invokestatic  #250                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.access$3900:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;
     145: putfield      #252                // Field quotedNullString:Ljava/lang/String;
     148: aload_0
     149: aload_1
     150: invokestatic  #255                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.access$4000:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;)Z
     153: putfield      #257                // Field allowDuplicateHeaderNames:Z
     156: aload_0
     157: invokespecial #260                // Method validate:()V
     160: return

  private org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat(java.lang.String, java.lang.Character, org.sonarsource.sonarlint.shaded.org.apache.commons.csv.QuoteMode, java.lang.Character, java.lang.Character, boolean, boolean, java.lang.String, java.lang.String, java.lang.Object[], java.lang.String[], boolean, boolean, boolean, boolean, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #157                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #163                // Field delimiter:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #169                // Field quoteCharacter:Ljava/lang/Character;
      14: aload_0
      15: aload_3
      16: putfield      #175                // Field quoteMode:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
      19: aload_0
      20: aload         4
      22: putfield      #180                // Field commentMarker:Ljava/lang/Character;
      25: aload_0
      26: aload         5
      28: putfield      #185                // Field escapeCharacter:Ljava/lang/Character;
      31: aload_0
      32: iload         6
      34: putfield      #191                // Field ignoreSurroundingSpaces:Z
      37: aload_0
      38: iload         13
      40: putfield      #196                // Field allowMissingColumnNames:Z
      43: aload_0
      44: iload         7
      46: putfield      #201                // Field ignoreEmptyLines:Z
      49: aload_0
      50: aload         8
      52: putfield      #206                // Field recordSeparator:Ljava/lang/String;
      55: aload_0
      56: aload         9
      58: putfield      #211                // Field nullString:Ljava/lang/String;
      61: aload_0
      62: aload         10
      64: invokestatic  #265                // Method toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;
      67: putfield      #217                // Field headerComments:[Ljava/lang/String;
      70: aload_0
      71: aload         11
      73: invokestatic  #267                // Method clone:([Ljava/lang/Object;)[Ljava/lang/Object;
      76: checkcast     #114                // class "[Ljava/lang/String;"
      79: putfield      #222                // Field header:[Ljava/lang/String;
      82: aload_0
      83: iload         12
      85: putfield      #227                // Field skipHeaderRecord:Z
      88: aload_0
      89: iload         14
      91: putfield      #232                // Field ignoreHeaderCase:Z
      94: aload_0
      95: iload         16
      97: putfield      #237                // Field trailingDelimiter:Z
     100: aload_0
     101: iload         15
     103: putfield      #242                // Field trim:Z
     106: aload_0
     107: iload         17
     109: putfield      #247                // Field autoFlush:Z
     112: aload_0
     113: new           #269                // class java/lang/StringBuilder
     116: dup
     117: invokespecial #270                // Method java/lang/StringBuilder."<init>":()V
     120: aload_0
     121: getfield      #169                // Field quoteCharacter:Ljava/lang/Character;
     124: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     127: aload         9
     129: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload_0
     133: getfield      #169                // Field quoteCharacter:Ljava/lang/Character;
     136: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     139: invokevirtual #279                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     142: putfield      #252                // Field quotedNullString:Ljava/lang/String;
     145: aload_0
     146: iload         18
     148: putfield      #257                // Field allowDuplicateHeaderNames:Z
     151: aload_0
     152: invokespecial #260                // Method validate:()V
     155: return

  private void append(char, java.lang.Appendable) throws java.io.IOException;
    Code:
       0: aload_2
       1: iload_1
       2: invokeinterface #290,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
       7: pop
       8: return

  private void append(java.lang.CharSequence, java.lang.Appendable) throws java.io.IOException;
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #296,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
       7: pop
       8: return

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat$Builder builder();
    Code:
       0: aload_0
       1: invokestatic  #302                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.create:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: areturn

  org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat copy();
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #314                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #314                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #2                  // class org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat
      28: astore_2
      29: aload_0
      30: getfield      #257                // Field allowDuplicateHeaderNames:Z
      33: aload_2
      34: getfield      #257                // Field allowDuplicateHeaderNames:Z
      37: if_icmpne     269
      40: aload_0
      41: getfield      #196                // Field allowMissingColumnNames:Z
      44: aload_2
      45: getfield      #196                // Field allowMissingColumnNames:Z
      48: if_icmpne     269
      51: aload_0
      52: getfield      #247                // Field autoFlush:Z
      55: aload_2
      56: getfield      #247                // Field autoFlush:Z
      59: if_icmpne     269
      62: aload_0
      63: getfield      #180                // Field commentMarker:Ljava/lang/Character;
      66: aload_2
      67: getfield      #180                // Field commentMarker:Ljava/lang/Character;
      70: invokestatic  #317                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      73: ifeq          269
      76: aload_0
      77: getfield      #163                // Field delimiter:Ljava/lang/String;
      80: aload_2
      81: getfield      #163                // Field delimiter:Ljava/lang/String;
      84: invokestatic  #317                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      87: ifeq          269
      90: aload_0
      91: getfield      #185                // Field escapeCharacter:Ljava/lang/Character;
      94: aload_2
      95: getfield      #185                // Field escapeCharacter:Ljava/lang/Character;
      98: invokestatic  #317                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     101: ifeq          269
     104: aload_0
     105: getfield      #222                // Field header:[Ljava/lang/String;
     108: aload_2
     109: getfield      #222                // Field header:[Ljava/lang/String;
     112: invokestatic  #322                // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
     115: ifeq          269
     118: aload_0
     119: getfield      #217                // Field headerComments:[Ljava/lang/String;
     122: aload_2
     123: getfield      #217                // Field headerComments:[Ljava/lang/String;
     126: invokestatic  #322                // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
     129: ifeq          269
     132: aload_0
     133: getfield      #201                // Field ignoreEmptyLines:Z
     136: aload_2
     137: getfield      #201                // Field ignoreEmptyLines:Z
     140: if_icmpne     269
     143: aload_0
     144: getfield      #232                // Field ignoreHeaderCase:Z
     147: aload_2
     148: getfield      #232                // Field ignoreHeaderCase:Z
     151: if_icmpne     269
     154: aload_0
     155: getfield      #191                // Field ignoreSurroundingSpaces:Z
     158: aload_2
     159: getfield      #191                // Field ignoreSurroundingSpaces:Z
     162: if_icmpne     269
     165: aload_0
     166: getfield      #211                // Field nullString:Ljava/lang/String;
     169: aload_2
     170: getfield      #211                // Field nullString:Ljava/lang/String;
     173: invokestatic  #317                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     176: ifeq          269
     179: aload_0
     180: getfield      #169                // Field quoteCharacter:Ljava/lang/Character;
     183: aload_2
     184: getfield      #169                // Field quoteCharacter:Ljava/lang/Character;
     187: invokestatic  #317                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     190: ifeq          269
     193: aload_0
     194: getfield      #175                // Field quoteMode:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
     197: aload_2
     198: getfield      #175                // Field quoteMode:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
     201: if_acmpne     269
     204: aload_0
     205: getfield      #252                // Field quotedNullString:Ljava/lang/String;
     208: aload_2
     209: getfield      #252                // Field quotedNullString:Ljava/lang/String;
     212: invokestatic  #317                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     215: ifeq          269
     218: aload_0
     219: getfield      #206                // Field recordSeparator:Ljava/lang/String;
     222: aload_2
     223: getfield      #206                // Field recordSeparator:Ljava/lang/String;
     226: invokestatic  #317                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     229: ifeq          269
     232: aload_0
     233: getfield      #227                // Field skipHeaderRecord:Z
     236: aload_2
     237: getfield      #227                // Field skipHeaderRecord:Z
     240: if_icmpne     269
     243: aload_0
     244: getfield      #237                // Field trailingDelimiter:Z
     247: aload_2
     248: getfield      #237                // Field trailingDelimiter:Z
     251: if_icmpne     269
     254: aload_0
     255: getfield      #242                // Field trim:Z
     258: aload_2
     259: getfield      #242                // Field trim:Z
     262: if_icmpne     269
     265: iconst_1
     266: goto          270
     269: iconst_0
     270: ireturn

  public java.lang.String format(java.lang.Object...);
    Code:
       0: new           #330                // class java/io/StringWriter
       3: dup
       4: invokespecial #331                // Method java/io/StringWriter."<init>":()V
       7: astore_2
       8: new           #333                // class org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVPrinter
      11: dup
      12: aload_2
      13: aload_0
      14: invokespecial #336                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVPrinter."<init>":(Ljava/lang/Appendable;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;)V
      17: astore_3
      18: aconst_null
      19: astore        4
      21: aload_3
      22: aload_1
      23: invokevirtual #340                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVPrinter.printRecord:([Ljava/lang/Object;)V
      26: aload_2
      27: invokevirtual #341                // Method java/io/StringWriter.toString:()Ljava/lang/String;
      30: astore        5
      32: aload_0
      33: getfield      #206                // Field recordSeparator:Ljava/lang/String;
      36: ifnull        55
      39: aload         5
      41: invokevirtual #342                // Method java/lang/String.length:()I
      44: aload_0
      45: getfield      #206                // Field recordSeparator:Ljava/lang/String;
      48: invokevirtual #342                // Method java/lang/String.length:()I
      51: isub
      52: goto          60
      55: aload         5
      57: invokevirtual #342                // Method java/lang/String.length:()I
      60: istore        6
      62: aload         5
      64: iconst_0
      65: iload         6
      67: invokevirtual #346                // Method java/lang/String.substring:(II)Ljava/lang/String;
      70: astore        7
      72: aload_3
      73: ifnull        104
      76: aload         4
      78: ifnull        100
      81: aload_3
      82: invokevirtual #349                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVPrinter.close:()V
      85: goto          104
      88: astore        8
      90: aload         4
      92: aload         8
      94: invokevirtual #353                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      97: goto          104
     100: aload_3
     101: invokevirtual #349                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVPrinter.close:()V
     104: aload         7
     106: areturn
     107: astore        5
     109: aload         5
     111: astore        4
     113: aload         5
     115: athrow
     116: astore        9
     118: aload_3
     119: ifnull        150
     122: aload         4
     124: ifnull        146
     127: aload_3
     128: invokevirtual #349                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVPrinter.close:()V
     131: goto          150
     134: astore        10
     136: aload         4
     138: aload         10
     140: invokevirtual #353                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     143: goto          150
     146: aload_3
     147: invokevirtual #349                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVPrinter.close:()V
     150: aload         9
     152: athrow
     153: astore_3
     154: new           #355                // class java/lang/IllegalStateException
     157: dup
     158: aload_3
     159: invokespecial #357                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
     162: athrow
    Exception table:
       from    to  target type
          81    85    88   Class java/lang/Throwable
          21    72   107   Class java/lang/Throwable
          21    72   116   any
         127   131   134   Class java/lang/Throwable
         107   118   116   any
           8   104   153   Class java/io/IOException
         107   153   153   Class java/io/IOException

  public boolean getAllowDuplicateHeaderNames();
    Code:
       0: aload_0
       1: getfield      #257                // Field allowDuplicateHeaderNames:Z
       4: ireturn

  public boolean getAllowMissingColumnNames();
    Code:
       0: aload_0
       1: getfield      #196                // Field allowMissingColumnNames:Z
       4: ireturn

  public boolean getAutoFlush();
    Code:
       0: aload_0
       1: getfield      #247                // Field autoFlush:Z
       4: ireturn

  public java.lang.Character getCommentMarker();
    Code:
       0: aload_0
       1: getfield      #180                // Field commentMarker:Ljava/lang/Character;
       4: areturn

  public char getDelimiter();
    Code:
       0: aload_0
       1: getfield      #163                // Field delimiter:Ljava/lang/String;
       4: iconst_0
       5: invokevirtual #373                // Method java/lang/String.charAt:(I)C
       8: ireturn

  public java.lang.String getDelimiterString();
    Code:
       0: aload_0
       1: getfield      #163                // Field delimiter:Ljava/lang/String;
       4: areturn

  public java.lang.Character getEscapeCharacter();
    Code:
       0: aload_0
       1: getfield      #185                // Field escapeCharacter:Ljava/lang/Character;
       4: areturn

  public java.lang.String[] getHeader();
    Code:
       0: aload_0
       1: getfield      #222                // Field header:[Ljava/lang/String;
       4: ifnull        20
       7: aload_0
       8: getfield      #222                // Field header:[Ljava/lang/String;
      11: invokevirtual #378                // Method "[Ljava/lang/String;".clone:()Ljava/lang/Object;
      14: checkcast     #114                // class "[Ljava/lang/String;"
      17: goto          21
      20: aconst_null
      21: areturn

  public java.lang.String[] getHeaderComments();
    Code:
       0: aload_0
       1: getfield      #217                // Field headerComments:[Ljava/lang/String;
       4: ifnull        20
       7: aload_0
       8: getfield      #217                // Field headerComments:[Ljava/lang/String;
      11: invokevirtual #378                // Method "[Ljava/lang/String;".clone:()Ljava/lang/Object;
      14: checkcast     #114                // class "[Ljava/lang/String;"
      17: goto          21
      20: aconst_null
      21: areturn

  public boolean getIgnoreEmptyLines();
    Code:
       0: aload_0
       1: getfield      #201                // Field ignoreEmptyLines:Z
       4: ireturn

  public boolean getIgnoreHeaderCase();
    Code:
       0: aload_0
       1: getfield      #232                // Field ignoreHeaderCase:Z
       4: ireturn

  public boolean getIgnoreSurroundingSpaces();
    Code:
       0: aload_0
       1: getfield      #191                // Field ignoreSurroundingSpaces:Z
       4: ireturn

  public java.lang.String getNullString();
    Code:
       0: aload_0
       1: getfield      #211                // Field nullString:Ljava/lang/String;
       4: areturn

  public java.lang.Character getQuoteCharacter();
    Code:
       0: aload_0
       1: getfield      #169                // Field quoteCharacter:Ljava/lang/Character;
       4: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.QuoteMode getQuoteMode();
    Code:
       0: aload_0
       1: getfield      #175                // Field quoteMode:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
       4: areturn

  public java.lang.String getRecordSeparator();
    Code:
       0: aload_0
       1: getfield      #206                // Field recordSeparator:Ljava/lang/String;
       4: areturn

  public boolean getSkipHeaderRecord();
    Code:
       0: aload_0
       1: getfield      #227                // Field skipHeaderRecord:Z
       4: ireturn

  public boolean getTrailingDelimiter();
    Code:
       0: aload_0
       1: getfield      #237                // Field trailingDelimiter:Z
       4: ireturn

  public boolean getTrim();
    Code:
       0: aload_0
       1: getfield      #242                // Field trim:Z
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: getfield      #222                // Field header:[Ljava/lang/String;
      13: invokestatic  #394                // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I
      16: iadd
      17: istore_2
      18: bipush        31
      20: iload_2
      21: imul
      22: aload_0
      23: getfield      #217                // Field headerComments:[Ljava/lang/String;
      26: invokestatic  #394                // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I
      29: iadd
      30: istore_2
      31: bipush        31
      33: iload_2
      34: imul
      35: bipush        17
      37: anewarray     #4                  // class java/lang/Object
      40: dup
      41: iconst_0
      42: aload_0
      43: getfield      #257                // Field allowDuplicateHeaderNames:Z
      46: invokestatic  #399                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      49: aastore
      50: dup
      51: iconst_1
      52: aload_0
      53: getfield      #196                // Field allowMissingColumnNames:Z
      56: invokestatic  #399                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      59: aastore
      60: dup
      61: iconst_2
      62: aload_0
      63: getfield      #247                // Field autoFlush:Z
      66: invokestatic  #399                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      69: aastore
      70: dup
      71: iconst_3
      72: aload_0
      73: getfield      #180                // Field commentMarker:Ljava/lang/Character;
      76: aastore
      77: dup
      78: iconst_4
      79: aload_0
      80: getfield      #163                // Field delimiter:Ljava/lang/String;
      83: aastore
      84: dup
      85: iconst_5
      86: aload_0
      87: getfield      #185                // Field escapeCharacter:Ljava/lang/Character;
      90: aastore
      91: dup
      92: bipush        6
      94: aload_0
      95: getfield      #201                // Field ignoreEmptyLines:Z
      98: invokestatic  #399                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     101: aastore
     102: dup
     103: bipush        7
     105: aload_0
     106: getfield      #232                // Field ignoreHeaderCase:Z
     109: invokestatic  #399                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     112: aastore
     113: dup
     114: bipush        8
     116: aload_0
     117: getfield      #191                // Field ignoreSurroundingSpaces:Z
     120: invokestatic  #399                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     123: aastore
     124: dup
     125: bipush        9
     127: aload_0
     128: getfield      #211                // Field nullString:Ljava/lang/String;
     131: aastore
     132: dup
     133: bipush        10
     135: aload_0
     136: getfield      #169                // Field quoteCharacter:Ljava/lang/Character;
     139: aastore
     140: dup
     141: bipush        11
     143: aload_0
     144: getfield      #175                // Field quoteMode:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
     147: aastore
     148: dup
     149: bipush        12
     151: aload_0
     152: getfield      #252                // Field quotedNullString:Ljava/lang/String;
     155: aastore
     156: dup
     157: bipush        13
     159: aload_0
     160: getfield      #206                // Field recordSeparator:Ljava/lang/String;
     163: aastore
     164: dup
     165: bipush        14
     167: aload_0
     168: getfield      #227                // Field skipHeaderRecord:Z
     171: invokestatic  #399                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     174: aastore
     175: dup
     176: bipush        15
     178: aload_0
     179: getfield      #237                // Field trailingDelimiter:Z
     182: invokestatic  #399                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     185: aastore
     186: dup
     187: bipush        16
     189: aload_0
     190: getfield      #242                // Field trim:Z
     193: invokestatic  #399                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     196: aastore
     197: invokestatic  #402                // Method java/util/Objects.hash:([Ljava/lang/Object;)I
     200: iadd
     201: ireturn

  public boolean isCommentMarkerSet();
    Code:
       0: aload_0
       1: getfield      #180                // Field commentMarker:Ljava/lang/Character;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private boolean isDelimiter(char, java.lang.CharSequence, int, char[], int);
    Code:
       0: iload_1
       1: aload         4
       3: iconst_0
       4: caload
       5: if_icmpeq     10
       8: iconst_0
       9: ireturn
      10: aload_2
      11: invokeinterface #131,  1          // InterfaceMethod java/lang/CharSequence.length:()I
      16: istore        6
      18: iload_3
      19: iload         5
      21: iadd
      22: iload         6
      24: if_icmple     29
      27: iconst_0
      28: ireturn
      29: iconst_1
      30: istore        7
      32: iload         7
      34: iload         5
      36: if_icmpge     65
      39: aload_2
      40: iload_3
      41: iload         7
      43: iadd
      44: invokeinterface #135,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      49: aload         4
      51: iload         7
      53: caload
      54: if_icmpeq     59
      57: iconst_0
      58: ireturn
      59: iinc          7, 1
      62: goto          32
      65: iconst_1
      66: ireturn

  public boolean isEscapeCharacterSet();
    Code:
       0: aload_0
       1: getfield      #185                // Field escapeCharacter:Ljava/lang/Character;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isNullStringSet();
    Code:
       0: aload_0
       1: getfield      #211                // Field nullString:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isQuoteCharacterSet();
    Code:
       0: aload_0
       1: getfield      #169                // Field quoteCharacter:Ljava/lang/Character;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVParser parse(java.io.Reader) throws java.io.IOException;
    Code:
       0: new           #419                // class org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #422                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser."<init>":(Ljava/io/Reader;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;)V
       9: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVPrinter print(java.lang.Appendable) throws java.io.IOException;
    Code:
       0: new           #333                // class org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVPrinter
       3: dup
       4: aload_1
       5: aload_0
       6: invokespecial #336                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVPrinter."<init>":(Ljava/lang/Appendable;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;)V
       9: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVPrinter print(java.io.File, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: new           #333                // class org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVPrinter
       3: dup
       4: new           #429                // class java/io/OutputStreamWriter
       7: dup
       8: new           #431                // class java/io/FileOutputStream
      11: dup
      12: aload_1
      13: invokespecial #434                // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      16: aload_2
      17: invokespecial #437                // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
      20: aload_0
      21: invokespecial #336                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVPrinter."<init>":(Ljava/lang/Appendable;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;)V
      24: areturn

  public void print(java.lang.Object, java.lang.Appendable, boolean) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     48
       4: aconst_null
       5: aload_0
       6: getfield      #211                // Field nullString:Ljava/lang/String;
       9: if_acmpne     20
      12: ldc_w         #443                // String
      15: astore        4
      17: goto          88
      20: getstatic     #448                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode.ALL:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
      23: aload_0
      24: getfield      #175                // Field quoteMode:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
      27: if_acmpne     39
      30: aload_0
      31: getfield      #252                // Field quotedNullString:Ljava/lang/String;
      34: astore        4
      36: goto          88
      39: aload_0
      40: getfield      #211                // Field nullString:Ljava/lang/String;
      43: astore        4
      45: goto          88
      48: aload_1
      49: instanceof    #127                // class java/lang/CharSequence
      52: ifeq          64
      55: aload_1
      56: checkcast     #127                // class java/lang/CharSequence
      59: astore        4
      61: goto          88
      64: aload_1
      65: instanceof    #450                // class java/io/Reader
      68: ifeq          82
      71: aload_0
      72: aload_1
      73: checkcast     #450                // class java/io/Reader
      76: aload_2
      77: iload_3
      78: invokespecial #453                // Method print:(Ljava/io/Reader;Ljava/lang/Appendable;Z)V
      81: return
      82: aload_1
      83: invokevirtual #454                // Method java/lang/Object.toString:()Ljava/lang/String;
      86: astore        4
      88: aload_0
      89: invokevirtual #456                // Method getTrim:()Z
      92: ifeq          103
      95: aload         4
      97: invokestatic  #458                // Method trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
     100: goto          105
     103: aload         4
     105: astore        4
     107: aload_0
     108: aload_1
     109: aload         4
     111: aload_2
     112: iload_3
     113: invokespecial #461                // Method print:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V
     116: return

  private void print(java.lang.Object, java.lang.CharSequence, java.lang.Appendable, boolean) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        5
       3: aload_2
       4: invokeinterface #131,  1          // InterfaceMethod java/lang/CharSequence.length:()I
       9: istore        6
      11: iload         4
      13: ifne          27
      16: aload_3
      17: aload_0
      18: invokevirtual #465                // Method getDelimiterString:()Ljava/lang/String;
      21: invokeinterface #296,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      26: pop
      27: aload_1
      28: ifnonnull     42
      31: aload_3
      32: aload_2
      33: invokeinterface #296,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      38: pop
      39: goto          88
      42: aload_0
      43: invokevirtual #467                // Method isQuoteCharacterSet:()Z
      46: ifeq          61
      49: aload_0
      50: aload_1
      51: aload_2
      52: aload_3
      53: iload         4
      55: invokespecial #470                // Method printWithQuotes:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V
      58: goto          88
      61: aload_0
      62: invokevirtual #472                // Method isEscapeCharacterSet:()Z
      65: ifeq          77
      68: aload_0
      69: aload_2
      70: aload_3
      71: invokespecial #475                // Method printWithEscapes:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
      74: goto          88
      77: aload_3
      78: aload_2
      79: iconst_0
      80: iload         6
      82: invokeinterface #478,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
      87: pop
      88: return

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVPrinter print(java.nio.file.Path, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: anewarray     #483                // class java/nio/file/OpenOption
       7: invokestatic  #489                // Method java/nio/file/Files.newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;
      10: invokevirtual #491                // Method print:(Ljava/lang/Appendable;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVPrinter;
      13: areturn

  private void print(java.io.Reader, java.lang.Appendable, boolean) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          13
       4: aload_0
       5: aload_0
       6: invokevirtual #465                // Method getDelimiterString:()Ljava/lang/String;
       9: aload_2
      10: invokespecial #494                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
      13: aload_0
      14: invokevirtual #467                // Method isQuoteCharacterSet:()Z
      17: ifeq          29
      20: aload_0
      21: aload_1
      22: aload_2
      23: invokespecial #497                // Method printWithQuotes:(Ljava/io/Reader;Ljava/lang/Appendable;)V
      26: goto          70
      29: aload_0
      30: invokevirtual #472                // Method isEscapeCharacterSet:()Z
      33: ifeq          45
      36: aload_0
      37: aload_1
      38: aload_2
      39: invokespecial #499                // Method printWithEscapes:(Ljava/io/Reader;Ljava/lang/Appendable;)V
      42: goto          70
      45: aload_2
      46: instanceof    #501                // class java/io/Writer
      49: ifeq          64
      52: aload_1
      53: aload_2
      54: checkcast     #501                // class java/io/Writer
      57: invokestatic  #507                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/IOUtils.copyLarge:(Ljava/io/Reader;Ljava/io/Writer;)J
      60: pop2
      61: goto          70
      64: aload_1
      65: aload_2
      66: invokestatic  #510                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/IOUtils.copy:(Ljava/io/Reader;Ljava/lang/Appendable;)J
      69: pop2
      70: return

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVPrinter printer() throws java.io.IOException;
    Code:
       0: new           #333                // class org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVPrinter
       3: dup
       4: getstatic     #517                // Field java/lang/System.out:Ljava/io/PrintStream;
       7: aload_0
       8: invokespecial #336                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVPrinter."<init>":(Ljava/lang/Appendable;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;)V
      11: areturn

  public void println(java.lang.Appendable) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #521                // Method getTrailingDelimiter:()Z
       4: ifeq          16
       7: aload_0
       8: aload_0
       9: invokevirtual #465                // Method getDelimiterString:()Ljava/lang/String;
      12: aload_1
      13: invokespecial #494                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
      16: aload_0
      17: getfield      #206                // Field recordSeparator:Ljava/lang/String;
      20: ifnull        32
      23: aload_0
      24: aload_0
      25: getfield      #206                // Field recordSeparator:Ljava/lang/String;
      28: aload_1
      29: invokespecial #494                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
      32: return

  public void printRecord(java.lang.Appendable, java.lang.Object...) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: aload_2
       4: arraylength
       5: if_icmpge     31
       8: aload_0
       9: aload_2
      10: iload_3
      11: aaload
      12: aload_1
      13: iload_3
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: invokevirtual #524                // Method print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V
      25: iinc          3, 1
      28: goto          2
      31: aload_0
      32: aload_1
      33: invokevirtual #526                // Method println:(Ljava/lang/Appendable;)V
      36: return

  private void printWithEscapes(java.lang.CharSequence, java.lang.Appendable) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_3
       2: iconst_0
       3: istore        4
       5: aload_1
       6: invokeinterface #131,  1          // InterfaceMethod java/lang/CharSequence.length:()I
      11: istore        5
      13: aload_0
      14: invokevirtual #465                // Method getDelimiterString:()Ljava/lang/String;
      17: invokevirtual #530                // Method java/lang/String.toCharArray:()[C
      20: astore        6
      22: aload         6
      24: arraylength
      25: istore        7
      27: aload_0
      28: invokevirtual #532                // Method getEscapeCharacter:()Ljava/lang/Character;
      31: invokevirtual #99                 // Method java/lang/Character.charValue:()C
      34: istore        8
      36: iload         4
      38: iload         5
      40: if_icmpge     217
      43: aload_1
      44: iload         4
      46: invokeinterface #135,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      51: istore        9
      53: aload_0
      54: iload         9
      56: aload_1
      57: iload         4
      59: aload         6
      61: iload         7
      63: invokespecial #535                // Method isDelimiter:(CLjava/lang/CharSequence;I[CI)Z
      66: istore        10
      68: iload         9
      70: bipush        13
      72: if_icmpeq     94
      75: iload         9
      77: bipush        10
      79: if_icmpeq     94
      82: iload         9
      84: iload         8
      86: if_icmpeq     94
      89: iload         10
      91: ifeq          211
      94: iload         4
      96: iload_3
      97: if_icmple     111
     100: aload_2
     101: aload_1
     102: iload_3
     103: iload         4
     105: invokeinterface #478,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
     110: pop
     111: iload         9
     113: bipush        10
     115: if_icmpne     125
     118: bipush        110
     120: istore        9
     122: goto          136
     125: iload         9
     127: bipush        13
     129: if_icmpne     136
     132: bipush        114
     134: istore        9
     136: aload_2
     137: iload         8
     139: invokeinterface #290,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     144: pop
     145: aload_2
     146: iload         9
     148: invokeinterface #290,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     153: pop
     154: iload         10
     156: ifeq          206
     159: iconst_1
     160: istore        11
     162: iload         11
     164: iload         7
     166: if_icmpge     206
     169: iinc          4, 1
     172: aload_1
     173: iload         4
     175: invokeinterface #135,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     180: istore        9
     182: aload_2
     183: iload         8
     185: invokeinterface #290,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     190: pop
     191: aload_2
     192: iload         9
     194: invokeinterface #290,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     199: pop
     200: iinc          11, 1
     203: goto          162
     206: iload         4
     208: iconst_1
     209: iadd
     210: istore_3
     211: iinc          4, 1
     214: goto          36
     217: iload         4
     219: iload_3
     220: if_icmple     234
     223: aload_2
     224: aload_1
     225: iload_3
     226: iload         4
     228: invokeinterface #478,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
     233: pop
     234: return

  private void printWithEscapes(java.io.Reader, java.lang.Appendable) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_3
       2: iconst_0
       3: istore        4
       5: new           #542                // class org/sonarsource/sonarlint/shaded/org/apache/commons/csv/ExtendedBufferedReader
       8: dup
       9: aload_1
      10: invokespecial #545                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/ExtendedBufferedReader."<init>":(Ljava/io/Reader;)V
      13: astore        5
      15: aload_0
      16: invokevirtual #465                // Method getDelimiterString:()Ljava/lang/String;
      19: invokevirtual #530                // Method java/lang/String.toCharArray:()[C
      22: astore        6
      24: aload         6
      26: arraylength
      27: istore        7
      29: aload_0
      30: invokevirtual #532                // Method getEscapeCharacter:()Ljava/lang/Character;
      33: invokevirtual #99                 // Method java/lang/Character.charValue:()C
      36: istore        8
      38: new           #269                // class java/lang/StringBuilder
      41: dup
      42: sipush        4096
      45: invokespecial #548                // Method java/lang/StringBuilder."<init>":(I)V
      48: astore        9
      50: iconst_m1
      51: aload         5
      53: invokevirtual #551                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/ExtendedBufferedReader.read:()I
      56: dup
      57: istore        10
      59: if_icmpeq     271
      62: aload         9
      64: iload         10
      66: i2c
      67: invokevirtual #554                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      70: pop
      71: aload_0
      72: iload         10
      74: i2c
      75: new           #269                // class java/lang/StringBuilder
      78: dup
      79: invokespecial #270                // Method java/lang/StringBuilder."<init>":()V
      82: aload         9
      84: invokevirtual #279                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: new           #79                 // class java/lang/String
      93: dup
      94: aload         5
      96: iload         7
      98: iconst_1
      99: isub
     100: invokevirtual #558                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/ExtendedBufferedReader.lookAhead:(I)[C
     103: invokespecial #561                // Method java/lang/String."<init>":([C)V
     106: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: invokevirtual #279                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     112: iload         4
     114: aload         6
     116: iload         7
     118: invokespecial #535                // Method isDelimiter:(CLjava/lang/CharSequence;I[CI)Z
     121: istore        11
     123: iload         10
     125: bipush        13
     127: if_icmpeq     149
     130: iload         10
     132: bipush        10
     134: if_icmpeq     149
     137: iload         10
     139: iload         8
     141: if_icmpeq     149
     144: iload         11
     146: ifeq          265
     149: iload         4
     151: iload_3
     152: if_icmple     177
     155: aload_0
     156: aload         9
     158: iload_3
     159: iload         4
     161: invokevirtual #562                // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;
     164: aload_2
     165: invokespecial #494                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
     168: aload         9
     170: iconst_0
     171: invokevirtual #565                // Method java/lang/StringBuilder.setLength:(I)V
     174: iconst_m1
     175: istore        4
     177: iload         10
     179: bipush        10
     181: if_icmpne     191
     184: bipush        110
     186: istore        10
     188: goto          202
     191: iload         10
     193: bipush        13
     195: if_icmpne     202
     198: bipush        114
     200: istore        10
     202: aload_0
     203: iload         8
     205: aload_2
     206: invokespecial #567                // Method append:(CLjava/lang/Appendable;)V
     209: aload_0
     210: iload         10
     212: i2c
     213: aload_2
     214: invokespecial #567                // Method append:(CLjava/lang/Appendable;)V
     217: iload         11
     219: ifeq          260
     222: iconst_1
     223: istore        12
     225: iload         12
     227: iload         7
     229: if_icmpge     260
     232: aload         5
     234: invokevirtual #551                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/ExtendedBufferedReader.read:()I
     237: istore        10
     239: aload_0
     240: iload         8
     242: aload_2
     243: invokespecial #567                // Method append:(CLjava/lang/Appendable;)V
     246: aload_0
     247: iload         10
     249: i2c
     250: aload_2
     251: invokespecial #567                // Method append:(CLjava/lang/Appendable;)V
     254: iinc          12, 1
     257: goto          225
     260: iload         4
     262: iconst_1
     263: iadd
     264: istore_3
     265: iinc          4, 1
     268: goto          50
     271: iload         4
     273: iload_3
     274: if_icmple     290
     277: aload_0
     278: aload         9
     280: iload_3
     281: iload         4
     283: invokevirtual #562                // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;
     286: aload_2
     287: invokespecial #494                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
     290: return

  private void printWithQuotes(java.lang.Object, java.lang.CharSequence, java.lang.Appendable, boolean) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        5
       3: iconst_0
       4: istore        6
       6: iconst_0
       7: istore        7
       9: aload_2
      10: invokeinterface #131,  1          // InterfaceMethod java/lang/CharSequence.length:()I
      15: istore        8
      17: aload_0
      18: invokevirtual #465                // Method getDelimiterString:()Ljava/lang/String;
      21: invokevirtual #530                // Method java/lang/String.toCharArray:()[C
      24: astore        9
      26: aload         9
      28: arraylength
      29: istore        10
      31: aload_0
      32: invokevirtual #572                // Method getQuoteCharacter:()Ljava/lang/Character;
      35: invokevirtual #99                 // Method java/lang/Character.charValue:()C
      38: istore        11
      40: aload_0
      41: invokevirtual #472                // Method isEscapeCharacterSet:()Z
      44: ifeq          57
      47: aload_0
      48: invokevirtual #532                // Method getEscapeCharacter:()Ljava/lang/Character;
      51: invokevirtual #99                 // Method java/lang/Character.charValue:()C
      54: goto          59
      57: iload         11
      59: istore        12
      61: aload_0
      62: invokevirtual #574                // Method getQuoteMode:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
      65: astore        13
      67: aload         13
      69: ifnonnull     77
      72: getstatic     #577                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
      75: astore        13
      77: getstatic     #581                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$1.$SwitchMap$org$apache$commons$csv$QuoteMode:[I
      80: aload         13
      82: invokevirtual #584                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode.ordinal:()I
      85: iaload
      86: tableswitch   { // 1 to 5
                     1: 120
                     2: 120
                     3: 126
                     4: 143
                     5: 150
               default: 311
          }
     120: iconst_1
     121: istore        5
     123: goto          340
     126: aload_1
     127: instanceof    #586                // class java/lang/Number
     130: ifne          137
     133: iconst_1
     134: goto          138
     137: iconst_0
     138: istore        5
     140: goto          340
     143: aload_0
     144: aload_2
     145: aload_3
     146: invokespecial #475                // Method printWithEscapes:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
     149: return
     150: iload         8
     152: ifgt          166
     155: iload         4
     157: ifeq          293
     160: iconst_1
     161: istore        5
     163: goto          293
     166: aload_2
     167: iload         7
     169: invokeinterface #135,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     174: istore        14
     176: iload         14
     178: bipush        35
     180: if_icmpgt     189
     183: iconst_1
     184: istore        5
     186: goto          293
     189: iload         7
     191: iload         8
     193: if_icmpge     262
     196: aload_2
     197: iload         7
     199: invokeinterface #135,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     204: istore        14
     206: iload         14
     208: bipush        10
     210: if_icmpeq     250
     213: iload         14
     215: bipush        13
     217: if_icmpeq     250
     220: iload         14
     222: iload         11
     224: if_icmpeq     250
     227: iload         14
     229: iload         12
     231: if_icmpeq     250
     234: aload_0
     235: iload         14
     237: aload_2
     238: iload         7
     240: aload         9
     242: iload         10
     244: invokespecial #535                // Method isDelimiter:(CLjava/lang/CharSequence;I[CI)Z
     247: ifeq          256
     250: iconst_1
     251: istore        5
     253: goto          262
     256: iinc          7, 1
     259: goto          189
     262: iload         5
     264: ifne          293
     267: iload         8
     269: iconst_1
     270: isub
     271: istore        7
     273: aload_2
     274: iload         7
     276: invokeinterface #135,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     281: istore        14
     283: iload         14
     285: bipush        32
     287: if_icmpgt     293
     290: iconst_1
     291: istore        5
     293: iload         5
     295: ifne          340
     298: aload_3
     299: aload_2
     300: iload         6
     302: iload         8
     304: invokeinterface #478,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
     309: pop
     310: return
     311: new           #355                // class java/lang/IllegalStateException
     314: dup
     315: new           #269                // class java/lang/StringBuilder
     318: dup
     319: invokespecial #270                // Method java/lang/StringBuilder."<init>":()V
     322: ldc_w         #588                // String Unexpected Quote value:
     325: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     328: aload         13
     330: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     333: invokevirtual #279                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     336: invokespecial #591                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     339: athrow
     340: iload         5
     342: ifne          358
     345: aload_3
     346: aload_2
     347: iload         6
     349: iload         8
     351: invokeinterface #478,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
     356: pop
     357: return
     358: aload_3
     359: iload         11
     361: invokeinterface #290,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     366: pop
     367: iload         7
     369: iload         8
     371: if_icmpge     429
     374: aload_2
     375: iload         7
     377: invokeinterface #135,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     382: istore        14
     384: iload         14
     386: iload         11
     388: if_icmpeq     398
     391: iload         14
     393: iload         12
     395: if_icmpne     423
     398: aload_3
     399: aload_2
     400: iload         6
     402: iload         7
     404: invokeinterface #478,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
     409: pop
     410: aload_3
     411: iload         12
     413: invokeinterface #290,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     418: pop
     419: iload         7
     421: istore        6
     423: iinc          7, 1
     426: goto          367
     429: aload_3
     430: aload_2
     431: iload         6
     433: iload         7
     435: invokeinterface #478,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
     440: pop
     441: aload_3
     442: iload         11
     444: invokeinterface #290,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     449: pop
     450: return

  private void printWithQuotes(java.io.Reader, java.lang.Appendable) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #574                // Method getQuoteMode:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
       4: getstatic     #597                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode.NONE:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
       7: if_acmpne     17
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokespecial #499                // Method printWithEscapes:(Ljava/io/Reader;Ljava/lang/Appendable;)V
      16: return
      17: iconst_0
      18: istore_3
      19: aload_0
      20: invokevirtual #572                // Method getQuoteCharacter:()Ljava/lang/Character;
      23: invokevirtual #99                 // Method java/lang/Character.charValue:()C
      26: istore        4
      28: new           #269                // class java/lang/StringBuilder
      31: dup
      32: sipush        4096
      35: invokespecial #548                // Method java/lang/StringBuilder."<init>":(I)V
      38: astore        5
      40: aload_0
      41: iload         4
      43: aload_2
      44: invokespecial #567                // Method append:(CLjava/lang/Appendable;)V
      47: iconst_m1
      48: aload_1
      49: invokevirtual #598                // Method java/io/Reader.read:()I
      52: dup
      53: istore        6
      55: if_icmpeq     119
      58: aload         5
      60: iload         6
      62: i2c
      63: invokevirtual #554                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      66: pop
      67: iload         6
      69: iload         4
      71: if_icmpne     113
      74: iload_3
      75: ifle          105
      78: aload_0
      79: aload         5
      81: iconst_0
      82: iload_3
      83: invokevirtual #562                // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;
      86: aload_2
      87: invokespecial #494                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
      90: aload_0
      91: iload         4
      93: aload_2
      94: invokespecial #567                // Method append:(CLjava/lang/Appendable;)V
      97: aload         5
      99: iconst_0
     100: invokevirtual #565                // Method java/lang/StringBuilder.setLength:(I)V
     103: iconst_m1
     104: istore_3
     105: aload_0
     106: iload         6
     108: i2c
     109: aload_2
     110: invokespecial #567                // Method append:(CLjava/lang/Appendable;)V
     113: iinc          3, 1
     116: goto          47
     119: iload_3
     120: ifle          135
     123: aload_0
     124: aload         5
     126: iconst_0
     127: iload_3
     128: invokevirtual #562                // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;
     131: aload_2
     132: invokespecial #494                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
     135: aload_0
     136: iload         4
     138: aload_2
     139: invokespecial #567                // Method append:(CLjava/lang/Appendable;)V
     142: return

  public java.lang.String toString();
    Code:
       0: new           #269                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #270                // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc_w         #600                // String Delimiter=<
      12: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_0
      16: getfield      #163                // Field delimiter:Ljava/lang/String;
      19: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: bipush        62
      24: invokevirtual #554                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      27: pop
      28: aload_0
      29: invokevirtual #472                // Method isEscapeCharacterSet:()Z
      32: ifeq          62
      35: aload_1
      36: bipush        32
      38: invokevirtual #554                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      41: pop
      42: aload_1
      43: ldc_w         #602                // String Escape=<
      46: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_0
      50: getfield      #185                // Field escapeCharacter:Ljava/lang/Character;
      53: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      56: bipush        62
      58: invokevirtual #554                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      61: pop
      62: aload_0
      63: invokevirtual #467                // Method isQuoteCharacterSet:()Z
      66: ifeq          96
      69: aload_1
      70: bipush        32
      72: invokevirtual #554                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      75: pop
      76: aload_1
      77: ldc_w         #604                // String QuoteChar=<
      80: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: aload_0
      84: getfield      #169                // Field quoteCharacter:Ljava/lang/Character;
      87: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      90: bipush        62
      92: invokevirtual #554                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      95: pop
      96: aload_0
      97: getfield      #175                // Field quoteMode:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
     100: ifnull        130
     103: aload_1
     104: bipush        32
     106: invokevirtual #554                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     109: pop
     110: aload_1
     111: ldc_w         #606                // String QuoteMode=<
     114: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: aload_0
     118: getfield      #175                // Field quoteMode:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
     121: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     124: bipush        62
     126: invokevirtual #554                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     129: pop
     130: aload_0
     131: invokevirtual #608                // Method isCommentMarkerSet:()Z
     134: ifeq          164
     137: aload_1
     138: bipush        32
     140: invokevirtual #554                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     143: pop
     144: aload_1
     145: ldc_w         #610                // String CommentStart=<
     148: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: aload_0
     152: getfield      #180                // Field commentMarker:Ljava/lang/Character;
     155: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     158: bipush        62
     160: invokevirtual #554                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     163: pop
     164: aload_0
     165: invokevirtual #612                // Method isNullStringSet:()Z
     168: ifeq          198
     171: aload_1
     172: bipush        32
     174: invokevirtual #554                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     177: pop
     178: aload_1
     179: ldc_w         #614                // String NullString=<
     182: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: aload_0
     186: getfield      #211                // Field nullString:Ljava/lang/String;
     189: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: bipush        62
     194: invokevirtual #554                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     197: pop
     198: aload_0
     199: getfield      #206                // Field recordSeparator:Ljava/lang/String;
     202: ifnull        232
     205: aload_1
     206: bipush        32
     208: invokevirtual #554                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     211: pop
     212: aload_1
     213: ldc_w         #616                // String RecordSeparator=<
     216: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     219: aload_0
     220: getfield      #206                // Field recordSeparator:Ljava/lang/String;
     223: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     226: bipush        62
     228: invokevirtual #554                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     231: pop
     232: aload_0
     233: invokevirtual #618                // Method getIgnoreEmptyLines:()Z
     236: ifeq          247
     239: aload_1
     240: ldc_w         #620                // String  EmptyLines:ignored
     243: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     246: pop
     247: aload_0
     248: invokevirtual #622                // Method getIgnoreSurroundingSpaces:()Z
     251: ifeq          262
     254: aload_1
     255: ldc_w         #624                // String  SurroundingSpaces:ignored
     258: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     261: pop
     262: aload_0
     263: invokevirtual #626                // Method getIgnoreHeaderCase:()Z
     266: ifeq          277
     269: aload_1
     270: ldc_w         #628                // String  IgnoreHeaderCase:ignored
     273: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     276: pop
     277: aload_1
     278: ldc_w         #630                // String  SkipHeaderRecord:
     281: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     284: aload_0
     285: getfield      #227                // Field skipHeaderRecord:Z
     288: invokevirtual #633                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     291: pop
     292: aload_0
     293: getfield      #217                // Field headerComments:[Ljava/lang/String;
     296: ifnull        324
     299: aload_1
     300: bipush        32
     302: invokevirtual #554                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     305: pop
     306: aload_1
     307: ldc_w         #635                // String HeaderComments:
     310: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     313: aload_0
     314: getfield      #217                // Field headerComments:[Ljava/lang/String;
     317: invokestatic  #637                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
     320: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     323: pop
     324: aload_0
     325: getfield      #222                // Field header:[Ljava/lang/String;
     328: ifnull        356
     331: aload_1
     332: bipush        32
     334: invokevirtual #554                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     337: pop
     338: aload_1
     339: ldc_w         #639                // String Header:
     342: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     345: aload_0
     346: getfield      #222                // Field header:[Ljava/lang/String;
     349: invokestatic  #637                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
     352: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     355: pop
     356: aload_1
     357: invokevirtual #279                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     360: areturn

  private void validate() throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #163                // Field delimiter:Ljava/lang/String;
       4: invokestatic  #644                // Method containsLineBreak:(Ljava/lang/String;)Z
       7: ifeq          21
      10: new           #642                // class java/lang/IllegalArgumentException
      13: dup
      14: ldc_w         #646                // String The delimiter cannot be a line break
      17: invokespecial #647                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #169                // Field quoteCharacter:Ljava/lang/Character;
      25: ifnull        82
      28: aload_0
      29: getfield      #163                // Field delimiter:Ljava/lang/String;
      32: aload_0
      33: getfield      #169                // Field quoteCharacter:Ljava/lang/Character;
      36: invokevirtual #99                 // Method java/lang/Character.charValue:()C
      39: invokestatic  #89                 // Method contains:(Ljava/lang/String;C)Z
      42: ifeq          82
      45: new           #642                // class java/lang/IllegalArgumentException
      48: dup
      49: new           #269                // class java/lang/StringBuilder
      52: dup
      53: invokespecial #270                // Method java/lang/StringBuilder."<init>":()V
      56: ldc_w         #649                // String The quoteChar character and the delimiter cannot be the same (\'
      59: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: getfield      #169                // Field quoteCharacter:Ljava/lang/Character;
      66: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      69: ldc_w         #651                // String \')
      72: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: invokevirtual #279                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: invokespecial #647                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: aload_0
      83: getfield      #185                // Field escapeCharacter:Ljava/lang/Character;
      86: ifnull        143
      89: aload_0
      90: getfield      #163                // Field delimiter:Ljava/lang/String;
      93: aload_0
      94: getfield      #185                // Field escapeCharacter:Ljava/lang/Character;
      97: invokevirtual #99                 // Method java/lang/Character.charValue:()C
     100: invokestatic  #89                 // Method contains:(Ljava/lang/String;C)Z
     103: ifeq          143
     106: new           #642                // class java/lang/IllegalArgumentException
     109: dup
     110: new           #269                // class java/lang/StringBuilder
     113: dup
     114: invokespecial #270                // Method java/lang/StringBuilder."<init>":()V
     117: ldc_w         #653                // String The escape character and the delimiter cannot be the same (\'
     120: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload_0
     124: getfield      #185                // Field escapeCharacter:Ljava/lang/Character;
     127: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     130: ldc_w         #651                // String \')
     133: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: invokevirtual #279                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: invokespecial #647                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     142: athrow
     143: aload_0
     144: getfield      #180                // Field commentMarker:Ljava/lang/Character;
     147: ifnull        204
     150: aload_0
     151: getfield      #163                // Field delimiter:Ljava/lang/String;
     154: aload_0
     155: getfield      #180                // Field commentMarker:Ljava/lang/Character;
     158: invokevirtual #99                 // Method java/lang/Character.charValue:()C
     161: invokestatic  #89                 // Method contains:(Ljava/lang/String;C)Z
     164: ifeq          204
     167: new           #642                // class java/lang/IllegalArgumentException
     170: dup
     171: new           #269                // class java/lang/StringBuilder
     174: dup
     175: invokespecial #270                // Method java/lang/StringBuilder."<init>":()V
     178: ldc_w         #655                // String The comment start character and the delimiter cannot be the same (\'
     181: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     184: aload_0
     185: getfield      #180                // Field commentMarker:Ljava/lang/Character;
     188: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     191: ldc_w         #651                // String \')
     194: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: invokevirtual #279                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     200: invokespecial #647                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     203: athrow
     204: aload_0
     205: getfield      #169                // Field quoteCharacter:Ljava/lang/Character;
     208: ifnull        262
     211: aload_0
     212: getfield      #169                // Field quoteCharacter:Ljava/lang/Character;
     215: aload_0
     216: getfield      #180                // Field commentMarker:Ljava/lang/Character;
     219: invokevirtual #657                // Method java/lang/Character.equals:(Ljava/lang/Object;)Z
     222: ifeq          262
     225: new           #642                // class java/lang/IllegalArgumentException
     228: dup
     229: new           #269                // class java/lang/StringBuilder
     232: dup
     233: invokespecial #270                // Method java/lang/StringBuilder."<init>":()V
     236: ldc_w         #659                // String The comment start character and the quoteChar cannot be the same (\'
     239: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: aload_0
     243: getfield      #180                // Field commentMarker:Ljava/lang/Character;
     246: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     249: ldc_w         #651                // String \')
     252: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     255: invokevirtual #279                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     258: invokespecial #647                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     261: athrow
     262: aload_0
     263: getfield      #185                // Field escapeCharacter:Ljava/lang/Character;
     266: ifnull        320
     269: aload_0
     270: getfield      #185                // Field escapeCharacter:Ljava/lang/Character;
     273: aload_0
     274: getfield      #180                // Field commentMarker:Ljava/lang/Character;
     277: invokevirtual #657                // Method java/lang/Character.equals:(Ljava/lang/Object;)Z
     280: ifeq          320
     283: new           #642                // class java/lang/IllegalArgumentException
     286: dup
     287: new           #269                // class java/lang/StringBuilder
     290: dup
     291: invokespecial #270                // Method java/lang/StringBuilder."<init>":()V
     294: ldc_w         #661                // String The comment start and the escape character cannot be the same (\'
     297: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     300: aload_0
     301: getfield      #180                // Field commentMarker:Ljava/lang/Character;
     304: invokevirtual #274                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     307: ldc_w         #651                // String \')
     310: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     313: invokevirtual #279                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     316: invokespecial #647                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     319: athrow
     320: aload_0
     321: getfield      #185                // Field escapeCharacter:Ljava/lang/Character;
     324: ifnonnull     348
     327: aload_0
     328: getfield      #175                // Field quoteMode:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
     331: getstatic     #597                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode.NONE:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
     334: if_acmpne     348
     337: new           #642                // class java/lang/IllegalArgumentException
     340: dup
     341: ldc_w         #663                // String No quotes mode set but no escape character is set
     344: invokespecial #647                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     347: athrow
     348: aload_0
     349: getfield      #222                // Field header:[Ljava/lang/String;
     352: ifnull        455
     355: aload_0
     356: getfield      #257                // Field allowDuplicateHeaderNames:Z
     359: ifne          455
     362: new           #665                // class java/util/HashSet
     365: dup
     366: invokespecial #666                // Method java/util/HashSet."<init>":()V
     369: astore_1
     370: aload_0
     371: getfield      #222                // Field header:[Ljava/lang/String;
     374: astore_2
     375: aload_2
     376: arraylength
     377: istore_3
     378: iconst_0
     379: istore        4
     381: iload         4
     383: iload_3
     384: if_icmpge     455
     387: aload_2
     388: iload         4
     390: aaload
     391: astore        5
     393: aload_1
     394: aload         5
     396: invokeinterface #671,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     401: ifne          449
     404: new           #642                // class java/lang/IllegalArgumentException
     407: dup
     408: new           #269                // class java/lang/StringBuilder
     411: dup
     412: invokespecial #270                // Method java/lang/StringBuilder."<init>":()V
     415: ldc_w         #673                // String The header contains a duplicate entry: \'
     418: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     421: aload         5
     423: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     426: ldc_w         #675                // String \' in
     429: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     432: aload_0
     433: getfield      #222                // Field header:[Ljava/lang/String;
     436: invokestatic  #637                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
     439: invokevirtual #277                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     442: invokevirtual #279                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     445: invokespecial #647                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     448: athrow
     449: iinc          4, 1
     452: goto          381
     455: return

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withAllowDuplicateHeaderNames();
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: iconst_1
       5: invokevirtual #684                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setAllowDuplicateHeaderNames:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withAllowDuplicateHeaderNames(boolean);
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: iload_1
       5: invokevirtual #684                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setAllowDuplicateHeaderNames:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withAllowMissingColumnNames();
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: iconst_1
       5: invokevirtual #689                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setAllowMissingColumnNames:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withAllowMissingColumnNames(boolean);
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: iload_1
       5: invokevirtual #689                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setAllowMissingColumnNames:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withAutoFlush(boolean);
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: iload_1
       5: invokevirtual #693                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setAutoFlush:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withCommentMarker(char);
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: iload_1
       5: invokevirtual #698                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(C)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withCommentMarker(java.lang.Character);
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: aload_1
       5: invokevirtual #702                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(Ljava/lang/Character;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withDelimiter(char);
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: iload_1
       5: invokevirtual #706                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withEscape(char);
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: iload_1
       5: invokevirtual #710                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withEscape(java.lang.Character);
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: aload_1
       5: invokevirtual #712                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withFirstRecordAsHeader();
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: iconst_0
       5: anewarray     #79                 // class java/lang/String
       8: invokevirtual #717                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setHeader:([Ljava/lang/String;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
      11: iconst_1
      12: invokevirtual #720                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
      15: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      18: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withHeader(java.lang.Class<? extends java.lang.Enum<?>>);
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: aload_1
       5: invokevirtual #726                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/lang/Class;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withHeader(java.sql.ResultSet) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: aload_1
       5: invokevirtual #735                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSet;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withHeader(java.sql.ResultSetMetaData) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: aload_1
       5: invokevirtual #741                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withHeader(java.lang.String...);
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: aload_1
       5: invokevirtual #717                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setHeader:([Ljava/lang/String;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withHeaderComments(java.lang.Object...);
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: aload_1
       5: invokevirtual #750                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setHeaderComments:([Ljava/lang/Object;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withIgnoreEmptyLines();
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: iconst_1
       5: invokevirtual #754                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withIgnoreEmptyLines(boolean);
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: iload_1
       5: invokevirtual #754                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withIgnoreHeaderCase();
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: iconst_1
       5: invokevirtual #758                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setIgnoreHeaderCase:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withIgnoreHeaderCase(boolean);
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: iload_1
       5: invokevirtual #758                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setIgnoreHeaderCase:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withIgnoreSurroundingSpaces();
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: iconst_1
       5: invokevirtual #762                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setIgnoreSurroundingSpaces:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withIgnoreSurroundingSpaces(boolean);
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: iload_1
       5: invokevirtual #762                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setIgnoreSurroundingSpaces:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withNullString(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: aload_1
       5: invokevirtual #767                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withQuote(char);
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: iload_1
       5: invokevirtual #771                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setQuote:(C)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withQuote(java.lang.Character);
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: aload_1
       5: invokevirtual #773                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withQuoteMode(org.sonarsource.sonarlint.shaded.org.apache.commons.csv.QuoteMode);
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: aload_1
       5: invokevirtual #779                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withRecordSeparator(char);
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: iload_1
       5: invokevirtual #783                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withRecordSeparator(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: aload_1
       5: invokevirtual #785                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withSkipHeaderRecord();
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: iconst_1
       5: invokevirtual #720                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withSkipHeaderRecord(boolean);
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: iload_1
       5: invokevirtual #720                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withSystemRecordSeparator();
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: invokestatic  #790                // Method java/lang/System.lineSeparator:()Ljava/lang/String;
       7: invokevirtual #785                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
      10: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      13: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withTrailingDelimiter();
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: iconst_1
       5: invokevirtual #794                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setTrailingDelimiter:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withTrailingDelimiter(boolean);
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: iload_1
       5: invokevirtual #794                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setTrailingDelimiter:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withTrim();
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: iconst_1
       5: invokevirtual #798                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setTrim:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat withTrim(boolean);
    Code:
       0: aload_0
       1: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       4: iload_1
       5: invokevirtual #798                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setTrim:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
       8: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      11: areturn

  static java.lang.String access$000(org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat);
    Code:
       0: aload_0
       1: getfield      #163                // Field delimiter:Ljava/lang/String;
       4: areturn

  static java.lang.Character access$100(org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat);
    Code:
       0: aload_0
       1: getfield      #169                // Field quoteCharacter:Ljava/lang/Character;
       4: areturn

  static org.sonarsource.sonarlint.shaded.org.apache.commons.csv.QuoteMode access$200(org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat);
    Code:
       0: aload_0
       1: getfield      #175                // Field quoteMode:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
       4: areturn

  static java.lang.Character access$300(org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat);
    Code:
       0: aload_0
       1: getfield      #180                // Field commentMarker:Ljava/lang/Character;
       4: areturn

  static java.lang.Character access$400(org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat);
    Code:
       0: aload_0
       1: getfield      #185                // Field escapeCharacter:Ljava/lang/Character;
       4: areturn

  static boolean access$500(org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat);
    Code:
       0: aload_0
       1: getfield      #191                // Field ignoreSurroundingSpaces:Z
       4: ireturn

  static boolean access$600(org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat);
    Code:
       0: aload_0
       1: getfield      #196                // Field allowMissingColumnNames:Z
       4: ireturn

  static boolean access$700(org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat);
    Code:
       0: aload_0
       1: getfield      #201                // Field ignoreEmptyLines:Z
       4: ireturn

  static java.lang.String access$800(org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat);
    Code:
       0: aload_0
       1: getfield      #206                // Field recordSeparator:Ljava/lang/String;
       4: areturn

  static java.lang.String access$900(org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat);
    Code:
       0: aload_0
       1: getfield      #211                // Field nullString:Ljava/lang/String;
       4: areturn

  static java.lang.String[] access$1000(org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat);
    Code:
       0: aload_0
       1: getfield      #217                // Field headerComments:[Ljava/lang/String;
       4: areturn

  static java.lang.String[] access$1100(org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat);
    Code:
       0: aload_0
       1: getfield      #222                // Field header:[Ljava/lang/String;
       4: areturn

  static boolean access$1200(org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat);
    Code:
       0: aload_0
       1: getfield      #227                // Field skipHeaderRecord:Z
       4: ireturn

  static boolean access$1300(org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat);
    Code:
       0: aload_0
       1: getfield      #232                // Field ignoreHeaderCase:Z
       4: ireturn

  static boolean access$1400(org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat);
    Code:
       0: aload_0
       1: getfield      #237                // Field trailingDelimiter:Z
       4: ireturn

  static boolean access$1500(org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat);
    Code:
       0: aload_0
       1: getfield      #242                // Field trim:Z
       4: ireturn

  static boolean access$1600(org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat);
    Code:
       0: aload_0
       1: getfield      #247                // Field autoFlush:Z
       4: ireturn

  static java.lang.String access$1700(org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat);
    Code:
       0: aload_0
       1: getfield      #252                // Field quotedNullString:Ljava/lang/String;
       4: areturn

  static boolean access$1800(org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat);
    Code:
       0: aload_0
       1: getfield      #257                // Field allowDuplicateHeaderNames:Z
       4: ireturn

  org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat(org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat$Builder, org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #826                // Method "<init>":(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;)V
       5: return

  static boolean access$2000(java.lang.Character);
    Code:
       0: aload_0
       1: invokestatic  #831                // Method isLineBreak:(Ljava/lang/Character;)Z
       4: ireturn

  static boolean access$2100(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #644                // Method containsLineBreak:(Ljava/lang/String;)Z
       4: ireturn

  static {};
    Code:
       0: new           #2                  // class org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat
       3: dup
       4: ldc_w         #835                // String ,
       7: getstatic     #840                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;
      10: aconst_null
      11: aconst_null
      12: aconst_null
      13: iconst_0
      14: iconst_1
      15: ldc_w         #842                // String \r\n
      18: aconst_null
      19: aconst_null
      20: aconst_null
      21: iconst_0
      22: iconst_0
      23: iconst_0
      24: iconst_0
      25: iconst_0
      26: iconst_0
      27: iconst_1
      28: invokespecial #111                // Method "<init>":(Ljava/lang/String;Ljava/lang/Character;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZZ)V
      31: putstatic     #844                // Field DEFAULT:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      34: getstatic     #844                // Field DEFAULT:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      37: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
      40: iconst_0
      41: invokevirtual #754                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
      44: iconst_1
      45: invokevirtual #689                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setAllowMissingColumnNames:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
      48: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      51: putstatic     #846                // Field EXCEL:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      54: getstatic     #844                // Field DEFAULT:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      57: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
      60: bipush        124
      62: invokevirtual #706                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
      65: bipush        92
      67: invokevirtual #710                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
      70: getstatic     #840                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;
      73: invokevirtual #773                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
      76: bipush        10
      78: invokevirtual #783                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
      81: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      84: putstatic     #848                // Field INFORMIX_UNLOAD:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      87: getstatic     #844                // Field DEFAULT:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      90: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
      93: ldc_w         #835                // String ,
      96: invokevirtual #850                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
      99: getstatic     #840                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;
     102: invokevirtual #773                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     105: bipush        10
     107: invokevirtual #783                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     110: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     113: putstatic     #852                // Field INFORMIX_UNLOAD_CSV:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     116: getstatic     #844                // Field DEFAULT:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     119: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     122: ldc_w         #835                // String ,
     125: invokevirtual #850                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     128: getstatic     #840                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;
     131: invokevirtual #712                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     134: getstatic     #840                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;
     137: invokevirtual #773                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     140: getstatic     #577                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
     143: invokevirtual #779                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     146: iconst_0
     147: invokevirtual #720                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     150: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     153: putstatic     #854                // Field MONGODB_CSV:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     156: getstatic     #844                // Field DEFAULT:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     159: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     162: bipush        9
     164: invokevirtual #706                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     167: getstatic     #840                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;
     170: invokevirtual #712                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     173: getstatic     #840                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;
     176: invokevirtual #773                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     179: getstatic     #577                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
     182: invokevirtual #779                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     185: iconst_0
     186: invokevirtual #720                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     189: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     192: putstatic     #856                // Field MONGODB_TSV:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     195: getstatic     #844                // Field DEFAULT:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     198: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     201: bipush        9
     203: invokevirtual #706                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     206: bipush        92
     208: invokevirtual #710                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     211: iconst_0
     212: invokevirtual #754                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     215: aconst_null
     216: invokevirtual #773                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     219: bipush        10
     221: invokevirtual #783                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     224: ldc_w         #858                // String \\N
     227: invokevirtual #767                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     230: getstatic     #861                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
     233: invokevirtual #779                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     236: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     239: putstatic     #863                // Field MYSQL:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     242: getstatic     #844                // Field DEFAULT:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     245: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     248: ldc_w         #835                // String ,
     251: invokevirtual #850                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     254: bipush        92
     256: invokevirtual #710                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     259: iconst_0
     260: invokevirtual #754                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     263: getstatic     #840                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;
     266: invokevirtual #773                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     269: ldc_w         #858                // String \\N
     272: invokevirtual #767                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     275: iconst_1
     276: invokevirtual #798                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setTrim:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     279: invokestatic  #790                // Method java/lang/System.lineSeparator:()Ljava/lang/String;
     282: invokevirtual #785                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     285: getstatic     #577                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
     288: invokevirtual #779                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     291: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     294: putstatic     #865                // Field ORACLE:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     297: getstatic     #844                // Field DEFAULT:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     300: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     303: ldc_w         #835                // String ,
     306: invokevirtual #850                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     309: getstatic     #840                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;
     312: invokevirtual #712                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     315: iconst_0
     316: invokevirtual #754                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     319: getstatic     #840                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;
     322: invokevirtual #773                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     325: bipush        10
     327: invokevirtual #783                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     330: ldc_w         #443                // String
     333: invokevirtual #767                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     336: getstatic     #861                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
     339: invokevirtual #779                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     342: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     345: putstatic     #867                // Field POSTGRESQL_CSV:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     348: getstatic     #844                // Field DEFAULT:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     351: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     354: bipush        9
     356: invokevirtual #706                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     359: bipush        92
     361: invokevirtual #710                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     364: iconst_0
     365: invokevirtual #754                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     368: getstatic     #840                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;
     371: invokevirtual #773                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     374: bipush        10
     376: invokevirtual #783                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     379: ldc_w         #858                // String \\N
     382: invokevirtual #767                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     385: getstatic     #861                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
     388: invokevirtual #779                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     391: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     394: putstatic     #869                // Field POSTGRESQL_TEXT:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     397: getstatic     #844                // Field DEFAULT:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     400: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     403: iconst_0
     404: invokevirtual #754                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     407: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     410: putstatic     #871                // Field RFC4180:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     413: getstatic     #844                // Field DEFAULT:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     416: invokevirtual #305                // Method builder:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     419: bipush        9
     421: invokevirtual #706                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     424: iconst_1
     425: invokevirtual #762                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.setIgnoreSurroundingSpaces:(Z)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder;
     428: invokevirtual #308                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     431: putstatic     #873                // Field TDF:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     434: return
}
