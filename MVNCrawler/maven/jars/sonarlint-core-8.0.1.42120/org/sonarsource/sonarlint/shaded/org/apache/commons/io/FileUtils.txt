Compiled from "FileUtils.java"
public class org.sonarsource.sonarlint.shaded.org.apache.commons.io.FileUtils {
  public static final long ONE_KB;

  public static final java.math.BigInteger ONE_KB_BI;

  public static final long ONE_MB;

  public static final java.math.BigInteger ONE_MB_BI;

  public static final long ONE_GB;

  public static final java.math.BigInteger ONE_GB_BI;

  public static final long ONE_TB;

  public static final java.math.BigInteger ONE_TB_BI;

  public static final long ONE_PB;

  public static final java.math.BigInteger ONE_PB_BI;

  public static final long ONE_EB;

  public static final java.math.BigInteger ONE_EB_BI;

  public static final java.math.BigInteger ONE_ZB;

  public static final java.math.BigInteger ONE_YB;

  public static final java.io.File[] EMPTY_FILE_ARRAY;

  private static java.nio.file.CopyOption[] addCopyAttributes(java.nio.file.CopyOption...);
    Code:
       0: aload_0
       1: aload_0
       2: arraylength
       3: iconst_1
       4: iadd
       5: invokestatic  #56                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
       8: checkcast     #58                 // class "[Ljava/nio/file/CopyOption;"
      11: astore_1
      12: aload_1
      13: iconst_0
      14: aload_0
      15: arraylength
      16: invokestatic  #62                 // Method java/util/Arrays.sort:([Ljava/lang/Object;II)V
      19: aload_0
      20: iconst_0
      21: aload_0
      22: arraylength
      23: getstatic     #68                 // Field java/nio/file/StandardCopyOption.COPY_ATTRIBUTES:Ljava/nio/file/StandardCopyOption;
      26: invokestatic  #72                 // Method java/util/Arrays.binarySearch:([Ljava/lang/Object;IILjava/lang/Object;)I
      29: iflt          34
      32: aload_0
      33: areturn
      34: aload_1
      35: aload_1
      36: arraylength
      37: iconst_1
      38: isub
      39: getstatic     #68                 // Field java/nio/file/StandardCopyOption.COPY_ATTRIBUTES:Ljava/nio/file/StandardCopyOption;
      42: aastore
      43: aload_1
      44: areturn

  public static java.lang.String byteCountToDisplaySize(java.math.BigInteger);
    Code:
       0: aload_0
       1: ldc           #78                 // String size
       3: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getstatic     #86                 // Field ONE_EB_BI:Ljava/math/BigInteger;
      11: invokevirtual #92                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      14: getstatic     #95                 // Field java/math/BigInteger.ZERO:Ljava/math/BigInteger;
      17: invokevirtual #99                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      20: ifle          52
      23: new           #101                // class java/lang/StringBuilder
      26: dup
      27: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      30: aload_0
      31: getstatic     #86                 // Field ONE_EB_BI:Ljava/math/BigInteger;
      34: invokevirtual #92                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      37: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: ldc           #111                // String  EB
      42: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: astore_1
      49: goto          297
      52: aload_0
      53: getstatic     #120                // Field ONE_PB_BI:Ljava/math/BigInteger;
      56: invokevirtual #92                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      59: getstatic     #95                 // Field java/math/BigInteger.ZERO:Ljava/math/BigInteger;
      62: invokevirtual #99                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      65: ifle          97
      68: new           #101                // class java/lang/StringBuilder
      71: dup
      72: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      75: aload_0
      76: getstatic     #120                // Field ONE_PB_BI:Ljava/math/BigInteger;
      79: invokevirtual #92                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      82: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      85: ldc           #122                // String  PB
      87: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: astore_1
      94: goto          297
      97: aload_0
      98: getstatic     #124                // Field ONE_TB_BI:Ljava/math/BigInteger;
     101: invokevirtual #92                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     104: getstatic     #95                 // Field java/math/BigInteger.ZERO:Ljava/math/BigInteger;
     107: invokevirtual #99                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     110: ifle          142
     113: new           #101                // class java/lang/StringBuilder
     116: dup
     117: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
     120: aload_0
     121: getstatic     #124                // Field ONE_TB_BI:Ljava/math/BigInteger;
     124: invokevirtual #92                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     127: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     130: ldc           #126                // String  TB
     132: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     138: astore_1
     139: goto          297
     142: aload_0
     143: getstatic     #128                // Field ONE_GB_BI:Ljava/math/BigInteger;
     146: invokevirtual #92                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     149: getstatic     #95                 // Field java/math/BigInteger.ZERO:Ljava/math/BigInteger;
     152: invokevirtual #99                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     155: ifle          187
     158: new           #101                // class java/lang/StringBuilder
     161: dup
     162: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
     165: aload_0
     166: getstatic     #128                // Field ONE_GB_BI:Ljava/math/BigInteger;
     169: invokevirtual #92                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     172: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     175: ldc           #130                // String  GB
     177: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     183: astore_1
     184: goto          297
     187: aload_0
     188: getstatic     #132                // Field ONE_MB_BI:Ljava/math/BigInteger;
     191: invokevirtual #92                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     194: getstatic     #95                 // Field java/math/BigInteger.ZERO:Ljava/math/BigInteger;
     197: invokevirtual #99                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     200: ifle          232
     203: new           #101                // class java/lang/StringBuilder
     206: dup
     207: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
     210: aload_0
     211: getstatic     #132                // Field ONE_MB_BI:Ljava/math/BigInteger;
     214: invokevirtual #92                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     217: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     220: ldc           #134                // String  MB
     222: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     225: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     228: astore_1
     229: goto          297
     232: aload_0
     233: getstatic     #136                // Field ONE_KB_BI:Ljava/math/BigInteger;
     236: invokevirtual #92                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     239: getstatic     #95                 // Field java/math/BigInteger.ZERO:Ljava/math/BigInteger;
     242: invokevirtual #99                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     245: ifle          277
     248: new           #101                // class java/lang/StringBuilder
     251: dup
     252: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
     255: aload_0
     256: getstatic     #136                // Field ONE_KB_BI:Ljava/math/BigInteger;
     259: invokevirtual #92                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     262: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     265: ldc           #138                // String  KB
     267: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     270: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     273: astore_1
     274: goto          297
     277: new           #101                // class java/lang/StringBuilder
     280: dup
     281: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
     284: aload_0
     285: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     288: ldc           #140                // String  bytes
     290: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     293: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     296: astore_1
     297: aload_1
     298: areturn

  public static java.lang.String byteCountToDisplaySize(long);
    Code:
       0: lload_0
       1: invokestatic  #149                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       4: invokestatic  #151                // Method byteCountToDisplaySize:(Ljava/math/BigInteger;)Ljava/lang/String;
       7: areturn

  public static java.util.zip.Checksum checksum(java.io.File, java.util.zip.Checksum) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #159                // String file
       3: invokestatic  #163                // Method requireExistsChecked:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
       6: pop
       7: aload_0
       8: ldc           #159                // String file
      10: invokestatic  #166                // Method requireFile:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
      13: pop
      14: aload_1
      15: ldc           #167                // String checksum
      17: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      20: pop
      21: new           #169                // class java/util/zip/CheckedInputStream
      24: dup
      25: aload_0
      26: invokevirtual #175                // Method java/io/File.toPath:()Ljava/nio/file/Path;
      29: iconst_0
      30: anewarray     #177                // class java/nio/file/OpenOption
      33: invokestatic  #183                // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
      36: aload_1
      37: invokespecial #186                // Method java/util/zip/CheckedInputStream."<init>":(Ljava/io/InputStream;Ljava/util/zip/Checksum;)V
      40: astore_2
      41: aconst_null
      42: astore_3
      43: aload_2
      44: invokestatic  #192                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/IOUtils.consume:(Ljava/io/InputStream;)J
      47: pop2
      48: aload_2
      49: ifnull        124
      52: aload_3
      53: ifnull        74
      56: aload_2
      57: invokevirtual #197                // Method java/io/InputStream.close:()V
      60: goto          124
      63: astore        4
      65: aload_3
      66: aload         4
      68: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      71: goto          124
      74: aload_2
      75: invokevirtual #197                // Method java/io/InputStream.close:()V
      78: goto          124
      81: astore        4
      83: aload         4
      85: astore_3
      86: aload         4
      88: athrow
      89: astore        5
      91: aload_2
      92: ifnull        121
      95: aload_3
      96: ifnull        117
      99: aload_2
     100: invokevirtual #197                // Method java/io/InputStream.close:()V
     103: goto          121
     106: astore        6
     108: aload_3
     109: aload         6
     111: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     114: goto          121
     117: aload_2
     118: invokevirtual #197                // Method java/io/InputStream.close:()V
     121: aload         5
     123: athrow
     124: aload_1
     125: areturn
    Exception table:
       from    to  target type
          56    60    63   Class java/lang/Throwable
          43    48    81   Class java/lang/Throwable
          43    48    89   any
          99   103   106   Class java/lang/Throwable
          81    91    89   any

  public static long checksumCRC32(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #211                // class java/util/zip/CRC32
       4: dup
       5: invokespecial #212                // Method java/util/zip/CRC32."<init>":()V
       8: invokestatic  #214                // Method checksum:(Ljava/io/File;Ljava/util/zip/Checksum;)Ljava/util/zip/Checksum;
      11: invokeinterface #218,  1          // InterfaceMethod java/util/zip/Checksum.getValue:()J
      16: lreturn

  public static void cleanDirectory(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #224                // Method listFiles:(Ljava/io/File;Ljava/io/FileFilter;)[Ljava/io/File;
       5: astore_1
       6: new           #226                // class java/util/ArrayList
       9: dup
      10: invokespecial #227                // Method java/util/ArrayList."<init>":()V
      13: astore_2
      14: aload_1
      15: astore_3
      16: aload_3
      17: arraylength
      18: istore        4
      20: iconst_0
      21: istore        5
      23: iload         5
      25: iload         4
      27: if_icmpge     61
      30: aload_3
      31: iload         5
      33: aaload
      34: astore        6
      36: aload         6
      38: invokestatic  #233                // Method forceDelete:(Ljava/io/File;)V
      41: goto          55
      44: astore        7
      46: aload_2
      47: aload         7
      49: invokeinterface #237,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      54: pop
      55: iinc          5, 1
      58: goto          23
      61: aload_2
      62: invokeinterface #241,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      67: ifne          83
      70: new           #243                // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/IOExceptionList
      73: dup
      74: aload_0
      75: invokevirtual #244                // Method java/io/File.toString:()Ljava/lang/String;
      78: aload_2
      79: invokespecial #247                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/IOExceptionList."<init>":(Ljava/lang/String;Ljava/util/List;)V
      82: athrow
      83: return
    Exception table:
       from    to  target type
          36    41    44   Class java/io/IOException

  private static void cleanDirectoryOnExit(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #224                // Method listFiles:(Ljava/io/File;Ljava/io/FileFilter;)[Ljava/io/File;
       5: astore_1
       6: new           #226                // class java/util/ArrayList
       9: dup
      10: invokespecial #227                // Method java/util/ArrayList."<init>":()V
      13: astore_2
      14: aload_1
      15: astore_3
      16: aload_3
      17: arraylength
      18: istore        4
      20: iconst_0
      21: istore        5
      23: iload         5
      25: iload         4
      27: if_icmpge     61
      30: aload_3
      31: iload         5
      33: aaload
      34: astore        6
      36: aload         6
      38: invokestatic  #258                // Method forceDeleteOnExit:(Ljava/io/File;)V
      41: goto          55
      44: astore        7
      46: aload_2
      47: aload         7
      49: invokeinterface #237,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      54: pop
      55: iinc          5, 1
      58: goto          23
      61: aload_2
      62: invokeinterface #241,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      67: ifne          79
      70: new           #243                // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/IOExceptionList
      73: dup
      74: aload_2
      75: invokespecial #261                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/IOExceptionList."<init>":(Ljava/util/List;)V
      78: athrow
      79: return
    Exception table:
       from    to  target type
          36    41    44   Class java/io/IOException

  public static boolean contentEquals(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnonnull     10
       4: aload_1
       5: ifnonnull     10
       8: iconst_1
       9: ireturn
      10: aload_0
      11: ifnull        18
      14: aload_1
      15: ifnonnull     20
      18: iconst_0
      19: ireturn
      20: aload_0
      21: invokevirtual #266                // Method java/io/File.exists:()Z
      24: istore_2
      25: iload_2
      26: aload_1
      27: invokevirtual #266                // Method java/io/File.exists:()Z
      30: if_icmpeq     35
      33: iconst_0
      34: ireturn
      35: iload_2
      36: ifne          41
      39: iconst_1
      40: ireturn
      41: aload_0
      42: ldc_w         #268                // String file1
      45: invokestatic  #166                // Method requireFile:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
      48: pop
      49: aload_1
      50: ldc_w         #270                // String file2
      53: invokestatic  #166                // Method requireFile:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
      56: pop
      57: aload_0
      58: invokevirtual #273                // Method java/io/File.length:()J
      61: aload_1
      62: invokevirtual #273                // Method java/io/File.length:()J
      65: lcmp
      66: ifeq          71
      69: iconst_0
      70: ireturn
      71: aload_0
      72: invokevirtual #277                // Method java/io/File.getCanonicalFile:()Ljava/io/File;
      75: aload_1
      76: invokevirtual #277                // Method java/io/File.getCanonicalFile:()Ljava/io/File;
      79: invokevirtual #280                // Method java/io/File.equals:(Ljava/lang/Object;)Z
      82: ifeq          87
      85: iconst_1
      86: ireturn
      87: aload_0
      88: invokevirtual #175                // Method java/io/File.toPath:()Ljava/nio/file/Path;
      91: iconst_0
      92: anewarray     #177                // class java/nio/file/OpenOption
      95: invokestatic  #183                // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
      98: astore_3
      99: aconst_null
     100: astore        4
     102: aload_1
     103: invokevirtual #175                // Method java/io/File.toPath:()Ljava/nio/file/Path;
     106: iconst_0
     107: anewarray     #177                // class java/nio/file/OpenOption
     110: invokestatic  #183                // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
     113: astore        5
     115: aconst_null
     116: astore        6
     118: aload_3
     119: aload         5
     121: invokestatic  #283                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/IOUtils.contentEquals:(Ljava/io/InputStream;Ljava/io/InputStream;)Z
     124: istore        7
     126: aload         5
     128: ifnull        161
     131: aload         6
     133: ifnull        156
     136: aload         5
     138: invokevirtual #197                // Method java/io/InputStream.close:()V
     141: goto          161
     144: astore        8
     146: aload         6
     148: aload         8
     150: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     153: goto          161
     156: aload         5
     158: invokevirtual #197                // Method java/io/InputStream.close:()V
     161: aload_3
     162: ifnull        193
     165: aload         4
     167: ifnull        189
     170: aload_3
     171: invokevirtual #197                // Method java/io/InputStream.close:()V
     174: goto          193
     177: astore        8
     179: aload         4
     181: aload         8
     183: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     186: goto          193
     189: aload_3
     190: invokevirtual #197                // Method java/io/InputStream.close:()V
     193: iload         7
     195: ireturn
     196: astore        7
     198: aload         7
     200: astore        6
     202: aload         7
     204: athrow
     205: astore        9
     207: aload         5
     209: ifnull        242
     212: aload         6
     214: ifnull        237
     217: aload         5
     219: invokevirtual #197                // Method java/io/InputStream.close:()V
     222: goto          242
     225: astore        10
     227: aload         6
     229: aload         10
     231: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     234: goto          242
     237: aload         5
     239: invokevirtual #197                // Method java/io/InputStream.close:()V
     242: aload         9
     244: athrow
     245: astore        5
     247: aload         5
     249: astore        4
     251: aload         5
     253: athrow
     254: astore        11
     256: aload_3
     257: ifnull        288
     260: aload         4
     262: ifnull        284
     265: aload_3
     266: invokevirtual #197                // Method java/io/InputStream.close:()V
     269: goto          288
     272: astore        12
     274: aload         4
     276: aload         12
     278: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     281: goto          288
     284: aload_3
     285: invokevirtual #197                // Method java/io/InputStream.close:()V
     288: aload         11
     290: athrow
    Exception table:
       from    to  target type
         136   141   144   Class java/lang/Throwable
         170   174   177   Class java/lang/Throwable
         118   126   196   Class java/lang/Throwable
         118   126   205   any
         217   222   225   Class java/lang/Throwable
         196   207   205   any
         102   161   245   Class java/lang/Throwable
         196   245   245   Class java/lang/Throwable
         102   161   254   any
         265   269   272   Class java/lang/Throwable
         196   256   254   any

  public static boolean contentEqualsIgnoreEOL(java.io.File, java.io.File, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnonnull     10
       4: aload_1
       5: ifnonnull     10
       8: iconst_1
       9: ireturn
      10: aload_0
      11: ifnull        18
      14: aload_1
      15: ifnonnull     20
      18: iconst_0
      19: ireturn
      20: aload_0
      21: invokevirtual #266                // Method java/io/File.exists:()Z
      24: istore_3
      25: iload_3
      26: aload_1
      27: invokevirtual #266                // Method java/io/File.exists:()Z
      30: if_icmpeq     35
      33: iconst_0
      34: ireturn
      35: iload_3
      36: ifne          41
      39: iconst_1
      40: ireturn
      41: aload_0
      42: ldc_w         #268                // String file1
      45: invokestatic  #166                // Method requireFile:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
      48: pop
      49: aload_1
      50: ldc_w         #270                // String file2
      53: invokestatic  #166                // Method requireFile:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
      56: pop
      57: aload_0
      58: invokevirtual #277                // Method java/io/File.getCanonicalFile:()Ljava/io/File;
      61: aload_1
      62: invokevirtual #277                // Method java/io/File.getCanonicalFile:()Ljava/io/File;
      65: invokevirtual #280                // Method java/io/File.equals:(Ljava/lang/Object;)Z
      68: ifeq          73
      71: iconst_1
      72: ireturn
      73: aload_2
      74: invokestatic  #295                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      77: astore        4
      79: new           #297                // class java/io/InputStreamReader
      82: dup
      83: aload_0
      84: invokevirtual #175                // Method java/io/File.toPath:()Ljava/nio/file/Path;
      87: iconst_0
      88: anewarray     #177                // class java/nio/file/OpenOption
      91: invokestatic  #183                // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
      94: aload         4
      96: invokespecial #300                // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
      99: astore        5
     101: aconst_null
     102: astore        6
     104: new           #297                // class java/io/InputStreamReader
     107: dup
     108: aload_1
     109: invokevirtual #175                // Method java/io/File.toPath:()Ljava/nio/file/Path;
     112: iconst_0
     113: anewarray     #177                // class java/nio/file/OpenOption
     116: invokestatic  #183                // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
     119: aload         4
     121: invokespecial #300                // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
     124: astore        7
     126: aconst_null
     127: astore        8
     129: aload         5
     131: aload         7
     133: invokestatic  #303                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/IOUtils.contentEqualsIgnoreEOL:(Ljava/io/Reader;Ljava/io/Reader;)Z
     136: istore        9
     138: aload         7
     140: ifnull        173
     143: aload         8
     145: ifnull        168
     148: aload         7
     150: invokevirtual #306                // Method java/io/Reader.close:()V
     153: goto          173
     156: astore        10
     158: aload         8
     160: aload         10
     162: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     165: goto          173
     168: aload         7
     170: invokevirtual #306                // Method java/io/Reader.close:()V
     173: aload         5
     175: ifnull        208
     178: aload         6
     180: ifnull        203
     183: aload         5
     185: invokevirtual #306                // Method java/io/Reader.close:()V
     188: goto          208
     191: astore        10
     193: aload         6
     195: aload         10
     197: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     200: goto          208
     203: aload         5
     205: invokevirtual #306                // Method java/io/Reader.close:()V
     208: iload         9
     210: ireturn
     211: astore        9
     213: aload         9
     215: astore        8
     217: aload         9
     219: athrow
     220: astore        11
     222: aload         7
     224: ifnull        257
     227: aload         8
     229: ifnull        252
     232: aload         7
     234: invokevirtual #306                // Method java/io/Reader.close:()V
     237: goto          257
     240: astore        12
     242: aload         8
     244: aload         12
     246: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     249: goto          257
     252: aload         7
     254: invokevirtual #306                // Method java/io/Reader.close:()V
     257: aload         11
     259: athrow
     260: astore        7
     262: aload         7
     264: astore        6
     266: aload         7
     268: athrow
     269: astore        13
     271: aload         5
     273: ifnull        306
     276: aload         6
     278: ifnull        301
     281: aload         5
     283: invokevirtual #306                // Method java/io/Reader.close:()V
     286: goto          306
     289: astore        14
     291: aload         6
     293: aload         14
     295: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     298: goto          306
     301: aload         5
     303: invokevirtual #306                // Method java/io/Reader.close:()V
     306: aload         13
     308: athrow
    Exception table:
       from    to  target type
         148   153   156   Class java/lang/Throwable
         183   188   191   Class java/lang/Throwable
         129   138   211   Class java/lang/Throwable
         129   138   220   any
         232   237   240   Class java/lang/Throwable
         211   222   220   any
         104   173   260   Class java/lang/Throwable
         211   260   260   Class java/lang/Throwable
         104   173   269   any
         281   286   289   Class java/lang/Throwable
         211   271   269   any

  public static java.io.File[] convertFileCollectionToFileArray(java.util.Collection<java.io.File>);
    Code:
       0: aload_0
       1: getstatic     #317                // Field EMPTY_FILE_ARRAY:[Ljava/io/File;
       4: invokeinterface #323,  2          // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
       9: checkcast     #228                // class "[Ljava/io/File;"
      12: areturn

  public static void copyDirectory(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokestatic  #330                // Method copyDirectory:(Ljava/io/File;Ljava/io/File;Z)V
       6: return

  public static void copyDirectory(java.io.File, java.io.File, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: iload_2
       4: invokestatic  #335                // Method copyDirectory:(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V
       7: return

  public static void copyDirectory(java.io.File, java.io.File, java.io.FileFilter) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokestatic  #335                // Method copyDirectory:(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z)V
       7: return

  public static void copyDirectory(java.io.File, java.io.File, java.io.FileFilter, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iconst_1
       5: anewarray     #341                // class java/nio/file/CopyOption
       8: dup
       9: iconst_0
      10: getstatic     #344                // Field java/nio/file/StandardCopyOption.REPLACE_EXISTING:Ljava/nio/file/StandardCopyOption;
      13: aastore
      14: invokestatic  #347                // Method copyDirectory:(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Z[Ljava/nio/file/CopyOption;)V
      17: return

  public static void copyDirectory(java.io.File, java.io.File, java.io.FileFilter, boolean, java.nio.file.CopyOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #350                // Method requireFileCopy:(Ljava/io/File;Ljava/io/File;)V
       5: aload_0
       6: ldc_w         #351                // String srcDir
       9: invokestatic  #354                // Method requireDirectory:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
      12: pop
      13: aload_0
      14: aload_1
      15: invokestatic  #357                // Method requireCanonicalPathsNotEquals:(Ljava/io/File;Ljava/io/File;)V
      18: aconst_null
      19: astore        5
      21: aload_0
      22: invokevirtual #360                // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
      25: astore        6
      27: aload_1
      28: invokevirtual #360                // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
      31: astore        7
      33: aload         7
      35: aload         6
      37: invokevirtual #364                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      40: ifeq          128
      43: aload_0
      44: aload_2
      45: invokestatic  #224                // Method listFiles:(Ljava/io/File;Ljava/io/FileFilter;)[Ljava/io/File;
      48: astore        8
      50: aload         8
      52: arraylength
      53: ifle          128
      56: new           #226                // class java/util/ArrayList
      59: dup
      60: aload         8
      62: arraylength
      63: invokespecial #367                // Method java/util/ArrayList."<init>":(I)V
      66: astore        5
      68: aload         8
      70: astore        9
      72: aload         9
      74: arraylength
      75: istore        10
      77: iconst_0
      78: istore        11
      80: iload         11
      82: iload         10
      84: if_icmpge     128
      87: aload         9
      89: iload         11
      91: aaload
      92: astore        12
      94: new           #171                // class java/io/File
      97: dup
      98: aload_1
      99: aload         12
     101: invokevirtual #372                // Method java/io/File.getName:()Ljava/lang/String;
     104: invokespecial #375                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     107: astore        13
     109: aload         5
     111: aload         13
     113: invokevirtual #360                // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
     116: invokeinterface #237,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     121: pop
     122: iinc          11, 1
     125: goto          80
     128: aload_0
     129: aload_1
     130: aload_2
     131: aload         5
     133: iload_3
     134: iload_3
     135: ifeq          146
     138: aload         4
     140: invokestatic  #377                // Method addCopyAttributes:([Ljava/nio/file/CopyOption;)[Ljava/nio/file/CopyOption;
     143: goto          148
     146: aload         4
     148: invokestatic  #381                // Method doCopyDirectory:(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Ljava/util/List;Z[Ljava/nio/file/CopyOption;)V
     151: return

  public static void copyDirectoryToDirectory(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc_w         #392                // String sourceDir
       4: invokestatic  #395                // Method requireDirectoryIfExists:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
       7: pop
       8: aload_1
       9: ldc_w         #397                // String destinationDir
      12: invokestatic  #395                // Method requireDirectoryIfExists:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
      15: pop
      16: aload_0
      17: new           #171                // class java/io/File
      20: dup
      21: aload_1
      22: aload_0
      23: invokevirtual #372                // Method java/io/File.getName:()Ljava/lang/String;
      26: invokespecial #375                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      29: iconst_1
      30: invokestatic  #330                // Method copyDirectory:(Ljava/io/File;Ljava/io/File;Z)V
      33: return

  public static void copyFile(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_2
       3: anewarray     #341                // class java/nio/file/CopyOption
       6: dup
       7: iconst_0
       8: getstatic     #68                 // Field java/nio/file/StandardCopyOption.COPY_ATTRIBUTES:Ljava/nio/file/StandardCopyOption;
      11: aastore
      12: dup
      13: iconst_1
      14: getstatic     #344                // Field java/nio/file/StandardCopyOption.REPLACE_EXISTING:Ljava/nio/file/StandardCopyOption;
      17: aastore
      18: invokestatic  #401                // Method copyFile:(Ljava/io/File;Ljava/io/File;[Ljava/nio/file/CopyOption;)V
      21: return

  public static void copyFile(java.io.File, java.io.File, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: ifeq          25
       6: iconst_2
       7: anewarray     #341                // class java/nio/file/CopyOption
      10: dup
      11: iconst_0
      12: getstatic     #68                 // Field java/nio/file/StandardCopyOption.COPY_ATTRIBUTES:Ljava/nio/file/StandardCopyOption;
      15: aastore
      16: dup
      17: iconst_1
      18: getstatic     #344                // Field java/nio/file/StandardCopyOption.REPLACE_EXISTING:Ljava/nio/file/StandardCopyOption;
      21: aastore
      22: goto          35
      25: iconst_1
      26: anewarray     #341                // class java/nio/file/CopyOption
      29: dup
      30: iconst_0
      31: getstatic     #344                // Field java/nio/file/StandardCopyOption.REPLACE_EXISTING:Ljava/nio/file/StandardCopyOption;
      34: aastore
      35: invokestatic  #401                // Method copyFile:(Ljava/io/File;Ljava/io/File;[Ljava/nio/file/CopyOption;)V
      38: return

  public static void copyFile(java.io.File, java.io.File, boolean, java.nio.file.CopyOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: ifeq          13
       6: aload_3
       7: invokestatic  #377                // Method addCopyAttributes:([Ljava/nio/file/CopyOption;)[Ljava/nio/file/CopyOption;
      10: goto          14
      13: aload_3
      14: invokestatic  #401                // Method copyFile:(Ljava/io/File;Ljava/io/File;[Ljava/nio/file/CopyOption;)V
      17: return

  public static void copyFile(java.io.File, java.io.File, java.nio.file.CopyOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #350                // Method requireFileCopy:(Ljava/io/File;Ljava/io/File;)V
       5: aload_0
       6: ldc_w         #404                // String srcFile
       9: invokestatic  #166                // Method requireFile:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
      12: pop
      13: aload_0
      14: aload_1
      15: invokestatic  #357                // Method requireCanonicalPathsNotEquals:(Ljava/io/File;Ljava/io/File;)V
      18: aload_1
      19: invokestatic  #408                // Method createParentDirectories:(Ljava/io/File;)Ljava/io/File;
      22: pop
      23: aload_1
      24: ldc_w         #409                // String destFile
      27: invokestatic  #412                // Method requireFileIfExists:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
      30: pop
      31: aload_1
      32: invokevirtual #266                // Method java/io/File.exists:()Z
      35: ifeq          45
      38: aload_1
      39: ldc_w         #409                // String destFile
      42: invokestatic  #415                // Method requireCanWrite:(Ljava/io/File;Ljava/lang/String;)V
      45: aload_0
      46: invokevirtual #175                // Method java/io/File.toPath:()Ljava/nio/file/Path;
      49: aload_1
      50: invokevirtual #175                // Method java/io/File.toPath:()Ljava/nio/file/Path;
      53: aload_2
      54: invokestatic  #419                // Method java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
      57: pop
      58: aload_0
      59: aload_1
      60: aload_0
      61: invokevirtual #273                // Method java/io/File.length:()J
      64: aload_1
      65: invokevirtual #273                // Method java/io/File.length:()J
      68: invokestatic  #423                // Method requireEqualSizes:(Ljava/io/File;Ljava/io/File;JJ)V
      71: return

  public static long copyFile(java.io.File, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #175                // Method java/io/File.toPath:()Ljava/nio/file/Path;
       4: iconst_0
       5: anewarray     #177                // class java/nio/file/OpenOption
       8: invokestatic  #183                // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
      11: astore_2
      12: aconst_null
      13: astore_3
      14: aload_2
      15: aload_1
      16: invokestatic  #428                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/IOUtils.copyLarge:(Ljava/io/InputStream;Ljava/io/OutputStream;)J
      19: lstore        4
      21: aload_2
      22: ifnull        51
      25: aload_3
      26: ifnull        47
      29: aload_2
      30: invokevirtual #197                // Method java/io/InputStream.close:()V
      33: goto          51
      36: astore        6
      38: aload_3
      39: aload         6
      41: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      44: goto          51
      47: aload_2
      48: invokevirtual #197                // Method java/io/InputStream.close:()V
      51: lload         4
      53: lreturn
      54: astore        4
      56: aload         4
      58: astore_3
      59: aload         4
      61: athrow
      62: astore        7
      64: aload_2
      65: ifnull        94
      68: aload_3
      69: ifnull        90
      72: aload_2
      73: invokevirtual #197                // Method java/io/InputStream.close:()V
      76: goto          94
      79: astore        8
      81: aload_3
      82: aload         8
      84: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      87: goto          94
      90: aload_2
      91: invokevirtual #197                // Method java/io/InputStream.close:()V
      94: aload         7
      96: athrow
    Exception table:
       from    to  target type
          29    33    36   Class java/lang/Throwable
          14    21    54   Class java/lang/Throwable
          14    21    62   any
          72    76    79   Class java/lang/Throwable
          54    64    62   any

  public static void copyFileToDirectory(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokestatic  #437                // Method copyFileToDirectory:(Ljava/io/File;Ljava/io/File;Z)V
       6: return

  public static void copyFileToDirectory(java.io.File, java.io.File, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc_w         #439                // String sourceFile
       4: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_1
       9: ldc_w         #397                // String destinationDir
      12: invokestatic  #395                // Method requireDirectoryIfExists:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
      15: pop
      16: aload_0
      17: new           #171                // class java/io/File
      20: dup
      21: aload_1
      22: aload_0
      23: invokevirtual #372                // Method java/io/File.getName:()Ljava/lang/String;
      26: invokespecial #375                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      29: iload_2
      30: invokestatic  #441                // Method copyFile:(Ljava/io/File;Ljava/io/File;Z)V
      33: return

  public static void copyInputStreamToFile(java.io.InputStream, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: astore_2
       2: aconst_null
       3: astore_3
       4: aload_2
       5: aload_1
       6: invokestatic  #446                // Method copyToFile:(Ljava/io/InputStream;Ljava/io/File;)V
       9: aload_2
      10: ifnull        85
      13: aload_3
      14: ifnull        35
      17: aload_2
      18: invokevirtual #197                // Method java/io/InputStream.close:()V
      21: goto          85
      24: astore        4
      26: aload_3
      27: aload         4
      29: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      32: goto          85
      35: aload_2
      36: invokevirtual #197                // Method java/io/InputStream.close:()V
      39: goto          85
      42: astore        4
      44: aload         4
      46: astore_3
      47: aload         4
      49: athrow
      50: astore        5
      52: aload_2
      53: ifnull        82
      56: aload_3
      57: ifnull        78
      60: aload_2
      61: invokevirtual #197                // Method java/io/InputStream.close:()V
      64: goto          82
      67: astore        6
      69: aload_3
      70: aload         6
      72: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      75: goto          82
      78: aload_2
      79: invokevirtual #197                // Method java/io/InputStream.close:()V
      82: aload         5
      84: athrow
      85: return
    Exception table:
       from    to  target type
          17    21    24   Class java/lang/Throwable
           4     9    42   Class java/lang/Throwable
           4     9    50   any
          60    64    67   Class java/lang/Throwable
          42    52    50   any

  public static void copyToDirectory(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc_w         #439                // String sourceFile
       4: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: invokevirtual #452                // Method java/io/File.isFile:()Z
      12: ifeq          23
      15: aload_0
      16: aload_1
      17: invokestatic  #454                // Method copyFileToDirectory:(Ljava/io/File;Ljava/io/File;)V
      20: goto          72
      23: aload_0
      24: invokevirtual #457                // Method java/io/File.isDirectory:()Z
      27: ifeq          38
      30: aload_0
      31: aload_1
      32: invokestatic  #459                // Method copyDirectoryToDirectory:(Ljava/io/File;Ljava/io/File;)V
      35: goto          72
      38: new           #461                // class java/io/FileNotFoundException
      41: dup
      42: new           #101                // class java/lang/StringBuilder
      45: dup
      46: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      49: ldc_w         #463                // String The source
      52: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_0
      56: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      59: ldc_w         #465                // String  does not exist
      62: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #468                // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: return

  public static void copyToDirectory(java.lang.Iterable<java.io.File>, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc_w         #472                // String sourceIterable
       4: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: invokeinterface #478,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #483,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          42
      24: aload_2
      25: invokeinterface #487,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #171                // class java/io/File
      33: astore_3
      34: aload_3
      35: aload_1
      36: invokestatic  #454                // Method copyFileToDirectory:(Ljava/io/File;Ljava/io/File;)V
      39: goto          15
      42: return

  public static void copyToFile(java.io.InputStream, java.io.File) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #494                // Method openOutputStream:(Ljava/io/File;)Ljava/io/FileOutputStream;
       4: astore_2
       5: aconst_null
       6: astore_3
       7: aload_0
       8: aload_2
       9: invokestatic  #497                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/IOUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I
      12: pop
      13: aload_2
      14: ifnull        89
      17: aload_3
      18: ifnull        39
      21: aload_2
      22: invokevirtual #498                // Method java/io/OutputStream.close:()V
      25: goto          89
      28: astore        4
      30: aload_3
      31: aload         4
      33: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      36: goto          89
      39: aload_2
      40: invokevirtual #498                // Method java/io/OutputStream.close:()V
      43: goto          89
      46: astore        4
      48: aload         4
      50: astore_3
      51: aload         4
      53: athrow
      54: astore        5
      56: aload_2
      57: ifnull        86
      60: aload_3
      61: ifnull        82
      64: aload_2
      65: invokevirtual #498                // Method java/io/OutputStream.close:()V
      68: goto          86
      71: astore        6
      73: aload_3
      74: aload         6
      76: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      79: goto          86
      82: aload_2
      83: invokevirtual #498                // Method java/io/OutputStream.close:()V
      86: aload         5
      88: athrow
      89: return
    Exception table:
       from    to  target type
          21    25    28   Class java/lang/Throwable
           7    13    46   Class java/lang/Throwable
           7    13    54   any
          64    68    71   Class java/lang/Throwable
          46    56    54   any

  public static void copyURLToFile(java.net.URL, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #507                // Method java/net/URL.openStream:()Ljava/io/InputStream;
       4: astore_2
       5: aconst_null
       6: astore_3
       7: aload_2
       8: aload_1
       9: invokestatic  #509                // Method copyInputStreamToFile:(Ljava/io/InputStream;Ljava/io/File;)V
      12: aload_2
      13: ifnull        88
      16: aload_3
      17: ifnull        38
      20: aload_2
      21: invokevirtual #197                // Method java/io/InputStream.close:()V
      24: goto          88
      27: astore        4
      29: aload_3
      30: aload         4
      32: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      35: goto          88
      38: aload_2
      39: invokevirtual #197                // Method java/io/InputStream.close:()V
      42: goto          88
      45: astore        4
      47: aload         4
      49: astore_3
      50: aload         4
      52: athrow
      53: astore        5
      55: aload_2
      56: ifnull        85
      59: aload_3
      60: ifnull        81
      63: aload_2
      64: invokevirtual #197                // Method java/io/InputStream.close:()V
      67: goto          85
      70: astore        6
      72: aload_3
      73: aload         6
      75: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      78: goto          85
      81: aload_2
      82: invokevirtual #197                // Method java/io/InputStream.close:()V
      85: aload         5
      87: athrow
      88: return
    Exception table:
       from    to  target type
          20    24    27   Class java/lang/Throwable
           7    12    45   Class java/lang/Throwable
           7    12    53   any
          63    67    70   Class java/lang/Throwable
          45    55    53   any

  public static void copyURLToFile(java.net.URL, java.io.File, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #516                // Method java/net/URL.openConnection:()Ljava/net/URLConnection;
       4: astore        4
       6: aload         4
       8: iload_2
       9: invokevirtual #521                // Method java/net/URLConnection.setConnectTimeout:(I)V
      12: aload         4
      14: iload_3
      15: invokevirtual #524                // Method java/net/URLConnection.setReadTimeout:(I)V
      18: aload         4
      20: invokevirtual #527                // Method java/net/URLConnection.getInputStream:()Ljava/io/InputStream;
      23: astore        5
      25: aconst_null
      26: astore        6
      28: aload         5
      30: aload_1
      31: invokestatic  #509                // Method copyInputStreamToFile:(Ljava/io/InputStream;Ljava/io/File;)V
      34: aload         5
      36: ifnull        121
      39: aload         6
      41: ifnull        64
      44: aload         5
      46: invokevirtual #197                // Method java/io/InputStream.close:()V
      49: goto          121
      52: astore        7
      54: aload         6
      56: aload         7
      58: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      61: goto          121
      64: aload         5
      66: invokevirtual #197                // Method java/io/InputStream.close:()V
      69: goto          121
      72: astore        7
      74: aload         7
      76: astore        6
      78: aload         7
      80: athrow
      81: astore        8
      83: aload         5
      85: ifnull        118
      88: aload         6
      90: ifnull        113
      93: aload         5
      95: invokevirtual #197                // Method java/io/InputStream.close:()V
      98: goto          118
     101: astore        9
     103: aload         6
     105: aload         9
     107: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     110: goto          118
     113: aload         5
     115: invokevirtual #197                // Method java/io/InputStream.close:()V
     118: aload         8
     120: athrow
     121: return
    Exception table:
       from    to  target type
          44    49    52   Class java/lang/Throwable
          28    34    72   Class java/lang/Throwable
          28    34    81   any
          93    98   101   Class java/lang/Throwable
          72    83    81   any

  public static java.io.File createParentDirectories(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #535                // Method getParentFile:(Ljava/io/File;)Ljava/io/File;
       4: invokestatic  #538                // Method mkdirs:(Ljava/io/File;)Ljava/io/File;
       7: areturn

  static java.lang.String decodeUrl(java.lang.String);
    Code:
       0: aload_0
       1: astore_1
       2: aload_0
       3: ifnull        245
       6: aload_0
       7: bipush        37
       9: invokevirtual #546                // Method java/lang/String.indexOf:(I)I
      12: iflt          245
      15: aload_0
      16: invokevirtual #549                // Method java/lang/String.length:()I
      19: istore_2
      20: new           #101                // class java/lang/StringBuilder
      23: dup
      24: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      27: astore_3
      28: iload_2
      29: invokestatic  #555                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      32: astore        4
      34: iconst_0
      35: istore        5
      37: iload         5
      39: iload_2
      40: if_icmpge     240
      43: aload_0
      44: iload         5
      46: invokevirtual #559                // Method java/lang/String.charAt:(I)C
      49: bipush        37
      51: if_icmpne     223
      54: aload_0
      55: iload         5
      57: iconst_1
      58: iadd
      59: iload         5
      61: iconst_3
      62: iadd
      63: invokevirtual #563                // Method java/lang/String.substring:(II)Ljava/lang/String;
      66: bipush        16
      68: invokestatic  #569                // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I
      71: i2b
      72: istore        6
      74: aload         4
      76: iload         6
      78: invokevirtual #573                // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      81: pop
      82: iinc          5, 3
      85: iload         5
      87: iload_2
      88: if_icmpge     102
      91: aload_0
      92: iload         5
      94: invokevirtual #559                // Method java/lang/String.charAt:(I)C
      97: bipush        37
      99: if_icmpeq     54
     102: aload         4
     104: invokevirtual #576                // Method java/nio/ByteBuffer.position:()I
     107: ifle          37
     110: aload         4
     112: invokevirtual #580                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     115: pop
     116: aload_3
     117: getstatic     #585                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     120: aload         4
     122: invokevirtual #589                // Method java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
     125: invokevirtual #592                // Method java/nio/CharBuffer.toString:()Ljava/lang/String;
     128: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: pop
     132: aload         4
     134: invokevirtual #595                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     137: pop
     138: goto          37
     141: astore        6
     143: aload         4
     145: invokevirtual #576                // Method java/nio/ByteBuffer.position:()I
     148: ifle          223
     151: aload         4
     153: invokevirtual #580                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     156: pop
     157: aload_3
     158: getstatic     #585                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     161: aload         4
     163: invokevirtual #589                // Method java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
     166: invokevirtual #592                // Method java/nio/CharBuffer.toString:()Ljava/lang/String;
     169: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: pop
     173: aload         4
     175: invokevirtual #595                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     178: pop
     179: goto          223
     182: astore        7
     184: aload         4
     186: invokevirtual #576                // Method java/nio/ByteBuffer.position:()I
     189: ifle          220
     192: aload         4
     194: invokevirtual #580                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     197: pop
     198: aload_3
     199: getstatic     #585                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
     202: aload         4
     204: invokevirtual #589                // Method java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
     207: invokevirtual #592                // Method java/nio/CharBuffer.toString:()Ljava/lang/String;
     210: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     213: pop
     214: aload         4
     216: invokevirtual #595                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     219: pop
     220: aload         7
     222: athrow
     223: aload_3
     224: aload_0
     225: iload         5
     227: iinc          5, 1
     230: invokevirtual #559                // Method java/lang/String.charAt:(I)C
     233: invokevirtual #598                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     236: pop
     237: goto          37
     240: aload_3
     241: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     244: astore_1
     245: aload_1
     246: areturn
    Exception table:
       from    to  target type
          54   102   141   Class java/lang/RuntimeException
          54   102   182   any
         141   143   182   any
         182   184   182   any

  public static java.io.File delete(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #159                // String file
       3: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #175                // Method java/io/File.toPath:()Ljava/nio/file/Path;
      11: invokestatic  #612                // Method java/nio/file/Files.delete:(Ljava/nio/file/Path;)V
      14: aload_0
      15: areturn

  public static void deleteDirectory(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc_w         #614                // String directory
       4: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: invokevirtual #266                // Method java/io/File.exists:()Z
      12: ifne          16
      15: return
      16: aload_0
      17: invokestatic  #618                // Method isSymlink:(Ljava/io/File;)Z
      20: ifne          27
      23: aload_0
      24: invokestatic  #620                // Method cleanDirectory:(Ljava/io/File;)V
      27: aload_0
      28: invokestatic  #622                // Method delete:(Ljava/io/File;)Ljava/io/File;
      31: pop
      32: return

  private static void deleteDirectoryOnExit(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #266                // Method java/io/File.exists:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: invokevirtual #626                // Method java/io/File.deleteOnExit:()V
      12: aload_0
      13: invokestatic  #618                // Method isSymlink:(Ljava/io/File;)Z
      16: ifne          23
      19: aload_0
      20: invokestatic  #628                // Method cleanDirectoryOnExit:(Ljava/io/File;)V
      23: return

  public static boolean deleteQuietly(java.io.File);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #457                // Method java/io/File.isDirectory:()Z
      10: ifeq          17
      13: aload_0
      14: invokestatic  #620                // Method cleanDirectory:(Ljava/io/File;)V
      17: goto          21
      20: astore_1
      21: aload_0
      22: invokevirtual #633                // Method java/io/File.delete:()Z
      25: ireturn
      26: astore_1
      27: iconst_0
      28: ireturn
    Exception table:
       from    to  target type
           6    17    20   Class java/lang/Exception
          21    25    26   Class java/lang/Exception

  public static boolean directoryContains(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc_w         #614                // String directory
       4: invokestatic  #639                // Method requireDirectoryExists:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
       7: pop
       8: aload_1
       9: ifnonnull     14
      12: iconst_0
      13: ireturn
      14: aload_0
      15: invokevirtual #266                // Method java/io/File.exists:()Z
      18: ifeq          28
      21: aload_1
      22: invokevirtual #266                // Method java/io/File.exists:()Z
      25: ifne          30
      28: iconst_0
      29: ireturn
      30: aload_0
      31: invokevirtual #360                // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
      34: aload_1
      35: invokevirtual #360                // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
      38: invokestatic  #644                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/FilenameUtils.directoryContains:(Ljava/lang/String;Ljava/lang/String;)Z
      41: ireturn

  private static void doCopyDirectory(java.io.File, java.io.File, java.io.FileFilter, java.util.List<java.lang.String>, boolean, java.nio.file.CopyOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #224                // Method listFiles:(Ljava/io/File;Ljava/io/FileFilter;)[Ljava/io/File;
       5: astore        6
       7: aload_1
       8: ldc_w         #647                // String destDir
      11: invokestatic  #395                // Method requireDirectoryIfExists:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
      14: pop
      15: aload_1
      16: invokestatic  #538                // Method mkdirs:(Ljava/io/File;)Ljava/io/File;
      19: pop
      20: aload_1
      21: ldc_w         #647                // String destDir
      24: invokestatic  #415                // Method requireCanWrite:(Ljava/io/File;Ljava/lang/String;)V
      27: aload         6
      29: astore        7
      31: aload         7
      33: arraylength
      34: istore        8
      36: iconst_0
      37: istore        9
      39: iload         9
      41: iload         8
      43: if_icmpge     125
      46: aload         7
      48: iload         9
      50: aaload
      51: astore        10
      53: new           #171                // class java/io/File
      56: dup
      57: aload_1
      58: aload         10
      60: invokevirtual #372                // Method java/io/File.getName:()Ljava/lang/String;
      63: invokespecial #375                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      66: astore        11
      68: aload_3
      69: ifnull        86
      72: aload_3
      73: aload         10
      75: invokevirtual #360                // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
      78: invokeinterface #650,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      83: ifne          119
      86: aload         10
      88: invokevirtual #457                // Method java/io/File.isDirectory:()Z
      91: ifeq          110
      94: aload         10
      96: aload         11
      98: aload_2
      99: aload_3
     100: iload         4
     102: aload         5
     104: invokestatic  #381                // Method doCopyDirectory:(Ljava/io/File;Ljava/io/File;Ljava/io/FileFilter;Ljava/util/List;Z[Ljava/nio/file/CopyOption;)V
     107: goto          119
     110: aload         10
     112: aload         11
     114: aload         5
     116: invokestatic  #401                // Method copyFile:(Ljava/io/File;Ljava/io/File;[Ljava/nio/file/CopyOption;)V
     119: iinc          9, 1
     122: goto          39
     125: iload         4
     127: ifeq          135
     130: aload_0
     131: aload_1
     132: invokestatic  #653                // Method setLastModified:(Ljava/io/File;Ljava/io/File;)V
     135: return

  public static void forceDelete(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #159                // String file
       3: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #175                // Method java/io/File.toPath:()Ljava/nio/file/Path;
      11: getstatic     #661                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathUtils.EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
      14: iconst_1
      15: anewarray     #663                // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption
      18: dup
      19: iconst_0
      20: getstatic     #669                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/StandardDeleteOption.OVERRIDE_READ_ONLY:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/StandardDeleteOption;
      23: aastore
      24: invokestatic  #672                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathUtils.delete:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
      27: astore_1
      28: goto          61
      31: astore_2
      32: new           #155                // class java/io/IOException
      35: dup
      36: new           #101                // class java/lang/StringBuilder
      39: dup
      40: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      43: ldc_w         #674                // String Cannot delete file:
      46: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_0
      50: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      53: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: aload_2
      57: invokespecial #677                // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      60: athrow
      61: aload_1
      62: invokeinterface #681,  1          // InterfaceMethod org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters.getFileCounter:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$Counter;
      67: invokeinterface #684,  1          // InterfaceMethod org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$Counter.get:()J
      72: lconst_1
      73: lcmp
      74: ifge          121
      77: aload_1
      78: invokeinterface #687,  1          // InterfaceMethod org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters.getDirectoryCounter:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$Counter;
      83: invokeinterface #684,  1          // InterfaceMethod org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$Counter.get:()J
      88: lconst_1
      89: lcmp
      90: ifge          121
      93: new           #461                // class java/io/FileNotFoundException
      96: dup
      97: new           #101                // class java/lang/StringBuilder
     100: dup
     101: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
     104: ldc_w         #689                // String File does not exist:
     107: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_0
     111: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     114: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     117: invokespecial #468                // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
     120: athrow
     121: return
    Exception table:
       from    to  target type
           7    28    31   Class java/io/IOException

  public static void forceDeleteOnExit(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #159                // String file
       3: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #457                // Method java/io/File.isDirectory:()Z
      11: ifeq          21
      14: aload_0
      15: invokestatic  #694                // Method deleteDirectoryOnExit:(Ljava/io/File;)V
      18: goto          25
      21: aload_0
      22: invokevirtual #626                // Method java/io/File.deleteOnExit:()V
      25: return

  public static void forceMkdir(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #538                // Method mkdirs:(Ljava/io/File;)Ljava/io/File;
       4: pop
       5: return

  public static void forceMkdirParent(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #159                // String file
       3: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokestatic  #535                // Method getParentFile:(Ljava/io/File;)Ljava/io/File;
      11: astore_1
      12: aload_1
      13: ifnonnull     17
      16: return
      17: aload_1
      18: invokestatic  #698                // Method forceMkdir:(Ljava/io/File;)V
      21: return

  public static java.io.File getFile(java.io.File, java.lang.String...);
    Code:
       0: aload_0
       1: ldc_w         #614                // String directory
       4: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_1
       9: ldc_w         #703                // String names
      12: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      15: pop
      16: aload_0
      17: astore_2
      18: aload_1
      19: astore_3
      20: aload_3
      21: arraylength
      22: istore        4
      24: iconst_0
      25: istore        5
      27: iload         5
      29: iload         4
      31: if_icmpge     57
      34: aload_3
      35: iload         5
      37: aaload
      38: astore        6
      40: new           #171                // class java/io/File
      43: dup
      44: aload_2
      45: aload         6
      47: invokespecial #375                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      50: astore_2
      51: iinc          5, 1
      54: goto          27
      57: aload_2
      58: areturn

  public static java.io.File getFile(java.lang.String...);
    Code:
       0: aload_0
       1: ldc_w         #703                // String names
       4: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aconst_null
       9: astore_1
      10: aload_0
      11: astore_2
      12: aload_2
      13: arraylength
      14: istore_3
      15: iconst_0
      16: istore        4
      18: iload         4
      20: iload_3
      21: if_icmpge     64
      24: aload_2
      25: iload         4
      27: aaload
      28: astore        5
      30: aload_1
      31: ifnonnull     47
      34: new           #171                // class java/io/File
      37: dup
      38: aload         5
      40: invokespecial #708                // Method java/io/File."<init>":(Ljava/lang/String;)V
      43: astore_1
      44: goto          58
      47: new           #171                // class java/io/File
      50: dup
      51: aload_1
      52: aload         5
      54: invokespecial #375                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      57: astore_1
      58: iinc          4, 1
      61: goto          18
      64: aload_1
      65: areturn

  private static java.io.File getParentFile(java.io.File);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: aconst_null
       5: goto          12
       8: aload_0
       9: invokevirtual #710                // Method java/io/File.getParentFile:()Ljava/io/File;
      12: areturn

  public static java.io.File getTempDirectory();
    Code:
       0: new           #171                // class java/io/File
       3: dup
       4: invokestatic  #714                // Method getTempDirectoryPath:()Ljava/lang/String;
       7: invokespecial #708                // Method java/io/File."<init>":(Ljava/lang/String;)V
      10: areturn

  public static java.lang.String getTempDirectoryPath();
    Code:
       0: ldc_w         #716                // String java.io.tmpdir
       3: invokestatic  #721                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public static java.io.File getUserDirectory();
    Code:
       0: new           #171                // class java/io/File
       3: dup
       4: invokestatic  #725                // Method getUserDirectoryPath:()Ljava/lang/String;
       7: invokespecial #708                // Method java/io/File."<init>":(Ljava/lang/String;)V
      10: areturn

  public static java.lang.String getUserDirectoryPath();
    Code:
       0: ldc_w         #727                // String user.home
       3: invokestatic  #721                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public static boolean isDirectory(java.io.File, java.nio.file.LinkOption...);
    Code:
       0: aload_0
       1: ifnull        19
       4: aload_0
       5: invokevirtual #175                // Method java/io/File.toPath:()Ljava/nio/file/Path;
       8: aload_1
       9: invokestatic  #731                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public static boolean isEmptyDirectory(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #175                // Method java/io/File.toPath:()Ljava/nio/file/Path;
       4: invokestatic  #736                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathUtils.isEmptyDirectory:(Ljava/nio/file/Path;)Z
       7: ireturn

  public static boolean isFileNewer(java.io.File, java.time.chrono.ChronoLocalDate);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #744                // Method java/time/LocalTime.now:()Ljava/time/LocalTime;
       5: invokestatic  #747                // Method isFileNewer:(Ljava/io/File;Ljava/time/chrono/ChronoLocalDate;Ljava/time/LocalTime;)Z
       8: ireturn

  public static boolean isFileNewer(java.io.File, java.time.chrono.ChronoLocalDate, java.time.LocalTime);
    Code:
       0: aload_1
       1: ldc_w         #750                // String chronoLocalDate
       4: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_2
       9: ldc_w         #752                // String localTime
      12: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      15: pop
      16: aload_0
      17: aload_1
      18: aload_2
      19: invokeinterface #758,  2          // InterfaceMethod java/time/chrono/ChronoLocalDate.atTime:(Ljava/time/LocalTime;)Ljava/time/chrono/ChronoLocalDateTime;
      24: invokestatic  #761                // Method isFileNewer:(Ljava/io/File;Ljava/time/chrono/ChronoLocalDateTime;)Z
      27: ireturn

  public static boolean isFileNewer(java.io.File, java.time.chrono.ChronoLocalDateTime<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #769                // Method java/time/ZoneId.systemDefault:()Ljava/time/ZoneId;
       5: invokestatic  #772                // Method isFileNewer:(Ljava/io/File;Ljava/time/chrono/ChronoLocalDateTime;Ljava/time/ZoneId;)Z
       8: ireturn

  public static boolean isFileNewer(java.io.File, java.time.chrono.ChronoLocalDateTime<?>, java.time.ZoneId);
    Code:
       0: aload_1
       1: ldc_w         #777                // String chronoLocalDateTime
       4: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_2
       9: ldc_w         #779                // String zoneId
      12: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      15: pop
      16: aload_0
      17: aload_1
      18: aload_2
      19: invokeinterface #785,  2          // InterfaceMethod java/time/chrono/ChronoLocalDateTime.atZone:(Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime;
      24: invokestatic  #788                // Method isFileNewer:(Ljava/io/File;Ljava/time/chrono/ChronoZonedDateTime;)Z
      27: ireturn

  public static boolean isFileNewer(java.io.File, java.time.chrono.ChronoZonedDateTime<?>);
    Code:
       0: aload_1
       1: ldc_w         #792                // String chronoZonedDateTime
       4: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: aload_1
      10: invokeinterface #798,  1          // InterfaceMethod java/time/chrono/ChronoZonedDateTime.toInstant:()Ljava/time/Instant;
      15: invokestatic  #801                // Method isFileNewer:(Ljava/io/File;Ljava/time/Instant;)Z
      18: ireturn

  public static boolean isFileNewer(java.io.File, java.util.Date);
    Code:
       0: aload_1
       1: ldc_w         #806                // String date
       4: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: aload_1
      10: invokevirtual #811                // Method java/util/Date.getTime:()J
      13: invokestatic  #814                // Method isFileNewer:(Ljava/io/File;J)Z
      16: ireturn

  public static boolean isFileNewer(java.io.File, java.io.File);
    Code:
       0: aload_1
       1: ldc_w         #817                // String reference
       4: invokestatic  #820                // Method requireExists:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
       7: pop
       8: aload_0
       9: aload_1
      10: invokestatic  #823                // Method lastModifiedUnchecked:(Ljava/io/File;)J
      13: invokestatic  #814                // Method isFileNewer:(Ljava/io/File;J)Z
      16: ireturn

  public static boolean isFileNewer(java.io.File, java.time.Instant);
    Code:
       0: aload_1
       1: ldc_w         #825                // String instant
       4: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: aload_1
      10: invokevirtual #830                // Method java/time/Instant.toEpochMilli:()J
      13: invokestatic  #814                // Method isFileNewer:(Ljava/io/File;J)Z
      16: ireturn

  public static boolean isFileNewer(java.io.File, long);
    Code:
       0: aload_0
       1: ldc           #159                // String file
       3: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #266                // Method java/io/File.exists:()Z
      11: ifeq          27
      14: aload_0
      15: invokestatic  #823                // Method lastModifiedUnchecked:(Ljava/io/File;)J
      18: lload_1
      19: lcmp
      20: ifle          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public static boolean isFileOlder(java.io.File, java.time.chrono.ChronoLocalDate);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #744                // Method java/time/LocalTime.now:()Ljava/time/LocalTime;
       5: invokestatic  #835                // Method isFileOlder:(Ljava/io/File;Ljava/time/chrono/ChronoLocalDate;Ljava/time/LocalTime;)Z
       8: ireturn

  public static boolean isFileOlder(java.io.File, java.time.chrono.ChronoLocalDate, java.time.LocalTime);
    Code:
       0: aload_1
       1: ldc_w         #750                // String chronoLocalDate
       4: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_2
       9: ldc_w         #752                // String localTime
      12: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      15: pop
      16: aload_0
      17: aload_1
      18: aload_2
      19: invokeinterface #758,  2          // InterfaceMethod java/time/chrono/ChronoLocalDate.atTime:(Ljava/time/LocalTime;)Ljava/time/chrono/ChronoLocalDateTime;
      24: invokestatic  #837                // Method isFileOlder:(Ljava/io/File;Ljava/time/chrono/ChronoLocalDateTime;)Z
      27: ireturn

  public static boolean isFileOlder(java.io.File, java.time.chrono.ChronoLocalDateTime<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #769                // Method java/time/ZoneId.systemDefault:()Ljava/time/ZoneId;
       5: invokestatic  #839                // Method isFileOlder:(Ljava/io/File;Ljava/time/chrono/ChronoLocalDateTime;Ljava/time/ZoneId;)Z
       8: ireturn

  public static boolean isFileOlder(java.io.File, java.time.chrono.ChronoLocalDateTime<?>, java.time.ZoneId);
    Code:
       0: aload_1
       1: ldc_w         #777                // String chronoLocalDateTime
       4: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_2
       9: ldc_w         #779                // String zoneId
      12: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      15: pop
      16: aload_0
      17: aload_1
      18: aload_2
      19: invokeinterface #785,  2          // InterfaceMethod java/time/chrono/ChronoLocalDateTime.atZone:(Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime;
      24: invokestatic  #841                // Method isFileOlder:(Ljava/io/File;Ljava/time/chrono/ChronoZonedDateTime;)Z
      27: ireturn

  public static boolean isFileOlder(java.io.File, java.time.chrono.ChronoZonedDateTime<?>);
    Code:
       0: aload_1
       1: ldc_w         #792                // String chronoZonedDateTime
       4: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: aload_1
      10: invokeinterface #798,  1          // InterfaceMethod java/time/chrono/ChronoZonedDateTime.toInstant:()Ljava/time/Instant;
      15: invokestatic  #843                // Method isFileOlder:(Ljava/io/File;Ljava/time/Instant;)Z
      18: ireturn

  public static boolean isFileOlder(java.io.File, java.util.Date);
    Code:
       0: aload_1
       1: ldc_w         #806                // String date
       4: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: aload_1
      10: invokevirtual #811                // Method java/util/Date.getTime:()J
      13: invokestatic  #845                // Method isFileOlder:(Ljava/io/File;J)Z
      16: ireturn

  public static boolean isFileOlder(java.io.File, java.io.File);
    Code:
       0: aload_1
       1: ldc_w         #817                // String reference
       4: invokestatic  #820                // Method requireExists:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
       7: pop
       8: aload_0
       9: aload_1
      10: invokestatic  #823                // Method lastModifiedUnchecked:(Ljava/io/File;)J
      13: invokestatic  #845                // Method isFileOlder:(Ljava/io/File;J)Z
      16: ireturn

  public static boolean isFileOlder(java.io.File, java.time.Instant);
    Code:
       0: aload_1
       1: ldc_w         #825                // String instant
       4: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: aload_1
      10: invokevirtual #830                // Method java/time/Instant.toEpochMilli:()J
      13: invokestatic  #845                // Method isFileOlder:(Ljava/io/File;J)Z
      16: ireturn

  public static boolean isFileOlder(java.io.File, long);
    Code:
       0: aload_0
       1: ldc           #159                // String file
       3: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #266                // Method java/io/File.exists:()Z
      11: ifeq          27
      14: aload_0
      15: invokestatic  #823                // Method lastModifiedUnchecked:(Ljava/io/File;)J
      18: lload_1
      19: lcmp
      20: ifge          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public static boolean isRegularFile(java.io.File, java.nio.file.LinkOption...);
    Code:
       0: aload_0
       1: ifnull        19
       4: aload_0
       5: invokevirtual #175                // Method java/io/File.toPath:()Ljava/nio/file/Path;
       8: aload_1
       9: invokestatic  #848                // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public static boolean isSymlink(java.io.File);
    Code:
       0: aload_0
       1: ifnull        18
       4: aload_0
       5: invokevirtual #175                // Method java/io/File.toPath:()Ljava/nio/file/Path;
       8: invokestatic  #851                // Method java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public static java.util.Iterator<java.io.File> iterateFiles(java.io.File, org.sonarsource.sonarlint.shaded.org.apache.commons.io.filefilter.IOFileFilter, org.sonarsource.sonarlint.shaded.org.apache.commons.io.filefilter.IOFileFilter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #857                // Method listFiles:(Ljava/io/File;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/filefilter/IOFileFilter;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Collection;
       6: invokeinterface #858,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      11: areturn

  public static java.util.Iterator<java.io.File> iterateFiles(java.io.File, java.lang.String[], boolean);
    Code:
       0: aload_0
       1: iload_2
       2: aload_1
       3: invokestatic  #866                // Method streamFiles:(Ljava/io/File;Z[Ljava/lang/String;)Ljava/util/stream/Stream;
       6: invokestatic  #871                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/StreamIterator.iterator:(Ljava/util/stream/Stream;)Ljava/util/Iterator;
       9: areturn
      10: astore_3
      11: new           #873                // class java/io/UncheckedIOException
      14: dup
      15: aload_0
      16: invokevirtual #244                // Method java/io/File.toString:()Ljava/lang/String;
      19: aload_3
      20: invokespecial #876                // Method java/io/UncheckedIOException."<init>":(Ljava/lang/String;Ljava/io/IOException;)V
      23: athrow
    Exception table:
       from    to  target type
           0     9    10   Class java/io/IOException

  public static java.util.Iterator<java.io.File> iterateFilesAndDirs(java.io.File, org.sonarsource.sonarlint.shaded.org.apache.commons.io.filefilter.IOFileFilter, org.sonarsource.sonarlint.shaded.org.apache.commons.io.filefilter.IOFileFilter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #882                // Method listFilesAndDirs:(Ljava/io/File;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/filefilter/IOFileFilter;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/Collection;
       6: invokeinterface #858,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      11: areturn

  public static long lastModified(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #175                // Method java/io/File.toPath:()Ljava/nio/file/Path;
       4: ldc           #159                // String file
       6: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       9: checkcast     #885                // class java/nio/file/Path
      12: iconst_0
      13: anewarray     #887                // class java/nio/file/LinkOption
      16: invokestatic  #891                // Method java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;
      19: invokevirtual #896                // Method java/nio/file/attribute/FileTime.toMillis:()J
      22: lreturn

  public static long lastModifiedUnchecked(java.io.File);
    Code:
       0: aload_0
       1: invokestatic  #898                // Method lastModified:(Ljava/io/File;)J
       4: lreturn
       5: astore_1
       6: new           #873                // class java/io/UncheckedIOException
       9: dup
      10: aload_0
      11: invokevirtual #244                // Method java/io/File.toString:()Ljava/lang/String;
      14: aload_1
      15: invokespecial #876                // Method java/io/UncheckedIOException."<init>":(Ljava/lang/String;Ljava/io/IOException;)V
      18: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/io/IOException

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.io.LineIterator lineIterator(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #903                // Method lineIterator:(Ljava/io/File;Ljava/lang/String;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/LineIterator;
       5: areturn

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.io.LineIterator lineIterator(java.io.File, java.lang.String) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokestatic  #907                // Method openInputStream:(Ljava/io/File;)Ljava/io/FileInputStream;
       6: astore_2
       7: aload_2
       8: aload_1
       9: invokestatic  #910                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/IOUtils.lineIterator:(Ljava/io/InputStream;Ljava/lang/String;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/LineIterator;
      12: areturn
      13: astore_3
      14: aload_2
      15: aload_3
      16: dup
      17: invokevirtual #914                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: pop
      21: invokedynamic #930,  0            // InvokeDynamic #0:accept:(Ljava/lang/Exception;)Ljava/util/function/Consumer;
      26: invokestatic  #934                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/IOUtils.closeQuietly:(Ljava/io/Closeable;Ljava/util/function/Consumer;)V
      29: aload_3
      30: athrow
    Exception table:
       from    to  target type
           2    12    13   Class java/io/IOException
           2    12    13   Class java/lang/RuntimeException

  private static org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.AccumulatorPathVisitor listAccumulate(java.io.File, org.sonarsource.sonarlint.shaded.org.apache.commons.io.filefilter.IOFileFilter, org.sonarsource.sonarlint.shaded.org.apache.commons.io.filefilter.IOFileFilter) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnull        8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: istore_3
      10: new           #939                // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/filefilter/FileEqualsFileFilter
      13: dup
      14: aload_0
      15: invokespecial #941                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/filefilter/FileEqualsFileFilter."<init>":(Ljava/io/File;)V
      18: astore        4
      20: iload_3
      21: ifeq          33
      24: aload         4
      26: aload_2
      27: invokevirtual #945                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/filefilter/FileEqualsFileFilter.or:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/filefilter/IOFileFilter;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/filefilter/IOFileFilter;
      30: goto          35
      33: aload         4
      35: astore        5
      37: new           #949                // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/AccumulatorPathVisitor
      40: dup
      41: invokestatic  #953                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters.noopPathCounters:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
      44: aload_1
      45: aload         5
      47: invokespecial #956                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/AccumulatorPathVisitor."<init>":(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathFilter;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathFilter;)V
      50: astore        6
      52: aload_0
      53: invokevirtual #175                // Method java/io/File.toPath:()Ljava/nio/file/Path;
      56: invokestatic  #962                // Method java/util/Collections.emptySet:()Ljava/util/Set;
      59: iload_3
      60: invokestatic  #966                // Method toMaxDepth:(Z)I
      63: aload         6
      65: invokestatic  #970                // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;
      68: pop
      69: aload         6
      71: areturn

  private static java.io.File[] listFiles(java.io.File, java.io.FileFilter) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc_w         #614                // String directory
       4: invokestatic  #639                // Method requireDirectoryExists:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
       7: pop
       8: aload_1
       9: ifnonnull     19
      12: aload_0
      13: invokevirtual #980                // Method java/io/File.listFiles:()[Ljava/io/File;
      16: goto          24
      19: aload_0
      20: aload_1
      21: invokevirtual #983                // Method java/io/File.listFiles:(Ljava/io/FileFilter;)[Ljava/io/File;
      24: astore_2
      25: aload_2
      26: ifnonnull     57
      29: new           #155                // class java/io/IOException
      32: dup
      33: new           #101                // class java/lang/StringBuilder
      36: dup
      37: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      40: ldc_w         #985                // String Unknown I/O error listing contents of directory:
      43: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #986                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_2
      58: areturn

  public static java.util.Collection<java.io.File> listFiles(java.io.File, org.sonarsource.sonarlint.shaded.org.apache.commons.io.filefilter.IOFileFilter, org.sonarsource.sonarlint.shaded.org.apache.commons.io.filefilter.IOFileFilter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #989                // Method listAccumulate:(Ljava/io/File;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/filefilter/IOFileFilter;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/filefilter/IOFileFilter;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/AccumulatorPathVisitor;
       6: astore_3
       7: aload_3
       8: invokevirtual #993                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/AccumulatorPathVisitor.getFileList:()Ljava/util/List;
      11: invokeinterface #996,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      16: invokedynamic #1008,  0           // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      21: invokeinterface #1014,  2         // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      26: invokestatic  #1020               // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      29: invokeinterface #1024,  2         // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      34: checkcast     #319                // class java/util/Collection
      37: areturn
      38: astore_3
      39: new           #873                // class java/io/UncheckedIOException
      42: dup
      43: aload_0
      44: invokevirtual #244                // Method java/io/File.toString:()Ljava/lang/String;
      47: aload_3
      48: invokespecial #876                // Method java/io/UncheckedIOException."<init>":(Ljava/lang/String;Ljava/io/IOException;)V
      51: athrow
    Exception table:
       from    to  target type
           0    37    38   Class java/io/IOException

  public static java.util.Collection<java.io.File> listFiles(java.io.File, java.lang.String[], boolean);
    Code:
       0: aload_0
       1: iload_2
       2: aload_1
       3: invokestatic  #866                // Method streamFiles:(Ljava/io/File;Z[Ljava/lang/String;)Ljava/util/stream/Stream;
       6: invokestatic  #1029               // Method toList:(Ljava/util/stream/Stream;)Ljava/util/List;
       9: areturn
      10: astore_3
      11: new           #873                // class java/io/UncheckedIOException
      14: dup
      15: aload_0
      16: invokevirtual #244                // Method java/io/File.toString:()Ljava/lang/String;
      19: aload_3
      20: invokespecial #876                // Method java/io/UncheckedIOException."<init>":(Ljava/lang/String;Ljava/io/IOException;)V
      23: athrow
    Exception table:
       from    to  target type
           0     9    10   Class java/io/IOException

  public static java.util.Collection<java.io.File> listFilesAndDirs(java.io.File, org.sonarsource.sonarlint.shaded.org.apache.commons.io.filefilter.IOFileFilter, org.sonarsource.sonarlint.shaded.org.apache.commons.io.filefilter.IOFileFilter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #989                // Method listAccumulate:(Ljava/io/File;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/filefilter/IOFileFilter;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/filefilter/IOFileFilter;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/AccumulatorPathVisitor;
       6: astore_3
       7: aload_3
       8: invokevirtual #993                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/AccumulatorPathVisitor.getFileList:()Ljava/util/List;
      11: astore        4
      13: aload         4
      15: aload_3
      16: invokevirtual #1032               // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/AccumulatorPathVisitor.getDirList:()Ljava/util/List;
      19: invokeinterface #1036,  2         // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      24: pop
      25: aload         4
      27: invokeinterface #996,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      32: invokedynamic #1008,  0           // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      37: invokeinterface #1014,  2         // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      42: invokestatic  #1020               // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      45: invokeinterface #1024,  2         // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      50: checkcast     #319                // class java/util/Collection
      53: areturn
      54: astore_3
      55: new           #873                // class java/io/UncheckedIOException
      58: dup
      59: aload_0
      60: invokevirtual #244                // Method java/io/File.toString:()Ljava/lang/String;
      63: aload_3
      64: invokespecial #876                // Method java/io/UncheckedIOException."<init>":(Ljava/lang/String;Ljava/io/IOException;)V
      67: athrow
    Exception table:
       from    to  target type
           0    53    54   Class java/io/IOException

  private static java.io.File mkdirs(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnull        52
       4: aload_0
       5: invokevirtual #1040               // Method java/io/File.mkdirs:()Z
       8: ifne          52
      11: aload_0
      12: invokevirtual #457                // Method java/io/File.isDirectory:()Z
      15: ifne          52
      18: new           #155                // class java/io/IOException
      21: dup
      22: new           #101                // class java/lang/StringBuilder
      25: dup
      26: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      29: ldc_w         #1042               // String Cannot create directory \'
      32: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: ldc_w         #1044               // String \'.
      42: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #986                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_0
      53: areturn

  public static void moveDirectory(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1048               // Method validateMoveParameters:(Ljava/io/File;Ljava/io/File;)V
       5: aload_0
       6: ldc_w         #351                // String srcDir
       9: invokestatic  #354                // Method requireDirectory:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
      12: pop
      13: aload_1
      14: ldc_w         #647                // String destDir
      17: invokestatic  #1051               // Method requireAbsent:(Ljava/io/File;Ljava/lang/String;)V
      20: aload_0
      21: aload_1
      22: invokevirtual #1054               // Method java/io/File.renameTo:(Ljava/io/File;)Z
      25: ifne          159
      28: aload_1
      29: invokevirtual #360                // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
      32: new           #101                // class java/lang/StringBuilder
      35: dup
      36: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      39: aload_0
      40: invokevirtual #360                // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
      43: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: getstatic     #1057               // Field java/io/File.separator:Ljava/lang/String;
      49: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokevirtual #364                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      58: ifeq          99
      61: new           #155                // class java/io/IOException
      64: dup
      65: new           #101                // class java/lang/StringBuilder
      68: dup
      69: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      72: ldc_w         #1059               // String Cannot move directory:
      75: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_0
      79: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      82: ldc_w         #1061               // String  to a subdirectory of itself:
      85: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_1
      89: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      92: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: invokespecial #986                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      98: athrow
      99: aload_0
     100: aload_1
     101: invokestatic  #1063               // Method copyDirectory:(Ljava/io/File;Ljava/io/File;)V
     104: aload_0
     105: invokestatic  #1065               // Method deleteDirectory:(Ljava/io/File;)V
     108: aload_0
     109: invokevirtual #266                // Method java/io/File.exists:()Z
     112: ifeq          159
     115: new           #155                // class java/io/IOException
     118: dup
     119: new           #101                // class java/lang/StringBuilder
     122: dup
     123: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
     126: ldc_w         #1067               // String Failed to delete original directory \'
     129: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload_0
     133: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     136: ldc_w         #1069               // String \' after copy to \'
     139: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: aload_1
     143: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     146: ldc_w         #1071               // String \'
     149: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     155: invokespecial #986                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     158: athrow
     159: return

  public static void moveDirectoryToDirectory(java.io.File, java.io.File, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1048               // Method validateMoveParameters:(Ljava/io/File;Ljava/io/File;)V
       5: aload_1
       6: invokevirtual #457                // Method java/io/File.isDirectory:()Z
       9: ifne          106
      12: aload_1
      13: invokevirtual #266                // Method java/io/File.exists:()Z
      16: ifeq          53
      19: new           #155                // class java/io/IOException
      22: dup
      23: new           #101                // class java/lang/StringBuilder
      26: dup
      27: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      30: ldc_w         #1074               // String Destination \'
      33: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_1
      37: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: ldc_w         #1076               // String \' is not a directory
      43: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #986                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: iload_2
      54: ifne          101
      57: new           #461                // class java/io/FileNotFoundException
      60: dup
      61: new           #101                // class java/lang/StringBuilder
      64: dup
      65: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      68: ldc_w         #1078               // String Destination directory \'
      71: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_1
      75: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      78: ldc_w         #1080               // String \' does not exist [createDestDir=
      81: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: iconst_0
      85: invokevirtual #1083               // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      88: ldc_w         #1085               // String ]
      91: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: invokespecial #468                // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
     100: athrow
     101: aload_1
     102: invokestatic  #538                // Method mkdirs:(Ljava/io/File;)Ljava/io/File;
     105: pop
     106: aload_0
     107: new           #171                // class java/io/File
     110: dup
     111: aload_1
     112: aload_0
     113: invokevirtual #372                // Method java/io/File.getName:()Ljava/lang/String;
     116: invokespecial #375                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     119: invokestatic  #1087               // Method moveDirectory:(Ljava/io/File;Ljava/io/File;)V
     122: return

  public static void moveFile(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: anewarray     #341                // class java/nio/file/CopyOption
       6: dup
       7: iconst_0
       8: getstatic     #68                 // Field java/nio/file/StandardCopyOption.COPY_ATTRIBUTES:Ljava/nio/file/StandardCopyOption;
      11: aastore
      12: invokestatic  #1091               // Method moveFile:(Ljava/io/File;Ljava/io/File;[Ljava/nio/file/CopyOption;)V
      15: return

  public static void moveFile(java.io.File, java.io.File, java.nio.file.CopyOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1048               // Method validateMoveParameters:(Ljava/io/File;Ljava/io/File;)V
       5: aload_0
       6: ldc_w         #404                // String srcFile
       9: invokestatic  #166                // Method requireFile:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
      12: pop
      13: aload_1
      14: aconst_null
      15: invokestatic  #1051               // Method requireAbsent:(Ljava/io/File;Ljava/lang/String;)V
      18: aload_0
      19: aload_1
      20: invokevirtual #1054               // Method java/io/File.renameTo:(Ljava/io/File;)Z
      23: istore_3
      24: iload_3
      25: ifne          90
      28: aload_0
      29: aload_1
      30: aload_2
      31: invokestatic  #401                // Method copyFile:(Ljava/io/File;Ljava/io/File;[Ljava/nio/file/CopyOption;)V
      34: aload_0
      35: invokevirtual #633                // Method java/io/File.delete:()Z
      38: ifne          90
      41: aload_1
      42: invokestatic  #1093               // Method deleteQuietly:(Ljava/io/File;)Z
      45: pop
      46: new           #155                // class java/io/IOException
      49: dup
      50: new           #101                // class java/lang/StringBuilder
      53: dup
      54: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      57: ldc_w         #1095               // String Failed to delete original file \'
      60: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_0
      64: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: ldc_w         #1069               // String \' after copy to \'
      70: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_1
      74: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      77: ldc_w         #1071               // String \'
      80: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokespecial #986                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      89: athrow
      90: return

  public static void moveFileToDirectory(java.io.File, java.io.File, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1048               // Method validateMoveParameters:(Ljava/io/File;Ljava/io/File;)V
       5: aload_1
       6: invokevirtual #266                // Method java/io/File.exists:()Z
       9: ifne          21
      12: iload_2
      13: ifeq          21
      16: aload_1
      17: invokestatic  #538                // Method mkdirs:(Ljava/io/File;)Ljava/io/File;
      20: pop
      21: aload_1
      22: ldc_w         #647                // String destDir
      25: invokestatic  #163                // Method requireExistsChecked:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
      28: pop
      29: aload_1
      30: ldc_w         #647                // String destDir
      33: invokestatic  #354                // Method requireDirectory:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
      36: pop
      37: aload_0
      38: new           #171                // class java/io/File
      41: dup
      42: aload_1
      43: aload_0
      44: invokevirtual #372                // Method java/io/File.getName:()Ljava/lang/String;
      47: invokespecial #375                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      50: invokestatic  #1099               // Method moveFile:(Ljava/io/File;Ljava/io/File;)V
      53: return

  public static void moveToDirectory(java.io.File, java.io.File, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1048               // Method validateMoveParameters:(Ljava/io/File;Ljava/io/File;)V
       5: aload_0
       6: invokevirtual #457                // Method java/io/File.isDirectory:()Z
       9: ifeq          21
      12: aload_0
      13: aload_1
      14: iload_2
      15: invokestatic  #1102               // Method moveDirectoryToDirectory:(Ljava/io/File;Ljava/io/File;Z)V
      18: goto          27
      21: aload_0
      22: aload_1
      23: iload_2
      24: invokestatic  #1104               // Method moveFileToDirectory:(Ljava/io/File;Ljava/io/File;Z)V
      27: return

  public static java.io.FileInputStream openInputStream(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #159                // String file
       3: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #1106               // class java/io/FileInputStream
      10: dup
      11: aload_0
      12: invokespecial #1107               // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      15: areturn

  public static java.io.FileOutputStream openOutputStream(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokestatic  #1110               // Method openOutputStream:(Ljava/io/File;Z)Ljava/io/FileOutputStream;
       5: areturn

  public static java.io.FileOutputStream openOutputStream(java.io.File, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #159                // String file
       3: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #266                // Method java/io/File.exists:()Z
      11: ifeq          30
      14: aload_0
      15: ldc           #159                // String file
      17: invokestatic  #166                // Method requireFile:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
      20: pop
      21: aload_0
      22: ldc           #159                // String file
      24: invokestatic  #415                // Method requireCanWrite:(Ljava/io/File;Ljava/lang/String;)V
      27: goto          35
      30: aload_0
      31: invokestatic  #408                // Method createParentDirectories:(Ljava/io/File;)Ljava/io/File;
      34: pop
      35: new           #1112               // class java/io/FileOutputStream
      38: dup
      39: aload_0
      40: iload_1
      41: invokespecial #1115               // Method java/io/FileOutputStream."<init>":(Ljava/io/File;Z)V
      44: areturn

  public static byte[] readFileToByteArray(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #907                // Method openInputStream:(Ljava/io/File;)Ljava/io/FileInputStream;
       4: astore_1
       5: aconst_null
       6: astore_2
       7: aload_0
       8: invokevirtual #273                // Method java/io/File.length:()J
      11: lstore_3
      12: lload_3
      13: lconst_0
      14: lcmp
      15: ifle          26
      18: aload_1
      19: lload_3
      20: invokestatic  #1121               // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/IOUtils.toByteArray:(Ljava/io/InputStream;J)[B
      23: goto          30
      26: aload_1
      27: invokestatic  #1124               // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/IOUtils.toByteArray:(Ljava/io/InputStream;)[B
      30: astore        5
      32: aload_1
      33: ifnull        62
      36: aload_2
      37: ifnull        58
      40: aload_1
      41: invokevirtual #197                // Method java/io/InputStream.close:()V
      44: goto          62
      47: astore        6
      49: aload_2
      50: aload         6
      52: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      55: goto          62
      58: aload_1
      59: invokevirtual #197                // Method java/io/InputStream.close:()V
      62: aload         5
      64: areturn
      65: astore_3
      66: aload_3
      67: astore_2
      68: aload_3
      69: athrow
      70: astore        7
      72: aload_1
      73: ifnull        102
      76: aload_2
      77: ifnull        98
      80: aload_1
      81: invokevirtual #197                // Method java/io/InputStream.close:()V
      84: goto          102
      87: astore        8
      89: aload_2
      90: aload         8
      92: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      95: goto          102
      98: aload_1
      99: invokevirtual #197                // Method java/io/InputStream.close:()V
     102: aload         7
     104: athrow
    Exception table:
       from    to  target type
          40    44    47   Class java/lang/Throwable
           7    32    65   Class java/lang/Throwable
           7    32    70   any
          80    84    87   Class java/lang/Throwable
          65    72    70   any

  public static java.lang.String readFileToString(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #1134               // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       4: invokestatic  #1137               // Method readFileToString:(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/lang/String;
       7: areturn

  public static java.lang.String readFileToString(java.io.File, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #907                // Method openInputStream:(Ljava/io/File;)Ljava/io/FileInputStream;
       4: astore_2
       5: aconst_null
       6: astore_3
       7: aload_2
       8: aload_1
       9: invokestatic  #1140               // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;
      12: invokestatic  #1143               // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/IOUtils.toString:(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Ljava/lang/String;
      15: astore        4
      17: aload_2
      18: ifnull        47
      21: aload_3
      22: ifnull        43
      25: aload_2
      26: invokevirtual #197                // Method java/io/InputStream.close:()V
      29: goto          47
      32: astore        5
      34: aload_3
      35: aload         5
      37: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      40: goto          47
      43: aload_2
      44: invokevirtual #197                // Method java/io/InputStream.close:()V
      47: aload         4
      49: areturn
      50: astore        4
      52: aload         4
      54: astore_3
      55: aload         4
      57: athrow
      58: astore        6
      60: aload_2
      61: ifnull        90
      64: aload_3
      65: ifnull        86
      68: aload_2
      69: invokevirtual #197                // Method java/io/InputStream.close:()V
      72: goto          90
      75: astore        7
      77: aload_3
      78: aload         7
      80: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      83: goto          90
      86: aload_2
      87: invokevirtual #197                // Method java/io/InputStream.close:()V
      90: aload         6
      92: athrow
    Exception table:
       from    to  target type
          25    29    32   Class java/lang/Throwable
           7    17    50   Class java/lang/Throwable
           7    17    58   any
          68    72    75   Class java/lang/Throwable
          50    60    58   any

  public static java.lang.String readFileToString(java.io.File, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #295                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       5: invokestatic  #1137               // Method readFileToString:(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/lang/String;
       8: areturn

  public static java.util.List<java.lang.String> readLines(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #1134               // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       4: invokestatic  #1150               // Method readLines:(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/util/List;
       7: areturn

  public static java.util.List<java.lang.String> readLines(java.io.File, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #907                // Method openInputStream:(Ljava/io/File;)Ljava/io/FileInputStream;
       4: astore_2
       5: aconst_null
       6: astore_3
       7: aload_2
       8: aload_1
       9: invokestatic  #1140               // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;
      12: invokestatic  #1154               // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/IOUtils.readLines:(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Ljava/util/List;
      15: astore        4
      17: aload_2
      18: ifnull        47
      21: aload_3
      22: ifnull        43
      25: aload_2
      26: invokevirtual #197                // Method java/io/InputStream.close:()V
      29: goto          47
      32: astore        5
      34: aload_3
      35: aload         5
      37: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      40: goto          47
      43: aload_2
      44: invokevirtual #197                // Method java/io/InputStream.close:()V
      47: aload         4
      49: areturn
      50: astore        4
      52: aload         4
      54: astore_3
      55: aload         4
      57: athrow
      58: astore        6
      60: aload_2
      61: ifnull        90
      64: aload_3
      65: ifnull        86
      68: aload_2
      69: invokevirtual #197                // Method java/io/InputStream.close:()V
      72: goto          90
      75: astore        7
      77: aload_3
      78: aload         7
      80: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      83: goto          90
      86: aload_2
      87: invokevirtual #197                // Method java/io/InputStream.close:()V
      90: aload         6
      92: athrow
    Exception table:
       from    to  target type
          25    29    32   Class java/lang/Throwable
           7    17    50   Class java/lang/Throwable
           7    17    58   any
          68    72    75   Class java/lang/Throwable
          50    60    58   any

  public static java.util.List<java.lang.String> readLines(java.io.File, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #295                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       5: invokestatic  #1150               // Method readLines:(Ljava/io/File;Ljava/nio/charset/Charset;)Ljava/util/List;
       8: areturn

  private static void requireAbsent(java.io.File, java.lang.String) throws org.sonarsource.sonarlint.shaded.org.apache.commons.io.FileExistsException;
    Code:
       0: aload_0
       1: invokevirtual #266                // Method java/io/File.exists:()Z
       4: ifeq          33
       7: new           #1158               // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/FileExistsException
      10: dup
      11: ldc_w         #1160               // String File element in parameter \'%s\' already exists: \'%s\'
      14: iconst_2
      15: anewarray     #4                  // class java/lang/Object
      18: dup
      19: iconst_0
      20: aload_1
      21: aastore
      22: dup
      23: iconst_1
      24: aload_0
      25: aastore
      26: invokestatic  #1164               // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      29: invokespecial #1165               // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/FileExistsException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: return

  private static void requireCanonicalPathsNotEquals(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #360                // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokevirtual #360                // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
      10: invokevirtual #1166               // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      13: ifeq          46
      16: new           #1168               // class java/lang/IllegalArgumentException
      19: dup
      20: ldc_w         #1170               // String File canonical paths are equal: \'%s\' (file1=\'%s\', file2=\'%s\')
      23: iconst_3
      24: anewarray     #4                  // class java/lang/Object
      27: dup
      28: iconst_0
      29: aload_2
      30: aastore
      31: dup
      32: iconst_1
      33: aload_0
      34: aastore
      35: dup
      36: iconst_2
      37: aload_1
      38: aastore
      39: invokestatic  #1164               // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      42: invokespecial #1171               // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: return

  private static void requireCanWrite(java.io.File, java.lang.String);
    Code:
       0: aload_0
       1: ldc           #159                // String file
       3: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #1175               // Method java/io/File.canWrite:()Z
      11: ifne          58
      14: new           #1168               // class java/lang/IllegalArgumentException
      17: dup
      18: new           #101                // class java/lang/StringBuilder
      21: dup
      22: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      25: ldc_w         #1177               // String File parameter \'
      28: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc_w         #1179               // String  is not writable: \'
      38: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: ldc_w         #1071               // String \'
      48: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokespecial #1171               // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: return

  private static java.io.File requireDirectory(java.io.File, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       5: pop
       6: aload_0
       7: invokevirtual #457                // Method java/io/File.isDirectory:()Z
      10: ifne          57
      13: new           #1168               // class java/lang/IllegalArgumentException
      16: dup
      17: new           #101                // class java/lang/StringBuilder
      20: dup
      21: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      24: ldc_w         #1181               // String Parameter \'
      27: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc_w         #1183               // String \' is not a directory: \'
      37: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: ldc_w         #1071               // String \'
      47: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #1171               // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_0
      58: areturn

  private static java.io.File requireDirectoryExists(java.io.File, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #820                // Method requireExists:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
       5: pop
       6: aload_0
       7: aload_1
       8: invokestatic  #354                // Method requireDirectory:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
      11: pop
      12: aload_0
      13: areturn

  private static java.io.File requireDirectoryIfExists(java.io.File, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       5: pop
       6: aload_0
       7: invokevirtual #266                // Method java/io/File.exists:()Z
      10: ifeq          19
      13: aload_0
      14: aload_1
      15: invokestatic  #354                // Method requireDirectory:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
      18: pop
      19: aload_0
      20: areturn

  private static void requireEqualSizes(java.io.File, java.io.File, long, long) throws java.io.IOException;
    Code:
       0: lload_2
       1: lload         4
       3: lcmp
       4: ifeq          66
       7: new           #155                // class java/io/IOException
      10: dup
      11: new           #101                // class java/lang/StringBuilder
      14: dup
      15: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      18: ldc_w         #1185               // String Failed to copy full contents from \'
      21: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: ldc_w         #1187               // String \' to \'
      31: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      38: ldc_w         #1189               // String \' Expected length:
      41: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: lload_2
      45: invokevirtual #1192               // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      48: ldc_w         #1194               // String  Actual:
      51: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: lload         4
      56: invokevirtual #1192               // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      59: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokespecial #986                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: return

  private static java.io.File requireExists(java.io.File, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       5: pop
       6: aload_0
       7: invokevirtual #266                // Method java/io/File.exists:()Z
      10: ifne          57
      13: new           #1168               // class java/lang/IllegalArgumentException
      16: dup
      17: new           #101                // class java/lang/StringBuilder
      20: dup
      21: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      24: ldc_w         #1198               // String File system element for parameter \'
      27: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc_w         #1200               // String \' does not exist: \'
      37: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: ldc_w         #1071               // String \'
      47: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #1171               // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_0
      58: areturn

  private static java.io.File requireExistsChecked(java.io.File, java.lang.String) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       5: pop
       6: aload_0
       7: invokevirtual #266                // Method java/io/File.exists:()Z
      10: ifne          57
      13: new           #461                // class java/io/FileNotFoundException
      16: dup
      17: new           #101                // class java/lang/StringBuilder
      20: dup
      21: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      24: ldc_w         #1198               // String File system element for parameter \'
      27: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc_w         #1200               // String \' does not exist: \'
      37: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: ldc_w         #1071               // String \'
      47: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #468                // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_0
      58: areturn

  private static java.io.File requireFile(java.io.File, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       5: pop
       6: aload_0
       7: invokevirtual #452                // Method java/io/File.isFile:()Z
      10: ifne          51
      13: new           #1168               // class java/lang/IllegalArgumentException
      16: dup
      17: new           #101                // class java/lang/StringBuilder
      20: dup
      21: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      24: ldc_w         #1181               // String Parameter \'
      27: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc_w         #1203               // String \' is not a file:
      37: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokespecial #1171               // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: aload_0
      52: areturn

  private static void requireFileCopy(java.io.File, java.io.File) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: ldc_w         #1204               // String source
       4: invokestatic  #163                // Method requireExistsChecked:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
       7: pop
       8: aload_1
       9: ldc_w         #1205               // String destination
      12: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      15: pop
      16: return

  private static java.io.File requireFileIfExists(java.io.File, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       5: pop
       6: aload_0
       7: invokevirtual #266                // Method java/io/File.exists:()Z
      10: ifeq          21
      13: aload_0
      14: aload_1
      15: invokestatic  #166                // Method requireFile:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
      18: goto          22
      21: aload_0
      22: areturn

  private static void setLastModified(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc_w         #439                // String sourceFile
       4: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_1
       9: aload_0
      10: invokestatic  #898                // Method lastModified:(Ljava/io/File;)J
      13: invokestatic  #1208               // Method setLastModified:(Ljava/io/File;J)V
      16: return

  private static void setLastModified(java.io.File, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #159                // String file
       3: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: lload_1
       9: invokevirtual #1212               // Method java/io/File.setLastModified:(J)Z
      12: ifne          44
      15: new           #155                // class java/io/IOException
      18: dup
      19: ldc_w         #1214               // String Failed setLastModified(%s) on \'%s\'
      22: iconst_2
      23: anewarray     #4                  // class java/lang/Object
      26: dup
      27: iconst_0
      28: lload_1
      29: invokestatic  #1219               // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      32: aastore
      33: dup
      34: iconst_1
      35: aload_0
      36: aastore
      37: invokestatic  #1164               // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      40: invokespecial #986                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: return

  public static long sizeOf(java.io.File);
    Code:
       0: aload_0
       1: ldc           #159                // String file
       3: invokestatic  #820                // Method requireExists:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
       6: pop
       7: aload_0
       8: invokevirtual #457                // Method java/io/File.isDirectory:()Z
      11: ifeq          21
      14: aload_0
      15: invokestatic  #1223               // Method sizeOfDirectory0:(Ljava/io/File;)J
      18: goto          25
      21: aload_0
      22: invokevirtual #273                // Method java/io/File.length:()J
      25: lreturn

  private static long sizeOf0(java.io.File);
    Code:
       0: aload_0
       1: ldc           #159                // String file
       3: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #457                // Method java/io/File.isDirectory:()Z
      11: ifeq          19
      14: aload_0
      15: invokestatic  #1223               // Method sizeOfDirectory0:(Ljava/io/File;)J
      18: lreturn
      19: aload_0
      20: invokevirtual #273                // Method java/io/File.length:()J
      23: lreturn

  public static java.math.BigInteger sizeOfAsBigInteger(java.io.File);
    Code:
       0: aload_0
       1: ldc           #159                // String file
       3: invokestatic  #820                // Method requireExists:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
       6: pop
       7: aload_0
       8: invokevirtual #457                // Method java/io/File.isDirectory:()Z
      11: ifeq          21
      14: aload_0
      15: invokestatic  #1229               // Method sizeOfDirectoryBig0:(Ljava/io/File;)Ljava/math/BigInteger;
      18: goto          28
      21: aload_0
      22: invokevirtual #273                // Method java/io/File.length:()J
      25: invokestatic  #149                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      28: areturn

  private static java.math.BigInteger sizeOfBig0(java.io.File);
    Code:
       0: aload_0
       1: ldc_w         #1232               // String fileOrDir
       4: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: invokevirtual #457                // Method java/io/File.isDirectory:()Z
      12: ifeq          22
      15: aload_0
      16: invokestatic  #1229               // Method sizeOfDirectoryBig0:(Ljava/io/File;)Ljava/math/BigInteger;
      19: goto          29
      22: aload_0
      23: invokevirtual #273                // Method java/io/File.length:()J
      26: invokestatic  #149                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      29: areturn

  public static long sizeOfDirectory(java.io.File);
    Code:
       0: aload_0
       1: ldc_w         #614                // String directory
       4: invokestatic  #639                // Method requireDirectoryExists:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
       7: invokestatic  #1223               // Method sizeOfDirectory0:(Ljava/io/File;)J
      10: lreturn

  private static long sizeOfDirectory0(java.io.File);
    Code:
       0: aload_0
       1: ldc_w         #614                // String directory
       4: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: invokevirtual #980                // Method java/io/File.listFiles:()[Ljava/io/File;
      12: astore_1
      13: aload_1
      14: ifnonnull     19
      17: lconst_0
      18: lreturn
      19: lconst_0
      20: lstore_2
      21: aload_1
      22: astore        4
      24: aload         4
      26: arraylength
      27: istore        5
      29: iconst_0
      30: istore        6
      32: iload         6
      34: iload         5
      36: if_icmpge     77
      39: aload         4
      41: iload         6
      43: aaload
      44: astore        7
      46: aload         7
      48: invokestatic  #618                // Method isSymlink:(Ljava/io/File;)Z
      51: ifne          71
      54: lload_2
      55: aload         7
      57: invokestatic  #1235               // Method sizeOf0:(Ljava/io/File;)J
      60: ladd
      61: lstore_2
      62: lload_2
      63: lconst_0
      64: lcmp
      65: ifge          71
      68: goto          77
      71: iinc          6, 1
      74: goto          32
      77: lload_2
      78: lreturn

  public static java.math.BigInteger sizeOfDirectoryAsBigInteger(java.io.File);
    Code:
       0: aload_0
       1: ldc_w         #614                // String directory
       4: invokestatic  #639                // Method requireDirectoryExists:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
       7: invokestatic  #1229               // Method sizeOfDirectoryBig0:(Ljava/io/File;)Ljava/math/BigInteger;
      10: areturn

  private static java.math.BigInteger sizeOfDirectoryBig0(java.io.File);
    Code:
       0: aload_0
       1: ldc_w         #614                // String directory
       4: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: invokevirtual #980                // Method java/io/File.listFiles:()[Ljava/io/File;
      12: astore_1
      13: aload_1
      14: ifnonnull     21
      17: getstatic     #95                 // Field java/math/BigInteger.ZERO:Ljava/math/BigInteger;
      20: areturn
      21: getstatic     #95                 // Field java/math/BigInteger.ZERO:Ljava/math/BigInteger;
      24: astore_2
      25: aload_1
      26: astore_3
      27: aload_3
      28: arraylength
      29: istore        4
      31: iconst_0
      32: istore        5
      34: iload         5
      36: iload         4
      38: if_icmpge     71
      41: aload_3
      42: iload         5
      44: aaload
      45: astore        6
      47: aload         6
      49: invokestatic  #618                // Method isSymlink:(Ljava/io/File;)Z
      52: ifne          65
      55: aload_2
      56: aload         6
      58: invokestatic  #1238               // Method sizeOfBig0:(Ljava/io/File;)Ljava/math/BigInteger;
      61: invokevirtual #1240               // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      64: astore_2
      65: iinc          5, 1
      68: goto          34
      71: aload_2
      72: areturn

  public static java.util.stream.Stream<java.io.File> streamFiles(java.io.File, boolean, java.lang.String...) throws java.io.IOException;
    Code:
       0: aload_2
       1: ifnonnull     10
       4: getstatic     #1246               // Field org/sonarsource/sonarlint/shaded/org/apache/commons/io/filefilter/FileFileFilter.INSTANCE:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/filefilter/IOFileFilter;
       7: goto          29
      10: getstatic     #1246               // Field org/sonarsource/sonarlint/shaded/org/apache/commons/io/filefilter/FileFileFilter.INSTANCE:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/filefilter/IOFileFilter;
      13: new           #1248               // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/filefilter/SuffixFileFilter
      16: dup
      17: aload_2
      18: invokestatic  #1252               // Method toSuffixes:([Ljava/lang/String;)[Ljava/lang/String;
      21: invokespecial #1255               // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/filefilter/SuffixFileFilter."<init>":([Ljava/lang/String;)V
      24: invokeinterface #1260,  2         // InterfaceMethod org/sonarsource/sonarlint/shaded/org/apache/commons/io/filefilter/IOFileFilter.and:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/filefilter/IOFileFilter;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/filefilter/IOFileFilter;
      29: astore_3
      30: aload_0
      31: invokevirtual #175                // Method java/io/File.toPath:()Ljava/nio/file/Path;
      34: aload_3
      35: iload_1
      36: invokestatic  #966                // Method toMaxDepth:(Z)I
      39: iconst_0
      40: iconst_1
      41: anewarray     #1262               // class java/nio/file/FileVisitOption
      44: dup
      45: iconst_0
      46: getstatic     #1266               // Field java/nio/file/FileVisitOption.FOLLOW_LINKS:Ljava/nio/file/FileVisitOption;
      49: aastore
      50: invokestatic  #1270               // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathUtils.walk:(Ljava/nio/file/Path;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathFilter;IZ[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;
      53: invokedynamic #1008,  0           // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      58: invokeinterface #1014,  2         // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      63: areturn

  public static java.io.File toFile(java.net.URL);
    Code:
       0: aload_0
       1: ifnull        16
       4: ldc           #159                // String file
       6: aload_0
       7: invokevirtual #1274               // Method java/net/URL.getProtocol:()Ljava/lang/String;
      10: invokevirtual #1277               // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      13: ifne          18
      16: aconst_null
      17: areturn
      18: aload_0
      19: invokevirtual #1279               // Method java/net/URL.getFile:()Ljava/lang/String;
      22: bipush        47
      24: getstatic     #1283               // Field java/io/File.separatorChar:C
      27: invokevirtual #1287               // Method java/lang/String.replace:(CC)Ljava/lang/String;
      30: astore_1
      31: new           #171                // class java/io/File
      34: dup
      35: aload_1
      36: invokestatic  #1289               // Method decodeUrl:(Ljava/lang/String;)Ljava/lang/String;
      39: invokespecial #708                // Method java/io/File."<init>":(Ljava/lang/String;)V
      42: areturn

  public static java.io.File[] toFiles(java.net.URL...);
    Code:
       0: aload_0
       1: invokestatic  #1295               // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/IOUtils.length:([Ljava/lang/Object;)I
       4: ifne          11
       7: getstatic     #317                // Field EMPTY_FILE_ARRAY:[Ljava/io/File;
      10: areturn
      11: aload_0
      12: arraylength
      13: anewarray     #171                // class java/io/File
      16: astore_1
      17: iconst_0
      18: istore_2
      19: iload_2
      20: aload_0
      21: arraylength
      22: if_icmpge     86
      25: aload_0
      26: iload_2
      27: aaload
      28: astore_3
      29: aload_3
      30: ifnull        80
      33: ldc           #159                // String file
      35: aload_3
      36: invokevirtual #1274               // Method java/net/URL.getProtocol:()Ljava/lang/String;
      39: invokevirtual #1277               // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      42: ifne          73
      45: new           #1168               // class java/lang/IllegalArgumentException
      48: dup
      49: new           #101                // class java/lang/StringBuilder
      52: dup
      53: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      56: ldc_w         #1297               // String Can only convert file URL to a File:
      59: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_3
      63: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      66: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokespecial #1171               // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: aload_1
      74: iload_2
      75: aload_3
      76: invokestatic  #1299               // Method toFile:(Ljava/net/URL;)Ljava/io/File;
      79: aastore
      80: iinc          2, 1
      83: goto          19
      86: aload_1
      87: areturn

  private static java.util.List<java.io.File> toList(java.util.stream.Stream<java.io.File>);
    Code:
       0: aload_0
       1: invokestatic  #1020               // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
       4: invokeinterface #1024,  2         // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
       9: checkcast     #230                // class java/util/List
      12: areturn

  private static int toMaxDepth(boolean);
    Code:
       0: iload_0
       1: ifeq          10
       4: ldc_w         #1305               // int 2147483647
       7: goto          11
      10: iconst_1
      11: ireturn

  private static java.lang.String[] toSuffixes(java.lang.String...);
    Code:
       0: aload_0
       1: ldc_w         #1306               // String extensions
       4: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: arraylength
      10: anewarray     #142                // class java/lang/String
      13: astore_1
      14: iconst_0
      15: istore_2
      16: iload_2
      17: aload_0
      18: arraylength
      19: if_icmpge     53
      22: aload_1
      23: iload_2
      24: new           #101                // class java/lang/StringBuilder
      27: dup
      28: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      31: ldc_w         #1308               // String .
      34: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: iload_2
      39: aaload
      40: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: aastore
      47: iinc          2, 1
      50: goto          16
      53: aload_1
      54: areturn

  public static void touch(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #159                // String file
       3: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #266                // Method java/io/File.exists:()Z
      11: ifne          21
      14: aload_0
      15: invokestatic  #494                // Method openOutputStream:(Ljava/io/File;)Ljava/io/FileOutputStream;
      18: invokevirtual #1311               // Method java/io/FileOutputStream.close:()V
      21: aload_0
      22: invokestatic  #1314               // Method java/lang/System.currentTimeMillis:()J
      25: invokestatic  #1208               // Method setLastModified:(Ljava/io/File;J)V
      28: return

  public static java.net.URL[] toURLs(java.io.File...) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc_w         #1317               // String files
       4: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: arraylength
      10: anewarray     #503                // class java/net/URL
      13: astore_1
      14: iconst_0
      15: istore_2
      16: iload_2
      17: aload_1
      18: arraylength
      19: if_icmpge     40
      22: aload_1
      23: iload_2
      24: aload_0
      25: iload_2
      26: aaload
      27: invokevirtual #1322               // Method java/io/File.toURI:()Ljava/net/URI;
      30: invokevirtual #1328               // Method java/net/URI.toURL:()Ljava/net/URL;
      33: aastore
      34: iinc          2, 1
      37: goto          16
      40: aload_1
      41: areturn

  private static void validateMoveParameters(java.io.File, java.io.File) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: ldc_w         #1204               // String source
       4: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_1
       9: ldc_w         #1205               // String destination
      12: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      15: pop
      16: aload_0
      17: invokevirtual #266                // Method java/io/File.exists:()Z
      20: ifne          57
      23: new           #461                // class java/io/FileNotFoundException
      26: dup
      27: new           #101                // class java/lang/StringBuilder
      30: dup
      31: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      34: ldc_w         #1330               // String Source \'
      37: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: ldc_w         #1332               // String \' does not exist
      47: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #468                // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: return

  public static boolean waitFor(java.io.File, int);
    Code:
       0: aload_0
       1: ldc           #159                // String file
       3: invokestatic  #84                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: invokestatic  #1314               // Method java/lang/System.currentTimeMillis:()J
      10: iload_1
      11: i2l
      12: ldc2_w        #1337               // long 1000l
      15: lmul
      16: ladd
      17: lstore_2
      18: iconst_0
      19: istore        4
      21: aload_0
      22: invokevirtual #266                // Method java/io/File.exists:()Z
      25: ifne          89
      28: lload_2
      29: invokestatic  #1314               // Method java/lang/System.currentTimeMillis:()J
      32: lsub
      33: lstore        5
      35: lload         5
      37: lconst_0
      38: lcmp
      39: ifge          59
      42: iconst_0
      43: istore        7
      45: iload         4
      47: ifeq          56
      50: invokestatic  #1344               // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      53: invokevirtual #1347               // Method java/lang/Thread.interrupt:()V
      56: iload         7
      58: ireturn
      59: ldc2_w        #1348               // long 100l
      62: lload         5
      64: invokestatic  #1355               // Method java/lang/Math.min:(JJ)J
      67: invokestatic  #1359               // Method java/lang/Thread.sleep:(J)V
      70: goto          86
      73: astore        7
      75: iconst_1
      76: istore        4
      78: goto          86
      81: astore        7
      83: goto          89
      86: goto          21
      89: iload         4
      91: ifeq          119
      94: invokestatic  #1344               // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      97: invokevirtual #1347               // Method java/lang/Thread.interrupt:()V
     100: goto          119
     103: astore        8
     105: iload         4
     107: ifeq          116
     110: invokestatic  #1344               // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     113: invokevirtual #1347               // Method java/lang/Thread.interrupt:()V
     116: aload         8
     118: athrow
     119: iconst_1
     120: ireturn
    Exception table:
       from    to  target type
          59    70    73   Class java/lang/InterruptedException
          59    70    81   Class java/lang/Exception
          21    45   103   any
          59    89   103   any
         103   105   103   any

  public static void write(java.io.File, java.lang.CharSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1134               // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       5: iconst_0
       6: invokestatic  #1370               // Method write:(Ljava/io/File;Ljava/lang/CharSequence;Ljava/nio/charset/Charset;Z)V
       9: return

  public static void write(java.io.File, java.lang.CharSequence, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1134               // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       5: iload_2
       6: invokestatic  #1370               // Method write:(Ljava/io/File;Ljava/lang/CharSequence;Ljava/nio/charset/Charset;Z)V
       9: return

  public static void write(java.io.File, java.lang.CharSequence, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokestatic  #1370               // Method write:(Ljava/io/File;Ljava/lang/CharSequence;Ljava/nio/charset/Charset;Z)V
       7: return

  public static void write(java.io.File, java.lang.CharSequence, java.nio.charset.Charset, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokestatic  #1377               // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
       6: aload_2
       7: iload_3
       8: invokestatic  #1381               // Method writeStringToFile:(Ljava/io/File;Ljava/lang/String;Ljava/nio/charset/Charset;Z)V
      11: return

  public static void write(java.io.File, java.lang.CharSequence, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokestatic  #1385               // Method write:(Ljava/io/File;Ljava/lang/CharSequence;Ljava/lang/String;Z)V
       7: return

  public static void write(java.io.File, java.lang.CharSequence, java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #295                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       6: iload_3
       7: invokestatic  #1370               // Method write:(Ljava/io/File;Ljava/lang/CharSequence;Ljava/nio/charset/Charset;Z)V
      10: return

  public static void writeByteArrayToFile(java.io.File, byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokestatic  #1390               // Method writeByteArrayToFile:(Ljava/io/File;[BZ)V
       6: return

  public static void writeByteArrayToFile(java.io.File, byte[], boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: iload_2
       6: invokestatic  #1393               // Method writeByteArrayToFile:(Ljava/io/File;[BIIZ)V
       9: return

  public static void writeByteArrayToFile(java.io.File, byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iconst_0
       5: invokestatic  #1393               // Method writeByteArrayToFile:(Ljava/io/File;[BIIZ)V
       8: return

  public static void writeByteArrayToFile(java.io.File, byte[], int, int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload         4
       3: invokestatic  #1110               // Method openOutputStream:(Ljava/io/File;Z)Ljava/io/FileOutputStream;
       6: astore        5
       8: aconst_null
       9: astore        6
      11: aload         5
      13: aload_1
      14: iload_2
      15: iload_3
      16: invokevirtual #1399               // Method java/io/OutputStream.write:([BII)V
      19: aload         5
      21: ifnull        106
      24: aload         6
      26: ifnull        49
      29: aload         5
      31: invokevirtual #498                // Method java/io/OutputStream.close:()V
      34: goto          106
      37: astore        7
      39: aload         6
      41: aload         7
      43: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      46: goto          106
      49: aload         5
      51: invokevirtual #498                // Method java/io/OutputStream.close:()V
      54: goto          106
      57: astore        7
      59: aload         7
      61: astore        6
      63: aload         7
      65: athrow
      66: astore        8
      68: aload         5
      70: ifnull        103
      73: aload         6
      75: ifnull        98
      78: aload         5
      80: invokevirtual #498                // Method java/io/OutputStream.close:()V
      83: goto          103
      86: astore        9
      88: aload         6
      90: aload         9
      92: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      95: goto          103
      98: aload         5
     100: invokevirtual #498                // Method java/io/OutputStream.close:()V
     103: aload         8
     105: athrow
     106: return
    Exception table:
       from    to  target type
          29    34    37   Class java/lang/Throwable
          11    19    57   Class java/lang/Throwable
          11    19    66   any
          78    83    86   Class java/lang/Throwable
          57    68    66   any

  public static void writeLines(java.io.File, java.util.Collection<?>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aconst_null
       4: iconst_0
       5: invokestatic  #1405               // Method writeLines:(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;Z)V
       8: return

  public static void writeLines(java.io.File, java.util.Collection<?>, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aconst_null
       4: iload_2
       5: invokestatic  #1405               // Method writeLines:(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;Z)V
       8: return

  public static void writeLines(java.io.File, java.util.Collection<?>, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: iconst_0
       5: invokestatic  #1405               // Method writeLines:(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;Z)V
       8: return

  public static void writeLines(java.io.File, java.util.Collection<?>, java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: iload_3
       5: invokestatic  #1405               // Method writeLines:(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;Z)V
       8: return

  public static void writeLines(java.io.File, java.lang.String, java.util.Collection<?>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: iconst_0
       5: invokestatic  #1405               // Method writeLines:(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;Z)V
       8: return

  public static void writeLines(java.io.File, java.lang.String, java.util.Collection<?>, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: iload_3
       5: invokestatic  #1405               // Method writeLines:(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;Z)V
       8: return

  public static void writeLines(java.io.File, java.lang.String, java.util.Collection<?>, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_0
       5: invokestatic  #1405               // Method writeLines:(Ljava/io/File;Ljava/lang/String;Ljava/util/Collection;Ljava/lang/String;Z)V
       8: return

  public static void writeLines(java.io.File, java.lang.String, java.util.Collection<?>, java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: new           #1423               // class java/io/BufferedOutputStream
       3: dup
       4: aload_0
       5: iload         4
       7: invokestatic  #1110               // Method openOutputStream:(Ljava/io/File;Z)Ljava/io/FileOutputStream;
      10: invokespecial #1426               // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;)V
      13: astore        5
      15: aconst_null
      16: astore        6
      18: aload_2
      19: aload_3
      20: aload         5
      22: aload_1
      23: invokestatic  #1429               // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/IOUtils.writeLines:(Ljava/util/Collection;Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)V
      26: aload         5
      28: ifnull        113
      31: aload         6
      33: ifnull        56
      36: aload         5
      38: invokevirtual #498                // Method java/io/OutputStream.close:()V
      41: goto          113
      44: astore        7
      46: aload         6
      48: aload         7
      50: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      53: goto          113
      56: aload         5
      58: invokevirtual #498                // Method java/io/OutputStream.close:()V
      61: goto          113
      64: astore        7
      66: aload         7
      68: astore        6
      70: aload         7
      72: athrow
      73: astore        8
      75: aload         5
      77: ifnull        110
      80: aload         6
      82: ifnull        105
      85: aload         5
      87: invokevirtual #498                // Method java/io/OutputStream.close:()V
      90: goto          110
      93: astore        9
      95: aload         6
      97: aload         9
      99: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     102: goto          110
     105: aload         5
     107: invokevirtual #498                // Method java/io/OutputStream.close:()V
     110: aload         8
     112: athrow
     113: return
    Exception table:
       from    to  target type
          36    41    44   Class java/lang/Throwable
          18    26    64   Class java/lang/Throwable
          18    26    73   any
          85    90    93   Class java/lang/Throwable
          64    75    73   any

  public static void writeStringToFile(java.io.File, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1134               // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       5: iconst_0
       6: invokestatic  #1381               // Method writeStringToFile:(Ljava/io/File;Ljava/lang/String;Ljava/nio/charset/Charset;Z)V
       9: return

  public static void writeStringToFile(java.io.File, java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1134               // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       5: iload_2
       6: invokestatic  #1381               // Method writeStringToFile:(Ljava/io/File;Ljava/lang/String;Ljava/nio/charset/Charset;Z)V
       9: return

  public static void writeStringToFile(java.io.File, java.lang.String, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokestatic  #1381               // Method writeStringToFile:(Ljava/io/File;Ljava/lang/String;Ljava/nio/charset/Charset;Z)V
       7: return

  public static void writeStringToFile(java.io.File, java.lang.String, java.nio.charset.Charset, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_3
       2: invokestatic  #1110               // Method openOutputStream:(Ljava/io/File;Z)Ljava/io/FileOutputStream;
       5: astore        4
       7: aconst_null
       8: astore        5
      10: aload_1
      11: aload         4
      13: aload_2
      14: invokestatic  #1434               // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/IOUtils.write:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
      17: aload         4
      19: ifnull        104
      22: aload         5
      24: ifnull        47
      27: aload         4
      29: invokevirtual #498                // Method java/io/OutputStream.close:()V
      32: goto          104
      35: astore        6
      37: aload         5
      39: aload         6
      41: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      44: goto          104
      47: aload         4
      49: invokevirtual #498                // Method java/io/OutputStream.close:()V
      52: goto          104
      55: astore        6
      57: aload         6
      59: astore        5
      61: aload         6
      63: athrow
      64: astore        7
      66: aload         4
      68: ifnull        101
      71: aload         5
      73: ifnull        96
      76: aload         4
      78: invokevirtual #498                // Method java/io/OutputStream.close:()V
      81: goto          101
      84: astore        8
      86: aload         5
      88: aload         8
      90: invokevirtual #203                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      93: goto          101
      96: aload         4
      98: invokevirtual #498                // Method java/io/OutputStream.close:()V
     101: aload         7
     103: athrow
     104: return
    Exception table:
       from    to  target type
          27    32    35   Class java/lang/Throwable
          10    17    55   Class java/lang/Throwable
          10    17    64   any
          76    81    84   Class java/lang/Throwable
          55    66    64   any

  public static void writeStringToFile(java.io.File, java.lang.String, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokestatic  #1438               // Method writeStringToFile:(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;Z)V
       7: return

  public static void writeStringToFile(java.io.File, java.lang.String, java.lang.String, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #295                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       6: iload_3
       7: invokestatic  #1381               // Method writeStringToFile:(Ljava/io/File;Ljava/lang/String;Ljava/nio/charset/Charset;Z)V
      10: return

  public org.sonarsource.sonarlint.shaded.org.apache.commons.io.FileUtils();
    Code:
       0: aload_0
       1: invokespecial #1439               // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: ldc2_w        #21                 // long 1024l
       3: invokestatic  #149                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       6: putstatic     #136                // Field ONE_KB_BI:Ljava/math/BigInteger;
       9: getstatic     #136                // Field ONE_KB_BI:Ljava/math/BigInteger;
      12: getstatic     #136                // Field ONE_KB_BI:Ljava/math/BigInteger;
      15: invokevirtual #1445               // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      18: putstatic     #132                // Field ONE_MB_BI:Ljava/math/BigInteger;
      21: getstatic     #136                // Field ONE_KB_BI:Ljava/math/BigInteger;
      24: getstatic     #132                // Field ONE_MB_BI:Ljava/math/BigInteger;
      27: invokevirtual #1445               // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      30: putstatic     #128                // Field ONE_GB_BI:Ljava/math/BigInteger;
      33: getstatic     #136                // Field ONE_KB_BI:Ljava/math/BigInteger;
      36: getstatic     #128                // Field ONE_GB_BI:Ljava/math/BigInteger;
      39: invokevirtual #1445               // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      42: putstatic     #124                // Field ONE_TB_BI:Ljava/math/BigInteger;
      45: getstatic     #136                // Field ONE_KB_BI:Ljava/math/BigInteger;
      48: getstatic     #124                // Field ONE_TB_BI:Ljava/math/BigInteger;
      51: invokevirtual #1445               // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      54: putstatic     #120                // Field ONE_PB_BI:Ljava/math/BigInteger;
      57: getstatic     #136                // Field ONE_KB_BI:Ljava/math/BigInteger;
      60: getstatic     #120                // Field ONE_PB_BI:Ljava/math/BigInteger;
      63: invokevirtual #1445               // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      66: putstatic     #86                 // Field ONE_EB_BI:Ljava/math/BigInteger;
      69: ldc2_w        #21                 // long 1024l
      72: invokestatic  #149                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      75: ldc2_w        #42                 // long 1152921504606846976l
      78: invokestatic  #149                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      81: invokevirtual #1445               // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      84: putstatic     #1447               // Field ONE_ZB:Ljava/math/BigInteger;
      87: getstatic     #136                // Field ONE_KB_BI:Ljava/math/BigInteger;
      90: getstatic     #1447               // Field ONE_ZB:Ljava/math/BigInteger;
      93: invokevirtual #1445               // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      96: putstatic     #1449               // Field ONE_YB:Ljava/math/BigInteger;
      99: iconst_0
     100: anewarray     #171                // class java/io/File
     103: putstatic     #317                // Field EMPTY_FILE_ARRAY:[Ljava/io/File;
     106: return
}
