Compiled from "PathUtils.java"
public final class org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.PathUtils {
  public static final java.nio.file.CopyOption[] EMPTY_COPY_OPTIONS;

  public static final org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.DeleteOption[] EMPTY_DELETE_OPTION_ARRAY;

  public static final java.nio.file.FileVisitOption[] EMPTY_FILE_VISIT_OPTION_ARRAY;

  public static final java.nio.file.LinkOption[] EMPTY_LINK_OPTION_ARRAY;

  public static final java.nio.file.LinkOption[] NOFOLLOW_LINK_OPTION_ARRAY;

  public static final java.nio.file.OpenOption[] EMPTY_OPEN_OPTION_ARRAY;

  public static final java.nio.file.Path[] EMPTY_PATH_ARRAY;

  private static org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.AccumulatorPathVisitor accumulate(java.nio.file.Path, int, java.nio.file.FileVisitOption[]) throws java.io.IOException;
    Code:
       0: invokestatic  #51                 // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/AccumulatorPathVisitor.withLongCounters:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/AccumulatorPathVisitor;
       3: aload_0
       4: aload_2
       5: invokestatic  #55                 // Method toFileVisitOptionSet:([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;
       8: iload_1
       9: invokestatic  #59                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;
      12: checkcast     #47                 // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/AccumulatorPathVisitor
      15: areturn

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.Counters$PathCounters cleanDirectory(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #68                 // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption;
       4: invokestatic  #71                 // Method cleanDirectory:(Ljava/nio/file/Path;[Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
       7: areturn

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.Counters$PathCounters cleanDirectory(java.nio.file.Path, org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.DeleteOption...) throws java.io.IOException;
    Code:
       0: new           #73                 // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/CleaningPathVisitor
       3: dup
       4: invokestatic  #77                 // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters.longPathCounters:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
       7: aload_1
       8: iconst_0
       9: anewarray     #79                 // class java/lang/String
      12: invokespecial #83                 // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/CleaningPathVisitor."<init>":(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;[Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V
      15: aload_0
      16: invokestatic  #86                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
      19: checkcast     #73                 // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/CleaningPathVisitor
      22: invokevirtual #89                 // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/CleaningPathVisitor.getPathCounters:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
      25: areturn

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.Counters$PathCounters copyDirectory(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokeinterface #98,  1           // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;
       6: astore_3
       7: new           #100                // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/CopyDirectoryVisitor
      10: dup
      11: invokestatic  #77                 // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters.longPathCounters:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
      14: aload_3
      15: aload_1
      16: aload_2
      17: invokespecial #103                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/CopyDirectoryVisitor."<init>":(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V
      20: aload_3
      21: invokestatic  #86                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
      24: checkcast     #100                // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/CopyDirectoryVisitor
      27: invokevirtual #104                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/CopyDirectoryVisitor.getPathCounters:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
      30: areturn

  public static java.nio.file.Path copyFile(java.net.URL, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #118                // Method java/net/URL.openStream:()Ljava/io/InputStream;
       4: astore_3
       5: aconst_null
       6: astore        4
       8: aload_3
       9: aload_1
      10: aload_2
      11: invokestatic  #124                // Method java/nio/file/Files.copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J
      14: pop2
      15: aload_1
      16: astore        5
      18: aload_3
      19: ifnull        50
      22: aload         4
      24: ifnull        46
      27: aload_3
      28: invokevirtual #130                // Method java/io/InputStream.close:()V
      31: goto          50
      34: astore        6
      36: aload         4
      38: aload         6
      40: invokevirtual #135                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      43: goto          50
      46: aload_3
      47: invokevirtual #130                // Method java/io/InputStream.close:()V
      50: aload         5
      52: areturn
      53: astore        5
      55: aload         5
      57: astore        4
      59: aload         5
      61: athrow
      62: astore        7
      64: aload_3
      65: ifnull        96
      68: aload         4
      70: ifnull        92
      73: aload_3
      74: invokevirtual #130                // Method java/io/InputStream.close:()V
      77: goto          96
      80: astore        8
      82: aload         4
      84: aload         8
      86: invokevirtual #135                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      89: goto          96
      92: aload_3
      93: invokevirtual #130                // Method java/io/InputStream.close:()V
      96: aload         7
      98: athrow
    Exception table:
       from    to  target type
          27    31    34   Class java/lang/Throwable
           8    18    53   Class java/lang/Throwable
           8    18    62   any
          73    77    80   Class java/lang/Throwable
          53    64    62   any

  public static java.nio.file.Path copyFileToDirectory(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokeinterface #145,  1          // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
       8: invokeinterface #149,  2          // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
      13: aload_2
      14: invokestatic  #151                // Method java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
      17: areturn

  public static java.nio.file.Path copyFileToDirectory(java.net.URL, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #118                // Method java/net/URL.openStream:()Ljava/io/InputStream;
       4: astore_3
       5: aconst_null
       6: astore        4
       8: aload_3
       9: aload_1
      10: aload_0
      11: invokevirtual #155                // Method java/net/URL.getFile:()Ljava/lang/String;
      14: invokeinterface #158,  2          // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      19: aload_2
      20: invokestatic  #124                // Method java/nio/file/Files.copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J
      23: pop2
      24: aload_1
      25: astore        5
      27: aload_3
      28: ifnull        59
      31: aload         4
      33: ifnull        55
      36: aload_3
      37: invokevirtual #130                // Method java/io/InputStream.close:()V
      40: goto          59
      43: astore        6
      45: aload         4
      47: aload         6
      49: invokevirtual #135                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      52: goto          59
      55: aload_3
      56: invokevirtual #130                // Method java/io/InputStream.close:()V
      59: aload         5
      61: areturn
      62: astore        5
      64: aload         5
      66: astore        4
      68: aload         5
      70: athrow
      71: astore        7
      73: aload_3
      74: ifnull        105
      77: aload         4
      79: ifnull        101
      82: aload_3
      83: invokevirtual #130                // Method java/io/InputStream.close:()V
      86: goto          105
      89: astore        8
      91: aload         4
      93: aload         8
      95: invokevirtual #135                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      98: goto          105
     101: aload_3
     102: invokevirtual #130                // Method java/io/InputStream.close:()V
     105: aload         7
     107: athrow
    Exception table:
       from    to  target type
          36    40    43   Class java/lang/Throwable
           8    27    62   Class java/lang/Throwable
           8    27    71   any
          82    86    89   Class java/lang/Throwable
          62    73    71   any

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.Counters$PathCounters countDirectory(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: new           #161                // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/CountingPathVisitor
       3: dup
       4: invokestatic  #77                 // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters.longPathCounters:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
       7: invokespecial #164                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/CountingPathVisitor."<init>":(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;)V
      10: aload_0
      11: invokestatic  #86                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
      14: checkcast     #161                // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/CountingPathVisitor
      17: invokevirtual #165                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/CountingPathVisitor.getPathCounters:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
      20: areturn

  public static java.nio.file.Path createParentDirectories(java.nio.file.Path, java.nio.file.attribute.FileAttribute<?>...) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokeinterface #171,  1          // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;
       6: astore_2
       7: aload_2
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_2
      14: aload_1
      15: invokestatic  #174                // Method java/nio/file/Files.createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
      18: areturn

  public static java.nio.file.Path current();
    Code:
       0: ldc           #182                // String
       2: iconst_0
       3: anewarray     #79                 // class java/lang/String
       6: invokestatic  #188                // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
       9: areturn

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.Counters$PathCounters delete(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #68                 // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption;
       4: invokestatic  #191                // Method delete:(Ljava/nio/file/Path;[Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
       7: areturn

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.Counters$PathCounters delete(java.nio.file.Path, org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.DeleteOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #193                // class java/nio/file/LinkOption
       5: dup
       6: iconst_0
       7: getstatic     #197                // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
      10: aastore
      11: invokestatic  #201                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      14: ifeq          25
      17: aload_0
      18: aload_1
      19: invokestatic  #204                // Method deleteDirectory:(Ljava/nio/file/Path;[Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
      22: goto          30
      25: aload_0
      26: aload_1
      27: invokestatic  #207                // Method deleteFile:(Ljava/nio/file/Path;[Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
      30: areturn

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.Counters$PathCounters delete(java.nio.file.Path, java.nio.file.LinkOption[], org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.DeleteOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #201                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
       5: ifeq          17
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokestatic  #210                // Method deleteDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
      14: goto          23
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokestatic  #212                // Method deleteFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
      23: areturn

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.Counters$PathCounters deleteDirectory(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #68                 // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption;
       4: invokestatic  #204                // Method deleteDirectory:(Ljava/nio/file/Path;[Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
       7: areturn

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.Counters$PathCounters deleteDirectory(java.nio.file.Path, org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.DeleteOption...) throws java.io.IOException;
    Code:
       0: new           #215                // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeletingPathVisitor
       3: dup
       4: invokestatic  #77                 // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters.longPathCounters:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
       7: getstatic     #217                // Field NOFOLLOW_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
      10: aload_1
      11: iconst_0
      12: anewarray     #79                 // class java/lang/String
      15: invokespecial #220                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeletingPathVisitor."<init>":(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;[Ljava/nio/file/LinkOption;[Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V
      18: aload_0
      19: invokestatic  #86                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
      22: checkcast     #215                // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeletingPathVisitor
      25: invokevirtual #221                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeletingPathVisitor.getPathCounters:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
      28: areturn

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.Counters$PathCounters deleteDirectory(java.nio.file.Path, java.nio.file.LinkOption[], org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.DeleteOption...) throws java.io.IOException;
    Code:
       0: new           #215                // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeletingPathVisitor
       3: dup
       4: invokestatic  #77                 // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters.longPathCounters:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
       7: aload_1
       8: aload_2
       9: iconst_0
      10: anewarray     #79                 // class java/lang/String
      13: invokespecial #220                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeletingPathVisitor."<init>":(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;[Ljava/nio/file/LinkOption;[Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V
      16: aload_0
      17: invokestatic  #86                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
      20: checkcast     #215                // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeletingPathVisitor
      23: invokevirtual #221                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeletingPathVisitor.getPathCounters:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
      26: areturn

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.Counters$PathCounters deleteFile(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #68                 // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption;
       4: invokestatic  #207                // Method deleteFile:(Ljava/nio/file/Path;[Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
       7: areturn

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.Counters$PathCounters deleteFile(java.nio.file.Path, org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.DeleteOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #217                // Field NOFOLLOW_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
       4: aload_1
       5: invokestatic  #212                // Method deleteFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
       8: areturn

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.Counters$PathCounters deleteFile(java.nio.file.Path, java.nio.file.LinkOption[], org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.DeleteOption...) throws java.nio.file.NoSuchFileException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #201                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
       5: ifeq          22
       8: new           #224                // class java/nio/file/NoSuchFileException
      11: dup
      12: aload_0
      13: invokeinterface #227,  1          // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      18: invokespecial #230                // Method java/nio/file/NoSuchFileException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: invokestatic  #77                 // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters.longPathCounters:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
      25: astore_3
      26: aload_0
      27: aload_1
      28: invokestatic  #233                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      31: istore        4
      33: iload         4
      35: ifeq          52
      38: aload_0
      39: invokestatic  #237                // Method java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z
      42: ifne          52
      45: aload_0
      46: invokestatic  #241                // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J
      49: goto          53
      52: lconst_0
      53: lstore        5
      55: aload_2
      56: invokestatic  #245                // Method overrideReadOnly:([Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption;)Z
      59: ifeq          74
      62: iload         4
      64: ifeq          74
      67: aload_0
      68: iconst_0
      69: aload_1
      70: invokestatic  #249                // Method setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
      73: pop
      74: aload_0
      75: invokestatic  #252                // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
      78: ifeq          105
      81: aload_3
      82: invokeinterface #256,  1          // InterfaceMethod org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters.getFileCounter:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$Counter;
      87: invokeinterface #259,  1          // InterfaceMethod org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$Counter.increment:()V
      92: aload_3
      93: invokeinterface #262,  1          // InterfaceMethod org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters.getByteCounter:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$Counter;
      98: lload         5
     100: invokeinterface #266,  3          // InterfaceMethod org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$Counter.add:(J)V
     105: aload_3
     106: areturn

  public static boolean directoryAndFileContentEquals(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #274                // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
       5: getstatic     #276                // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;
       8: getstatic     #278                // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;
      11: invokestatic  #281                // Method directoryAndFileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z
      14: ireturn

  public static boolean directoryAndFileContentEquals(java.nio.file.Path, java.nio.file.Path, java.nio.file.LinkOption[], java.nio.file.OpenOption[], java.nio.file.FileVisitOption[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnonnull     10
       4: aload_1
       5: ifnonnull     10
       8: iconst_1
       9: ireturn
      10: aload_0
      11: ifnull        18
      14: aload_1
      15: ifnonnull     20
      18: iconst_0
      19: ireturn
      20: aload_0
      21: iconst_0
      22: anewarray     #193                // class java/nio/file/LinkOption
      25: invokestatic  #286                // Method java/nio/file/Files.notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      28: ifeq          44
      31: aload_1
      32: iconst_0
      33: anewarray     #193                // class java/nio/file/LinkOption
      36: invokestatic  #286                // Method java/nio/file/Files.notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      39: ifeq          44
      42: iconst_1
      43: ireturn
      44: new           #9                  // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathUtils$RelativeSortedPaths
      47: dup
      48: aload_0
      49: aload_1
      50: ldc_w         #287                // int 2147483647
      53: aload_2
      54: aload         4
      56: aconst_null
      57: invokespecial #290                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathUtils$RelativeSortedPaths."<init>":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathUtils$1;)V
      60: astore        5
      62: aload         5
      64: getfield      #293                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathUtils$RelativeSortedPaths.equals:Z
      67: ifne          72
      70: iconst_0
      71: ireturn
      72: aload         5
      74: getfield      #297                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList1:Ljava/util/List;
      77: astore        6
      79: aload         5
      81: getfield      #300                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList2:Ljava/util/List;
      84: astore        7
      86: aload         6
      88: invokeinterface #306,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      93: astore        8
      95: aload         8
      97: invokeinterface #312,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     102: ifeq          172
     105: aload         8
     107: invokeinterface #316,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     112: checkcast     #94                 // class java/nio/file/Path
     115: astore        9
     117: aload         7
     119: aload         9
     121: invokestatic  #322                // Method java/util/Collections.binarySearch:(Ljava/util/List;Ljava/lang/Object;)I
     124: istore        10
     126: iload         10
     128: iconst_m1
     129: if_icmpgt     143
     132: new           #324                // class java/lang/IllegalStateException
     135: dup
     136: ldc_w         #326                // String Unexpected mismatch.
     139: invokespecial #327                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     142: athrow
     143: aload_0
     144: aload         9
     146: invokeinterface #149,  2          // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
     151: aload_1
     152: aload         9
     154: invokeinterface #149,  2          // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
     159: aload_2
     160: aload_3
     161: invokestatic  #331                // Method fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z
     164: ifne          169
     167: iconst_0
     168: ireturn
     169: goto          95
     172: iconst_1
     173: ireturn

  public static boolean directoryContentEquals(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #287                // int 2147483647
       5: getstatic     #274                // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
       8: getstatic     #278                // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;
      11: invokestatic  #342                // Method directoryContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z
      14: ireturn

  public static boolean directoryContentEquals(java.nio.file.Path, java.nio.file.Path, int, java.nio.file.LinkOption[], java.nio.file.FileVisitOption[]) throws java.io.IOException;
    Code:
       0: new           #9                  // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathUtils$RelativeSortedPaths
       3: dup
       4: aload_0
       5: aload_1
       6: iload_2
       7: aload_3
       8: aload         4
      10: aconst_null
      11: invokespecial #290                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathUtils$RelativeSortedPaths."<init>":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathUtils$1;)V
      14: getfield      #293                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathUtils$RelativeSortedPaths.equals:Z
      17: ireturn

  public static boolean fileContentEquals(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #274                // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
       5: getstatic     #276                // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;
       8: invokestatic  #331                // Method fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z
      11: ireturn

  public static boolean fileContentEquals(java.nio.file.Path, java.nio.file.Path, java.nio.file.LinkOption[], java.nio.file.OpenOption[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnonnull     10
       4: aload_1
       5: ifnonnull     10
       8: iconst_1
       9: ireturn
      10: aload_0
      11: ifnull        18
      14: aload_1
      15: ifnonnull     20
      18: iconst_0
      19: ireturn
      20: aload_0
      21: invokeinterface #345,  1          // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
      26: astore        4
      28: aload_1
      29: invokeinterface #345,  1          // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
      34: astore        5
      36: aload         4
      38: aload_2
      39: invokestatic  #233                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      42: istore        6
      44: iload         6
      46: aload         5
      48: aload_2
      49: invokestatic  #233                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      52: if_icmpeq     57
      55: iconst_0
      56: ireturn
      57: iload         6
      59: ifne          64
      62: iconst_1
      63: ireturn
      64: aload         4
      66: aload_2
      67: invokestatic  #201                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      70: ifeq          102
      73: new           #45                 // class java/io/IOException
      76: dup
      77: new           #347                // class java/lang/StringBuilder
      80: dup
      81: invokespecial #349                // Method java/lang/StringBuilder."<init>":()V
      84: ldc_w         #351                // String Can\'t compare directories, only files:
      87: invokevirtual #355                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload         4
      92: invokevirtual #358                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      95: invokevirtual #359                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokespecial #360                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     101: athrow
     102: aload         5
     104: aload_2
     105: invokestatic  #201                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
     108: ifeq          140
     111: new           #45                 // class java/io/IOException
     114: dup
     115: new           #347                // class java/lang/StringBuilder
     118: dup
     119: invokespecial #349                // Method java/lang/StringBuilder."<init>":()V
     122: ldc_w         #351                // String Can\'t compare directories, only files:
     125: invokevirtual #355                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: aload         5
     130: invokevirtual #358                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     133: invokevirtual #359                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     136: invokespecial #360                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     139: athrow
     140: aload         4
     142: invokestatic  #241                // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J
     145: aload         5
     147: invokestatic  #241                // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J
     150: lcmp
     151: ifeq          156
     154: iconst_0
     155: ireturn
     156: aload_0
     157: aload_1
     158: invokeinterface #363,  2          // InterfaceMethod java/nio/file/Path.equals:(Ljava/lang/Object;)Z
     163: ifeq          168
     166: iconst_1
     167: ireturn
     168: aload         4
     170: aload_3
     171: invokestatic  #367                // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
     174: astore        7
     176: aconst_null
     177: astore        8
     179: aload         5
     181: aload_3
     182: invokestatic  #367                // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
     185: astore        9
     187: aconst_null
     188: astore        10
     190: aload         7
     192: aload         9
     194: invokestatic  #373                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/IOUtils.contentEquals:(Ljava/io/InputStream;Ljava/io/InputStream;)Z
     197: istore        11
     199: aload         9
     201: ifnull        234
     204: aload         10
     206: ifnull        229
     209: aload         9
     211: invokevirtual #130                // Method java/io/InputStream.close:()V
     214: goto          234
     217: astore        12
     219: aload         10
     221: aload         12
     223: invokevirtual #135                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     226: goto          234
     229: aload         9
     231: invokevirtual #130                // Method java/io/InputStream.close:()V
     234: aload         7
     236: ifnull        269
     239: aload         8
     241: ifnull        264
     244: aload         7
     246: invokevirtual #130                // Method java/io/InputStream.close:()V
     249: goto          269
     252: astore        12
     254: aload         8
     256: aload         12
     258: invokevirtual #135                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     261: goto          269
     264: aload         7
     266: invokevirtual #130                // Method java/io/InputStream.close:()V
     269: iload         11
     271: ireturn
     272: astore        11
     274: aload         11
     276: astore        10
     278: aload         11
     280: athrow
     281: astore        13
     283: aload         9
     285: ifnull        318
     288: aload         10
     290: ifnull        313
     293: aload         9
     295: invokevirtual #130                // Method java/io/InputStream.close:()V
     298: goto          318
     301: astore        14
     303: aload         10
     305: aload         14
     307: invokevirtual #135                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     310: goto          318
     313: aload         9
     315: invokevirtual #130                // Method java/io/InputStream.close:()V
     318: aload         13
     320: athrow
     321: astore        9
     323: aload         9
     325: astore        8
     327: aload         9
     329: athrow
     330: astore        15
     332: aload         7
     334: ifnull        367
     337: aload         8
     339: ifnull        362
     342: aload         7
     344: invokevirtual #130                // Method java/io/InputStream.close:()V
     347: goto          367
     350: astore        16
     352: aload         8
     354: aload         16
     356: invokevirtual #135                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     359: goto          367
     362: aload         7
     364: invokevirtual #130                // Method java/io/InputStream.close:()V
     367: aload         15
     369: athrow
    Exception table:
       from    to  target type
         209   214   217   Class java/lang/Throwable
         244   249   252   Class java/lang/Throwable
         190   199   272   Class java/lang/Throwable
         190   199   281   any
         293   298   301   Class java/lang/Throwable
         272   283   281   any
         179   234   321   Class java/lang/Throwable
         272   321   321   Class java/lang/Throwable
         179   234   330   any
         342   347   350   Class java/lang/Throwable
         272   332   330   any

  public static java.nio.file.Path[] filter(org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.PathFilter, java.nio.file.Path...);
    Code:
       0: aload_0
       1: ldc_w         #383                // String filter
       4: invokestatic  #389                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_1
       9: ifnonnull     16
      12: getstatic     #391                // Field EMPTY_PATH_ARRAY:[Ljava/nio/file/Path;
      15: areturn
      16: aload_0
      17: aload_1
      18: invokestatic  #397                // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      21: invokestatic  #403                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      24: invokestatic  #407                // Method filterPaths:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream;Ljava/util/stream/Collector;)Ljava/lang/Object;
      27: checkcast     #302                // class java/util/List
      30: getstatic     #391                // Field EMPTY_PATH_ARRAY:[Ljava/nio/file/Path;
      33: invokeinterface #411,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      38: checkcast     #412                // class "[Ljava/nio/file/Path;"
      41: areturn

  private static <R, A> R filterPaths(org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.PathFilter, java.util.stream.Stream<java.nio.file.Path>, java.util.stream.Collector<? super java.nio.file.Path, A, R>);
    Code:
       0: aload_0
       1: ldc_w         #383                // String filter
       4: invokestatic  #389                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_2
       9: ldc_w         #417                // String collector
      12: invokestatic  #389                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      15: pop
      16: aload_1
      17: ifnonnull     30
      20: invokestatic  #421                // InterfaceMethod java/util/stream/Stream.empty:()Ljava/util/stream/Stream;
      23: aload_2
      24: invokeinterface #425,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      29: areturn
      30: aload_1
      31: aload_0
      32: invokedynamic #443,  0            // InvokeDynamic #0:test:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathFilter;)Ljava/util/function/Predicate;
      37: invokeinterface #446,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      42: aload_2
      43: invokeinterface #425,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      48: areturn

  public static java.util.List<java.nio.file.attribute.AclEntry> getAclEntryList(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc_w         #456                // class java/nio/file/attribute/AclFileAttributeView
       4: iconst_0
       5: anewarray     #193                // class java/nio/file/LinkOption
       8: invokestatic  #460                // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;
      11: checkcast     #456                // class java/nio/file/attribute/AclFileAttributeView
      14: astore_1
      15: aload_1
      16: ifnonnull     23
      19: aconst_null
      20: goto          29
      23: aload_1
      24: invokeinterface #464,  1          // InterfaceMethod java/nio/file/attribute/AclFileAttributeView.getAcl:()Ljava/util/List;
      29: areturn

  public static boolean isDirectory(java.nio.file.Path, java.nio.file.LinkOption...);
    Code:
       0: aload_0
       1: ifnull        16
       4: aload_0
       5: aload_1
       6: invokestatic  #201                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public static boolean isEmpty(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: anewarray     #193                // class java/nio/file/LinkOption
       5: invokestatic  #201                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
       8: ifeq          18
      11: aload_0
      12: invokestatic  #472                // Method isEmptyDirectory:(Ljava/nio/file/Path;)Z
      15: goto          22
      18: aload_0
      19: invokestatic  #475                // Method isEmptyFile:(Ljava/nio/file/Path;)Z
      22: ireturn

  public static boolean isEmptyDirectory(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #479                // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;
       4: astore_1
       5: aconst_null
       6: astore_2
       7: aload_1
       8: invokeinterface #480,  1          // InterfaceMethod java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;
      13: invokeinterface #312,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: istore_3
      27: aload_1
      28: ifnull        61
      31: aload_2
      32: ifnull        55
      35: aload_1
      36: invokeinterface #481,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      41: goto          61
      44: astore        4
      46: aload_2
      47: aload         4
      49: invokevirtual #135                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      52: goto          61
      55: aload_1
      56: invokeinterface #481,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      61: iload_3
      62: ireturn
      63: astore_3
      64: aload_3
      65: astore_2
      66: aload_3
      67: athrow
      68: astore        5
      70: aload_1
      71: ifnull        104
      74: aload_2
      75: ifnull        98
      78: aload_1
      79: invokeinterface #481,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      84: goto          104
      87: astore        6
      89: aload_2
      90: aload         6
      92: invokevirtual #135                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      95: goto          104
      98: aload_1
      99: invokeinterface #481,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     104: aload         5
     106: athrow
    Exception table:
       from    to  target type
          35    41    44   Class java/lang/Throwable
           7    27    63   Class java/lang/Throwable
           7    27    68   any
          78    84    87   Class java/lang/Throwable
          63    70    68   any

  public static boolean isEmptyFile(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #241                // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J
       4: lconst_0
       5: lcmp
       6: ifgt          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public static boolean isNewer(java.nio.file.Path, long, java.nio.file.LinkOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc_w         #487                // String file
       4: invokestatic  #389                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: iconst_0
      10: anewarray     #193                // class java/nio/file/LinkOption
      13: invokestatic  #286                // Method java/nio/file/Files.notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      16: ifeq          21
      19: iconst_0
      20: ireturn
      21: aload_0
      22: aload_3
      23: invokestatic  #491                // Method java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;
      26: invokevirtual #497                // Method java/nio/file/attribute/FileTime.toMillis:()J
      29: lload_1
      30: lcmp
      31: ifle          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn

  public static boolean isRegularFile(java.nio.file.Path, java.nio.file.LinkOption...);
    Code:
       0: aload_0
       1: ifnull        16
       4: aload_0
       5: aload_1
       6: invokestatic  #501                // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public static java.nio.file.DirectoryStream<java.nio.file.Path> newDirectoryStream(java.nio.file.Path, org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.PathFilter) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #505                // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DirectoryStreamFilter
       4: dup
       5: aload_1
       6: invokespecial #508                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DirectoryStreamFilter."<init>":(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathFilter;)V
       9: invokestatic  #511                // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter;)Ljava/nio/file/DirectoryStream;
      12: areturn

  private static boolean overrideReadOnly(org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.DeleteOption...);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokestatic  #397                // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      10: invokedynamic #522,  0            // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      15: invokeinterface #526,  2          // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      20: ireturn

  public static java.nio.file.attribute.BasicFileAttributes readBasicFileAttributes(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc_w         #530                // class java/nio/file/attribute/BasicFileAttributes
       4: iconst_0
       5: anewarray     #193                // class java/nio/file/LinkOption
       8: invokestatic  #534                // Method java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;
      11: areturn

  public static java.nio.file.attribute.BasicFileAttributes readBasicFileAttributesUnchecked(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokestatic  #537                // Method readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;
       4: areturn
       5: astore_1
       6: new           #539                // class java/io/UncheckedIOException
       9: dup
      10: aload_1
      11: invokespecial #542                // Method java/io/UncheckedIOException."<init>":(Ljava/io/IOException;)V
      14: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/io/IOException

  static java.util.List<java.nio.file.Path> relativize(java.util.Collection<java.nio.file.Path>, java.nio.file.Path, boolean, java.util.Comparator<? super java.nio.file.Path>);
    Code:
       0: aload_0
       1: invokeinterface #551,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       6: aload_1
       7: dup
       8: invokevirtual #555                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: pop
      12: invokedynamic #565,  0            // InvokeDynamic #2:apply:(Ljava/nio/file/Path;)Ljava/util/function/Function;
      17: invokeinterface #569,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      22: astore        4
      24: iload_2
      25: ifeq          52
      28: aload_3
      29: ifnonnull     42
      32: aload         4
      34: invokeinterface #572,  1          // InterfaceMethod java/util/stream/Stream.sorted:()Ljava/util/stream/Stream;
      39: goto          50
      42: aload         4
      44: aload_3
      45: invokeinterface #575,  2          // InterfaceMethod java/util/stream/Stream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;
      50: astore        4
      52: aload         4
      54: invokestatic  #403                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      57: invokeinterface #425,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      62: checkcast     #302                // class java/util/List
      65: areturn

  public static java.nio.file.Path setReadOnly(java.nio.file.Path, boolean, java.nio.file.LinkOption...) throws java.io.IOException;
    Code:
       0: new           #584                // class java/util/ArrayList
       3: dup
       4: iconst_2
       5: invokespecial #587                // Method java/util/ArrayList."<init>":(I)V
       8: astore_3
       9: aload_0
      10: ldc_w         #589                // class java/nio/file/attribute/DosFileAttributeView
      13: aload_2
      14: invokestatic  #460                // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;
      17: checkcast     #589                // class java/nio/file/attribute/DosFileAttributeView
      20: astore        4
      22: aload         4
      24: ifnull        48
      27: aload         4
      29: iload_1
      30: invokeinterface #592,  2          // InterfaceMethod java/nio/file/attribute/DosFileAttributeView.setReadOnly:(Z)V
      35: aload_0
      36: areturn
      37: astore        5
      39: aload_3
      40: aload         5
      42: invokeinterface #594,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      47: pop
      48: aload_0
      49: ldc_w         #596                // class java/nio/file/attribute/PosixFileAttributeView
      52: aload_2
      53: invokestatic  #460                // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;
      56: checkcast     #596                // class java/nio/file/attribute/PosixFileAttributeView
      59: astore        5
      61: aload         5
      63: ifnull        135
      66: aload         5
      68: invokeinterface #599,  1          // InterfaceMethod java/nio/file/attribute/PosixFileAttributeView.readAttributes:()Ljava/nio/file/attribute/PosixFileAttributes;
      73: astore        6
      75: aload         6
      77: invokeinterface #605,  1          // InterfaceMethod java/nio/file/attribute/PosixFileAttributes.permissions:()Ljava/util/Set;
      82: astore        7
      84: aload         7
      86: getstatic     #611                // Field java/nio/file/attribute/PosixFilePermission.OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
      89: invokeinterface #616,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      94: pop
      95: aload         7
      97: getstatic     #619                // Field java/nio/file/attribute/PosixFilePermission.GROUP_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
     100: invokeinterface #616,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     105: pop
     106: aload         7
     108: getstatic     #622                // Field java/nio/file/attribute/PosixFilePermission.OTHERS_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
     111: invokeinterface #616,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     116: pop
     117: aload_0
     118: aload         7
     120: invokestatic  #626                // Method java/nio/file/Files.setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;
     123: areturn
     124: astore        8
     126: aload_3
     127: aload         8
     129: invokeinterface #594,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     134: pop
     135: aload_3
     136: invokeinterface #628,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     141: ifne          159
     144: new           #630                // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/IOExceptionList
     147: dup
     148: aload_0
     149: invokeinterface #227,  1          // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
     154: aload_3
     155: invokespecial #633                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/IOExceptionList."<init>":(Ljava/lang/String;Ljava/util/List;)V
     158: athrow
     159: new           #45                 // class java/io/IOException
     162: dup
     163: ldc_w         #635                // String No DosFileAttributeView or PosixFileAttributeView for \'%s\' (linkOptions=%s)
     166: iconst_2
     167: anewarray     #4                  // class java/lang/Object
     170: dup
     171: iconst_0
     172: aload_0
     173: aastore
     174: dup
     175: iconst_1
     176: aload_2
     177: invokestatic  #640                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
     180: aastore
     181: invokestatic  #644                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     184: invokespecial #360                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     187: athrow
    Exception table:
       from    to  target type
          27    36    37   Class java/io/IOException
         117   123   124   Class java/io/IOException

  static java.util.Set<java.nio.file.FileVisitOption> toFileVisitOptionSet(java.nio.file.FileVisitOption...);
    Code:
       0: aload_0
       1: ifnonnull     13
       4: ldc_w         #656                // class java/nio/file/FileVisitOption
       7: invokestatic  #662                // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
      10: goto          28
      13: aload_0
      14: invokestatic  #397                // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      17: invokestatic  #665                // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      20: invokeinterface #425,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      25: checkcast     #613                // class java/util/Set
      28: areturn

  public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #670                // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;
       5: pop
       6: aload_0
       7: areturn

  public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.nio.file.Path, java.util.Set<java.nio.file.FileVisitOption>, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: iload_3
       3: aload_0
       4: invokestatic  #677                // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;
       7: pop
       8: aload_0
       9: areturn

  public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.lang.String, java.lang.String...) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #188                // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
       6: invokestatic  #86                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
       9: areturn

  public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.net.URI) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #690                // Method java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;
       5: invokestatic  #86                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
       8: areturn

  public static java.util.stream.Stream<java.nio.file.Path> walk(java.nio.file.Path, org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.PathFilter, int, boolean, java.nio.file.FileVisitOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_2
       2: aload         4
       4: invokestatic  #698                // Method java/nio/file/Files.walk:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;
       7: aload_1
       8: iload_3
       9: invokedynamic #706,  0            // InvokeDynamic #3:test:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathFilter;Z)Ljava/util/function/Predicate;
      14: invokeinterface #446,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      19: areturn

  private org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.PathUtils();
    Code:
       0: aload_0
       1: invokespecial #707                // Method java/lang/Object."<init>":()V
       4: return

  private static boolean lambda$walk$2(org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.PathFilter, boolean, java.nio.file.Path);
    Code:
       0: aload_0
       1: aload_2
       2: iload_1
       3: ifeq          13
       6: aload_2
       7: invokestatic  #711                // Method readBasicFileAttributesUnchecked:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;
      10: goto          14
      13: aconst_null
      14: invokeinterface #717,  3          // InterfaceMethod org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
      19: getstatic     #723                // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
      22: if_acmpne     29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  private static boolean lambda$overrideReadOnly$1(org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.DeleteOption);
    Code:
       0: aload_0
       1: getstatic     #729                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/StandardDeleteOption.OVERRIDE_READ_ONLY:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/StandardDeleteOption;
       4: if_acmpne     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private static boolean lambda$filterPaths$0(org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.PathFilter, java.nio.file.Path);
    Code:
       0: aload_1
       1: ifnull        25
       4: aload_0
       5: aload_1
       6: aload_1
       7: invokestatic  #537                // Method readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;
      10: invokeinterface #717,  3          // InterfaceMethod org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
      15: getstatic     #723                // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
      18: if_acmpne     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn
      27: astore_2
      28: iconst_0
      29: ireturn
    Exception table:
       from    to  target type
           0    26    27   Class java/io/IOException

  static org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.AccumulatorPathVisitor access$000(java.nio.file.Path, int, java.nio.file.FileVisitOption[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #734                // Method accumulate:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/AccumulatorPathVisitor;
       6: areturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #740                // class java/nio/file/CopyOption
       4: putstatic     #742                // Field EMPTY_COPY_OPTIONS:[Ljava/nio/file/CopyOption;
       7: iconst_0
       8: anewarray     #744                // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption
      11: putstatic     #68                 // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption;
      14: iconst_0
      15: anewarray     #656                // class java/nio/file/FileVisitOption
      18: putstatic     #278                // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;
      21: iconst_0
      22: anewarray     #193                // class java/nio/file/LinkOption
      25: putstatic     #274                // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
      28: iconst_1
      29: anewarray     #193                // class java/nio/file/LinkOption
      32: dup
      33: iconst_0
      34: getstatic     #197                // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
      37: aastore
      38: putstatic     #217                // Field NOFOLLOW_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
      41: iconst_0
      42: anewarray     #746                // class java/nio/file/OpenOption
      45: putstatic     #276                // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;
      48: iconst_0
      49: anewarray     #94                 // class java/nio/file/Path
      52: putstatic     #391                // Field EMPTY_PATH_ARRAY:[Ljava/nio/file/Path;
      55: return
}
