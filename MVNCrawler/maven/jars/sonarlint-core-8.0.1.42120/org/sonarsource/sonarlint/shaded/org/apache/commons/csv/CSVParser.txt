Compiled from "CSVParser.java"
public final class org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVParser implements java.lang.Iterable<org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVRecord>, java.io.Closeable {
  private final org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat format;

  private final org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVParser$Headers headers;

  private final org.sonarsource.sonarlint.shaded.org.apache.commons.csv.Lexer lexer;

  private final org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVParser$CSVRecordIterator csvRecordIterator;

  private final java.util.List<java.lang.String> recordList;

  private long recordNumber;

  private final long characterOffset;

  private final org.sonarsource.sonarlint.shaded.org.apache.commons.csv.Token reusableToken;

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVParser parse(java.io.File, java.nio.charset.Charset, org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #45                 // String file
       3: invokestatic  #51                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #57                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      11: aload_1
      12: aload_2
      13: invokestatic  #60                 // Method parse:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser;
      16: areturn

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVParser parse(java.io.InputStream, java.nio.charset.Charset, org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #66                 // String inputStream
       3: invokestatic  #51                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #67                 // String format
      10: invokestatic  #51                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: new           #69                 // class java/io/InputStreamReader
      17: dup
      18: aload_0
      19: aload_1
      20: invokespecial #73                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
      23: aload_2
      24: invokestatic  #76                 // Method parse:(Ljava/io/Reader;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser;
      27: areturn

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVParser parse(java.nio.file.Path, java.nio.charset.Charset, org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #79                 // String path
       3: invokestatic  #51                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #67                 // String format
      10: invokestatic  #51                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: iconst_0
      16: anewarray     #81                 // class java/nio/file/OpenOption
      19: invokestatic  #87                 // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
      22: aload_1
      23: aload_2
      24: invokestatic  #89                 // Method parse:(Ljava/io/InputStream;Ljava/nio/charset/Charset;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser;
      27: areturn

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVParser parse(java.io.Reader, org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat) throws java.io.IOException;
    Code:
       0: new           #2                  // class org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #93                 // Method "<init>":(Ljava/io/Reader;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;)V
       9: areturn

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVParser parse(java.lang.String, org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #98                 // String string
       3: invokestatic  #51                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: ldc           #67                 // String format
      10: invokestatic  #51                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: new           #2                  // class org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser
      17: dup
      18: new           #100                // class java/io/StringReader
      21: dup
      22: aload_0
      23: invokespecial #103                // Method java/io/StringReader."<init>":(Ljava/lang/String;)V
      26: aload_1
      27: invokespecial #93                 // Method "<init>":(Ljava/io/Reader;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;)V
      30: areturn

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVParser parse(java.net.URL, java.nio.charset.Charset, org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #107                // String url
       3: invokestatic  #51                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: ldc           #108                // String charset
      10: invokestatic  #51                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_2
      15: ldc           #67                 // String format
      17: invokestatic  #51                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      20: pop
      21: new           #2                  // class org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser
      24: dup
      25: new           #69                 // class java/io/InputStreamReader
      28: dup
      29: aload_0
      30: invokevirtual #114                // Method java/net/URL.openStream:()Ljava/io/InputStream;
      33: aload_1
      34: invokespecial #73                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
      37: aload_2
      38: invokespecial #93                 // Method "<init>":(Ljava/io/Reader;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;)V
      41: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVParser(java.io.Reader, org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lconst_0
       4: lconst_1
       5: invokespecial #118                // Method "<init>":(Ljava/io/Reader;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;JJ)V
       8: return

  public org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVParser(java.io.Reader, org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVFormat, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #123                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #125                // class java/util/ArrayList
       8: dup
       9: invokespecial #126                // Method java/util/ArrayList."<init>":()V
      12: putfield      #128                // Field recordList:Ljava/util/List;
      15: aload_0
      16: new           #22                 // class org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token
      19: dup
      20: invokespecial #129                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token."<init>":()V
      23: putfield      #131                // Field reusableToken:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token;
      26: aload_1
      27: ldc           #132                // String reader
      29: invokestatic  #51                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      32: pop
      33: aload_2
      34: ldc           #67                 // String format
      36: invokestatic  #51                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      39: pop
      40: aload_0
      41: aload_2
      42: invokevirtual #138                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat.copy:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      45: putfield      #140                // Field format:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      48: aload_0
      49: new           #142                // class org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Lexer
      52: dup
      53: aload_2
      54: new           #144                // class org/sonarsource/sonarlint/shaded/org/apache/commons/csv/ExtendedBufferedReader
      57: dup
      58: aload_1
      59: invokespecial #147                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/ExtendedBufferedReader."<init>":(Ljava/io/Reader;)V
      62: invokespecial #150                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Lexer."<init>":(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/ExtendedBufferedReader;)V
      65: putfield      #152                // Field lexer:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Lexer;
      68: aload_0
      69: new           #17                 // class org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser$CSVRecordIterator
      72: dup
      73: aload_0
      74: invokespecial #155                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser$CSVRecordIterator."<init>":(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser;)V
      77: putfield      #157                // Field csvRecordIterator:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser$CSVRecordIterator;
      80: aload_0
      81: aload_0
      82: invokespecial #161                // Method createHeaders:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser$Headers;
      85: putfield      #163                // Field headers:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser$Headers;
      88: aload_0
      89: lload_3
      90: putfield      #165                // Field characterOffset:J
      93: aload_0
      94: lload         5
      96: lconst_1
      97: lsub
      98: putfield      #167                // Field recordNumber:J
     101: return

  private void addRecordValue(boolean);
    Code:
       0: aload_0
       1: getfield      #131                // Field reusableToken:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token;
       4: getfield      #173                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token.content:Ljava/lang/StringBuilder;
       7: invokevirtual #179                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      10: astore_2
      11: aload_0
      12: getfield      #140                // Field format:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      15: invokevirtual #183                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat.getTrim:()Z
      18: ifeq          28
      21: aload_2
      22: invokevirtual #188                // Method java/lang/String.trim:()Ljava/lang/String;
      25: goto          29
      28: aload_2
      29: astore_3
      30: iload_1
      31: ifeq          52
      34: aload_3
      35: invokevirtual #191                // Method java/lang/String.isEmpty:()Z
      38: ifeq          52
      41: aload_0
      42: getfield      #140                // Field format:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      45: invokevirtual #194                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat.getTrailingDelimiter:()Z
      48: ifeq          52
      51: return
      52: aload_0
      53: getfield      #128                // Field recordList:Ljava/util/List;
      56: aload_0
      57: aload_3
      58: invokespecial #198                // Method handleNull:(Ljava/lang/String;)Ljava/lang/String;
      61: invokeinterface #204,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      66: pop
      67: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #152                // Field lexer:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Lexer;
       4: ifnull        14
       7: aload_0
       8: getfield      #152                // Field lexer:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Lexer;
      11: invokevirtual #211                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Lexer.close:()V
      14: return

  private java.util.Map<java.lang.String, java.lang.Integer> createEmptyHeaderMap();
    Code:
       0: aload_0
       1: getfield      #140                // Field format:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
       4: invokevirtual #217                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat.getIgnoreHeaderCase:()Z
       7: ifeq          23
      10: new           #219                // class java/util/TreeMap
      13: dup
      14: getstatic     #223                // Field java/lang/String.CASE_INSENSITIVE_ORDER:Ljava/util/Comparator;
      17: invokespecial #226                // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
      20: goto          30
      23: new           #228                // class java/util/LinkedHashMap
      26: dup
      27: invokespecial #229                // Method java/util/LinkedHashMap."<init>":()V
      30: areturn

  private org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVParser$Headers createHeaders() throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_1
       2: aconst_null
       3: astore_2
       4: aload_0
       5: getfield      #140                // Field format:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
       8: invokevirtual #235                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat.getHeader:()[Ljava/lang/String;
      11: astore_3
      12: aload_3
      13: ifnull        284
      16: aload_0
      17: invokespecial #237                // Method createEmptyHeaderMap:()Ljava/util/Map;
      20: astore_1
      21: aconst_null
      22: astore        4
      24: aload_3
      25: arraylength
      26: ifne          50
      29: aload_0
      30: invokevirtual #241                // Method nextRecord:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVRecord;
      33: astore        5
      35: aload         5
      37: ifnull        47
      40: aload         5
      42: invokevirtual #246                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVRecord.values:()[Ljava/lang/String;
      45: astore        4
      47: goto          68
      50: aload_0
      51: getfield      #140                // Field format:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      54: invokevirtual #251                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat.getSkipHeaderRecord:()Z
      57: ifeq          65
      60: aload_0
      61: invokevirtual #241                // Method nextRecord:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVRecord;
      64: pop
      65: aload_3
      66: astore        4
      68: aload         4
      70: ifnull        284
      73: iconst_0
      74: istore        5
      76: iload         5
      78: aload         4
      80: arraylength
      81: if_icmpge     284
      84: aload         4
      86: iload         5
      88: aaload
      89: astore        6
      91: aload         6
      93: ifnull        107
      96: aload         6
      98: invokevirtual #188                // Method java/lang/String.trim:()Ljava/lang/String;
     101: invokevirtual #191                // Method java/lang/String.isEmpty:()Z
     104: ifeq          111
     107: iconst_1
     108: goto          112
     111: iconst_0
     112: istore        7
     114: iload         7
     116: ifeq          161
     119: aload_0
     120: getfield      #140                // Field format:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     123: invokevirtual #254                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat.getAllowMissingColumnNames:()Z
     126: ifne          161
     129: new           #256                // class java/lang/IllegalArgumentException
     132: dup
     133: new           #175                // class java/lang/StringBuilder
     136: dup
     137: invokespecial #257                // Method java/lang/StringBuilder."<init>":()V
     140: ldc_w         #259                // String A header name is missing in
     143: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: aload         4
     148: invokestatic  #268                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
     151: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: invokevirtual #179                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     157: invokespecial #269                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     160: athrow
     161: aload         6
     163: ifnull        181
     166: aload_1
     167: aload         6
     169: invokeinterface #272,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     174: ifeq          181
     177: iconst_1
     178: goto          182
     181: iconst_0
     182: istore        8
     184: iload         8
     186: ifeq          235
     189: iload         7
     191: ifne          235
     194: aload_0
     195: getfield      #140                // Field format:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
     198: invokevirtual #275                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat.getAllowDuplicateHeaderNames:()Z
     201: ifne          235
     204: new           #256                // class java/lang/IllegalArgumentException
     207: dup
     208: ldc_w         #277                // String The header contains a duplicate name: \"%s\" in %s. If this is valid then use CSVFormat.withAllowDuplicateHeaderNames().
     211: iconst_2
     212: anewarray     #5                  // class java/lang/Object
     215: dup
     216: iconst_0
     217: aload         6
     219: aastore
     220: dup
     221: iconst_1
     222: aload         4
     224: invokestatic  #268                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
     227: aastore
     228: invokestatic  #280                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     231: invokespecial #269                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     234: athrow
     235: aload         6
     237: ifnull        278
     240: aload_1
     241: aload         6
     243: iload         5
     245: invokestatic  #286                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     248: invokeinterface #290,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     253: pop
     254: aload_2
     255: ifnonnull     269
     258: new           #125                // class java/util/ArrayList
     261: dup
     262: aload         4
     264: arraylength
     265: invokespecial #293                // Method java/util/ArrayList."<init>":(I)V
     268: astore_2
     269: aload_2
     270: aload         6
     272: invokeinterface #204,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     277: pop
     278: iinc          5, 1
     281: goto          76
     284: aload_2
     285: ifnonnull     295
     288: invokestatic  #299                // Method java/util/Collections.emptyList:()Ljava/util/List;
     291: astore_2
     292: goto          300
     295: aload_2
     296: invokestatic  #303                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
     299: astore_2
     300: new           #14                 // class org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser$Headers
     303: dup
     304: aload_1
     305: aload_2
     306: invokespecial #306                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser$Headers."<init>":(Ljava/util/Map;Ljava/util/List;)V
     309: areturn

  public long getCurrentLineNumber();
    Code:
       0: aload_0
       1: getfield      #152                // Field lexer:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Lexer;
       4: invokevirtual #322                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Lexer.getCurrentLineNumber:()J
       7: lreturn

  public java.lang.String getFirstEndOfLine();
    Code:
       0: aload_0
       1: getfield      #152                // Field lexer:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Lexer;
       4: invokevirtual #326                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Lexer.getFirstEol:()Ljava/lang/String;
       7: areturn

  public java.util.Map<java.lang.String, java.lang.Integer> getHeaderMap();
    Code:
       0: aload_0
       1: getfield      #163                // Field headers:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser$Headers;
       4: getfield      #330                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser$Headers.headerMap:Ljava/util/Map;
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_0
      13: invokespecial #237                // Method createEmptyHeaderMap:()Ljava/util/Map;
      16: astore_1
      17: aload_1
      18: aload_0
      19: getfield      #163                // Field headers:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser$Headers;
      22: getfield      #330                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser$Headers.headerMap:Ljava/util/Map;
      25: invokeinterface #334,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      30: aload_1
      31: areturn

  java.util.Map<java.lang.String, java.lang.Integer> getHeaderMapRaw();
    Code:
       0: aload_0
       1: getfield      #163                // Field headers:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser$Headers;
       4: getfield      #330                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser$Headers.headerMap:Ljava/util/Map;
       7: areturn

  public java.util.List<java.lang.String> getHeaderNames();
    Code:
       0: aload_0
       1: getfield      #163                // Field headers:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser$Headers;
       4: getfield      #340                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser$Headers.headerNames:Ljava/util/List;
       7: invokestatic  #303                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      10: areturn

  public long getRecordNumber();
    Code:
       0: aload_0
       1: getfield      #167                // Field recordNumber:J
       4: lreturn

  public java.util.List<org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVRecord> getRecords() throws java.io.IOException;
    Code:
       0: new           #125                // class java/util/ArrayList
       3: dup
       4: invokespecial #126                // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: invokevirtual #241                // Method nextRecord:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVRecord;
      12: dup
      13: astore_1
      14: ifnull        28
      17: aload_2
      18: aload_1
      19: invokeinterface #204,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      24: pop
      25: goto          8
      28: aload_2
      29: areturn

  private java.lang.String handleNull(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #131                // Field reusableToken:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token;
       4: getfield      #349                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token.isQuoted:Z
       7: istore_2
       8: aload_0
       9: getfield      #140                // Field format:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      12: invokevirtual #352                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat.getNullString:()Ljava/lang/String;
      15: astore_3
      16: aload_0
      17: invokespecial #355                // Method isStrictQuoteMode:()Z
      20: istore        4
      22: aload_1
      23: aload_3
      24: invokevirtual #358                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ifeq          45
      30: iload         4
      32: ifeq          43
      35: iload_2
      36: ifeq          43
      39: aload_1
      40: goto          44
      43: aconst_null
      44: areturn
      45: iload         4
      47: ifeq          69
      50: aload_3
      51: ifnonnull     69
      54: aload_1
      55: invokevirtual #191                // Method java/lang/String.isEmpty:()Z
      58: ifeq          69
      61: iload_2
      62: ifne          69
      65: aconst_null
      66: goto          70
      69: aload_1
      70: areturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #152                // Field lexer:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Lexer;
       4: invokevirtual #363                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Lexer.isClosed:()Z
       7: ireturn

  private boolean isStrictQuoteMode();
    Code:
       0: aload_0
       1: getfield      #140                // Field format:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
       4: invokevirtual #367                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat.getQuoteMode:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
       7: getstatic     #373                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
      10: if_acmpeq     26
      13: aload_0
      14: getfield      #140                // Field format:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat;
      17: invokevirtual #367                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVFormat.getQuoteMode:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
      20: getstatic     #376                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode.NON_NUMERIC:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/QuoteMode;
      23: if_acmpne     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public java.util.Iterator<org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVRecord> iterator();
    Code:
       0: aload_0
       1: getfield      #157                // Field csvRecordIterator:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser$CSVRecordIterator;
       4: areturn

  org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVRecord nextRecord() throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #128                // Field recordList:Ljava/util/List;
       6: invokeinterface #382,  1          // InterfaceMethod java/util/List.clear:()V
      11: aconst_null
      12: astore_2
      13: aload_0
      14: getfield      #152                // Field lexer:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Lexer;
      17: invokevirtual #385                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Lexer.getCharacterPosition:()J
      20: aload_0
      21: getfield      #165                // Field characterOffset:J
      24: ladd
      25: lstore_3
      26: aload_0
      27: getfield      #131                // Field reusableToken:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token;
      30: invokevirtual #388                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token.reset:()V
      33: aload_0
      34: getfield      #152                // Field lexer:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Lexer;
      37: aload_0
      38: getfield      #131                // Field reusableToken:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token;
      41: invokevirtual #392                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Lexer.nextToken:(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token;)Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token;
      44: pop
      45: getstatic     #396                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser$1.$SwitchMap$org$apache$commons$csv$Token$Type:[I
      48: aload_0
      49: getfield      #131                // Field reusableToken:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token;
      52: getfield      #400                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token.type:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token$Type;
      55: invokevirtual #404                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token$Type.ordinal:()I
      58: iaload
      59: tableswitch   { // 1 to 5
                     1: 92
                     2: 100
                     3: 108
                     4: 126
                     5: 163
               default: 210
          }
      92: aload_0
      93: iconst_0
      94: invokespecial #406                // Method addRecordValue:(Z)V
      97: goto          244
     100: aload_0
     101: iconst_1
     102: invokespecial #406                // Method addRecordValue:(Z)V
     105: goto          244
     108: aload_0
     109: getfield      #131                // Field reusableToken:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token;
     112: getfield      #409                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token.isReady:Z
     115: ifeq          244
     118: aload_0
     119: iconst_1
     120: invokespecial #406                // Method addRecordValue:(Z)V
     123: goto          244
     126: new           #43                 // class java/io/IOException
     129: dup
     130: new           #175                // class java/lang/StringBuilder
     133: dup
     134: invokespecial #257                // Method java/lang/StringBuilder."<init>":()V
     137: ldc_w         #411                // String (line
     140: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: aload_0
     144: invokevirtual #412                // Method getCurrentLineNumber:()J
     147: invokevirtual #415                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     150: ldc_w         #417                // String ) invalid parse sequence
     153: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: invokevirtual #179                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     159: invokespecial #418                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     162: athrow
     163: aload_2
     164: ifnonnull     178
     167: new           #175                // class java/lang/StringBuilder
     170: dup
     171: invokespecial #257                // Method java/lang/StringBuilder."<init>":()V
     174: astore_2
     175: goto          185
     178: aload_2
     179: bipush        10
     181: invokevirtual #421                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     184: pop
     185: aload_2
     186: aload_0
     187: getfield      #131                // Field reusableToken:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token;
     190: getfield      #173                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token.content:Ljava/lang/StringBuilder;
     193: invokevirtual #424                // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
     196: pop
     197: aload_0
     198: getfield      #131                // Field reusableToken:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token;
     201: getstatic     #427                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token$Type.TOKEN:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token$Type;
     204: putfield      #400                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token.type:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token$Type;
     207: goto          244
     210: new           #429                // class java/lang/IllegalStateException
     213: dup
     214: new           #175                // class java/lang/StringBuilder
     217: dup
     218: invokespecial #257                // Method java/lang/StringBuilder."<init>":()V
     221: ldc_w         #431                // String Unexpected Token type:
     224: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     227: aload_0
     228: getfield      #131                // Field reusableToken:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token;
     231: getfield      #400                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token.type:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token$Type;
     234: invokevirtual #434                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     237: invokevirtual #179                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     240: invokespecial #435                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     243: athrow
     244: aload_0
     245: getfield      #131                // Field reusableToken:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token;
     248: getfield      #400                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token.type:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token$Type;
     251: getstatic     #427                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token$Type.TOKEN:Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/Token$Type;
     254: if_acmpeq     26
     257: aload_0
     258: getfield      #128                // Field recordList:Ljava/util/List;
     261: invokeinterface #436,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     266: ifne          324
     269: aload_0
     270: dup
     271: getfield      #167                // Field recordNumber:J
     274: lconst_1
     275: ladd
     276: putfield      #167                // Field recordNumber:J
     279: aload_2
     280: ifnonnull     287
     283: aconst_null
     284: goto          291
     287: aload_2
     288: invokevirtual #179                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     291: astore        5
     293: new           #243                // class org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVRecord
     296: dup
     297: aload_0
     298: aload_0
     299: getfield      #128                // Field recordList:Ljava/util/List;
     302: getstatic     #441                // Field org/sonarsource/sonarlint/shaded/org/apache/commons/csv/Constants.EMPTY_STRING_ARRAY:[Ljava/lang/String;
     305: invokeinterface #445,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     310: checkcast     #248                // class "[Ljava/lang/String;"
     313: aload         5
     315: aload_0
     316: getfield      #167                // Field recordNumber:J
     319: lload_3
     320: invokespecial #448                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVRecord."<init>":(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/csv/CSVParser;[Ljava/lang/String;Ljava/lang/String;JJ)V
     323: astore_1
     324: aload_1
     325: areturn

  public java.util.stream.Stream<org.sonarsource.sonarlint.shaded.org.apache.commons.csv.CSVRecord> stream();
    Code:
       0: aload_0
       1: invokevirtual #457                // Method iterator:()Ljava/util/Iterator;
       4: bipush        16
       6: invokestatic  #463                // Method java/util/Spliterators.spliteratorUnknownSize:(Ljava/util/Iterator;I)Ljava/util/Spliterator;
       9: iconst_0
      10: invokestatic  #468                // Method java/util/stream/StreamSupport.stream:(Ljava/util/Spliterator;Z)Ljava/util/stream/Stream;
      13: areturn
}
