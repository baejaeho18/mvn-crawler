Compiled from "DeletingPathVisitor.java"
public class org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.DeletingPathVisitor extends org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.CountingPathVisitor {
  private final java.lang.String[] skip;

  private final boolean overrideReadOnly;

  private final java.nio.file.LinkOption[] linkOptions;

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.DeletingPathVisitor withBigIntegerCounters();
    Code:
       0: new           #2                  // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeletingPathVisitor
       3: dup
       4: invokestatic  #22                 // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
       7: iconst_0
       8: anewarray     #24                 // class java/lang/String
      11: invokespecial #28                 // Method "<init>":(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V
      14: areturn

  public static org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.DeletingPathVisitor withLongCounters();
    Code:
       0: new           #2                  // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeletingPathVisitor
       3: dup
       4: invokestatic  #32                 // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters.longPathCounters:()Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;
       7: iconst_0
       8: anewarray     #24                 // class java/lang/String
      11: invokespecial #28                 // Method "<init>":(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V
      14: areturn

  public org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.DeletingPathVisitor(org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.Counters$PathCounters, org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.DeleteOption[], java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #38                 // Field org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathUtils.NOFOLLOW_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
       5: aload_2
       6: aload_3
       7: invokespecial #41                 // Method "<init>":(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;[Ljava/nio/file/LinkOption;[Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V
      10: return

  public org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.DeletingPathVisitor(org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.Counters$PathCounters, java.nio.file.LinkOption[], org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.DeleteOption[], java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #50                 // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/CountingPathVisitor."<init>":(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;)V
       5: aload         4
       7: ifnull        21
      10: aload         4
      12: invokevirtual #55                 // Method "[Ljava/lang/String;".clone:()Ljava/lang/Object;
      15: checkcast     #51                 // class "[Ljava/lang/String;"
      18: goto          24
      21: getstatic     #60                 // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;
      24: astore        5
      26: aload         5
      28: invokestatic  #66                 // Method java/util/Arrays.sort:([Ljava/lang/Object;)V
      31: aload_0
      32: aload         5
      34: putfield      #68                 // Field skip:[Ljava/lang/String;
      37: aload_0
      38: aload_3
      39: invokestatic  #73                 // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/StandardDeleteOption.overrideReadOnly:([Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption;)Z
      42: putfield      #75                 // Field overrideReadOnly:Z
      45: aload_0
      46: aload_2
      47: ifnonnull     56
      50: getstatic     #38                 // Field org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathUtils.NOFOLLOW_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
      53: goto          63
      56: aload_2
      57: invokevirtual #76                 // Method "[Ljava/nio/file/LinkOption;".clone:()Ljava/lang/Object;
      60: checkcast     #56                 // class "[Ljava/nio/file/LinkOption;"
      63: putfield      #78                 // Field linkOptions:[Ljava/nio/file/LinkOption;
      66: return

  public org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.DeletingPathVisitor(org.sonarsource.sonarlint.shaded.org.apache.commons.io.file.Counters$PathCounters, java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #82                 // Field org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathUtils.EMPTY_DELETE_OPTION_ARRAY:[Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption;
       5: aload_2
       6: invokespecial #84                 // Method "<init>":(Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/Counters$PathCounters;[Lorg/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V
       9: return

  private boolean accept(java.nio.file.Path);
    Code:
       0: aload_0
       1: getfield      #68                 // Field skip:[Ljava/lang/String;
       4: aload_1
       5: invokeinterface #92,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
      10: aconst_null
      11: invokestatic  #98                 // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
      14: invokestatic  #102                // Method java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I
      17: ifge          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: aload_1
       9: invokespecial #108                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z
      12: ifne          17
      15: iconst_0
      16: ireturn
      17: aload_0
      18: invokevirtual #114                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: aload_1
      22: invokevirtual #114                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      25: if_acmpeq     30
      28: iconst_0
      29: ireturn
      30: aload_1
      31: checkcast     #2                  // class org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/DeletingPathVisitor
      34: astore_2
      35: aload_0
      36: getfield      #75                 // Field overrideReadOnly:Z
      39: aload_2
      40: getfield      #75                 // Field overrideReadOnly:Z
      43: if_icmpne     64
      46: aload_0
      47: getfield      #68                 // Field skip:[Ljava/lang/String;
      50: aload_2
      51: getfield      #68                 // Field skip:[Ljava/lang/String;
      54: invokestatic  #117                // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
      57: ifeq          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: ireturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: aload_0
       4: invokespecial #124                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/CountingPathVisitor.hashCode:()I
       7: istore_2
       8: bipush        31
      10: iload_2
      11: imul
      12: aload_0
      13: getfield      #68                 // Field skip:[Ljava/lang/String;
      16: invokestatic  #127                // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I
      19: iadd
      20: istore_2
      21: bipush        31
      23: iload_2
      24: imul
      25: iconst_1
      26: anewarray     #110                // class java/lang/Object
      29: dup
      30: iconst_0
      31: aload_0
      32: getfield      #75                 // Field overrideReadOnly:Z
      35: invokestatic  #133                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      38: aastore
      39: invokestatic  #136                // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      42: iadd
      43: istore_2
      44: iload_2
      45: ireturn

  public java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path, java.io.IOException) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #146                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathUtils.isEmptyDirectory:(Ljava/nio/file/Path;)Z
       4: ifeq          12
       7: aload_1
       8: invokestatic  #151                // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
      11: pop
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokespecial #153                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/CountingPathVisitor.postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;
      18: areturn

  public java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #160                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/CountingPathVisitor.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
       6: pop
       7: aload_0
       8: aload_1
       9: invokespecial #162                // Method accept:(Ljava/nio/file/Path;)Z
      12: ifeq          21
      15: getstatic     #168                // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
      18: goto          24
      21: getstatic     #171                // Field java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;
      24: areturn

  public java.nio.file.FileVisitResult visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #162                // Method accept:(Ljava/nio/file/Path;)Z
       5: ifeq          56
       8: aload_1
       9: aload_0
      10: getfield      #78                 // Field linkOptions:[Ljava/nio/file/LinkOption;
      13: invokestatic  #180                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      16: ifeq          41
      19: aload_0
      20: getfield      #75                 // Field overrideReadOnly:Z
      23: ifeq          36
      26: aload_1
      27: iconst_0
      28: aload_0
      29: getfield      #78                 // Field linkOptions:[Ljava/nio/file/LinkOption;
      32: invokestatic  #184                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/file/PathUtils.setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
      35: pop
      36: aload_1
      37: invokestatic  #151                // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
      40: pop
      41: aload_1
      42: invokestatic  #187                // Method java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z
      45: ifeq          56
      48: aload_1
      49: invokestatic  #191                // Method java/nio/file/Files.delete:(Ljava/nio/file/Path;)V
      52: goto          56
      55: astore_3
      56: aload_0
      57: aload_1
      58: aload_2
      59: invokevirtual #195                // Method updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V
      62: getstatic     #168                // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
      65: areturn
    Exception table:
       from    to  target type
          48    52    55   Class java/nio/file/NoSuchFileException

  public java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object, java.io.IOException) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #88                 // class java/nio/file/Path
       5: aload_2
       6: invokevirtual #198                // Method postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;
       9: areturn

  public java.nio.file.FileVisitResult visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #88                 // class java/nio/file/Path
       5: aload_2
       6: invokevirtual #201                // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
       9: areturn

  public java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #88                 // class java/nio/file/Path
       5: aload_2
       6: invokevirtual #202                // Method preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
       9: areturn
}
