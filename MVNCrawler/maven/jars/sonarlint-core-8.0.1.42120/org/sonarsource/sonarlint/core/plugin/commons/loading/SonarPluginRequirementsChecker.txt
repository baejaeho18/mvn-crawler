Compiled from "SonarPluginRequirementsChecker.java"
public class org.sonarsource.sonarlint.core.plugin.commons.loading.SonarPluginRequirementsChecker {
  private static final java.lang.String OLD_SONARTS_PLUGIN_KEY;

  private static final java.lang.String IMPLEMENTED_SQ_API;

  private static final org.sonar.api.utils.log.Logger LOG;

  private final org.sonarsource.sonarlint.core.plugin.commons.PluginsMinVersions pluginMinVersions;

  public org.sonarsource.sonarlint.core.plugin.commons.loading.SonarPluginRequirementsChecker();
    Code:
       0: aload_0
       1: new           #50                 // class org/sonarsource/sonarlint/core/plugin/commons/PluginsMinVersions
       4: dup
       5: invokespecial #52                 // Method org/sonarsource/sonarlint/core/plugin/commons/PluginsMinVersions."<init>":()V
       8: invokespecial #55                 // Method "<init>":(Lorg/sonarsource/sonarlint/core/plugin/commons/PluginsMinVersions;)V
      11: return

  org.sonarsource.sonarlint.core.plugin.commons.loading.SonarPluginRequirementsChecker(org.sonarsource.sonarlint.core.plugin.commons.PluginsMinVersions);
    Code:
       0: aload_0
       1: invokespecial #58                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #60                 // Field pluginMinVersions:Lorg/sonarsource/sonarlint/core/plugin/commons/PluginsMinVersions;
       9: return

  public java.util.Map<java.lang.String, org.sonarsource.sonarlint.core.plugin.commons.loading.PluginRequirementsCheckResult> checkRequirements(java.util.Set<java.nio.file.Path>, java.util.Set<org.sonarsource.sonarlint.core.commons.Language>, org.sonarsource.sonarlint.core.commons.Version, java.util.Optional<org.sonarsource.sonarlint.core.commons.Version>);
    Code:
       0: new           #67                 // class java/util/HashMap
       3: dup
       4: invokespecial #68                 // Method java/util/HashMap."<init>":()V
       7: astore        5
       9: aload_1
      10: invokeinterface #74,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      15: astore        6
      17: aload         6
      19: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          156
      27: aload         6
      29: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #88                 // class java/nio/file/Path
      37: astore        7
      39: aload         7
      41: invokestatic  #94                 // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.create:(Ljava/nio/file/Path;)Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;
      44: astore        8
      46: goto          71
      49: astore        9
      51: getstatic     #100                // Field LOG:Lorg/sonar/api/utils/log/Logger;
      54: aload         7
      56: invokedynamic #112,  0            // InvokeDynamic #0:makeConcatWithConstants:(Ljava/nio/file/Path;)Ljava/lang/String;
      61: aload         9
      63: invokeinterface #118,  3          // InterfaceMethod org/sonar/api/utils/log/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      68: goto          17
      71: aload         5
      73: aload         8
      75: invokevirtual #122                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getKey:()Ljava/lang/String;
      78: invokeinterface #126,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      83: ifeq          130
      86: new           #128                // class java/lang/IllegalStateException
      89: dup
      90: aload         8
      92: invokevirtual #122                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getKey:()Ljava/lang/String;
      95: aload         8
      97: invokevirtual #132                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getJarFile:()Ljava/io/File;
     100: aload         5
     102: aload         8
     104: invokevirtual #122                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getKey:()Ljava/lang/String;
     107: invokeinterface #136,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     112: checkcast     #138                // class org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult
     115: invokevirtual #142                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult.getPlugin:()Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;
     118: invokevirtual #132                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getJarFile:()Ljava/io/File;
     121: invokedynamic #147,  0            // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;Ljava/io/File;Ljava/io/File;)Ljava/lang/String;
     126: invokespecial #150                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     129: athrow
     130: aload         5
     132: aload         8
     134: invokevirtual #122                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getKey:()Ljava/lang/String;
     137: aload_0
     138: aload         8
     140: aload_2
     141: aload_3
     142: aload         4
     144: invokevirtual #154                // Method checkIfSkippedAndPopulateReason:(Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;Ljava/util/Set;Lorg/sonarsource/sonarlint/core/commons/Version;Ljava/util/Optional;)Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult;
     147: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     152: pop
     153: goto          17
     156: aload         5
     158: invokeinterface #162,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     163: invokeinterface #165,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     168: astore        6
     170: aload         6
     172: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     177: ifeq          226
     180: aload         6
     182: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     187: checkcast     #138                // class org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult
     190: astore        7
     192: aload         7
     194: invokevirtual #168                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult.isSkipped:()Z
     197: ifne          223
     200: aload         5
     202: aload         7
     204: invokevirtual #142                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult.getPlugin:()Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;
     207: invokevirtual #122                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getKey:()Ljava/lang/String;
     210: aload         7
     212: aload         5
     214: invokestatic  #172                // Method checkUnsatisfiedPluginDependency:(Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult;Ljava/util/Map;)Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult;
     217: invokeinterface #158,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     222: pop
     223: goto          170
     226: aload         5
     228: areturn
    Exception table:
       from    to  target type
          39    46    49   Class java/lang/Exception

  private org.sonarsource.sonarlint.core.plugin.commons.loading.PluginRequirementsCheckResult checkIfSkippedAndPopulateReason(org.sonarsource.sonarlint.core.plugin.commons.loading.PluginInfo, java.util.Set<org.sonarsource.sonarlint.core.commons.Language>, org.sonarsource.sonarlint.core.commons.Version, java.util.Optional<org.sonarsource.sonarlint.core.commons.Version>);
    Code:
       0: aload_1
       1: invokevirtual #122                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getKey:()Ljava/lang/String;
       4: astore        5
       6: aload         5
       8: invokestatic  #200                // Method org/sonarsource/sonarlint/core/commons/Language.getLanguagesByPluginKey:(Ljava/lang/String;)Ljava/util/Set;
      11: astore        6
      13: aload         6
      15: invokeinterface #203,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
      20: ifne          150
      23: aload_2
      24: invokeinterface #207,  1          // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      29: aload         6
      31: dup
      32: invokestatic  #212                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: invokedynamic #230,  0            // InvokeDynamic #2:test:(Ljava/util/Set;)Ljava/util/function/Predicate;
      41: invokeinterface #236,  2          // InterfaceMethod java/util/stream/Stream.noneMatch:(Ljava/util/function/Predicate;)Z
      46: ifeq          150
      49: aload         6
      51: invokeinterface #240,  1          // InterfaceMethod java/util/Set.size:()I
      56: iconst_1
      57: if_icmple     105
      60: getstatic     #100                // Field LOG:Lorg/sonar/api/utils/log/Logger;
      63: ldc           #242                // String Plugin \'{}\' is excluded because none of languages \'{}\' are enabled. Skip loading it.
      65: aload_1
      66: invokevirtual #245                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getName:()Ljava/lang/String;
      69: aload         6
      71: invokeinterface #207,  1          // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      76: invokedynamic #256,  0            // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      81: invokeinterface #260,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      86: ldc_w         #262                // String ,
      89: invokestatic  #268                // Method java/util/stream/Collectors.joining:(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
      92: invokeinterface #272,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      97: invokeinterface #276,  4          // InterfaceMethod org/sonar/api/utils/log/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     102: goto          132
     105: getstatic     #100                // Field LOG:Lorg/sonar/api/utils/log/Logger;
     108: ldc_w         #280                // String Plugin \'{}\' is excluded because language \'{}\' is not enabled. Skip loading it.
     111: aload_1
     112: invokevirtual #245                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getName:()Ljava/lang/String;
     115: aload         6
     117: invokeinterface #74,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     122: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     127: invokeinterface #276,  4          // InterfaceMethod org/sonar/api/utils/log/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     132: new           #138                // class org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult
     135: dup
     136: aload_1
     137: new           #12                 // class org/sonarsource/sonarlint/core/plugin/commons/SkipReason$LanguagesNotEnabled
     140: dup
     141: aload         6
     143: invokespecial #283                // Method org/sonarsource/sonarlint/core/plugin/commons/SkipReason$LanguagesNotEnabled."<init>":(Ljava/util/Collection;)V
     146: invokespecial #286                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult."<init>":(Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;Lorg/sonarsource/sonarlint/core/plugin/commons/SkipReason;)V
     149: areturn
     150: aload_1
     151: ldc           #42                 // String 8.9
     153: invokestatic  #290                // Method isCompatibleWith:(Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;Ljava/lang/String;)Z
     156: ifne          205
     159: getstatic     #100                // Field LOG:Lorg/sonar/api/utils/log/Logger;
     162: ldc_w         #292                // String Plugin \'{}\' requires plugin API {} while SonarLint supports only up to {}. Skip loading it.
     165: iconst_3
     166: anewarray     #4                  // class java/lang/Object
     169: dup
     170: iconst_0
     171: aload_1
     172: invokevirtual #245                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getName:()Ljava/lang/String;
     175: aastore
     176: dup
     177: iconst_1
     178: aload_1
     179: invokevirtual #296                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getMinimalSqVersion:()Lorg/sonarsource/sonarlint/core/commons/Version;
     182: aastore
     183: dup
     184: iconst_2
     185: ldc           #42                 // String 8.9
     187: aastore
     188: invokeinterface #299,  3          // InterfaceMethod org/sonar/api/utils/log/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     193: new           #138                // class org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult
     196: dup
     197: aload_1
     198: getstatic     #303                // Field org/sonarsource/sonarlint/core/plugin/commons/SkipReason$IncompatiblePluginApi.INSTANCE:Lorg/sonarsource/sonarlint/core/plugin/commons/SkipReason$IncompatiblePluginApi;
     201: invokespecial #286                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult."<init>":(Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;Lorg/sonarsource/sonarlint/core/plugin/commons/SkipReason;)V
     204: areturn
     205: aload_0
     206: getfield      #60                 // Field pluginMinVersions:Lorg/sonarsource/sonarlint/core/plugin/commons/PluginsMinVersions;
     209: aload         5
     211: invokevirtual #307                // Method org/sonarsource/sonarlint/core/plugin/commons/PluginsMinVersions.getMinimumVersion:(Ljava/lang/String;)Ljava/lang/String;
     214: astore        7
     216: aload         7
     218: ifnull        289
     221: aload_0
     222: getfield      #60                 // Field pluginMinVersions:Lorg/sonarsource/sonarlint/core/plugin/commons/PluginsMinVersions;
     225: aload         5
     227: aload_1
     228: invokevirtual #310                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getVersion:()Lorg/sonarsource/sonarlint/core/commons/Version;
     231: invokevirtual #314                // Method org/sonarsource/sonarlint/core/plugin/commons/PluginsMinVersions.isVersionSupported:(Ljava/lang/String;Lorg/sonarsource/sonarlint/core/commons/Version;)Z
     234: ifne          289
     237: getstatic     #100                // Field LOG:Lorg/sonar/api/utils/log/Logger;
     240: ldc_w         #316                // String Plugin \'{}\' version \'{}\' is not supported (minimal version is \'{}\'). Skip loading it.
     243: iconst_3
     244: anewarray     #4                  // class java/lang/Object
     247: dup
     248: iconst_0
     249: aload_1
     250: invokevirtual #245                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getName:()Ljava/lang/String;
     253: aastore
     254: dup
     255: iconst_1
     256: aload_1
     257: invokevirtual #310                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getVersion:()Lorg/sonarsource/sonarlint/core/commons/Version;
     260: aastore
     261: dup
     262: iconst_2
     263: aload         7
     265: aastore
     266: invokeinterface #299,  3          // InterfaceMethod org/sonar/api/utils/log/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     271: new           #138                // class org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult
     274: dup
     275: aload_1
     276: new           #17                 // class org/sonarsource/sonarlint/core/plugin/commons/SkipReason$IncompatiblePluginVersion
     279: dup
     280: aload         7
     282: invokespecial #317                // Method org/sonarsource/sonarlint/core/plugin/commons/SkipReason$IncompatiblePluginVersion."<init>":(Ljava/lang/String;)V
     285: invokespecial #286                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult."<init>":(Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;Lorg/sonarsource/sonarlint/core/plugin/commons/SkipReason;)V
     288: areturn
     289: aload_1
     290: invokevirtual #320                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getJreMinVersion:()Lorg/sonarsource/sonarlint/core/commons/Version;
     293: astore        8
     295: aload         8
     297: ifnull        368
     300: aload_3
     301: aload         8
     303: invokevirtual #324                // Method org/sonarsource/sonarlint/core/commons/Version.satisfiesMinRequirement:(Lorg/sonarsource/sonarlint/core/commons/Version;)Z
     306: ifne          368
     309: getstatic     #100                // Field LOG:Lorg/sonar/api/utils/log/Logger;
     312: ldc_w         #326                // String Plugin \'{}\' requires JRE {} while current is {}. Skip loading it.
     315: iconst_3
     316: anewarray     #4                  // class java/lang/Object
     319: dup
     320: iconst_0
     321: aload_1
     322: invokevirtual #245                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getName:()Ljava/lang/String;
     325: aastore
     326: dup
     327: iconst_1
     328: aload         8
     330: aastore
     331: dup
     332: iconst_2
     333: aload_3
     334: aastore
     335: invokeinterface #299,  3          // InterfaceMethod org/sonar/api/utils/log/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     340: new           #138                // class org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult
     343: dup
     344: aload_1
     345: new           #20                 // class org/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedRuntimeRequirement
     348: dup
     349: getstatic     #330                // Field org/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedRuntimeRequirement$RuntimeRequirement.JRE:Lorg/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedRuntimeRequirement$RuntimeRequirement;
     352: aload_3
     353: invokevirtual #331                // Method org/sonarsource/sonarlint/core/commons/Version.toString:()Ljava/lang/String;
     356: aload         8
     358: invokevirtual #331                // Method org/sonarsource/sonarlint/core/commons/Version.toString:()Ljava/lang/String;
     361: invokespecial #334                // Method org/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedRuntimeRequirement."<init>":(Lorg/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedRuntimeRequirement$RuntimeRequirement;Ljava/lang/String;Ljava/lang/String;)V
     364: invokespecial #286                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult."<init>":(Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;Lorg/sonarsource/sonarlint/core/plugin/commons/SkipReason;)V
     367: areturn
     368: aload_1
     369: invokevirtual #337                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getNodeJsMinVersion:()Lorg/sonarsource/sonarlint/core/commons/Version;
     372: astore        9
     374: aload         9
     376: ifnull        515
     379: aload         4
     381: invokevirtual #338                // Method java/util/Optional.isEmpty:()Z
     384: ifeq          429
     387: getstatic     #100                // Field LOG:Lorg/sonar/api/utils/log/Logger;
     390: ldc_w         #340                // String Plugin \'{}\' requires Node.js {}. Skip loading it.
     393: aload_1
     394: invokevirtual #245                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getName:()Ljava/lang/String;
     397: aload         9
     399: invokeinterface #276,  4          // InterfaceMethod org/sonar/api/utils/log/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     404: new           #138                // class org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult
     407: dup
     408: aload_1
     409: new           #20                 // class org/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedRuntimeRequirement
     412: dup
     413: getstatic     #343                // Field org/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedRuntimeRequirement$RuntimeRequirement.NODEJS:Lorg/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedRuntimeRequirement$RuntimeRequirement;
     416: aconst_null
     417: aload         9
     419: invokevirtual #331                // Method org/sonarsource/sonarlint/core/commons/Version.toString:()Ljava/lang/String;
     422: invokespecial #334                // Method org/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedRuntimeRequirement."<init>":(Lorg/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedRuntimeRequirement$RuntimeRequirement;Ljava/lang/String;Ljava/lang/String;)V
     425: invokespecial #286                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult."<init>":(Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;Lorg/sonarsource/sonarlint/core/plugin/commons/SkipReason;)V
     428: areturn
     429: aload         4
     431: invokevirtual #345                // Method java/util/Optional.get:()Ljava/lang/Object;
     434: checkcast     #96                 // class org/sonarsource/sonarlint/core/commons/Version
     437: aload         9
     439: invokevirtual #324                // Method org/sonarsource/sonarlint/core/commons/Version.satisfiesMinRequirement:(Lorg/sonarsource/sonarlint/core/commons/Version;)Z
     442: ifne          515
     445: getstatic     #100                // Field LOG:Lorg/sonar/api/utils/log/Logger;
     448: ldc_w         #347                // String Plugin \'{}\' requires Node.js {} while current is {}. Skip loading it.
     451: iconst_3
     452: anewarray     #4                  // class java/lang/Object
     455: dup
     456: iconst_0
     457: aload_1
     458: invokevirtual #245                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getName:()Ljava/lang/String;
     461: aastore
     462: dup
     463: iconst_1
     464: aload         9
     466: aastore
     467: dup
     468: iconst_2
     469: aload         4
     471: invokevirtual #345                // Method java/util/Optional.get:()Ljava/lang/Object;
     474: aastore
     475: invokeinterface #299,  3          // InterfaceMethod org/sonar/api/utils/log/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     480: new           #138                // class org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult
     483: dup
     484: aload_1
     485: new           #20                 // class org/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedRuntimeRequirement
     488: dup
     489: getstatic     #343                // Field org/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedRuntimeRequirement$RuntimeRequirement.NODEJS:Lorg/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedRuntimeRequirement$RuntimeRequirement;
     492: aload         4
     494: invokevirtual #345                // Method java/util/Optional.get:()Ljava/lang/Object;
     497: checkcast     #96                 // class org/sonarsource/sonarlint/core/commons/Version
     500: invokevirtual #331                // Method org/sonarsource/sonarlint/core/commons/Version.toString:()Ljava/lang/String;
     503: aload         9
     505: invokevirtual #331                // Method org/sonarsource/sonarlint/core/commons/Version.toString:()Ljava/lang/String;
     508: invokespecial #334                // Method org/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedRuntimeRequirement."<init>":(Lorg/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedRuntimeRequirement$RuntimeRequirement;Ljava/lang/String;Ljava/lang/String;)V
     511: invokespecial #286                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult."<init>":(Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;Lorg/sonarsource/sonarlint/core/plugin/commons/SkipReason;)V
     514: areturn
     515: new           #138                // class org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult
     518: dup
     519: aload_1
     520: aconst_null
     521: invokespecial #286                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult."<init>":(Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;Lorg/sonarsource/sonarlint/core/plugin/commons/SkipReason;)V
     524: areturn

  static boolean isCompatibleWith(org.sonarsource.sonarlint.core.plugin.commons.loading.PluginInfo, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #296                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getMinimalSqVersion:()Lorg/sonarsource/sonarlint/core/commons/Version;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: iconst_1
      10: ireturn
      11: aload_2
      12: invokevirtual #355                // Method org/sonarsource/sonarlint/core/commons/Version.getMajor:()I
      15: aload_2
      16: invokevirtual #358                // Method org/sonarsource/sonarlint/core/commons/Version.getMinor:()I
      19: invokedynamic #363,  0            // InvokeDynamic #4:makeConcatWithConstants:(II)Ljava/lang/String;
      24: invokestatic  #366                // Method org/sonarsource/sonarlint/core/commons/Version.create:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/commons/Version;
      27: astore_3
      28: aload_1
      29: invokestatic  #366                // Method org/sonarsource/sonarlint/core/commons/Version.create:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/commons/Version;
      32: astore        4
      34: aload         4
      36: aload_3
      37: invokevirtual #370                // Method org/sonarsource/sonarlint/core/commons/Version.compareToIgnoreQualifier:(Lorg/sonarsource/sonarlint/core/commons/Version;)I
      40: iflt          47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ireturn

  private static org.sonarsource.sonarlint.core.plugin.commons.loading.PluginRequirementsCheckResult checkUnsatisfiedPluginDependency(org.sonarsource.sonarlint.core.plugin.commons.loading.PluginRequirementsCheckResult, java.util.Map<java.lang.String, org.sonarsource.sonarlint.core.plugin.commons.loading.PluginRequirementsCheckResult>);
    Code:
       0: aload_0
       1: invokevirtual #142                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult.getPlugin:()Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;
       4: astore_2
       5: aload_2
       6: invokevirtual #379                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getRequiredPlugins:()Ljava/util/Set;
       9: invokeinterface #74,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #82,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          160
      24: aload_3
      25: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #7                  // class org/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginManifest$RequiredPlugin
      33: astore        4
      35: ldc_w         #381                // String license
      38: aload         4
      40: invokevirtual #382                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginManifest$RequiredPlugin.getKey:()Ljava/lang/String;
      43: invokevirtual #385                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      46: ifne          15
      49: getstatic     #389                // Field org/sonarsource/sonarlint/core/commons/Language.JS:Lorg/sonarsource/sonarlint/core/commons/Language;
      52: invokevirtual #392                // Method org/sonarsource/sonarlint/core/commons/Language.getPluginKey:()Ljava/lang/String;
      55: aload_2
      56: invokevirtual #122                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getKey:()Ljava/lang/String;
      59: invokevirtual #385                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      62: ifeq          81
      65: ldc           #39                 // String typescript
      67: aload         4
      69: invokevirtual #382                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginManifest$RequiredPlugin.getKey:()Ljava/lang/String;
      72: invokevirtual #385                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifeq          81
      78: goto          15
      81: aload_1
      82: aload         4
      84: invokevirtual #382                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginManifest$RequiredPlugin.getKey:()Ljava/lang/String;
      87: invokeinterface #136,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      92: checkcast     #138                // class org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult
      95: astore        5
      97: aload         5
      99: ifnull        110
     102: aload         5
     104: invokevirtual #168                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult.isSkipped:()Z
     107: ifeq          157
     110: getstatic     #100                // Field LOG:Lorg/sonar/api/utils/log/Logger;
     113: ldc_w         #394                // String Plugin \'{}\' dependency on \'{}\' is unsatisfied. Skip loading it.
     116: aload_0
     117: invokevirtual #142                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult.getPlugin:()Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;
     120: invokevirtual #245                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getName:()Ljava/lang/String;
     123: aload         4
     125: invokevirtual #382                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginManifest$RequiredPlugin.getKey:()Ljava/lang/String;
     128: invokeinterface #276,  4          // InterfaceMethod org/sonar/api/utils/log/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     133: new           #138                // class org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult
     136: dup
     137: aload_0
     138: invokevirtual #142                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult.getPlugin:()Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;
     141: new           #23                 // class org/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedDependency
     144: dup
     145: aload         4
     147: invokevirtual #382                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginManifest$RequiredPlugin.getKey:()Ljava/lang/String;
     150: invokespecial #395                // Method org/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedDependency."<init>":(Ljava/lang/String;)V
     153: invokespecial #286                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult."<init>":(Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;Lorg/sonarsource/sonarlint/core/plugin/commons/SkipReason;)V
     156: areturn
     157: goto          15
     160: aload_2
     161: invokevirtual #398                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getBasePlugin:()Ljava/lang/String;
     164: astore_3
     165: aload_3
     166: ifnull        233
     169: aload_1
     170: aload_3
     171: invokeinterface #136,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     176: checkcast     #138                // class org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult
     179: astore        4
     181: aload         4
     183: ifnull        194
     186: aload         4
     188: invokevirtual #168                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult.isSkipped:()Z
     191: ifeq          233
     194: getstatic     #100                // Field LOG:Lorg/sonar/api/utils/log/Logger;
     197: ldc_w         #394                // String Plugin \'{}\' dependency on \'{}\' is unsatisfied. Skip loading it.
     200: aload_0
     201: invokevirtual #142                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult.getPlugin:()Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;
     204: invokevirtual #245                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getName:()Ljava/lang/String;
     207: aload_3
     208: invokeinterface #276,  4          // InterfaceMethod org/sonar/api/utils/log/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     213: new           #138                // class org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult
     216: dup
     217: aload_0
     218: invokevirtual #142                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult.getPlugin:()Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;
     221: new           #23                 // class org/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedDependency
     224: dup
     225: aload_3
     226: invokespecial #395                // Method org/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedDependency."<init>":(Ljava/lang/String;)V
     229: invokespecial #286                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginRequirementsCheckResult."<init>":(Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;Lorg/sonarsource/sonarlint/core/plugin/commons/SkipReason;)V
     232: areturn
     233: aload_0
     234: areturn

  static {};
    Code:
       0: ldc           #2                  // class org/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginRequirementsChecker
       2: invokestatic  #411                // Method org/sonar/api/utils/log/Loggers.get:(Ljava/lang/Class;)Lorg/sonar/api/utils/log/Logger;
       5: putstatic     #100                // Field LOG:Lorg/sonar/api/utils/log/Logger;
       8: return
}
