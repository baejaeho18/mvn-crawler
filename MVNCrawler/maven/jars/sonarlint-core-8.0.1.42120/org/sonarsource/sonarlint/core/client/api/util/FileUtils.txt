Compiled from "FileUtils.java"
public class org.sonarsource.sonarlint.core.client.api.util.FileUtils {
  private static final java.lang.String PATH_SEPARATOR_PATTERN;

  private static final java.lang.String OS_NAME_PROPERTY;

  private static final boolean WINDOWS;

  private static final int MAX_RETRIES;

  private org.sonarsource.sonarlint.core.client.api.util.FileUtils();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method java/lang/Object."<init>":()V
       4: return

  public static void moveDir(java.nio.file.Path, java.nio.file.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #42                 // Method moveDirPreferAtomic:(Ljava/nio/file/Path;Ljava/nio/file/Path;)V
       5: goto          25
       8: astore_2
       9: new           #44                 // class java/lang/IllegalStateException
      12: dup
      13: aload_0
      14: aload_1
      15: invokedynamic #56,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;
      20: aload_2
      21: invokespecial #59                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      24: athrow
      25: return
    Exception table:
       from    to  target type
           0     5     8   Class java/io/IOException

  private static void moveDirPreferAtomic(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #82,  0             // InvokeDynamic #1:run:(Ljava/nio/file/Path;Ljava/nio/file/Path;)Lorg/sonarsource/sonarlint/core/client/api/util/FileUtils$IORunnable;
       7: invokestatic  #86                 // Method retry:(Lorg/sonarsource/sonarlint/core/client/api/util/FileUtils$IORunnable;)V
      10: goto          36
      13: astore_2
      14: aload_0
      15: new           #7                  // class org/sonarsource/sonarlint/core/client/api/util/FileUtils$CopyRecursivelyVisitor
      18: dup
      19: aload_0
      20: aload_1
      21: iconst_0
      22: anewarray     #88                 // class java/nio/file/CopyOption
      25: invokespecial #91                 // Method org/sonarsource/sonarlint/core/client/api/util/FileUtils$CopyRecursivelyVisitor."<init>":(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V
      28: invokestatic  #97                 // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;
      31: pop
      32: aload_0
      33: invokestatic  #101                // Method deleteRecursively:(Ljava/nio/file/Path;)V
      36: return
    Exception table:
       from    to  target type
           0    10    13   Class java/nio/file/AtomicMoveNotSupportedException

  public static void deleteRecursively(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokeinterface #108,  1          // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
       6: invokevirtual #114                // Method java/io/File.exists:()Z
       9: ifne          13
      12: return
      13: aload_0
      14: new           #13                 // class org/sonarsource/sonarlint/core/client/api/util/FileUtils$1
      17: dup
      18: invokespecial #115                // Method org/sonarsource/sonarlint/core/client/api/util/FileUtils$1."<init>":()V
      21: invokestatic  #97                 // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;
      24: pop
      25: goto          44
      28: astore_1
      29: new           #44                 // class java/lang/IllegalStateException
      32: dup
      33: aload_0
      34: invokedynamic #120,  0            // InvokeDynamic #2:makeConcatWithConstants:(Ljava/nio/file/Path;)Ljava/lang/String;
      39: aload_1
      40: invokespecial #59                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      43: athrow
      44: return
    Exception table:
       from    to  target type
          13    25    28   Class java/io/IOException

  private static boolean isHidden(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokestatic  #126                // Method isHiddenByWindows:(Ljava/nio/file/Path;)Z
       4: ifne          14
       7: aload_0
       8: invokestatic  #129                // Method isDotFile:(Ljava/nio/file/Path;)Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private static boolean isHiddenByWindows(java.nio.file.Path);
    Code:
       0: getstatic     #131                // Field WINDOWS:Z
       3: ifeq          17
       6: aload_0
       7: invokestatic  #134                // Method hasWindowsHiddenAttribute:(Ljava/nio/file/Path;)Z
      10: ifeq          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  private static boolean hasWindowsHiddenAttribute(java.nio.file.Path);
    Code:
       0: aload_0
       1: ldc           #138                // class java/nio/file/attribute/DosFileAttributes
       3: iconst_1
       4: anewarray     #140                // class java/nio/file/LinkOption
       7: dup
       8: iconst_0
       9: getstatic     #144                // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
      12: aastore
      13: invokestatic  #148                // Method java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;
      16: checkcast     #138                // class java/nio/file/attribute/DosFileAttributes
      19: astore_1
      20: aload_1
      21: invokeinterface #150,  1          // InterfaceMethod java/nio/file/attribute/DosFileAttributes.isHidden:()Z
      26: ireturn
      27: astore_1
      28: aload_0
      29: invokeinterface #108,  1          // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      34: invokevirtual #153                // Method java/io/File.isHidden:()Z
      37: ireturn
    Exception table:
       from    to  target type
           0    26    27   Class java/lang/UnsupportedOperationException
           0    26    27   Class java/io/IOException

  private static boolean isDotFile(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokeinterface #160,  1          // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
       6: invokeinterface #164,  1          // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      11: ldc           #166                // String .
      13: invokevirtual #172                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      16: ireturn

  public static java.util.Collection<java.lang.String> allRelativePathsForFilesInTree(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokeinterface #108,  1          // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
       6: invokevirtual #114                // Method java/io/File.exists:()Z
       9: ifne          16
      12: invokestatic  #181                // Method java/util/Collections.emptySet:()Ljava/util/Set;
      15: areturn
      16: new           #183                // class java/util/HashSet
      19: dup
      20: invokespecial #184                // Method java/util/HashSet."<init>":()V
      23: astore_1
      24: aload_0
      25: new           #11                 // class org/sonarsource/sonarlint/core/client/api/util/FileUtils$2
      28: dup
      29: aload_1
      30: aload_0
      31: invokespecial #187                // Method org/sonarsource/sonarlint/core/client/api/util/FileUtils$2."<init>":(Ljava/util/Set;Ljava/nio/file/Path;)V
      34: invokestatic  #97                 // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;
      37: pop
      38: goto          57
      41: astore_2
      42: new           #44                 // class java/lang/IllegalStateException
      45: dup
      46: aload_0
      47: invokedynamic #192,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/nio/file/Path;)Ljava/lang/String;
      52: aload_2
      53: invokespecial #59                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      56: athrow
      57: aload_1
      58: areturn
    Exception table:
       from    to  target type
          24    38    41   Class java/io/IOException

  public static void mkdirs(java.nio.file.Path);
    Code:
       0: aload_0
       1: iconst_0
       2: anewarray     #199                // class java/nio/file/attribute/FileAttribute
       5: invokestatic  #203                // Method java/nio/file/Files.createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
       8: pop
       9: goto          28
      12: astore_1
      13: new           #44                 // class java/lang/IllegalStateException
      16: dup
      17: aload_0
      18: invokedynamic #206,  0            // InvokeDynamic #4:makeConcatWithConstants:(Ljava/nio/file/Path;)Ljava/lang/String;
      23: aload_1
      24: invokespecial #59                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      27: athrow
      28: return
    Exception table:
       from    to  target type
           0     9    12   Class java/io/IOException

  public static java.lang.String toSonarQubePath(java.lang.String);
    Code:
       0: getstatic     #212                // Field java/io/File.separatorChar:C
       3: bipush        47
       5: if_icmpeq     18
       8: aload_0
       9: getstatic     #214                // Field PATH_SEPARATOR_PATTERN:Ljava/lang/String;
      12: ldc           #216                // String /
      14: invokevirtual #220                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      17: areturn
      18: aload_0
      19: areturn

  public static void replaceDir(java.util.function.Consumer<java.nio.file.Path>, java.nio.file.Path, java.nio.file.Path);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #229,  2          // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
       7: aload_1
       8: invokestatic  #101                // Method deleteRecursively:(Ljava/nio/file/Path;)V
      11: aload_1
      12: invokeinterface #232,  1          // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;
      17: invokestatic  #234                // Method mkdirs:(Ljava/nio/file/Path;)V
      20: aload_2
      21: aload_1
      22: invokestatic  #236                // Method moveDir:(Ljava/nio/file/Path;Ljava/nio/file/Path;)V
      25: return

  static void retry(org.sonarsource.sonarlint.core.client.api.util.FileUtils$IORunnable, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: iload_1
       4: if_icmpge     38
       7: aload_0
       8: invokeinterface #248,  1          // InterfaceMethod org/sonarsource/sonarlint/core/client/api/util/FileUtils$IORunnable.run:()V
      13: return
      14: astore_3
      15: ldc2_w        #249                // long 100l
      18: invokestatic  #256                // Method java/lang/Thread.sleep:(J)V
      21: goto          32
      24: astore        4
      26: invokestatic  #260                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      29: invokevirtual #263                // Method java/lang/Thread.interrupt:()V
      32: iinc          2, 1
      35: goto          2
      38: aload_0
      39: invokeinterface #248,  1          // InterfaceMethod org/sonarsource/sonarlint/core/client/api/util/FileUtils$IORunnable.run:()V
      44: return
    Exception table:
       from    to  target type
           7    13    14   Class java/nio/file/AccessDeniedException
          15    21    24   Class java/lang/InterruptedException

  static void retry(org.sonarsource.sonarlint.core.client.api.util.FileUtils$IORunnable) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #271                // Field MAX_RETRIES:I
       4: invokestatic  #273                // Method retry:(Lorg/sonarsource/sonarlint/core/client/api/util/FileUtils$IORunnable;I)V
       7: return

  private static void lambda$moveDirPreferAtomic$0(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: anewarray     #88                 // class java/nio/file/CopyOption
       6: dup
       7: iconst_0
       8: getstatic     #279                // Field java/nio/file/StandardCopyOption.ATOMIC_MOVE:Ljava/nio/file/StandardCopyOption;
      11: aastore
      12: invokestatic  #283                // Method java/nio/file/Files.move:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
      15: pop
      16: return

  static {};
    Code:
       0: getstatic     #287                // Field java/io/File.separator:Ljava/lang/String;
       3: invokestatic  #292                // Method java/util/regex/Pattern.quote:(Ljava/lang/String;)Ljava/lang/String;
       6: putstatic     #214                // Field PATH_SEPARATOR_PATTERN:Ljava/lang/String;
       9: ldc           #25                 // String os.name
      11: invokestatic  #297                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      14: ifnull        35
      17: ldc           #25                 // String os.name
      19: invokestatic  #297                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      22: ldc_w         #299                // String Windows
      25: invokevirtual #172                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      28: ifeq          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: putstatic     #131                // Field WINDOWS:Z
      39: getstatic     #131                // Field WINDOWS:Z
      42: ifeq          50
      45: bipush        20
      47: goto          51
      50: iconst_0
      51: putstatic     #271                // Field MAX_RETRIES:I
      54: return
}
