Compiled from "ProgressMonitor.java"
public class org.sonarsource.sonarlint.core.commons.progress.ProgressMonitor {
  private final org.sonarsource.sonarlint.core.commons.progress.ClientProgressMonitor clientMonitor;

  private final float offset;

  private final float factor;

  private final java.lang.String msgPrefix;

  private volatile boolean canceled;

  private org.sonarsource.sonarlint.core.commons.progress.ProgressMonitor(float, float, java.lang.String, org.sonarsource.sonarlint.core.commons.progress.ClientProgressMonitor);
    Code:
       0: aload_0
       1: invokespecial #28                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: fload_1
       6: putfield      #30                 // Field offset:F
       9: aload_0
      10: fload_2
      11: putfield      #32                 // Field factor:F
      14: aload_0
      15: aload_3
      16: putfield      #34                 // Field msgPrefix:Ljava/lang/String;
      19: aload_0
      20: aload         4
      22: ifnonnull     35
      25: new           #7                  // class org/sonarsource/sonarlint/core/commons/progress/ProgressMonitor$NoOpProgressMonitor
      28: dup
      29: invokespecial #35                 // Method org/sonarsource/sonarlint/core/commons/progress/ProgressMonitor$NoOpProgressMonitor."<init>":()V
      32: goto          37
      35: aload         4
      37: putfield      #41                 // Field clientMonitor:Lorg/sonarsource/sonarlint/core/commons/progress/ClientProgressMonitor;
      40: return

  public org.sonarsource.sonarlint.core.commons.progress.ProgressMonitor(org.sonarsource.sonarlint.core.commons.progress.ClientProgressMonitor);
    Code:
       0: aload_0
       1: fconst_0
       2: fconst_1
       3: aconst_null
       4: aload_1
       5: invokespecial #46                 // Method "<init>":(FFLjava/lang/String;Lorg/sonarsource/sonarlint/core/commons/progress/ClientProgressMonitor;)V
       8: return

  public org.sonarsource.sonarlint.core.commons.progress.ProgressMonitor subProgress(float, float, java.lang.String);
    Code:
       0: new           #2                  // class org/sonarsource/sonarlint/core/commons/progress/ProgressMonitor
       3: dup
       4: aload_0
       5: getfield      #30                 // Field offset:F
       8: fload_1
       9: aload_0
      10: getfield      #32                 // Field factor:F
      13: fmul
      14: fadd
      15: fload_2
      16: fload_1
      17: fsub
      18: aload_0
      19: getfield      #32                 // Field factor:F
      22: fmul
      23: aload_0
      24: aload_3
      25: invokevirtual #52                 // Method prependPrefix:(Ljava/lang/String;)Ljava/lang/String;
      28: aload_0
      29: getfield      #41                 // Field clientMonitor:Lorg/sonarsource/sonarlint/core/commons/progress/ClientProgressMonitor;
      32: invokespecial #46                 // Method "<init>":(FFLjava/lang/String;Lorg/sonarsource/sonarlint/core/commons/progress/ClientProgressMonitor;)V
      35: areturn

  public void checkCancel();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method isCanceled:()Z
       4: ifeq          26
       7: aload_0
       8: getfield      #41                 // Field clientMonitor:Lorg/sonarsource/sonarlint/core/commons/progress/ClientProgressMonitor;
      11: ldc           #61                 // String Cancelling
      13: invokeinterface #65,  2           // InterfaceMethod org/sonarsource/sonarlint/core/commons/progress/ClientProgressMonitor.setMessage:(Ljava/lang/String;)V
      18: new           #67                 // class org/sonarsource/sonarlint/core/commons/progress/CanceledException
      21: dup
      22: invokespecial #68                 // Method org/sonarsource/sonarlint/core/commons/progress/CanceledException."<init>":()V
      25: athrow
      26: return

  public boolean isCanceled();
    Code:
       0: aload_0
       1: getfield      #70                 // Field canceled:Z
       4: ifne          19
       7: aload_0
       8: getfield      #41                 // Field clientMonitor:Lorg/sonarsource/sonarlint/core/commons/progress/ClientProgressMonitor;
      11: invokeinterface #71,  1           // InterfaceMethod org/sonarsource/sonarlint/core/commons/progress/ClientProgressMonitor.isCanceled:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public void cancel();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #70                 // Field canceled:Z
       5: return

  public void setProgress(java.lang.String, float);
    Code:
       0: aload_0
       1: getfield      #41                 // Field clientMonitor:Lorg/sonarsource/sonarlint/core/commons/progress/ClientProgressMonitor;
       4: aload_0
       5: aload_1
       6: invokevirtual #52                 // Method prependPrefix:(Ljava/lang/String;)Ljava/lang/String;
       9: invokeinterface #65,  2           // InterfaceMethod org/sonarsource/sonarlint/core/commons/progress/ClientProgressMonitor.setMessage:(Ljava/lang/String;)V
      14: aload_0
      15: fload_2
      16: invokevirtual #78                 // Method setFraction:(F)V
      19: return

  private java.lang.String prependPrefix(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #34                 // Field msgPrefix:Ljava/lang/String;
       4: ifnull        20
       7: aload_0
       8: getfield      #34                 // Field msgPrefix:Ljava/lang/String;
      11: aload_1
      12: invokedynamic #92,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      17: goto          21
      20: aload_1
      21: areturn

  public void setProgressAndCheckCancel(java.lang.String, float);
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method checkCancel:()V
       4: aload_0
       5: aload_1
       6: fload_2
       7: invokevirtual #98                 // Method setProgress:(Ljava/lang/String;F)V
      10: return

  private void setFraction(float);
    Code:
       0: aload_0
       1: getfield      #41                 // Field clientMonitor:Lorg/sonarsource/sonarlint/core/commons/progress/ClientProgressMonitor;
       4: aload_0
       5: getfield      #30                 // Field offset:F
       8: fload_1
       9: aload_0
      10: getfield      #32                 // Field factor:F
      13: fmul
      14: fadd
      15: invokeinterface #99,  2           // InterfaceMethod org/sonarsource/sonarlint/core/commons/progress/ClientProgressMonitor.setFraction:(F)V
      20: return

  public void executeNonCancelableSection(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #41                 // Field clientMonitor:Lorg/sonarsource/sonarlint/core/commons/progress/ClientProgressMonitor;
       4: aload_1
       5: invokeinterface #103,  2          // InterfaceMethod org/sonarsource/sonarlint/core/commons/progress/ClientProgressMonitor.executeNonCancelableSection:(Ljava/lang/Runnable;)V
      10: return
}
