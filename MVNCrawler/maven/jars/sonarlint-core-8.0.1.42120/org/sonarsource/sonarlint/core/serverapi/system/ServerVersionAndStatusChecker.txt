Compiled from "ServerVersionAndStatusChecker.java"
public class org.sonarsource.sonarlint.core.serverapi.system.ServerVersionAndStatusChecker {
  private static final java.lang.String MIN_SQ_VERSION;

  private final org.sonarsource.sonarlint.core.serverapi.system.SystemApi systemApi;

  public org.sonarsource.sonarlint.core.serverapi.system.ServerVersionAndStatusChecker(org.sonarsource.sonarlint.core.serverapi.ServerApiHelper);
    Code:
       0: aload_0
       1: invokespecial #21                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #23                 // class org/sonarsource/sonarlint/core/serverapi/ServerApi
       8: dup
       9: aload_1
      10: invokespecial #25                 // Method org/sonarsource/sonarlint/core/serverapi/ServerApi."<init>":(Lorg/sonarsource/sonarlint/core/serverapi/ServerApiHelper;)V
      13: invokevirtual #29                 // Method org/sonarsource/sonarlint/core/serverapi/ServerApi.system:()Lorg/sonarsource/sonarlint/core/serverapi/system/SystemApi;
      16: putfield      #31                 // Field systemApi:Lorg/sonarsource/sonarlint/core/serverapi/system/SystemApi;
      19: return

  public org.sonarsource.sonarlint.core.serverapi.system.ServerInfo checkVersionAndStatus();
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method checkVersionAndStatusAsync:()Ljava/util/concurrent/CompletableFuture;
       4: invokevirtual #51                 // Method java/util/concurrent/CompletableFuture.get:()Ljava/lang/Object;
       7: checkcast     #53                 // class org/sonarsource/sonarlint/core/serverapi/system/ServerInfo
      10: areturn
      11: astore_1
      12: new           #55                 // class java/lang/IllegalStateException
      15: dup
      16: ldc           #57                 // String Cannot check server version and status
      18: aload_1
      19: invokespecial #60                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      22: athrow
      23: astore_1
      24: aload_1
      25: invokevirtual #64                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
      28: astore_2
      29: aload_2
      30: instanceof    #66                 // class java/lang/RuntimeException
      33: ifeq          41
      36: aload_2
      37: checkcast     #66                 // class java/lang/RuntimeException
      40: athrow
      41: new           #55                 // class java/lang/IllegalStateException
      44: dup
      45: ldc           #57                 // String Cannot check server version and status
      47: aload_2
      48: invokespecial #60                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      51: athrow
    Exception table:
       from    to  target type
           0    10    11   Class java/lang/InterruptedException
           0    10    23   Class java/util/concurrent/ExecutionException

  public java.util.concurrent.CompletableFuture<org.sonarsource.sonarlint.core.serverapi.system.ServerInfo> checkVersionAndStatusAsync();
    Code:
       0: aload_0
       1: ldc           #14                 // String 7.9
       3: invokevirtual #77                 // Method checkVersionAndStatusAsync:(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
       6: areturn

  public java.util.concurrent.CompletableFuture<org.sonarsource.sonarlint.core.serverapi.system.ServerInfo> checkVersionAndStatusAsync(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #31                 // Field systemApi:Lorg/sonarsource/sonarlint/core/serverapi/system/SystemApi;
       4: invokevirtual #83                 // Method org/sonarsource/sonarlint/core/serverapi/system/SystemApi.getStatus:()Ljava/util/concurrent/CompletableFuture;
       7: aload_1
       8: invokedynamic #103,  0            // InvokeDynamic #0:apply:(Ljava/lang/String;)Ljava/util/function/Function;
      13: invokevirtual #107                // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      16: areturn

  private static java.lang.String unsupportedVersion(org.sonarsource.sonarlint.core.serverapi.system.ServerInfo, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #114                // Method org/sonarsource/sonarlint/core/serverapi/system/ServerInfo.getVersion:()Ljava/lang/String;
       4: aload_1
       5: invokedynamic #126,  0            // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      10: areturn

  private static java.lang.String serverNotReady(org.sonarsource.sonarlint.core.serverapi.system.ServerInfo);
    Code:
       0: aload_0
       1: invokevirtual #132                // Method org/sonarsource/sonarlint/core/serverapi/system/ServerInfo.getStatus:()Ljava/lang/String;
       4: invokedynamic #137,  0            // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
       9: areturn

  public java.util.concurrent.CompletableFuture<org.sonarsource.sonarlint.core.serverapi.system.ValidationResult> validateStatusAndVersion();
    Code:
       0: aload_0
       1: ldc           #14                 // String 7.9
       3: invokevirtual #141                // Method validateStatusAndVersion:(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
       6: areturn

  public java.util.concurrent.CompletableFuture<org.sonarsource.sonarlint.core.serverapi.system.ValidationResult> validateStatusAndVersion(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #31                 // Field systemApi:Lorg/sonarsource/sonarlint/core/serverapi/system/SystemApi;
       4: invokevirtual #83                 // Method org/sonarsource/sonarlint/core/serverapi/system/SystemApi.getStatus:()Ljava/util/concurrent/CompletableFuture;
       7: aload_1
       8: invokedynamic #150,  0            // InvokeDynamic #3:apply:(Ljava/lang/String;)Ljava/util/function/Function;
      13: invokevirtual #107                // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      16: areturn

  private static org.sonarsource.sonarlint.core.serverapi.system.ValidationResult lambda$validateStatusAndVersion$1(java.lang.String, org.sonarsource.sonarlint.core.serverapi.system.ServerInfo);
    Code:
       0: aload_1
       1: invokevirtual #154                // Method org/sonarsource/sonarlint/core/serverapi/system/ServerInfo.isUp:()Z
       4: ifne          20
       7: new           #156                // class org/sonarsource/sonarlint/core/serverapi/system/DefaultValidationResult
      10: dup
      11: iconst_0
      12: aload_1
      13: invokestatic  #158                // Method serverNotReady:(Lorg/sonarsource/sonarlint/core/serverapi/system/ServerInfo;)Ljava/lang/String;
      16: invokespecial #161                // Method org/sonarsource/sonarlint/core/serverapi/system/DefaultValidationResult."<init>":(ZLjava/lang/String;)V
      19: areturn
      20: aload_1
      21: invokevirtual #114                // Method org/sonarsource/sonarlint/core/serverapi/system/ServerInfo.getVersion:()Ljava/lang/String;
      24: invokestatic  #167                // Method org/sonarsource/sonarlint/core/commons/Version.create:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/commons/Version;
      27: astore_2
      28: aload_2
      29: aload_0
      30: invokestatic  #167                // Method org/sonarsource/sonarlint/core/commons/Version.create:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/commons/Version;
      33: invokevirtual #171                // Method org/sonarsource/sonarlint/core/commons/Version.compareToIgnoreQualifier:(Lorg/sonarsource/sonarlint/core/commons/Version;)I
      36: ifge          53
      39: new           #156                // class org/sonarsource/sonarlint/core/serverapi/system/DefaultValidationResult
      42: dup
      43: iconst_0
      44: aload_1
      45: aload_0
      46: invokestatic  #173                // Method unsupportedVersion:(Lorg/sonarsource/sonarlint/core/serverapi/system/ServerInfo;Ljava/lang/String;)Ljava/lang/String;
      49: invokespecial #161                // Method org/sonarsource/sonarlint/core/serverapi/system/DefaultValidationResult."<init>":(ZLjava/lang/String;)V
      52: areturn
      53: new           #156                // class org/sonarsource/sonarlint/core/serverapi/system/DefaultValidationResult
      56: dup
      57: iconst_1
      58: ldc           #175                // String Compatible and ready
      60: invokespecial #161                // Method org/sonarsource/sonarlint/core/serverapi/system/DefaultValidationResult."<init>":(ZLjava/lang/String;)V
      63: areturn

  private static org.sonarsource.sonarlint.core.serverapi.system.ServerInfo lambda$checkVersionAndStatusAsync$0(java.lang.String, org.sonarsource.sonarlint.core.serverapi.system.ServerInfo);
    Code:
       0: aload_1
       1: invokevirtual #154                // Method org/sonarsource/sonarlint/core/serverapi/system/ServerInfo.isUp:()Z
       4: ifne          19
       7: new           #55                 // class java/lang/IllegalStateException
      10: dup
      11: aload_1
      12: invokestatic  #158                // Method serverNotReady:(Lorg/sonarsource/sonarlint/core/serverapi/system/ServerInfo;)Ljava/lang/String;
      15: invokespecial #180                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_1
      20: invokevirtual #114                // Method org/sonarsource/sonarlint/core/serverapi/system/ServerInfo.getVersion:()Ljava/lang/String;
      23: invokestatic  #167                // Method org/sonarsource/sonarlint/core/commons/Version.create:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/commons/Version;
      26: astore_2
      27: aload_2
      28: aload_0
      29: invokestatic  #167                // Method org/sonarsource/sonarlint/core/commons/Version.create:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/commons/Version;
      32: invokevirtual #171                // Method org/sonarsource/sonarlint/core/commons/Version.compareToIgnoreQualifier:(Lorg/sonarsource/sonarlint/core/commons/Version;)I
      35: ifge          51
      38: new           #182                // class org/sonarsource/sonarlint/core/serverapi/exception/UnsupportedServerException
      41: dup
      42: aload_1
      43: aload_0
      44: invokestatic  #173                // Method unsupportedVersion:(Lorg/sonarsource/sonarlint/core/serverapi/system/ServerInfo;Ljava/lang/String;)Ljava/lang/String;
      47: invokespecial #183                // Method org/sonarsource/sonarlint/core/serverapi/exception/UnsupportedServerException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: aload_1
      52: areturn
}
