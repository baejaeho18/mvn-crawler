Compiled from "PersistentIssueTrackerCache.java"
class org.sonarsource.sonarlint.core.issuetracking.PersistentIssueTrackerCache$LimitedSizeLinkedHashMap extends java.util.LinkedHashMap<java.lang.String, java.util.Collection<org.sonarsource.sonarlint.core.issuetracking.Trackable<T>>> {
  final org.sonarsource.sonarlint.core.issuetracking.PersistentIssueTrackerCache this$0;

  org.sonarsource.sonarlint.core.issuetracking.PersistentIssueTrackerCache$LimitedSizeLinkedHashMap(org.sonarsource.sonarlint.core.issuetracking.PersistentIssueTrackerCache);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field this$0:Lorg/sonarsource/sonarlint/core/issuetracking/PersistentIssueTrackerCache;
       5: aload_0
       6: bipush        100
       8: ldc           #26                 // float 0.75f
      10: iconst_1
      11: invokespecial #29                 // Method java/util/LinkedHashMap."<init>":(IFZ)V
      14: return

  protected boolean removeEldestEntry(java.util.Map$Entry<java.lang.String, java.util.Collection<org.sonarsource.sonarlint.core.issuetracking.Trackable<T>>>);
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method size:()I
       4: bipush        100
       6: if_icmpgt     11
       9: iconst_0
      10: ireturn
      11: aload_1
      12: invokeinterface #45,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      17: checkcast     #47                 // class java/lang/String
      20: astore_2
      21: getstatic     #51                 // Field org/sonarsource/sonarlint/core/issuetracking/PersistentIssueTrackerCache.LOGGER:Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
      24: aload_2
      25: invokedynamic #63,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      30: invokevirtual #69                 // Method org/sonarsource/sonarlint/core/commons/log/SonarLintLogger.debug:(Ljava/lang/String;)V
      33: aload_0
      34: getfield      #25                 // Field this$0:Lorg/sonarsource/sonarlint/core/issuetracking/PersistentIssueTrackerCache;
      37: getfield      #73                 // Field org/sonarsource/sonarlint/core/issuetracking/PersistentIssueTrackerCache.store:Lorg/sonarsource/sonarlint/core/issuetracking/TrackableIssueStore;
      40: aload_2
      41: aload_1
      42: invokeinterface #76,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      47: checkcast     #78                 // class java/util/Collection
      50: invokeinterface #84,  3           // InterfaceMethod org/sonarsource/sonarlint/core/issuetracking/TrackableIssueStore.save:(Ljava/lang/String;Ljava/util/Collection;)V
      55: goto          81
      58: astore_3
      59: new           #86                 // class java/lang/IllegalStateException
      62: dup
      63: ldc           #88                 // String Error persisting issues for %s
      65: iconst_1
      66: anewarray     #90                 // class java/lang/Object
      69: dup
      70: iconst_0
      71: aload_2
      72: aastore
      73: invokestatic  #94                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      76: aload_3
      77: invokespecial #97                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      80: athrow
      81: iconst_1
      82: ireturn
    Exception table:
       from    to  target type
          21    55    58   Class java/io/IOException
}
