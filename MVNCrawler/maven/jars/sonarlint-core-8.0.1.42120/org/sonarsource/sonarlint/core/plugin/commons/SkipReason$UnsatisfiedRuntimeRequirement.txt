Compiled from "SkipReason.java"
public class org.sonarsource.sonarlint.core.plugin.commons.SkipReason$UnsatisfiedRuntimeRequirement implements org.sonarsource.sonarlint.core.plugin.commons.SkipReason {
  private final org.sonarsource.sonarlint.core.plugin.commons.SkipReason$UnsatisfiedRuntimeRequirement$RuntimeRequirement runtime;

  private final java.lang.String currentVersion;

  private final java.lang.String minVersion;

  public org.sonarsource.sonarlint.core.plugin.commons.SkipReason$UnsatisfiedRuntimeRequirement(org.sonarsource.sonarlint.core.plugin.commons.SkipReason$UnsatisfiedRuntimeRequirement$RuntimeRequirement, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #22                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #24                 // Field runtime:Lorg/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedRuntimeRequirement$RuntimeRequirement;
       9: aload_0
      10: aload_2
      11: putfield      #26                 // Field currentVersion:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #28                 // Field minVersion:Ljava/lang/String;
      19: return

  public org.sonarsource.sonarlint.core.plugin.commons.SkipReason$UnsatisfiedRuntimeRequirement$RuntimeRequirement getRuntime();
    Code:
       0: aload_0
       1: getfield      #24                 // Field runtime:Lorg/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedRuntimeRequirement$RuntimeRequirement;
       4: areturn

  public java.lang.String getCurrentVersion();
    Code:
       0: aload_0
       1: getfield      #26                 // Field currentVersion:Ljava/lang/String;
       4: areturn

  public java.lang.String getMinVersion();
    Code:
       0: aload_0
       1: getfield      #28                 // Field minVersion:Ljava/lang/String;
       4: areturn

  public int hashCode();
    Code:
       0: iconst_3
       1: anewarray     #4                  // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #24                 // Field runtime:Lorg/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedRuntimeRequirement$RuntimeRequirement;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #26                 // Field currentVersion:Ljava/lang/String;
      17: aastore
      18: dup
      19: iconst_2
      20: aload_0
      21: getfield      #28                 // Field minVersion:Ljava/lang/String;
      24: aastore
      25: invokestatic  #44                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      28: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class org/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedRuntimeRequirement
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class org/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedRuntimeRequirement
      20: astore_2
      21: aload_0
      22: getfield      #24                 // Field runtime:Lorg/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedRuntimeRequirement$RuntimeRequirement;
      25: aload_2
      26: getfield      #24                 // Field runtime:Lorg/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedRuntimeRequirement$RuntimeRequirement;
      29: if_acmpne     64
      32: aload_0
      33: getfield      #26                 // Field currentVersion:Ljava/lang/String;
      36: aload_2
      37: getfield      #26                 // Field currentVersion:Ljava/lang/String;
      40: invokestatic  #49                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      43: ifeq          64
      46: aload_0
      47: getfield      #28                 // Field minVersion:Ljava/lang/String;
      50: aload_2
      51: getfield      #28                 // Field minVersion:Ljava/lang/String;
      54: invokestatic  #49                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      57: ifeq          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: ireturn

  public java.lang.String toString();
    Code:
       0: new           #55                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #58                 // String UnsatisfiedRuntimeRequirement [runtime=
      11: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: getfield      #24                 // Field runtime:Lorg/sonarsource/sonarlint/core/plugin/commons/SkipReason$UnsatisfiedRuntimeRequirement$RuntimeRequirement;
      18: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      21: ldc           #67                 // String , currentVersion=
      23: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #26                 // Field currentVersion:Ljava/lang/String;
      30: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #69                 // String , minVersion=
      35: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: getfield      #28                 // Field minVersion:Ljava/lang/String;
      42: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc           #71                 // String ]
      47: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: pop
      51: aload_1
      52: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: areturn
}
