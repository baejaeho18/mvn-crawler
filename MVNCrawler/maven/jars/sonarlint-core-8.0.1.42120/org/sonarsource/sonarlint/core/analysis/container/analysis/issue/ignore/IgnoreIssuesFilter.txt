Compiled from "IgnoreIssuesFilter.java"
public class org.sonarsource.sonarlint.core.analysis.container.analysis.issue.ignore.IgnoreIssuesFilter implements org.sonar.api.scan.issue.filter.IssueFilter {
  private final java.util.Map<org.sonar.api.batch.fs.InputComponent, java.util.List<org.sonar.api.utils.WildcardPattern>> rulePatternByComponent;

  private static final org.sonarsource.sonarlint.core.commons.log.SonarLintLogger LOG;

  public org.sonarsource.sonarlint.core.analysis.container.analysis.issue.ignore.IgnoreIssuesFilter();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #23                 // class java/util/HashMap
       8: dup
       9: invokespecial #24                 // Method java/util/HashMap."<init>":()V
      12: putfield      #26                 // Field rulePatternByComponent:Ljava/util/Map;
      15: return

  public boolean accept(org.sonar.api.scan.issue.filter.FilterableIssue, org.sonar.api.scan.issue.filter.IssueFilterChain);
    Code:
       0: aload_1
       1: checkcast     #32                 // class org/sonarsource/sonarlint/core/analysis/sonarapi/DefaultFilterableIssue
       4: invokevirtual #36                 // Method org/sonarsource/sonarlint/core/analysis/sonarapi/DefaultFilterableIssue.getComponent:()Lorg/sonar/api/batch/fs/InputComponent;
       7: astore_3
       8: aload_3
       9: invokeinterface #42,  1           // InterfaceMethod org/sonar/api/batch/fs/InputComponent.isFile:()Z
      14: ifeq          27
      17: aload_3
      18: checkcast     #44                 // class org/sonarsource/sonarlint/core/analysis/container/analysis/filesystem/SonarLintInputFile
      21: invokevirtual #47                 // Method org/sonarsource/sonarlint/core/analysis/container/analysis/filesystem/SonarLintInputFile.isIgnoreAllIssues:()Z
      24: ifne          52
      27: aload_3
      28: invokeinterface #42,  1           // InterfaceMethod org/sonar/api/batch/fs/InputComponent.isFile:()Z
      33: ifeq          54
      36: aload_3
      37: checkcast     #44                 // class org/sonarsource/sonarlint/core/analysis/container/analysis/filesystem/SonarLintInputFile
      40: aload_1
      41: invokeinterface #53,  1           // InterfaceMethod org/sonar/api/scan/issue/filter/FilterableIssue.line:()Ljava/lang/Integer;
      46: invokevirtual #57                 // Method org/sonarsource/sonarlint/core/analysis/container/analysis/filesystem/SonarLintInputFile.isIgnoreAllIssuesOnLine:(Ljava/lang/Integer;)Z
      49: ifeq          54
      52: iconst_0
      53: ireturn
      54: aload_0
      55: aload_3
      56: aload_1
      57: invokevirtual #61                 // Method hasRuleMatchFor:(Lorg/sonar/api/batch/fs/InputComponent;Lorg/sonar/api/scan/issue/filter/FilterableIssue;)Z
      60: ifeq          65
      63: iconst_0
      64: ireturn
      65: aload_2
      66: aload_1
      67: invokeinterface #66,  2           // InterfaceMethod org/sonar/api/scan/issue/filter/IssueFilterChain.accept:(Lorg/sonar/api/scan/issue/filter/FilterableIssue;)Z
      72: ireturn

  public void addRuleExclusionPatternForComponent(org.sonarsource.sonarlint.core.analysis.container.analysis.filesystem.SonarLintInputFile, org.sonar.api.utils.WildcardPattern);
    Code:
       0: ldc           #76                 // String *
       2: aload_2
       3: invokevirtual #82                 // Method org/sonar/api/utils/WildcardPattern.toString:()Ljava/lang/String;
       6: invokevirtual #88                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          20
      12: aload_1
      13: iconst_1
      14: invokevirtual #92                 // Method org/sonarsource/sonarlint/core/analysis/container/analysis/filesystem/SonarLintInputFile.setIgnoreAllIssues:(Z)V
      17: goto          45
      20: aload_0
      21: getfield      #26                 // Field rulePatternByComponent:Ljava/util/Map;
      24: aload_1
      25: invokedynamic #111,  0            // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      30: invokeinterface #117,  3          // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      35: checkcast     #119                // class java/util/List
      38: aload_2
      39: invokeinterface #122,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      44: pop
      45: return

  private boolean hasRuleMatchFor(org.sonar.api.batch.fs.InputComponent, org.sonar.api.scan.issue.filter.FilterableIssue);
    Code:
       0: aload_0
       1: getfield      #26                 // Field rulePatternByComponent:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #132                // Method java/util/Collections.emptyList:()Ljava/util/List;
       8: invokeinterface #136,  3          // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #119                // class java/util/List
      16: invokeinterface #140,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      21: astore_3
      22: aload_3
      23: invokeinterface #145,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          75
      31: aload_3
      32: invokeinterface #149,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #78                 // class org/sonar/api/utils/WildcardPattern
      40: astore        4
      42: aload         4
      44: aload_2
      45: invokeinterface #153,  1          // InterfaceMethod org/sonar/api/scan/issue/filter/FilterableIssue.ruleKey:()Lorg/sonar/api/rule/RuleKey;
      50: invokevirtual #156                // Method org/sonar/api/rule/RuleKey.toString:()Ljava/lang/String;
      53: invokevirtual #160                // Method org/sonar/api/utils/WildcardPattern.match:(Ljava/lang/String;)Z
      56: ifeq          72
      59: getstatic     #162                // Field LOG:Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
      62: ldc           #164                // String Issue {} ignored by exclusion pattern {}
      64: aload_2
      65: aload         4
      67: invokevirtual #170                // Method org/sonarsource/sonarlint/core/commons/log/SonarLintLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      70: iconst_1
      71: ireturn
      72: goto          22
      75: iconst_0
      76: ireturn

  private static java.util.List lambda$addRuleExclusionPatternForComponent$0(org.sonar.api.batch.fs.InputComponent);
    Code:
       0: new           #173                // class java/util/LinkedList
       3: dup
       4: invokespecial #174                // Method java/util/LinkedList."<init>":()V
       7: areturn

  static {};
    Code:
       0: invokestatic  #180                // Method org/sonarsource/sonarlint/core/commons/log/SonarLintLogger.get:()Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
       3: putstatic     #162                // Field LOG:Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
       6: return
}
