Compiled from "PluginsStorage.java"
public class org.sonarsource.sonarlint.core.storage.PluginsStorage {
  private static final org.sonar.api.utils.log.Logger LOG;

  public static final java.lang.String PLUGIN_REFERENCES_PB;

  private final java.nio.file.Path rootPath;

  private final org.sonarsource.sonarlint.core.container.storage.RWLock rwLock;

  public org.sonarsource.sonarlint.core.storage.PluginsStorage(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokespecial #43                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #45                 // class org/sonarsource/sonarlint/core/container/storage/RWLock
       8: dup
       9: invokespecial #46                 // Method org/sonarsource/sonarlint/core/container/storage/RWLock."<init>":()V
      12: putfield      #48                 // Field rwLock:Lorg/sonarsource/sonarlint/core/container/storage/RWLock;
      15: aload_0
      16: aload_1
      17: putfield      #50                 // Field rootPath:Ljava/nio/file/Path;
      20: return

  public void store(org.sonarsource.sonarlint.core.serverapi.plugins.ServerPlugin, java.io.InputStream);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #50                 // Field rootPath:Ljava/nio/file/Path;
       5: aload_1
       6: invokevirtual #62                 // Method org/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin.getFilename:()Ljava/lang/String;
       9: invokeinterface #68,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      14: invokeinterface #72,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      19: invokestatic  #78                 // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/FileUtils.copyInputStreamToFile:(Ljava/io/InputStream;Ljava/io/File;)V
      22: aload_1
      23: invokestatic  #82                 // Method adapt:(Lorg/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin;)Lorg/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$PluginReference;
      26: astore_3
      27: aload_0
      28: getfield      #48                 // Field rwLock:Lorg/sonarsource/sonarlint/core/container/storage/RWLock;
      31: aload_0
      32: aload_1
      33: aload_3
      34: invokedynamic #99,  0             // InvokeDynamic #0:run:(Lorg/sonarsource/sonarlint/core/storage/PluginsStorage;Lorg/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin;Lorg/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$PluginReference;)Ljava/lang/Runnable;
      39: invokevirtual #103                // Method org/sonarsource/sonarlint/core/container/storage/RWLock.write:(Ljava/lang/Runnable;)V
      42: goto          68
      45: astore_3
      46: new           #105                // class org/sonarsource/sonarlint/core/client/api/exceptions/StorageException
      49: dup
      50: aload_1
      51: invokevirtual #62                 // Method org/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin.getFilename:()Ljava/lang/String;
      54: aload_0
      55: getfield      #50                 // Field rootPath:Ljava/nio/file/Path;
      58: invokedynamic #117,  0            // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;Ljava/nio/file/Path;)Ljava/lang/String;
      63: aload_3
      64: invokespecial #120                // Method org/sonarsource/sonarlint/core/client/api/exceptions/StorageException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      67: athrow
      68: return
    Exception table:
       from    to  target type
           0    42    45   Class java/io/IOException

  public java.util.List<org.sonarsource.sonarlint.core.storage.StoredPlugin> getStoredPlugins();
    Code:
       0: aload_0
       1: invokevirtual #135                // Method getPluginsFilePath:()Ljava/nio/file/Path;
       4: astore_1
       5: aload_0
       6: getfield      #48                 // Field rwLock:Lorg/sonarsource/sonarlint/core/container/storage/RWLock;
       9: aload_1
      10: invokedynamic #148,  0            // InvokeDynamic #2:get:(Ljava/nio/file/Path;)Ljava/util/function/Supplier;
      15: invokevirtual #152                // Method org/sonarsource/sonarlint/core/container/storage/RWLock.read:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      18: checkcast     #7                  // class org/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences
      21: invokevirtual #156                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences.getPluginsByKeyMap:()Ljava/util/Map;
      24: invokeinterface #160,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      29: invokeinterface #166,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      34: aload_0
      35: invokedynamic #177,  0            // InvokeDynamic #3:apply:(Lorg/sonarsource/sonarlint/core/storage/PluginsStorage;)Ljava/util/function/Function;
      40: invokeinterface #183,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      45: invokestatic  #189                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      48: invokeinterface #193,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      53: checkcast     #195                // class java/util/List
      56: areturn

  private java.nio.file.Path getPluginsFilePath();
    Code:
       0: aload_0
       1: getfield      #50                 // Field rootPath:Ljava/nio/file/Path;
       4: ldc           #34                 // String plugin_references.pb
       6: invokeinterface #68,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      11: areturn

  public java.util.Map<java.lang.String, org.sonarsource.sonarlint.core.storage.StoredPlugin> getStoredPluginsByKey();
    Code:
       0: aload_0
       1: invokevirtual #200                // Method getStoredPlugins:()Ljava/util/List;
       4: invokestatic  #204                // Method byKey:(Ljava/util/List;)Ljava/util/Map;
       7: areturn

  public java.util.Map<java.lang.String, java.nio.file.Path> getStoredPluginPathsByKey();
    Code:
       0: aload_0
       1: invokevirtual #200                // Method getStoredPlugins:()Ljava/util/List;
       4: invokestatic  #204                // Method byKey:(Ljava/util/List;)Ljava/util/Map;
       7: invokeinterface #210,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      12: invokeinterface #213,  1          // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      17: invokedynamic #222,  0            // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      22: invokedynamic #229,  0            // InvokeDynamic #5:apply:()Ljava/util/function/Function;
      27: invokestatic  #233                // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      30: invokeinterface #193,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      35: checkcast     #17                 // class java/util/Map
      38: areturn

  private static java.util.Map<java.lang.String, org.sonarsource.sonarlint.core.storage.StoredPlugin> byKey(java.util.List<org.sonarsource.sonarlint.core.storage.StoredPlugin>);
    Code:
       0: aload_0
       1: invokeinterface #235,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #243,  0            // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      11: invokestatic  #248                // InterfaceMethod java/util/function/Function.identity:()Ljava/util/function/Function;
      14: invokestatic  #233                // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      17: invokeinterface #193,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      22: checkcast     #17                 // class java/util/Map
      25: areturn

  private static org.sonarsource.sonarlint.core.proto.Sonarlint$PluginReferences$PluginReference adapt(org.sonarsource.sonarlint.core.serverapi.plugins.ServerPlugin);
    Code:
       0: invokestatic  #255                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$PluginReference.newBuilder:()Lorg/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$PluginReference$Builder;
       3: aload_0
       4: invokevirtual #256                // Method org/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin.getKey:()Ljava/lang/String;
       7: invokevirtual #260                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$PluginReference$Builder.setKey:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$PluginReference$Builder;
      10: aload_0
      11: invokevirtual #263                // Method org/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin.getHash:()Ljava/lang/String;
      14: invokevirtual #266                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$PluginReference$Builder.setHash:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$PluginReference$Builder;
      17: aload_0
      18: invokevirtual #62                 // Method org/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin.getFilename:()Ljava/lang/String;
      21: invokevirtual #269                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$PluginReference$Builder.setFilename:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$PluginReference$Builder;
      24: invokevirtual #273                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$PluginReference$Builder.build:()Lorg/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$PluginReference;
      27: areturn

  private org.sonarsource.sonarlint.core.storage.StoredPlugin adapt(org.sonarsource.sonarlint.core.proto.Sonarlint$PluginReferences$PluginReference);
    Code:
       0: new           #237                // class org/sonarsource/sonarlint/core/storage/StoredPlugin
       3: dup
       4: aload_1
       5: invokevirtual #274                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$PluginReference.getKey:()Ljava/lang/String;
       8: aload_1
       9: invokevirtual #275                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$PluginReference.getHash:()Ljava/lang/String;
      12: aload_0
      13: getfield      #50                 // Field rootPath:Ljava/nio/file/Path;
      16: aload_1
      17: invokevirtual #276                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$PluginReference.getFilename:()Ljava/lang/String;
      20: invokeinterface #68,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      25: invokespecial #279                // Method org/sonarsource/sonarlint/core/storage/StoredPlugin."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/nio/file/Path;)V
      28: areturn

  public void cleanUp();
    Code:
       0: aload_0
       1: invokevirtual #283                // Method getUnknownFiles:()Ljava/util/List;
       4: invokedynamic #296,  0            // InvokeDynamic #7:accept:()Ljava/util/function/Consumer;
       9: invokeinterface #300,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      14: return

  private java.util.List<java.io.File> getUnknownFiles();
    Code:
       0: aload_0
       1: invokevirtual #200                // Method getStoredPlugins:()Ljava/util/List;
       4: invokeinterface #235,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #312,  0            // InvokeDynamic #8:apply:()Ljava/util/function/Function;
      14: invokeinterface #183,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      19: invokestatic  #315                // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      22: invokeinterface #193,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      27: checkcast     #212                // class java/util/Set
      30: astore_1
      31: aload_0
      32: getfield      #50                 // Field rootPath:Ljava/nio/file/Path;
      35: invokestatic  #321                // Method java/nio/file/Files.list:(Ljava/nio/file/Path;)Ljava/util/stream/Stream;
      38: astore_2
      39: aload_2
      40: aload_0
      41: invokedynamic #333,  0            // InvokeDynamic #9:test:(Lorg/sonarsource/sonarlint/core/storage/PluginsStorage;)Ljava/util/function/Predicate;
      46: invokeinterface #337,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      51: aload_1
      52: invokedynamic #345,  0            // InvokeDynamic #10:test:(Ljava/util/Set;)Ljava/util/function/Predicate;
      57: invokeinterface #337,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      62: invokedynamic #349,  0            // InvokeDynamic #11:apply:()Ljava/util/function/Function;
      67: invokeinterface #183,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      72: invokestatic  #189                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      75: invokeinterface #193,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      80: checkcast     #195                // class java/util/List
      83: astore_3
      84: aload_2
      85: ifnull        94
      88: aload_2
      89: invokeinterface #352,  1          // InterfaceMethod java/util/stream/Stream.close:()V
      94: aload_3
      95: areturn
      96: astore_3
      97: aload_2
      98: ifnull        118
     101: aload_2
     102: invokeinterface #352,  1          // InterfaceMethod java/util/stream/Stream.close:()V
     107: goto          118
     110: astore        4
     112: aload_3
     113: aload         4
     115: invokevirtual #356                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     118: aload_3
     119: athrow
     120: astore_2
     121: getstatic     #358                // Field LOG:Lorg/sonar/api/utils/log/Logger;
     124: ldc_w         #360                // String Cannot list files in \'{}\'
     127: aload_0
     128: getfield      #50                 // Field rootPath:Ljava/nio/file/Path;
     131: aload_2
     132: invokeinterface #366,  4          // InterfaceMethod org/sonar/api/utils/log/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     137: invokestatic  #371                // Method java/util/Collections.emptyList:()Ljava/util/List;
     140: areturn
    Exception table:
       from    to  target type
          39    84    96   Class java/lang/Throwable
         101   107   110   Class java/lang/Throwable
          31    94   120   Class java/lang/Exception
          96   120   120   Class java/lang/Exception

  private static boolean lambda$getUnknownFiles$4(java.util.Set, java.nio.file.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #381,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private boolean lambda$getUnknownFiles$3(java.nio.file.Path);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #135                // Method getPluginsFilePath:()Ljava/nio/file/Path;
       5: invokeinterface #385,  2          // InterfaceMethod java/nio/file/Path.equals:(Ljava/lang/Object;)Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  private static java.nio.file.Path lambda$getStoredPluginPathsByKey$2(java.util.Map$Entry);
    Code:
       0: aload_0
       1: invokeinterface #388,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
       6: checkcast     #237                // class org/sonarsource/sonarlint/core/storage/StoredPlugin
       9: invokevirtual #308                // Method org/sonarsource/sonarlint/core/storage/StoredPlugin.getJarPath:()Ljava/nio/file/Path;
      12: areturn

  private static org.sonarsource.sonarlint.core.proto.Sonarlint$PluginReferences lambda$getStoredPlugins$1(java.nio.file.Path);
    Code:
       0: aload_0
       1: iconst_0
       2: anewarray     #392                // class java/nio/file/LinkOption
       5: invokestatic  #396                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
       8: ifeq          24
      11: aload_0
      12: invokestatic  #400                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences.parser:()Lcom/google/protobuf/Parser;
      15: invokestatic  #406                // Method org/sonarsource/sonarlint/core/container/storage/ProtobufUtil.readFile:(Ljava/nio/file/Path;Lcom/google/protobuf/Parser;)Lcom/google/protobuf/Message;
      18: checkcast     #7                  // class org/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences
      21: goto          30
      24: invokestatic  #409                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences.newBuilder:()Lorg/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$Builder;
      27: invokevirtual #411                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$Builder.build:()Lorg/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences;
      30: areturn

  private void lambda$store$0(org.sonarsource.sonarlint.core.serverapi.plugins.ServerPlugin, org.sonarsource.sonarlint.core.proto.Sonarlint$PluginReferences$PluginReference);
    Code:
       0: aload_0
       1: invokevirtual #135                // Method getPluginsFilePath:()Ljava/nio/file/Path;
       4: astore_3
       5: aload_3
       6: iconst_0
       7: anewarray     #392                // class java/nio/file/LinkOption
      10: invokestatic  #396                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      13: ifeq          29
      16: aload_3
      17: invokestatic  #400                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences.parser:()Lcom/google/protobuf/Parser;
      20: invokestatic  #406                // Method org/sonarsource/sonarlint/core/container/storage/ProtobufUtil.readFile:(Ljava/nio/file/Path;Lcom/google/protobuf/Parser;)Lcom/google/protobuf/Message;
      23: checkcast     #7                  // class org/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences
      26: goto          35
      29: invokestatic  #409                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences.newBuilder:()Lorg/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$Builder;
      32: invokevirtual #411                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$Builder.build:()Lorg/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences;
      35: astore        4
      37: aload         4
      39: invokestatic  #414                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences.newBuilder:(Lorg/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences;)Lorg/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$Builder;
      42: astore        5
      44: aload         5
      46: aload_1
      47: invokevirtual #256                // Method org/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin.getKey:()Ljava/lang/String;
      50: aload_2
      51: invokevirtual #418                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$Builder.putPluginsByKey:(Ljava/lang/String;Lorg/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$PluginReference;)Lorg/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$Builder;
      54: pop
      55: aload         5
      57: invokevirtual #411                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences$Builder.build:()Lorg/sonarsource/sonarlint/core/proto/Sonarlint$PluginReferences;
      60: aload_3
      61: invokestatic  #422                // Method org/sonarsource/sonarlint/core/container/storage/ProtobufUtil.writeToFile:(Lcom/google/protobuf/Message;Ljava/nio/file/Path;)V
      64: return

  static {};
    Code:
       0: ldc           #2                  // class org/sonarsource/sonarlint/core/storage/PluginsStorage
       2: invokestatic  #433                // Method org/sonar/api/utils/log/Loggers.get:(Ljava/lang/Class;)Lorg/sonar/api/utils/log/Logger;
       5: putstatic     #358                // Field LOG:Lorg/sonar/api/utils/log/Logger;
       8: return
}
