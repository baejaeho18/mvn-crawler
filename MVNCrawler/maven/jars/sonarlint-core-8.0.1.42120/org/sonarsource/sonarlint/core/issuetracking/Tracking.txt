Compiled from "Tracking.java"
public class org.sonarsource.sonarlint.core.issuetracking.Tracking<R extends org.sonarsource.sonarlint.core.issuetracking.Trackable, B extends org.sonarsource.sonarlint.core.issuetracking.Trackable> {
  private final java.util.IdentityHashMap<R, B> rawToBase;

  private final java.util.IdentityHashMap<B, R> baseToRaw;

  private final java.util.Collection<R> raws;

  private final java.util.Collection<B> bases;

  public org.sonarsource.sonarlint.core.issuetracking.Tracking(java.util.function.Supplier<java.util.Collection<R>>, java.util.function.Supplier<java.util.Collection<B>>);
    Code:
       0: aload_0
       1: invokespecial #22                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #24                 // class java/util/IdentityHashMap
       8: dup
       9: invokespecial #25                 // Method java/util/IdentityHashMap."<init>":()V
      12: putfield      #27                 // Field rawToBase:Ljava/util/IdentityHashMap;
      15: aload_0
      16: new           #24                 // class java/util/IdentityHashMap
      19: dup
      20: invokespecial #25                 // Method java/util/IdentityHashMap."<init>":()V
      23: putfield      #29                 // Field baseToRaw:Ljava/util/IdentityHashMap;
      26: aload_0
      27: aload_1
      28: invokeinterface #35,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      33: checkcast     #37                 // class java/util/Collection
      36: putfield      #39                 // Field raws:Ljava/util/Collection;
      39: aload_0
      40: aload_2
      41: invokeinterface #35,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      46: checkcast     #37                 // class java/util/Collection
      49: putfield      #41                 // Field bases:Ljava/util/Collection;
      52: return

  public java.lang.Iterable<R> getUnmatchedRaws();
    Code:
       0: new           #54                 // class java/util/ArrayList
       3: dup
       4: invokespecial #55                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #39                 // Field raws:Ljava/util/Collection;
      12: invokeinterface #59,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          59
      27: aload_2
      28: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #72                 // class org/sonarsource/sonarlint/core/issuetracking/Trackable
      36: astore_3
      37: aload_0
      38: getfield      #27                 // Field rawToBase:Ljava/util/IdentityHashMap;
      41: aload_3
      42: invokevirtual #76                 // Method java/util/IdentityHashMap.containsKey:(Ljava/lang/Object;)Z
      45: ifne          56
      48: aload_1
      49: aload_3
      50: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      55: pop
      56: goto          18
      59: aload_1
      60: areturn

  public java.util.Map<R, B> getMatchedRaws();
    Code:
       0: aload_0
       1: getfield      #27                 // Field rawToBase:Ljava/util/IdentityHashMap;
       4: areturn

  public java.lang.Iterable<B> getUnmatchedBases();
    Code:
       0: new           #54                 // class java/util/ArrayList
       3: dup
       4: invokespecial #55                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #41                 // Field bases:Ljava/util/Collection;
      12: invokeinterface #59,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          59
      27: aload_2
      28: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #72                 // class org/sonarsource/sonarlint/core/issuetracking/Trackable
      36: astore_3
      37: aload_0
      38: getfield      #29                 // Field baseToRaw:Ljava/util/IdentityHashMap;
      41: aload_3
      42: invokevirtual #76                 // Method java/util/IdentityHashMap.containsKey:(Ljava/lang/Object;)Z
      45: ifne          56
      48: aload_1
      49: aload_3
      50: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      55: pop
      56: goto          18
      59: aload_1
      60: areturn

  void match(R, B);
    Code:
       0: aload_0
       1: getfield      #27                 // Field rawToBase:Ljava/util/IdentityHashMap;
       4: aload_1
       5: aload_2
       6: invokevirtual #100                // Method java/util/IdentityHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: getfield      #29                 // Field baseToRaw:Ljava/util/IdentityHashMap;
      14: aload_2
      15: aload_1
      16: invokevirtual #100                // Method java/util/IdentityHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: return

  boolean isComplete();
    Code:
       0: aload_0
       1: getfield      #27                 // Field rawToBase:Ljava/util/IdentityHashMap;
       4: invokevirtual #107                // Method java/util/IdentityHashMap.size:()I
       7: aload_0
       8: getfield      #39                 // Field raws:Ljava/util/Collection;
      11: invokeinterface #108,  1          // InterfaceMethod java/util/Collection.size:()I
      16: if_icmpne     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn
}
