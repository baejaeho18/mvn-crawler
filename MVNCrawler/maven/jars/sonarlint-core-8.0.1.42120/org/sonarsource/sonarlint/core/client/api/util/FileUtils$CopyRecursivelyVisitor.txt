Compiled from "FileUtils.java"
class org.sonarsource.sonarlint.core.client.api.util.FileUtils$CopyRecursivelyVisitor extends java.nio.file.SimpleFileVisitor<java.nio.file.Path> {
  private final java.nio.file.Path fromPath;

  private final java.nio.file.Path toPath;

  private final java.nio.file.CopyOption[] copyOptions;

  public org.sonarsource.sonarlint.core.client.api.util.FileUtils$CopyRecursivelyVisitor(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/nio/file/SimpleFileVisitor."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #21                 // Field fromPath:Ljava/nio/file/Path;
       9: aload_0
      10: aload_2
      11: putfield      #23                 // Field toPath:Ljava/nio/file/Path;
      14: aload_0
      15: aload_3
      16: putfield      #25                 // Field copyOptions:[Ljava/nio/file/CopyOption;
      19: return

  public java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field toPath:Ljava/nio/file/Path;
       4: aload_0
       5: getfield      #21                 // Field fromPath:Ljava/nio/file/Path;
       8: aload_1
       9: invokeinterface #37,  2           // InterfaceMethod java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
      14: invokeinterface #40,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
      19: astore_3
      20: aload_3
      21: iconst_0
      22: anewarray     #42                 // class java/nio/file/LinkOption
      25: invokestatic  #48                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      28: ifne          40
      31: aload_3
      32: iconst_0
      33: anewarray     #50                 // class java/nio/file/attribute/FileAttribute
      36: invokestatic  #54                 // Method java/nio/file/Files.createDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
      39: pop
      40: getstatic     #60                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
      43: areturn

  public java.nio.file.FileVisitResult visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #23                 // Field toPath:Ljava/nio/file/Path;
       5: aload_0
       6: getfield      #21                 // Field fromPath:Ljava/nio/file/Path;
       9: aload_1
      10: invokeinterface #37,  2           // InterfaceMethod java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
      15: invokeinterface #40,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
      20: aload_0
      21: getfield      #25                 // Field copyOptions:[Ljava/nio/file/CopyOption;
      24: invokestatic  #69                 // Method java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
      27: pop
      28: getstatic     #60                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
      31: areturn

  public java.nio.file.FileVisitResult visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #33                 // class java/nio/file/Path
       5: aload_2
       6: invokevirtual #73                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
       9: areturn

  public java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #33                 // class java/nio/file/Path
       5: aload_2
       6: invokevirtual #75                 // Method preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
       9: areturn
}
