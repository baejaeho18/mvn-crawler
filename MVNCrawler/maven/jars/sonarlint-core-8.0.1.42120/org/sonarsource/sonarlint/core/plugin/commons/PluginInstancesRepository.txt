Compiled from "PluginInstancesRepository.java"
public class org.sonarsource.sonarlint.core.plugin.commons.PluginInstancesRepository implements java.lang.AutoCloseable {
  private static final org.sonar.api.utils.log.Logger LOG;

  private final org.sonarsource.sonarlint.core.plugin.commons.loading.PluginInstancesLoader pluginInstancesLoader;

  private java.util.Map<java.lang.String, org.sonar.api.Plugin> pluginInstancesByKeys;

  private java.util.Map<java.lang.String, org.sonarsource.sonarlint.core.plugin.commons.loading.PluginRequirementsCheckResult> pluginCheckResultByKeys;

  public org.sonarsource.sonarlint.core.plugin.commons.PluginInstancesRepository(org.sonarsource.sonarlint.core.plugin.commons.PluginInstancesRepository$Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: new           #28                 // class org/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginRequirementsChecker
       5: dup
       6: invokespecial #31                 // Method org/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginRequirementsChecker."<init>":()V
       9: new           #33                 // class org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInstancesLoader
      12: dup
      13: invokespecial #34                 // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInstancesLoader."<init>":()V
      16: getstatic     #40                 // Field org/sonar/api/utils/System2.INSTANCE:Lorg/sonar/api/utils/System2;
      19: invokespecial #43                 // Method "<init>":(Lorg/sonarsource/sonarlint/core/plugin/commons/PluginInstancesRepository$Configuration;Lorg/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginRequirementsChecker;Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInstancesLoader;Lorg/sonar/api/utils/System2;)V
      22: return

  org.sonarsource.sonarlint.core.plugin.commons.PluginInstancesRepository(org.sonarsource.sonarlint.core.plugin.commons.PluginInstancesRepository$Configuration, org.sonarsource.sonarlint.core.plugin.commons.loading.SonarPluginRequirementsChecker, org.sonarsource.sonarlint.core.plugin.commons.loading.PluginInstancesLoader, org.sonar.api.utils.System2);
    Code:
       0: aload_0
       1: invokespecial #48                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_3
       6: putfield      #50                 // Field pluginInstancesLoader:Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInstancesLoader;
       9: aload_0
      10: aload_1
      11: aload_2
      12: aload         4
      14: invokevirtual #54                 // Method load:(Lorg/sonarsource/sonarlint/core/plugin/commons/PluginInstancesRepository$Configuration;Lorg/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginRequirementsChecker;Lorg/sonar/api/utils/System2;)V
      17: return

  private void load(org.sonarsource.sonarlint.core.plugin.commons.PluginInstancesRepository$Configuration, org.sonarsource.sonarlint.core.plugin.commons.loading.SonarPluginRequirementsChecker, org.sonar.api.utils.System2);
    Code:
       0: aload_3
       1: ldc           #59                 // String java.specification.version
       3: invokevirtual #63                 // Method org/sonar/api/utils/System2.property:(Ljava/lang/String;)Ljava/lang/String;
       6: ldc           #65                 // String Missing Java property \'java.specification.version\'
       8: invokestatic  #71                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #73                 // class java/lang/String
      14: astore        4
      16: aload_0
      17: aload_2
      18: aload_1
      19: getfield      #77                 // Field org/sonarsource/sonarlint/core/plugin/commons/PluginInstancesRepository$Configuration.pluginJarLocations:Ljava/util/Set;
      22: aload_1
      23: getfield      #80                 // Field org/sonarsource/sonarlint/core/plugin/commons/PluginInstancesRepository$Configuration.enabledLanguages:Ljava/util/Set;
      26: aload         4
      28: invokestatic  #86                 // Method org/sonarsource/sonarlint/core/commons/Version.create:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/commons/Version;
      31: aload_1
      32: getfield      #90                 // Field org/sonarsource/sonarlint/core/plugin/commons/PluginInstancesRepository$Configuration.nodeCurrentVersion:Ljava/util/Optional;
      35: invokevirtual #94                 // Method org/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginRequirementsChecker.checkRequirements:(Ljava/util/Set;Ljava/util/Set;Lorg/sonarsource/sonarlint/core/commons/Version;Ljava/util/Optional;)Ljava/util/Map;
      38: putfield      #96                 // Field pluginCheckResultByKeys:Ljava/util/Map;
      41: aload_0
      42: invokevirtual #100                // Method getNonSkippedPlugins:()Ljava/util/Collection;
      45: astore        5
      47: aload_0
      48: aload_0
      49: getfield      #50                 // Field pluginInstancesLoader:Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInstancesLoader;
      52: aload         5
      54: invokevirtual #104                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInstancesLoader.instantiatePluginClasses:(Ljava/util/Collection;)Ljava/util/Map;
      57: putfield      #106                // Field pluginInstancesByKeys:Ljava/util/Map;
      60: aload         5
      62: invokestatic  #110                // Method logPlugins:(Ljava/util/Collection;)V
      65: return

  private static void logPlugins(java.util.Collection<org.sonarsource.sonarlint.core.plugin.commons.loading.PluginInfo>);
    Code:
       0: getstatic     #118                // Field LOG:Lorg/sonar/api/utils/log/Logger;
       3: ldc           #120                // String Loaded {} plugins
       5: aload_0
       6: invokeinterface #126,  1          // InterfaceMethod java/util/Collection.size:()I
      11: invokestatic  #132                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: invokeinterface #138,  3          // InterfaceMethod org/sonar/api/utils/log/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      19: aload_0
      20: invokeinterface #142,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      25: astore_1
      26: aload_1
      27: invokeinterface #148,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          83
      35: aload_1
      36: invokeinterface #152,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #154                // class org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo
      44: astore_2
      45: getstatic     #118                // Field LOG:Lorg/sonar/api/utils/log/Logger;
      48: ldc           #156                // String   * {} {} ({})
      50: iconst_3
      51: anewarray     #4                  // class java/lang/Object
      54: dup
      55: iconst_0
      56: aload_2
      57: invokevirtual #160                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getName:()Ljava/lang/String;
      60: aastore
      61: dup
      62: iconst_1
      63: aload_2
      64: invokevirtual #164                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getVersion:()Lorg/sonarsource/sonarlint/core/commons/Version;
      67: aastore
      68: dup
      69: iconst_2
      70: aload_2
      71: invokevirtual #167                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo.getKey:()Ljava/lang/String;
      74: aastore
      75: invokeinterface #170,  3          // InterfaceMethod org/sonar/api/utils/log/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      80: goto          26
      83: return

  public void close() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #106                // Field pluginInstancesByKeys:Ljava/util/Map;
       4: ifnull        54
       7: aload_0
       8: getfield      #106                // Field pluginInstancesByKeys:Ljava/util/Map;
      11: invokeinterface #180,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
      16: ifne          54
      19: getstatic     #118                // Field LOG:Lorg/sonar/api/utils/log/Logger;
      22: ldc           #182                // String Unloading plugins
      24: invokeinterface #185,  2          // InterfaceMethod org/sonar/api/utils/log/Logger.debug:(Ljava/lang/String;)V
      29: aload_0
      30: getfield      #50                 // Field pluginInstancesLoader:Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInstancesLoader;
      33: invokevirtual #188                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInstancesLoader.unload:()V
      36: aload_0
      37: getfield      #106                // Field pluginInstancesByKeys:Ljava/util/Map;
      40: invokeinterface #191,  1          // InterfaceMethod java/util/Map.clear:()V
      45: aload_0
      46: getfield      #96                 // Field pluginCheckResultByKeys:Ljava/util/Map;
      49: invokeinterface #191,  1          // InterfaceMethod java/util/Map.clear:()V
      54: return

  private java.util.Collection<org.sonarsource.sonarlint.core.plugin.commons.loading.PluginInfo> getNonSkippedPlugins();
    Code:
       0: aload_0
       1: getfield      #96                 // Field pluginCheckResultByKeys:Ljava/util/Map;
       4: invokeinterface #195,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #199,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      14: invokedynamic #220,  0            // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      19: invokestatic  #226                // InterfaceMethod java/util/function/Predicate.not:(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;
      22: invokeinterface #232,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      27: invokedynamic #245,  0            // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      32: invokeinterface #249,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      37: invokestatic  #255                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      40: invokeinterface #259,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      45: checkcast     #122                // class java/util/Collection
      48: areturn

  public java.util.Map<java.lang.String, org.sonarsource.sonarlint.core.plugin.commons.loading.PluginRequirementsCheckResult> getPluginCheckResultByKeys();
    Code:
       0: aload_0
       1: getfield      #96                 // Field pluginCheckResultByKeys:Ljava/util/Map;
       4: invokestatic  #266                // InterfaceMethod java/util/Map.copyOf:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public java.util.Map<java.lang.String, org.sonar.api.Plugin> getPluginInstancesByKeys();
    Code:
       0: aload_0
       1: getfield      #106                // Field pluginInstancesByKeys:Ljava/util/Map;
       4: invokestatic  #266                // InterfaceMethod java/util/Map.copyOf:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  static {};
    Code:
       0: ldc           #2                  // class org/sonarsource/sonarlint/core/plugin/commons/PluginInstancesRepository
       2: invokestatic  #275                // Method org/sonar/api/utils/log/Loggers.get:(Ljava/lang/Class;)Lorg/sonar/api/utils/log/Logger;
       5: putstatic     #118                // Field LOG:Lorg/sonar/api/utils/log/Logger;
       8: return
}
