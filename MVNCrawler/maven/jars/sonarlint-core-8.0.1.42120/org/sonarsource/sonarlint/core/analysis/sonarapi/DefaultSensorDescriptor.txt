Compiled from "DefaultSensorDescriptor.java"
public class org.sonarsource.sonarlint.core.analysis.sonarapi.DefaultSensorDescriptor implements org.sonar.api.batch.sensor.SensorDescriptor {
  private java.lang.String name;

  private java.lang.String[] languages;

  private org.sonar.api.batch.fs.InputFile$Type type;

  private java.lang.String[] ruleRepositories;

  private boolean global;

  private java.util.function.Predicate<org.sonar.api.config.Configuration> configurationPredicate;

  public org.sonarsource.sonarlint.core.analysis.sonarapi.DefaultSensorDescriptor();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: anewarray     #30                 // class java/lang/String
       9: putfield      #32                 // Field languages:[Ljava/lang/String;
      12: aload_0
      13: aconst_null
      14: putfield      #34                 // Field type:Lorg/sonar/api/batch/fs/InputFile$Type;
      17: aload_0
      18: iconst_0
      19: anewarray     #30                 // class java/lang/String
      22: putfield      #36                 // Field ruleRepositories:[Ljava/lang/String;
      25: aload_0
      26: iconst_0
      27: putfield      #38                 // Field global:Z
      30: return

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #43                 // Field name:Ljava/lang/String;
       4: areturn

  public java.util.Collection<java.lang.String> languages();
    Code:
       0: aload_0
       1: getfield      #32                 // Field languages:[Ljava/lang/String;
       4: invokestatic  #51                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       7: areturn

  public org.sonar.api.batch.fs.InputFile$Type type();
    Code:
       0: aload_0
       1: getfield      #34                 // Field type:Lorg/sonar/api/batch/fs/InputFile$Type;
       4: areturn

  public java.util.Collection<java.lang.String> ruleRepositories();
    Code:
       0: aload_0
       1: getfield      #36                 // Field ruleRepositories:[Ljava/lang/String;
       4: invokestatic  #51                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       7: areturn

  public java.util.function.Predicate<org.sonar.api.config.Configuration> configurationPredicate();
    Code:
       0: aload_0
       1: getfield      #57                 // Field configurationPredicate:Ljava/util/function/Predicate;
       4: areturn

  public boolean isGlobal();
    Code:
       0: aload_0
       1: getfield      #38                 // Field global:Z
       4: ireturn

  public org.sonarsource.sonarlint.core.analysis.sonarapi.DefaultSensorDescriptor name(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field name:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonarsource.sonarlint.core.analysis.sonarapi.DefaultSensorDescriptor onlyOnLanguage(java.lang.String);
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #30                 // class java/lang/String
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: invokevirtual #65                 // Method onlyOnLanguages:([Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/analysis/sonarapi/DefaultSensorDescriptor;
      12: areturn

  public org.sonarsource.sonarlint.core.analysis.sonarapi.DefaultSensorDescriptor onlyOnLanguages(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field languages:[Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonarsource.sonarlint.core.analysis.sonarapi.DefaultSensorDescriptor onlyOnFileType(org.sonar.api.batch.fs.InputFile$Type);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field type:Lorg/sonar/api/batch/fs/InputFile$Type;
       5: aload_0
       6: areturn

  public org.sonarsource.sonarlint.core.analysis.sonarapi.DefaultSensorDescriptor createIssuesForRuleRepository(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #73                 // Method createIssuesForRuleRepositories:([Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/analysis/sonarapi/DefaultSensorDescriptor;
       5: areturn

  public org.sonarsource.sonarlint.core.analysis.sonarapi.DefaultSensorDescriptor createIssuesForRuleRepositories(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field ruleRepositories:[Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonar.api.batch.sensor.SensorDescriptor global();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #38                 // Field global:Z
       5: aload_0
       6: areturn

  public org.sonarsource.sonarlint.core.analysis.sonarapi.DefaultSensorDescriptor onlyWhenConfiguration(java.util.function.Predicate<org.sonar.api.config.Configuration>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #57                 // Field configurationPredicate:Ljava/util/function/Predicate;
       5: aload_0
       6: areturn

  public org.sonar.api.batch.sensor.SensorDescriptor onlyWhenConfiguration(java.util.function.Predicate);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #82                 // Method onlyWhenConfiguration:(Ljava/util/function/Predicate;)Lorg/sonarsource/sonarlint/core/analysis/sonarapi/DefaultSensorDescriptor;
       5: areturn

  public org.sonar.api.batch.sensor.SensorDescriptor createIssuesForRuleRepositories(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #73                 // Method createIssuesForRuleRepositories:([Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/analysis/sonarapi/DefaultSensorDescriptor;
       5: areturn

  public org.sonar.api.batch.sensor.SensorDescriptor createIssuesForRuleRepository(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #85                 // Method createIssuesForRuleRepository:([Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/analysis/sonarapi/DefaultSensorDescriptor;
       5: areturn

  public org.sonar.api.batch.sensor.SensorDescriptor onlyOnFileType(org.sonar.api.batch.fs.InputFile$Type);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #88                 // Method onlyOnFileType:(Lorg/sonar/api/batch/fs/InputFile$Type;)Lorg/sonarsource/sonarlint/core/analysis/sonarapi/DefaultSensorDescriptor;
       5: areturn

  public org.sonar.api.batch.sensor.SensorDescriptor onlyOnLanguages(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #65                 // Method onlyOnLanguages:([Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/analysis/sonarapi/DefaultSensorDescriptor;
       5: areturn

  public org.sonar.api.batch.sensor.SensorDescriptor onlyOnLanguage(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #91                 // Method onlyOnLanguage:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/analysis/sonarapi/DefaultSensorDescriptor;
       5: areturn

  public org.sonar.api.batch.sensor.SensorDescriptor name(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #93                 // Method name:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/analysis/sonarapi/DefaultSensorDescriptor;
       5: areturn
}
