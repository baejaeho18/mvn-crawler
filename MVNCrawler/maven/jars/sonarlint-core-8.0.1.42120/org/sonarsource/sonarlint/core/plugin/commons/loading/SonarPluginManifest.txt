Compiled from "SonarPluginManifest.java"
public class org.sonarsource.sonarlint.core.plugin.commons.loading.SonarPluginManifest {
  public static final java.lang.String KEY_ATTRIBUTE;

  public static final java.lang.String MAIN_CLASS_ATTRIBUTE;

  public static final java.lang.String NAME_ATTRIBUTE;

  public static final java.lang.String VERSION_ATTRIBUTE;

  public static final java.lang.String SONAR_VERSION_ATTRIBUTE;

  public static final java.lang.String DEPENDENCIES_ATTRIBUTE;

  public static final java.lang.String REQUIRE_PLUGINS_ATTRIBUTE;

  public static final java.lang.String BASE_PLUGIN;

  public static final java.lang.String JRE_MIN_VERSION;

  public static final java.lang.String NODEJS_MIN_VERSION;

  private final java.lang.String key;

  private final java.lang.String name;

  private final java.lang.String mainClass;

  private final java.lang.String version;

  private final java.util.Optional<org.sonarsource.sonarlint.core.commons.Version> sonarMinVersion;

  private final java.util.List<java.lang.String> dependencies;

  private final java.lang.String basePluginKey;

  private final java.util.List<org.sonarsource.sonarlint.core.plugin.commons.loading.SonarPluginManifest$RequiredPlugin> requiredPlugins;

  private final java.util.Optional<org.sonarsource.sonarlint.core.commons.Version> jreMinVersion;

  private final java.util.Optional<org.sonarsource.sonarlint.core.commons.Version> nodeJsMinVersion;

  public static org.sonarsource.sonarlint.core.plugin.commons.loading.SonarPluginManifest fromJar(java.nio.file.Path);
    Code:
       0: new           #67                 // class java/util/jar/JarFile
       3: dup
       4: aload_0
       5: invokeinterface #73,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      10: invokespecial #77                 // Method java/util/jar/JarFile."<init>":(Ljava/io/File;)V
      13: astore_1
      14: aload_1
      15: invokevirtual #81                 // Method java/util/jar/JarFile.getManifest:()Ljava/util/jar/Manifest;
      18: astore_2
      19: aload_2
      20: ifnull        38
      23: new           #2                  // class org/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginManifest
      26: dup
      27: aload_2
      28: invokespecial #84                 // Method "<init>":(Ljava/util/jar/Manifest;)V
      31: astore_3
      32: aload_1
      33: invokevirtual #88                 // Method java/util/jar/JarFile.close:()V
      36: aload_3
      37: areturn
      38: new           #92                 // class java/lang/IllegalStateException
      41: dup
      42: aload_0
      43: invokeinterface #96,  1           // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;
      48: invokedynamic #108,  0            // InvokeDynamic #0:makeConcatWithConstants:(Ljava/nio/file/Path;)Ljava/lang/String;
      53: invokespecial #111                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: astore_2
      58: aload_1
      59: invokevirtual #88                 // Method java/util/jar/JarFile.close:()V
      62: goto          71
      65: astore_3
      66: aload_2
      67: aload_3
      68: invokevirtual #115                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      71: aload_2
      72: athrow
      73: astore_1
      74: new           #92                 // class java/lang/IllegalStateException
      77: dup
      78: aload_0
      79: invokeinterface #96,  1           // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;
      84: invokedynamic #118,  0            // InvokeDynamic #1:makeConcatWithConstants:(Ljava/nio/file/Path;)Ljava/lang/String;
      89: aload_1
      90: invokespecial #121                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      93: athrow
    Exception table:
       from    to  target type
          14    32    57   Class java/lang/Throwable
          38    57    57   Class java/lang/Throwable
          58    62    65   Class java/lang/Throwable
           0    36    73   Class java/lang/Exception
          38    73    73   Class java/lang/Exception

  public org.sonarsource.sonarlint.core.plugin.commons.loading.SonarPluginManifest(java.util.jar.Manifest);
    Code:
       0: aload_0
       1: invokespecial #131                // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokevirtual #135                // Method java/util/jar/Manifest.getMainAttributes:()Ljava/util/jar/Attributes;
       8: astore_2
       9: aload_0
      10: aload_2
      11: ldc           #17                 // String Plugin-Key
      13: invokevirtual #141                // Method java/util/jar/Attributes.getValue:(Ljava/lang/String;)Ljava/lang/String;
      16: ldc           #143                // String Plugin key is mandatory
      18: invokestatic  #149                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      21: checkcast     #151                // class java/lang/String
      24: putfield      #153                // Field key:Ljava/lang/String;
      27: aload_0
      28: aload_2
      29: ldc           #20                 // String Plugin-Class
      31: invokevirtual #141                // Method java/util/jar/Attributes.getValue:(Ljava/lang/String;)Ljava/lang/String;
      34: putfield      #155                // Field mainClass:Ljava/lang/String;
      37: aload_0
      38: aload_2
      39: ldc           #23                 // String Plugin-Name
      41: invokevirtual #141                // Method java/util/jar/Attributes.getValue:(Ljava/lang/String;)Ljava/lang/String;
      44: putfield      #157                // Field name:Ljava/lang/String;
      47: aload_0
      48: aload_2
      49: ldc           #26                 // String Plugin-Version
      51: invokevirtual #141                // Method java/util/jar/Attributes.getValue:(Ljava/lang/String;)Ljava/lang/String;
      54: putfield      #159                // Field version:Ljava/lang/String;
      57: aload_0
      58: aload_2
      59: ldc           #29                 // String Sonar-Version
      61: invokevirtual #141                // Method java/util/jar/Attributes.getValue:(Ljava/lang/String;)Ljava/lang/String;
      64: invokestatic  #165                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      67: invokedynamic #186,  0            // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      72: invokevirtual #190                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      75: putfield      #192                // Field sonarMinVersion:Ljava/util/Optional;
      78: aload_0
      79: aload_2
      80: ldc           #38                 // String Plugin-Base
      82: invokevirtual #141                // Method java/util/jar/Attributes.getValue:(Ljava/lang/String;)Ljava/lang/String;
      85: putfield      #194                // Field basePluginKey:Ljava/lang/String;
      88: aload_2
      89: ldc           #32                 // String Plugin-Dependencies
      91: invokevirtual #141                // Method java/util/jar/Attributes.getValue:(Ljava/lang/String;)Ljava/lang/String;
      94: astore_3
      95: aload_0
      96: aload_3
      97: invokestatic  #199                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/lang3/StringUtils.defaultString:(Ljava/lang/String;)Ljava/lang/String;
     100: bipush        32
     102: invokestatic  #203                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/lang3/StringUtils.split:(Ljava/lang/String;C)[Ljava/lang/String;
     105: invokestatic  #209                // InterfaceMethod java/util/List.of:([Ljava/lang/Object;)Ljava/util/List;
     108: putfield      #211                // Field dependencies:Ljava/util/List;
     111: aload_2
     112: ldc           #35                 // String Plugin-RequirePlugins
     114: invokevirtual #141                // Method java/util/jar/Attributes.getValue:(Ljava/lang/String;)Ljava/lang/String;
     117: astore        4
     119: aload_0
     120: aload         4
     122: invokestatic  #199                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/lang3/StringUtils.defaultString:(Ljava/lang/String;)Ljava/lang/String;
     125: bipush        44
     127: invokestatic  #203                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/lang3/StringUtils.split:(Ljava/lang/String;C)[Ljava/lang/String;
     130: invokestatic  #216                // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
     133: invokedynamic #223,  0            // InvokeDynamic #3:apply:()Ljava/util/function/Function;
     138: invokeinterface #226,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     143: invokestatic  #232                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
     146: invokeinterface #236,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     151: checkcast     #205                // class java/util/List
     154: putfield      #238                // Field requiredPlugins:Ljava/util/List;
     157: aload_0
     158: aload_2
     159: ldc           #41                 // String Jre-Min-Version
     161: invokevirtual #141                // Method java/util/jar/Attributes.getValue:(Ljava/lang/String;)Ljava/lang/String;
     164: invokestatic  #165                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
     167: invokedynamic #186,  0            // InvokeDynamic #2:apply:()Ljava/util/function/Function;
     172: invokevirtual #190                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
     175: putfield      #240                // Field jreMinVersion:Ljava/util/Optional;
     178: aload_0
     179: aload_2
     180: ldc           #44                 // String NodeJs-Min-Version
     182: invokevirtual #141                // Method java/util/jar/Attributes.getValue:(Ljava/lang/String;)Ljava/lang/String;
     185: invokestatic  #165                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
     188: invokedynamic #186,  0            // InvokeDynamic #2:apply:()Ljava/util/function/Function;
     193: invokevirtual #190                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
     196: putfield      #242                // Field nodeJsMinVersion:Ljava/util/Optional;
     199: return

  public java.lang.String getKey();
    Code:
       0: aload_0
       1: getfield      #153                // Field key:Ljava/lang/String;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #157                // Field name:Ljava/lang/String;
       4: areturn

  public java.util.List<org.sonarsource.sonarlint.core.plugin.commons.loading.SonarPluginManifest$RequiredPlugin> getRequiredPlugins();
    Code:
       0: aload_0
       1: getfield      #238                // Field requiredPlugins:Ljava/util/List;
       4: areturn

  public java.lang.String getVersion();
    Code:
       0: aload_0
       1: getfield      #159                // Field version:Ljava/lang/String;
       4: areturn

  public java.util.Optional<org.sonarsource.sonarlint.core.commons.Version> getSonarMinVersion();
    Code:
       0: aload_0
       1: getfield      #192                // Field sonarMinVersion:Ljava/util/Optional;
       4: areturn

  public java.lang.String getMainClass();
    Code:
       0: aload_0
       1: getfield      #155                // Field mainClass:Ljava/lang/String;
       4: areturn

  public java.util.List<java.lang.String> getDependencies();
    Code:
       0: aload_0
       1: getfield      #211                // Field dependencies:Ljava/util/List;
       4: areturn

  public java.lang.String getBasePluginKey();
    Code:
       0: aload_0
       1: getfield      #194                // Field basePluginKey:Ljava/lang/String;
       4: areturn

  public java.util.Optional<org.sonarsource.sonarlint.core.commons.Version> getJreMinVersion();
    Code:
       0: aload_0
       1: getfield      #240                // Field jreMinVersion:Ljava/util/Optional;
       4: areturn

  public java.util.Optional<org.sonarsource.sonarlint.core.commons.Version> getNodeJsMinVersion();
    Code:
       0: aload_0
       1: getfield      #242                // Field nodeJsMinVersion:Ljava/util/Optional;
       4: areturn
}
