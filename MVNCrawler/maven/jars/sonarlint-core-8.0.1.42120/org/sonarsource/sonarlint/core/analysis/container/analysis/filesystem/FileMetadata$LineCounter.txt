Compiled from "FileMetadata.java"
class org.sonarsource.sonarlint.core.analysis.container.analysis.filesystem.FileMetadata$LineCounter extends org.sonarsource.sonarlint.core.analysis.container.analysis.filesystem.FileMetadata$CharHandler {
  private int lines;

  boolean alreadyLoggedInvalidCharacter;

  private final java.net.URI fileUri;

  private final java.nio.charset.Charset encoding;

  org.sonarsource.sonarlint.core.analysis.container.analysis.filesystem.FileMetadata$LineCounter(java.net.URI, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: invokespecial #22                 // Method org/sonarsource/sonarlint/core/analysis/container/analysis/filesystem/FileMetadata$CharHandler."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #24                 // Field lines:I
       9: aload_0
      10: iconst_0
      11: putfield      #26                 // Field alreadyLoggedInvalidCharacter:Z
      14: aload_0
      15: aload_1
      16: putfield      #28                 // Field fileUri:Ljava/net/URI;
      19: aload_0
      20: aload_2
      21: putfield      #30                 // Field encoding:Ljava/nio/charset/Charset;
      24: return

  protected void handleAll(char);
    Code:
       0: aload_0
       1: getfield      #26                 // Field alreadyLoggedInvalidCharacter:Z
       4: ifne          54
       7: iload_1
       8: ldc           #35                 // int 65533
      10: if_icmpne     54
      13: getstatic     #39                 // Field org/sonarsource/sonarlint/core/analysis/container/analysis/filesystem/FileMetadata.LOG:Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
      16: ldc           #41                 // String Invalid character encountered in file \'{}\' at line {} for encoding {}. Please fix file content or configure the encoding.
      18: iconst_3
      19: anewarray     #43                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_0
      25: getfield      #28                 // Field fileUri:Ljava/net/URI;
      28: aastore
      29: dup
      30: iconst_1
      31: aload_0
      32: getfield      #24                 // Field lines:I
      35: invokestatic  #49                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: aastore
      39: dup
      40: iconst_2
      41: aload_0
      42: getfield      #30                 // Field encoding:Ljava/nio/charset/Charset;
      45: aastore
      46: invokevirtual #55                 // Method org/sonarsource/sonarlint/core/commons/log/SonarLintLogger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
      49: aload_0
      50: iconst_1
      51: putfield      #26                 // Field alreadyLoggedInvalidCharacter:Z
      54: return

  protected void newLine();
    Code:
       0: aload_0
       1: dup
       2: getfield      #24                 // Field lines:I
       5: iconst_1
       6: iadd
       7: putfield      #24                 // Field lines:I
      10: return

  public int lines();
    Code:
       0: aload_0
       1: getfield      #24                 // Field lines:I
       4: ireturn
}
