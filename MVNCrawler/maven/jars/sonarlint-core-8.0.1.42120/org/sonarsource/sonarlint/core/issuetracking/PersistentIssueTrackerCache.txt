Compiled from "PersistentIssueTrackerCache.java"
public class org.sonarsource.sonarlint.core.issuetracking.PersistentIssueTrackerCache<T> implements org.sonarsource.sonarlint.core.issuetracking.IssueTrackerCache<T> {
  private static final org.sonarsource.sonarlint.core.commons.log.SonarLintLogger LOGGER;

  static final int MAX_ENTRIES;

  private final org.sonarsource.sonarlint.core.issuetracking.TrackableIssueStore store;

  private final java.util.Map<java.lang.String, java.util.Collection<org.sonarsource.sonarlint.core.issuetracking.Trackable<T>>> cache;

  public org.sonarsource.sonarlint.core.issuetracking.PersistentIssueTrackerCache(org.sonarsource.sonarlint.core.issuetracking.TrackableIssueStore);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #33                 // Field store:Lorg/sonarsource/sonarlint/core/issuetracking/TrackableIssueStore;
       9: aload_0
      10: new           #10                 // class org/sonarsource/sonarlint/core/issuetracking/PersistentIssueTrackerCache$LimitedSizeLinkedHashMap
      13: dup
      14: aload_0
      15: invokespecial #36                 // Method org/sonarsource/sonarlint/core/issuetracking/PersistentIssueTrackerCache$LimitedSizeLinkedHashMap."<init>":(Lorg/sonarsource/sonarlint/core/issuetracking/PersistentIssueTrackerCache;)V
      18: putfield      #38                 // Field cache:Ljava/util/Map;
      21: return

  public boolean isFirstAnalysis(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #38                 // Field cache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #49,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifne          30
      13: aload_0
      14: getfield      #33                 // Field store:Lorg/sonarsource/sonarlint/core/issuetracking/TrackableIssueStore;
      17: aload_1
      18: invokeinterface #54,  2           // InterfaceMethod org/sonarsource/sonarlint/core/issuetracking/TrackableIssueStore.contains:(Ljava/lang/String;)Z
      23: ifne          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public synchronized java.util.Collection<org.sonarsource.sonarlint.core.issuetracking.Trackable<T>> getLiveOrFail(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #38                 // Field cache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #63,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #65                 // class java/util/Collection
      13: astore_2
      14: aload_2
      15: ifnull        20
      18: aload_2
      19: areturn
      20: new           #67                 // class java/lang/IllegalStateException
      23: dup
      24: aload_1
      25: invokedynamic #79,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      30: invokespecial #82                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow

  public synchronized java.util.Collection<org.sonarsource.sonarlint.core.issuetracking.Trackable<T>> getCurrentTrackables(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #38                 // Field cache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #63,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #65                 // class java/util/Collection
      13: astore_2
      14: aload_2
      15: ifnull        20
      18: aload_2
      19: areturn
      20: aload_0
      21: getfield      #33                 // Field store:Lorg/sonarsource/sonarlint/core/issuetracking/TrackableIssueStore;
      24: aload_1
      25: invokeinterface #91,  2           // InterfaceMethod org/sonarsource/sonarlint/core/issuetracking/TrackableIssueStore.read:(Ljava/lang/String;)Ljava/util/Collection;
      30: astore_3
      31: aload_3
      32: ifnull        40
      35: aload_3
      36: invokestatic  #97                 // Method java/util/Collections.unmodifiableCollection:(Ljava/util/Collection;)Ljava/util/Collection;
      39: areturn
      40: goto          64
      43: astore_3
      44: getstatic     #99                 // Field LOGGER:Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
      47: ldc           #101                // String Failed to read issues from store for file %s
      49: iconst_1
      50: anewarray     #5                  // class java/lang/Object
      53: dup
      54: iconst_0
      55: aload_1
      56: aastore
      57: invokestatic  #107                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      60: aload_3
      61: invokevirtual #113                // Method org/sonarsource/sonarlint/core/commons/log/SonarLintLogger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      64: invokestatic  #117                // Method java/util/Collections.emptyList:()Ljava/util/List;
      67: areturn
    Exception table:
       from    to  target type
          20    39    43   Class java/io/IOException

  public synchronized void put(java.lang.String, java.util.Collection<org.sonarsource.sonarlint.core.issuetracking.Trackable<T>>);
    Code:
       0: aload_0
       1: getfield      #38                 // Field cache:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #126,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public synchronized void clear();
    Code:
       0: aload_0
       1: getfield      #33                 // Field store:Lorg/sonarsource/sonarlint/core/issuetracking/TrackableIssueStore;
       4: invokeinterface #130,  1          // InterfaceMethod org/sonarsource/sonarlint/core/issuetracking/TrackableIssueStore.clear:()V
       9: aload_0
      10: getfield      #38                 // Field cache:Ljava/util/Map;
      13: invokeinterface #131,  1          // InterfaceMethod java/util/Map.clear:()V
      18: return

  public synchronized void flushAll();
    Code:
       0: getstatic     #99                 // Field LOGGER:Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
       3: ldc           #134                // String Persisting all issues
       5: invokevirtual #137                // Method org/sonarsource/sonarlint/core/commons/log/SonarLintLogger.debug:(Ljava/lang/String;)V
       8: aload_0
       9: getfield      #38                 // Field cache:Ljava/util/Map;
      12: aload_0
      13: invokedynamic #155,  0            // InvokeDynamic #1:accept:(Lorg/sonarsource/sonarlint/core/issuetracking/PersistentIssueTrackerCache;)Ljava/util/function/BiConsumer;
      18: invokeinterface #159,  2          // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      23: return

  public synchronized void shutdown();
    Code:
       0: aload_0
       1: invokevirtual #162                // Method flushAll:()V
       4: return

  private void lambda$flushAll$0(java.lang.String, java.util.Collection);
    Code:
       0: aload_0
       1: getfield      #33                 // Field store:Lorg/sonarsource/sonarlint/core/issuetracking/TrackableIssueStore;
       4: aload_1
       5: aload_2
       6: invokeinterface #165,  3          // InterfaceMethod org/sonarsource/sonarlint/core/issuetracking/TrackableIssueStore.save:(Ljava/lang/String;Ljava/util/Collection;)V
      11: goto          26
      14: astore_3
      15: new           #67                 // class java/lang/IllegalStateException
      18: dup
      19: ldc           #167                // String Failed to flush cache
      21: aload_3
      22: invokespecial #169                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      25: athrow
      26: return
    Exception table:
       from    to  target type
           0    11    14   Class java/io/IOException

  static {};
    Code:
       0: invokestatic  #174                // Method org/sonarsource/sonarlint/core/commons/log/SonarLintLogger.get:()Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
       3: putstatic     #99                 // Field LOGGER:Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
       6: return
}
