Compiled from "TelemetryAnalyzerPerformance.java"
public class org.sonarsource.sonarlint.core.telemetry.TelemetryAnalyzerPerformance {
  private static final java.util.TreeMap<java.lang.Integer, java.lang.String> INTERVALS;

  private int analysisCount;

  private java.util.Map<java.lang.String, java.lang.Integer> frequencies;

  public org.sonarsource.sonarlint.core.telemetry.TelemetryAnalyzerPerformance();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #29                 // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #30                 // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #32                 // Field frequencies:Ljava/util/Map;
      15: getstatic     #34                 // Field INTERVALS:Ljava/util/TreeMap;
      18: aload_0
      19: invokedynamic #53,  0             // InvokeDynamic #0:accept:(Lorg/sonarsource/sonarlint/core/telemetry/TelemetryAnalyzerPerformance;)Ljava/util/function/BiConsumer;
      24: invokevirtual #59                 // Method java/util/TreeMap.forEach:(Ljava/util/function/BiConsumer;)V
      27: return

  public void registerAnalysis(int);
    Code:
       0: getstatic     #34                 // Field INTERVALS:Ljava/util/TreeMap;
       3: iload_1
       4: invokestatic  #69                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokevirtual #73                 // Method java/util/TreeMap.higherEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;
      10: astore_2
      11: aload_2
      12: ifnull        49
      15: aload_0
      16: getfield      #32                 // Field frequencies:Ljava/util/Map;
      19: aload_2
      20: invokeinterface #77,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      25: checkcast     #79                 // class java/lang/String
      28: invokedynamic #91,  0             // InvokeDynamic #1:apply:()Ljava/util/function/BiFunction;
      33: invokeinterface #95,  3           // InterfaceMethod java/util/Map.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      38: pop
      39: aload_0
      40: dup
      41: getfield      #97                 // Field analysisCount:I
      44: iconst_1
      45: iadd
      46: putfield      #97                 // Field analysisCount:I
      49: return

  public java.util.Map<java.lang.String, java.lang.Integer> frequencies();
    Code:
       0: aload_0
       1: getfield      #32                 // Field frequencies:Ljava/util/Map;
       4: areturn

  public int analysisCount();
    Code:
       0: aload_0
       1: getfield      #97                 // Field analysisCount:I
       4: ireturn

  private static java.lang.Integer lambda$registerAnalysis$1(java.lang.String, java.lang.Integer);
    Code:
       0: aload_1
       1: ifnull        13
       4: aload_1
       5: invokevirtual #107                // Method java/lang/Integer.intValue:()I
       8: iconst_1
       9: iadd
      10: goto          14
      13: iconst_1
      14: invokestatic  #69                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      17: areturn

  private void lambda$new$0(java.lang.Integer, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #32                 // Field frequencies:Ljava/util/Map;
       4: aload_2
       5: iconst_0
       6: invokestatic  #69                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       9: invokeinterface #114,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: return

  static {};
    Code:
       0: new           #55                 // class java/util/TreeMap
       3: dup
       4: invokespecial #116                // Method java/util/TreeMap."<init>":()V
       7: putstatic     #34                 // Field INTERVALS:Ljava/util/TreeMap;
      10: getstatic     #34                 // Field INTERVALS:Ljava/util/TreeMap;
      13: sipush        300
      16: invokestatic  #69                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      19: ldc           #118                // String 0-300
      21: invokevirtual #119                // Method java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: getstatic     #34                 // Field INTERVALS:Ljava/util/TreeMap;
      28: sipush        500
      31: invokestatic  #69                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: ldc           #121                // String 300-500
      36: invokevirtual #119                // Method java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: getstatic     #34                 // Field INTERVALS:Ljava/util/TreeMap;
      43: sipush        1000
      46: invokestatic  #69                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      49: ldc           #123                // String 500-1000
      51: invokevirtual #119                // Method java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: getstatic     #34                 // Field INTERVALS:Ljava/util/TreeMap;
      58: sipush        2000
      61: invokestatic  #69                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      64: ldc           #125                // String 1000-2000
      66: invokevirtual #119                // Method java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      69: pop
      70: getstatic     #34                 // Field INTERVALS:Ljava/util/TreeMap;
      73: sipush        4000
      76: invokestatic  #69                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      79: ldc           #127                // String 2000-4000
      81: invokevirtual #119                // Method java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: getstatic     #34                 // Field INTERVALS:Ljava/util/TreeMap;
      88: ldc           #128                // int 2147483647
      90: invokestatic  #69                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      93: ldc           #130                // String 4000+
      95: invokevirtual #119                // Method java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      98: pop
      99: return
}
