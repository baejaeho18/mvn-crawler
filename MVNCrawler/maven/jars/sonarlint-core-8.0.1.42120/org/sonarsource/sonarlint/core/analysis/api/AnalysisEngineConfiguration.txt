Compiled from "AnalysisEngineConfiguration.java"
public class org.sonarsource.sonarlint.core.analysis.api.AnalysisEngineConfiguration {
  private static final java.lang.String NODE_EXECUTABLE_PROPERTY;

  private final java.nio.file.Path workDir;

  private final java.util.EnumSet<org.sonarsource.sonarlint.core.commons.Language> enabledLanguages;

  private final java.util.Map<java.lang.String, java.lang.String> extraProperties;

  private final java.nio.file.Path nodeJsPath;

  private final long clientPid;

  private final org.sonarsource.sonarlint.core.analysis.api.ClientModulesProvider modulesProvider;

  private org.sonarsource.sonarlint.core.analysis.api.AnalysisEngineConfiguration(org.sonarsource.sonarlint.core.analysis.api.AnalysisEngineConfiguration$Builder);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #33                 // Field org/sonarsource/sonarlint/core/analysis/api/AnalysisEngineConfiguration$Builder.workDir:Ljava/nio/file/Path;
       9: putfield      #34                 // Field workDir:Ljava/nio/file/Path;
      12: aload_0
      13: aload_1
      14: getfield      #36                 // Field org/sonarsource/sonarlint/core/analysis/api/AnalysisEngineConfiguration$Builder.enabledLanguages:Ljava/util/EnumSet;
      17: putfield      #37                 // Field enabledLanguages:Ljava/util/EnumSet;
      20: aload_0
      21: new           #39                 // class java/util/LinkedHashMap
      24: dup
      25: aload_1
      26: getfield      #41                 // Field org/sonarsource/sonarlint/core/analysis/api/AnalysisEngineConfiguration$Builder.extraProperties:Ljava/util/Map;
      29: invokespecial #44                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      32: putfield      #45                 // Field extraProperties:Ljava/util/Map;
      35: aload_0
      36: aload_1
      37: getfield      #47                 // Field org/sonarsource/sonarlint/core/analysis/api/AnalysisEngineConfiguration$Builder.nodeJsPath:Ljava/nio/file/Path;
      40: putfield      #48                 // Field nodeJsPath:Ljava/nio/file/Path;
      43: aload_0
      44: aload_1
      45: getfield      #50                 // Field org/sonarsource/sonarlint/core/analysis/api/AnalysisEngineConfiguration$Builder.clientPid:J
      48: putfield      #51                 // Field clientPid:J
      51: aload_0
      52: aload_1
      53: getfield      #53                 // Field org/sonarsource/sonarlint/core/analysis/api/AnalysisEngineConfiguration$Builder.modulesProvider:Lorg/sonarsource/sonarlint/core/analysis/api/ClientModulesProvider;
      56: putfield      #54                 // Field modulesProvider:Lorg/sonarsource/sonarlint/core/analysis/api/ClientModulesProvider;
      59: return

  public static org.sonarsource.sonarlint.core.analysis.api.AnalysisEngineConfiguration$Builder builder();
    Code:
       0: new           #8                  // class org/sonarsource/sonarlint/core/analysis/api/AnalysisEngineConfiguration$Builder
       3: dup
       4: invokespecial #60                 // Method org/sonarsource/sonarlint/core/analysis/api/AnalysisEngineConfiguration$Builder."<init>":()V
       7: areturn

  public java.nio.file.Path getWorkDir();
    Code:
       0: aload_0
       1: getfield      #34                 // Field workDir:Ljava/nio/file/Path;
       4: areturn

  public java.util.Set<org.sonarsource.sonarlint.core.commons.Language> getEnabledLanguages();
    Code:
       0: aload_0
       1: getfield      #37                 // Field enabledLanguages:Ljava/util/EnumSet;
       4: areturn

  public long getClientPid();
    Code:
       0: aload_0
       1: getfield      #51                 // Field clientPid:J
       4: lreturn

  public org.sonarsource.sonarlint.core.analysis.api.ClientModulesProvider getModulesProvider();
    Code:
       0: aload_0
       1: getfield      #54                 // Field modulesProvider:Lorg/sonarsource/sonarlint/core/analysis/api/ClientModulesProvider;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.String> getEffectiveSettings();
    Code:
       0: new           #74                 // class java/util/HashMap
       3: dup
       4: aload_0
       5: getfield      #45                 // Field extraProperties:Ljava/util/Map;
       8: invokespecial #75                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      11: astore_1
      12: aload_0
      13: getfield      #48                 // Field nodeJsPath:Ljava/nio/file/Path;
      16: ifnull        37
      19: aload_1
      20: ldc           #13                 // String sonar.nodejs.executable
      22: aload_0
      23: getfield      #48                 // Field nodeJsPath:Ljava/nio/file/Path;
      26: invokeinterface #81,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      31: invokeinterface #87,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: aload_1
      38: areturn
}
