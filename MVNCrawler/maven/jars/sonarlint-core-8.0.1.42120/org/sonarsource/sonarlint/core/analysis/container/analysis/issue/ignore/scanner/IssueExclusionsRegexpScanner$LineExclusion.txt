Compiled from "IssueExclusionsRegexpScanner.java"
class org.sonarsource.sonarlint.core.analysis.container.analysis.issue.ignore.scanner.IssueExclusionsRegexpScanner$LineExclusion {
  private int start;

  private int end;

  org.sonarsource.sonarlint.core.analysis.container.analysis.issue.ignore.scanner.IssueExclusionsRegexpScanner$LineExclusion(int);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #18                 // Field start:I
       9: aload_0
      10: iconst_m1
      11: putfield      #20                 // Field end:I
      14: return

  void setEnd(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field end:I
       5: return

  public org.sonarsource.sonarlint.core.analysis.container.analysis.issue.ignore.scanner.LineRange toLineRange(int);
    Code:
       0: new           #27                 // class org/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/scanner/LineRange
       3: dup
       4: aload_0
       5: getfield      #18                 // Field start:I
       8: aload_0
       9: getfield      #20                 // Field end:I
      12: iconst_m1
      13: if_icmpne     20
      16: iload_1
      17: goto          24
      20: aload_0
      21: getfield      #20                 // Field end:I
      24: invokespecial #30                 // Method org/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/scanner/LineRange."<init>":(II)V
      27: areturn
}
