Compiled from "LineRange.java"
public class org.sonarsource.sonarlint.core.analysis.container.analysis.issue.ignore.scanner.LineRange {
  private final int from;

  private final int to;

  public org.sonarsource.sonarlint.core.analysis.container.analysis.issue.ignore.scanner.LineRange(int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_1
       3: invokespecial #18                 // Method "<init>":(II)V
       6: return

  public org.sonarsource.sonarlint.core.analysis.container.analysis.issue.ignore.scanner.LineRange(int, int);
    Code:
       0: aload_0
       1: invokespecial #24                 // Method java/lang/Object."<init>":()V
       4: iload_1
       5: iload_2
       6: if_icmple     40
       9: new           #26                 // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #28                 // String Line range is not valid: %s must be greater or equal than %s
      15: iconst_2
      16: anewarray     #4                  // class java/lang/Object
      19: dup
      20: iconst_0
      21: iload_2
      22: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: aastore
      26: dup
      27: iconst_1
      28: iload_1
      29: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: aastore
      33: invokestatic  #40                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      36: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: iload_1
      42: putfield      #45                 // Field from:I
      45: aload_0
      46: iload_2
      47: putfield      #47                 // Field to:I
      50: return

  public boolean in(int);
    Code:
       0: aload_0
       1: getfield      #45                 // Field from:I
       4: iload_1
       5: if_icmpgt     20
       8: iload_1
       9: aload_0
      10: getfield      #47                 // Field to:I
      13: if_icmpgt     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public java.util.Set<java.lang.Integer> toLines();
    Code:
       0: new           #55                 // class java/util/LinkedHashSet
       3: dup
       4: aload_0
       5: getfield      #47                 // Field to:I
       8: aload_0
       9: getfield      #45                 // Field from:I
      12: isub
      13: iconst_1
      14: iadd
      15: invokespecial #57                 // Method java/util/LinkedHashSet."<init>":(I)V
      18: astore_1
      19: aload_0
      20: getfield      #45                 // Field from:I
      23: istore_2
      24: iload_2
      25: aload_0
      26: getfield      #47                 // Field to:I
      29: if_icmpgt     49
      32: aload_1
      33: iload_2
      34: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      37: invokeinterface #63,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      42: pop
      43: iinc          2, 1
      46: goto          24
      49: aload_1
      50: areturn

  public int from();
    Code:
       0: aload_0
       1: getfield      #45                 // Field from:I
       4: ireturn

  public int to();
    Code:
       0: aload_0
       1: getfield      #47                 // Field to:I
       4: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #45                 // Field from:I
       4: aload_0
       5: getfield      #47                 // Field to:I
       8: invokedynamic #82,  0             // InvokeDynamic #0:makeConcatWithConstants:(II)Ljava/lang/String;
      13: areturn

  public int hashCode();
    Code:
       0: iconst_2
       1: anewarray     #4                  // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #45                 // Field from:I
      10: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: aastore
      14: dup
      15: iconst_1
      16: aload_0
      17: getfield      #47                 // Field to:I
      20: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: aastore
      24: invokestatic  #89                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      27: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #94                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #94                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: aload_1
      26: checkcast     #2                  // class org/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/scanner/LineRange
      29: invokevirtual #98                 // Method fieldsDiffer:(Lorg/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/scanner/LineRange;)Z
      32: ifne          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ireturn

  private boolean fieldsDiffer(org.sonarsource.sonarlint.core.analysis.container.analysis.issue.ignore.scanner.LineRange);
    Code:
       0: aload_0
       1: getfield      #45                 // Field from:I
       4: aload_1
       5: getfield      #45                 // Field from:I
       8: if_icmpne     22
      11: aload_0
      12: getfield      #47                 // Field to:I
      15: aload_1
      16: getfield      #47                 // Field to:I
      19: if_icmpeq     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn
}
