Compiled from "SonarLintSensorStorage.java"
public class org.sonarsource.sonarlint.core.analysis.container.analysis.sensor.SonarLintSensorStorage implements org.sonar.api.batch.sensor.internal.SensorStorage {
  private final org.sonar.api.batch.rule.ActiveRules activeRules;

  private final org.sonarsource.sonarlint.core.analysis.container.analysis.issue.IssueFilters filters;

  private final org.sonarsource.sonarlint.core.analysis.container.analysis.IssueListenerHolder issueListener;

  private final org.sonarsource.sonarlint.core.analysis.api.AnalysisResults analysisResult;

  public org.sonarsource.sonarlint.core.analysis.container.analysis.sensor.SonarLintSensorStorage(org.sonar.api.batch.rule.ActiveRules, org.sonarsource.sonarlint.core.analysis.container.analysis.issue.IssueFilters, org.sonarsource.sonarlint.core.analysis.container.analysis.IssueListenerHolder, org.sonarsource.sonarlint.core.analysis.api.AnalysisResults);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #32                 // Field activeRules:Lorg/sonar/api/batch/rule/ActiveRules;
       9: aload_0
      10: aload_2
      11: putfield      #34                 // Field filters:Lorg/sonarsource/sonarlint/core/analysis/container/analysis/issue/IssueFilters;
      14: aload_0
      15: aload_3
      16: putfield      #36                 // Field issueListener:Lorg/sonarsource/sonarlint/core/analysis/container/analysis/IssueListenerHolder;
      19: aload_0
      20: aload         4
      22: putfield      #38                 // Field analysisResult:Lorg/sonarsource/sonarlint/core/analysis/api/AnalysisResults;
      25: return

  public void store(org.sonar.api.batch.sensor.measure.Measure);
    Code:
       0: return

  public void store(org.sonar.api.batch.sensor.issue.Issue);
    Code:
       0: aload_1
       1: instanceof    #47                 // class org/sonarsource/sonarlint/core/analysis/sonarapi/DefaultSonarLintIssue
       4: ifne          17
       7: new           #49                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #51                 // String Trying to store a non-SonarLint issue?
      13: invokespecial #54                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: checkcast     #47                 // class org/sonarsource/sonarlint/core/analysis/sonarapi/DefaultSonarLintIssue
      21: astore_2
      22: aload_2
      23: invokevirtual #58                 // Method org/sonarsource/sonarlint/core/analysis/sonarapi/DefaultSonarLintIssue.primaryLocation:()Lorg/sonar/api/batch/sensor/issue/IssueLocation;
      26: invokeinterface #64,  1           // InterfaceMethod org/sonar/api/batch/sensor/issue/IssueLocation.inputComponent:()Lorg/sonar/api/batch/fs/InputComponent;
      31: astore_3
      32: aload_0
      33: getfield      #32                 // Field activeRules:Lorg/sonar/api/batch/rule/ActiveRules;
      36: aload_2
      37: invokevirtual #68                 // Method org/sonarsource/sonarlint/core/analysis/sonarapi/DefaultSonarLintIssue.ruleKey:()Lorg/sonar/api/rule/RuleKey;
      40: invokeinterface #74,  2           // InterfaceMethod org/sonar/api/batch/rule/ActiveRules.find:(Lorg/sonar/api/rule/RuleKey;)Lorg/sonar/api/batch/rule/ActiveRule;
      45: checkcast     #76                 // class org/sonarsource/sonarlint/core/analysis/sonarapi/ActiveRuleAdapter
      48: astore        4
      50: aload         4
      52: ifnull        63
      55: aload_3
      56: aload_2
      57: invokestatic  #80                 // Method noSonar:(Lorg/sonar/api/batch/fs/InputComponent;Lorg/sonar/api/batch/sensor/issue/Issue;)Z
      60: ifeq          64
      63: return
      64: aload_2
      65: invokevirtual #58                 // Method org/sonarsource/sonarlint/core/analysis/sonarapi/DefaultSonarLintIssue.primaryLocation:()Lorg/sonar/api/batch/sensor/issue/IssueLocation;
      68: invokeinterface #86,  1           // InterfaceMethod org/sonar/api/batch/sensor/issue/IssueLocation.message:()Ljava/lang/String;
      73: astore        5
      75: aload_2
      76: invokevirtual #90                 // Method org/sonarsource/sonarlint/core/analysis/sonarapi/DefaultSonarLintIssue.flows:()Ljava/util/List;
      79: invokestatic  #94                 // Method mapFlows:(Ljava/util/List;)Ljava/util/List;
      82: astore        6
      84: aload_2
      85: invokevirtual #97                 // Method org/sonarsource/sonarlint/core/analysis/sonarapi/DefaultSonarLintIssue.quickFixes:()Ljava/util/List;
      88: astore        7
      90: new           #99                 // class org/sonarsource/sonarlint/core/analysis/api/Issue
      93: dup
      94: aload         4
      96: aload         5
      98: aload_1
      99: invokeinterface #100,  1          // InterfaceMethod org/sonar/api/batch/sensor/issue/Issue.primaryLocation:()Lorg/sonar/api/batch/sensor/issue/IssueLocation;
     104: invokeinterface #104,  1          // InterfaceMethod org/sonar/api/batch/sensor/issue/IssueLocation.textRange:()Lorg/sonar/api/batch/fs/TextRange;
     109: aload_3
     110: invokeinterface #108,  1          // InterfaceMethod org/sonar/api/batch/fs/InputComponent.isFile:()Z
     115: ifeq          128
     118: aload_3
     119: checkcast     #110                // class org/sonarsource/sonarlint/core/analysis/container/analysis/filesystem/SonarLintInputFile
     122: invokevirtual #114                // Method org/sonarsource/sonarlint/core/analysis/container/analysis/filesystem/SonarLintInputFile.getClientInputFile:()Lorg/sonarsource/sonarlint/core/analysis/api/ClientInputFile;
     125: goto          129
     128: aconst_null
     129: aload         6
     131: aload         7
     133: invokespecial #125                // Method org/sonarsource/sonarlint/core/analysis/api/Issue."<init>":(Lorg/sonarsource/sonarlint/core/analysis/sonarapi/ActiveRuleAdapter;Ljava/lang/String;Lorg/sonar/api/batch/fs/TextRange;Lorg/sonarsource/sonarlint/core/analysis/api/ClientInputFile;Ljava/util/List;Ljava/util/List;)V
     136: astore        8
     138: aload_0
     139: getfield      #34                 // Field filters:Lorg/sonarsource/sonarlint/core/analysis/container/analysis/issue/IssueFilters;
     142: aload_3
     143: aload         8
     145: invokevirtual #131                // Method org/sonarsource/sonarlint/core/analysis/container/analysis/issue/IssueFilters.accept:(Lorg/sonar/api/batch/fs/InputComponent;Lorg/sonarsource/sonarlint/core/analysis/api/Issue;)Z
     148: ifeq          160
     151: aload_0
     152: getfield      #36                 // Field issueListener:Lorg/sonarsource/sonarlint/core/analysis/container/analysis/IssueListenerHolder;
     155: aload         8
     157: invokevirtual #137                // Method org/sonarsource/sonarlint/core/analysis/container/analysis/IssueListenerHolder.handle:(Lorg/sonarsource/sonarlint/core/analysis/api/Issue;)V
     160: return

  private static boolean noSonar(org.sonar.api.batch.fs.InputComponent, org.sonar.api.batch.sensor.issue.Issue);
    Code:
       0: aload_1
       1: invokeinterface #100,  1          // InterfaceMethod org/sonar/api/batch/sensor/issue/Issue.primaryLocation:()Lorg/sonar/api/batch/sensor/issue/IssueLocation;
       6: invokeinterface #104,  1          // InterfaceMethod org/sonar/api/batch/sensor/issue/IssueLocation.textRange:()Lorg/sonar/api/batch/fs/TextRange;
      11: astore_2
      12: aload_0
      13: invokeinterface #108,  1          // InterfaceMethod org/sonar/api/batch/fs/InputComponent.isFile:()Z
      18: ifeq          67
      21: aload_2
      22: ifnull        67
      25: aload_0
      26: checkcast     #110                // class org/sonarsource/sonarlint/core/analysis/container/analysis/filesystem/SonarLintInputFile
      29: aload_2
      30: invokeinterface #155,  1          // InterfaceMethod org/sonar/api/batch/fs/TextRange.start:()Lorg/sonar/api/batch/fs/TextPointer;
      35: invokeinterface #161,  1          // InterfaceMethod org/sonar/api/batch/fs/TextPointer.line:()I
      40: invokevirtual #165                // Method org/sonarsource/sonarlint/core/analysis/container/analysis/filesystem/SonarLintInputFile.hasNoSonarAt:(I)Z
      43: ifeq          67
      46: aload_1
      47: invokeinterface #166,  1          // InterfaceMethod org/sonar/api/batch/sensor/issue/Issue.ruleKey:()Lorg/sonar/api/rule/RuleKey;
      52: invokevirtual #171                // Method org/sonar/api/rule/RuleKey.rule:()Ljava/lang/String;
      55: ldc           #173                // String nosonar
      57: invokestatic  #179                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/lang3/StringUtils.containsIgnoreCase:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
      60: ifne          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ireturn

  private static java.util.List<org.sonarsource.sonarlint.core.analysis.api.Flow> mapFlows(java.util.List<org.sonar.api.batch.sensor.issue.Issue$Flow>);
    Code:
       0: aload_0
       1: invokeinterface #185,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #204,  0            // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      11: invokeinterface #210,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokedynamic #222,  0            // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      21: invokeinterface #226,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      26: invokestatic  #232                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      29: invokeinterface #236,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      34: checkcast     #118                // class java/util/List
      37: areturn

  public void store(org.sonar.api.batch.sensor.highlighting.NewHighlighting);
    Code:
       0: return

  public void store(org.sonar.api.batch.sensor.coverage.NewCoverage);
    Code:
       0: return

  public void store(org.sonar.api.batch.sensor.cpd.NewCpdTokens);
    Code:
       0: return

  public void store(org.sonar.api.batch.sensor.symbol.NewSymbolTable);
    Code:
       0: return

  public void store(org.sonar.api.batch.sensor.error.AnalysisError);
    Code:
       0: aload_1
       1: invokeinterface #256,  1          // InterfaceMethod org/sonar/api/batch/sensor/error/AnalysisError.inputFile:()Lorg/sonar/api/batch/fs/InputFile;
       6: checkcast     #110                // class org/sonarsource/sonarlint/core/analysis/container/analysis/filesystem/SonarLintInputFile
       9: invokevirtual #114                // Method org/sonarsource/sonarlint/core/analysis/container/analysis/filesystem/SonarLintInputFile.getClientInputFile:()Lorg/sonarsource/sonarlint/core/analysis/api/ClientInputFile;
      12: astore_2
      13: aload_0
      14: getfield      #38                 // Field analysisResult:Lorg/sonarsource/sonarlint/core/analysis/api/AnalysisResults;
      17: aload_2
      18: invokevirtual #262                // Method org/sonarsource/sonarlint/core/analysis/api/AnalysisResults.addFailedAnalysisFile:(Lorg/sonarsource/sonarlint/core/analysis/api/ClientInputFile;)V
      21: return

  public void storeProperty(java.lang.String, java.lang.String);
    Code:
       0: return

  public void store(org.sonar.api.batch.sensor.issue.ExternalIssue);
    Code:
       0: return

  public void store(org.sonar.api.batch.sensor.code.NewSignificantCode);
    Code:
       0: return

  public void store(org.sonar.api.batch.sensor.rule.AdHocRule);
    Code:
       0: return

  private static boolean lambda$mapFlows$1(org.sonarsource.sonarlint.core.analysis.api.Flow);
    Code:
       0: aload_0
       1: invokevirtual #283                // Method org/sonarsource/sonarlint/core/analysis/api/Flow.locations:()Ljava/util/List;
       4: invokeinterface #286,  1          // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private static org.sonarsource.sonarlint.core.analysis.api.Flow lambda$mapFlows$0(org.sonar.api.batch.sensor.issue.Issue$Flow);
    Code:
       0: new           #280                // class org/sonarsource/sonarlint/core/analysis/api/Flow
       3: dup
       4: new           #290                // class java/util/ArrayList
       7: dup
       8: aload_0
       9: invokeinterface #291,  1          // InterfaceMethod org/sonar/api/batch/sensor/issue/Issue$Flow.locations:()Ljava/util/List;
      14: invokespecial #294                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      17: invokespecial #297                // Method org/sonarsource/sonarlint/core/analysis/api/Flow."<init>":(Ljava/util/List;)V
      20: areturn
}
