Compiled from "Version.java"
public class org.sonarsource.sonarlint.core.commons.Version implements java.lang.Comparable<org.sonarsource.sonarlint.core.commons.Version> {
  private final java.lang.String name;

  private final java.lang.String nameWithoutQualifier;

  private final int[] numbers;

  private final java.lang.String qualifier;

  private org.sonarsource.sonarlint.core.commons.Version(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #25                 // Method java/lang/String.trim:()Ljava/lang/String;
       9: putfield      #27                 // Field name:Ljava/lang/String;
      12: aload_0
      13: getfield      #27                 // Field name:Ljava/lang/String;
      16: ldc           #29                 // String -
      18: invokevirtual #33                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      21: istore_2
      22: iload_2
      23: iconst_m1
      24: if_icmpeq     57
      27: aload_0
      28: aload_0
      29: getfield      #27                 // Field name:Ljava/lang/String;
      32: iload_2
      33: iconst_1
      34: iadd
      35: invokevirtual #37                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      38: putfield      #39                 // Field qualifier:Ljava/lang/String;
      41: aload_0
      42: aload_0
      43: getfield      #27                 // Field name:Ljava/lang/String;
      46: iconst_0
      47: iload_2
      48: invokevirtual #42                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      51: putfield      #44                 // Field nameWithoutQualifier:Ljava/lang/String;
      54: goto          71
      57: aload_0
      58: ldc           #46                 // String
      60: putfield      #39                 // Field qualifier:Ljava/lang/String;
      63: aload_0
      64: aload_0
      65: getfield      #27                 // Field name:Ljava/lang/String;
      68: putfield      #44                 // Field nameWithoutQualifier:Ljava/lang/String;
      71: aload_0
      72: getfield      #44                 // Field nameWithoutQualifier:Ljava/lang/String;
      75: ldc           #48                 // String \\.
      77: invokevirtual #52                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      80: astore_3
      81: aload_0
      82: aload_3
      83: arraylength
      84: newarray       int
      86: putfield      #54                 // Field numbers:[I
      89: iconst_0
      90: istore        4
      92: iload         4
      94: aload_3
      95: arraylength
      96: if_icmpge     119
      99: aload_0
     100: getfield      #54                 // Field numbers:[I
     103: iload         4
     105: aload_3
     106: iload         4
     108: aaload
     109: invokestatic  #61                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     112: iastore
     113: iinc          4, 1
     116: goto          92
     119: return

  private org.sonarsource.sonarlint.core.commons.Version(java.lang.String, java.lang.String, int[], java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #27                 // Field name:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #44                 // Field nameWithoutQualifier:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: aload_3
      17: arraylength
      18: invokestatic  #74                 // Method java/util/Arrays.copyOf:([II)[I
      21: putfield      #54                 // Field numbers:[I
      24: aload_0
      25: aload         4
      27: putfield      #39                 // Field qualifier:Ljava/lang/String;
      30: return

  public int getMajor();
    Code:
       0: aload_0
       1: getfield      #54                 // Field numbers:[I
       4: arraylength
       5: ifle          17
       8: aload_0
       9: getfield      #54                 // Field numbers:[I
      12: iconst_0
      13: iaload
      14: goto          18
      17: iconst_0
      18: ireturn

  public int getMinor();
    Code:
       0: aload_0
       1: getfield      #54                 // Field numbers:[I
       4: arraylength
       5: iconst_1
       6: if_icmple     18
       9: aload_0
      10: getfield      #54                 // Field numbers:[I
      13: iconst_1
      14: iaload
      15: goto          19
      18: iconst_0
      19: ireturn

  public int getPatch();
    Code:
       0: aload_0
       1: getfield      #54                 // Field numbers:[I
       4: arraylength
       5: iconst_2
       6: if_icmple     18
       9: aload_0
      10: getfield      #54                 // Field numbers:[I
      13: iconst_2
      14: iaload
      15: goto          19
      18: iconst_0
      19: ireturn

  public int getBuild();
    Code:
       0: aload_0
       1: getfield      #54                 // Field numbers:[I
       4: arraylength
       5: iconst_3
       6: if_icmple     18
       9: aload_0
      10: getfield      #54                 // Field numbers:[I
      13: iconst_3
      14: iaload
      15: goto          19
      18: iconst_0
      19: ireturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #27                 // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.String getQualifier();
    Code:
       0: aload_0
       1: getfield      #39                 // Field qualifier:Ljava/lang/String;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class org/sonarsource/sonarlint/core/commons/Version
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class org/sonarsource/sonarlint/core/commons/Version
      20: astore_2
      21: aload_0
      22: invokevirtual #85                 // Method getMajor:()I
      25: aload_2
      26: invokevirtual #85                 // Method getMajor:()I
      29: if_icmpne     83
      32: aload_0
      33: invokevirtual #87                 // Method getMinor:()I
      36: aload_2
      37: invokevirtual #87                 // Method getMinor:()I
      40: if_icmpne     83
      43: aload_0
      44: invokevirtual #89                 // Method getPatch:()I
      47: aload_2
      48: invokevirtual #89                 // Method getPatch:()I
      51: if_icmpne     83
      54: aload_0
      55: invokevirtual #91                 // Method getBuild:()I
      58: aload_2
      59: invokevirtual #91                 // Method getBuild:()I
      62: if_icmpne     83
      65: aload_0
      66: getfield      #39                 // Field qualifier:Ljava/lang/String;
      69: aload_2
      70: getfield      #39                 // Field qualifier:Ljava/lang/String;
      73: invokevirtual #93                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      76: ifeq          83
      79: iconst_1
      80: goto          84
      83: iconst_0
      84: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #85                 // Method getMajor:()I
       4: invokestatic  #100                // Method java/lang/Integer.hashCode:(I)I
       7: istore_1
       8: bipush        31
      10: iload_1
      11: imul
      12: aload_0
      13: invokevirtual #87                 // Method getMinor:()I
      16: invokestatic  #100                // Method java/lang/Integer.hashCode:(I)I
      19: iadd
      20: istore_1
      21: bipush        31
      23: iload_1
      24: imul
      25: aload_0
      26: invokevirtual #89                 // Method getPatch:()I
      29: invokestatic  #100                // Method java/lang/Integer.hashCode:(I)I
      32: iadd
      33: istore_1
      34: bipush        31
      36: iload_1
      37: imul
      38: aload_0
      39: invokevirtual #91                 // Method getBuild:()I
      42: invokestatic  #100                // Method java/lang/Integer.hashCode:(I)I
      45: iadd
      46: istore_1
      47: bipush        31
      49: iload_1
      50: imul
      51: aload_0
      52: getfield      #39                 // Field qualifier:Ljava/lang/String;
      55: invokevirtual #102                // Method java/lang/String.hashCode:()I
      58: iadd
      59: istore_1
      60: iload_1
      61: ireturn

  public int compareTo(org.sonarsource.sonarlint.core.commons.Version);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #108                // Method compareToIgnoreQualifier:(Lorg/sonarsource/sonarlint/core/commons/Version;)I
       5: istore_2
       6: iload_2
       7: ifne          72
      10: ldc           #46                 // String
      12: aload_0
      13: getfield      #39                 // Field qualifier:Ljava/lang/String;
      16: invokevirtual #93                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      19: ifeq          43
      22: ldc           #46                 // String
      24: aload_1
      25: getfield      #39                 // Field qualifier:Ljava/lang/String;
      28: invokevirtual #93                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      31: ifeq          38
      34: iconst_0
      35: goto          39
      38: iconst_1
      39: istore_2
      40: goto          72
      43: ldc           #46                 // String
      45: aload_1
      46: getfield      #39                 // Field qualifier:Ljava/lang/String;
      49: invokevirtual #93                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      52: ifeq          60
      55: iconst_m1
      56: istore_2
      57: goto          72
      60: aload_0
      61: getfield      #39                 // Field qualifier:Ljava/lang/String;
      64: aload_1
      65: getfield      #39                 // Field qualifier:Ljava/lang/String;
      68: invokevirtual #110                // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      71: istore_2
      72: iload_2
      73: ireturn

  public int compareToIgnoreQualifier(org.sonarsource.sonarlint.core.commons.Version);
    Code:
       0: aload_0
       1: getfield      #54                 // Field numbers:[I
       4: arraylength
       5: aload_1
       6: getfield      #54                 // Field numbers:[I
       9: arraylength
      10: invokestatic  #117                // Method java/lang/Math.max:(II)I
      13: istore_2
      14: aload_0
      15: getfield      #54                 // Field numbers:[I
      18: iload_2
      19: invokestatic  #74                 // Method java/util/Arrays.copyOf:([II)[I
      22: astore_3
      23: aload_1
      24: getfield      #54                 // Field numbers:[I
      27: iload_2
      28: invokestatic  #74                 // Method java/util/Arrays.copyOf:([II)[I
      31: astore        4
      33: iconst_0
      34: istore        5
      36: iload         5
      38: iload_2
      39: if_icmpge     70
      42: aload_3
      43: iload         5
      45: iaload
      46: aload         4
      48: iload         5
      50: iaload
      51: invokestatic  #121                // Method java/lang/Integer.compare:(II)I
      54: istore        6
      56: iload         6
      58: ifeq          64
      61: iload         6
      63: ireturn
      64: iinc          5, 1
      67: goto          36
      70: iconst_0
      71: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #27                 // Field name:Ljava/lang/String;
       4: areturn

  public static org.sonarsource.sonarlint.core.commons.Version create(java.lang.String);
    Code:
       0: new           #2                  // class org/sonarsource/sonarlint/core/commons/Version
       3: dup
       4: aload_0
       5: invokespecial #129                // Method "<init>":(Ljava/lang/String;)V
       8: areturn

  public org.sonarsource.sonarlint.core.commons.Version removeQualifier();
    Code:
       0: new           #2                  // class org/sonarsource/sonarlint/core/commons/Version
       3: dup
       4: aload_0
       5: getfield      #44                 // Field nameWithoutQualifier:Ljava/lang/String;
       8: aload_0
       9: getfield      #44                 // Field nameWithoutQualifier:Ljava/lang/String;
      12: aload_0
      13: getfield      #54                 // Field numbers:[I
      16: ldc           #46                 // String
      18: invokespecial #133                // Method "<init>":(Ljava/lang/String;Ljava/lang/String;[ILjava/lang/String;)V
      21: areturn

  public boolean satisfiesMinRequirement(org.sonarsource.sonarlint.core.commons.Version);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #108                // Method compareToIgnoreQualifier:(Lorg/sonarsource/sonarlint/core/commons/Version;)I
       5: iflt          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class org/sonarsource/sonarlint/core/commons/Version
       5: invokevirtual #139                // Method compareTo:(Lorg/sonarsource/sonarlint/core/commons/Version;)I
       8: ireturn
}
