Compiled from "ConnectedSonarLintEngine.java"
public interface org.sonarsource.sonarlint.core.client.api.connected.ConnectedSonarLintEngine extends org.sonarsource.sonarlint.core.client.api.common.SonarLintEngine {
  public abstract void stop(boolean);

  public abstract java.util.concurrent.CompletableFuture<org.sonarsource.sonarlint.core.client.api.connected.ConnectedRuleDetails> getActiveRuleDetails(org.sonarsource.sonarlint.core.serverapi.EndpointParams, org.sonarsource.sonarlint.core.commons.http.HttpClient, java.lang.String, java.lang.String);

  public abstract org.sonarsource.sonarlint.core.analysis.api.AnalysisResults analyze(org.sonarsource.sonarlint.core.client.api.connected.ConnectedAnalysisConfiguration, org.sonarsource.sonarlint.core.client.api.common.analysis.IssueListener, org.sonarsource.sonarlint.core.commons.log.ClientLogOutput, org.sonarsource.sonarlint.core.commons.progress.ClientProgressMonitor);

  public abstract java.util.List<org.sonarsource.sonarlint.core.client.api.connected.ServerIssue> getServerIssues(org.sonarsource.sonarlint.core.client.api.connected.ProjectBinding, java.lang.String);

  public abstract org.sonarsource.sonarlint.core.client.api.connected.GlobalStorageStatus getGlobalStorageStatus();

  public abstract org.sonarsource.sonarlint.core.client.api.connected.ProjectStorageStatus getProjectStorageStatus(java.lang.String);

  public abstract java.util.Map<java.lang.String, org.sonarsource.sonarlint.core.serverapi.component.ServerProject> allProjectsByKey();

  public abstract org.sonarsource.sonarlint.core.client.api.connected.ProjectBinding calculatePathPrefixes(java.lang.String, java.util.Collection<java.lang.String>);

  public abstract java.util.Map<java.lang.String, org.sonarsource.sonarlint.core.serverapi.component.ServerProject> downloadAllProjects(org.sonarsource.sonarlint.core.serverapi.EndpointParams, org.sonarsource.sonarlint.core.commons.http.HttpClient, org.sonarsource.sonarlint.core.commons.progress.ClientProgressMonitor);

  public abstract void sync(org.sonarsource.sonarlint.core.serverapi.EndpointParams, org.sonarsource.sonarlint.core.commons.http.HttpClient, java.util.Set<java.lang.String>, org.sonarsource.sonarlint.core.commons.progress.ClientProgressMonitor);

  public abstract org.sonarsource.sonarlint.core.client.api.connected.UpdateResult update(org.sonarsource.sonarlint.core.serverapi.EndpointParams, org.sonarsource.sonarlint.core.commons.http.HttpClient, org.sonarsource.sonarlint.core.commons.progress.ClientProgressMonitor);

  public abstract void updateProject(org.sonarsource.sonarlint.core.serverapi.EndpointParams, org.sonarsource.sonarlint.core.commons.http.HttpClient, java.lang.String, boolean, org.sonarsource.sonarlint.core.commons.progress.ClientProgressMonitor);

  public abstract java.util.List<org.sonarsource.sonarlint.core.client.api.connected.ServerIssue> downloadServerIssues(org.sonarsource.sonarlint.core.serverapi.EndpointParams, org.sonarsource.sonarlint.core.commons.http.HttpClient, org.sonarsource.sonarlint.core.client.api.connected.ProjectBinding, java.lang.String, boolean, org.sonarsource.sonarlint.core.commons.progress.ClientProgressMonitor);

  public abstract void downloadServerIssues(org.sonarsource.sonarlint.core.serverapi.EndpointParams, org.sonarsource.sonarlint.core.commons.http.HttpClient, java.lang.String, boolean, org.sonarsource.sonarlint.core.commons.progress.ClientProgressMonitor);

  public abstract <G> java.util.List<G> getExcludedFiles(org.sonarsource.sonarlint.core.client.api.connected.ProjectBinding, java.util.Collection<G>, java.util.function.Function<G, java.lang.String>, java.util.function.Predicate<G>);
}
