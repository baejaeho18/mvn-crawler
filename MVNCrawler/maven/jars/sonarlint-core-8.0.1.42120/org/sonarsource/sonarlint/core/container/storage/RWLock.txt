Compiled from "RWLock.java"
public class org.sonarsource.sonarlint.core.container.storage.RWLock {
  private final java.util.concurrent.locks.ReadWriteLock readWriteLock;

  public org.sonarsource.sonarlint.core.container.storage.RWLock();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #13                 // class java/util/concurrent/locks/ReentrantReadWriteLock
       8: dup
       9: invokespecial #14                 // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      12: putfield      #16                 // Field readWriteLock:Ljava/util/concurrent/locks/ReadWriteLock;
      15: return

  public <T> T read(java.util.function.Supplier<T>);
    Code:
       0: aload_0
       1: getfield      #16                 // Field readWriteLock:Ljava/util/concurrent/locks/ReadWriteLock;
       4: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
       9: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      14: aload_1
      15: invokeinterface #38,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      20: astore_2
      21: aload_0
      22: getfield      #16                 // Field readWriteLock:Ljava/util/concurrent/locks/ReadWriteLock;
      25: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      30: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      35: aload_2
      36: areturn
      37: astore_3
      38: aload_0
      39: getfield      #16                 // Field readWriteLock:Ljava/util/concurrent/locks/ReadWriteLock;
      42: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      47: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      52: aload_3
      53: athrow
    Exception table:
       from    to  target type
          14    21    37   any

  public void write(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #16                 // Field readWriteLock:Ljava/util/concurrent/locks/ReadWriteLock;
       4: invokeinterface #51,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
       9: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      14: aload_1
      15: invokeinterface #56,  1           // InterfaceMethod java/lang/Runnable.run:()V
      20: aload_0
      21: getfield      #16                 // Field readWriteLock:Ljava/util/concurrent/locks/ReadWriteLock;
      24: invokeinterface #51,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      29: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      34: goto          54
      37: astore_2
      38: aload_0
      39: getfield      #16                 // Field readWriteLock:Ljava/util/concurrent/locks/ReadWriteLock;
      42: invokeinterface #51,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      47: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      52: aload_2
      53: athrow
      54: return
    Exception table:
       from    to  target type
          14    20    37   any
}
