Compiled from "LanguageDetection.java"
public class org.sonarsource.sonarlint.core.analysis.container.analysis.filesystem.LanguageDetection {
  private static final org.sonarsource.sonarlint.core.commons.log.SonarLintLogger LOG;

  private final java.util.Map<org.sonarsource.sonarlint.core.commons.Language, java.lang.String[]> extensionsByLanguage;

  public org.sonarsource.sonarlint.core.analysis.container.analysis.filesystem.LanguageDetection(org.sonar.api.config.Configuration);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #27                 // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #28                 // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #30                 // Field extensionsByLanguage:Ljava/util/Map;
      15: invokestatic  #36                 // Method org/sonarsource/sonarlint/core/commons/Language.values:()[Lorg/sonarsource/sonarlint/core/commons/Language;
      18: astore_2
      19: aload_2
      20: arraylength
      21: istore_3
      22: iconst_0
      23: istore        4
      25: iload         4
      27: iload_3
      28: if_icmpge     129
      31: aload_2
      32: iload         4
      34: aaload
      35: astore        5
      37: aload_1
      38: aload         5
      40: invokevirtual #44                 // Method org/sonarsource/sonarlint/core/commons/Language.getFileSuffixesPropKey:()Ljava/lang/String;
      43: invokeinterface #48,  2           // InterfaceMethod org/sonar/api/config/Configuration.get:(Ljava/lang/String;)Ljava/util/Optional;
      48: invokevirtual #54                 // Method java/util/Optional.isPresent:()Z
      51: ifeq          68
      54: aload_1
      55: aload         5
      57: invokevirtual #44                 // Method org/sonarsource/sonarlint/core/commons/Language.getFileSuffixesPropKey:()Ljava/lang/String;
      60: invokeinterface #58,  2           // InterfaceMethod org/sonar/api/config/Configuration.getStringArray:(Ljava/lang/String;)[Ljava/lang/String;
      65: goto          73
      68: aload         5
      70: invokevirtual #62                 // Method org/sonarsource/sonarlint/core/commons/Language.getDefaultFileSuffixes:()[Ljava/lang/String;
      73: astore        6
      75: iconst_0
      76: istore        7
      78: iload         7
      80: aload         6
      82: arraylength
      83: if_icmpge     109
      86: aload         6
      88: iload         7
      90: aaload
      91: astore        8
      93: aload         6
      95: iload         7
      97: aload         8
      99: invokestatic  #68                 // Method sanitizeExtension:(Ljava/lang/String;)Ljava/lang/String;
     102: aastore
     103: iinc          7, 1
     106: goto          78
     109: aload_0
     110: getfield      #30                 // Field extensionsByLanguage:Ljava/util/Map;
     113: aload         5
     115: aload         6
     117: invokeinterface #72,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     122: pop
     123: iinc          4, 1
     126: goto          25
     129: return

  public org.sonarsource.sonarlint.core.commons.Language language(org.sonar.api.batch.fs.InputFile);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #30                 // Field extensionsByLanguage:Ljava/util/Map;
       6: invokeinterface #89,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      11: invokeinterface #95,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #100,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          122
      26: aload_3
      27: invokeinterface #104,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #7                  // class java/util/Map$Entry
      35: astore        4
      37: aload_1
      38: aload         4
      40: invokeinterface #107,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      45: checkcast     #64                 // class "[Ljava/lang/String;"
      48: invokestatic  #111                // Method isCandidateForLanguage:(Lorg/sonar/api/batch/fs/InputFile;[Ljava/lang/String;)Z
      51: ifeq          119
      54: aload_2
      55: ifnonnull     72
      58: aload         4
      60: invokeinterface #114,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      65: checkcast     #32                 // class org/sonarsource/sonarlint/core/commons/Language
      68: astore_2
      69: goto          119
      72: ldc           #116                // String Language of file \'\'{0}\'\' can not be decided as the file extension matches both {1} and {2}
      74: iconst_3
      75: anewarray     #4                  // class java/lang/Object
      78: dup
      79: iconst_0
      80: aload_1
      81: invokeinterface #122,  1          // InterfaceMethod org/sonar/api/batch/fs/InputFile.uri:()Ljava/net/URI;
      86: aastore
      87: dup
      88: iconst_1
      89: aload_0
      90: aload_2
      91: invokevirtual #126                // Method getDetails:(Lorg/sonarsource/sonarlint/core/commons/Language;)Ljava/lang/String;
      94: aastore
      95: dup
      96: iconst_2
      97: aload_0
      98: aload         4
     100: invokeinterface #114,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     105: checkcast     #32                 // class org/sonarsource/sonarlint/core/commons/Language
     108: invokevirtual #126                // Method getDetails:(Lorg/sonarsource/sonarlint/core/commons/Language;)Ljava/lang/String;
     111: aastore
     112: invokestatic  #132                // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     115: invokestatic  #138                // Method org/sonar/api/utils/MessageException.of:(Ljava/lang/String;)Lorg/sonar/api/utils/MessageException;
     118: athrow
     119: goto          17
     122: aload_2
     123: ifnull        143
     126: getstatic     #140                // Field LOG:Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
     129: ldc           #142                // String Language of file \'{}\' is detected to be \'{}\'
     131: aload_1
     132: invokeinterface #122,  1          // InterfaceMethod org/sonar/api/batch/fs/InputFile.uri:()Ljava/net/URI;
     137: aload_2
     138: invokevirtual #148                // Method org/sonarsource/sonarlint/core/commons/log/SonarLintLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     141: aload_2
     142: areturn
     143: aconst_null
     144: areturn

  private static boolean isCandidateForLanguage(org.sonar.api.batch.fs.InputFile, java.lang.String[]);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     53
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: invokeinterface #157,  1          // InterfaceMethod org/sonar/api/batch/fs/InputFile.filename:()Ljava/lang/String;
      26: getstatic     #163                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      29: invokevirtual #169                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      32: aload         5
      34: invokedynamic #180,  0            // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      39: invokevirtual #184                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      42: ifeq          47
      45: iconst_1
      46: ireturn
      47: iinc          4, 1
      50: goto          8
      53: iconst_0
      54: ireturn

  private java.lang.String getDetails(org.sonarsource.sonarlint.core.commons.Language);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #30                 // Field extensionsByLanguage:Ljava/util/Map;
       5: aload_1
       6: invokeinterface #188,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #64                 // class "[Ljava/lang/String;"
      14: invokestatic  #194                // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      17: ldc           #196                // String ,
      19: invokestatic  #202                // Method java/util/stream/Collectors.joining:(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
      22: invokeinterface #208,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      27: checkcast     #165                // class java/lang/String
      30: invokedynamic #213,  0            // InvokeDynamic #1:makeConcatWithConstants:(Lorg/sonarsource/sonarlint/core/commons/Language;Ljava/lang/String;)Ljava/lang/String;
      35: areturn

  static java.lang.String sanitizeExtension(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #215                // String .
       3: invokestatic  #221                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/lang3/StringUtils.removeStart:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       6: invokestatic  #224                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/lang3/StringUtils.lowerCase:(Ljava/lang/String;)Ljava/lang/String;
       9: areturn

  static {};
    Code:
       0: invokestatic  #228                // Method org/sonarsource/sonarlint/core/commons/log/SonarLintLogger.get:()Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
       3: putstatic     #140                // Field LOG:Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
       6: return
}
