Compiled from "GlobalStorageUpdateExecutor.java"
public class org.sonarsource.sonarlint.core.container.connected.update.perform.GlobalStorageUpdateExecutor {
  private final org.sonarsource.sonarlint.core.container.storage.ServerStorage serverStorage;

  public org.sonarsource.sonarlint.core.container.connected.update.perform.GlobalStorageUpdateExecutor(org.sonarsource.sonarlint.core.container.storage.ServerStorage);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #32                 // Field serverStorage:Lorg/sonarsource/sonarlint/core/container/storage/ServerStorage;
       9: return

  public void update(org.sonarsource.sonarlint.core.serverapi.ServerApiHelper, org.sonarsource.sonarlint.core.commons.progress.ProgressMonitor);
    Code:
       0: ldc           #40                 // String sonarlint-global-storage
       2: iconst_0
       3: anewarray     #42                 // class java/nio/file/attribute/FileAttribute
       6: invokestatic  #48                 // Method java/nio/file/Files.createTempDirectory:(Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
       9: astore_3
      10: goto          27
      13: astore        4
      15: new           #50                 // class java/lang/IllegalStateException
      18: dup
      19: ldc           #52                 // String Unable to create temp directory
      21: aload         4
      23: invokespecial #55                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      26: athrow
      27: new           #12                 // class org/sonarsource/sonarlint/core/container/storage/StorageFolder$Default
      30: dup
      31: aload_3
      32: invokespecial #60                 // Method org/sonarsource/sonarlint/core/container/storage/StorageFolder$Default."<init>":(Ljava/nio/file/Path;)V
      35: astore        4
      37: new           #62                 // class org/sonarsource/sonarlint/core/container/storage/ServerInfoStore
      40: dup
      41: aload         4
      43: invokespecial #65                 // Method org/sonarsource/sonarlint/core/container/storage/ServerInfoStore."<init>":(Lorg/sonarsource/sonarlint/core/container/storage/StorageFolder;)V
      46: astore        5
      48: new           #67                 // class org/sonarsource/sonarlint/core/container/storage/ServerProjectsStore
      51: dup
      52: aload         4
      54: invokespecial #68                 // Method org/sonarsource/sonarlint/core/container/storage/ServerProjectsStore."<init>":(Lorg/sonarsource/sonarlint/core/container/storage/StorageFolder;)V
      57: astore        6
      59: new           #70                 // class org/sonarsource/sonarlint/core/container/storage/StorageStatusStore
      62: dup
      63: aload         4
      65: invokespecial #71                 // Method org/sonarsource/sonarlint/core/container/storage/StorageStatusStore."<init>":(Lorg/sonarsource/sonarlint/core/container/storage/StorageFolder;)V
      68: astore        7
      70: aload_2
      71: ldc           #73                 // String Checking server version and status
      73: ldc           #74                 // float 0.1f
      75: invokevirtual #80                 // Method org/sonarsource/sonarlint/core/commons/progress/ProgressMonitor.setProgressAndCheckCancel:(Ljava/lang/String;F)V
      78: new           #82                 // class org/sonarsource/sonarlint/core/serverapi/system/ServerVersionAndStatusChecker
      81: dup
      82: aload_1
      83: invokespecial #85                 // Method org/sonarsource/sonarlint/core/serverapi/system/ServerVersionAndStatusChecker."<init>":(Lorg/sonarsource/sonarlint/core/serverapi/ServerApiHelper;)V
      86: invokevirtual #89                 // Method org/sonarsource/sonarlint/core/serverapi/system/ServerVersionAndStatusChecker.checkVersionAndStatus:()Lorg/sonarsource/sonarlint/core/serverapi/system/ServerInfo;
      89: astore        8
      91: aload         5
      93: aload         8
      95: invokevirtual #93                 // Method org/sonarsource/sonarlint/core/container/storage/ServerInfoStore.store:(Lorg/sonarsource/sonarlint/core/serverapi/system/ServerInfo;)V
      98: aload_2
      99: ldc           #95                 // String Fetching list of projects
     101: ldc           #96                 // float 0.8f
     103: invokevirtual #80                 // Method org/sonarsource/sonarlint/core/commons/progress/ProgressMonitor.setProgressAndCheckCancel:(Ljava/lang/String;F)V
     106: new           #98                 // class org/sonarsource/sonarlint/core/container/connected/update/ProjectListDownloader
     109: dup
     110: aload_1
     111: aload         6
     113: invokespecial #101                // Method org/sonarsource/sonarlint/core/container/connected/update/ProjectListDownloader."<init>":(Lorg/sonarsource/sonarlint/core/serverapi/ServerApiHelper;Lorg/sonarsource/sonarlint/core/container/storage/ServerProjectsStore;)V
     116: astore        9
     118: aload         9
     120: aload_2
     121: ldc           #96                 // float 0.8f
     123: fconst_1
     124: ldc           #95                 // String Fetching list of projects
     126: invokevirtual #105                // Method org/sonarsource/sonarlint/core/commons/progress/ProgressMonitor.subProgress:(FFLjava/lang/String;)Lorg/sonarsource/sonarlint/core/commons/progress/ProgressMonitor;
     129: invokevirtual #109                // Method org/sonarsource/sonarlint/core/container/connected/update/ProjectListDownloader.fetch:(Lorg/sonarsource/sonarlint/core/commons/progress/ProgressMonitor;)Ljava/util/Map;
     132: pop
     133: aload_2
     134: ldc           #111                // String Finalizing...
     136: fconst_1
     137: invokevirtual #80                 // Method org/sonarsource/sonarlint/core/commons/progress/ProgressMonitor.setProgressAndCheckCancel:(Ljava/lang/String;F)V
     140: aload_2
     141: aload_0
     142: aload         7
     144: aload_3
     145: invokedynamic #128,  0            // InvokeDynamic #0:run:(Lorg/sonarsource/sonarlint/core/container/connected/update/perform/GlobalStorageUpdateExecutor;Lorg/sonarsource/sonarlint/core/container/storage/StorageStatusStore;Ljava/nio/file/Path;)Ljava/lang/Runnable;
     150: invokevirtual #132                // Method org/sonarsource/sonarlint/core/commons/progress/ProgressMonitor.executeNonCancelableSection:(Ljava/lang/Runnable;)V
     153: aload_3
     154: invokeinterface #136,  1          // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
     159: invokestatic  #142                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z
     162: pop
     163: goto          181
     166: astore        10
     168: aload_3
     169: invokeinterface #136,  1          // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
     174: invokestatic  #142                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z
     177: pop
     178: aload         10
     180: athrow
     181: return
    Exception table:
       from    to  target type
           0    10    13   Class java/io/IOException
          27   153   166   any
         166   168   166   any

  private void lambda$update$0(org.sonarsource.sonarlint.core.container.storage.StorageStatusStore, java.nio.file.Path);
    Code:
       0: invokestatic  #168                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$StorageStatus.newBuilder:()Lorg/sonarsource/sonarlint/core/proto/Sonarlint$StorageStatus$Builder;
       3: ldc           #170                // String 3
       5: invokevirtual #174                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$StorageStatus$Builder.setStorageVersion:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/proto/Sonarlint$StorageStatus$Builder;
       8: invokestatic  #180                // Method org/sonarsource/sonarlint/core/util/VersionUtils.getLibraryVersion:()Ljava/lang/String;
      11: invokevirtual #183                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$StorageStatus$Builder.setSonarlintCoreVersion:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/proto/Sonarlint$StorageStatus$Builder;
      14: new           #185                // class java/util/Date
      17: dup
      18: invokespecial #186                // Method java/util/Date."<init>":()V
      21: invokevirtual #190                // Method java/util/Date.getTime:()J
      24: invokevirtual #194                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$StorageStatus$Builder.setUpdateTimestamp:(J)Lorg/sonarsource/sonarlint/core/proto/Sonarlint$StorageStatus$Builder;
      27: invokevirtual #198                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$StorageStatus$Builder.build:()Lorg/sonarsource/sonarlint/core/proto/Sonarlint$StorageStatus;
      30: astore_3
      31: aload_1
      32: aload_3
      33: invokevirtual #201                // Method org/sonarsource/sonarlint/core/container/storage/StorageStatusStore.store:(Lorg/sonarsource/sonarlint/core/proto/Sonarlint$StorageStatus;)V
      36: aload_0
      37: getfield      #32                 // Field serverStorage:Lorg/sonarsource/sonarlint/core/container/storage/ServerStorage;
      40: aload_2
      41: invokevirtual #206                // Method org/sonarsource/sonarlint/core/container/storage/ServerStorage.replaceStorageWith:(Ljava/nio/file/Path;)V
      44: return
}
