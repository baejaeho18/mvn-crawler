Compiled from "IssueExclusionPatternInitializer.java"
public class org.sonarsource.sonarlint.core.analysis.container.analysis.issue.ignore.pattern.IssueExclusionPatternInitializer extends org.sonarsource.sonarlint.core.analysis.container.analysis.issue.ignore.pattern.AbstractPatternInitializer {
  private static final org.sonarsource.sonarlint.core.commons.log.SonarLintLogger LOG;

  public static final java.lang.String EXCLUSION_KEY_PREFIX;

  public static final java.lang.String BLOCK_SUFFIX;

  public static final java.lang.String PATTERNS_BLOCK_KEY;

  public static final java.lang.String BEGIN_BLOCK_REGEXP;

  public static final java.lang.String END_BLOCK_REGEXP;

  public static final java.lang.String ALLFILE_SUFFIX;

  public static final java.lang.String PATTERNS_ALLFILE_KEY;

  public static final java.lang.String FILE_REGEXP;

  private java.util.List<org.sonarsource.sonarlint.core.analysis.container.analysis.issue.ignore.pattern.BlockIssuePattern> blockPatterns;

  private java.util.List<java.lang.String> allFilePatterns;

  public org.sonarsource.sonarlint.core.analysis.container.analysis.issue.ignore.pattern.IssueExclusionPatternInitializer(org.sonar.api.config.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #46                 // Method org/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/pattern/AbstractPatternInitializer."<init>":(Lorg/sonar/api/config/Configuration;)V
       5: aload_0
       6: invokevirtual #50                 // Method loadFileContentPatterns:()V
       9: return

  protected java.lang.String getMulticriteriaConfigurationKey();
    Code:
       0: ldc           #58                 // String sonar.issue.ignore.multicriteria
       2: areturn

  public boolean hasConfiguredPatterns();
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method hasFileContentPattern:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #66                 // Method hasMulticriteriaPatterns:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private void loadFileContentPatterns();
    Code:
       0: aload_0
       1: new           #68                 // class java/util/ArrayList
       4: dup
       5: invokespecial #70                 // Method java/util/ArrayList."<init>":()V
       8: putfield      #72                 // Field blockPatterns:Ljava/util/List;
      11: aload_0
      12: invokevirtual #76                 // Method getSettings:()Lorg/sonar/api/config/Configuration;
      15: ldc           #22                 // String sonar.issue.ignore.block
      17: invokeinterface #82,  2           // InterfaceMethod org/sonar/api/config/Configuration.getStringArray:(Ljava/lang/String;)[Ljava/lang/String;
      22: astore_1
      23: aload_1
      24: arraylength
      25: istore_2
      26: iconst_0
      27: istore_3
      28: iload_3
      29: iload_2
      30: if_icmpge     153
      33: aload_1
      34: iload_3
      35: aaload
      36: astore        4
      38: aload         4
      40: invokedynamic #96,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      45: astore        5
      47: aload_0
      48: invokevirtual #76                 // Method getSettings:()Lorg/sonar/api/config/Configuration;
      51: aload         5
      53: invokedynamic #99,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      58: invokeinterface #103,  2          // InterfaceMethod org/sonar/api/config/Configuration.get:(Ljava/lang/String;)Ljava/util/Optional;
      63: aconst_null
      64: invokevirtual #109                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      67: checkcast     #111                // class java/lang/String
      70: astore        6
      72: aload         6
      74: invokestatic  #117                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
      77: ifeq          91
      80: getstatic     #119                // Field LOG:Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
      83: ldc           #121                // String Issue exclusions are misconfigured. Start block regexp is mandatory for each entry of \'sonar.issue.ignore.block\'
      85: invokevirtual #127                // Method org/sonarsource/sonarlint/core/commons/log/SonarLintLogger.debug:(Ljava/lang/String;)V
      88: goto          147
      91: aload_0
      92: invokevirtual #76                 // Method getSettings:()Lorg/sonar/api/config/Configuration;
      95: aload         5
      97: invokedynamic #130,  0            // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     102: invokeinterface #103,  2          // InterfaceMethod org/sonar/api/config/Configuration.get:(Ljava/lang/String;)Ljava/util/Optional;
     107: aconst_null
     108: invokevirtual #109                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     111: checkcast     #111                // class java/lang/String
     114: astore        7
     116: new           #132                // class org/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/pattern/BlockIssuePattern
     119: dup
     120: aload         6
     122: invokestatic  #135                // Method nullToEmpty:(Ljava/lang/String;)Ljava/lang/String;
     125: aload         7
     127: invokestatic  #135                // Method nullToEmpty:(Ljava/lang/String;)Ljava/lang/String;
     130: invokespecial #138                // Method org/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/pattern/BlockIssuePattern."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     133: astore        8
     135: aload_0
     136: getfield      #72                 // Field blockPatterns:Ljava/util/List;
     139: aload         8
     141: invokeinterface #144,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     146: pop
     147: iinc          3, 1
     150: goto          28
     153: aload_0
     154: aload_0
     155: getfield      #72                 // Field blockPatterns:Ljava/util/List;
     158: invokestatic  #150                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
     161: putfield      #72                 // Field blockPatterns:Ljava/util/List;
     164: aload_0
     165: new           #68                 // class java/util/ArrayList
     168: dup
     169: invokespecial #70                 // Method java/util/ArrayList."<init>":()V
     172: putfield      #152                // Field allFilePatterns:Ljava/util/List;
     175: aload_0
     176: invokevirtual #76                 // Method getSettings:()Lorg/sonar/api/config/Configuration;
     179: ldc           #34                 // String sonar.issue.ignore.allfile
     181: invokeinterface #82,  2           // InterfaceMethod org/sonar/api/config/Configuration.getStringArray:(Ljava/lang/String;)[Ljava/lang/String;
     186: astore_1
     187: aload_1
     188: arraylength
     189: istore_2
     190: iconst_0
     191: istore_3
     192: iload_3
     193: iload_2
     194: if_icmpge     276
     197: aload_1
     198: iload_3
     199: aaload
     200: astore        4
     202: aload         4
     204: invokedynamic #155,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     209: astore        5
     211: aload_0
     212: invokevirtual #76                 // Method getSettings:()Lorg/sonar/api/config/Configuration;
     215: aload         5
     217: invokedynamic #158,  0            // InvokeDynamic #4:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
     222: invokeinterface #103,  2          // InterfaceMethod org/sonar/api/config/Configuration.get:(Ljava/lang/String;)Ljava/util/Optional;
     227: aconst_null
     228: invokevirtual #109                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     231: checkcast     #111                // class java/lang/String
     234: astore        6
     236: aload         6
     238: invokestatic  #117                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
     241: ifeq          255
     244: getstatic     #119                // Field LOG:Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
     247: ldc           #160                // String Issue exclusions are misconfigured. Remove blank entries from \'sonar.issue.ignore.allfile\'
     249: invokevirtual #127                // Method org/sonarsource/sonarlint/core/commons/log/SonarLintLogger.debug:(Ljava/lang/String;)V
     252: goto          270
     255: aload_0
     256: getfield      #152                // Field allFilePatterns:Ljava/util/List;
     259: aload         6
     261: invokestatic  #135                // Method nullToEmpty:(Ljava/lang/String;)Ljava/lang/String;
     264: invokeinterface #144,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     269: pop
     270: iinc          3, 1
     273: goto          192
     276: aload_0
     277: aload_0
     278: getfield      #152                // Field allFilePatterns:Ljava/util/List;
     281: invokestatic  #150                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
     284: putfield      #152                // Field allFilePatterns:Ljava/util/List;
     287: return

  private static java.lang.String nullToEmpty(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     7
       4: ldc           #168                // String
       6: areturn
       7: aload_0
       8: areturn

  public java.util.List<org.sonarsource.sonarlint.core.analysis.container.analysis.issue.ignore.pattern.BlockIssuePattern> getBlockPatterns();
    Code:
       0: aload_0
       1: getfield      #72                 // Field blockPatterns:Ljava/util/List;
       4: areturn

  public java.util.List<java.lang.String> getAllFilePatterns();
    Code:
       0: aload_0
       1: getfield      #152                // Field allFilePatterns:Ljava/util/List;
       4: areturn

  public boolean hasFileContentPattern();
    Code:
       0: aload_0
       1: getfield      #72                 // Field blockPatterns:Ljava/util/List;
       4: invokeinterface #177,  1          // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          24
      12: aload_0
      13: getfield      #152                // Field allFilePatterns:Ljava/util/List;
      16: invokeinterface #177,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  static {};
    Code:
       0: invokestatic  #181                // Method org/sonarsource/sonarlint/core/commons/log/SonarLintLogger.get:()Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
       3: putstatic     #119                // Field LOG:Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
       6: return
}
