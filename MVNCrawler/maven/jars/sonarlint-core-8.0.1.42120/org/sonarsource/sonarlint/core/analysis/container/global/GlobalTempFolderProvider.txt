Compiled from "GlobalTempFolderProvider.java"
public class org.sonarsource.sonarlint.core.analysis.container.global.GlobalTempFolderProvider extends org.sonarsource.sonarlint.shaded.org.picocontainer.injectors.ProviderAdapter implements org.sonarsource.sonarlint.shaded.org.picocontainer.ComponentLifecycle<org.sonar.api.utils.TempFolder> {
  private static final org.sonarsource.sonarlint.core.commons.log.SonarLintLogger LOG;

  private static final long CLEAN_MAX_AGE;

  static final java.lang.String TMP_NAME_PREFIX;

  private boolean started;

  private org.sonarsource.sonarlint.core.analysis.container.global.GlobalTempFolder tempFolder;

  public org.sonarsource.sonarlint.core.analysis.container.global.GlobalTempFolderProvider();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method org/sonarsource/sonarlint/shaded/org/picocontainer/injectors/ProviderAdapter."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #39                 // Field started:Z
       9: return

  public org.sonarsource.sonarlint.core.analysis.container.global.GlobalTempFolder provide(org.sonarsource.sonarlint.core.analysis.api.AnalysisEngineConfiguration);
    Code:
       0: aload_0
       1: getfield      #45                 // Field tempFolder:Lorg/sonarsource/sonarlint/core/analysis/container/global/GlobalTempFolder;
       4: ifnonnull     18
       7: aload_0
       8: aload_1
       9: invokevirtual #51                 // Method org/sonarsource/sonarlint/core/analysis/api/AnalysisEngineConfiguration.getWorkDir:()Ljava/nio/file/Path;
      12: invokestatic  #55                 // Method cleanAndCreateTempFolder:(Ljava/nio/file/Path;)Lorg/sonarsource/sonarlint/core/analysis/container/global/GlobalTempFolder;
      15: putfield      #45                 // Field tempFolder:Lorg/sonarsource/sonarlint/core/analysis/container/global/GlobalTempFolder;
      18: aload_0
      19: getfield      #45                 // Field tempFolder:Lorg/sonarsource/sonarlint/core/analysis/container/global/GlobalTempFolder;
      22: areturn

  private static org.sonarsource.sonarlint.core.analysis.container.global.GlobalTempFolder cleanAndCreateTempFolder(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokestatic  #63                 // Method cleanTempFolders:(Ljava/nio/file/Path;)V
       4: goto          28
       7: astore_1
       8: getstatic     #65                 // Field LOG:Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
      11: ldc           #67                 // String failed to clean global working directory: %s
      13: iconst_1
      14: anewarray     #69                 // class java/lang/Object
      17: dup
      18: iconst_0
      19: aload_0
      20: aastore
      21: invokestatic  #75                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      24: aload_1
      25: invokevirtual #81                 // Method org/sonarsource/sonarlint/core/commons/log/SonarLintLogger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      28: aload_0
      29: invokestatic  #85                 // Method createTempFolder:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
      32: astore_1
      33: new           #87                 // class org/sonarsource/sonarlint/core/analysis/container/global/GlobalTempFolder
      36: dup
      37: aload_1
      38: invokeinterface #93,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      43: iconst_1
      44: invokespecial #96                 // Method org/sonarsource/sonarlint/core/analysis/container/global/GlobalTempFolder."<init>":(Ljava/io/File;Z)V
      47: areturn
    Exception table:
       from    to  target type
           0     4     7   Class java/io/IOException

  private static java.nio.file.Path createTempFolder(java.nio.file.Path);
    Code:
       0: aload_0
       1: iconst_0
       2: anewarray     #103                // class java/nio/file/attribute/FileAttribute
       5: invokestatic  #109                // Method java/nio/file/Files.createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
       8: pop
       9: goto          28
      12: astore_1
      13: new           #111                // class java/lang/IllegalStateException
      16: dup
      17: aload_0
      18: invokedynamic #123,  0            // InvokeDynamic #0:makeConcatWithConstants:(Ljava/nio/file/Path;)Ljava/lang/String;
      23: aload_1
      24: invokespecial #125                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      27: athrow
      28: aload_0
      29: ldc           #29                 // String .sonartmp_
      31: iconst_0
      32: anewarray     #103                // class java/nio/file/attribute/FileAttribute
      35: invokestatic  #129                // Method java/nio/file/Files.createTempDirectory:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
      38: areturn
      39: astore_1
      40: new           #111                // class java/lang/IllegalStateException
      43: dup
      44: aload_0
      45: invokedynamic #132,  0            // InvokeDynamic #1:makeConcatWithConstants:(Ljava/nio/file/Path;)Ljava/lang/String;
      50: aload_1
      51: invokespecial #125                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      54: athrow
    Exception table:
       from    to  target type
           0     9    12   Class java/io/IOException
          28    38    39   Class java/io/IOException

  private static void cleanTempFolders(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: anewarray     #136                // class java/nio/file/LinkOption
       5: invokestatic  #140                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
       8: ifeq          97
      11: aload_0
      12: new           #10                 // class org/sonarsource/sonarlint/core/analysis/container/global/GlobalTempFolderProvider$CleanFilter
      15: dup
      16: invokespecial #141                // Method org/sonarsource/sonarlint/core/analysis/container/global/GlobalTempFolderProvider$CleanFilter."<init>":()V
      19: invokestatic  #145                // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter;)Ljava/nio/file/DirectoryStream;
      22: astore_1
      23: aload_1
      24: invokeinterface #149,  1          // InterfaceMethod java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;
      29: astore_2
      30: aload_2
      31: invokeinterface #155,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          62
      39: aload_2
      40: invokeinterface #159,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #89                 // class java/nio/file/Path
      48: astore_3
      49: aload_3
      50: invokeinterface #93,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      55: invokestatic  #165                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z
      58: pop
      59: goto          30
      62: aload_1
      63: ifnull        97
      66: aload_1
      67: invokeinterface #168,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      72: goto          97
      75: astore_2
      76: aload_1
      77: ifnull        95
      80: aload_1
      81: invokeinterface #168,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      86: goto          95
      89: astore_3
      90: aload_2
      91: aload_3
      92: invokevirtual #172                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      95: aload_2
      96: athrow
      97: return
    Exception table:
       from    to  target type
          23    62    75   Class java/lang/Throwable
          80    86    89   Class java/lang/Throwable

  public void start(org.sonarsource.sonarlint.shaded.org.picocontainer.PicoContainer);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #39                 // Field started:Z
       5: return

  public void stop(org.sonarsource.sonarlint.shaded.org.picocontainer.PicoContainer);
    Code:
       0: aload_0
       1: getfield      #45                 // Field tempFolder:Lorg/sonarsource/sonarlint/core/analysis/container/global/GlobalTempFolder;
       4: ifnull        14
       7: aload_0
       8: getfield      #45                 // Field tempFolder:Lorg/sonarsource/sonarlint/core/analysis/container/global/GlobalTempFolder;
      11: invokevirtual #184                // Method org/sonarsource/sonarlint/core/analysis/container/global/GlobalTempFolder.stop:()V
      14: return

  public void dispose(org.sonarsource.sonarlint.shaded.org.picocontainer.PicoContainer);
    Code:
       0: return

  public boolean componentHasLifecycle();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isStarted();
    Code:
       0: aload_0
       1: getfield      #39                 // Field started:Z
       4: ireturn

  static {};
    Code:
       0: invokestatic  #192                // Method org/sonarsource/sonarlint/core/commons/log/SonarLintLogger.get:()Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
       3: putstatic     #65                 // Field LOG:Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
       6: getstatic     #198                // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;
       9: ldc2_w        #199                // long 21l
      12: invokevirtual #204                // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      15: putstatic     #206                // Field CLEAN_MAX_AGE:J
      18: return
}
