Compiled from "StorageFileExclusions.java"
public class org.sonarsource.sonarlint.core.container.storage.StorageFileExclusions {
  private final org.sonarsource.sonarlint.core.container.connected.update.IssueStorePaths issueStorePaths;

  public org.sonarsource.sonarlint.core.container.storage.StorageFileExclusions(org.sonarsource.sonarlint.core.container.connected.update.IssueStorePaths);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #19                 // Field issueStorePaths:Lorg/sonarsource/sonarlint/core/container/connected/update/IssueStorePaths;
       9: return

  public <G> java.util.List<G> getExcludedFiles(org.sonarsource.sonarlint.core.storage.ProjectStorage, org.sonarsource.sonarlint.core.client.api.connected.ProjectBinding, java.util.Collection<G>, java.util.function.Function<G, java.lang.String>, java.util.function.Predicate<G>);
    Code:
       0: new           #26                 // class org/sonarsource/sonarlint/core/analysis/sonarapi/MapSettings
       3: dup
       4: aload_1
       5: aload_2
       6: invokevirtual #32                 // Method org/sonarsource/sonarlint/core/client/api/connected/ProjectBinding.projectKey:()Ljava/lang/String;
       9: invokevirtual #38                 // Method org/sonarsource/sonarlint/core/storage/ProjectStorage.getAnalyzerConfiguration:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/storage/AnalyzerConfiguration;
      12: invokevirtual #44                 // Method org/sonarsource/sonarlint/core/storage/AnalyzerConfiguration.getSettings:()Lorg/sonarsource/sonarlint/core/storage/Settings;
      15: invokevirtual #50                 // Method org/sonarsource/sonarlint/core/storage/Settings.getAll:()Ljava/util/Map;
      18: invokespecial #53                 // Method org/sonarsource/sonarlint/core/analysis/sonarapi/MapSettings."<init>":(Ljava/util/Map;)V
      21: astore        6
      23: new           #55                 // class org/sonarsource/sonarlint/core/container/storage/ExclusionFilters
      26: dup
      27: aload         6
      29: invokevirtual #59                 // Method org/sonarsource/sonarlint/core/analysis/sonarapi/MapSettings.asConfig:()Lorg/sonar/api/config/Configuration;
      32: invokespecial #62                 // Method org/sonarsource/sonarlint/core/container/storage/ExclusionFilters."<init>":(Lorg/sonar/api/config/Configuration;)V
      35: astore        7
      37: aload         7
      39: invokevirtual #65                 // Method org/sonarsource/sonarlint/core/container/storage/ExclusionFilters.prepare:()V
      42: new           #67                 // class java/util/ArrayList
      45: dup
      46: invokespecial #68                 // Method java/util/ArrayList."<init>":()V
      49: astore        8
      51: aload_3
      52: invokeinterface #74,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      57: astore        9
      59: aload         9
      61: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      66: ifeq          169
      69: aload         9
      71: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      76: astore        10
      78: aload         4
      80: aload         10
      82: invokeinterface #94,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      87: checkcast     #96                 // class java/lang/String
      90: astore        11
      92: aload         11
      94: ifnonnull     100
      97: goto          59
     100: aload_0
     101: getfield      #19                 // Field issueStorePaths:Lorg/sonarsource/sonarlint/core/container/connected/update/IssueStorePaths;
     104: aload_2
     105: aload         11
     107: invokevirtual #102                // Method org/sonarsource/sonarlint/core/container/connected/update/IssueStorePaths.idePathToSqPath:(Lorg/sonarsource/sonarlint/core/client/api/connected/ProjectBinding;Ljava/lang/String;)Ljava/lang/String;
     110: astore        12
     112: aload         12
     114: ifnonnull     121
     117: aload         11
     119: astore        12
     121: aload         5
     123: aload         10
     125: invokeinterface #106,  2          // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
     130: ifeq          139
     133: getstatic     #110                // Field org/sonar/api/batch/fs/InputFile$Type.TEST:Lorg/sonar/api/batch/fs/InputFile$Type;
     136: goto          142
     139: getstatic     #113                // Field org/sonar/api/batch/fs/InputFile$Type.MAIN:Lorg/sonar/api/batch/fs/InputFile$Type;
     142: astore        13
     144: aload         7
     146: aload         12
     148: aload         13
     150: invokevirtual #117                // Method org/sonarsource/sonarlint/core/container/storage/ExclusionFilters.accept:(Ljava/lang/String;Lorg/sonar/api/batch/fs/InputFile$Type;)Z
     153: ifne          166
     156: aload         8
     158: aload         10
     160: invokeinterface #120,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     165: pop
     166: goto          59
     169: aload         8
     171: areturn
}
