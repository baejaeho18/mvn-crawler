Compiled from "PluginInfo.java"
public class org.sonarsource.sonarlint.core.plugin.commons.loading.PluginInfo {
  private final java.lang.String key;

  private java.lang.String name;

  private java.io.File jarFile;

  private java.lang.String mainClass;

  private org.sonarsource.sonarlint.core.commons.Version version;

  private org.sonarsource.sonarlint.core.commons.Version minimalSqVersion;

  private java.lang.String basePlugin;

  private final java.util.Set<org.sonarsource.sonarlint.core.plugin.commons.loading.SonarPluginManifest$RequiredPlugin> requiredPlugins;

  private org.sonarsource.sonarlint.core.commons.Version jreMinVersion;

  private org.sonarsource.sonarlint.core.commons.Version nodeJsMinVersion;

  private java.util.List<java.lang.String> dependencies;

  public org.sonarsource.sonarlint.core.plugin.commons.loading.PluginInfo(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #39                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #41                 // class java/util/HashSet
       8: dup
       9: invokespecial #42                 // Method java/util/HashSet."<init>":()V
      12: putfield      #44                 // Field requiredPlugins:Ljava/util/Set;
      15: aload_0
      16: invokestatic  #50                 // InterfaceMethod java/util/List.of:()Ljava/util/List;
      19: putfield      #52                 // Field dependencies:Ljava/util/List;
      22: aload_1
      23: ldc           #54                 // String Plugin key is missing from manifest
      25: invokestatic  #60                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      28: pop
      29: aload_0
      30: aload_1
      31: putfield      #62                 // Field key:Ljava/lang/String;
      34: aload_0
      35: aload_1
      36: putfield      #64                 // Field name:Ljava/lang/String;
      39: return

  public org.sonarsource.sonarlint.core.plugin.commons.loading.PluginInfo setJarFile(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #70                 // Field jarFile:Ljava/io/File;
       5: aload_0
       6: areturn

  public java.io.File getJarFile();
    Code:
       0: aload_0
       1: getfield      #70                 // Field jarFile:Ljava/io/File;
       4: areturn

  public java.lang.String getKey();
    Code:
       0: aload_0
       1: getfield      #62                 // Field key:Ljava/lang/String;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #64                 // Field name:Ljava/lang/String;
       4: areturn

  public org.sonarsource.sonarlint.core.commons.Version getVersion();
    Code:
       0: aload_0
       1: getfield      #80                 // Field version:Lorg/sonarsource/sonarlint/core/commons/Version;
       4: areturn

  public org.sonarsource.sonarlint.core.commons.Version getMinimalSqVersion();
    Code:
       0: aload_0
       1: getfield      #83                 // Field minimalSqVersion:Lorg/sonarsource/sonarlint/core/commons/Version;
       4: areturn

  public java.lang.String getMainClass();
    Code:
       0: aload_0
       1: getfield      #86                 // Field mainClass:Ljava/lang/String;
       4: areturn

  public java.lang.String getBasePlugin();
    Code:
       0: aload_0
       1: getfield      #89                 // Field basePlugin:Ljava/lang/String;
       4: areturn

  public java.util.Set<org.sonarsource.sonarlint.core.plugin.commons.loading.SonarPluginManifest$RequiredPlugin> getRequiredPlugins();
    Code:
       0: aload_0
       1: getfield      #44                 // Field requiredPlugins:Ljava/util/Set;
       4: areturn

  public org.sonarsource.sonarlint.core.commons.Version getJreMinVersion();
    Code:
       0: aload_0
       1: getfield      #95                 // Field jreMinVersion:Lorg/sonarsource/sonarlint/core/commons/Version;
       4: areturn

  public org.sonarsource.sonarlint.core.commons.Version getNodeJsMinVersion();
    Code:
       0: aload_0
       1: getfield      #98                 // Field nodeJsMinVersion:Lorg/sonarsource/sonarlint/core/commons/Version;
       4: areturn

  public java.util.List<java.lang.String> getDependencies();
    Code:
       0: aload_0
       1: getfield      #52                 // Field dependencies:Ljava/util/List;
       4: areturn

  public org.sonarsource.sonarlint.core.plugin.commons.loading.PluginInfo setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #109                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       5: aload_0
       6: getfield      #62                 // Field key:Ljava/lang/String;
       9: invokevirtual #113                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #115                // class java/lang/String
      15: putfield      #64                 // Field name:Ljava/lang/String;
      18: aload_0
      19: areturn

  public org.sonarsource.sonarlint.core.plugin.commons.loading.PluginInfo setVersion(org.sonarsource.sonarlint.core.commons.Version);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #80                 // Field version:Lorg/sonarsource/sonarlint/core/commons/Version;
       5: aload_0
       6: areturn

  public org.sonarsource.sonarlint.core.plugin.commons.loading.PluginInfo setMinimalSqVersion(org.sonarsource.sonarlint.core.commons.Version);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #83                 // Field minimalSqVersion:Lorg/sonarsource/sonarlint/core/commons/Version;
       5: aload_0
       6: areturn

  public org.sonarsource.sonarlint.core.plugin.commons.loading.PluginInfo setMainClass(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #86                 // Field mainClass:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonarsource.sonarlint.core.plugin.commons.loading.PluginInfo setBasePlugin(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #89                 // Field basePlugin:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonarsource.sonarlint.core.plugin.commons.loading.PluginInfo addRequiredPlugin(org.sonarsource.sonarlint.core.plugin.commons.loading.SonarPluginManifest$RequiredPlugin);
    Code:
       0: aload_0
       1: getfield      #44                 // Field requiredPlugins:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #130,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  private org.sonarsource.sonarlint.core.plugin.commons.loading.PluginInfo setMinimalJreVersion(org.sonarsource.sonarlint.core.commons.Version);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #95                 // Field jreMinVersion:Lorg/sonarsource/sonarlint/core/commons/Version;
       5: aload_0
       6: areturn

  private org.sonarsource.sonarlint.core.plugin.commons.loading.PluginInfo setMinimalNodeJsVersion(org.sonarsource.sonarlint.core.commons.Version);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #98                 // Field nodeJsMinVersion:Lorg/sonarsource/sonarlint/core/commons/Version;
       5: aload_0
       6: areturn

  public org.sonarsource.sonarlint.core.plugin.commons.loading.PluginInfo setDependencies(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #52                 // Field dependencies:Ljava/util/List;
       5: aload_0
       6: areturn

  public boolean isCompatibleWith(java.lang.String);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #83                 // Field minimalSqVersion:Lorg/sonarsource/sonarlint/core/commons/Version;
       5: if_acmpne     10
       8: iconst_1
       9: ireturn
      10: aload_0
      11: getfield      #83                 // Field minimalSqVersion:Lorg/sonarsource/sonarlint/core/commons/Version;
      14: invokevirtual #145                // Method org/sonarsource/sonarlint/core/commons/Version.getMajor:()I
      17: aload_0
      18: getfield      #83                 // Field minimalSqVersion:Lorg/sonarsource/sonarlint/core/commons/Version;
      21: invokevirtual #148                // Method org/sonarsource/sonarlint/core/commons/Version.getMinor:()I
      24: invokedynamic #160,  0            // InvokeDynamic #0:makeConcatWithConstants:(II)Ljava/lang/String;
      29: invokestatic  #164                // Method org/sonarsource/sonarlint/core/commons/Version.create:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/commons/Version;
      32: astore_2
      33: aload_1
      34: invokestatic  #164                // Method org/sonarsource/sonarlint/core/commons/Version.create:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/commons/Version;
      37: astore_3
      38: aload_3
      39: aload_2
      40: invokevirtual #168                // Method org/sonarsource/sonarlint/core/commons/Version.compareToIgnoreQualifier:(Lorg/sonarsource/sonarlint/core/commons/Version;)I
      43: iflt          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #62                 // Field key:Ljava/lang/String;
       4: aload_0
       5: getfield      #80                 // Field version:Lorg/sonarsource/sonarlint/core/commons/Version;
       8: invokedynamic #177,  0            // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;Lorg/sonarsource/sonarlint/core/commons/Version;)Ljava/lang/String;
      13: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #182                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #182                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #2                  // class org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo
      28: astore_2
      29: aload_0
      30: getfield      #62                 // Field key:Ljava/lang/String;
      33: aload_2
      34: getfield      #62                 // Field key:Ljava/lang/String;
      37: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ifne          45
      43: iconst_0
      44: ireturn
      45: aload_0
      46: getfield      #80                 // Field version:Lorg/sonarsource/sonarlint/core/commons/Version;
      49: ifnull        69
      52: aload_0
      53: getfield      #80                 // Field version:Lorg/sonarsource/sonarlint/core/commons/Version;
      56: aload_2
      57: getfield      #80                 // Field version:Lorg/sonarsource/sonarlint/core/commons/Version;
      60: invokevirtual #185                // Method org/sonarsource/sonarlint/core/commons/Version.equals:(Ljava/lang/Object;)Z
      63: ifne          76
      66: goto          80
      69: aload_2
      70: getfield      #80                 // Field version:Lorg/sonarsource/sonarlint/core/commons/Version;
      73: ifnonnull     80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #62                 // Field key:Ljava/lang/String;
       4: invokevirtual #191                // Method java/lang/String.hashCode:()I
       7: istore_1
       8: bipush        31
      10: iload_1
      11: imul
      12: aload_0
      13: getfield      #80                 // Field version:Lorg/sonarsource/sonarlint/core/commons/Version;
      16: ifnull        29
      19: aload_0
      20: getfield      #80                 // Field version:Lorg/sonarsource/sonarlint/core/commons/Version;
      23: invokevirtual #192                // Method org/sonarsource/sonarlint/core/commons/Version.hashCode:()I
      26: goto          30
      29: iconst_0
      30: iadd
      31: istore_1
      32: iload_1
      33: ireturn

  public static org.sonarsource.sonarlint.core.plugin.commons.loading.PluginInfo create(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokestatic  #199                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginManifest.fromJar:(Ljava/nio/file/Path;)Lorg/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginManifest;
       4: astore_1
       5: aload_0
       6: aload_1
       7: invokestatic  #202                // Method create:(Ljava/nio/file/Path;Lorg/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginManifest;)Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;
      10: areturn

  static org.sonarsource.sonarlint.core.plugin.commons.loading.PluginInfo create(java.nio.file.Path, org.sonarsource.sonarlint.core.plugin.commons.loading.SonarPluginManifest);
    Code:
       0: aload_1
       1: invokevirtual #207                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginManifest.getKey:()Ljava/lang/String;
       4: invokestatic  #213                // Method org/sonarsource/sonarlint/shaded/org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
       7: ifeq          32
      10: ldc           #215                // String File is not a plugin. Please delete it and restart: %s
      12: iconst_1
      13: anewarray     #4                  // class java/lang/Object
      16: dup
      17: iconst_0
      18: aload_0
      19: invokeinterface #221,  1          // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;
      24: aastore
      25: invokestatic  #225                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      28: invokestatic  #230                // Method org/sonar/api/utils/MessageException.of:(Ljava/lang/String;)Lorg/sonar/api/utils/MessageException;
      31: athrow
      32: new           #2                  // class org/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo
      35: dup
      36: aload_1
      37: invokevirtual #207                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginManifest.getKey:()Ljava/lang/String;
      40: invokespecial #232                // Method "<init>":(Ljava/lang/String;)V
      43: astore_2
      44: aload_2
      45: aload_0
      46: invokeinterface #235,  1          // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      51: invokevirtual #237                // Method setJarFile:(Ljava/io/File;)Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;
      54: pop
      55: aload_2
      56: aload_1
      57: invokevirtual #239                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginManifest.getName:()Ljava/lang/String;
      60: invokevirtual #241                // Method setName:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;
      63: pop
      64: aload_2
      65: aload_1
      66: invokevirtual #243                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginManifest.getMainClass:()Ljava/lang/String;
      69: invokevirtual #245                // Method setMainClass:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;
      72: pop
      73: aload_2
      74: aload_1
      75: invokevirtual #247                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginManifest.getVersion:()Ljava/lang/String;
      78: invokestatic  #164                // Method org/sonarsource/sonarlint/core/commons/Version.create:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/commons/Version;
      81: invokevirtual #249                // Method setVersion:(Lorg/sonarsource/sonarlint/core/commons/Version;)Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;
      84: pop
      85: aload_2
      86: aload_1
      87: invokevirtual #253                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginManifest.getSonarMinVersion:()Ljava/util/Optional;
      90: aconst_null
      91: invokevirtual #113                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      94: checkcast     #141                // class org/sonarsource/sonarlint/core/commons/Version
      97: invokevirtual #255                // Method setMinimalSqVersion:(Lorg/sonarsource/sonarlint/core/commons/Version;)Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;
     100: pop
     101: aload_2
     102: aload_1
     103: invokevirtual #258                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginManifest.getBasePluginKey:()Ljava/lang/String;
     106: invokevirtual #260                // Method setBasePlugin:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;
     109: pop
     110: aload_1
     111: invokevirtual #262                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginManifest.getRequiredPlugins:()Ljava/util/List;
     114: aload_2
     115: dup
     116: invokestatic  #264                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
     119: pop
     120: invokedynamic #282,  0            // InvokeDynamic #2:accept:(Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;)Ljava/util/function/Consumer;
     125: invokeinterface #286,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
     130: aload_2
     131: aload_1
     132: invokevirtual #288                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginManifest.getJreMinVersion:()Ljava/util/Optional;
     135: aconst_null
     136: invokevirtual #113                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     139: checkcast     #141                // class org/sonarsource/sonarlint/core/commons/Version
     142: invokevirtual #290                // Method setMinimalJreVersion:(Lorg/sonarsource/sonarlint/core/commons/Version;)Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;
     145: pop
     146: aload_2
     147: aload_1
     148: invokevirtual #292                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginManifest.getNodeJsMinVersion:()Ljava/util/Optional;
     151: aconst_null
     152: invokevirtual #113                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
     155: checkcast     #141                // class org/sonarsource/sonarlint/core/commons/Version
     158: invokevirtual #294                // Method setMinimalNodeJsVersion:(Lorg/sonarsource/sonarlint/core/commons/Version;)Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;
     161: pop
     162: aload_2
     163: aload_1
     164: invokevirtual #296                // Method org/sonarsource/sonarlint/core/plugin/commons/loading/SonarPluginManifest.getDependencies:()Ljava/util/List;
     167: invokevirtual #298                // Method setDependencies:(Ljava/util/List;)Lorg/sonarsource/sonarlint/core/plugin/commons/loading/PluginInfo;
     170: pop
     171: aload_2
     172: areturn
}
