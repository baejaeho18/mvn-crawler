Compiled from "HashingPathMapper.java"
public class org.sonarsource.sonarlint.core.client.api.connected.objectstore.HashingPathMapper implements org.sonarsource.sonarlint.core.client.api.connected.objectstore.PathMapper<java.lang.String> {
  private static final java.lang.String HEX_LETTERS;

  private static final java.lang.String HASHING_ALGORITHM;

  private static final int HASH_LENGTH;

  private final java.nio.file.Path base;

  private final int levels;

  public org.sonarsource.sonarlint.core.client.api.connected.objectstore.HashingPathMapper(java.nio.file.Path, int);
    Code:
       0: aload_0
       1: invokespecial #26                 // Method java/lang/Object."<init>":()V
       4: iload_2
       5: iconst_1
       6: if_icmpge     19
       9: new           #28                 // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #30                 // String levels must be > 0
      15: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: iload_2
      20: bipush        40
      22: if_icmple     35
      25: new           #28                 // class java/lang/IllegalArgumentException
      28: dup
      29: ldc           #37                 // String levels must be less than the length of the generated hash: 40
      31: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: aload_1
      37: putfield      #39                 // Field base:Ljava/nio/file/Path;
      40: aload_0
      41: iload_2
      42: putfield      #41                 // Field levels:I
      45: return

  public java.nio.file.Path apply(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #49                 // Method toHash:(Ljava/lang/String;)[B
       4: invokestatic  #53                 // Method toHexString:([B)Ljava/lang/String;
       7: astore_2
       8: aload_0
       9: getfield      #39                 // Field base:Ljava/nio/file/Path;
      12: astore_3
      13: iconst_0
      14: istore        4
      16: iload         4
      18: aload_0
      19: getfield      #41                 // Field levels:I
      22: if_icmpge     48
      25: aload_3
      26: aload_2
      27: iload         4
      29: iload         4
      31: iconst_1
      32: iadd
      33: invokevirtual #59                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      36: invokeinterface #62,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      41: astore_3
      42: iinc          4, 1
      45: goto          16
      48: aload_3
      49: aload_2
      50: invokeinterface #62,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      55: areturn

  private static byte[] toHash(java.lang.String);
    Code:
       0: ldc           #15                 // String SHA1
       2: invokestatic  #74                 // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
       5: astore_1
       6: aload_1
       7: aload_0
       8: getstatic     #80                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      11: invokevirtual #84                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      14: invokevirtual #88                 // Method java/security/MessageDigest.update:([B)V
      17: aload_1
      18: invokevirtual #92                 // Method java/security/MessageDigest.digest:()[B
      21: areturn
      22: astore_1
      23: new           #94                 // class java/lang/IllegalStateException
      26: dup
      27: ldc           #96                 // String could not get hashing algoritm: SHA1
      29: aload_1
      30: invokespecial #99                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      33: athrow
    Exception table:
       from    to  target type
           0    21    22   Class java/security/NoSuchAlgorithmException

  private static java.lang.String toHexString(byte[]);
    Code:
       0: new           #104                // class java/lang/StringBuilder
       3: dup
       4: iconst_2
       5: aload_0
       6: arraylength
       7: imul
       8: invokespecial #107                // Method java/lang/StringBuilder."<init>":(I)V
      11: astore_1
      12: aload_0
      13: astore_2
      14: aload_2
      15: arraylength
      16: istore_3
      17: iconst_0
      18: istore        4
      20: iload         4
      22: iload_3
      23: if_icmpge     69
      26: aload_2
      27: iload         4
      29: baload
      30: istore        5
      32: aload_1
      33: ldc           #12                 // String 0123456789abcdef
      35: iload         5
      37: sipush        240
      40: iand
      41: iconst_4
      42: ishr
      43: invokevirtual #113                // Method java/lang/String.charAt:(I)C
      46: invokevirtual #117                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      49: ldc           #12                 // String 0123456789abcdef
      51: iload         5
      53: bipush        15
      55: iand
      56: invokevirtual #113                // Method java/lang/String.charAt:(I)C
      59: invokevirtual #117                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      62: pop
      63: iinc          4, 1
      66: goto          20
      69: aload_1
      70: invokevirtual #121                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #55                 // class java/lang/String
       5: invokevirtual #129                // Method apply:(Ljava/lang/String;)Ljava/nio/file/Path;
       8: areturn
}
