Compiled from "AnalysisEngine.java"
public class org.sonarsource.sonarlint.core.analysis.AnalysisEngine {
  private static final org.sonarsource.sonarlint.core.commons.log.SonarLintLogger LOG;

  private static final java.lang.Runnable CANCELING_TERMINATION;

  private final org.sonarsource.sonarlint.core.analysis.container.global.GlobalAnalysisContainer globalAnalysisContainer;

  private final java.util.concurrent.BlockingQueue<org.sonarsource.sonarlint.core.analysis.AnalysisEngine$AsyncCommand<?>> commandQueue;

  private final java.lang.Thread analysisThread;

  private final org.sonarsource.sonarlint.core.commons.log.ClientLogOutput logOutput;

  private final java.util.concurrent.atomic.AtomicReference<java.lang.Runnable> termination;

  private final java.util.concurrent.atomic.AtomicReference<org.sonarsource.sonarlint.core.analysis.AnalysisEngine$AsyncCommand<?>> executingCommand;

  public org.sonarsource.sonarlint.core.analysis.AnalysisEngine(org.sonarsource.sonarlint.core.analysis.api.AnalysisEngineConfiguration, org.sonarsource.sonarlint.core.plugin.commons.PluginInstancesRepository, org.sonarsource.sonarlint.core.commons.log.ClientLogOutput);
    Code:
       0: aload_0
       1: invokespecial #37                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #39                 // class java/util/concurrent/LinkedBlockingQueue
       8: dup
       9: invokespecial #40                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      12: putfield      #42                 // Field commandQueue:Ljava/util/concurrent/BlockingQueue;
      15: aload_0
      16: new           #44                 // class java/lang/Thread
      19: dup
      20: aload_0
      21: invokedynamic #60,  0             // InvokeDynamic #0:run:(Lorg/sonarsource/sonarlint/core/analysis/AnalysisEngine;)Ljava/lang/Runnable;
      26: ldc           #62                 // String sonarlint-analysis-engine
      28: invokespecial #65                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
      31: putfield      #67                 // Field analysisThread:Ljava/lang/Thread;
      34: aload_0
      35: new           #69                 // class java/util/concurrent/atomic/AtomicReference
      38: dup
      39: invokespecial #70                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      42: putfield      #72                 // Field termination:Ljava/util/concurrent/atomic/AtomicReference;
      45: aload_0
      46: new           #69                 // class java/util/concurrent/atomic/AtomicReference
      49: dup
      50: invokespecial #70                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      53: putfield      #74                 // Field executingCommand:Ljava/util/concurrent/atomic/AtomicReference;
      56: aload_0
      57: new           #76                 // class org/sonarsource/sonarlint/core/analysis/container/global/GlobalAnalysisContainer
      60: dup
      61: aload_1
      62: aload_2
      63: invokespecial #79                 // Method org/sonarsource/sonarlint/core/analysis/container/global/GlobalAnalysisContainer."<init>":(Lorg/sonarsource/sonarlint/core/analysis/api/AnalysisEngineConfiguration;Lorg/sonarsource/sonarlint/core/plugin/commons/PluginInstancesRepository;)V
      66: putfield      #81                 // Field globalAnalysisContainer:Lorg/sonarsource/sonarlint/core/analysis/container/global/GlobalAnalysisContainer;
      69: aload_0
      70: aload_3
      71: putfield      #83                 // Field logOutput:Lorg/sonarsource/sonarlint/core/commons/log/ClientLogOutput;
      74: aload_0
      75: invokevirtual #86                 // Method start:()V
      78: return

  private void start();
    Code:
       0: aload_0
       1: getfield      #81                 // Field globalAnalysisContainer:Lorg/sonarsource/sonarlint/core/analysis/container/global/GlobalAnalysisContainer;
       4: invokevirtual #96                 // Method org/sonarsource/sonarlint/core/analysis/container/global/GlobalAnalysisContainer.startComponents:()Lorg/sonarsource/sonarlint/core/plugin/commons/pico/ComponentContainer;
       7: pop
       8: aload_0
       9: getfield      #67                 // Field analysisThread:Ljava/lang/Thread;
      12: invokevirtual #97                 // Method java/lang/Thread.start:()V
      15: return

  private void executeQueuedCommands();
    Code:
       0: aload_0
       1: getfield      #72                 // Field termination:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #103                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: ifnonnull     106
      10: aload_0
      11: getfield      #83                 // Field logOutput:Lorg/sonarsource/sonarlint/core/commons/log/ClientLogOutput;
      14: invokestatic  #109                // Method org/sonarsource/sonarlint/core/commons/log/SonarLintLogger.setTarget:(Lorg/sonarsource/sonarlint/core/commons/log/ClientLogOutput;)V
      17: aload_0
      18: getfield      #74                 // Field executingCommand:Ljava/util/concurrent/atomic/AtomicReference;
      21: aload_0
      22: getfield      #42                 // Field commandQueue:Ljava/util/concurrent/BlockingQueue;
      25: invokeinterface #114,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.take:()Ljava/lang/Object;
      30: checkcast     #7                  // class org/sonarsource/sonarlint/core/analysis/AnalysisEngine$AsyncCommand
      33: invokevirtual #118                // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      36: aload_0
      37: getfield      #72                 // Field termination:Ljava/util/concurrent/atomic/AtomicReference;
      40: invokevirtual #103                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      43: getstatic     #120                // Field CANCELING_TERMINATION:Ljava/lang/Runnable;
      46: if_acmpne     65
      49: aload_0
      50: getfield      #74                 // Field executingCommand:Ljava/util/concurrent/atomic/AtomicReference;
      53: invokevirtual #103                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      56: checkcast     #7                  // class org/sonarsource/sonarlint/core/analysis/AnalysisEngine$AsyncCommand
      59: invokevirtual #123                // Method org/sonarsource/sonarlint/core/analysis/AnalysisEngine$AsyncCommand.cancel:()V
      62: goto          106
      65: aload_0
      66: getfield      #74                 // Field executingCommand:Ljava/util/concurrent/atomic/AtomicReference;
      69: invokevirtual #103                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      72: checkcast     #7                  // class org/sonarsource/sonarlint/core/analysis/AnalysisEngine$AsyncCommand
      75: aload_0
      76: invokevirtual #127                // Method getModuleRegistry:()Lorg/sonarsource/sonarlint/core/analysis/container/global/ModuleRegistry;
      79: invokevirtual #131                // Method org/sonarsource/sonarlint/core/analysis/AnalysisEngine$AsyncCommand.execute:(Lorg/sonarsource/sonarlint/core/analysis/container/global/ModuleRegistry;)V
      82: aload_0
      83: getfield      #74                 // Field executingCommand:Ljava/util/concurrent/atomic/AtomicReference;
      86: aconst_null
      87: invokevirtual #118                // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      90: goto          0
      93: astore_1
      94: getstatic     #133                // Field LOG:Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
      97: ldc           #135                // String Analysis engine interrupted
      99: aload_1
     100: invokevirtual #139                // Method org/sonarsource/sonarlint/core/commons/log/SonarLintLogger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     103: goto          0
     106: aload_0
     107: getfield      #72                 // Field termination:Ljava/util/concurrent/atomic/AtomicReference;
     110: invokevirtual #103                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     113: checkcast     #141                // class java/lang/Runnable
     116: invokeinterface #143,  1          // InterfaceMethod java/lang/Runnable.run:()V
     121: return
    Exception table:
       from    to  target type
          17    62    93   Class java/lang/InterruptedException
          65    90    93   Class java/lang/InterruptedException

  public <T> java.util.concurrent.CompletableFuture<T> post(org.sonarsource.sonarlint.core.analysis.command.Command<T>, org.sonarsource.sonarlint.core.commons.progress.ProgressMonitor);
    Code:
       0: aload_0
       1: getfield      #72                 // Field termination:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #103                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: ifnull        23
      10: getstatic     #133                // Field LOG:Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
      13: ldc           #150                // String Analysis engine stopping, ignoring command
      15: invokevirtual #153                // Method org/sonarsource/sonarlint/core/commons/log/SonarLintLogger.error:(Ljava/lang/String;)V
      18: aconst_null
      19: invokestatic  #159                // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      22: areturn
      23: aload_0
      24: getfield      #67                 // Field analysisThread:Ljava/lang/Thread;
      27: invokevirtual #163                // Method java/lang/Thread.isAlive:()Z
      30: ifne          46
      33: getstatic     #133                // Field LOG:Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
      36: ldc           #165                // String Analysis engine not started, ignoring command
      38: invokevirtual #153                // Method org/sonarsource/sonarlint/core/commons/log/SonarLintLogger.error:(Ljava/lang/String;)V
      41: aconst_null
      42: invokestatic  #159                // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      45: areturn
      46: new           #7                  // class org/sonarsource/sonarlint/core/analysis/AnalysisEngine$AsyncCommand
      49: dup
      50: aload_1
      51: aload_2
      52: invokespecial #168                // Method org/sonarsource/sonarlint/core/analysis/AnalysisEngine$AsyncCommand."<init>":(Lorg/sonarsource/sonarlint/core/analysis/command/Command;Lorg/sonarsource/sonarlint/core/commons/progress/ProgressMonitor;)V
      55: astore_3
      56: aload_0
      57: getfield      #42                 // Field commandQueue:Ljava/util/concurrent/BlockingQueue;
      60: aload_3
      61: invokeinterface #171,  2          // InterfaceMethod java/util/concurrent/BlockingQueue.put:(Ljava/lang/Object;)V
      66: goto          81
      69: astore        4
      71: aload_3
      72: getfield      #179                // Field org/sonarsource/sonarlint/core/analysis/AnalysisEngine$AsyncCommand.future:Ljava/util/concurrent/CompletableFuture;
      75: aload         4
      77: invokevirtual #183                // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      80: pop
      81: aload_3
      82: getfield      #179                // Field org/sonarsource/sonarlint/core/analysis/AnalysisEngine$AsyncCommand.future:Ljava/util/concurrent/CompletableFuture;
      85: areturn
    Exception table:
       from    to  target type
          56    66    69   Class java/lang/InterruptedException

  public void finishGracefully();
    Code:
       0: aload_0
       1: getfield      #72                 // Field termination:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: aload_0
       6: invokedynamic #197,  0            // InvokeDynamic #1:run:(Lorg/sonarsource/sonarlint/core/analysis/AnalysisEngine;)Ljava/lang/Runnable;
      11: invokevirtual #201                // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      14: pop
      15: return

  private void honorPendingCommands();
    Code:
       0: new           #203                // class java/util/ArrayList
       3: dup
       4: invokespecial #204                // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #42                 // Field commandQueue:Ljava/util/concurrent/BlockingQueue;
      12: aload_1
      13: invokeinterface #208,  2          // InterfaceMethod java/util/concurrent/BlockingQueue.drainTo:(Ljava/util/Collection;)I
      18: pop
      19: aload_1
      20: aload_0
      21: invokedynamic #219,  0            // InvokeDynamic #2:accept:(Lorg/sonarsource/sonarlint/core/analysis/AnalysisEngine;)Ljava/util/function/Consumer;
      26: invokeinterface #225,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      31: aload_0
      32: getfield      #81                 // Field globalAnalysisContainer:Lorg/sonarsource/sonarlint/core/analysis/container/global/GlobalAnalysisContainer;
      35: iconst_0
      36: invokevirtual #229                // Method org/sonarsource/sonarlint/core/analysis/container/global/GlobalAnalysisContainer.stopComponents:(Z)Lorg/sonarsource/sonarlint/core/plugin/commons/pico/ComponentContainer;
      39: pop
      40: return

  public void stop();
    Code:
       0: aload_0
       1: getfield      #67                 // Field analysisThread:Ljava/lang/Thread;
       4: invokevirtual #163                // Method java/lang/Thread.isAlive:()Z
       7: ifne          11
      10: return
      11: aload_0
      12: getfield      #72                 // Field termination:Ljava/util/concurrent/atomic/AtomicReference;
      15: aconst_null
      16: getstatic     #120                // Field CANCELING_TERMINATION:Ljava/lang/Runnable;
      19: invokevirtual #201                // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      22: ifne          26
      25: return
      26: aload_0
      27: getfield      #74                 // Field executingCommand:Ljava/util/concurrent/atomic/AtomicReference;
      30: invokevirtual #103                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      33: checkcast     #7                  // class org/sonarsource/sonarlint/core/analysis/AnalysisEngine$AsyncCommand
      36: astore_1
      37: aload_1
      38: ifnull        45
      41: aload_1
      42: invokevirtual #123                // Method org/sonarsource/sonarlint/core/analysis/AnalysisEngine$AsyncCommand.cancel:()V
      45: aload_0
      46: getfield      #67                 // Field analysisThread:Ljava/lang/Thread;
      49: invokevirtual #236                // Method java/lang/Thread.interrupt:()V
      52: new           #203                // class java/util/ArrayList
      55: dup
      56: invokespecial #204                // Method java/util/ArrayList."<init>":()V
      59: astore_2
      60: aload_0
      61: getfield      #42                 // Field commandQueue:Ljava/util/concurrent/BlockingQueue;
      64: aload_2
      65: invokeinterface #208,  2          // InterfaceMethod java/util/concurrent/BlockingQueue.drainTo:(Ljava/util/Collection;)I
      70: pop
      71: aload_2
      72: invokedynamic #243,  0            // InvokeDynamic #3:accept:()Ljava/util/function/Consumer;
      77: invokeinterface #225,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      82: aload_0
      83: getfield      #81                 // Field globalAnalysisContainer:Lorg/sonarsource/sonarlint/core/analysis/container/global/GlobalAnalysisContainer;
      86: iconst_0
      87: invokevirtual #229                // Method org/sonarsource/sonarlint/core/analysis/container/global/GlobalAnalysisContainer.stopComponents:(Z)Lorg/sonarsource/sonarlint/core/plugin/commons/pico/ComponentContainer;
      90: pop
      91: return

  public org.sonarsource.sonarlint.core.analysis.container.global.ModuleRegistry getModuleRegistry();
    Code:
       0: aload_0
       1: getfield      #81                 // Field globalAnalysisContainer:Lorg/sonarsource/sonarlint/core/analysis/container/global/GlobalAnalysisContainer;
       4: invokevirtual #245                // Method org/sonarsource/sonarlint/core/analysis/container/global/GlobalAnalysisContainer.getModuleRegistry:()Lorg/sonarsource/sonarlint/core/analysis/container/global/ModuleRegistry;
       7: areturn

  public org.sonarsource.sonarlint.core.analysis.container.global.GlobalAnalysisContainer getGlobalAnalysisContainer();
    Code:
       0: aload_0
       1: getfield      #81                 // Field globalAnalysisContainer:Lorg/sonarsource/sonarlint/core/analysis/container/global/GlobalAnalysisContainer;
       4: areturn

  private static void lambda$stop$2(org.sonarsource.sonarlint.core.analysis.AnalysisEngine$AsyncCommand);
    Code:
       0: aload_0
       1: getfield      #179                // Field org/sonarsource/sonarlint/core/analysis/AnalysisEngine$AsyncCommand.future:Ljava/util/concurrent/CompletableFuture;
       4: iconst_0
       5: invokevirtual #250                // Method java/util/concurrent/CompletableFuture.cancel:(Z)Z
       8: pop
       9: return

  private void lambda$honorPendingCommands$1(org.sonarsource.sonarlint.core.analysis.AnalysisEngine$AsyncCommand);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #127                // Method getModuleRegistry:()Lorg/sonarsource/sonarlint/core/analysis/container/global/ModuleRegistry;
       5: invokevirtual #131                // Method org/sonarsource/sonarlint/core/analysis/AnalysisEngine$AsyncCommand.execute:(Lorg/sonarsource/sonarlint/core/analysis/container/global/ModuleRegistry;)V
       8: return

  private static void lambda$static$0();
    Code:
       0: return

  static {};
    Code:
       0: invokestatic  #256                // Method org/sonarsource/sonarlint/core/commons/log/SonarLintLogger.get:()Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
       3: putstatic     #133                // Field LOG:Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
       6: invokedynamic #262,  0            // InvokeDynamic #4:run:()Ljava/lang/Runnable;
      11: putstatic     #120                // Field CANCELING_TERMINATION:Ljava/lang/Runnable;
      14: return
}
