Compiled from "IssueExclusionsLoader.java"
public class org.sonarsource.sonarlint.core.analysis.container.analysis.issue.ignore.scanner.IssueExclusionsLoader {
  private final java.util.List<java.util.regex.Pattern> allFilePatterns;

  private final java.util.List<org.sonarsource.sonarlint.core.analysis.container.analysis.issue.ignore.scanner.IssueExclusionsLoader$DoubleRegexpMatcher> blockMatchers;

  private final org.sonarsource.sonarlint.core.analysis.container.analysis.issue.ignore.IgnoreIssuesFilter ignoreIssuesFilter;

  private final org.sonarsource.sonarlint.core.analysis.container.analysis.issue.ignore.pattern.IssueExclusionPatternInitializer patternsInitializer;

  private final boolean enableCharHandler;

  public org.sonarsource.sonarlint.core.analysis.container.analysis.issue.ignore.scanner.IssueExclusionsLoader(org.sonarsource.sonarlint.core.analysis.container.analysis.issue.ignore.pattern.IssueExclusionPatternInitializer, org.sonarsource.sonarlint.core.analysis.container.analysis.issue.ignore.IgnoreIssuesFilter);
    Code:
       0: aload_0
       1: invokespecial #29                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #31                 // Field patternsInitializer:Lorg/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/pattern/IssueExclusionPatternInitializer;
       9: aload_0
      10: aload_2
      11: putfield      #33                 // Field ignoreIssuesFilter:Lorg/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/IgnoreIssuesFilter;
      14: aload_0
      15: new           #35                 // class java/util/ArrayList
      18: dup
      19: invokespecial #36                 // Method java/util/ArrayList."<init>":()V
      22: putfield      #38                 // Field allFilePatterns:Ljava/util/List;
      25: aload_0
      26: new           #35                 // class java/util/ArrayList
      29: dup
      30: invokespecial #36                 // Method java/util/ArrayList."<init>":()V
      33: putfield      #40                 // Field blockMatchers:Ljava/util/List;
      36: aload_1
      37: invokevirtual #46                 // Method org/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/pattern/IssueExclusionPatternInitializer.getAllFilePatterns:()Ljava/util/List;
      40: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      45: astore_3
      46: aload_3
      47: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      52: ifeq          84
      55: aload_3
      56: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #66                 // class java/lang/String
      64: astore        4
      66: aload_0
      67: getfield      #38                 // Field allFilePatterns:Ljava/util/List;
      70: aload         4
      72: invokestatic  #72                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      75: invokeinterface #76,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      80: pop
      81: goto          46
      84: aload_1
      85: invokevirtual #79                 // Method org/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/pattern/IssueExclusionPatternInitializer.getBlockPatterns:()Ljava/util/List;
      88: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      93: astore_3
      94: aload_3
      95: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     100: ifeq          150
     103: aload_3
     104: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     109: checkcast     #81                 // class org/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/pattern/BlockIssuePattern
     112: astore        4
     114: aload_0
     115: getfield      #40                 // Field blockMatchers:Ljava/util/List;
     118: new           #7                  // class org/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/scanner/IssueExclusionsLoader$DoubleRegexpMatcher
     121: dup
     122: aload         4
     124: invokevirtual #85                 // Method org/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/pattern/BlockIssuePattern.getBeginBlockRegexp:()Ljava/lang/String;
     127: invokestatic  #72                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
     130: aload         4
     132: invokevirtual #88                 // Method org/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/pattern/BlockIssuePattern.getEndBlockRegexp:()Ljava/lang/String;
     135: invokestatic  #72                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
     138: invokespecial #91                 // Method org/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/scanner/IssueExclusionsLoader$DoubleRegexpMatcher."<init>":(Ljava/util/regex/Pattern;Ljava/util/regex/Pattern;)V
     141: invokeinterface #76,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     146: pop
     147: goto          94
     150: aload_0
     151: aload_0
     152: getfield      #38                 // Field allFilePatterns:Ljava/util/List;
     155: invokeinterface #94,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     160: ifeq          175
     163: aload_0
     164: getfield      #40                 // Field blockMatchers:Ljava/util/List;
     167: invokeinterface #94,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     172: ifne          179
     175: iconst_1
     176: goto          180
     179: iconst_0
     180: putfield      #96                 // Field enableCharHandler:Z
     183: return

  public void addMulticriteriaPatterns(org.sonarsource.sonarlint.core.analysis.container.analysis.filesystem.SonarLintInputFile);
    Code:
       0: aload_0
       1: getfield      #31                 // Field patternsInitializer:Lorg/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/pattern/IssueExclusionPatternInitializer;
       4: invokevirtual #106                // Method org/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/pattern/IssueExclusionPatternInitializer.getMulticriteriaPatterns:()Ljava/util/List;
       7: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          58
      22: aload_2
      23: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #108                // class org/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/pattern/IssuePattern
      31: astore_3
      32: aload_3
      33: aload_1
      34: invokevirtual #113                // Method org/sonarsource/sonarlint/core/analysis/container/analysis/filesystem/SonarLintInputFile.relativePath:()Ljava/lang/String;
      37: invokevirtual #117                // Method org/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/pattern/IssuePattern.matchFile:(Ljava/lang/String;)Z
      40: ifeq          55
      43: aload_0
      44: getfield      #33                 // Field ignoreIssuesFilter:Lorg/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/IgnoreIssuesFilter;
      47: aload_1
      48: aload_3
      49: invokevirtual #121                // Method org/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/pattern/IssuePattern.getRulePattern:()Lorg/sonar/api/utils/WildcardPattern;
      52: invokevirtual #125                // Method org/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/IgnoreIssuesFilter.addRuleExclusionPatternForComponent:(Lorg/sonarsource/sonarlint/core/analysis/container/analysis/filesystem/SonarLintInputFile;Lorg/sonar/api/utils/WildcardPattern;)V
      55: goto          13
      58: return

  public org.sonarsource.sonarlint.core.analysis.container.analysis.filesystem.FileMetadata$CharHandler createCharHandlerFor(org.sonarsource.sonarlint.core.analysis.container.analysis.filesystem.SonarLintInputFile);
    Code:
       0: aload_0
       1: getfield      #96                 // Field enableCharHandler:Z
       4: ifeq          24
       7: new           #133                // class org/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/scanner/IssueExclusionsRegexpScanner
      10: dup
      11: aload_1
      12: aload_0
      13: getfield      #38                 // Field allFilePatterns:Ljava/util/List;
      16: aload_0
      17: getfield      #40                 // Field blockMatchers:Ljava/util/List;
      20: invokespecial #136                // Method org/sonarsource/sonarlint/core/analysis/container/analysis/issue/ignore/scanner/IssueExclusionsRegexpScanner."<init>":(Lorg/sonarsource/sonarlint/core/analysis/container/analysis/filesystem/SonarLintInputFile;Ljava/util/List;Ljava/util/List;)V
      23: areturn
      24: aconst_null
      25: areturn

  public java.lang.String toString();
    Code:
       0: ldc           #139                // String Issues Exclusions - Source Scanner
       2: areturn
}
