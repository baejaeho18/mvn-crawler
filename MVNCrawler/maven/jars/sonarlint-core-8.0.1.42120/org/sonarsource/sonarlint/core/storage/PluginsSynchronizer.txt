Compiled from "PluginsSynchronizer.java"
public class org.sonarsource.sonarlint.core.storage.PluginsSynchronizer {
  private static final org.sonar.api.utils.log.Logger LOG;

  private final java.util.Set<java.lang.String> sonarSourceDisabledPluginKeys;

  private final org.sonarsource.sonarlint.core.storage.PluginsStorage pluginsStorage;

  private final java.util.Set<java.lang.String> embeddedPluginKeys;

  private final org.sonarsource.sonarlint.core.plugin.commons.PluginsMinVersions pluginsMinVersions;

  private static final java.lang.String OLD_SONARTS_PLUGIN_KEY;

  public org.sonarsource.sonarlint.core.storage.PluginsSynchronizer(java.util.Set<org.sonarsource.sonarlint.core.commons.Language>, org.sonarsource.sonarlint.core.storage.PluginsStorage, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #40                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #42                 // class org/sonarsource/sonarlint/core/plugin/commons/PluginsMinVersions
       8: dup
       9: invokespecial #43                 // Method org/sonarsource/sonarlint/core/plugin/commons/PluginsMinVersions."<init>":()V
      12: putfield      #45                 // Field pluginsMinVersions:Lorg/sonarsource/sonarlint/core/plugin/commons/PluginsMinVersions;
      15: aload_0
      16: aload_1
      17: invokestatic  #49                 // Method getSonarSourceDisabledPluginKeys:(Ljava/util/Set;)Ljava/util/Set;
      20: putfield      #51                 // Field sonarSourceDisabledPluginKeys:Ljava/util/Set;
      23: aload_0
      24: aload_2
      25: putfield      #53                 // Field pluginsStorage:Lorg/sonarsource/sonarlint/core/storage/PluginsStorage;
      28: aload_0
      29: aload_3
      30: putfield      #55                 // Field embeddedPluginKeys:Ljava/util/Set;
      33: return

  public boolean synchronize(org.sonarsource.sonarlint.core.serverapi.ServerApi, org.sonarsource.sonarlint.core.commons.progress.ProgressMonitor);
    Code:
       0: aload_0
       1: getfield      #53                 // Field pluginsStorage:Lorg/sonarsource/sonarlint/core/storage/PluginsStorage;
       4: invokevirtual #67                 // Method org/sonarsource/sonarlint/core/storage/PluginsStorage.getStoredPluginsByKey:()Ljava/util/Map;
       7: astore_3
       8: aload_1
       9: invokevirtual #73                 // Method org/sonarsource/sonarlint/core/serverapi/ServerApi.plugins:()Lorg/sonarsource/sonarlint/core/serverapi/plugins/PluginsApi;
      12: invokevirtual #79                 // Method org/sonarsource/sonarlint/core/serverapi/plugins/PluginsApi.getInstalled:()Ljava/util/List;
      15: astore        4
      17: aload         4
      19: invokeinterface #85,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      24: aload_0
      25: aload_3
      26: invokedynamic #105,  0            // InvokeDynamic #0:test:(Lorg/sonarsource/sonarlint/core/storage/PluginsSynchronizer;Ljava/util/Map;)Ljava/util/function/Predicate;
      31: invokeinterface #111,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      36: invokestatic  #117                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      39: invokeinterface #121,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      44: checkcast     #81                 // class java/util/List
      47: astore        5
      49: aload_0
      50: aload_1
      51: aload         5
      53: aload_2
      54: invokevirtual #125                // Method downloadAll:(Lorg/sonarsource/sonarlint/core/serverapi/ServerApi;Ljava/util/List;Lorg/sonarsource/sonarlint/core/commons/progress/ProgressMonitor;)V
      57: aload         5
      59: invokeinterface #129,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      64: ifne          71
      67: iconst_1
      68: goto          72
      71: iconst_0
      72: ireturn

  private void downloadAll(org.sonarsource.sonarlint.core.serverapi.ServerApi, java.util.List<org.sonarsource.sonarlint.core.serverapi.plugins.ServerPlugin>, org.sonarsource.sonarlint.core.commons.progress.ProgressMonitor);
    Code:
       0: iconst_0
       1: istore        4
       3: aload_2
       4: invokeinterface #145,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore        5
      11: aload         5
      13: invokeinterface #150,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          71
      21: aload         5
      23: invokeinterface #154,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #156                // class org/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin
      31: astore        6
      33: aload_3
      34: aload         6
      36: invokevirtual #160                // Method org/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin.getKey:()Ljava/lang/String;
      39: invokedynamic #172,  0            // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      44: iload         4
      46: iinc          4, 1
      49: i2f
      50: aload_2
      51: invokeinterface #176,  1          // InterfaceMethod java/util/List.size:()I
      56: i2f
      57: fdiv
      58: invokevirtual #182                // Method org/sonarsource/sonarlint/core/commons/progress/ProgressMonitor.setProgressAndCheckCancel:(Ljava/lang/String;F)V
      61: aload_0
      62: aload_1
      63: aload         6
      65: invokevirtual #186                // Method downloadPlugin:(Lorg/sonarsource/sonarlint/core/serverapi/ServerApi;Lorg/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin;)V
      68: goto          11
      71: return

  private void downloadPlugin(org.sonarsource.sonarlint.core.serverapi.ServerApi, org.sonarsource.sonarlint.core.serverapi.plugins.ServerPlugin);
    Code:
       0: getstatic     #192                // Field LOG:Lorg/sonar/api/utils/log/Logger;
       3: ldc           #194                // String [SYNC] Downloading plugin \'{}\'
       5: aload_2
       6: invokevirtual #197                // Method org/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin.getFilename:()Ljava/lang/String;
       9: invokeinterface #203,  3          // InterfaceMethod org/sonar/api/utils/log/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      14: aload_1
      15: invokevirtual #73                 // Method org/sonarsource/sonarlint/core/serverapi/ServerApi.plugins:()Lorg/sonarsource/sonarlint/core/serverapi/plugins/PluginsApi;
      18: aload_2
      19: invokevirtual #160                // Method org/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin.getKey:()Ljava/lang/String;
      22: aload_0
      23: aload_2
      24: invokedynamic #216,  0            // InvokeDynamic #2:accept:(Lorg/sonarsource/sonarlint/core/storage/PluginsSynchronizer;Lorg/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin;)Lorg/sonarsource/sonarlint/core/serverapi/ServerApiHelper$IOConsumer;
      29: invokevirtual #220                // Method org/sonarsource/sonarlint/core/serverapi/plugins/PluginsApi.getPlugin:(Ljava/lang/String;Lorg/sonarsource/sonarlint/core/serverapi/ServerApiHelper$IOConsumer;)V
      32: return

  private boolean shouldDownload(org.sonarsource.sonarlint.core.serverapi.plugins.ServerPlugin, java.util.Map<java.lang.String, org.sonarsource.sonarlint.core.storage.StoredPlugin>);
    Code:
       0: aload_0
       1: getfield      #55                 // Field embeddedPluginKeys:Ljava/util/Set;
       4: aload_1
       5: invokevirtual #160                // Method org/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin.getKey:()Ljava/lang/String;
       8: invokeinterface #229,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      13: ifeq          32
      16: getstatic     #192                // Field LOG:Lorg/sonar/api/utils/log/Logger;
      19: ldc           #231                // String [SYNC] Code analyzer \'{}\' is embedded in SonarLint. Skip downloading it.
      21: aload_1
      22: invokevirtual #160                // Method org/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin.getKey:()Ljava/lang/String;
      25: invokeinterface #234,  3          // InterfaceMethod org/sonar/api/utils/log/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      30: iconst_0
      31: ireturn
      32: aload_1
      33: aload_2
      34: invokestatic  #237                // Method upToDate:(Lorg/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin;Ljava/util/Map;)Z
      37: ifeq          56
      40: getstatic     #192                // Field LOG:Lorg/sonar/api/utils/log/Logger;
      43: ldc           #239                // String [SYNC] Code analyzer \'{}\' is up-to-date. Skip downloading it.
      45: aload_1
      46: invokevirtual #160                // Method org/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin.getKey:()Ljava/lang/String;
      49: invokeinterface #234,  3          // InterfaceMethod org/sonar/api/utils/log/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      54: iconst_0
      55: ireturn
      56: aload_1
      57: invokevirtual #242                // Method org/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin.isSonarLintSupported:()Z
      60: ifne          79
      63: getstatic     #192                // Field LOG:Lorg/sonar/api/utils/log/Logger;
      66: ldc           #244                // String [SYNC] Code analyzer \'{}\' does not support SonarLint. Skip downloading it.
      68: aload_1
      69: invokevirtual #160                // Method org/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin.getKey:()Ljava/lang/String;
      72: invokeinterface #234,  3          // InterfaceMethod org/sonar/api/utils/log/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      77: iconst_0
      78: ireturn
      79: aload_0
      80: getfield      #51                 // Field sonarSourceDisabledPluginKeys:Ljava/util/Set;
      83: aload_1
      84: invokevirtual #160                // Method org/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin.getKey:()Ljava/lang/String;
      87: invokeinterface #229,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      92: ifeq          111
      95: getstatic     #192                // Field LOG:Lorg/sonar/api/utils/log/Logger;
      98: ldc           #246                // String [SYNC] Code analyzer \'{}\' is disabled in SonarLint (language not enabled). Skip downloading it.
     100: aload_1
     101: invokevirtual #160                // Method org/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin.getKey:()Ljava/lang/String;
     104: invokeinterface #234,  3          // InterfaceMethod org/sonar/api/utils/log/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     109: iconst_0
     110: ireturn
     111: aload_1
     112: invokevirtual #197                // Method org/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin.getFilename:()Ljava/lang/String;
     115: invokestatic  #251                // Method org/sonarsource/sonarlint/core/util/VersionUtils.getJarVersion:(Ljava/lang/String;)Ljava/lang/String;
     118: astore_3
     119: aload_0
     120: getfield      #45                 // Field pluginsMinVersions:Lorg/sonarsource/sonarlint/core/plugin/commons/PluginsMinVersions;
     123: aload_1
     124: invokevirtual #160                // Method org/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin.getKey:()Ljava/lang/String;
     127: aload_3
     128: invokevirtual #255                // Method org/sonarsource/sonarlint/core/plugin/commons/PluginsMinVersions.isVersionSupported:(Ljava/lang/String;Ljava/lang/String;)Z
     131: ifne          180
     134: aload_0
     135: getfield      #45                 // Field pluginsMinVersions:Lorg/sonarsource/sonarlint/core/plugin/commons/PluginsMinVersions;
     138: aload_1
     139: invokevirtual #160                // Method org/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin.getKey:()Ljava/lang/String;
     142: invokevirtual #258                // Method org/sonarsource/sonarlint/core/plugin/commons/PluginsMinVersions.getMinimumVersion:(Ljava/lang/String;)Ljava/lang/String;
     145: astore        4
     147: getstatic     #192                // Field LOG:Lorg/sonar/api/utils/log/Logger;
     150: ldc_w         #260                // String [SYNC] Code analyzer \'{}\' version \'{}\' is not supported (minimal version is \'{}\'). Skip downloading it.
     153: iconst_3
     154: anewarray     #4                  // class java/lang/Object
     157: dup
     158: iconst_0
     159: aload_1
     160: invokevirtual #160                // Method org/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin.getKey:()Ljava/lang/String;
     163: aastore
     164: dup
     165: iconst_1
     166: aload_3
     167: aastore
     168: dup
     169: iconst_2
     170: aload         4
     172: aastore
     173: invokeinterface #263,  3          // InterfaceMethod org/sonar/api/utils/log/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     178: iconst_0
     179: ireturn
     180: iconst_1
     181: ireturn

  private static boolean upToDate(org.sonarsource.sonarlint.core.serverapi.plugins.ServerPlugin, java.util.Map<java.lang.String, org.sonarsource.sonarlint.core.storage.StoredPlugin>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #160                // Method org/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin.getKey:()Ljava/lang/String;
       5: invokeinterface #271,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          37
      13: aload_1
      14: aload_0
      15: invokevirtual #160                // Method org/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin.getKey:()Ljava/lang/String;
      18: invokeinterface #275,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #277                // class org/sonarsource/sonarlint/core/storage/StoredPlugin
      26: aload_0
      27: invokevirtual #280                // Method org/sonarsource/sonarlint/core/storage/StoredPlugin.hasSameHash:(Lorg/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin;)Z
      30: ifeq          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  private static java.util.Set<java.lang.String> getSonarSourceDisabledPluginKeys(java.util.Set<org.sonarsource.sonarlint.core.commons.Language>);
    Code:
       0: invokestatic  #287                // Method org/sonarsource/sonarlint/core/commons/Language.values:()[Lorg/sonarsource/sonarlint/core/commons/Language;
       3: invokestatic  #292                // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       6: invokedynamic #303,  0            // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      11: invokestatic  #307                // Method java/util/stream/Collectors.groupingBy:(Ljava/util/function/Function;)Ljava/util/stream/Collector;
      14: invokeinterface #121,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      19: checkcast     #9                  // class java/util/Map
      22: astore_1
      23: aload_1
      24: invokeinterface #311,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      29: invokeinterface #312,  1          // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      34: aload_0
      35: invokedynamic #322,  0            // InvokeDynamic #4:test:(Ljava/util/Set;)Ljava/util/function/Predicate;
      40: invokeinterface #111,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      45: invokedynamic #328,  0            // InvokeDynamic #5:apply:()Ljava/util/function/Function;
      50: invokeinterface #332,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      55: invokestatic  #335                // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      58: invokeinterface #121,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      63: checkcast     #226                // class java/util/Set
      66: astore_2
      67: aload_0
      68: getstatic     #339                // Field org/sonarsource/sonarlint/core/commons/Language.TS:Lorg/sonarsource/sonarlint/core/commons/Language;
      71: invokeinterface #229,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      76: ifne          88
      79: aload_2
      80: ldc           #34                 // String typescript
      82: invokeinterface #342,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      87: pop
      88: aload_2
      89: areturn

  private static boolean lambda$getSonarSourceDisabledPluginKeys$2(java.util.Set, java.util.Map$Entry);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #348,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
       7: checkcast     #350                // class java/util/Collection
      10: invokestatic  #356                // Method java/util/Collections.disjoint:(Ljava/util/Collection;Ljava/util/Collection;)Z
      13: ireturn

  private void lambda$downloadPlugin$1(org.sonarsource.sonarlint.core.serverapi.plugins.ServerPlugin, java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #53                 // Field pluginsStorage:Lorg/sonarsource/sonarlint/core/storage/PluginsStorage;
       4: aload_1
       5: aload_2
       6: invokevirtual #363                // Method org/sonarsource/sonarlint/core/storage/PluginsStorage.store:(Lorg/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin;Ljava/io/InputStream;)V
       9: return

  private boolean lambda$synchronize$0(java.util.Map, org.sonarsource.sonarlint.core.serverapi.plugins.ServerPlugin);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokevirtual #367                // Method shouldDownload:(Lorg/sonarsource/sonarlint/core/serverapi/plugins/ServerPlugin;Ljava/util/Map;)Z
       6: ireturn

  static {};
    Code:
       0: ldc           #2                  // class org/sonarsource/sonarlint/core/storage/PluginsSynchronizer
       2: invokestatic  #373                // Method org/sonar/api/utils/log/Loggers.get:(Ljava/lang/Class;)Lorg/sonar/api/utils/log/Logger;
       5: putstatic     #192                // Field LOG:Lorg/sonar/api/utils/log/Logger;
       8: return
}
