Compiled from "DefaultTempFolder.java"
public class org.sonarsource.sonarlint.core.analysis.sonarapi.DefaultTempFolder implements org.sonar.api.utils.TempFolder {
  private static final org.sonarsource.sonarlint.core.commons.log.SonarLintLogger LOG;

  private final java.io.File tempDir;

  private final boolean deleteOnExit;

  public org.sonarsource.sonarlint.core.analysis.sonarapi.DefaultTempFolder(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #26                 // Method "<init>":(Ljava/io/File;Z)V
       6: return

  public org.sonarsource.sonarlint.core.analysis.sonarapi.DefaultTempFolder(java.io.File, boolean);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #33                 // Field tempDir:Ljava/io/File;
       9: aload_0
      10: iload_2
      11: putfield      #35                 // Field deleteOnExit:Z
      14: return

  public java.io.File newDir();
    Code:
       0: aload_0
       1: getfield      #33                 // Field tempDir:Ljava/io/File;
       4: invokevirtual #43                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       7: invokestatic  #47                 // Method createTempDir:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
      10: invokeinterface #52,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      15: areturn

  private static java.nio.file.Path createTempDir(java.nio.file.Path);
    Code:
       0: aload_0
       1: aconst_null
       2: iconst_0
       3: anewarray     #56                 // class java/nio/file/attribute/FileAttribute
       6: invokestatic  #62                 // Method java/nio/file/Files.createTempDirectory:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
       9: areturn
      10: astore_1
      11: new           #64                 // class java/lang/IllegalStateException
      14: dup
      15: ldc           #66                 // String Failed to create temp directory
      17: aload_1
      18: invokespecial #69                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      21: athrow
    Exception table:
       from    to  target type
           0     9    10   Class java/io/IOException

  public java.io.File newDir(java.lang.String);
    Code:
       0: new           #39                 // class java/io/File
       3: dup
       4: aload_0
       5: getfield      #33                 // Field tempDir:Ljava/io/File;
       8: aload_1
       9: invokespecial #77                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      12: astore_2
      13: aload_2
      14: invokestatic  #82                 // Method org/sonarsource/sonarlint/shaded/org/apache/commons/io/FileUtils.forceMkdir:(Ljava/io/File;)V
      17: goto          36
      20: astore_3
      21: new           #64                 // class java/lang/IllegalStateException
      24: dup
      25: aload_2
      26: invokedynamic #96,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/io/File;)Ljava/lang/String;
      31: aload_3
      32: invokespecial #69                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      35: athrow
      36: aload_2
      37: areturn
    Exception table:
       from    to  target type
          13    17    20   Class java/io/IOException

  public java.io.File newFile();
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: invokevirtual #103                // Method newFile:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
       6: areturn

  public java.io.File newFile(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #33                 // Field tempDir:Ljava/io/File;
       4: invokevirtual #43                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
       7: aload_1
       8: aload_2
       9: invokestatic  #108                // Method createTempFile:(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path;
      12: invokeinterface #52,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      17: areturn

  private static java.nio.file.Path createTempFile(java.nio.file.Path, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: anewarray     #56                 // class java/nio/file/attribute/FileAttribute
       7: invokestatic  #113                // Method java/nio/file/Files.createTempFile:(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
      10: areturn
      11: astore_3
      12: new           #64                 // class java/lang/IllegalStateException
      15: dup
      16: ldc           #115                // String Failed to create temp file
      18: aload_3
      19: invokespecial #69                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      22: athrow
    Exception table:
       from    to  target type
           0    10    11   Class java/io/IOException

  public void clean();
    Code:
       0: aload_0
       1: getfield      #33                 // Field tempDir:Ljava/io/File;
       4: invokevirtual #120                // Method java/io/File.exists:()Z
       7: ifeq          24
      10: aload_0
      11: getfield      #33                 // Field tempDir:Ljava/io/File;
      14: invokevirtual #43                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      17: getstatic     #124                // Field org/sonarsource/sonarlint/core/analysis/sonarapi/DefaultTempFolder$DeleteRecursivelyFileVisitor.INSTANCE:Lorg/sonarsource/sonarlint/core/analysis/sonarapi/DefaultTempFolder$DeleteRecursivelyFileVisitor;
      20: invokestatic  #128                // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;
      23: pop
      24: goto          37
      27: astore_1
      28: getstatic     #130                // Field LOG:Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
      31: ldc           #132                // String Failed to delete temp folder
      33: aload_1
      34: invokevirtual #137                // Method org/sonarsource/sonarlint/core/commons/log/SonarLintLogger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      37: return
    Exception table:
       from    to  target type
           0    24    27   Class java/io/IOException

  public void stop();
    Code:
       0: aload_0
       1: getfield      #35                 // Field deleteOnExit:Z
       4: ifeq          11
       7: aload_0
       8: invokevirtual #140                // Method clean:()V
      11: return

  static {};
    Code:
       0: invokestatic  #145                // Method org/sonarsource/sonarlint/core/commons/log/SonarLintLogger.get:()Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
       3: putstatic     #130                // Field LOG:Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
       6: return
}
