Compiled from "InMemoryIssueTrackerCache.java"
public class org.sonarsource.sonarlint.core.issuetracking.InMemoryIssueTrackerCache<T> implements org.sonarsource.sonarlint.core.issuetracking.IssueTrackerCache<T> {
  private final java.util.Map<java.lang.String, java.util.Collection<org.sonarsource.sonarlint.core.issuetracking.Trackable<T>>> cache;

  public org.sonarsource.sonarlint.core.issuetracking.InMemoryIssueTrackerCache();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #22                 // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #23                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #25                 // Field cache:Ljava/util/Map;
      15: return

  public boolean isFirstAnalysis(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #25                 // Field cache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #36,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public java.util.Collection<org.sonarsource.sonarlint.core.issuetracking.Trackable<T>> getCurrentTrackables(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #25                 // Field cache:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #47                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       8: invokeinterface #51,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #53                 // class java/util/Collection
      16: areturn

  public java.util.Collection<org.sonarsource.sonarlint.core.issuetracking.Trackable<T>> getLiveOrFail(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #25                 // Field cache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #58,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #53                 // class java/util/Collection
      13: astore_2
      14: aload_2
      15: ifnonnull     32
      18: new           #60                 // class java/lang/IllegalStateException
      21: dup
      22: aload_1
      23: invokedynamic #72,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      28: invokespecial #75                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_2
      33: areturn

  public void put(java.lang.String, java.util.Collection<org.sonarsource.sonarlint.core.issuetracking.Trackable<T>>);
    Code:
       0: aload_0
       1: getfield      #25                 // Field cache:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #83,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #25                 // Field cache:Ljava/util/Map;
       4: invokeinterface #86,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return

  public void shutdown();
    Code:
       0: return
}
