Compiled from "ServerProjectsStore.java"
public class org.sonarsource.sonarlint.core.container.storage.ServerProjectsStore {
  public static final java.lang.String PROJECT_LIST_PB;

  private final org.sonarsource.sonarlint.core.container.storage.StorageFolder storageFolder;

  private final org.sonarsource.sonarlint.core.container.storage.RWLock rwLock;

  public org.sonarsource.sonarlint.core.container.storage.ServerProjectsStore(org.sonarsource.sonarlint.core.container.storage.StorageFolder);
    Code:
       0: aload_0
       1: invokespecial #41                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #43                 // class org/sonarsource/sonarlint/core/container/storage/RWLock
       8: dup
       9: invokespecial #44                 // Method org/sonarsource/sonarlint/core/container/storage/RWLock."<init>":()V
      12: putfield      #46                 // Field rwLock:Lorg/sonarsource/sonarlint/core/container/storage/RWLock;
      15: aload_0
      16: aload_1
      17: putfield      #48                 // Field storageFolder:Lorg/sonarsource/sonarlint/core/container/storage/StorageFolder;
      20: return

  public void store(java.util.List<org.sonarsource.sonarlint.core.serverapi.component.ServerProject>);
    Code:
       0: aload_0
       1: getfield      #46                 // Field rwLock:Lorg/sonarsource/sonarlint/core/container/storage/RWLock;
       4: aload_0
       5: aload_1
       6: invokedynamic #69,  0             // InvokeDynamic #0:run:(Lorg/sonarsource/sonarlint/core/container/storage/ServerProjectsStore;Ljava/util/List;)Ljava/lang/Runnable;
      11: invokevirtual #73                 // Method org/sonarsource/sonarlint/core/container/storage/RWLock.write:(Ljava/lang/Runnable;)V
      14: return

  public java.util.Map<java.lang.String, org.sonarsource.sonarlint.core.serverapi.component.ServerProject> getAll();
    Code:
       0: aload_0
       1: getfield      #46                 // Field rwLock:Lorg/sonarsource/sonarlint/core/container/storage/RWLock;
       4: aload_0
       5: invokedynamic #91,  0             // InvokeDynamic #1:get:(Lorg/sonarsource/sonarlint/core/container/storage/ServerProjectsStore;)Ljava/util/function/Supplier;
      10: invokevirtual #95                 // Method org/sonarsource/sonarlint/core/container/storage/RWLock.read:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      13: checkcast     #7                  // class org/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList
      16: astore_1
      17: aload_1
      18: invokestatic  #99                 // Method adapt:(Lorg/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList;)Ljava/util/Map;
      21: areturn

  private static org.sonarsource.sonarlint.core.proto.Sonarlint$ProjectList adapt(java.util.List<org.sonarsource.sonarlint.core.serverapi.component.ServerProject>);
    Code:
       0: invokestatic  #107                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList.newBuilder:()Lorg/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList$Builder;
       3: astore_1
       4: invokestatic  #110                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList$Project.newBuilder:()Lorg/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList$Project$Builder;
       7: astore_2
       8: aload_0
       9: aload_2
      10: aload_1
      11: invokedynamic #123,  0            // InvokeDynamic #2:accept:(Lorg/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList$Project$Builder;Lorg/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList$Builder;)Ljava/util/function/Consumer;
      16: invokeinterface #129,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      21: aload_1
      22: invokevirtual #132                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList$Builder.build:()Lorg/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList;
      25: areturn

  private static java.util.Map<java.lang.String, org.sonarsource.sonarlint.core.serverapi.component.ServerProject> adapt(org.sonarsource.sonarlint.core.proto.Sonarlint$ProjectList);
    Code:
       0: new           #139                // class java/util/HashMap
       3: dup
       4: invokespecial #140                // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #143                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList.getProjectsByKeyMap:()Ljava/util/Map;
      12: astore_2
      13: aload_2
      14: invokeinterface #147,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      19: invokeinterface #153,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      24: astore_3
      25: aload_3
      26: invokeinterface #159,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          94
      34: aload_3
      35: invokeinterface #162,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #20                 // class java/util/Map$Entry
      43: astore        4
      45: aload         4
      47: invokeinterface #165,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      52: checkcast     #15                 // class org/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList$Project
      55: astore        5
      57: aload_1
      58: aload         4
      60: invokeinterface #168,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      65: checkcast     #170                // class java/lang/String
      68: new           #172                // class org/sonarsource/sonarlint/core/serverapi/component/DefaultRemoteProject
      71: dup
      72: aload         5
      74: invokevirtual #175                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList$Project.getKey:()Ljava/lang/String;
      77: aload         5
      79: invokevirtual #178                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList$Project.getName:()Ljava/lang/String;
      82: invokespecial #181                // Method org/sonarsource/sonarlint/core/serverapi/component/DefaultRemoteProject."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      85: invokeinterface #185,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      90: pop
      91: goto          25
      94: aload_1
      95: areturn

  private static void lambda$adapt$4(org.sonarsource.sonarlint.core.proto.Sonarlint$ProjectList$Project$Builder, org.sonarsource.sonarlint.core.proto.Sonarlint$ProjectList$Builder, org.sonarsource.sonarlint.core.serverapi.component.ServerProject);
    Code:
       0: aload_0
       1: invokevirtual #198                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList$Project$Builder.clear:()Lorg/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList$Project$Builder;
       4: pop
       5: aload_1
       6: aload_2
       7: invokeinterface #201,  1          // InterfaceMethod org/sonarsource/sonarlint/core/serverapi/component/ServerProject.getKey:()Ljava/lang/String;
      12: aload_0
      13: aload_2
      14: invokeinterface #201,  1          // InterfaceMethod org/sonarsource/sonarlint/core/serverapi/component/ServerProject.getKey:()Ljava/lang/String;
      19: invokevirtual #205                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList$Project$Builder.setKey:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList$Project$Builder;
      22: aload_2
      23: invokeinterface #206,  1          // InterfaceMethod org/sonarsource/sonarlint/core/serverapi/component/ServerProject.getName:()Ljava/lang/String;
      28: invokevirtual #209                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList$Project$Builder.setName:(Ljava/lang/String;)Lorg/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList$Project$Builder;
      31: invokevirtual #212                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList$Project$Builder.build:()Lorg/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList$Project;
      34: invokevirtual #216                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList$Builder.putProjectsByKey:(Ljava/lang/String;Lorg/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList$Project;)Lorg/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList$Builder;
      37: pop
      38: return

  private org.sonarsource.sonarlint.core.proto.Sonarlint$ProjectList lambda$getAll$3();
    Code:
       0: aload_0
       1: getfield      #48                 // Field storageFolder:Lorg/sonarsource/sonarlint/core/container/storage/StorageFolder;
       4: invokedynamic #229,  0            // InvokeDynamic #3:apply:()Ljava/util/function/Function;
       9: invokeinterface #235,  2          // InterfaceMethod org/sonarsource/sonarlint/core/container/storage/StorageFolder.readAction:(Ljava/util/function/Function;)Ljava/lang/Object;
      14: checkcast     #7                  // class org/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList
      17: areturn

  private static org.sonarsource.sonarlint.core.proto.Sonarlint$ProjectList lambda$getAll$2(java.nio.file.Path);
    Code:
       0: aload_0
       1: ldc           #32                 // String project_list.pb
       3: invokeinterface #241,  2          // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
       8: invokestatic  #245                // Method org/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList.parser:()Lcom/google/protobuf/Parser;
      11: invokestatic  #251                // Method org/sonarsource/sonarlint/core/container/storage/ProtobufUtil.readFile:(Ljava/nio/file/Path;Lcom/google/protobuf/Parser;)Lcom/google/protobuf/Message;
      14: checkcast     #7                  // class org/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList
      17: areturn

  private void lambda$store$1(java.util.List);
    Code:
       0: aload_1
       1: invokestatic  #255                // Method adapt:(Ljava/util/List;)Lorg/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList;
       4: astore_2
       5: aload_0
       6: getfield      #48                 // Field storageFolder:Lorg/sonarsource/sonarlint/core/container/storage/StorageFolder;
       9: aload_2
      10: invokedynamic #265,  0            // InvokeDynamic #4:accept:(Lorg/sonarsource/sonarlint/core/proto/Sonarlint$ProjectList;)Ljava/util/function/Consumer;
      15: invokeinterface #268,  2          // InterfaceMethod org/sonarsource/sonarlint/core/container/storage/StorageFolder.writeAction:(Ljava/util/function/Consumer;)V
      20: return

  private static void lambda$store$0(org.sonarsource.sonarlint.core.proto.Sonarlint$ProjectList, java.nio.file.Path);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #32                 // String project_list.pb
       4: invokeinterface #241,  2          // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
       9: invokestatic  #272                // Method org/sonarsource/sonarlint/core/container/storage/ProtobufUtil.writeToFile:(Lcom/google/protobuf/Message;Ljava/nio/file/Path;)V
      12: return
}
