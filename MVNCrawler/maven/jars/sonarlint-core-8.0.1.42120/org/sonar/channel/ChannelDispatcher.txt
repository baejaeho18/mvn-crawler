Compiled from "ChannelDispatcher.java"
public class org.sonar.channel.ChannelDispatcher<O> extends org.sonar.channel.Channel<O> {
  private static final org.sonarsource.sonarlint.core.commons.log.SonarLintLogger LOG;

  private final boolean failIfNoChannelToConsumeOneCharacter;

  private final org.sonar.channel.Channel<O>[] channels;

  public org.sonar.channel.ChannelDispatcher(java.util.List<org.sonar.channel.Channel>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #28                 // Method "<init>":(Ljava/util/List;Z)V
       6: return

  public org.sonar.channel.ChannelDispatcher(org.sonar.channel.Channel...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #40                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: iconst_0
       6: invokespecial #28                 // Method "<init>":(Ljava/util/List;Z)V
       9: return

  public org.sonar.channel.ChannelDispatcher(java.util.List<org.sonar.channel.Channel>, boolean);
    Code:
       0: aload_0
       1: invokespecial #44                 // Method org/sonar/channel/Channel."<init>":()V
       4: aload_0
       5: aload_1
       6: aload_1
       7: invokeinterface #50,  1           // InterfaceMethod java/util/List.size:()I
      12: anewarray     #5                  // class org/sonar/channel/Channel
      15: invokeinterface #54,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      20: checkcast     #55                 // class "[Lorg/sonar/channel/Channel;"
      23: putfield      #57                 // Field channels:[Lorg/sonar/channel/Channel;
      26: aload_0
      27: iload_2
      28: putfield      #59                 // Field failIfNoChannelToConsumeOneCharacter:Z
      31: return

  private org.sonar.channel.ChannelDispatcher(org.sonar.channel.ChannelDispatcher$Builder);
    Code:
       0: aload_0
       1: invokespecial #44                 // Method org/sonar/channel/Channel."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #62                 // Field org/sonar/channel/ChannelDispatcher$Builder.channels:Ljava/util/List;
       9: aload_1
      10: getfield      #62                 // Field org/sonar/channel/ChannelDispatcher$Builder.channels:Ljava/util/List;
      13: invokeinterface #50,  1           // InterfaceMethod java/util/List.size:()I
      18: anewarray     #5                  // class org/sonar/channel/Channel
      21: invokeinterface #54,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      26: checkcast     #55                 // class "[Lorg/sonar/channel/Channel;"
      29: putfield      #57                 // Field channels:[Lorg/sonar/channel/Channel;
      32: aload_0
      33: aload_1
      34: getfield      #63                 // Field org/sonar/channel/ChannelDispatcher$Builder.failIfNoChannelToConsumeOneCharacter:Z
      37: putfield      #59                 // Field failIfNoChannelToConsumeOneCharacter:Z
      40: return

  public boolean consume(org.sonar.channel.CodeReader, O);
    Code:
       0: aload_1
       1: invokevirtual #73                 // Method org/sonar/channel/CodeReader.peek:()I
       4: istore_3
       5: iload_3
       6: iconst_m1
       7: if_icmpeq     137
      10: iconst_0
      11: istore        4
      13: aload_0
      14: getfield      #57                 // Field channels:[Lorg/sonar/channel/Channel;
      17: astore        5
      19: aload         5
      21: arraylength
      22: istore        6
      24: iconst_0
      25: istore        7
      27: iload         7
      29: iload         6
      31: if_icmpge     63
      34: aload         5
      36: iload         7
      38: aaload
      39: astore        8
      41: aload         8
      43: aload_1
      44: aload_2
      45: invokevirtual #77                 // Method org/sonar/channel/Channel.consume:(Lorg/sonar/channel/CodeReader;Ljava/lang/Object;)Z
      48: ifeq          57
      51: iconst_1
      52: istore        4
      54: goto          63
      57: iinc          7, 1
      60: goto          27
      63: iload         4
      65: ifne          129
      68: aload_0
      69: getfield      #59                 // Field failIfNoChannelToConsumeOneCharacter:Z
      72: ifeq          124
      75: aload_1
      76: invokevirtual #73                 // Method org/sonar/channel/CodeReader.peek:()I
      79: i2c
      80: aload_1
      81: invokevirtual #73                 // Method org/sonar/channel/CodeReader.peek:()I
      84: aload_1
      85: invokevirtual #80                 // Method org/sonar/channel/CodeReader.getLinePosition:()I
      88: aload_1
      89: invokevirtual #83                 // Method org/sonar/channel/CodeReader.getColumnPosition:()I
      92: invokedynamic #95,  0             // InvokeDynamic #0:makeConcatWithConstants:(CIII)Ljava/lang/String;
      97: astore        5
      99: aload_0
     100: getfield      #59                 // Field failIfNoChannelToConsumeOneCharacter:Z
     103: ifeq          116
     106: new           #97                 // class java/lang/IllegalStateException
     109: dup
     110: aload         5
     112: invokespecial #100                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     115: athrow
     116: getstatic     #104                // Field LOG:Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
     119: aload         5
     121: invokevirtual #109                // Method org/sonarsource/sonarlint/core/commons/log/SonarLintLogger.debug:(Ljava/lang/String;)V
     124: aload_1
     125: invokevirtual #112                // Method org/sonar/channel/CodeReader.pop:()I
     128: pop
     129: aload_1
     130: invokevirtual #73                 // Method org/sonar/channel/CodeReader.peek:()I
     133: istore_3
     134: goto          5
     137: iconst_1
     138: ireturn

  org.sonar.channel.Channel[] getChannels();
    Code:
       0: aload_0
       1: getfield      #57                 // Field channels:[Lorg/sonar/channel/Channel;
       4: areturn

  public static org.sonar.channel.ChannelDispatcher$Builder builder();
    Code:
       0: new           #8                  // class org/sonar/channel/ChannelDispatcher$Builder
       3: dup
       4: invokespecial #129                // Method org/sonar/channel/ChannelDispatcher$Builder."<init>":()V
       7: areturn

  static {};
    Code:
       0: invokestatic  #134                // Method org/sonarsource/sonarlint/core/commons/log/SonarLintLogger.get:()Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
       3: putstatic     #104                // Field LOG:Lorg/sonarsource/sonarlint/core/commons/log/SonarLintLogger;
       6: return
}
