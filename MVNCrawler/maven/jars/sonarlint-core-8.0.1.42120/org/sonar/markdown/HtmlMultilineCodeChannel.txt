Compiled from "HtmlMultilineCodeChannel.java"
class org.sonar.markdown.HtmlMultilineCodeChannel extends org.sonar.channel.RegexChannel<org.sonar.markdown.MarkdownOutput> {
  private static final java.lang.String NEWLINE;

  private static final java.lang.String LANGUAGE;

  private static final java.lang.String DETECTION_REGEXP;

  private final java.util.regex.Matcher regexpMatcher;

  public org.sonar.markdown.HtmlMultilineCodeChannel();
    Code:
       0: aload_0
       1: ldc           #16                 // String ``([a-zA-Z][a-zA-Z0-9_]*+)?(?:\\n\\r|\\r|\\n)([\\s\\S]+?)(?:\\n\\r|\\r|\\n)``
       3: invokespecial #23                 // Method org/sonar/channel/RegexChannel."<init>":(Ljava/lang/String;)V
       6: aload_0
       7: ldc           #16                 // String ``([a-zA-Z][a-zA-Z0-9_]*+)?(?:\\n\\r|\\r|\\n)([\\s\\S]+?)(?:\\n\\r|\\r|\\n)``
       9: invokestatic  #29                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      12: ldc           #31                 // String
      14: invokevirtual #35                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      17: putfield      #37                 // Field regexpMatcher:Ljava/util/regex/Matcher;
      20: return

  protected void consume(java.lang.CharSequence, org.sonar.markdown.MarkdownOutput);
    Code:
       0: aload_0
       1: getfield      #37                 // Field regexpMatcher:Ljava/util/regex/Matcher;
       4: aload_1
       5: invokevirtual #46                 // Method java/util/regex/Matcher.reset:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       8: pop
       9: aload_0
      10: getfield      #37                 // Field regexpMatcher:Ljava/util/regex/Matcher;
      13: invokevirtual #50                 // Method java/util/regex/Matcher.matches:()Z
      16: pop
      17: aload_2
      18: ldc           #52                 // String <pre
      20: invokevirtual #58                 // Method org/sonar/markdown/MarkdownOutput.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      23: pop
      24: aload_0
      25: getfield      #37                 // Field regexpMatcher:Ljava/util/regex/Matcher;
      28: iconst_1
      29: invokevirtual #62                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      32: astore_3
      33: aload_3
      34: ifnull        57
      37: aload_2
      38: ldc           #64                 // String  lang=\"
      40: invokevirtual #58                 // Method org/sonar/markdown/MarkdownOutput.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      43: pop
      44: aload_2
      45: aload_3
      46: invokevirtual #58                 // Method org/sonar/markdown/MarkdownOutput.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      49: pop
      50: aload_2
      51: ldc           #66                 // String \"
      53: invokevirtual #58                 // Method org/sonar/markdown/MarkdownOutput.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      56: pop
      57: aload_2
      58: ldc           #70                 // String ><code>
      60: invokevirtual #58                 // Method org/sonar/markdown/MarkdownOutput.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      63: pop
      64: aload_2
      65: aload_0
      66: getfield      #37                 // Field regexpMatcher:Ljava/util/regex/Matcher;
      69: iconst_2
      70: invokevirtual #62                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      73: invokevirtual #58                 // Method org/sonar/markdown/MarkdownOutput.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      76: pop
      77: aload_2
      78: ldc           #72                 // String </code></pre>
      80: invokevirtual #58                 // Method org/sonar/markdown/MarkdownOutput.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      83: pop
      84: return

  protected void consume(java.lang.CharSequence, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #54                 // class org/sonar/markdown/MarkdownOutput
       6: invokevirtual #80                 // Method consume:(Ljava/lang/CharSequence;Lorg/sonar/markdown/MarkdownOutput;)V
       9: return
}
