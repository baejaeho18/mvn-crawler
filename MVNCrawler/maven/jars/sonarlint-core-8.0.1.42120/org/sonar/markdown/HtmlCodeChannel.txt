Compiled from "HtmlCodeChannel.java"
class org.sonar.markdown.HtmlCodeChannel extends org.sonar.channel.RegexChannel<org.sonar.markdown.MarkdownOutput> {
  public org.sonar.markdown.HtmlCodeChannel();
    Code:
       0: aload_0
       1: ldc           #10                 // String ``.+?``
       3: invokespecial #13                 // Method org/sonar/channel/RegexChannel."<init>":(Ljava/lang/String;)V
       6: return

  protected void consume(java.lang.CharSequence, org.sonar.markdown.MarkdownOutput);
    Code:
       0: aload_2
       1: ldc           #19                 // String <code>
       3: invokevirtual #25                 // Method org/sonar/markdown/MarkdownOutput.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
       6: pop
       7: aload_2
       8: aload_1
       9: iconst_2
      10: aload_1
      11: invokeinterface #31,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      16: iconst_2
      17: isub
      18: invokeinterface #35,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
      23: invokevirtual #25                 // Method org/sonar/markdown/MarkdownOutput.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      26: pop
      27: aload_2
      28: ldc           #37                 // String </code>
      30: invokevirtual #25                 // Method org/sonar/markdown/MarkdownOutput.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      33: pop
      34: return

  protected void consume(java.lang.CharSequence, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #21                 // class org/sonar/markdown/MarkdownOutput
       6: invokevirtual #44                 // Method consume:(Ljava/lang/CharSequence;Lorg/sonar/markdown/MarkdownOutput;)V
       9: return
}
