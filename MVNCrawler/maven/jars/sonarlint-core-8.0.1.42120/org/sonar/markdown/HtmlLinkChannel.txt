Compiled from "HtmlLinkChannel.java"
class org.sonar.markdown.HtmlLinkChannel extends org.sonar.channel.RegexChannel<org.sonar.markdown.MarkdownOutput> {
  private static final java.lang.String LINK_REGEX;

  private static final java.util.regex.Pattern LINK_PATTERN;

  public org.sonar.markdown.HtmlLinkChannel();
    Code:
       0: aload_0
       1: ldc           #10                 // String \\[([^\\]]+)\\]\\(([^\\)]+)\\)
       3: invokespecial #17                 // Method org/sonar/channel/RegexChannel."<init>":(Ljava/lang/String;)V
       6: return

  protected void consume(java.lang.CharSequence, org.sonar.markdown.MarkdownOutput);
    Code:
       0: getstatic     #23                 // Field LINK_PATTERN:Ljava/util/regex/Pattern;
       3: aload_1
       4: invokevirtual #29                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: astore_3
       8: aload_3
       9: invokevirtual #35                 // Method java/util/regex/Matcher.matches:()Z
      12: pop
      13: aload_3
      14: iconst_1
      15: invokevirtual #39                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      18: astore        4
      20: aload_3
      21: iconst_2
      22: invokevirtual #39                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      25: astore        5
      27: aload_2
      28: ldc           #41                 // String <a href=\"
      30: invokevirtual #47                 // Method org/sonar/markdown/MarkdownOutput.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      33: pop
      34: aload_2
      35: aload         5
      37: invokevirtual #47                 // Method org/sonar/markdown/MarkdownOutput.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      40: pop
      41: aload_2
      42: ldc           #49                 // String \" target=\"_blank\">
      44: invokevirtual #47                 // Method org/sonar/markdown/MarkdownOutput.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      47: pop
      48: aload_2
      49: aload         4
      51: invokevirtual #47                 // Method org/sonar/markdown/MarkdownOutput.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      54: pop
      55: aload_2
      56: ldc           #51                 // String </a>
      58: invokevirtual #47                 // Method org/sonar/markdown/MarkdownOutput.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      61: pop
      62: return

  protected void consume(java.lang.CharSequence, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #43                 // class org/sonar/markdown/MarkdownOutput
       6: invokevirtual #61                 // Method consume:(Ljava/lang/CharSequence;Lorg/sonar/markdown/MarkdownOutput;)V
       9: return

  static {};
    Code:
       0: ldc           #10                 // String \\[([^\\]]+)\\]\\(([^\\)]+)\\)
       2: invokestatic  #66                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #23                 // Field LINK_PATTERN:Ljava/util/regex/Pattern;
       8: return
}
