Compiled from "HtmlListChannel.java"
abstract class org.sonar.markdown.HtmlListChannel$ListElementChannel extends org.sonar.channel.RegexChannel<org.sonar.markdown.MarkdownOutput> {
  private java.lang.String listElement;

  final org.sonar.markdown.HtmlListChannel this$0;

  protected org.sonar.markdown.HtmlListChannel$ListElementChannel(org.sonar.markdown.HtmlListChannel, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field this$0:Lorg/sonar/markdown/HtmlListChannel;
       5: aload_0
       6: new           #19                 // class java/lang/StringBuilder
       9: dup
      10: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      13: ldc           #24                 // String \\s*+
      15: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: aload_2
      19: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #30                 // String \\s[^\r\n]*+
      24: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #37                 // Method org/sonar/channel/RegexChannel."<init>":(Ljava/lang/String;)V
      33: aload_0
      34: aload_3
      35: putfield      #39                 // Field listElement:Ljava/lang/String;
      38: return

  protected void consume(java.lang.CharSequence, org.sonar.markdown.MarkdownOutput);
    Code:
       0: aload_0
       1: getfield      #17                 // Field this$0:Lorg/sonar/markdown/HtmlListChannel;
       4: invokestatic  #48                 // Method org/sonar/markdown/HtmlListChannel.access$100:(Lorg/sonar/markdown/HtmlListChannel;)Z
       7: ifne          51
      10: aload_2
      11: new           #19                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #50                 // String <
      20: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: getfield      #39                 // Field listElement:Ljava/lang/String;
      27: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #52                 // String >
      32: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokevirtual #57                 // Method org/sonar/markdown/MarkdownOutput.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      41: pop
      42: aload_0
      43: getfield      #17                 // Field this$0:Lorg/sonar/markdown/HtmlListChannel;
      46: iconst_1
      47: invokestatic  #61                 // Method org/sonar/markdown/HtmlListChannel.access$102:(Lorg/sonar/markdown/HtmlListChannel;Z)Z
      50: pop
      51: aload_2
      52: ldc           #63                 // String <li>
      54: invokevirtual #57                 // Method org/sonar/markdown/MarkdownOutput.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      57: pop
      58: aload_2
      59: aload_1
      60: aload_0
      61: aload_1
      62: invokespecial #67                 // Method searchIndexOfFirstCharacter:(Ljava/lang/CharSequence;)I
      65: aload_1
      66: invokeinterface #73,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      71: invokeinterface #77,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
      76: invokevirtual #57                 // Method org/sonar/markdown/MarkdownOutput.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      79: pop
      80: aload_2
      81: ldc           #79                 // String </li>
      83: invokevirtual #57                 // Method org/sonar/markdown/MarkdownOutput.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      86: pop
      87: return

  private int searchIndexOfFirstCharacter(java.lang.CharSequence);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_1
       4: invokeinterface #73,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       9: if_icmpge     87
      12: aload_1
      13: iload_2
      14: invokeinterface #87,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      19: bipush        42
      21: if_icmpeq     37
      24: aload_1
      25: iload_2
      26: invokeinterface #87,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      31: invokestatic  #93                 // Method java/lang/Character.isDigit:(C)Z
      34: ifeq          81
      37: aload_1
      38: iload_2
      39: iconst_1
      40: iadd
      41: invokeinterface #87,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      46: bipush        46
      48: if_icmpne     54
      51: iinc          2, 1
      54: iinc          2, 1
      57: iload_2
      58: aload_1
      59: invokeinterface #73,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      64: if_icmpge     81
      67: aload_1
      68: iload_2
      69: invokeinterface #87,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      74: bipush        32
      76: if_icmpeq     54
      79: iload_2
      80: ireturn
      81: iinc          2, 1
      84: goto          2
      87: aload_1
      88: invokeinterface #73,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      93: iconst_1
      94: isub
      95: ireturn

  protected void consume(java.lang.CharSequence, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #54                 // class org/sonar/markdown/MarkdownOutput
       6: invokevirtual #98                 // Method consume:(Ljava/lang/CharSequence;Lorg/sonar/markdown/MarkdownOutput;)V
       9: return

  static java.lang.String access$000(org.sonar.markdown.HtmlListChannel$ListElementChannel);
    Code:
       0: aload_0
       1: getfield      #39                 // Field listElement:Ljava/lang/String;
       4: areturn
}
