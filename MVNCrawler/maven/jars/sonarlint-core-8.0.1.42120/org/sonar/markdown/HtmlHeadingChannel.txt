Compiled from "HtmlHeadingChannel.java"
public class org.sonar.markdown.HtmlHeadingChannel extends org.sonar.channel.RegexChannel<org.sonar.markdown.MarkdownOutput> {
  private static final int MAX_HEADING_DEPTH;

  public org.sonar.markdown.HtmlHeadingChannel();
    Code:
       0: aload_0
       1: ldc           #13                 // String \\s*=+\\s[^\r\n]*+[\r\n]*
       3: invokespecial #16                 // Method org/sonar/channel/RegexChannel."<init>":(Ljava/lang/String;)V
       6: return

  protected void consume(java.lang.CharSequence, org.sonar.markdown.MarkdownOutput);
    Code:
       0: iconst_0
       1: istore_3
       2: iconst_0
       3: istore        4
       5: iload_3
       6: aload_1
       7: invokeinterface #26,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      12: if_icmpge     34
      15: aload_1
      16: iload_3
      17: invokeinterface #30,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      22: invokestatic  #36                 // Method java/lang/Character.isWhitespace:(C)Z
      25: ifeq          34
      28: iinc          3, 1
      31: goto          5
      34: iload_3
      35: aload_1
      36: invokeinterface #26,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      41: if_icmpge     71
      44: iload_3
      45: bipush        6
      47: if_icmpgt     71
      50: aload_1
      51: iload_3
      52: invokeinterface #30,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      57: bipush        61
      59: if_icmpne     71
      62: iinc          3, 1
      65: iinc          4, 1
      68: goto          34
      71: iload_3
      72: aload_1
      73: invokeinterface #26,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      78: if_icmpge     100
      81: aload_1
      82: iload_3
      83: invokeinterface #30,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      88: invokestatic  #36                 // Method java/lang/Character.isWhitespace:(C)Z
      91: ifeq          100
      94: iinc          3, 1
      97: goto          71
     100: aload_1
     101: iload_3
     102: aload_1
     103: invokeinterface #26,  1           // InterfaceMethod java/lang/CharSequence.length:()I
     108: invokeinterface #40,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
     113: astore        5
     115: aload_2
     116: new           #42                 // class java/lang/StringBuilder
     119: dup
     120: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     123: ldc           #46                 // String <h
     125: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: iload         4
     130: invokevirtual #53                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     133: ldc           #55                 // String >
     135: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: invokevirtual #64                 // Method org/sonar/markdown/MarkdownOutput.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     144: pop
     145: aload_2
     146: aload         5
     148: invokeinterface #65,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
     153: invokevirtual #70                 // Method java/lang/String.trim:()Ljava/lang/String;
     156: invokevirtual #64                 // Method org/sonar/markdown/MarkdownOutput.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     159: pop
     160: aload_2
     161: new           #42                 // class java/lang/StringBuilder
     164: dup
     165: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     168: ldc           #72                 // String </h
     170: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: iload         4
     175: invokevirtual #53                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     178: ldc           #55                 // String >
     180: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     183: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     186: invokevirtual #64                 // Method org/sonar/markdown/MarkdownOutput.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     189: pop
     190: return

  protected void consume(java.lang.CharSequence, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #61                 // class org/sonar/markdown/MarkdownOutput
       6: invokevirtual #82                 // Method consume:(Ljava/lang/CharSequence;Lorg/sonar/markdown/MarkdownOutput;)V
       9: return
}
