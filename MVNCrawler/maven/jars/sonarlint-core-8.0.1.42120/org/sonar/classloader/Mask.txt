Compiled from "Mask.java"
public class org.sonar.classloader.Mask {
  private static final java.lang.String ROOT;

  private final java.util.List<java.lang.String> inclusions;

  private final java.util.List<java.lang.String> exclusions;

  public org.sonar.classloader.Mask();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #19                 // class java/util/ArrayList
       8: dup
       9: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #22                 // Field inclusions:Ljava/util/List;
      15: aload_0
      16: new           #19                 // class java/util/ArrayList
      19: dup
      20: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #24                 // Field exclusions:Ljava/util/List;
      26: return

  java.util.List<java.lang.String> getInclusions();
    Code:
       0: aload_0
       1: getfield      #22                 // Field inclusions:Ljava/util/List;
       4: areturn

  java.util.List<java.lang.String> getExclusions();
    Code:
       0: aload_0
       1: getfield      #24                 // Field exclusions:Ljava/util/List;
       4: areturn

  public org.sonar.classloader.Mask addInclusion(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #22                 // Field inclusions:Ljava/util/List;
       4: aload_1
       5: invokeinterface #38,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public org.sonar.classloader.Mask addExclusion(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #24                 // Field exclusions:Ljava/util/List;
       4: aload_1
       5: invokeinterface #38,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  boolean acceptClass(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #22                 // Field inclusions:Ljava/util/List;
       4: invokeinterface #46,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          26
      12: aload_0
      13: getfield      #24                 // Field exclusions:Ljava/util/List;
      16: invokeinterface #46,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      21: ifeq          26
      24: iconst_1
      25: ireturn
      26: aload_0
      27: aload_0
      28: aload_1
      29: invokespecial #50                 // Method classToResource:(Ljava/lang/String;)Ljava/lang/String;
      32: invokevirtual #53                 // Method acceptResource:(Ljava/lang/String;)Z
      35: ireturn

  boolean acceptResource(java.lang.String);
    Code:
       0: iconst_1
       1: istore_2
       2: aload_0
       3: getfield      #22                 // Field inclusions:Ljava/util/List;
       6: invokeinterface #46,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      11: ifne          64
      14: iconst_0
      15: istore_2
      16: aload_0
      17: getfield      #22                 // Field inclusions:Ljava/util/List;
      20: invokeinterface #58,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      25: astore_3
      26: aload_3
      27: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          64
      35: aload_3
      36: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #69                 // class java/lang/String
      44: astore        4
      46: aload_0
      47: aload_1
      48: aload         4
      50: invokespecial #73                 // Method matchPattern:(Ljava/lang/String;Ljava/lang/String;)Z
      53: ifeq          61
      56: iconst_1
      57: istore_2
      58: goto          64
      61: goto          26
      64: iload_2
      65: ifeq          116
      68: aload_0
      69: getfield      #24                 // Field exclusions:Ljava/util/List;
      72: invokeinterface #58,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      77: astore_3
      78: aload_3
      79: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      84: ifeq          116
      87: aload_3
      88: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      93: checkcast     #69                 // class java/lang/String
      96: astore        4
      98: aload_0
      99: aload_1
     100: aload         4
     102: invokespecial #73                 // Method matchPattern:(Ljava/lang/String;Ljava/lang/String;)Z
     105: ifeq          113
     108: iconst_0
     109: istore_2
     110: goto          116
     113: goto          78
     116: iload_2
     117: ireturn

  private boolean matchPattern(java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: ldc           #9                  // String /
       3: invokevirtual #83                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifne          34
       9: aload_2
      10: ldc           #9                  // String /
      12: invokevirtual #86                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      15: ifeq          26
      18: aload_1
      19: aload_2
      20: invokevirtual #89                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      23: ifne          34
      26: aload_2
      27: aload_1
      28: invokevirtual #83                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn

  void merge(org.sonar.classloader.Mask);
    Code:
       0: new           #19                 // class java/util/ArrayList
       3: dup
       4: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #22                 // Field inclusions:Ljava/util/List;
      12: invokeinterface #46,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      17: ifeq          34
      20: aload_2
      21: aload_1
      22: getfield      #22                 // Field inclusions:Ljava/util/List;
      25: invokeinterface #96,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      30: pop
      31: goto          236
      34: aload_1
      35: getfield      #22                 // Field inclusions:Ljava/util/List;
      38: invokeinterface #46,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      43: ifeq          60
      46: aload_2
      47: aload_0
      48: getfield      #22                 // Field inclusions:Ljava/util/List;
      51: invokeinterface #96,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      56: pop
      57: goto          236
      60: aload_0
      61: getfield      #22                 // Field inclusions:Ljava/util/List;
      64: invokeinterface #58,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      69: astore_3
      70: aload_3
      71: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      76: ifeq          148
      79: aload_3
      80: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      85: checkcast     #69                 // class java/lang/String
      88: astore        4
      90: aload_1
      91: getfield      #22                 // Field inclusions:Ljava/util/List;
      94: invokeinterface #58,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      99: astore        5
     101: aload         5
     103: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     108: ifeq          145
     111: aload         5
     113: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     118: checkcast     #69                 // class java/lang/String
     121: astore        6
     123: aload         6
     125: aload         4
     127: invokevirtual #89                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     130: ifeq          142
     133: aload_2
     134: aload         6
     136: invokeinterface #38,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     141: pop
     142: goto          101
     145: goto          70
     148: aload_1
     149: getfield      #22                 // Field inclusions:Ljava/util/List;
     152: invokeinterface #58,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     157: astore_3
     158: aload_3
     159: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     164: ifeq          236
     167: aload_3
     168: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     173: checkcast     #69                 // class java/lang/String
     176: astore        4
     178: aload_0
     179: getfield      #22                 // Field inclusions:Ljava/util/List;
     182: invokeinterface #58,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     187: astore        5
     189: aload         5
     191: invokeinterface #63,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     196: ifeq          233
     199: aload         5
     201: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     206: checkcast     #69                 // class java/lang/String
     209: astore        6
     211: aload         6
     213: aload         4
     215: invokevirtual #89                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     218: ifeq          230
     221: aload_2
     222: aload         6
     224: invokeinterface #38,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     229: pop
     230: goto          189
     233: goto          158
     236: aload_0
     237: getfield      #22                 // Field inclusions:Ljava/util/List;
     240: invokeinterface #99,  1           // InterfaceMethod java/util/List.clear:()V
     245: aload_0
     246: getfield      #22                 // Field inclusions:Ljava/util/List;
     249: aload_2
     250: invokeinterface #96,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     255: pop
     256: aload_0
     257: getfield      #24                 // Field exclusions:Ljava/util/List;
     260: aload_1
     261: getfield      #24                 // Field exclusions:Ljava/util/List;
     264: invokeinterface #96,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     269: pop
     270: return

  private java.lang.String classToResource(java.lang.String);
    Code:
       0: new           #104                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: bipush        46
      10: bipush        47
      12: invokevirtual #109                // Method java/lang/String.replace:(CC)Ljava/lang/String;
      15: invokevirtual #113                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc           #115                // String .class
      20: invokevirtual #113                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #119                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: areturn
}
