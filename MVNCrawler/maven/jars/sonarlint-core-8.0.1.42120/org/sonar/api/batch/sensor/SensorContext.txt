Compiled from "SensorContext.java"
public interface org.sonar.api.batch.sensor.SensorContext {
  public abstract org.sonar.api.config.Settings settings();

  public abstract org.sonar.api.config.Configuration config();

  public abstract org.sonar.api.batch.fs.FileSystem fileSystem();

  public abstract org.sonar.api.batch.rule.ActiveRules activeRules();

  public abstract org.sonar.api.batch.fs.InputModule module();

  public abstract org.sonar.api.scanner.fs.InputProject project();

  public abstract org.sonar.api.utils.Version getSonarQubeVersion();

  public abstract org.sonar.api.SonarRuntime runtime();

  public abstract boolean isCancelled();

  public abstract <G extends java.io.Serializable> org.sonar.api.batch.sensor.measure.NewMeasure<G> newMeasure();

  public abstract org.sonar.api.batch.sensor.issue.NewIssue newIssue();

  public abstract org.sonar.api.batch.sensor.issue.NewExternalIssue newExternalIssue();

  public abstract org.sonar.api.batch.sensor.rule.NewAdHocRule newAdHocRule();

  public abstract org.sonar.api.batch.sensor.highlighting.NewHighlighting newHighlighting();

  public abstract org.sonar.api.batch.sensor.symbol.NewSymbolTable newSymbolTable();

  public abstract org.sonar.api.batch.sensor.coverage.NewCoverage newCoverage();

  public abstract org.sonar.api.batch.sensor.cpd.NewCpdTokens newCpdTokens();

  public abstract org.sonar.api.batch.sensor.error.NewAnalysisError newAnalysisError();

  public abstract org.sonar.api.batch.sensor.code.NewSignificantCode newSignificantCode();

  public abstract void addContextProperty(java.lang.String, java.lang.String);

  public abstract void markForPublishing(org.sonar.api.batch.fs.InputFile);
}
