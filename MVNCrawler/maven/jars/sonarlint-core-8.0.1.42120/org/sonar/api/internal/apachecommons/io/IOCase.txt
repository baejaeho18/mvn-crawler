Compiled from "IOCase.java"
public final class org.sonar.api.internal.apachecommons.io.IOCase extends java.lang.Enum<org.sonar.api.internal.apachecommons.io.IOCase> {
  public static final org.sonar.api.internal.apachecommons.io.IOCase SENSITIVE;

  public static final org.sonar.api.internal.apachecommons.io.IOCase INSENSITIVE;

  public static final org.sonar.api.internal.apachecommons.io.IOCase SYSTEM;

  private static final long serialVersionUID;

  private final java.lang.String name;

  private final transient boolean sensitive;

  private static final org.sonar.api.internal.apachecommons.io.IOCase[] $VALUES;

  public static org.sonar.api.internal.apachecommons.io.IOCase[] values();
    Code:
       0: getstatic     #24                 // Field $VALUES:[Lorg/sonar/api/internal/apachecommons/io/IOCase;
       3: invokevirtual #29                 // Method "[Lorg/sonar/api/internal/apachecommons/io/IOCase;".clone:()Ljava/lang/Object;
       6: checkcast     #25                 // class "[Lorg/sonar/api/internal/apachecommons/io/IOCase;"
       9: areturn

  public static org.sonar.api.internal.apachecommons.io.IOCase valueOf(java.lang.String);
    Code:
       0: ldc           #2                  // class org/sonar/api/internal/apachecommons/io/IOCase
       2: aload_0
       3: invokestatic  #34                 // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #2                  // class org/sonar/api/internal/apachecommons/io/IOCase
       9: areturn

  public static org.sonar.api.internal.apachecommons.io.IOCase forName(java.lang.String);
    Code:
       0: invokestatic  #37                 // Method values:()[Lorg/sonar/api/internal/apachecommons/io/IOCase;
       3: astore_1
       4: aload_1
       5: arraylength
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iload_2
      11: if_icmpge     40
      14: aload_1
      15: iload_3
      16: aaload
      17: astore        4
      19: aload         4
      21: invokevirtual #41                 // Method getName:()Ljava/lang/String;
      24: aload_0
      25: invokevirtual #47                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: ifeq          34
      31: aload         4
      33: areturn
      34: iinc          3, 1
      37: goto          9
      40: new           #49                 // class java/lang/IllegalArgumentException
      43: dup
      44: new           #51                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #57                 // String Invalid IOCase name:
      53: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #67                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow

  private org.sonar.api.internal.apachecommons.io.IOCase(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #73                 // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: aload_3
       8: putfield      #75                 // Field name:Ljava/lang/String;
      11: aload_0
      12: iload         4
      14: putfield      #77                 // Field sensitive:Z
      17: return

  private java.lang.Object readResolve();
    Code:
       0: aload_0
       1: getfield      #75                 // Field name:Ljava/lang/String;
       4: invokestatic  #81                 // Method forName:(Ljava/lang/String;)Lorg/sonar/api/internal/apachecommons/io/IOCase;
       7: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #75                 // Field name:Ljava/lang/String;
       4: areturn

  public boolean isCaseSensitive();
    Code:
       0: aload_0
       1: getfield      #77                 // Field sensitive:Z
       4: ireturn

  public int checkCompareTo(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #87                 // String str1
       3: invokestatic  #93                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #95                 // String str2
      10: invokestatic  #93                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: getfield      #77                 // Field sensitive:Z
      18: ifeq          29
      21: aload_1
      22: aload_2
      23: invokevirtual #99                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      26: goto          34
      29: aload_1
      30: aload_2
      31: invokevirtual #102                // Method java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I
      34: ireturn

  public boolean checkEquals(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #87                 // String str1
       3: invokestatic  #93                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #95                 // String str2
      10: invokestatic  #93                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: getfield      #77                 // Field sensitive:Z
      18: ifeq          29
      21: aload_1
      22: aload_2
      23: invokevirtual #47                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      26: goto          34
      29: aload_1
      30: aload_2
      31: invokevirtual #108                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      34: ireturn

  public boolean checkStartsWith(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #77                 // Field sensitive:Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: iconst_0
      14: aload_2
      15: iconst_0
      16: aload_2
      17: invokevirtual #113                // Method java/lang/String.length:()I
      20: invokevirtual #117                // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z
      23: ireturn

  public boolean checkEndsWith(java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: invokevirtual #113                // Method java/lang/String.length:()I
       4: istore_3
       5: aload_1
       6: aload_0
       7: getfield      #77                 // Field sensitive:Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: aload_1
      19: invokevirtual #113                // Method java/lang/String.length:()I
      22: iload_3
      23: isub
      24: aload_2
      25: iconst_0
      26: iload_3
      27: invokevirtual #117                // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z
      30: ireturn

  public int checkIndexOf(java.lang.String, int, java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #113                // Method java/lang/String.length:()I
       4: aload_3
       5: invokevirtual #113                // Method java/lang/String.length:()I
       8: isub
       9: istore        4
      11: iload         4
      13: iload_2
      14: if_icmplt     47
      17: iload_2
      18: istore        5
      20: iload         5
      22: iload         4
      24: if_icmpgt     47
      27: aload_0
      28: aload_1
      29: iload         5
      31: aload_3
      32: invokevirtual #129                // Method checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z
      35: ifeq          41
      38: iload         5
      40: ireturn
      41: iinc          5, 1
      44: goto          20
      47: iconst_m1
      48: ireturn

  public boolean checkRegionMatches(java.lang.String, int, java.lang.String);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #77                 // Field sensitive:Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: iload_2
      14: aload_3
      15: iconst_0
      16: aload_3
      17: invokevirtual #113                // Method java/lang/String.length:()I
      20: invokevirtual #117                // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z
      23: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #75                 // Field name:Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: new           #2                  // class org/sonar/api/internal/apachecommons/io/IOCase
       3: dup
       4: ldc           #135                // String SENSITIVE
       6: iconst_0
       7: ldc           #137                // String Sensitive
       9: iconst_1
      10: invokespecial #139                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Z)V
      13: putstatic     #141                // Field SENSITIVE:Lorg/sonar/api/internal/apachecommons/io/IOCase;
      16: new           #2                  // class org/sonar/api/internal/apachecommons/io/IOCase
      19: dup
      20: ldc           #142                // String INSENSITIVE
      22: iconst_1
      23: ldc           #144                // String Insensitive
      25: iconst_0
      26: invokespecial #139                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Z)V
      29: putstatic     #146                // Field INSENSITIVE:Lorg/sonar/api/internal/apachecommons/io/IOCase;
      32: new           #2                  // class org/sonar/api/internal/apachecommons/io/IOCase
      35: dup
      36: ldc           #147                // String SYSTEM
      38: iconst_2
      39: ldc           #149                // String System
      41: invokestatic  #154                // Method org/sonar/api/internal/apachecommons/io/FilenameUtils.isSystemWindows:()Z
      44: ifne          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: invokespecial #139                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Z)V
      55: putstatic     #156                // Field SYSTEM:Lorg/sonar/api/internal/apachecommons/io/IOCase;
      58: iconst_3
      59: anewarray     #2                  // class org/sonar/api/internal/apachecommons/io/IOCase
      62: dup
      63: iconst_0
      64: getstatic     #141                // Field SENSITIVE:Lorg/sonar/api/internal/apachecommons/io/IOCase;
      67: aastore
      68: dup
      69: iconst_1
      70: getstatic     #146                // Field INSENSITIVE:Lorg/sonar/api/internal/apachecommons/io/IOCase;
      73: aastore
      74: dup
      75: iconst_2
      76: getstatic     #156                // Field SYSTEM:Lorg/sonar/api/internal/apachecommons/io/IOCase;
      79: aastore
      80: putstatic     #24                 // Field $VALUES:[Lorg/sonar/api/internal/apachecommons/io/IOCase;
      83: return
}
