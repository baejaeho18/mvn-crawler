Compiled from "PathUtils.java"
public final class org.sonar.api.internal.apachecommons.io.file.PathUtils {
  public static final org.sonar.api.internal.apachecommons.io.file.DeleteOption[] EMPTY_DELETE_OPTION_ARRAY;

  public static final java.nio.file.FileVisitOption[] EMPTY_FILE_VISIT_OPTION_ARRAY;

  public static final java.nio.file.LinkOption[] EMPTY_LINK_OPTION_ARRAY;

  public static final java.nio.file.OpenOption[] EMPTY_OPEN_OPTION_ARRAY;

  private static org.sonar.api.internal.apachecommons.io.file.AccumulatorPathVisitor accumulate(java.nio.file.Path, int, java.nio.file.FileVisitOption[]) throws java.io.IOException;
    Code:
       0: invokestatic  #41                 // Method org/sonar/api/internal/apachecommons/io/file/AccumulatorPathVisitor.withLongCounters:()Lorg/sonar/api/internal/apachecommons/io/file/AccumulatorPathVisitor;
       3: aload_0
       4: aload_2
       5: invokestatic  #45                 // Method toFileVisitOptionSet:([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;
       8: iload_1
       9: invokestatic  #49                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;
      12: checkcast     #37                 // class org/sonar/api/internal/apachecommons/io/file/AccumulatorPathVisitor
      15: areturn

  public static org.sonar.api.internal.apachecommons.io.file.Counters$PathCounters cleanDirectory(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #58                 // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/sonar/api/internal/apachecommons/io/file/DeleteOption;
       4: invokestatic  #61                 // Method cleanDirectory:(Ljava/nio/file/Path;[Lorg/sonar/api/internal/apachecommons/io/file/DeleteOption;)Lorg/sonar/api/internal/apachecommons/io/file/Counters$PathCounters;
       7: areturn

  public static org.sonar.api.internal.apachecommons.io.file.Counters$PathCounters cleanDirectory(java.nio.file.Path, org.sonar.api.internal.apachecommons.io.file.DeleteOption...) throws java.io.IOException;
    Code:
       0: new           #63                 // class org/sonar/api/internal/apachecommons/io/file/CleaningPathVisitor
       3: dup
       4: invokestatic  #67                 // Method org/sonar/api/internal/apachecommons/io/file/Counters.longPathCounters:()Lorg/sonar/api/internal/apachecommons/io/file/Counters$PathCounters;
       7: aload_1
       8: iconst_0
       9: anewarray     #69                 // class java/lang/String
      12: invokespecial #73                 // Method org/sonar/api/internal/apachecommons/io/file/CleaningPathVisitor."<init>":(Lorg/sonar/api/internal/apachecommons/io/file/Counters$PathCounters;[Lorg/sonar/api/internal/apachecommons/io/file/DeleteOption;[Ljava/lang/String;)V
      15: aload_0
      16: invokestatic  #76                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
      19: checkcast     #63                 // class org/sonar/api/internal/apachecommons/io/file/CleaningPathVisitor
      22: invokevirtual #79                 // Method org/sonar/api/internal/apachecommons/io/file/CleaningPathVisitor.getPathCounters:()Lorg/sonar/api/internal/apachecommons/io/file/Counters$PathCounters;
      25: areturn

  public static org.sonar.api.internal.apachecommons.io.file.Counters$PathCounters copyDirectory(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException;
    Code:
       0: new           #84                 // class org/sonar/api/internal/apachecommons/io/file/CopyDirectoryVisitor
       3: dup
       4: invokestatic  #67                 // Method org/sonar/api/internal/apachecommons/io/file/Counters.longPathCounters:()Lorg/sonar/api/internal/apachecommons/io/file/Counters$PathCounters;
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #87                 // Method org/sonar/api/internal/apachecommons/io/file/CopyDirectoryVisitor."<init>":(Lorg/sonar/api/internal/apachecommons/io/file/Counters$PathCounters;Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V
      13: aload_0
      14: invokestatic  #76                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
      17: checkcast     #84                 // class org/sonar/api/internal/apachecommons/io/file/CopyDirectoryVisitor
      20: invokevirtual #88                 // Method org/sonar/api/internal/apachecommons/io/file/CopyDirectoryVisitor.getPathCounters:()Lorg/sonar/api/internal/apachecommons/io/file/Counters$PathCounters;
      23: areturn

  public static java.nio.file.Path copyFile(java.net.URL, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #102                // Method java/net/URL.openStream:()Ljava/io/InputStream;
       4: astore_3
       5: aconst_null
       6: astore        4
       8: aload_3
       9: aload_1
      10: aload_2
      11: invokestatic  #108                // Method java/nio/file/Files.copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J
      14: pop2
      15: aload_1
      16: astore        5
      18: aload_3
      19: ifnull        50
      22: aload         4
      24: ifnull        46
      27: aload_3
      28: invokevirtual #114                // Method java/io/InputStream.close:()V
      31: goto          50
      34: astore        6
      36: aload         4
      38: aload         6
      40: invokevirtual #121                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      43: goto          50
      46: aload_3
      47: invokevirtual #114                // Method java/io/InputStream.close:()V
      50: aload         5
      52: areturn
      53: astore        5
      55: aload         5
      57: astore        4
      59: aload         5
      61: athrow
      62: astore        7
      64: aload_3
      65: ifnull        96
      68: aload         4
      70: ifnull        92
      73: aload_3
      74: invokevirtual #114                // Method java/io/InputStream.close:()V
      77: goto          96
      80: astore        8
      82: aload         4
      84: aload         8
      86: invokevirtual #121                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      89: goto          96
      92: aload_3
      93: invokevirtual #114                // Method java/io/InputStream.close:()V
      96: aload         7
      98: athrow
    Exception table:
       from    to  target type
          27    31    34   Class java/lang/Throwable
           8    18    53   Class java/lang/Throwable
           8    18    62   any
          73    77    80   Class java/lang/Throwable
          53    64    62   any

  public static java.nio.file.Path copyFileToDirectory(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokeinterface #132,  1          // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
       8: invokeinterface #136,  2          // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
      13: aload_2
      14: invokestatic  #138                // Method java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
      17: areturn

  public static java.nio.file.Path copyFileToDirectory(java.net.URL, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #102                // Method java/net/URL.openStream:()Ljava/io/InputStream;
       4: astore_3
       5: aconst_null
       6: astore        4
       8: aload_3
       9: aload_1
      10: aload_0
      11: invokevirtual #142                // Method java/net/URL.getFile:()Ljava/lang/String;
      14: invokeinterface #145,  2          // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      19: aload_2
      20: invokestatic  #108                // Method java/nio/file/Files.copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J
      23: pop2
      24: aload_1
      25: astore        5
      27: aload_3
      28: ifnull        59
      31: aload         4
      33: ifnull        55
      36: aload_3
      37: invokevirtual #114                // Method java/io/InputStream.close:()V
      40: goto          59
      43: astore        6
      45: aload         4
      47: aload         6
      49: invokevirtual #121                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      52: goto          59
      55: aload_3
      56: invokevirtual #114                // Method java/io/InputStream.close:()V
      59: aload         5
      61: areturn
      62: astore        5
      64: aload         5
      66: astore        4
      68: aload         5
      70: athrow
      71: astore        7
      73: aload_3
      74: ifnull        105
      77: aload         4
      79: ifnull        101
      82: aload_3
      83: invokevirtual #114                // Method java/io/InputStream.close:()V
      86: goto          105
      89: astore        8
      91: aload         4
      93: aload         8
      95: invokevirtual #121                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      98: goto          105
     101: aload_3
     102: invokevirtual #114                // Method java/io/InputStream.close:()V
     105: aload         7
     107: athrow
    Exception table:
       from    to  target type
          36    40    43   Class java/lang/Throwable
           8    27    62   Class java/lang/Throwable
           8    27    71   any
          82    86    89   Class java/lang/Throwable
          62    73    71   any

  public static org.sonar.api.internal.apachecommons.io.file.Counters$PathCounters countDirectory(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: new           #148                // class org/sonar/api/internal/apachecommons/io/file/CountingPathVisitor
       3: dup
       4: invokestatic  #67                 // Method org/sonar/api/internal/apachecommons/io/file/Counters.longPathCounters:()Lorg/sonar/api/internal/apachecommons/io/file/Counters$PathCounters;
       7: invokespecial #151                // Method org/sonar/api/internal/apachecommons/io/file/CountingPathVisitor."<init>":(Lorg/sonar/api/internal/apachecommons/io/file/Counters$PathCounters;)V
      10: aload_0
      11: invokestatic  #76                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
      14: checkcast     #148                // class org/sonar/api/internal/apachecommons/io/file/CountingPathVisitor
      17: invokevirtual #152                // Method org/sonar/api/internal/apachecommons/io/file/CountingPathVisitor.getPathCounters:()Lorg/sonar/api/internal/apachecommons/io/file/Counters$PathCounters;
      20: areturn

  public static org.sonar.api.internal.apachecommons.io.file.Counters$PathCounters delete(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #58                 // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/sonar/api/internal/apachecommons/io/file/DeleteOption;
       4: invokestatic  #155                // Method delete:(Ljava/nio/file/Path;[Lorg/sonar/api/internal/apachecommons/io/file/DeleteOption;)Lorg/sonar/api/internal/apachecommons/io/file/Counters$PathCounters;
       7: areturn

  public static org.sonar.api.internal.apachecommons.io.file.Counters$PathCounters delete(java.nio.file.Path, org.sonar.api.internal.apachecommons.io.file.DeleteOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #158                // class java/nio/file/LinkOption
       5: dup
       6: iconst_0
       7: getstatic     #162                // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
      10: aastore
      11: invokestatic  #166                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      14: ifeq          25
      17: aload_0
      18: aload_1
      19: invokestatic  #169                // Method deleteDirectory:(Ljava/nio/file/Path;[Lorg/sonar/api/internal/apachecommons/io/file/DeleteOption;)Lorg/sonar/api/internal/apachecommons/io/file/Counters$PathCounters;
      22: goto          30
      25: aload_0
      26: aload_1
      27: invokestatic  #172                // Method deleteFile:(Ljava/nio/file/Path;[Lorg/sonar/api/internal/apachecommons/io/file/DeleteOption;)Lorg/sonar/api/internal/apachecommons/io/file/Counters$PathCounters;
      30: areturn

  public static org.sonar.api.internal.apachecommons.io.file.Counters$PathCounters deleteDirectory(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #58                 // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/sonar/api/internal/apachecommons/io/file/DeleteOption;
       4: invokestatic  #169                // Method deleteDirectory:(Ljava/nio/file/Path;[Lorg/sonar/api/internal/apachecommons/io/file/DeleteOption;)Lorg/sonar/api/internal/apachecommons/io/file/Counters$PathCounters;
       7: areturn

  public static org.sonar.api.internal.apachecommons.io.file.Counters$PathCounters deleteDirectory(java.nio.file.Path, org.sonar.api.internal.apachecommons.io.file.DeleteOption...) throws java.io.IOException;
    Code:
       0: new           #174                // class org/sonar/api/internal/apachecommons/io/file/DeletingPathVisitor
       3: dup
       4: invokestatic  #67                 // Method org/sonar/api/internal/apachecommons/io/file/Counters.longPathCounters:()Lorg/sonar/api/internal/apachecommons/io/file/Counters$PathCounters;
       7: aload_1
       8: iconst_0
       9: anewarray     #69                 // class java/lang/String
      12: invokespecial #175                // Method org/sonar/api/internal/apachecommons/io/file/DeletingPathVisitor."<init>":(Lorg/sonar/api/internal/apachecommons/io/file/Counters$PathCounters;[Lorg/sonar/api/internal/apachecommons/io/file/DeleteOption;[Ljava/lang/String;)V
      15: aload_0
      16: invokestatic  #76                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
      19: checkcast     #174                // class org/sonar/api/internal/apachecommons/io/file/DeletingPathVisitor
      22: invokevirtual #176                // Method org/sonar/api/internal/apachecommons/io/file/DeletingPathVisitor.getPathCounters:()Lorg/sonar/api/internal/apachecommons/io/file/Counters$PathCounters;
      25: areturn

  public static org.sonar.api.internal.apachecommons.io.file.Counters$PathCounters deleteFile(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #58                 // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/sonar/api/internal/apachecommons/io/file/DeleteOption;
       4: invokestatic  #172                // Method deleteFile:(Ljava/nio/file/Path;[Lorg/sonar/api/internal/apachecommons/io/file/DeleteOption;)Lorg/sonar/api/internal/apachecommons/io/file/Counters$PathCounters;
       7: areturn

  public static org.sonar.api.internal.apachecommons.io.file.Counters$PathCounters deleteFile(java.nio.file.Path, org.sonar.api.internal.apachecommons.io.file.DeleteOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #158                // class java/nio/file/LinkOption
       5: dup
       6: iconst_0
       7: getstatic     #162                // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
      10: aastore
      11: invokestatic  #166                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      14: ifeq          31
      17: new           #179                // class java/nio/file/NoSuchFileException
      20: dup
      21: aload_0
      22: invokeinterface #182,  1          // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      27: invokespecial #185                // Method java/nio/file/NoSuchFileException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: invokestatic  #67                 // Method org/sonar/api/internal/apachecommons/io/file/Counters.longPathCounters:()Lorg/sonar/api/internal/apachecommons/io/file/Counters$PathCounters;
      34: astore_2
      35: aload_0
      36: iconst_1
      37: anewarray     #158                // class java/nio/file/LinkOption
      40: dup
      41: iconst_0
      42: getstatic     #162                // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
      45: aastore
      46: invokestatic  #188                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      49: istore_3
      50: iload_3
      51: ifeq          61
      54: aload_0
      55: invokestatic  #192                // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J
      58: goto          62
      61: lconst_0
      62: lstore        4
      64: aload_1
      65: invokestatic  #196                // Method overrideReadOnly:([Lorg/sonar/api/internal/apachecommons/io/file/DeleteOption;)Z
      68: ifeq          91
      71: iload_3
      72: ifeq          91
      75: aload_0
      76: iconst_0
      77: iconst_1
      78: anewarray     #158                // class java/nio/file/LinkOption
      81: dup
      82: iconst_0
      83: getstatic     #162                // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
      86: aastore
      87: invokestatic  #200                // Method setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
      90: pop
      91: aload_0
      92: invokestatic  #204                // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
      95: ifeq          122
      98: aload_2
      99: invokeinterface #208,  1          // InterfaceMethod org/sonar/api/internal/apachecommons/io/file/Counters$PathCounters.getFileCounter:()Lorg/sonar/api/internal/apachecommons/io/file/Counters$Counter;
     104: invokeinterface #211,  1          // InterfaceMethod org/sonar/api/internal/apachecommons/io/file/Counters$Counter.increment:()V
     109: aload_2
     110: invokeinterface #214,  1          // InterfaceMethod org/sonar/api/internal/apachecommons/io/file/Counters$PathCounters.getByteCounter:()Lorg/sonar/api/internal/apachecommons/io/file/Counters$Counter;
     115: lload         4
     117: invokeinterface #218,  3          // InterfaceMethod org/sonar/api/internal/apachecommons/io/file/Counters$Counter.add:(J)V
     122: aload_2
     123: areturn

  private static boolean overrideReadOnly(org.sonar.api.internal.apachecommons.io.file.DeleteOption[]);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: astore_1
       8: aload_1
       9: arraylength
      10: istore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: iload_2
      15: if_icmpge     39
      18: aload_1
      19: iload_3
      20: aaload
      21: astore        4
      23: aload         4
      25: getstatic     #229                // Field org/sonar/api/internal/apachecommons/io/file/StandardDeleteOption.OVERRIDE_READ_ONLY:Lorg/sonar/api/internal/apachecommons/io/file/StandardDeleteOption;
      28: if_acmpne     33
      31: iconst_1
      32: ireturn
      33: iinc          3, 1
      36: goto          13
      39: iconst_0
      40: ireturn

  public static boolean directoryAndFileContentEquals(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #235                // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
       5: getstatic     #237                // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;
       8: getstatic     #239                // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;
      11: invokestatic  #242                // Method directoryAndFileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z
      14: ireturn

  public static boolean directoryAndFileContentEquals(java.nio.file.Path, java.nio.file.Path, java.nio.file.LinkOption[], java.nio.file.OpenOption[], java.nio.file.FileVisitOption[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnonnull     10
       4: aload_1
       5: ifnonnull     10
       8: iconst_1
       9: ireturn
      10: aload_0
      11: ifnonnull     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: aload_1
      20: ifnonnull     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ixor
      29: ifeq          34
      32: iconst_0
      33: ireturn
      34: aload_0
      35: iconst_0
      36: anewarray     #158                // class java/nio/file/LinkOption
      39: invokestatic  #188                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      42: ifne          58
      45: aload_1
      46: iconst_0
      47: anewarray     #158                // class java/nio/file/LinkOption
      50: invokestatic  #188                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      53: ifne          58
      56: iconst_1
      57: ireturn
      58: new           #9                  // class org/sonar/api/internal/apachecommons/io/file/PathUtils$RelativeSortedPaths
      61: dup
      62: aload_0
      63: aload_1
      64: ldc           #248                // int 2147483647
      66: aload_2
      67: aload         4
      69: aconst_null
      70: invokespecial #251                // Method org/sonar/api/internal/apachecommons/io/file/PathUtils$RelativeSortedPaths."<init>":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/sonar/api/internal/apachecommons/io/file/PathUtils$1;)V
      73: astore        5
      75: aload         5
      77: getfield      #254                // Field org/sonar/api/internal/apachecommons/io/file/PathUtils$RelativeSortedPaths.equals:Z
      80: ifne          85
      83: iconst_0
      84: ireturn
      85: aload         5
      87: getfield      #258                // Field org/sonar/api/internal/apachecommons/io/file/PathUtils$RelativeSortedPaths.relativeFileList1:Ljava/util/List;
      90: astore        6
      92: aload         5
      94: getfield      #261                // Field org/sonar/api/internal/apachecommons/io/file/PathUtils$RelativeSortedPaths.relativeFileList2:Ljava/util/List;
      97: astore        7
      99: aload         6
     101: invokeinterface #267,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     106: astore        8
     108: aload         8
     110: invokeinterface #273,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     115: ifeq          185
     118: aload         8
     120: invokeinterface #277,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     125: checkcast     #116                // class java/nio/file/Path
     128: astore        9
     130: aload         7
     132: aload         9
     134: invokestatic  #283                // Method java/util/Collections.binarySearch:(Ljava/util/List;Ljava/lang/Object;)I
     137: istore        10
     139: iload         10
     141: iconst_m1
     142: if_icmple     171
     145: aload_0
     146: aload         9
     148: invokeinterface #136,  2          // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
     153: aload_1
     154: aload         9
     156: invokeinterface #136,  2          // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
     161: aload_2
     162: aload_3
     163: invokestatic  #287                // Method fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z
     166: ifne          182
     169: iconst_0
     170: ireturn
     171: new           #289                // class java/lang/IllegalStateException
     174: dup
     175: ldc_w         #291                // String Unexpected mismatch.
     178: invokespecial #292                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     181: athrow
     182: goto          108
     185: iconst_1
     186: ireturn

  public static boolean directoryContentEquals(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #248                // int 2147483647
       4: getstatic     #235                // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
       7: getstatic     #239                // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;
      10: invokestatic  #304                // Method directoryContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z
      13: ireturn

  public static boolean directoryContentEquals(java.nio.file.Path, java.nio.file.Path, int, java.nio.file.LinkOption[], java.nio.file.FileVisitOption[]) throws java.io.IOException;
    Code:
       0: new           #9                  // class org/sonar/api/internal/apachecommons/io/file/PathUtils$RelativeSortedPaths
       3: dup
       4: aload_0
       5: aload_1
       6: iload_2
       7: aload_3
       8: aload         4
      10: aconst_null
      11: invokespecial #251                // Method org/sonar/api/internal/apachecommons/io/file/PathUtils$RelativeSortedPaths."<init>":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/sonar/api/internal/apachecommons/io/file/PathUtils$1;)V
      14: getfield      #254                // Field org/sonar/api/internal/apachecommons/io/file/PathUtils$RelativeSortedPaths.equals:Z
      17: ireturn

  public static boolean fileContentEquals(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #235                // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
       5: getstatic     #237                // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;
       8: invokestatic  #287                // Method fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z
      11: ireturn

  public static boolean fileContentEquals(java.nio.file.Path, java.nio.file.Path, java.nio.file.LinkOption[], java.nio.file.OpenOption[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: ifnonnull     10
       4: aload_1
       5: ifnonnull     10
       8: iconst_1
       9: ireturn
      10: aload_0
      11: ifnonnull     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: aload_1
      20: ifnonnull     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ixor
      29: ifeq          34
      32: iconst_0
      33: ireturn
      34: aload_0
      35: invokeinterface #307,  1          // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
      40: astore        4
      42: aload_1
      43: invokeinterface #307,  1          // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
      48: astore        5
      50: aload         4
      52: aload_2
      53: invokestatic  #188                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      56: istore        6
      58: iload         6
      60: aload         5
      62: aload_2
      63: invokestatic  #188                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      66: if_icmpeq     71
      69: iconst_0
      70: ireturn
      71: iload         6
      73: ifne          78
      76: iconst_1
      77: ireturn
      78: aload         4
      80: aload_2
      81: invokestatic  #166                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      84: ifeq          116
      87: new           #35                 // class java/io/IOException
      90: dup
      91: new           #309                // class java/lang/StringBuilder
      94: dup
      95: invokespecial #311                // Method java/lang/StringBuilder."<init>":()V
      98: ldc_w         #313                // String Can\'t compare directories, only files:
     101: invokevirtual #317                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload         4
     106: invokevirtual #320                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     109: invokevirtual #321                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     112: invokespecial #322                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     115: athrow
     116: aload         5
     118: aload_2
     119: invokestatic  #166                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
     122: ifeq          154
     125: new           #35                 // class java/io/IOException
     128: dup
     129: new           #309                // class java/lang/StringBuilder
     132: dup
     133: invokespecial #311                // Method java/lang/StringBuilder."<init>":()V
     136: ldc_w         #313                // String Can\'t compare directories, only files:
     139: invokevirtual #317                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: aload         5
     144: invokevirtual #320                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     147: invokevirtual #321                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     150: invokespecial #322                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     153: athrow
     154: aload         4
     156: invokestatic  #192                // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J
     159: aload         5
     161: invokestatic  #192                // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J
     164: lcmp
     165: ifeq          170
     168: iconst_0
     169: ireturn
     170: aload_0
     171: aload_1
     172: invokeinterface #325,  2          // InterfaceMethod java/nio/file/Path.equals:(Ljava/lang/Object;)Z
     177: ifeq          182
     180: iconst_1
     181: ireturn
     182: aload         4
     184: aload_3
     185: invokestatic  #329                // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
     188: astore        7
     190: aconst_null
     191: astore        8
     193: aload         5
     195: aload_3
     196: invokestatic  #329                // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
     199: astore        9
     201: aconst_null
     202: astore        10
     204: aload         7
     206: aload         9
     208: invokestatic  #335                // Method org/sonar/api/internal/apachecommons/io/IOUtils.contentEquals:(Ljava/io/InputStream;Ljava/io/InputStream;)Z
     211: istore        11
     213: aload         9
     215: ifnull        248
     218: aload         10
     220: ifnull        243
     223: aload         9
     225: invokevirtual #114                // Method java/io/InputStream.close:()V
     228: goto          248
     231: astore        12
     233: aload         10
     235: aload         12
     237: invokevirtual #121                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     240: goto          248
     243: aload         9
     245: invokevirtual #114                // Method java/io/InputStream.close:()V
     248: aload         7
     250: ifnull        283
     253: aload         8
     255: ifnull        278
     258: aload         7
     260: invokevirtual #114                // Method java/io/InputStream.close:()V
     263: goto          283
     266: astore        12
     268: aload         8
     270: aload         12
     272: invokevirtual #121                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     275: goto          283
     278: aload         7
     280: invokevirtual #114                // Method java/io/InputStream.close:()V
     283: iload         11
     285: ireturn
     286: astore        11
     288: aload         11
     290: astore        10
     292: aload         11
     294: athrow
     295: astore        13
     297: aload         9
     299: ifnull        332
     302: aload         10
     304: ifnull        327
     307: aload         9
     309: invokevirtual #114                // Method java/io/InputStream.close:()V
     312: goto          332
     315: astore        14
     317: aload         10
     319: aload         14
     321: invokevirtual #121                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     324: goto          332
     327: aload         9
     329: invokevirtual #114                // Method java/io/InputStream.close:()V
     332: aload         13
     334: athrow
     335: astore        9
     337: aload         9
     339: astore        8
     341: aload         9
     343: athrow
     344: astore        15
     346: aload         7
     348: ifnull        381
     351: aload         8
     353: ifnull        376
     356: aload         7
     358: invokevirtual #114                // Method java/io/InputStream.close:()V
     361: goto          381
     364: astore        16
     366: aload         8
     368: aload         16
     370: invokevirtual #121                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     373: goto          381
     376: aload         7
     378: invokevirtual #114                // Method java/io/InputStream.close:()V
     381: aload         15
     383: athrow
    Exception table:
       from    to  target type
         223   228   231   Class java/lang/Throwable
         258   263   266   Class java/lang/Throwable
         204   213   286   Class java/lang/Throwable
         204   213   295   any
         307   312   315   Class java/lang/Throwable
         286   297   295   any
         193   248   335   Class java/lang/Throwable
         286   335   335   Class java/lang/Throwable
         193   248   344   any
         356   361   364   Class java/lang/Throwable
         286   346   344   any

  public static java.util.List<java.nio.file.attribute.AclEntry> getAclEntryList(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc_w         #345                // class java/nio/file/attribute/AclFileAttributeView
       4: iconst_0
       5: anewarray     #158                // class java/nio/file/LinkOption
       8: invokestatic  #349                // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;
      11: checkcast     #345                // class java/nio/file/attribute/AclFileAttributeView
      14: astore_1
      15: aload_1
      16: ifnonnull     23
      19: aconst_null
      20: goto          29
      23: aload_1
      24: invokeinterface #353,  1          // InterfaceMethod java/nio/file/attribute/AclFileAttributeView.getAcl:()Ljava/util/List;
      29: areturn

  public static boolean isEmpty(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: anewarray     #158                // class java/nio/file/LinkOption
       5: invokestatic  #166                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
       8: ifeq          18
      11: aload_0
      12: invokestatic  #360                // Method isEmptyDirectory:(Ljava/nio/file/Path;)Z
      15: goto          22
      18: aload_0
      19: invokestatic  #363                // Method isEmptyFile:(Ljava/nio/file/Path;)Z
      22: ireturn

  public static boolean isEmptyDirectory(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #367                // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;
       4: astore_1
       5: aconst_null
       6: astore_2
       7: aload_1
       8: invokeinterface #370,  1          // InterfaceMethod java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;
      13: invokeinterface #273,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          59
      21: iconst_0
      22: istore_3
      23: aload_1
      24: ifnull        57
      27: aload_2
      28: ifnull        51
      31: aload_1
      32: invokeinterface #371,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      37: goto          57
      40: astore        4
      42: aload_2
      43: aload         4
      45: invokevirtual #121                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      48: goto          57
      51: aload_1
      52: invokeinterface #371,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      57: iload_3
      58: ireturn
      59: aload_1
      60: ifnull        138
      63: aload_2
      64: ifnull        85
      67: aload_1
      68: invokeinterface #371,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      73: goto          138
      76: astore_3
      77: aload_2
      78: aload_3
      79: invokevirtual #121                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      82: goto          138
      85: aload_1
      86: invokeinterface #371,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V
      91: goto          138
      94: astore_3
      95: aload_3
      96: astore_2
      97: aload_3
      98: athrow
      99: astore        5
     101: aload_1
     102: ifnull        135
     105: aload_2
     106: ifnull        129
     109: aload_1
     110: invokeinterface #371,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     115: goto          135
     118: astore        6
     120: aload_2
     121: aload         6
     123: invokevirtual #121                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     126: goto          135
     129: aload_1
     130: invokeinterface #371,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     135: aload         5
     137: athrow
     138: iconst_1
     139: ireturn
    Exception table:
       from    to  target type
          31    37    40   Class java/lang/Throwable
          67    73    76   Class java/lang/Throwable
           7    23    94   Class java/lang/Throwable
           7    23    99   any
         109   115   118   Class java/lang/Throwable
          94   101    99   any

  public static boolean isEmptyFile(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #192                // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J
       4: lconst_0
       5: lcmp
       6: ifgt          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  static java.util.List<java.nio.file.Path> relativize(java.util.Collection<java.nio.file.Path>, java.nio.file.Path, boolean, java.util.Comparator<? super java.nio.file.Path>);
    Code:
       0: aload_0
       1: invokeinterface #383,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
       6: aload_1
       7: dup
       8: invokevirtual #387                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: pop
      12: invokedynamic #404,  0            // InvokeDynamic #0:apply:(Ljava/nio/file/Path;)Ljava/util/function/Function;
      17: invokeinterface #410,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      22: astore        4
      24: iload_2
      25: ifeq          52
      28: aload_3
      29: ifnonnull     42
      32: aload         4
      34: invokeinterface #413,  1          // InterfaceMethod java/util/stream/Stream.sorted:()Ljava/util/stream/Stream;
      39: goto          50
      42: aload         4
      44: aload_3
      45: invokeinterface #416,  2          // InterfaceMethod java/util/stream/Stream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;
      50: astore        4
      52: aload         4
      54: invokestatic  #422                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      57: invokeinterface #426,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      62: checkcast     #263                // class java/util/List
      65: areturn

  public static java.nio.file.Path setReadOnly(java.nio.file.Path, boolean, java.nio.file.LinkOption...) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc_w         #438                // class java/nio/file/attribute/DosFileAttributeView
       4: aload_2
       5: invokestatic  #349                // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;
       8: checkcast     #438                // class java/nio/file/attribute/DosFileAttributeView
      11: astore_3
      12: aload_3
      13: ifnull        25
      16: aload_3
      17: iload_1
      18: invokeinterface #441,  2          // InterfaceMethod java/nio/file/attribute/DosFileAttributeView.setReadOnly:(Z)V
      23: aload_0
      24: areturn
      25: aload_0
      26: ldc_w         #443                // class java/nio/file/attribute/PosixFileAttributeView
      29: aload_2
      30: invokestatic  #349                // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;
      33: checkcast     #443                // class java/nio/file/attribute/PosixFileAttributeView
      36: astore        4
      38: aload         4
      40: ifnull        101
      43: aload         4
      45: invokeinterface #447,  1          // InterfaceMethod java/nio/file/attribute/PosixFileAttributeView.readAttributes:()Ljava/nio/file/attribute/PosixFileAttributes;
      50: astore        5
      52: aload         5
      54: invokeinterface #453,  1          // InterfaceMethod java/nio/file/attribute/PosixFileAttributes.permissions:()Ljava/util/Set;
      59: astore        6
      61: aload         6
      63: getstatic     #459                // Field java/nio/file/attribute/PosixFilePermission.OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
      66: invokeinterface #464,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      71: pop
      72: aload         6
      74: getstatic     #467                // Field java/nio/file/attribute/PosixFilePermission.GROUP_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
      77: invokeinterface #464,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      82: pop
      83: aload         6
      85: getstatic     #470                // Field java/nio/file/attribute/PosixFilePermission.OTHERS_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
      88: invokeinterface #464,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      93: pop
      94: aload_0
      95: aload         6
      97: invokestatic  #474                // Method java/nio/file/Files.setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;
     100: areturn
     101: new           #35                 // class java/io/IOException
     104: dup
     105: new           #309                // class java/lang/StringBuilder
     108: dup
     109: invokespecial #311                // Method java/lang/StringBuilder."<init>":()V
     112: ldc_w         #476                // String No DosFileAttributeView or PosixFileAttributeView for
     115: invokevirtual #317                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: aload_0
     119: invokevirtual #320                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     122: invokevirtual #321                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     125: invokespecial #322                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     128: athrow

  static java.util.Set<java.nio.file.FileVisitOption> toFileVisitOptionSet(java.nio.file.FileVisitOption...);
    Code:
       0: aload_0
       1: ifnonnull     13
       4: ldc_w         #486                // class java/nio/file/FileVisitOption
       7: invokestatic  #492                // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
      10: goto          28
      13: aload_0
      14: invokestatic  #497                // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      17: invokestatic  #500                // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      20: invokeinterface #426,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      25: checkcast     #461                // class java/util/Set
      28: areturn

  public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #505                // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;
       5: pop
       6: aload_0
       7: areturn

  public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.nio.file.Path, java.util.Set<java.nio.file.FileVisitOption>, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: iload_3
       3: aload_0
       4: invokestatic  #512                // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;
       7: pop
       8: aload_0
       9: areturn

  public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.lang.String, java.lang.String...) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #522                // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
       6: invokestatic  #76                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
       9: areturn

  public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.net.URI) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #531                // Method java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;
       5: invokestatic  #76                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
       8: areturn

  private org.sonar.api.internal.apachecommons.io.file.PathUtils();
    Code:
       0: aload_0
       1: invokespecial #534                // Method java/lang/Object."<init>":()V
       4: return

  static org.sonar.api.internal.apachecommons.io.file.AccumulatorPathVisitor access$000(java.nio.file.Path, int, java.nio.file.FileVisitOption[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #539                // Method accumulate:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Lorg/sonar/api/internal/apachecommons/io/file/AccumulatorPathVisitor;
       6: areturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #545                // class org/sonar/api/internal/apachecommons/io/file/DeleteOption
       4: putstatic     #58                 // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/sonar/api/internal/apachecommons/io/file/DeleteOption;
       7: iconst_0
       8: anewarray     #486                // class java/nio/file/FileVisitOption
      11: putstatic     #239                // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;
      14: iconst_0
      15: anewarray     #158                // class java/nio/file/LinkOption
      18: putstatic     #235                // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
      21: iconst_0
      22: anewarray     #547                // class java/nio/file/OpenOption
      25: putstatic     #237                // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;
      28: return
}
