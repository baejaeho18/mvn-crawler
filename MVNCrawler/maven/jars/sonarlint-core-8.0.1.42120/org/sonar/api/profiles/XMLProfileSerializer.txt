Compiled from "XMLProfileSerializer.java"
public class org.sonar.api.profiles.XMLProfileSerializer {
  public org.sonar.api.profiles.XMLProfileSerializer();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/lang/Object."<init>":()V
       4: return

  public void write(org.sonar.api.profiles.RulesProfile, java.io.Writer);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #21                 // Method appendHeader:(Lorg/sonar/api/profiles/RulesProfile;Ljava/io/Writer;)V
       5: aload_1
       6: aload_2
       7: invokestatic  #24                 // Method appendRules:(Lorg/sonar/api/profiles/RulesProfile;Ljava/io/Writer;)V
      10: aload_2
      11: invokestatic  #28                 // Method appendFooter:(Ljava/io/Writer;)V
      14: goto          46
      17: astore_3
      18: new           #30                 // class org/sonar/api/utils/SonarException
      21: dup
      22: new           #32                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #35                 // String Fail to export the profile
      31: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      38: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: aload_3
      42: invokespecial #49                 // Method org/sonar/api/utils/SonarException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      45: athrow
      46: return
    Exception table:
       from    to  target type
           0    14    17   Class java/io/IOException

  private static void appendHeader(org.sonar.api.profiles.RulesProfile, java.io.Writer) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #57                 // String <?xml version=\"1.0\" encoding=\"UTF-8\"?><!-- Generated by SonarQube --><profile><name>
       3: invokevirtual #62                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
       6: pop
       7: aload_1
       8: aload_0
       9: invokevirtual #67                 // Method org/sonar/api/profiles/RulesProfile.getName:()Ljava/lang/String;
      12: invokestatic  #73                 // Method org/sonar/api/internal/apachecommons/lang/StringEscapeUtils.escapeXml:(Ljava/io/Writer;Ljava/lang/String;)V
      15: aload_1
      16: ldc           #75                 // String </name><language>
      18: invokevirtual #62                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      21: pop
      22: aload_1
      23: aload_0
      24: invokevirtual #78                 // Method org/sonar/api/profiles/RulesProfile.getLanguage:()Ljava/lang/String;
      27: invokestatic  #73                 // Method org/sonar/api/internal/apachecommons/lang/StringEscapeUtils.escapeXml:(Ljava/io/Writer;Ljava/lang/String;)V
      30: aload_1
      31: ldc           #80                 // String </language>
      33: invokevirtual #62                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      36: pop
      37: return

  private static void appendRules(org.sonar.api.profiles.RulesProfile, java.io.Writer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #84                 // Method org/sonar/api/profiles/RulesProfile.getActiveRules:()Ljava/util/List;
       4: invokeinterface #90,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifne          63
      12: aload_1
      13: ldc           #92                 // String <rules>
      15: invokevirtual #62                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      18: pop
      19: aload_0
      20: invokevirtual #84                 // Method org/sonar/api/profiles/RulesProfile.getActiveRules:()Ljava/util/List;
      23: invokeinterface #96,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      28: astore_2
      29: aload_2
      30: invokeinterface #101,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          56
      38: aload_2
      39: invokeinterface #105,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #107                // class org/sonar/api/rules/ActiveRule
      47: astore_3
      48: aload_3
      49: aload_1
      50: invokestatic  #111                // Method appendRule:(Lorg/sonar/api/rules/ActiveRule;Ljava/io/Writer;)V
      53: goto          29
      56: aload_1
      57: ldc           #113                // String </rules>
      59: invokevirtual #62                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      62: pop
      63: return

  private static void appendRule(org.sonar.api.rules.ActiveRule, java.io.Writer) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #117                // String <rule><repositoryKey>
       3: invokevirtual #62                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
       6: pop
       7: aload_1
       8: aload_0
       9: invokevirtual #120                // Method org/sonar/api/rules/ActiveRule.getRepositoryKey:()Ljava/lang/String;
      12: invokevirtual #62                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      15: pop
      16: aload_1
      17: ldc           #122                // String </repositoryKey><key>
      19: invokevirtual #62                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      22: pop
      23: aload_1
      24: aload_0
      25: invokevirtual #125                // Method org/sonar/api/rules/ActiveRule.getRuleKey:()Ljava/lang/String;
      28: invokestatic  #73                 // Method org/sonar/api/internal/apachecommons/lang/StringEscapeUtils.escapeXml:(Ljava/io/Writer;Ljava/lang/String;)V
      31: aload_1
      32: ldc           #127                // String </key>
      34: invokevirtual #62                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      37: pop
      38: aload_0
      39: invokevirtual #131                // Method org/sonar/api/rules/ActiveRule.getSeverity:()Lorg/sonar/api/rules/RulePriority;
      42: ifnull        71
      45: aload_1
      46: ldc           #133                // String <priority>
      48: invokevirtual #62                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      51: pop
      52: aload_1
      53: aload_0
      54: invokevirtual #131                // Method org/sonar/api/rules/ActiveRule.getSeverity:()Lorg/sonar/api/rules/RulePriority;
      57: invokevirtual #138                // Method org/sonar/api/rules/RulePriority.name:()Ljava/lang/String;
      60: invokevirtual #62                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      63: pop
      64: aload_1
      65: ldc           #140                // String </priority>
      67: invokevirtual #62                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      70: pop
      71: aload_0
      72: aload_1
      73: invokestatic  #143                // Method appendRuleParameters:(Lorg/sonar/api/rules/ActiveRule;Ljava/io/Writer;)V
      76: aload_1
      77: ldc           #145                // String </rule>
      79: invokevirtual #62                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      82: pop
      83: return

  private static void appendRuleParameters(org.sonar.api.rules.ActiveRule, java.io.Writer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #148                // Method org/sonar/api/rules/ActiveRule.getActiveRuleParams:()Ljava/util/List;
       4: ifnull        70
       7: aload_0
       8: invokevirtual #148                // Method org/sonar/api/rules/ActiveRule.getActiveRuleParams:()Ljava/util/List;
      11: invokeinterface #90,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifne          70
      19: aload_1
      20: ldc           #150                // String <parameters>
      22: invokevirtual #62                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      25: pop
      26: aload_0
      27: invokevirtual #148                // Method org/sonar/api/rules/ActiveRule.getActiveRuleParams:()Ljava/util/List;
      30: invokeinterface #96,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      35: astore_2
      36: aload_2
      37: invokeinterface #101,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          63
      45: aload_2
      46: invokeinterface #105,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #152                // class org/sonar/api/rules/ActiveRuleParam
      54: astore_3
      55: aload_1
      56: aload_3
      57: invokestatic  #156                // Method appendRuleParameter:(Ljava/io/Writer;Lorg/sonar/api/rules/ActiveRuleParam;)V
      60: goto          36
      63: aload_1
      64: ldc           #158                // String </parameters>
      66: invokevirtual #62                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      69: pop
      70: return

  private static void appendRuleParameter(java.io.Writer, org.sonar.api.rules.ActiveRuleParam) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #163                // Method org/sonar/api/rules/ActiveRuleParam.getValue:()Ljava/lang/String;
       4: invokestatic  #169                // Method org/sonar/api/internal/apachecommons/lang/StringUtils.isNotBlank:(Ljava/lang/String;)Z
       7: ifeq          54
      10: aload_0
      11: ldc           #171                // String <parameter><key>
      13: invokevirtual #62                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      16: pop
      17: aload_0
      18: aload_1
      19: invokevirtual #174                // Method org/sonar/api/rules/ActiveRuleParam.getKey:()Ljava/lang/String;
      22: invokestatic  #73                 // Method org/sonar/api/internal/apachecommons/lang/StringEscapeUtils.escapeXml:(Ljava/io/Writer;Ljava/lang/String;)V
      25: aload_0
      26: ldc           #176                // String </key><value>
      28: invokevirtual #62                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      31: pop
      32: aload_0
      33: aload_1
      34: invokevirtual #163                // Method org/sonar/api/rules/ActiveRuleParam.getValue:()Ljava/lang/String;
      37: invokestatic  #73                 // Method org/sonar/api/internal/apachecommons/lang/StringEscapeUtils.escapeXml:(Ljava/io/Writer;Ljava/lang/String;)V
      40: aload_0
      41: ldc           #178                // String </value>
      43: invokevirtual #62                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      46: pop
      47: aload_0
      48: ldc           #180                // String </parameter>
      50: invokevirtual #62                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
      53: pop
      54: return

  private static void appendFooter(java.io.Writer) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #182                // String </profile>
       3: invokevirtual #62                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
       6: pop
       7: return
}
