Compiled from "EmailSettings.java"
public class org.sonar.api.config.EmailSettings {
  public static final java.lang.String SMTP_HOST;

  public static final java.lang.String SMTP_HOST_DEFAULT;

  public static final java.lang.String SMTP_PORT;

  public static final java.lang.String SMTP_PORT_DEFAULT;

  public static final java.lang.String SMTP_SECURE_CONNECTION;

  public static final java.lang.String SMTP_SECURE_CONNECTION_DEFAULT;

  public static final java.lang.String SMTP_USERNAME;

  public static final java.lang.String SMTP_USERNAME_DEFAULT;

  public static final java.lang.String SMTP_PASSWORD;

  public static final java.lang.String SMTP_PASSWORD_DEFAULT;

  public static final java.lang.String FROM;

  public static final java.lang.String FROM_DEFAULT;

  public static final java.lang.String FROM_NAME;

  public static final java.lang.String FROM_NAME_DEFAULT;

  public static final java.lang.String PREFIX;

  public static final java.lang.String PREFIX_DEFAULT;

  private final org.sonar.api.config.Configuration config;

  private final org.sonar.api.platform.Server server;

  public org.sonar.api.config.EmailSettings(org.sonar.api.config.Configuration, org.sonar.api.platform.Server);
    Code:
       0: aload_0
       1: invokespecial #64                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #66                 // Field config:Lorg/sonar/api/config/Configuration;
       9: aload_0
      10: aload_2
      11: putfield      #68                 // Field server:Lorg/sonar/api/platform/Server;
      14: return

  public java.lang.String getSmtpHost();
    Code:
       0: aload_0
       1: ldc           #16                 // String email.smtp_host.secured
       3: ldc           #19                 // String
       5: invokespecial #76                 // Method get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public int getSmtpPort();
    Code:
       0: aload_0
       1: ldc           #22                 // String email.smtp_port.secured
       3: ldc           #25                 // String 25
       5: invokespecial #76                 // Method get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: invokestatic  #84                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      11: ireturn

  public java.lang.String getSecureConnection();
    Code:
       0: aload_0
       1: ldc           #28                 // String email.smtp_secure_connection.secured
       3: ldc           #19                 // String
       5: invokespecial #76                 // Method get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public java.lang.String getSmtpUsername();
    Code:
       0: aload_0
       1: ldc           #32                 // String email.smtp_username.secured
       3: ldc           #19                 // String
       5: invokespecial #76                 // Method get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public java.lang.String getSmtpPassword();
    Code:
       0: aload_0
       1: ldc           #36                 // String email.smtp_password.secured
       3: ldc           #19                 // String
       5: invokespecial #76                 // Method get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public java.lang.String getFrom();
    Code:
       0: aload_0
       1: ldc           #40                 // String email.from
       3: ldc           #43                 // String noreply@nowhere
       5: invokespecial #76                 // Method get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public java.lang.String getFromName();
    Code:
       0: aload_0
       1: ldc           #46                 // String email.fromName
       3: ldc           #49                 // String SonarQube
       5: invokespecial #76                 // Method get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public java.lang.String getPrefix();
    Code:
       0: aload_0
       1: ldc           #52                 // String email.prefix
       3: ldc           #55                 // String [SONARQUBE]
       5: invokespecial #76                 // Method get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public java.lang.String getServerBaseURL();
    Code:
       0: aload_0
       1: getfield      #68                 // Field server:Lorg/sonar/api/platform/Server;
       4: invokevirtual #96                 // Method org/sonar/api/platform/Server.getPublicRootUrl:()Ljava/lang/String;
       7: areturn

  private java.lang.String get(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #66                 // Field config:Lorg/sonar/api/config/Configuration;
       4: aload_1
       5: invokeinterface #101,  2          // InterfaceMethod org/sonar/api/config/Configuration.get:(Ljava/lang/String;)Ljava/util/Optional;
      10: aload_2
      11: invokevirtual #107                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #109                // class java/lang/String
      17: areturn

  public static java.util.List<org.sonar.api.config.PropertyDefinition> definitions();
    Code:
       0: bipush        8
       2: anewarray     #11                 // class org/sonar/api/config/PropertyDefinition
       5: dup
       6: iconst_0
       7: ldc           #16                 // String email.smtp_host.secured
       9: invokestatic  #118                // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      12: ldc           #120                // String SMTP host
      14: invokevirtual #123                // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      17: ldc           #125                // String For example \"smtp.gmail.com\". Leave blank to disable email sending.
      19: invokevirtual #128                // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      22: ldc           #19                 // String
      24: invokevirtual #130                // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      27: ldc           #132                // String general
      29: invokevirtual #135                // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      32: ldc           #137                // String email
      34: invokevirtual #140                // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      37: iconst_0
      38: invokevirtual #144                // Method org/sonar/api/config/PropertyDefinition$Builder.index:(I)Lorg/sonar/api/config/PropertyDefinition$Builder;
      41: invokevirtual #148                // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
      44: aastore
      45: dup
      46: iconst_1
      47: ldc           #22                 // String email.smtp_port.secured
      49: invokestatic  #118                // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      52: ldc           #150                // String SMTP port
      54: invokevirtual #123                // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      57: ldc           #152                // String Port number to connect with SMTP server.
      59: invokevirtual #128                // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      62: ldc           #25                 // String 25
      64: invokevirtual #130                // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      67: ldc           #132                // String general
      69: invokevirtual #135                // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      72: ldc           #137                // String email
      74: invokevirtual #140                // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      77: getstatic     #158                // Field org/sonar/api/PropertyType.INTEGER:Lorg/sonar/api/PropertyType;
      80: invokevirtual #162                // Method org/sonar/api/config/PropertyDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      83: iconst_1
      84: invokevirtual #144                // Method org/sonar/api/config/PropertyDefinition$Builder.index:(I)Lorg/sonar/api/config/PropertyDefinition$Builder;
      87: invokevirtual #148                // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
      90: aastore
      91: dup
      92: iconst_2
      93: ldc           #28                 // String email.smtp_secure_connection.secured
      95: invokestatic  #118                // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
      98: ldc           #164                // String Secure connection
     100: invokevirtual #123                // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     103: ldc           #166                // String Type of secure connection. Leave empty to not use secure connection.
     105: invokevirtual #128                // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     108: ldc           #19                 // String
     110: invokevirtual #130                // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     113: ldc           #132                // String general
     115: invokevirtual #135                // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     118: ldc           #137                // String email
     120: invokevirtual #140                // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     123: getstatic     #169                // Field org/sonar/api/PropertyType.SINGLE_SELECT_LIST:Lorg/sonar/api/PropertyType;
     126: invokevirtual #162                // Method org/sonar/api/config/PropertyDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     129: ldc           #171                // String ssl
     131: iconst_1
     132: anewarray     #109                // class java/lang/String
     135: dup
     136: iconst_0
     137: ldc           #173                // String starttls
     139: aastore
     140: invokevirtual #177                // Method org/sonar/api/config/PropertyDefinition$Builder.options:(Ljava/lang/String;[Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     143: iconst_2
     144: invokevirtual #144                // Method org/sonar/api/config/PropertyDefinition$Builder.index:(I)Lorg/sonar/api/config/PropertyDefinition$Builder;
     147: invokevirtual #148                // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     150: aastore
     151: dup
     152: iconst_3
     153: ldc           #32                 // String email.smtp_username.secured
     155: invokestatic  #118                // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     158: ldc           #179                // String SMTP username
     160: invokevirtual #123                // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     163: ldc           #181                // String Username to use with authenticated SMTP.
     165: invokevirtual #128                // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     168: ldc           #19                 // String
     170: invokevirtual #130                // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     173: ldc           #132                // String general
     175: invokevirtual #135                // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     178: ldc           #137                // String email
     180: invokevirtual #140                // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     183: iconst_3
     184: invokevirtual #144                // Method org/sonar/api/config/PropertyDefinition$Builder.index:(I)Lorg/sonar/api/config/PropertyDefinition$Builder;
     187: invokevirtual #148                // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     190: aastore
     191: dup
     192: iconst_4
     193: ldc           #36                 // String email.smtp_password.secured
     195: invokestatic  #118                // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     198: ldc           #183                // String SMTP password
     200: invokevirtual #123                // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     203: ldc           #185                // String Password to use with authenticated SMTP.
     205: invokevirtual #128                // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     208: ldc           #19                 // String
     210: invokevirtual #130                // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     213: getstatic     #188                // Field org/sonar/api/PropertyType.PASSWORD:Lorg/sonar/api/PropertyType;
     216: invokevirtual #162                // Method org/sonar/api/config/PropertyDefinition$Builder.type:(Lorg/sonar/api/PropertyType;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     219: ldc           #132                // String general
     221: invokevirtual #135                // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     224: ldc           #137                // String email
     226: invokevirtual #140                // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     229: iconst_4
     230: invokevirtual #144                // Method org/sonar/api/config/PropertyDefinition$Builder.index:(I)Lorg/sonar/api/config/PropertyDefinition$Builder;
     233: invokevirtual #148                // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     236: aastore
     237: dup
     238: iconst_5
     239: ldc           #40                 // String email.from
     241: invokestatic  #118                // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     244: ldc           #190                // String From address
     246: invokevirtual #123                // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     249: ldc           #192                // String Emails will come from this address. For example - \"noreply@sonarsource.com\". Note that the mail server may ignore this setting.
     251: invokevirtual #128                // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     254: ldc           #43                 // String noreply@nowhere
     256: invokevirtual #130                // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     259: ldc           #132                // String general
     261: invokevirtual #135                // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     264: ldc           #137                // String email
     266: invokevirtual #140                // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     269: iconst_5
     270: invokevirtual #144                // Method org/sonar/api/config/PropertyDefinition$Builder.index:(I)Lorg/sonar/api/config/PropertyDefinition$Builder;
     273: invokevirtual #148                // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     276: aastore
     277: dup
     278: bipush        6
     280: ldc           #46                 // String email.fromName
     282: invokestatic  #118                // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     285: ldc           #194                // String From name
     287: invokevirtual #123                // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     290: ldc           #196                // String Emails will come from this address name. For example - \"SonarQube\". Note that the mail server may ignore this setting.
     292: invokevirtual #128                // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     295: ldc           #49                 // String SonarQube
     297: invokevirtual #130                // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     300: ldc           #132                // String general
     302: invokevirtual #135                // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     305: ldc           #137                // String email
     307: invokevirtual #140                // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     310: bipush        6
     312: invokevirtual #144                // Method org/sonar/api/config/PropertyDefinition$Builder.index:(I)Lorg/sonar/api/config/PropertyDefinition$Builder;
     315: invokevirtual #148                // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     318: aastore
     319: dup
     320: bipush        7
     322: ldc           #52                 // String email.prefix
     324: invokestatic  #118                // Method org/sonar/api/config/PropertyDefinition.builder:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     327: ldc           #198                // String Email prefix
     329: invokevirtual #123                // Method org/sonar/api/config/PropertyDefinition$Builder.name:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     332: ldc           #200                // String Prefix will be prepended to all outgoing email subjects.
     334: invokevirtual #128                // Method org/sonar/api/config/PropertyDefinition$Builder.description:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     337: ldc           #55                 // String [SONARQUBE]
     339: invokevirtual #130                // Method org/sonar/api/config/PropertyDefinition$Builder.defaultValue:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     342: ldc           #132                // String general
     344: invokevirtual #135                // Method org/sonar/api/config/PropertyDefinition$Builder.category:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     347: ldc           #137                // String email
     349: invokevirtual #140                // Method org/sonar/api/config/PropertyDefinition$Builder.subCategory:(Ljava/lang/String;)Lorg/sonar/api/config/PropertyDefinition$Builder;
     352: bipush        7
     354: invokevirtual #144                // Method org/sonar/api/config/PropertyDefinition$Builder.index:(I)Lorg/sonar/api/config/PropertyDefinition$Builder;
     357: invokevirtual #148                // Method org/sonar/api/config/PropertyDefinition$Builder.build:()Lorg/sonar/api/config/PropertyDefinition;
     360: aastore
     361: invokestatic  #206                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     364: areturn
}
