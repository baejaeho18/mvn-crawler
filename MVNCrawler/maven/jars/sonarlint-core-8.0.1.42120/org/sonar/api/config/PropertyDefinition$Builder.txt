Compiled from "PropertyDefinition.java"
public class org.sonar.api.config.PropertyDefinition$Builder {
  private final java.lang.String key;

  private java.lang.String name;

  private java.lang.String description;

  private java.lang.String defaultValue;

  private java.lang.String category;

  private java.lang.String subCategory;

  private java.util.List<java.lang.String> onQualifiers;

  private java.util.List<java.lang.String> onlyOnQualifiers;

  private boolean global;

  private org.sonar.api.PropertyType type;

  private java.util.List<java.lang.String> options;

  private boolean multiValues;

  private java.util.List<org.sonar.api.config.PropertyFieldDefinition> fields;

  private java.lang.String deprecatedKey;

  private boolean hidden;

  private int index;

  private org.sonar.api.config.PropertyDefinition$Builder(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #43                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #45                 // String
       7: putfield      #47                 // Field name:Ljava/lang/String;
      10: aload_0
      11: ldc           #45                 // String
      13: putfield      #49                 // Field description:Ljava/lang/String;
      16: aload_0
      17: ldc           #45                 // String
      19: putfield      #51                 // Field defaultValue:Ljava/lang/String;
      22: aload_0
      23: ldc           #45                 // String
      25: putfield      #53                 // Field category:Ljava/lang/String;
      28: aload_0
      29: ldc           #45                 // String
      31: putfield      #55                 // Field subCategory:Ljava/lang/String;
      34: aload_0
      35: new           #57                 // class java/util/ArrayList
      38: dup
      39: invokespecial #58                 // Method java/util/ArrayList."<init>":()V
      42: putfield      #60                 // Field onQualifiers:Ljava/util/List;
      45: aload_0
      46: new           #57                 // class java/util/ArrayList
      49: dup
      50: invokespecial #58                 // Method java/util/ArrayList."<init>":()V
      53: putfield      #62                 // Field onlyOnQualifiers:Ljava/util/List;
      56: aload_0
      57: iconst_1
      58: putfield      #64                 // Field global:Z
      61: aload_0
      62: getstatic     #69                 // Field org/sonar/api/PropertyType.STRING:Lorg/sonar/api/PropertyType;
      65: putfield      #71                 // Field type:Lorg/sonar/api/PropertyType;
      68: aload_0
      69: new           #57                 // class java/util/ArrayList
      72: dup
      73: invokespecial #58                 // Method java/util/ArrayList."<init>":()V
      76: putfield      #73                 // Field options:Ljava/util/List;
      79: aload_0
      80: iconst_0
      81: putfield      #75                 // Field multiValues:Z
      84: aload_0
      85: new           #57                 // class java/util/ArrayList
      88: dup
      89: invokespecial #58                 // Method java/util/ArrayList."<init>":()V
      92: putfield      #77                 // Field fields:Ljava/util/List;
      95: aload_0
      96: ldc           #45                 // String
      98: putfield      #79                 // Field deprecatedKey:Ljava/lang/String;
     101: aload_0
     102: iconst_0
     103: putfield      #81                 // Field hidden:Z
     106: aload_0
     107: sipush        999
     110: putfield      #83                 // Field index:I
     113: aload_0
     114: aload_1
     115: putfield      #85                 // Field key:Ljava/lang/String;
     118: return

  public org.sonar.api.config.PropertyDefinition$Builder description(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field description:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonar.api.config.PropertyDefinition$Builder name(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #47                 // Field name:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonar.api.config.PropertyDefinition$Builder defaultValue(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field defaultValue:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonar.api.config.PropertyDefinition$Builder category(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field category:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonar.api.config.PropertyDefinition$Builder subCategory(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #55                 // Field subCategory:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonar.api.config.PropertyDefinition$Builder onQualifiers(java.lang.String, java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #60                 // Field onQualifiers:Ljava/util/List;
       4: aload_1
       5: aload_2
       6: invokestatic  #93                 // Method addQualifiers:(Ljava/util/List;Ljava/lang/String;[Ljava/lang/String;)V
       9: aload_0
      10: iconst_1
      11: putfield      #64                 // Field global:Z
      14: aload_0
      15: areturn

  public org.sonar.api.config.PropertyDefinition$Builder onQualifiers(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #60                 // Field onQualifiers:Ljava/util/List;
       4: aload_1
       5: invokestatic  #101                // Method addQualifiers:(Ljava/util/List;Ljava/util/List;)V
       8: aload_0
       9: iconst_1
      10: putfield      #64                 // Field global:Z
      13: aload_0
      14: areturn

  public org.sonar.api.config.PropertyDefinition$Builder onlyOnQualifiers(java.lang.String, java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #62                 // Field onlyOnQualifiers:Ljava/util/List;
       4: aload_1
       5: aload_2
       6: invokestatic  #93                 // Method addQualifiers:(Ljava/util/List;Ljava/lang/String;[Ljava/lang/String;)V
       9: aload_0
      10: iconst_0
      11: putfield      #64                 // Field global:Z
      14: aload_0
      15: areturn

  public org.sonar.api.config.PropertyDefinition$Builder onlyOnQualifiers(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #62                 // Field onlyOnQualifiers:Ljava/util/List;
       4: aload_1
       5: invokestatic  #101                // Method addQualifiers:(Ljava/util/List;Ljava/util/List;)V
       8: aload_0
       9: iconst_0
      10: putfield      #64                 // Field global:Z
      13: aload_0
      14: areturn

  private static void addQualifiers(java.util.List<java.lang.String>, java.lang.String, java.lang.String...);
    Code:
       0: new           #57                 // class java/util/ArrayList
       3: dup
       4: invokespecial #58                 // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_1
      10: invokeinterface #109,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      15: pop
      16: aload_3
      17: aload_2
      18: invokestatic  #115                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      21: invokeinterface #119,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      26: pop
      27: aload_0
      28: aload_3
      29: invokestatic  #101                // Method addQualifiers:(Ljava/util/List;Ljava/util/List;)V
      32: return

  private static void addQualifiers(java.util.List<java.lang.String>, java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: invokedynamic #139,  0            // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
       6: invokeinterface #143,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      11: aload_0
      12: aload_1
      13: invokeinterface #119,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      18: pop
      19: return

  private static void validateQualifier(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #146                // String Qualifier cannot be null
       3: invokestatic  #152                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: invokestatic  #156                // Method org/sonar/api/config/PropertyDefinition.access$1700:()Ljava/util/Set;
      10: aload_0
      11: invokeinterface #161,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      16: ldc           #163                // String Qualifier must be one of %s
      18: iconst_1
      19: anewarray     #4                  // class java/lang/Object
      22: dup
      23: iconst_0
      24: invokestatic  #156                // Method org/sonar/api/config/PropertyDefinition.access$1700:()Ljava/util/Set;
      27: aastore
      28: invokestatic  #169                // Method org/sonar/api/utils/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      31: return

  public org.sonar.api.config.PropertyDefinition$Builder type(org.sonar.api.PropertyType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #71                 // Field type:Lorg/sonar/api/PropertyType;
       5: aload_0
       6: areturn

  public org.sonar.api.config.PropertyDefinition$Builder options(java.lang.String, java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #73                 // Field options:Ljava/util/List;
       4: aload_1
       5: invokeinterface #109,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #73                 // Field options:Ljava/util/List;
      15: aload_2
      16: invokestatic  #115                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      19: invokeinterface #119,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      24: pop
      25: aload_0
      26: areturn

  public org.sonar.api.config.PropertyDefinition$Builder options(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #73                 // Field options:Ljava/util/List;
       4: aload_1
       5: invokeinterface #119,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      10: pop
      11: aload_0
      12: areturn

  public org.sonar.api.config.PropertyDefinition$Builder multiValues(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #75                 // Field multiValues:Z
       5: aload_0
       6: areturn

  public org.sonar.api.config.PropertyDefinition$Builder fields(org.sonar.api.config.PropertyFieldDefinition, org.sonar.api.config.PropertyFieldDefinition...);
    Code:
       0: aload_0
       1: getfield      #77                 // Field fields:Ljava/util/List;
       4: aload_1
       5: invokeinterface #109,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #77                 // Field fields:Ljava/util/List;
      15: aload_2
      16: invokestatic  #115                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      19: invokeinterface #119,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      24: pop
      25: aload_0
      26: areturn

  public org.sonar.api.config.PropertyDefinition$Builder fields(java.util.List<org.sonar.api.config.PropertyFieldDefinition>);
    Code:
       0: aload_0
       1: getfield      #77                 // Field fields:Ljava/util/List;
       4: aload_1
       5: invokeinterface #119,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      10: pop
      11: aload_0
      12: areturn

  public org.sonar.api.config.PropertyDefinition$Builder deprecatedKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #79                 // Field deprecatedKey:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonar.api.config.PropertyDefinition$Builder hidden();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #81                 // Field hidden:Z
       5: aload_0
       6: areturn

  public org.sonar.api.config.PropertyDefinition$Builder index(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #83                 // Field index:I
       5: aload_0
       6: areturn

  public org.sonar.api.config.PropertyDefinition build();
    Code:
       0: aload_0
       1: getfield      #85                 // Field key:Ljava/lang/String;
       4: invokestatic  #186                // Method org/sonar/api/internal/apachecommons/lang/StringUtils.isEmpty:(Ljava/lang/String;)Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ldc           #188                // String Key must be set
      17: invokestatic  #191                // Method org/sonar/api/utils/Preconditions.checkArgument:(ZLjava/lang/String;)V
      20: aload_0
      21: aload_0
      22: getfield      #85                 // Field key:Ljava/lang/String;
      25: aload_0
      26: getfield      #71                 // Field type:Lorg/sonar/api/PropertyType;
      29: invokespecial #195                // Method fixType:(Ljava/lang/String;Lorg/sonar/api/PropertyType;)V
      32: aload_0
      33: getfield      #60                 // Field onQualifiers:Ljava/util/List;
      36: invokeinterface #198,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      41: ifne          56
      44: aload_0
      45: getfield      #62                 // Field onlyOnQualifiers:Ljava/util/List;
      48: invokeinterface #198,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      53: ifeq          60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: ldc           #200                // String Cannot define both onQualifiers and onlyOnQualifiers
      63: invokestatic  #191                // Method org/sonar/api/utils/Preconditions.checkArgument:(ZLjava/lang/String;)V
      66: aload_0
      67: getfield      #81                 // Field hidden:Z
      70: ifeq          97
      73: aload_0
      74: getfield      #60                 // Field onQualifiers:Ljava/util/List;
      77: invokeinterface #198,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      82: ifeq          101
      85: aload_0
      86: getfield      #62                 // Field onlyOnQualifiers:Ljava/util/List;
      89: invokeinterface #198,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      94: ifeq          101
      97: iconst_1
      98: goto          102
     101: iconst_0
     102: ldc           #202                // String Cannot be hidden and defining qualifiers on which to display
     104: invokestatic  #191                // Method org/sonar/api/utils/Preconditions.checkArgument:(ZLjava/lang/String;)V
     107: getstatic     #205                // Field org/sonar/api/PropertyType.JSON:Lorg/sonar/api/PropertyType;
     110: aload_0
     111: getfield      #71                 // Field type:Lorg/sonar/api/PropertyType;
     114: invokevirtual #208                // Method org/sonar/api/PropertyType.equals:(Ljava/lang/Object;)Z
     117: ifeq          127
     120: aload_0
     121: getfield      #75                 // Field multiValues:Z
     124: ifne          131
     127: iconst_1
     128: goto          132
     131: iconst_0
     132: ldc           #210                // String Multivalues are not allowed to be defined for JSON-type property.
     134: invokestatic  #191                // Method org/sonar/api/utils/Preconditions.checkArgument:(ZLjava/lang/String;)V
     137: aload_0
     138: getfield      #81                 // Field hidden:Z
     141: ifeq          149
     144: aload_0
     145: iconst_0
     146: putfield      #64                 // Field global:Z
     149: aload_0
     150: getfield      #77                 // Field fields:Ljava/util/List;
     153: invokeinterface #198,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     158: ifne          168
     161: aload_0
     162: getstatic     #213                // Field org/sonar/api/PropertyType.PROPERTY_SET:Lorg/sonar/api/PropertyType;
     165: putfield      #71                 // Field type:Lorg/sonar/api/PropertyType;
     168: new           #7                  // class org/sonar/api/config/PropertyDefinition
     171: dup
     172: aload_0
     173: aconst_null
     174: invokespecial #216                // Method org/sonar/api/config/PropertyDefinition."<init>":(Lorg/sonar/api/config/PropertyDefinition$Builder;Lorg/sonar/api/config/PropertyDefinition$1;)V
     177: areturn

  private void fixType(java.lang.String, org.sonar.api.PropertyType);
    Code:
       0: aload_2
       1: getstatic     #69                 // Field org/sonar/api/PropertyType.STRING:Lorg/sonar/api/PropertyType;
       4: if_acmpne     42
       7: aload_1
       8: ldc           #218                // String .password.secured
      10: invokestatic  #222                // Method org/sonar/api/internal/apachecommons/lang/StringUtils.endsWith:(Ljava/lang/String;Ljava/lang/String;)Z
      13: ifeq          26
      16: aload_0
      17: getstatic     #225                // Field org/sonar/api/PropertyType.PASSWORD:Lorg/sonar/api/PropertyType;
      20: putfield      #71                 // Field type:Lorg/sonar/api/PropertyType;
      23: goto          42
      26: aload_1
      27: ldc           #227                // String .license.secured
      29: invokestatic  #222                // Method org/sonar/api/internal/apachecommons/lang/StringUtils.endsWith:(Ljava/lang/String;Ljava/lang/String;)Z
      32: ifeq          42
      35: aload_0
      36: getstatic     #230                // Field org/sonar/api/PropertyType.LICENSE:Lorg/sonar/api/PropertyType;
      39: putfield      #71                 // Field type:Lorg/sonar/api/PropertyType;
      42: return

  static java.lang.String access$000(org.sonar.api.config.PropertyDefinition$Builder);
    Code:
       0: aload_0
       1: getfield      #85                 // Field key:Ljava/lang/String;
       4: areturn

  static java.lang.String access$100(org.sonar.api.config.PropertyDefinition$Builder);
    Code:
       0: aload_0
       1: getfield      #47                 // Field name:Ljava/lang/String;
       4: areturn

  static java.lang.String access$200(org.sonar.api.config.PropertyDefinition$Builder);
    Code:
       0: aload_0
       1: getfield      #49                 // Field description:Ljava/lang/String;
       4: areturn

  static java.lang.String access$300(org.sonar.api.config.PropertyDefinition$Builder);
    Code:
       0: aload_0
       1: getfield      #51                 // Field defaultValue:Ljava/lang/String;
       4: areturn

  static java.lang.String access$400(org.sonar.api.config.PropertyDefinition$Builder);
    Code:
       0: aload_0
       1: getfield      #53                 // Field category:Ljava/lang/String;
       4: areturn

  static java.lang.String access$500(org.sonar.api.config.PropertyDefinition$Builder);
    Code:
       0: aload_0
       1: getfield      #55                 // Field subCategory:Ljava/lang/String;
       4: areturn

  static boolean access$600(org.sonar.api.config.PropertyDefinition$Builder);
    Code:
       0: aload_0
       1: getfield      #64                 // Field global:Z
       4: ireturn

  static org.sonar.api.PropertyType access$700(org.sonar.api.config.PropertyDefinition$Builder);
    Code:
       0: aload_0
       1: getfield      #71                 // Field type:Lorg/sonar/api/PropertyType;
       4: areturn

  static java.util.List access$800(org.sonar.api.config.PropertyDefinition$Builder);
    Code:
       0: aload_0
       1: getfield      #73                 // Field options:Ljava/util/List;
       4: areturn

  static boolean access$900(org.sonar.api.config.PropertyDefinition$Builder);
    Code:
       0: aload_0
       1: getfield      #75                 // Field multiValues:Z
       4: ireturn

  static java.util.List access$1000(org.sonar.api.config.PropertyDefinition$Builder);
    Code:
       0: aload_0
       1: getfield      #77                 // Field fields:Ljava/util/List;
       4: areturn

  static java.lang.String access$1100(org.sonar.api.config.PropertyDefinition$Builder);
    Code:
       0: aload_0
       1: getfield      #79                 // Field deprecatedKey:Ljava/lang/String;
       4: areturn

  static java.util.List access$1200(org.sonar.api.config.PropertyDefinition$Builder);
    Code:
       0: aload_0
       1: getfield      #60                 // Field onQualifiers:Ljava/util/List;
       4: areturn

  static java.util.List access$1300(org.sonar.api.config.PropertyDefinition$Builder);
    Code:
       0: aload_0
       1: getfield      #62                 // Field onlyOnQualifiers:Ljava/util/List;
       4: areturn

  static int access$1400(org.sonar.api.config.PropertyDefinition$Builder);
    Code:
       0: aload_0
       1: getfield      #83                 // Field index:I
       4: ireturn

  org.sonar.api.config.PropertyDefinition$Builder(java.lang.String, org.sonar.api.config.PropertyDefinition$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #254                // Method "<init>":(Ljava/lang/String;)V
       5: return
}
