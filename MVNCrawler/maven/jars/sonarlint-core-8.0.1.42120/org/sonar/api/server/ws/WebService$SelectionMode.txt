Compiled from "WebService.java"
public final class org.sonar.api.server.ws.WebService$SelectionMode extends java.lang.Enum<org.sonar.api.server.ws.WebService$SelectionMode> {
  public static final org.sonar.api.server.ws.WebService$SelectionMode SELECTED;

  public static final org.sonar.api.server.ws.WebService$SelectionMode DESELECTED;

  public static final org.sonar.api.server.ws.WebService$SelectionMode ALL;

  private final java.lang.String paramValue;

  private static final java.util.Map<java.lang.String, org.sonar.api.server.ws.WebService$SelectionMode> BY_VALUE;

  private static final org.sonar.api.server.ws.WebService$SelectionMode[] $VALUES;

  public static org.sonar.api.server.ws.WebService$SelectionMode[] values();
    Code:
       0: getstatic     #29                 // Field $VALUES:[Lorg/sonar/api/server/ws/WebService$SelectionMode;
       3: invokevirtual #34                 // Method "[Lorg/sonar/api/server/ws/WebService$SelectionMode;".clone:()Ljava/lang/Object;
       6: checkcast     #30                 // class "[Lorg/sonar/api/server/ws/WebService$SelectionMode;"
       9: areturn

  public static org.sonar.api.server.ws.WebService$SelectionMode valueOf(java.lang.String);
    Code:
       0: ldc           #2                  // class org/sonar/api/server/ws/WebService$SelectionMode
       2: aload_0
       3: invokestatic  #39                 // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #2                  // class org/sonar/api/server/ws/WebService$SelectionMode
       9: areturn

  private org.sonar.api.server.ws.WebService$SelectionMode(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #46                 // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: aload_3
       8: putfield      #48                 // Field paramValue:Ljava/lang/String;
      11: return

  public java.lang.String value();
    Code:
       0: aload_0
       1: getfield      #48                 // Field paramValue:Ljava/lang/String;
       4: areturn

  public static org.sonar.api.server.ws.WebService$SelectionMode fromParam(java.lang.String);
    Code:
       0: getstatic     #54                 // Field BY_VALUE:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #60,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
       9: invokestatic  #66                 // Method org/sonar/api/utils/Preconditions.checkArgument:(Z)V
      12: getstatic     #54                 // Field BY_VALUE:Ljava/util/Map;
      15: aload_0
      16: invokeinterface #70,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #2                  // class org/sonar/api/server/ws/WebService$SelectionMode
      24: areturn

  public static java.util.Collection<java.lang.String> possibleValues();
    Code:
       0: getstatic     #54                 // Field BY_VALUE:Ljava/util/Map;
       3: invokeinterface #77,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       8: areturn

  private static org.sonar.api.server.ws.WebService$SelectionMode lambda$static$1(org.sonar.api.server.ws.WebService$SelectionMode);
    Code:
       0: aload_0
       1: areturn

  private static java.lang.String lambda$static$0(org.sonar.api.server.ws.WebService$SelectionMode);
    Code:
       0: aload_0
       1: getfield      #48                 // Field paramValue:Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: new           #2                  // class org/sonar/api/server/ws/WebService$SelectionMode
       3: dup
       4: ldc           #85                 // String SELECTED
       6: iconst_0
       7: ldc           #87                 // String selected
       9: invokespecial #89                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      12: putstatic     #91                 // Field SELECTED:Lorg/sonar/api/server/ws/WebService$SelectionMode;
      15: new           #2                  // class org/sonar/api/server/ws/WebService$SelectionMode
      18: dup
      19: ldc           #92                 // String DESELECTED
      21: iconst_1
      22: ldc           #94                 // String deselected
      24: invokespecial #89                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      27: putstatic     #96                 // Field DESELECTED:Lorg/sonar/api/server/ws/WebService$SelectionMode;
      30: new           #2                  // class org/sonar/api/server/ws/WebService$SelectionMode
      33: dup
      34: ldc           #97                 // String ALL
      36: iconst_2
      37: ldc           #99                 // String all
      39: invokespecial #89                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      42: putstatic     #101                // Field ALL:Lorg/sonar/api/server/ws/WebService$SelectionMode;
      45: iconst_3
      46: anewarray     #2                  // class org/sonar/api/server/ws/WebService$SelectionMode
      49: dup
      50: iconst_0
      51: getstatic     #91                 // Field SELECTED:Lorg/sonar/api/server/ws/WebService$SelectionMode;
      54: aastore
      55: dup
      56: iconst_1
      57: getstatic     #96                 // Field DESELECTED:Lorg/sonar/api/server/ws/WebService$SelectionMode;
      60: aastore
      61: dup
      62: iconst_2
      63: getstatic     #101                // Field ALL:Lorg/sonar/api/server/ws/WebService$SelectionMode;
      66: aastore
      67: putstatic     #29                 // Field $VALUES:[Lorg/sonar/api/server/ws/WebService$SelectionMode;
      70: invokestatic  #103                // Method values:()[Lorg/sonar/api/server/ws/WebService$SelectionMode;
      73: invokestatic  #109                // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      76: invokedynamic #125,  0            // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      81: invokedynamic #130,  0            // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      86: invokestatic  #136                // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      89: invokeinterface #142,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      94: checkcast     #56                 // class java/util/Map
      97: putstatic     #54                 // Field BY_VALUE:Ljava/util/Map;
     100: return
}
