Compiled from "Request.java"
final class org.sonar.api.server.ws.Request$AbsentStringParam extends java.lang.Enum<org.sonar.api.server.ws.Request$AbsentStringParam> implements org.sonar.api.server.ws.Request$StringParam {
  public static final org.sonar.api.server.ws.Request$AbsentStringParam INSTANCE;

  private static final org.sonar.api.server.ws.Request$AbsentStringParam[] $VALUES;

  public static org.sonar.api.server.ws.Request$AbsentStringParam[] values();
    Code:
       0: getstatic     #20                 // Field $VALUES:[Lorg/sonar/api/server/ws/Request$AbsentStringParam;
       3: invokevirtual #25                 // Method "[Lorg/sonar/api/server/ws/Request$AbsentStringParam;".clone:()Ljava/lang/Object;
       6: checkcast     #21                 // class "[Lorg/sonar/api/server/ws/Request$AbsentStringParam;"
       9: areturn

  public static org.sonar.api.server.ws.Request$AbsentStringParam valueOf(java.lang.String);
    Code:
       0: ldc           #2                  // class org/sonar/api/server/ws/Request$AbsentStringParam
       2: aload_0
       3: invokestatic  #30                 // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #2                  // class org/sonar/api/server/ws/Request$AbsentStringParam
       9: areturn

  private org.sonar.api.server.ws.Request$AbsentStringParam();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #37                 // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  protected static org.sonar.api.server.ws.Request$StringParam absent();
    Code:
       0: getstatic     #42                 // Field INSTANCE:Lorg/sonar/api/server/ws/Request$AbsentStringParam;
       3: areturn

  public boolean isPresent();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String getValue();
    Code:
       0: invokestatic  #50                 // Method org/sonar/api/server/ws/Request.access$000:()Ljava/lang/IllegalStateException;
       3: athrow

  public java.lang.String or(java.util.function.Supplier<java.lang.String>);
    Code:
       0: aload_1
       1: invokestatic  #57                 // Method org/sonar/api/server/ws/Request.access$100:(Ljava/util/function/Supplier;)Ljava/util/function/Supplier;
       4: invokeinterface #62,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       9: checkcast     #64                 // class java/lang/String
      12: areturn

  public org.sonar.api.server.ws.Request$StringParam emptyAsNull();
    Code:
       0: aload_0
       1: areturn

  public java.lang.Object or(java.util.function.Supplier);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #71                 // Method or:(Ljava/util/function/Supplier;)Ljava/lang/String;
       5: areturn

  public java.lang.Object getValue();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method getValue:()Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: new           #2                  // class org/sonar/api/server/ws/Request$AbsentStringParam
       3: dup
       4: ldc           #75                 // String INSTANCE
       6: iconst_0
       7: invokespecial #76                 // Method "<init>":(Ljava/lang/String;I)V
      10: putstatic     #42                 // Field INSTANCE:Lorg/sonar/api/server/ws/Request$AbsentStringParam;
      13: iconst_1
      14: anewarray     #2                  // class org/sonar/api/server/ws/Request$AbsentStringParam
      17: dup
      18: iconst_0
      19: getstatic     #42                 // Field INSTANCE:Lorg/sonar/api/server/ws/Request$AbsentStringParam;
      22: aastore
      23: putstatic     #20                 // Field $VALUES:[Lorg/sonar/api/server/ws/Request$AbsentStringParam;
      26: return
}
