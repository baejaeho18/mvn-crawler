Compiled from "ResourceTypes.java"
public class org.sonar.api.resources.ResourceTypes {
  private final java.util.Map<java.lang.String, org.sonar.api.resources.ResourceTypeTree> treeByQualifier;

  private final java.util.Map<java.lang.String, org.sonar.api.resources.ResourceType> typeByQualifier;

  private final java.util.Collection<org.sonar.api.resources.ResourceType> rootTypes;

  public org.sonar.api.resources.ResourceTypes(org.sonar.api.resources.ResourceTypeTree[]);
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #31                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: new           #33                 // class java/util/LinkedHashMap
      12: dup
      13: invokespecial #34                 // Method java/util/LinkedHashMap."<init>":()V
      16: astore_2
      17: new           #33                 // class java/util/LinkedHashMap
      20: dup
      21: invokespecial #34                 // Method java/util/LinkedHashMap."<init>":()V
      24: astore_3
      25: new           #36                 // class java/util/LinkedHashSet
      28: dup
      29: invokespecial #37                 // Method java/util/LinkedHashSet."<init>":()V
      32: astore        4
      34: aload_1
      35: astore        5
      37: aload         5
      39: arraylength
      40: istore        6
      42: iconst_0
      43: istore        7
      45: iload         7
      47: iload         6
      49: if_icmpge     193
      52: aload         5
      54: iload         7
      56: aaload
      57: astore        8
      59: aload         4
      61: aload         8
      63: invokevirtual #49                 // Method org/sonar/api/resources/ResourceTypeTree.getRootType:()Lorg/sonar/api/resources/ResourceType;
      66: invokeinterface #53,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      71: pop
      72: aload         8
      74: invokevirtual #57                 // Method org/sonar/api/resources/ResourceTypeTree.getTypes:()Ljava/util/List;
      77: invokeinterface #63,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      82: astore        9
      84: aload         9
      86: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      91: ifeq          187
      94: aload         9
      96: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     101: checkcast     #11                 // class org/sonar/api/resources/ResourceType
     104: astore        10
     106: aload_2
     107: aload         10
     109: invokevirtual #77                 // Method org/sonar/api/resources/ResourceType.getQualifier:()Ljava/lang/String;
     112: invokeinterface #80,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     117: ifeq          156
     120: new           #82                 // class java/lang/IllegalStateException
     123: dup
     124: new           #84                 // class java/lang/StringBuilder
     127: dup
     128: invokespecial #85                 // Method java/lang/StringBuilder."<init>":()V
     131: ldc           #87                 // String Qualifier
     133: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: aload         10
     138: invokevirtual #77                 // Method org/sonar/api/resources/ResourceType.getQualifier:()Ljava/lang/String;
     141: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: ldc           #93                 // String  is defined in several trees
     146: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     152: invokespecial #99                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     155: athrow
     156: aload_2
     157: aload         10
     159: invokevirtual #77                 // Method org/sonar/api/resources/ResourceType.getQualifier:()Ljava/lang/String;
     162: aload         8
     164: invokeinterface #103,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     169: pop
     170: aload_3
     171: aload         10
     173: invokevirtual #77                 // Method org/sonar/api/resources/ResourceType.getQualifier:()Ljava/lang/String;
     176: aload         10
     178: invokeinterface #103,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     183: pop
     184: goto          84
     187: iinc          7, 1
     190: goto          45
     193: aload_0
     194: new           #33                 // class java/util/LinkedHashMap
     197: dup
     198: aload_2
     199: invokespecial #106                // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
     202: invokestatic  #112                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     205: putfield      #114                // Field treeByQualifier:Ljava/util/Map;
     208: aload_0
     209: new           #33                 // class java/util/LinkedHashMap
     212: dup
     213: aload_3
     214: invokespecial #106                // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
     217: invokestatic  #112                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     220: putfield      #116                // Field typeByQualifier:Ljava/util/Map;
     223: aload_0
     224: new           #118                // class java/util/ArrayList
     227: dup
     228: aload         4
     230: invokespecial #121                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     233: invokestatic  #125                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
     236: putfield      #127                // Field rootTypes:Ljava/util/Collection;
     239: return

  public org.sonar.api.resources.ResourceType get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #116                // Field typeByQualifier:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #141,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #11                 // class org/sonar/api/resources/ResourceType
      13: astore_2
      14: aload_2
      15: ifnull        22
      18: aload_2
      19: goto          29
      22: aload_1
      23: invokestatic  #145                // Method org/sonar/api/resources/ResourceType.builder:(Ljava/lang/String;)Lorg/sonar/api/resources/ResourceType$Builder;
      26: invokevirtual #148                // Method org/sonar/api/resources/ResourceType$Builder.build:()Lorg/sonar/api/resources/ResourceType;
      29: areturn

  public java.util.Collection<org.sonar.api.resources.ResourceType> getAll();
    Code:
       0: aload_0
       1: getfield      #116                // Field typeByQualifier:Ljava/util/Map;
       4: invokeinterface #156,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  public java.util.Collection<org.sonar.api.resources.ResourceType> getRoots();
    Code:
       0: aload_0
       1: getfield      #127                // Field rootTypes:Ljava/util/Collection;
       4: areturn

  public boolean isQualifierPresent(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #116                // Field typeByQualifier:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #141,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: ifnull        17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public java.util.List<java.lang.String> getLeavesQualifiers(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #166                // Method getTree:(Ljava/lang/String;)Lorg/sonar/api/resources/ResourceTypeTree;
       5: astore_2
       6: aload_2
       7: ifnull        15
      10: aload_2
      11: invokevirtual #169                // Method org/sonar/api/resources/ResourceTypeTree.getLeaves:()Ljava/util/List;
      14: areturn
      15: invokestatic  #172                // Method java/util/Collections.emptyList:()Ljava/util/List;
      18: areturn

  private org.sonar.api.resources.ResourceTypeTree getTree(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #114                // Field treeByQualifier:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #141,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #45                 // class org/sonar/api/resources/ResourceTypeTree
      13: areturn
}
