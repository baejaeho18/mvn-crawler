Compiled from "ResourceTypeTree.java"
public class org.sonar.api.resources.ResourceTypeTree {
  private final java.util.List<org.sonar.api.resources.ResourceType> types;

  private final java.util.Map<java.lang.String, java.util.List<java.lang.String>> relations;

  private final org.sonar.api.resources.ResourceType root;

  private org.sonar.api.resources.ResourceTypeTree(org.sonar.api.resources.ResourceTypeTree$Builder);
    Code:
       0: aload_0
       1: invokespecial #31                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #33                 // class java/util/ArrayList
       8: dup
       9: aload_1
      10: invokestatic  #37                 // Method org/sonar/api/resources/ResourceTypeTree$Builder.access$000:(Lorg/sonar/api/resources/ResourceTypeTree$Builder;)Ljava/util/List;
      13: invokespecial #40                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      16: invokestatic  #46                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      19: putfield      #48                 // Field types:Ljava/util/List;
      22: aload_0
      23: aload_1
      24: invokestatic  #52                 // Method org/sonar/api/resources/ResourceTypeTree$Builder.access$100:(Lorg/sonar/api/resources/ResourceTypeTree$Builder;)Ljava/util/Map;
      27: invokestatic  #56                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      30: putfield      #58                 // Field relations:Ljava/util/Map;
      33: aload_0
      34: aload_1
      35: invokestatic  #62                 // Method org/sonar/api/resources/ResourceTypeTree$Builder.access$200:(Lorg/sonar/api/resources/ResourceTypeTree$Builder;)Lorg/sonar/api/resources/ResourceType;
      38: putfield      #64                 // Field root:Lorg/sonar/api/resources/ResourceType;
      41: return

  public java.util.List<org.sonar.api.resources.ResourceType> getTypes();
    Code:
       0: aload_0
       1: getfield      #48                 // Field types:Ljava/util/List;
       4: areturn

  public java.util.List<java.lang.String> getChildren(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #58                 // Field relations:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #77                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       8: invokeinterface #83,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #85                 // class java/util/List
      16: areturn

  public org.sonar.api.resources.ResourceType getRootType();
    Code:
       0: aload_0
       1: getfield      #64                 // Field root:Lorg/sonar/api/resources/ResourceType;
       4: areturn

  public java.util.List<java.lang.String> getLeaves();
    Code:
       0: aload_0
       1: getfield      #58                 // Field relations:Ljava/util/Map;
       4: invokeinterface #95,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #101,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      14: invokedynamic #117,  0            // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      19: invokeinterface #123,  2          // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      24: aload_0
      25: invokedynamic #135,  0            // InvokeDynamic #1:test:(Lorg/sonar/api/resources/ResourceTypeTree;)Ljava/util/function/Predicate;
      30: invokeinterface #139,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      35: invokestatic  #145                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      38: invokeinterface #149,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      43: checkcast     #85                 // class java/util/List
      46: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #64                 // Field root:Lorg/sonar/api/resources/ResourceType;
       4: invokevirtual #156                // Method org/sonar/api/resources/ResourceType.getQualifier:()Ljava/lang/String;
       7: areturn

  public static org.sonar.api.resources.ResourceTypeTree$Builder builder();
    Code:
       0: new           #12                 // class org/sonar/api/resources/ResourceTypeTree$Builder
       3: dup
       4: aconst_null
       5: invokespecial #160                // Method org/sonar/api/resources/ResourceTypeTree$Builder."<init>":(Lorg/sonar/api/resources/ResourceTypeTree$1;)V
       8: areturn

  private boolean lambda$getLeaves$0(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #58                 // Field relations:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #163,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  org.sonar.api.resources.ResourceTypeTree(org.sonar.api.resources.ResourceTypeTree$Builder, org.sonar.api.resources.ResourceTypeTree$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #166                // Method "<init>":(Lorg/sonar/api/resources/ResourceTypeTree$Builder;)V
       5: return
}
