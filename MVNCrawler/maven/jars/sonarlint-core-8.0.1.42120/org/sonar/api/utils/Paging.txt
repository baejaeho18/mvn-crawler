Compiled from "Paging.java"
public class org.sonar.api.utils.Paging {
  private final int pageSize;

  private final int pageIndex;

  private final int total;

  private org.sonar.api.utils.Paging(int, int, int);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object."<init>":()V
       4: iload_1
       5: iconst_1
       6: if_icmplt     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ldc           #21                 // String Page size must be strictly positive. Got %s
      16: iconst_1
      17: anewarray     #4                  // class java/lang/Object
      20: dup
      21: iconst_0
      22: iload_1
      23: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: aastore
      27: invokestatic  #33                 // Method org/sonar/api/utils/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      30: iload_2
      31: iconst_1
      32: if_icmplt     39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ldc           #35                 // String Page index must be strictly positive. Got %s
      42: iconst_1
      43: anewarray     #4                  // class java/lang/Object
      46: dup
      47: iconst_0
      48: iload_2
      49: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      52: aastore
      53: invokestatic  #33                 // Method org/sonar/api/utils/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      56: iload_3
      57: iflt          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: ldc           #37                 // String Total items must be positive. Got %s
      67: iconst_1
      68: anewarray     #4                  // class java/lang/Object
      71: dup
      72: iconst_0
      73: iload_3
      74: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      77: aastore
      78: invokestatic  #33                 // Method org/sonar/api/utils/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      81: aload_0
      82: iload_1
      83: putfield      #39                 // Field pageSize:I
      86: aload_0
      87: iload_2
      88: putfield      #41                 // Field pageIndex:I
      91: aload_0
      92: iload_3
      93: putfield      #43                 // Field total:I
      96: return

  public static org.sonar.api.utils.Paging$Builder forPageIndex(int);
    Code:
       0: new           #9                  // class org/sonar/api/utils/Paging$Builder
       3: dup
       4: iload_0
       5: aconst_null
       6: invokespecial #50                 // Method org/sonar/api/utils/Paging$Builder."<init>":(ILorg/sonar/api/utils/Paging$1;)V
       9: areturn

  public int pageIndex();
    Code:
       0: aload_0
       1: getfield      #41                 // Field pageIndex:I
       4: ireturn

  public int pageSize();
    Code:
       0: aload_0
       1: getfield      #39                 // Field pageSize:I
       4: ireturn

  public int total();
    Code:
       0: aload_0
       1: getfield      #43                 // Field total:I
       4: ireturn

  public int offset();
    Code:
       0: aload_0
       1: getfield      #41                 // Field pageIndex:I
       4: iconst_1
       5: isub
       6: aload_0
       7: getfield      #39                 // Field pageSize:I
      10: imul
      11: ireturn

  public static int offset(int, int);
    Code:
       0: iload_0
       1: iconst_1
       2: isub
       3: iload_1
       4: imul
       5: ireturn

  public int pages();
    Code:
       0: aload_0
       1: getfield      #43                 // Field total:I
       4: aload_0
       5: getfield      #39                 // Field pageSize:I
       8: idiv
       9: istore_1
      10: aload_0
      11: getfield      #43                 // Field total:I
      14: aload_0
      15: getfield      #39                 // Field pageSize:I
      18: irem
      19: ifle          25
      22: iinc          1, 1
      25: iload_1
      26: ireturn

  public boolean hasNextPage();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method pageIndex:()I
       4: aload_0
       5: invokevirtual #61                 // Method pages:()I
       8: if_icmpge     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  org.sonar.api.utils.Paging(int, int, int, org.sonar.api.utils.Paging$1);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokespecial #64                 // Method "<init>":(III)V
       7: return
}
