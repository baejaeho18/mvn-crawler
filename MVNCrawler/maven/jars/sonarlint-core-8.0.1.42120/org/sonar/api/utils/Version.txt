Compiled from "Version.java"
public class org.sonar.api.utils.Version implements java.lang.Comparable<org.sonar.api.utils.Version> {
  private static final long DEFAULT_BUILD_NUMBER;

  private static final int DEFAULT_PATCH;

  private static final java.lang.String DEFAULT_QUALIFIER;

  private static final java.lang.String QUALIFIER_SEPARATOR;

  private static final java.lang.String SEQUENCE_SEPARATOR;

  private final int major;

  private final int minor;

  private final int patch;

  private final long buildNumber;

  private final java.lang.String qualifier;

  private org.sonar.api.utils.Version(int, int, int, long, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #36                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #38                 // Field major:I
       9: aload_0
      10: iload_2
      11: putfield      #40                 // Field minor:I
      14: aload_0
      15: iload_3
      16: putfield      #42                 // Field patch:I
      19: aload_0
      20: lload         4
      22: putfield      #44                 // Field buildNumber:J
      25: aload_0
      26: aload         6
      28: ldc           #46                 // String Version qualifier must not be null
      30: invokestatic  #52                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      33: checkcast     #54                 // class java/lang/String
      36: putfield      #56                 // Field qualifier:Ljava/lang/String;
      39: return

  public int major();
    Code:
       0: aload_0
       1: getfield      #38                 // Field major:I
       4: ireturn

  public int minor();
    Code:
       0: aload_0
       1: getfield      #40                 // Field minor:I
       4: ireturn

  public int patch();
    Code:
       0: aload_0
       1: getfield      #42                 // Field patch:I
       4: ireturn

  public long buildNumber();
    Code:
       0: aload_0
       1: getfield      #44                 // Field buildNumber:J
       4: lreturn

  public java.lang.String qualifier();
    Code:
       0: aload_0
       1: getfield      #56                 // Field qualifier:Ljava/lang/String;
       4: areturn

  public static org.sonar.api.utils.Version parse(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #69                 // Method org/sonar/api/internal/apachecommons/lang/StringUtils.trimToEmpty:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ldc           #23                 // String -
       8: invokestatic  #73                 // Method org/sonar/api/internal/apachecommons/lang/StringUtils.substringAfter:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      11: astore_2
      12: aload_2
      13: invokevirtual #77                 // Method java/lang/String.isEmpty:()Z
      16: ifne          26
      19: aload_1
      20: ldc           #23                 // String -
      22: invokestatic  #80                 // Method org/sonar/api/internal/apachecommons/lang/StringUtils.substringBefore:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      25: astore_1
      26: aload_1
      27: ldc           #26                 // String .
      29: invokestatic  #85                 // Method java/util/regex/Pattern.quote:(Ljava/lang/String;)Ljava/lang/String;
      32: invokevirtual #89                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      35: astore_3
      36: iconst_0
      37: istore        4
      39: iconst_0
      40: istore        5
      42: iconst_0
      43: istore        6
      45: lconst_0
      46: lstore        7
      48: aload_3
      49: arraylength
      50: istore        9
      52: iload         9
      54: ifle          140
      57: aload_3
      58: iconst_0
      59: aaload
      60: invokestatic  #93                 // Method parseFieldAsInt:(Ljava/lang/String;)I
      63: istore        4
      65: iload         9
      67: iconst_1
      68: if_icmple     140
      71: aload_3
      72: iconst_1
      73: aaload
      74: invokestatic  #93                 // Method parseFieldAsInt:(Ljava/lang/String;)I
      77: istore        5
      79: iload         9
      81: iconst_2
      82: if_icmple     140
      85: aload_3
      86: iconst_2
      87: aaload
      88: invokestatic  #93                 // Method parseFieldAsInt:(Ljava/lang/String;)I
      91: istore        6
      93: iload         9
      95: iconst_3
      96: if_icmple     140
      99: aload_3
     100: iconst_3
     101: aaload
     102: invokestatic  #97                 // Method parseFieldAsLong:(Ljava/lang/String;)J
     105: lstore        7
     107: iload         9
     109: iconst_4
     110: if_icmple     140
     113: new           #99                 // class java/lang/IllegalArgumentException
     116: dup
     117: new           #101                // class java/lang/StringBuilder
     120: dup
     121: invokespecial #102                // Method java/lang/StringBuilder."<init>":()V
     124: ldc           #104                // String Maximum 4 fields are accepted:
     126: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: aload_0
     130: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: invokevirtual #111                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     136: invokespecial #114                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     139: athrow
     140: new           #2                  // class org/sonar/api/utils/Version
     143: dup
     144: iload         4
     146: iload         5
     148: iload         6
     150: lload         7
     152: aload_2
     153: invokespecial #118                // Method "<init>":(IIIJLjava/lang/String;)V
     156: areturn

  public static org.sonar.api.utils.Version create(int, int);
    Code:
       0: new           #2                  // class org/sonar/api/utils/Version
       3: dup
       4: iload_0
       5: iload_1
       6: iconst_0
       7: lconst_0
       8: ldc           #20                 // String
      10: invokespecial #118                // Method "<init>":(IIIJLjava/lang/String;)V
      13: areturn

  public static org.sonar.api.utils.Version create(int, int, int);
    Code:
       0: new           #2                  // class org/sonar/api/utils/Version
       3: dup
       4: iload_0
       5: iload_1
       6: iload_2
       7: lconst_0
       8: ldc           #20                 // String
      10: invokespecial #118                // Method "<init>":(IIIJLjava/lang/String;)V
      13: areturn

  private static int parseFieldAsInt(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method java/lang/String.isEmpty:()Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokestatic  #130                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      13: ireturn

  private static long parseFieldAsLong(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method java/lang/String.isEmpty:()Z
       4: ifeq          9
       7: lconst_0
       8: lreturn
       9: aload_0
      10: invokestatic  #136                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      13: lreturn

  public boolean isGreaterThanOrEqual(org.sonar.api.utils.Version);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #142                // Method compareTo:(Lorg/sonar/api/utils/Version;)I
       5: iflt          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #149                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #149                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #2                  // class org/sonar/api/utils/Version
      28: astore_2
      29: aload_0
      30: getfield      #38                 // Field major:I
      33: aload_2
      34: getfield      #38                 // Field major:I
      37: if_icmpeq     42
      40: iconst_0
      41: ireturn
      42: aload_0
      43: getfield      #40                 // Field minor:I
      46: aload_2
      47: getfield      #40                 // Field minor:I
      50: if_icmpeq     55
      53: iconst_0
      54: ireturn
      55: aload_0
      56: getfield      #42                 // Field patch:I
      59: aload_2
      60: getfield      #42                 // Field patch:I
      63: if_icmpeq     68
      66: iconst_0
      67: ireturn
      68: aload_0
      69: getfield      #44                 // Field buildNumber:J
      72: aload_2
      73: getfield      #44                 // Field buildNumber:J
      76: lcmp
      77: ifne          84
      80: iconst_1
      81: goto          85
      84: iconst_0
      85: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #38                 // Field major:I
       4: istore_1
       5: bipush        31
       7: iload_1
       8: imul
       9: aload_0
      10: getfield      #40                 // Field minor:I
      13: iadd
      14: istore_1
      15: bipush        31
      17: iload_1
      18: imul
      19: aload_0
      20: getfield      #42                 // Field patch:I
      23: iadd
      24: istore_1
      25: bipush        31
      27: iload_1
      28: imul
      29: aload_0
      30: getfield      #44                 // Field buildNumber:J
      33: aload_0
      34: getfield      #44                 // Field buildNumber:J
      37: bipush        32
      39: lushr
      40: lxor
      41: l2i
      42: iadd
      43: istore_1
      44: iload_1
      45: ireturn

  public int compareTo(org.sonar.api.utils.Version);
    Code:
       0: aload_0
       1: getfield      #38                 // Field major:I
       4: aload_1
       5: getfield      #38                 // Field major:I
       8: isub
       9: istore_2
      10: iload_2
      11: ifne          74
      14: aload_0
      15: getfield      #40                 // Field minor:I
      18: aload_1
      19: getfield      #40                 // Field minor:I
      22: isub
      23: istore_2
      24: iload_2
      25: ifne          74
      28: aload_0
      29: getfield      #42                 // Field patch:I
      32: aload_1
      33: getfield      #42                 // Field patch:I
      36: isub
      37: istore_2
      38: iload_2
      39: ifne          74
      42: aload_0
      43: getfield      #44                 // Field buildNumber:J
      46: aload_1
      47: getfield      #44                 // Field buildNumber:J
      50: lsub
      51: lstore_3
      52: lload_3
      53: lconst_0
      54: lcmp
      55: ifle          62
      58: iconst_1
      59: goto          73
      62: lload_3
      63: lconst_0
      64: lcmp
      65: ifge          72
      68: iconst_m1
      69: goto          73
      72: iconst_0
      73: istore_2
      74: iload_2
      75: ireturn

  public java.lang.String toString();
    Code:
       0: new           #101                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #102                // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #38                 // Field major:I
      13: invokevirtual #160                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      16: ldc           #26                 // String .
      18: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: getfield      #40                 // Field minor:I
      25: invokevirtual #160                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: pop
      29: aload_0
      30: getfield      #42                 // Field patch:I
      33: ifgt          45
      36: aload_0
      37: getfield      #44                 // Field buildNumber:J
      40: lconst_0
      41: lcmp
      42: ifle          82
      45: aload_1
      46: ldc           #26                 // String .
      48: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_0
      52: getfield      #42                 // Field patch:I
      55: invokevirtual #160                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      58: pop
      59: aload_0
      60: getfield      #44                 // Field buildNumber:J
      63: lconst_0
      64: lcmp
      65: ifle          82
      68: aload_1
      69: ldc           #26                 // String .
      71: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: getfield      #44                 // Field buildNumber:J
      78: invokevirtual #163                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      81: pop
      82: aload_0
      83: getfield      #56                 // Field qualifier:Ljava/lang/String;
      86: invokevirtual #77                 // Method java/lang/String.isEmpty:()Z
      89: ifne          106
      92: aload_1
      93: ldc           #23                 // String -
      95: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: getfield      #56                 // Field qualifier:Ljava/lang/String;
     102: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: pop
     106: aload_1
     107: invokevirtual #111                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class org/sonar/api/utils/Version
       5: invokevirtual #142                // Method compareTo:(Lorg/sonar/api/utils/Version;)I
       8: ireturn
}
