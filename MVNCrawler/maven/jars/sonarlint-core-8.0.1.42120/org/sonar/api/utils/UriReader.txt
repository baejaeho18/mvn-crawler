Compiled from "UriReader.java"
public class org.sonar.api.utils.UriReader {
  private final java.util.Map<java.lang.String, org.sonar.api.utils.UriReader$SchemeProcessor> processorsByScheme;

  public org.sonar.api.utils.UriReader(org.sonar.api.utils.UriReader$SchemeProcessor[]);
    Code:
       0: aload_0
       1: invokespecial #29                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #31                 // class java/util/HashMap
       8: dup
       9: invokespecial #32                 // Method java/util/HashMap."<init>":()V
      12: putfield      #34                 // Field processorsByScheme:Ljava/util/Map;
      15: new           #12                 // class org/sonar/api/utils/UriReader$FileProcessor
      18: dup
      19: aconst_null
      20: invokespecial #37                 // Method org/sonar/api/utils/UriReader$FileProcessor."<init>":(Lorg/sonar/api/utils/UriReader$1;)V
      23: invokestatic  #43                 // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
      26: aload_1
      27: invokestatic  #49                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      30: invokestatic  #53                 // InterfaceMethod java/util/stream/Stream.concat:(Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;
      33: aload_0
      34: invokedynamic #72,  0             // InvokeDynamic #0:accept:(Lorg/sonar/api/utils/UriReader;)Ljava/util/function/Consumer;
      39: invokeinterface #76,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      44: return

  public byte[] readBytes(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #86                 // Method searchForSupportedProcessor:(Ljava/net/URI;)Lorg/sonar/api/utils/UriReader$SchemeProcessor;
       5: aload_1
       6: invokevirtual #88                 // Method org/sonar/api/utils/UriReader$SchemeProcessor.readBytes:(Ljava/net/URI;)[B
       9: areturn

  public java.lang.String readString(java.net.URI, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #86                 // Method searchForSupportedProcessor:(Ljava/net/URI;)Lorg/sonar/api/utils/UriReader$SchemeProcessor;
       5: aload_1
       6: aload_2
       7: invokevirtual #94                 // Method org/sonar/api/utils/UriReader$SchemeProcessor.readString:(Ljava/net/URI;Ljava/nio/charset/Charset;)Ljava/lang/String;
      10: areturn

  public java.lang.String description(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #86                 // Method searchForSupportedProcessor:(Ljava/net/URI;)Lorg/sonar/api/utils/UriReader$SchemeProcessor;
       5: astore_2
       6: aload_2
       7: aload_1
       8: invokevirtual #100                // Method org/sonar/api/utils/UriReader$SchemeProcessor.description:(Ljava/net/URI;)Ljava/lang/String;
      11: areturn

  org.sonar.api.utils.UriReader$SchemeProcessor searchForSupportedProcessor(java.net.URI);
    Code:
       0: aload_0
       1: getfield      #34                 // Field processorsByScheme:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #108                // Method java/net/URI.getScheme:()Ljava/lang/String;
       8: getstatic     #114                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      11: invokevirtual #120                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      14: invokeinterface #126,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #15                 // class org/sonar/api/utils/UriReader$SchemeProcessor
      22: astore_2
      23: aload_2
      24: ifnull        31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: new           #128                // class java/lang/StringBuilder
      35: dup
      36: invokespecial #129                // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #131                // String URI schema is not supported:
      41: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_1
      45: invokevirtual #108                // Method java/net/URI.getScheme:()Ljava/lang/String;
      48: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #138                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokestatic  #144                // Method org/sonar/api/utils/Preconditions.checkArgument:(ZLjava/lang/String;)V
      57: aload_2
      58: areturn

  private void lambda$new$0(org.sonar.api.utils.UriReader$SchemeProcessor);
    Code:
       0: aload_1
       1: invokevirtual #149                // Method org/sonar/api/utils/UriReader$SchemeProcessor.getSupportedSchemes:()[Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     48
      17: aload_2
      18: iload         4
      20: aaload
      21: astore        5
      23: aload_0
      24: getfield      #34                 // Field processorsByScheme:Ljava/util/Map;
      27: aload         5
      29: getstatic     #114                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      32: invokevirtual #120                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      35: aload_1
      36: invokeinterface #155,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: iinc          4, 1
      45: goto          11
      48: return
}
