Compiled from "Metric.java"
public final class org.sonar.api.measures.Metric$Builder {
  private java.lang.String key;

  private org.sonar.api.measures.Metric$ValueType type;

  private java.lang.String name;

  private java.lang.String description;

  private java.lang.Integer direction;

  private java.lang.Boolean qualitative;

  private java.lang.String domain;

  private java.lang.Double worstValue;

  private java.lang.Double bestValue;

  private boolean optimizedBestValue;

  private boolean hidden;

  private boolean userManaged;

  private boolean deleteHistoricalData;

  private java.lang.Integer decimalScale;

  public org.sonar.api.measures.Metric$Builder(java.lang.String, java.lang.String, org.sonar.api.measures.Metric$ValueType);
    Code:
       0: aload_0
       1: invokespecial #38                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       9: putfield      #46                 // Field direction:Ljava/lang/Integer;
      12: aload_0
      13: getstatic     #51                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      16: putfield      #53                 // Field qualitative:Ljava/lang/Boolean;
      19: aload_0
      20: aconst_null
      21: putfield      #55                 // Field domain:Ljava/lang/String;
      24: aload_0
      25: iconst_0
      26: putfield      #57                 // Field optimizedBestValue:Z
      29: aload_0
      30: iconst_0
      31: putfield      #59                 // Field hidden:Z
      34: aload_0
      35: iconst_0
      36: putfield      #61                 // Field userManaged:Z
      39: aload_0
      40: iconst_0
      41: putfield      #63                 // Field deleteHistoricalData:Z
      44: aload_0
      45: aconst_null
      46: putfield      #65                 // Field decimalScale:Ljava/lang/Integer;
      49: aload_1
      50: invokestatic  #71                 // Method org/sonar/api/internal/apachecommons/lang/StringUtils.isNotBlank:(Ljava/lang/String;)Z
      53: ldc           #73                 // String Metric key can not be blank
      55: invokestatic  #79                 // Method org/sonar/api/utils/Preconditions.checkArgument:(ZLjava/lang/String;)V
      58: aload_2
      59: invokestatic  #71                 // Method org/sonar/api/internal/apachecommons/lang/StringUtils.isNotBlank:(Ljava/lang/String;)Z
      62: ldc           #81                 // String Name of metric %s must be set
      64: iconst_1
      65: anewarray     #4                  // class java/lang/Object
      68: dup
      69: iconst_0
      70: aload_1
      71: aastore
      72: invokestatic  #84                 // Method org/sonar/api/utils/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      75: aload_3
      76: ifnull        83
      79: iconst_1
      80: goto          84
      83: iconst_0
      84: ldc           #88                 // String Type of metric %s must be set
      86: iconst_1
      87: anewarray     #4                  // class java/lang/Object
      90: dup
      91: iconst_0
      92: aload_1
      93: aastore
      94: invokestatic  #84                 // Method org/sonar/api/utils/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      97: aload_0
      98: aload_1
      99: putfield      #90                 // Field key:Ljava/lang/String;
     102: aload_0
     103: aload_2
     104: putfield      #92                 // Field name:Ljava/lang/String;
     107: aload_0
     108: aload_3
     109: putfield      #94                 // Field type:Lorg/sonar/api/measures/Metric$ValueType;
     112: return

  public org.sonar.api.measures.Metric$Builder setDescription(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #100                // Field description:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonar.api.measures.Metric$Builder setDirection(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #46                 // Field direction:Ljava/lang/Integer;
       5: aload_0
       6: areturn

  public org.sonar.api.measures.Metric$Builder setQualitative(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #53                 // Field qualitative:Ljava/lang/Boolean;
       5: aload_0
       6: areturn

  public org.sonar.api.measures.Metric$Builder setDomain(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #55                 // Field domain:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.sonar.api.measures.Metric$Builder setWorstValue(java.lang.Double);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #111                // Field worstValue:Ljava/lang/Double;
       5: aload_0
       6: areturn

  public org.sonar.api.measures.Metric$Builder setBestValue(java.lang.Double);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #114                // Field bestValue:Ljava/lang/Double;
       5: aload_0
       6: areturn

  public org.sonar.api.measures.Metric$Builder setOptimizedBestValue(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #57                 // Field optimizedBestValue:Z
       5: aload_0
       6: areturn

  public org.sonar.api.measures.Metric$Builder setHidden(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #59                 // Field hidden:Z
       5: aload_0
       6: areturn

  public org.sonar.api.measures.Metric$Builder setUserManaged(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #61                 // Field userManaged:Z
       5: aload_0
       6: areturn

  public org.sonar.api.measures.Metric$Builder setDeleteHistoricalData(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #63                 // Field deleteHistoricalData:Z
       5: aload_0
       6: areturn

  public org.sonar.api.measures.Metric$Builder setDecimalScale(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #124                // String Scale of decimal metric %s must be positive: %d
      11: iconst_2
      12: anewarray     #4                  // class java/lang/Object
      15: dup
      16: iconst_0
      17: aload_0
      18: getfield      #90                 // Field key:Ljava/lang/String;
      21: aastore
      22: dup
      23: iconst_1
      24: iload_1
      25: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: aastore
      29: invokestatic  #84                 // Method org/sonar/api/utils/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      32: iload_1
      33: iconst_5
      34: if_icmpgt     41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ldc           #126                // String Scale of decimal metric [%s] must be less than or equal %s: %s
      44: iconst_3
      45: anewarray     #4                  // class java/lang/Object
      48: dup
      49: iconst_0
      50: aload_0
      51: getfield      #90                 // Field key:Ljava/lang/String;
      54: aastore
      55: dup
      56: iconst_1
      57: iconst_5
      58: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      61: aastore
      62: dup
      63: iconst_2
      64: iload_1
      65: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      68: aastore
      69: invokestatic  #84                 // Method org/sonar/api/utils/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      72: aload_0
      73: iload_1
      74: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      77: putfield      #65                 // Field decimalScale:Ljava/lang/Integer;
      80: aload_0
      81: areturn

  public <G extends java.io.Serializable> org.sonar.api.measures.Metric<G> create();
    Code:
       0: getstatic     #134                // Field org/sonar/api/measures/Metric$ValueType.PERCENT:Lorg/sonar/api/measures/Metric$ValueType;
       3: aload_0
       4: getfield      #94                 // Field type:Lorg/sonar/api/measures/Metric$ValueType;
       7: if_acmpne     81
      10: aload_0
      11: aload_0
      12: getfield      #46                 // Field direction:Ljava/lang/Integer;
      15: invokevirtual #138                // Method java/lang/Integer.intValue:()I
      18: iconst_1
      19: if_icmpne     28
      22: ldc2_w        #139                // double 100.0d
      25: goto          29
      28: dconst_0
      29: invokestatic  #145                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      32: putfield      #114                // Field bestValue:Ljava/lang/Double;
      35: aload_0
      36: aload_0
      37: getfield      #46                 // Field direction:Ljava/lang/Integer;
      40: invokevirtual #138                // Method java/lang/Integer.intValue:()I
      43: iconst_1
      44: if_icmpne     51
      47: dconst_0
      48: goto          54
      51: ldc2_w        #139                // double 100.0d
      54: invokestatic  #145                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      57: putfield      #111                // Field worstValue:Ljava/lang/Double;
      60: aload_0
      61: aload_0
      62: getfield      #65                 // Field decimalScale:Ljava/lang/Integer;
      65: iconst_1
      66: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      69: invokestatic  #149                // Method org/sonar/api/measures/Metric.access$1400:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: checkcast     #40                 // class java/lang/Integer
      75: putfield      #65                 // Field decimalScale:Ljava/lang/Integer;
      78: goto          109
      81: getstatic     #152                // Field org/sonar/api/measures/Metric$ValueType.FLOAT:Lorg/sonar/api/measures/Metric$ValueType;
      84: aload_0
      85: getfield      #94                 // Field type:Lorg/sonar/api/measures/Metric$ValueType;
      88: if_acmpne     109
      91: aload_0
      92: aload_0
      93: getfield      #65                 // Field decimalScale:Ljava/lang/Integer;
      96: iconst_1
      97: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     100: invokestatic  #149                // Method org/sonar/api/measures/Metric.access$1400:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: checkcast     #40                 // class java/lang/Integer
     106: putfield      #65                 // Field decimalScale:Ljava/lang/Integer;
     109: new           #9                  // class org/sonar/api/measures/Metric
     112: dup
     113: aload_0
     114: aconst_null
     115: invokespecial #155                // Method org/sonar/api/measures/Metric."<init>":(Lorg/sonar/api/measures/Metric$Builder;Lorg/sonar/api/measures/Metric$1;)V
     118: areturn

  static java.lang.String access$000(org.sonar.api.measures.Metric$Builder);
    Code:
       0: aload_0
       1: getfield      #90                 // Field key:Ljava/lang/String;
       4: areturn

  static java.lang.String access$100(org.sonar.api.measures.Metric$Builder);
    Code:
       0: aload_0
       1: getfield      #92                 // Field name:Ljava/lang/String;
       4: areturn

  static java.lang.String access$200(org.sonar.api.measures.Metric$Builder);
    Code:
       0: aload_0
       1: getfield      #100                // Field description:Ljava/lang/String;
       4: areturn

  static org.sonar.api.measures.Metric$ValueType access$300(org.sonar.api.measures.Metric$Builder);
    Code:
       0: aload_0
       1: getfield      #94                 // Field type:Lorg/sonar/api/measures/Metric$ValueType;
       4: areturn

  static java.lang.Integer access$400(org.sonar.api.measures.Metric$Builder);
    Code:
       0: aload_0
       1: getfield      #46                 // Field direction:Ljava/lang/Integer;
       4: areturn

  static java.lang.String access$500(org.sonar.api.measures.Metric$Builder);
    Code:
       0: aload_0
       1: getfield      #55                 // Field domain:Ljava/lang/String;
       4: areturn

  static java.lang.Boolean access$600(org.sonar.api.measures.Metric$Builder);
    Code:
       0: aload_0
       1: getfield      #53                 // Field qualitative:Ljava/lang/Boolean;
       4: areturn

  static java.lang.Double access$700(org.sonar.api.measures.Metric$Builder);
    Code:
       0: aload_0
       1: getfield      #111                // Field worstValue:Ljava/lang/Double;
       4: areturn

  static boolean access$800(org.sonar.api.measures.Metric$Builder);
    Code:
       0: aload_0
       1: getfield      #57                 // Field optimizedBestValue:Z
       4: ireturn

  static java.lang.Double access$900(org.sonar.api.measures.Metric$Builder);
    Code:
       0: aload_0
       1: getfield      #114                // Field bestValue:Ljava/lang/Double;
       4: areturn

  static boolean access$1000(org.sonar.api.measures.Metric$Builder);
    Code:
       0: aload_0
       1: getfield      #59                 // Field hidden:Z
       4: ireturn

  static boolean access$1100(org.sonar.api.measures.Metric$Builder);
    Code:
       0: aload_0
       1: getfield      #61                 // Field userManaged:Z
       4: ireturn

  static boolean access$1200(org.sonar.api.measures.Metric$Builder);
    Code:
       0: aload_0
       1: getfield      #63                 // Field deleteHistoricalData:Z
       4: ireturn

  static java.lang.Integer access$1300(org.sonar.api.measures.Metric$Builder);
    Code:
       0: aload_0
       1: getfield      #65                 // Field decimalScale:Ljava/lang/Integer;
       4: areturn
}
