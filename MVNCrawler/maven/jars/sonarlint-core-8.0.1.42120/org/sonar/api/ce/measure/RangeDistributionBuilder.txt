Compiled from "RangeDistributionBuilder.java"
public class org.sonar.api.ce.measure.RangeDistributionBuilder {
  private java.util.Map<java.lang.Number, java.lang.Integer> distributionSet;

  private boolean isEmpty;

  private java.lang.Number[] bottomLimits;

  private boolean isValid;

  public org.sonar.api.ce.measure.RangeDistributionBuilder();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #40                 // Field isEmpty:Z
       9: aload_0
      10: iconst_1
      11: putfield      #42                 // Field isValid:Z
      14: return

  public org.sonar.api.ce.measure.RangeDistributionBuilder(java.lang.Number[]);
    Code:
       0: aload_0
       1: invokespecial #38                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #40                 // Field isEmpty:Z
       9: aload_0
      10: iconst_1
      11: putfield      #42                 // Field isValid:Z
      14: aload_0
      15: aload_1
      16: invokespecial #48                 // Method init:([Ljava/lang/Number;)V
      19: return

  public org.sonar.api.ce.measure.RangeDistributionBuilder add(java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #53                 // Method add:(Ljava/lang/Number;I)Lorg/sonar/api/ce/measure/RangeDistributionBuilder;
       6: areturn

  public org.sonar.api.ce.measure.RangeDistributionBuilder add(java.lang.Number, int);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #57                 // Field bottomLimits:[Ljava/lang/Number;
       5: iconst_0
       6: aaload
       7: invokestatic  #61                 // Method greaterOrEqualsThan:(Ljava/lang/Number;Ljava/lang/Number;)Z
      10: ifeq          24
      13: aload_0
      14: aload_1
      15: iload_2
      16: invokespecial #65                 // Method addValue:(Ljava/lang/Number;I)V
      19: aload_0
      20: iconst_0
      21: putfield      #40                 // Field isEmpty:Z
      24: aload_0
      25: areturn

  public org.sonar.api.ce.measure.RangeDistributionBuilder add(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #72                 // Method org/sonar/api/utils/KeyValueFormat.newDoubleConverter:()Lorg/sonar/api/utils/KeyValueFormat$DoubleConverter;
       4: invokestatic  #72                 // Method org/sonar/api/utils/KeyValueFormat.newDoubleConverter:()Lorg/sonar/api/utils/KeyValueFormat$DoubleConverter;
       7: invokestatic  #76                 // Method org/sonar/api/utils/KeyValueFormat.parse:(Ljava/lang/String;Lorg/sonar/api/utils/KeyValueFormat$Converter;Lorg/sonar/api/utils/KeyValueFormat$Converter;)Ljava/util/Map;
      10: astore_2
      11: aload_0
      12: getfield      #57                 // Field bottomLimits:[Ljava/lang/Number;
      15: ifnonnull     50
      18: aload_2
      19: invokeinterface #80,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      24: aload_2
      25: invokeinterface #84,  1           // InterfaceMethod java/util/Map.size:()I
      30: anewarray     #86                 // class java/lang/Number
      33: invokeinterface #92,  2           // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      38: checkcast     #93                 // class "[Ljava/lang/Number;"
      41: astore_3
      42: aload_0
      43: aload_3
      44: invokespecial #48                 // Method init:([Ljava/lang/Number;)V
      47: goto          71
      50: aload_0
      51: getfield      #57                 // Field bottomLimits:[Ljava/lang/Number;
      54: aload_2
      55: invokeinterface #80,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      60: invokestatic  #97                 // Method areSameLimits:([Ljava/lang/Number;Ljava/util/Set;)Z
      63: ifne          71
      66: aload_0
      67: iconst_0
      68: putfield      #42                 // Field isValid:Z
      71: aload_0
      72: getfield      #42                 // Field isValid:Z
      75: ifeq          141
      78: aload_2
      79: invokeinterface #100,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      84: invokeinterface #104,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      89: astore_3
      90: aload_3
      91: invokeinterface #110,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      96: ifeq          141
      99: aload_3
     100: invokeinterface #114,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     105: checkcast     #10                 // class java/util/Map$Entry
     108: astore        4
     110: aload_0
     111: aload         4
     113: invokeinterface #117,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     118: checkcast     #86                 // class java/lang/Number
     121: aload         4
     123: invokeinterface #120,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     128: checkcast     #122                // class java/lang/Double
     131: invokevirtual #125                // Method java/lang/Double.intValue:()I
     134: invokespecial #128                // Method addLimitCount:(Ljava/lang/Number;I)Lorg/sonar/api/ce/measure/RangeDistributionBuilder;
     137: pop
     138: goto          90
     141: aload_0
     142: areturn

  private void init(java.lang.Number[]);
    Code:
       0: aload_0
       1: aload_1
       2: arraylength
       3: anewarray     #86                 // class java/lang/Number
       6: putfield      #57                 // Field bottomLimits:[Ljava/lang/Number;
       9: aload_1
      10: iconst_0
      11: aload_0
      12: getfield      #57                 // Field bottomLimits:[Ljava/lang/Number;
      15: iconst_0
      16: aload_0
      17: getfield      #57                 // Field bottomLimits:[Ljava/lang/Number;
      20: arraylength
      21: invokestatic  #142                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: aload_0
      25: getfield      #57                 // Field bottomLimits:[Ljava/lang/Number;
      28: invokestatic  #148                // Method java/util/Arrays.sort:([Ljava/lang/Object;)V
      31: aload_0
      32: invokespecial #151                // Method changeDoublesToInts:()V
      35: aload_0
      36: new           #153                // class java/util/TreeMap
      39: dup
      40: getstatic     #157                // Field org/sonar/api/ce/measure/RangeDistributionBuilder$NumberComparator.INSTANCE:Lorg/sonar/api/ce/measure/RangeDistributionBuilder$NumberComparator;
      43: invokespecial #160                // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
      46: putfield      #162                // Field distributionSet:Ljava/util/Map;
      49: aload_0
      50: getfield      #57                 // Field bottomLimits:[Ljava/lang/Number;
      53: astore_2
      54: aload_2
      55: arraylength
      56: istore_3
      57: iconst_0
      58: istore        4
      60: iload         4
      62: iload_3
      63: if_icmpge     94
      66: aload_2
      67: iload         4
      69: aaload
      70: astore        5
      72: aload_0
      73: getfield      #162                // Field distributionSet:Ljava/util/Map;
      76: aload         5
      78: iconst_0
      79: invokestatic  #168                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      82: invokeinterface #172,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: iinc          4, 1
      91: goto          60
      94: return

  private void changeDoublesToInts();
    Code:
       0: aload_0
       1: getfield      #57                 // Field bottomLimits:[Ljava/lang/Number;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     52
      15: aload_1
      16: iload_3
      17: aaload
      18: astore        4
      20: getstatic     #157                // Field org/sonar/api/ce/measure/RangeDistributionBuilder$NumberComparator.INSTANCE:Lorg/sonar/api/ce/measure/RangeDistributionBuilder$NumberComparator;
      23: aload         4
      25: invokevirtual #174                // Method java/lang/Number.intValue:()I
      28: invokestatic  #168                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      31: aload         4
      33: invokevirtual #178                // Method java/lang/Number.doubleValue:()D
      36: invokestatic  #181                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      39: invokevirtual #185                // Method org/sonar/api/ce/measure/RangeDistributionBuilder$NumberComparator.compare:(Ljava/lang/Number;Ljava/lang/Number;)I
      42: ifeq          46
      45: return
      46: iinc          3, 1
      49: goto          10
      52: iconst_0
      53: istore_1
      54: iload_1
      55: aload_0
      56: getfield      #57                 // Field bottomLimits:[Ljava/lang/Number;
      59: arraylength
      60: if_icmpge     87
      63: aload_0
      64: getfield      #57                 // Field bottomLimits:[Ljava/lang/Number;
      67: iload_1
      68: aload_0
      69: getfield      #57                 // Field bottomLimits:[Ljava/lang/Number;
      72: iload_1
      73: aaload
      74: invokevirtual #174                // Method java/lang/Number.intValue:()I
      77: invokestatic  #168                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      80: aastore
      81: iinc          1, 1
      84: goto          54
      87: return

  private static boolean areSameLimits(java.lang.Number[], java.util.Set<java.lang.Double>);
    Code:
       0: aload_1
       1: invokeinterface #189,  1          // InterfaceMethod java/util/Set.size:()I
       6: aload_0
       7: arraylength
       8: if_icmpne     58
      11: aload_0
      12: astore_2
      13: aload_2
      14: arraylength
      15: istore_3
      16: iconst_0
      17: istore        4
      19: iload         4
      21: iload_3
      22: if_icmpge     56
      25: aload_2
      26: iload         4
      28: aaload
      29: astore        5
      31: aload_1
      32: aload         5
      34: invokevirtual #178                // Method java/lang/Number.doubleValue:()D
      37: invokestatic  #181                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      40: invokeinterface #193,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      45: ifne          50
      48: iconst_0
      49: ireturn
      50: iinc          4, 1
      53: goto          19
      56: iconst_1
      57: ireturn
      58: iconst_0
      59: ireturn

  private org.sonar.api.ce.measure.RangeDistributionBuilder addLimitCount(java.lang.Number, int);
    Code:
       0: aload_0
       1: getfield      #57                 // Field bottomLimits:[Ljava/lang/Number;
       4: astore_3
       5: aload_3
       6: arraylength
       7: istore        4
       9: iconst_0
      10: istore        5
      12: iload         5
      14: iload         4
      16: if_icmpge     68
      19: aload_3
      20: iload         5
      22: aaload
      23: astore        6
      25: getstatic     #157                // Field org/sonar/api/ce/measure/RangeDistributionBuilder$NumberComparator.INSTANCE:Lorg/sonar/api/ce/measure/RangeDistributionBuilder$NumberComparator;
      28: aload         6
      30: invokevirtual #178                // Method java/lang/Number.doubleValue:()D
      33: invokestatic  #181                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      36: aload_1
      37: invokevirtual #178                // Method java/lang/Number.doubleValue:()D
      40: invokestatic  #181                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      43: invokevirtual #185                // Method org/sonar/api/ce/measure/RangeDistributionBuilder$NumberComparator.compare:(Ljava/lang/Number;Ljava/lang/Number;)I
      46: ifne          62
      49: aload_0
      50: aload_1
      51: iload_2
      52: invokespecial #65                 // Method addValue:(Ljava/lang/Number;I)V
      55: aload_0
      56: iconst_0
      57: putfield      #40                 // Field isEmpty:Z
      60: aload_0
      61: areturn
      62: iinc          5, 1
      65: goto          12
      68: aload_0
      69: iconst_0
      70: putfield      #42                 // Field isValid:Z
      73: aload_0
      74: areturn

  private void addValue(java.lang.Number, int);
    Code:
       0: aload_0
       1: getfield      #57                 // Field bottomLimits:[Ljava/lang/Number;
       4: arraylength
       5: iconst_1
       6: isub
       7: istore_3
       8: iload_3
       9: iflt          54
      12: aload_1
      13: aload_0
      14: getfield      #57                 // Field bottomLimits:[Ljava/lang/Number;
      17: iload_3
      18: aaload
      19: invokestatic  #61                 // Method greaterOrEqualsThan:(Ljava/lang/Number;Ljava/lang/Number;)Z
      22: ifeq          48
      25: aload_0
      26: getfield      #162                // Field distributionSet:Ljava/util/Map;
      29: aload_0
      30: getfield      #57                 // Field bottomLimits:[Ljava/lang/Number;
      33: iload_3
      34: aaload
      35: iload_2
      36: invokedynamic #216,  0            // InvokeDynamic #0:apply:(I)Ljava/util/function/BiFunction;
      41: invokeinterface #220,  3          // InterfaceMethod java/util/Map.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      46: pop
      47: return
      48: iinc          3, -1
      51: goto          8
      54: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #40                 // Field isEmpty:Z
       4: ireturn

  public java.lang.String build();
    Code:
       0: aload_0
       1: getfield      #42                 // Field isValid:Z
       4: ifeq          15
       7: aload_0
       8: invokespecial #227                // Method toMap:()Ljava/util/Map;
      11: invokestatic  #231                // Method org/sonar/api/utils/KeyValueFormat.format:(Ljava/util/Map;)Ljava/lang/String;
      14: areturn
      15: aconst_null
      16: areturn

  private java.util.Map<java.lang.Number, java.lang.Integer> toMap();
    Code:
       0: aload_0
       1: getfield      #57                 // Field bottomLimits:[Ljava/lang/Number;
       4: ifnull        15
       7: aload_0
       8: getfield      #57                 // Field bottomLimits:[Ljava/lang/Number;
      11: arraylength
      12: ifne          19
      15: invokestatic  #237                // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      18: areturn
      19: aload_0
      20: getfield      #162                // Field distributionSet:Ljava/util/Map;
      23: areturn

  private static boolean greaterOrEqualsThan(java.lang.Number, java.lang.Number);
    Code:
       0: getstatic     #157                // Field org/sonar/api/ce/measure/RangeDistributionBuilder$NumberComparator.INSTANCE:Lorg/sonar/api/ce/measure/RangeDistributionBuilder$NumberComparator;
       3: aload_0
       4: aload_1
       5: invokevirtual #185                // Method org/sonar/api/ce/measure/RangeDistributionBuilder$NumberComparator.compare:(Ljava/lang/Number;Ljava/lang/Number;)I
       8: iflt          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  private static java.lang.Integer lambda$addValue$0(int, java.lang.Number, java.lang.Integer);
    Code:
       0: aload_2
       1: invokevirtual #240                // Method java/lang/Integer.intValue:()I
       4: iload_0
       5: iadd
       6: invokestatic  #168                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       9: areturn
}
