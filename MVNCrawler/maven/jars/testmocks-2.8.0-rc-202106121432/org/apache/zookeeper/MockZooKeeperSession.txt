Compiled from "MockZooKeeperSession.java"
public class org.apache.zookeeper.MockZooKeeperSession extends org.apache.zookeeper.ZooKeeper {
  private org.apache.zookeeper.MockZooKeeper mockZooKeeper;

  private long sessionId;

  private static final org.objenesis.Objenesis objenesis;

  private static final java.util.concurrent.atomic.AtomicInteger sessionIdGenerator;

  static final boolean $assertionsDisabled;

  public static org.apache.zookeeper.MockZooKeeperSession newInstance(org.apache.zookeeper.MockZooKeeper);
    Code:
       0: getstatic     #1                  // Field objenesis:Lorg/objenesis/Objenesis;
       3: ldc           #2                  // class org/apache/zookeeper/MockZooKeeperSession
       5: invokeinterface #3,  2            // InterfaceMethod org/objenesis/Objenesis.getInstantiatorOf:(Ljava/lang/Class;)Lorg/objenesis/instantiator/ObjectInstantiator;
      10: astore_1
      11: aload_1
      12: invokeinterface #4,  1            // InterfaceMethod org/objenesis/instantiator/ObjectInstantiator.newInstance:()Ljava/lang/Object;
      17: checkcast     #2                  // class org/apache/zookeeper/MockZooKeeperSession
      20: astore_2
      21: aload_2
      22: aload_0
      23: putfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
      26: aload_2
      27: getstatic     #6                  // Field sessionIdGenerator:Ljava/util/concurrent/atomic/AtomicInteger;
      30: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      33: i2l
      34: putfield      #8                  // Field sessionId:J
      37: aload_2
      38: areturn

  private org.apache.zookeeper.MockZooKeeperSession(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokedynamic #9,  0              // InvokeDynamic #0:process:()Lorg/apache/zookeeper/Watcher;
       8: invokespecial #10                 // Method org/apache/zookeeper/ZooKeeper."<init>":(Ljava/lang/String;ILorg/apache/zookeeper/Watcher;)V
      11: aload_0
      12: lconst_0
      13: putfield      #8                  // Field sessionId:J
      16: getstatic     #11                 // Field $assertionsDisabled:Z
      19: ifne          30
      22: new           #12                 // class java/lang/AssertionError
      25: dup
      26: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      29: athrow
      30: return

  public int getSessionTimeout();
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: invokevirtual #14                 // Method org/apache/zookeeper/MockZooKeeper.getSessionTimeout:()I
       7: ireturn

  public org.apache.zookeeper.ZooKeeper$States getState();
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: invokevirtual #15                 // Method org/apache/zookeeper/MockZooKeeper.getState:()Lorg/apache/zookeeper/ZooKeeper$States;
       7: areturn

  public void register(org.apache.zookeeper.Watcher);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: invokevirtual #16                 // Method org/apache/zookeeper/MockZooKeeper.register:(Lorg/apache/zookeeper/Watcher;)V
       8: return

  public java.lang.String create(java.lang.String, byte[], java.util.List<org.apache.zookeeper.data.ACL>, org.apache.zookeeper.CreateMode) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #17                 // Method org/apache/zookeeper/MockZooKeeper.create:(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;)Ljava/lang/String;
      12: areturn

  public void create(java.lang.String, byte[], java.util.List<org.apache.zookeeper.data.ACL>, org.apache.zookeeper.CreateMode, org.apache.zookeeper.AsyncCallback$StringCallback, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokevirtual #18                 // Method org/apache/zookeeper/MockZooKeeper.create:(Ljava/lang/String;[BLjava/util/List;Lorg/apache/zookeeper/CreateMode;Lorg/apache/zookeeper/AsyncCallback$StringCallback;Ljava/lang/Object;)V
      16: return

  public byte[] getData(java.lang.String, org.apache.zookeeper.Watcher, org.apache.zookeeper.data.Stat) throws org.apache.zookeeper.KeeperException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #19                 // Method org/apache/zookeeper/MockZooKeeper.getData:(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/data/Stat;)[B
      10: areturn

  public void getData(java.lang.String, boolean, org.apache.zookeeper.AsyncCallback$DataCallback, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: iload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #20                 // Method org/apache/zookeeper/MockZooKeeper.getData:(Ljava/lang/String;ZLorg/apache/zookeeper/AsyncCallback$DataCallback;Ljava/lang/Object;)V
      12: return

  public void getData(java.lang.String, org.apache.zookeeper.Watcher, org.apache.zookeeper.AsyncCallback$DataCallback, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #21                 // Method org/apache/zookeeper/MockZooKeeper.getData:(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/AsyncCallback$DataCallback;Ljava/lang/Object;)V
      12: return

  public void getChildren(java.lang.String, org.apache.zookeeper.Watcher, org.apache.zookeeper.AsyncCallback$ChildrenCallback, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #22                 // Method org/apache/zookeeper/MockZooKeeper.getChildren:(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/AsyncCallback$ChildrenCallback;Ljava/lang/Object;)V
      12: return

  public java.util.List<java.lang.String> getChildren(java.lang.String, org.apache.zookeeper.Watcher) throws org.apache.zookeeper.KeeperException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: aload_2
       6: invokevirtual #23                 // Method org/apache/zookeeper/MockZooKeeper.getChildren:(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;)Ljava/util/List;
       9: areturn

  public java.util.List<java.lang.String> getChildren(java.lang.String, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: iload_2
       6: invokevirtual #24                 // Method org/apache/zookeeper/MockZooKeeper.getChildren:(Ljava/lang/String;Z)Ljava/util/List;
       9: areturn

  public void getChildren(java.lang.String, boolean, org.apache.zookeeper.AsyncCallback$Children2Callback, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: iload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #25                 // Method org/apache/zookeeper/MockZooKeeper.getChildren:(Ljava/lang/String;ZLorg/apache/zookeeper/AsyncCallback$Children2Callback;Ljava/lang/Object;)V
      12: return

  public org.apache.zookeeper.data.Stat exists(java.lang.String, boolean) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: iload_2
       6: invokevirtual #26                 // Method org/apache/zookeeper/MockZooKeeper.exists:(Ljava/lang/String;Z)Lorg/apache/zookeeper/data/Stat;
       9: areturn

  public org.apache.zookeeper.data.Stat exists(java.lang.String, org.apache.zookeeper.Watcher) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: aload_2
       6: invokevirtual #27                 // Method org/apache/zookeeper/MockZooKeeper.exists:(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;)Lorg/apache/zookeeper/data/Stat;
       9: areturn

  public void exists(java.lang.String, boolean, org.apache.zookeeper.AsyncCallback$StatCallback, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: iload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #28                 // Method org/apache/zookeeper/MockZooKeeper.exists:(Ljava/lang/String;ZLorg/apache/zookeeper/AsyncCallback$StatCallback;Ljava/lang/Object;)V
      12: return

  public void exists(java.lang.String, org.apache.zookeeper.Watcher, org.apache.zookeeper.AsyncCallback$StatCallback, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #29                 // Method org/apache/zookeeper/MockZooKeeper.exists:(Ljava/lang/String;Lorg/apache/zookeeper/Watcher;Lorg/apache/zookeeper/AsyncCallback$StatCallback;Ljava/lang/Object;)V
      12: return

  public void sync(java.lang.String, org.apache.zookeeper.AsyncCallback$VoidCallback, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #30                 // Method org/apache/zookeeper/MockZooKeeper.sync:(Ljava/lang/String;Lorg/apache/zookeeper/AsyncCallback$VoidCallback;Ljava/lang/Object;)V
      10: return

  public org.apache.zookeeper.data.Stat setData(java.lang.String, byte[], int) throws org.apache.zookeeper.KeeperException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: aload_2
       6: iload_3
       7: invokevirtual #31                 // Method org/apache/zookeeper/MockZooKeeper.setData:(Ljava/lang/String;[BI)Lorg/apache/zookeeper/data/Stat;
      10: areturn

  public void setData(java.lang.String, byte[], int, org.apache.zookeeper.AsyncCallback$StatCallback, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: aload_2
       6: iload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #32                 // Method org/apache/zookeeper/MockZooKeeper.setData:(Ljava/lang/String;[BILorg/apache/zookeeper/AsyncCallback$StatCallback;Ljava/lang/Object;)V
      14: return

  public void delete(java.lang.String, int) throws java.lang.InterruptedException, org.apache.zookeeper.KeeperException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: iload_2
       6: invokevirtual #33                 // Method org/apache/zookeeper/MockZooKeeper.delete:(Ljava/lang/String;I)V
       9: return

  public void delete(java.lang.String, int, org.apache.zookeeper.AsyncCallback$VoidCallback, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: iload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #34                 // Method org/apache/zookeeper/MockZooKeeper.delete:(Ljava/lang/String;ILorg/apache/zookeeper/AsyncCallback$VoidCallback;Ljava/lang/Object;)V
      12: return

  public void multi(java.lang.Iterable<org.apache.zookeeper.Op>, org.apache.zookeeper.AsyncCallback$MultiCallback, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #35                 // Method org/apache/zookeeper/MockZooKeeper.multi:(Ljava/lang/Iterable;Lorg/apache/zookeeper/AsyncCallback$MultiCallback;Ljava/lang/Object;)V
      10: return

  public java.util.List<org.apache.zookeeper.OpResult> multi(java.lang.Iterable<org.apache.zookeeper.Op>) throws java.lang.InterruptedException, org.apache.zookeeper.KeeperException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: invokevirtual #36                 // Method org/apache/zookeeper/MockZooKeeper.multi:(Ljava/lang/Iterable;)Ljava/util/List;
       8: areturn

  public void close() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: invokevirtual #37                 // Method org/apache/zookeeper/MockZooKeeper.close:()V
       7: return

  public void shutdown() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: invokevirtual #38                 // Method org/apache/zookeeper/MockZooKeeper.shutdown:()V
       7: return

  java.util.Optional<org.apache.zookeeper.KeeperException$Code> programmedFailure(org.apache.zookeeper.MockZooKeeper$Op, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: aload_2
       6: invokevirtual #39                 // Method org/apache/zookeeper/MockZooKeeper.programmedFailure:(Lorg/apache/zookeeper/MockZooKeeper$Op;Ljava/lang/String;)Ljava/util/Optional;
       9: areturn

  void maybeThrowProgrammedFailure(org.apache.zookeeper.MockZooKeeper$Op, java.lang.String) throws org.apache.zookeeper.KeeperException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: aload_2
       6: invokevirtual #40                 // Method org/apache/zookeeper/MockZooKeeper.maybeThrowProgrammedFailure:(Lorg/apache/zookeeper/MockZooKeeper$Op;Ljava/lang/String;)V
       9: return

  public void failConditional(org.apache.zookeeper.KeeperException$Code, java.util.function.BiPredicate<org.apache.zookeeper.MockZooKeeper$Op, java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: aload_2
       6: invokevirtual #41                 // Method org/apache/zookeeper/MockZooKeeper.failConditional:(Lorg/apache/zookeeper/KeeperException$Code;Ljava/util/function/BiPredicate;)V
       9: return

  public void setAlwaysFail(org.apache.zookeeper.KeeperException$Code);
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: aload_1
       5: invokevirtual #42                 // Method org/apache/zookeeper/MockZooKeeper.setAlwaysFail:(Lorg/apache/zookeeper/KeeperException$Code;)V
       8: return

  public void unsetAlwaysFail();
    Code:
       0: aload_0
       1: getfield      #5                  // Field mockZooKeeper:Lorg/apache/zookeeper/MockZooKeeper;
       4: invokevirtual #43                 // Method org/apache/zookeeper/MockZooKeeper.unsetAlwaysFail:()V
       7: return

  public void setSessionId(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #8                  // Field sessionId:J
       5: return

  public long getSessionId();
    Code:
       0: aload_0
       1: getfield      #8                  // Field sessionId:J
       4: lreturn

  public java.lang.String toString();
    Code:
       0: new           #44                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #46                 // String MockZooKeeperSession{sessionId=
       9: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #8                  // Field sessionId:J
      16: invokevirtual #48                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      19: bipush        125
      21: invokevirtual #49                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  private static void lambda$new$0(org.apache.zookeeper.WatchedEvent);
    Code:
       0: return

  static {};
    Code:
       0: ldc           #2                  // class org/apache/zookeeper/MockZooKeeperSession
       2: invokevirtual #51                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #11                 // Field $assertionsDisabled:Z
      16: new           #52                 // class org/objenesis/ObjenesisStd
      19: dup
      20: invokespecial #53                 // Method org/objenesis/ObjenesisStd."<init>":()V
      23: putstatic     #1                  // Field objenesis:Lorg/objenesis/Objenesis;
      26: new           #54                 // class java/util/concurrent/atomic/AtomicInteger
      29: dup
      30: iconst_0
      31: invokespecial #55                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      34: putstatic     #6                  // Field sessionIdGenerator:Ljava/util/concurrent/atomic/AtomicInteger;
      37: return
}
