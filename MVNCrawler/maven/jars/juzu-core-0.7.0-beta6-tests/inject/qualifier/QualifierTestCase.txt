Compiled from "QualifierTestCase.java"
public class inject.qualifier.QualifierTestCase<B, I> extends inject.AbstractInjectTestCase<B, I> {
  public inject.qualifier.QualifierTestCase(juzu.impl.inject.spi.InjectorProvider);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method inject/AbstractInjectTestCase."<init>":(Ljuzu/impl/inject/spi/InjectorProvider;)V
       5: return

  public void test() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method init:()V
       4: aload_0
       5: getfield      #3                  // Field bootstrap:Ljuzu/impl/inject/spi/Injector;
       8: ldc_w         #4                  // class inject/qualifier/Injected
      11: aconst_null
      12: aconst_null
      13: aconst_null
      14: checkcast     #5                  // class java/lang/Class
      17: invokevirtual #6                  // Method juzu/impl/inject/spi/Injector.declareBean:(Ljava/lang/Class;Ljuzu/Scope;Ljava/lang/Iterable;Ljava/lang/Class;)Ljuzu/impl/inject/spi/Injector;
      20: pop
      21: aload_0
      22: getfield      #3                  // Field bootstrap:Ljuzu/impl/inject/spi/Injector;
      25: ldc_w         #7                  // class inject/qualifier/Bean
      28: aconst_null
      29: aconst_null
      30: ldc_w         #8                  // class inject/qualifier/Bean$Red
      33: invokevirtual #6                  // Method juzu/impl/inject/spi/Injector.declareBean:(Ljava/lang/Class;Ljuzu/Scope;Ljava/lang/Iterable;Ljava/lang/Class;)Ljuzu/impl/inject/spi/Injector;
      36: pop
      37: aload_0
      38: getfield      #3                  // Field bootstrap:Ljuzu/impl/inject/spi/Injector;
      41: ldc_w         #7                  // class inject/qualifier/Bean
      44: aconst_null
      45: aconst_null
      46: ldc_w         #9                  // class inject/qualifier/Bean$Green
      49: invokevirtual #6                  // Method juzu/impl/inject/spi/Injector.declareBean:(Ljava/lang/Class;Ljuzu/Scope;Ljava/lang/Iterable;Ljava/lang/Class;)Ljuzu/impl/inject/spi/Injector;
      52: pop
      53: aload_0
      54: iconst_0
      55: anewarray     #10                 // class juzu/Scope
      58: invokevirtual #11                 // Method boot:([Ljuzu/Scope;)V
      61: aload_0
      62: ldc_w         #4                  // class inject/qualifier/Injected
      65: invokevirtual #12                 // Method getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      68: checkcast     #4                  // class inject/qualifier/Injected
      71: astore_1
      72: aload_1
      73: invokestatic  #13                 // Method assertNotNull:(Ljava/lang/Object;)V
      76: aload_1
      77: invokevirtual #14                 // Method inject/qualifier/Injected.getRed:()Linject/qualifier/Bean;
      80: invokestatic  #13                 // Method assertNotNull:(Ljava/lang/Object;)V
      83: ldc_w         #8                  // class inject/qualifier/Bean$Red
      86: aload_1
      87: invokevirtual #14                 // Method inject/qualifier/Injected.getRed:()Linject/qualifier/Bean;
      90: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      93: invokestatic  #16                 // Method assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      96: aload_1
      97: invokevirtual #17                 // Method inject/qualifier/Injected.getGreen:()Linject/qualifier/Bean;
     100: invokestatic  #13                 // Method assertNotNull:(Ljava/lang/Object;)V
     103: ldc_w         #9                  // class inject/qualifier/Bean$Green
     106: aload_1
     107: invokevirtual #17                 // Method inject/qualifier/Injected.getGreen:()Linject/qualifier/Bean;
     110: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     113: invokestatic  #16                 // Method assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
     116: return
}
