Compiled from "ImplementationTypeTestCase.java"
public class inject.implementationtype.ImplementationTypeTestCase<B, I> extends inject.AbstractInjectTestCase<B, I> {
  public inject.implementationtype.ImplementationTypeTestCase(juzu.impl.inject.spi.InjectorProvider);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method inject/AbstractInjectTestCase."<init>":(Ljuzu/impl/inject/spi/InjectorProvider;)V
       5: return

  public void test() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method init:()V
       4: aload_0
       5: getfield      #3                  // Field bootstrap:Ljuzu/impl/inject/spi/Injector;
       8: ldc_w         #4                  // class inject/implementationtype/AbstractBean
      11: aconst_null
      12: aconst_null
      13: ldc_w         #5                  // class inject/implementationtype/Bean
      16: invokevirtual #6                  // Method juzu/impl/inject/spi/Injector.declareBean:(Ljava/lang/Class;Ljuzu/Scope;Ljava/lang/Iterable;Ljava/lang/Class;)Ljuzu/impl/inject/spi/Injector;
      19: pop
      20: aload_0
      21: iconst_0
      22: anewarray     #7                  // class juzu/Scope
      25: invokevirtual #8                  // Method boot:([Ljuzu/Scope;)V
      28: aload_0
      29: ldc_w         #4                  // class inject/implementationtype/AbstractBean
      32: invokevirtual #9                  // Method getBean:(Ljava/lang/Class;)Ljava/lang/Object;
      35: checkcast     #4                  // class inject/implementationtype/AbstractBean
      38: astore_1
      39: ldc_w         #5                  // class inject/implementationtype/Bean
      42: aload_1
      43: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      46: invokestatic  #11                 // Method assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      49: return
}
