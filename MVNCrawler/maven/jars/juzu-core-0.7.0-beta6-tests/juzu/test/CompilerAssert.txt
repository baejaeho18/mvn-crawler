Compiled from "CompilerAssert.java"
public class juzu.test.CompilerAssert<I, O> {
  public static final javax.inject.Provider<juzu.impl.metamodel.MetaModelProcessor> META_MODEL_PROCESSOR_FACTORY;

  private static java.util.WeakHashMap<java.lang.ClassLoader, juzu.impl.fs.spi.ReadFileSystem<juzu.impl.fs.spi.url.Node>> classPathCache;

  private java.lang.ClassLoader classLoader;

  private juzu.test.CompileStrategy<I, O> strategy;

  public juzu.test.CompilerAssert(boolean, juzu.impl.fs.spi.ReadWriteFileSystem<I>, juzu.impl.fs.spi.ReadWriteFileSystem<O>, juzu.impl.fs.spi.ReadWriteFileSystem<O>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: getstatic     #2                  // Field classPathCache:Ljava/util/WeakHashMap;
       7: invokestatic  #3                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      10: invokevirtual #4                  // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
      13: invokevirtual #5                  // Method java/util/WeakHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #6                  // class juzu/impl/fs/spi/ReadFileSystem
      19: astore        5
      21: aload         5
      23: ifnonnull     75
      26: getstatic     #2                  // Field classPathCache:Ljava/util/WeakHashMap;
      29: invokestatic  #3                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      32: invokevirtual #4                  // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
      35: new           #7                  // class juzu/impl/fs/spi/url/URLFileSystem
      38: dup
      39: invokespecial #8                  // Method juzu/impl/fs/spi/url/URLFileSystem."<init>":()V
      42: invokestatic  #3                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      45: invokevirtual #4                  // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
      48: invokestatic  #9                  // Method java/lang/ClassLoader.getSystemClassLoader:()Ljava/lang/ClassLoader;
      51: invokevirtual #10                 // Method java/lang/ClassLoader.getParent:()Ljava/lang/ClassLoader;
      54: invokevirtual #11                 // Method juzu/impl/fs/spi/url/URLFileSystem.add:(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Ljuzu/impl/fs/spi/url/URLFileSystem;
      57: dup
      58: astore        5
      60: invokevirtual #12                 // Method java/util/WeakHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: pop
      64: goto          75
      67: astore        6
      69: aload         6
      71: invokestatic  #14                 // Method juzu/test/AbstractTestCase.failure:(Ljava/lang/Throwable;)Ljunit/framework/AssertionFailedError;
      74: athrow
      75: new           #15                 // class juzu/impl/fs/spi/filter/FilterFileSystem
      78: dup
      79: aload         5
      81: new           #16                 // class juzu/test/CompilerAssert$2
      84: dup
      85: aload_0
      86: invokespecial #17                 // Method juzu/test/CompilerAssert$2."<init>":(Ljuzu/test/CompilerAssert;)V
      89: invokespecial #18                 // Method juzu/impl/fs/spi/filter/FilterFileSystem."<init>":(Ljuzu/impl/fs/spi/ReadFileSystem;Ljuzu/impl/fs/Filter;)V
      92: astore        5
      94: aload_0
      95: iload_1
      96: ifeq          113
      99: new           #19                 // class juzu/test/CompileStrategy$Incremental
     102: dup
     103: aload_2
     104: aload_3
     105: aload         4
     107: invokespecial #20                 // Method juzu/test/CompileStrategy$Incremental."<init>":(Ljuzu/impl/fs/spi/ReadWriteFileSystem;Ljuzu/impl/fs/spi/ReadWriteFileSystem;Ljuzu/impl/fs/spi/ReadWriteFileSystem;)V
     110: goto          126
     113: new           #21                 // class juzu/test/CompileStrategy$Batch
     116: dup
     117: aload         5
     119: aload_2
     120: aload_3
     121: aload         4
     123: invokespecial #22                 // Method juzu/test/CompileStrategy$Batch."<init>":(Ljuzu/impl/fs/spi/ReadFileSystem;Ljuzu/impl/fs/spi/ReadWriteFileSystem;Ljuzu/impl/fs/spi/ReadWriteFileSystem;Ljuzu/impl/fs/spi/ReadWriteFileSystem;)V
     126: putfield      #23                 // Field strategy:Ljuzu/test/CompileStrategy;
     129: aload_0
     130: getfield      #23                 // Field strategy:Ljuzu/test/CompileStrategy;
     133: aload         5
     135: invokevirtual #24                 // Method juzu/test/CompileStrategy.addClassPath:(Ljuzu/impl/fs/spi/ReadFileSystem;)V
     138: aload_0
     139: getfield      #23                 // Field strategy:Ljuzu/test/CompileStrategy;
     142: getstatic     #25                 // Field META_MODEL_PROCESSOR_FACTORY:Ljavax/inject/Provider;
     145: putfield      #26                 // Field juzu/test/CompileStrategy.processorFactory:Ljavax/inject/Provider;
     148: aload_0
     149: getfield      #23                 // Field strategy:Ljuzu/test/CompileStrategy;
     152: getstatic     #27                 // Field juzu/test/JavaCompilerProvider.DEFAULT:Ljuzu/test/JavaCompilerProvider;
     155: putfield      #28                 // Field juzu/test/CompileStrategy.javaCompiler:Ljuzu/test/JavaCompilerProvider;
     158: return
    Exception table:
       from    to  target type
          26    64    67   Class java/lang/Exception

  public juzu.test.CompilerAssert(juzu.impl.fs.spi.ReadWriteFileSystem<I>, juzu.impl.fs.spi.ReadWriteFileSystem<O>, juzu.impl.fs.spi.ReadWriteFileSystem<O>);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokespecial #29                 // Method "<init>":(ZLjuzu/impl/fs/spi/ReadWriteFileSystem;Ljuzu/impl/fs/spi/ReadWriteFileSystem;Ljuzu/impl/fs/spi/ReadWriteFileSystem;)V
       8: return

  public juzu.test.CompilerAssert(juzu.impl.fs.spi.ReadWriteFileSystem<I>, juzu.impl.fs.spi.ReadWriteFileSystem<O>);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: aload_2
       4: aload_2
       5: invokespecial #29                 // Method "<init>":(ZLjuzu/impl/fs/spi/ReadWriteFileSystem;Ljuzu/impl/fs/spi/ReadWriteFileSystem;Ljuzu/impl/fs/spi/ReadWriteFileSystem;)V
       8: return

  public juzu.test.CompilerAssert(boolean, juzu.impl.fs.spi.ReadWriteFileSystem<I>, juzu.impl.fs.spi.ReadWriteFileSystem<O>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aload_3
       5: invokespecial #29                 // Method "<init>":(ZLjuzu/impl/fs/spi/ReadWriteFileSystem;Ljuzu/impl/fs/spi/ReadWriteFileSystem;Ljuzu/impl/fs/spi/ReadWriteFileSystem;)V
       8: return

  public juzu.test.CompilerAssert<I, O> with(javax.annotation.processing.Processor);
    Code:
       0: aload_0
       1: getfield      #23                 // Field strategy:Ljuzu/test/CompileStrategy;
       4: new           #30                 // class juzu/test/CompilerAssert$3
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #31                 // Method juzu/test/CompilerAssert$3."<init>":(Ljuzu/test/CompilerAssert;Ljavax/annotation/processing/Processor;)V
      13: putfield      #26                 // Field juzu/test/CompileStrategy.processorFactory:Ljavax/inject/Provider;
      16: aload_0
      17: areturn

  public juzu.test.CompilerAssert<I, O> with(javax.inject.Provider<? extends javax.annotation.processing.Processor>);
    Code:
       0: aload_0
       1: getfield      #23                 // Field strategy:Ljuzu/test/CompileStrategy;
       4: aload_1
       5: putfield      #26                 // Field juzu/test/CompileStrategy.processorFactory:Ljavax/inject/Provider;
       8: aload_0
       9: areturn

  public juzu.test.CompilerAssert<I, O> with(juzu.test.JavaCompilerProvider);
    Code:
       0: aload_0
       1: getfield      #23                 // Field strategy:Ljuzu/test/CompileStrategy;
       4: aload_1
       5: putfield      #28                 // Field juzu/test/CompileStrategy.javaCompiler:Ljuzu/test/JavaCompilerProvider;
       8: aload_0
       9: areturn

  public juzu.test.CompilerAssert<I, O> addClassPath(juzu.impl.fs.spi.ReadFileSystem<?>);
    Code:
       0: aload_0
       1: getfield      #23                 // Field strategy:Ljuzu/test/CompileStrategy;
       4: aload_1
       5: invokevirtual #24                 // Method juzu/test/CompileStrategy.addClassPath:(Ljuzu/impl/fs/spi/ReadFileSystem;)V
       8: aload_0
       9: areturn

  public juzu.impl.fs.spi.ReadFileSystem<I> getSourcePath();
    Code:
       0: aload_0
       1: getfield      #23                 // Field strategy:Ljuzu/test/CompileStrategy;
       4: getfield      #32                 // Field juzu/test/CompileStrategy.sourcePath:Ljuzu/impl/fs/spi/ReadWriteFileSystem;
       7: areturn

  public juzu.impl.fs.spi.ReadWriteFileSystem<O> getClassOutput();
    Code:
       0: aload_0
       1: getfield      #23                 // Field strategy:Ljuzu/test/CompileStrategy;
       4: getfield      #33                 // Field juzu/test/CompileStrategy.classOutput:Ljuzu/impl/fs/spi/ReadWriteFileSystem;
       7: areturn

  public juzu.impl.fs.spi.ReadWriteFileSystem<O> getSourceOutput();
    Code:
       0: aload_0
       1: getfield      #23                 // Field strategy:Ljuzu/test/CompileStrategy;
       4: getfield      #34                 // Field juzu/test/CompileStrategy.sourceOutput:Ljuzu/impl/fs/spi/ReadWriteFileSystem;
       7: areturn

  public juzu.test.CompilerAssert<I, O> formalErrorReporting(boolean);
    Code:
       0: iload_1
       1: ifeq          22
       4: aload_0
       5: getfield      #23                 // Field strategy:Ljuzu/test/CompileStrategy;
       8: getfield      #35                 // Field juzu/test/CompileStrategy.config:Ljuzu/impl/compiler/CompilerConfig;
      11: ldc           #36                 // String juzu.error_reporting
      13: ldc           #37                 // String formal
      15: invokevirtual #38                 // Method juzu/impl/compiler/CompilerConfig.withProcessorOption:(Ljava/lang/String;Ljava/lang/String;)Ljuzu/impl/compiler/CompilerConfig;
      18: pop
      19: goto          36
      22: aload_0
      23: getfield      #23                 // Field strategy:Ljuzu/test/CompileStrategy;
      26: getfield      #35                 // Field juzu/test/CompileStrategy.config:Ljuzu/impl/compiler/CompilerConfig;
      29: ldc           #36                 // String juzu.error_reporting
      31: aconst_null
      32: invokevirtual #38                 // Method juzu/impl/compiler/CompilerConfig.withProcessorOption:(Ljava/lang/String;Ljava/lang/String;)Ljuzu/impl/compiler/CompilerConfig;
      35: pop
      36: aload_0
      37: areturn

  public java.lang.ClassLoader getClassLoader();
    Code:
       0: aload_0
       1: getfield      #39                 // Field classLoader:Ljava/lang/ClassLoader;
       4: areturn

  public java.util.List<juzu.impl.compiler.CompilationError> failCompile();
    Code:
       0: aload_0
       1: getfield      #23                 // Field strategy:Ljuzu/test/CompileStrategy;
       4: invokevirtual #40                 // Method juzu/test/CompileStrategy.compile:()V
       7: ldc           #41                 // String Was expecting compilation to fail
       9: invokestatic  #42                 // Method juzu/test/AbstractTestCase.failure:(Ljava/lang/String;)Ljunit/framework/AssertionFailedError;
      12: athrow
      13: astore_1
      14: aload_1
      15: invokevirtual #44                 // Method juzu/impl/compiler/CompilationException.getErrors:()Ljava/util/List;
      18: areturn
      19: astore_1
      20: aload_1
      21: invokestatic  #14                 // Method juzu/test/AbstractTestCase.failure:(Ljava/lang/Throwable;)Ljunit/framework/AssertionFailedError;
      24: athrow
    Exception table:
       from    to  target type
           0    13    13   Class juzu/impl/compiler/CompilationException
           0    13    19   Class java/lang/Exception

  public juzu.impl.compiler.Compiler assertCompile();
    Code:
       0: aload_0
       1: getfield      #23                 // Field strategy:Ljuzu/test/CompileStrategy;
       4: invokevirtual #40                 // Method juzu/test/CompileStrategy.compile:()V
       7: aload_0
       8: new           #45                 // class java/net/URLClassLoader
      11: dup
      12: iconst_1
      13: anewarray     #46                 // class java/net/URL
      16: dup
      17: iconst_0
      18: aload_0
      19: getfield      #23                 // Field strategy:Ljuzu/test/CompileStrategy;
      22: getfield      #33                 // Field juzu/test/CompileStrategy.classOutput:Ljuzu/impl/fs/spi/ReadWriteFileSystem;
      25: invokevirtual #47                 // Method juzu/impl/fs/spi/ReadWriteFileSystem.getURL:()Ljava/net/URL;
      28: aastore
      29: invokestatic  #3                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      32: invokevirtual #4                  // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
      35: invokespecial #48                 // Method java/net/URLClassLoader."<init>":([Ljava/net/URL;Ljava/lang/ClassLoader;)V
      38: putfield      #39                 // Field classLoader:Ljava/lang/ClassLoader;
      41: aload_0
      42: getfield      #23                 // Field strategy:Ljuzu/test/CompileStrategy;
      45: getfield      #49                 // Field juzu/test/CompileStrategy.compiler:Ljuzu/impl/compiler/Compiler;
      48: areturn
      49: astore_1
      50: aload_1
      51: invokestatic  #14                 // Method juzu/test/AbstractTestCase.failure:(Ljava/lang/Throwable;)Ljunit/framework/AssertionFailedError;
      54: athrow
    Exception table:
       from    to  target type
           0    48    49   Class java/lang/Exception

  public java.lang.Class<?> assertClass(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #39                 // Field classLoader:Ljava/lang/ClassLoader;
       4: aload_1
       5: invokevirtual #50                 // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
       8: areturn
       9: astore_2
      10: aload_2
      11: invokestatic  #14                 // Method juzu/test/AbstractTestCase.failure:(Ljava/lang/Throwable;)Ljunit/framework/AssertionFailedError;
      14: athrow
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/ClassNotFoundException

  public void assertRemove(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field strategy:Ljuzu/test/CompileStrategy;
       4: getfield      #32                 // Field juzu/test/CompileStrategy.sourcePath:Ljuzu/impl/fs/spi/ReadWriteFileSystem;
       7: iconst_1
       8: anewarray     #52                 // class java/lang/String
      11: dup
      12: iconst_0
      13: aload_1
      14: aastore
      15: invokevirtual #53                 // Method juzu/impl/fs/spi/ReadWriteFileSystem.getPath:([Ljava/lang/String;)Ljava/lang/Object;
      18: astore_2
      19: aload_2
      20: ifnonnull     58
      23: new           #54                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #56                 // String Cannot remove path
      32: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: bipush        47
      37: iconst_1
      38: anewarray     #52                 // class java/lang/String
      41: dup
      42: iconst_0
      43: aload_1
      44: aastore
      45: invokestatic  #58                 // Method juzu/impl/common/Tools.join:(C[Ljava/lang/String;)Ljava/lang/String;
      48: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokestatic  #42                 // Method juzu/test/AbstractTestCase.failure:(Ljava/lang/String;)Ljunit/framework/AssertionFailedError;
      57: athrow
      58: aload_0
      59: getfield      #23                 // Field strategy:Ljuzu/test/CompileStrategy;
      62: getfield      #32                 // Field juzu/test/CompileStrategy.sourcePath:Ljuzu/impl/fs/spi/ReadWriteFileSystem;
      65: aload_2
      66: invokevirtual #60                 // Method juzu/impl/fs/spi/ReadWriteFileSystem.removePath:(Ljava/lang/Object;)Z
      69: pop
      70: goto          79
      73: astore_2
      74: aload_2
      75: invokestatic  #14                 // Method juzu/test/AbstractTestCase.failure:(Ljava/lang/Throwable;)Ljunit/framework/AssertionFailedError;
      78: athrow
      79: return
    Exception table:
       from    to  target type
           0    70    73   Class java/lang/Exception

  public juzu.test.JavaFile<I> assertSource(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #23                 // Field strategy:Ljuzu/test/CompileStrategy;
       4: getfield      #32                 // Field juzu/test/CompileStrategy.sourcePath:Ljuzu/impl/fs/spi/ReadWriteFileSystem;
       7: aload_1
       8: invokevirtual #53                 // Method juzu/impl/fs/spi/ReadWriteFileSystem.getPath:([Ljava/lang/String;)Ljava/lang/Object;
      11: astore_2
      12: goto          21
      15: astore_3
      16: aload_3
      17: invokestatic  #14                 // Method juzu/test/AbstractTestCase.failure:(Ljava/lang/Throwable;)Ljunit/framework/AssertionFailedError;
      20: athrow
      21: aload_2
      22: ifnonnull     56
      25: new           #54                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #62                 // String Was not expecting
      34: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_1
      38: invokestatic  #63                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      41: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: ldc           #65                 // String  to be null file
      46: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokestatic  #42                 // Method juzu/test/AbstractTestCase.failure:(Ljava/lang/String;)Ljunit/framework/AssertionFailedError;
      55: athrow
      56: new           #66                 // class juzu/test/JavaFile
      59: dup
      60: aload_0
      61: getfield      #23                 // Field strategy:Ljuzu/test/CompileStrategy;
      64: getfield      #32                 // Field juzu/test/CompileStrategy.sourcePath:Ljuzu/impl/fs/spi/ReadWriteFileSystem;
      67: aload_2
      68: invokespecial #67                 // Method juzu/test/JavaFile."<init>":(Ljuzu/impl/fs/spi/ReadWriteFileSystem;Ljava/lang/Object;)V
      71: areturn
    Exception table:
       from    to  target type
           0    12    15   Class java/io/IOException

  static {};
    Code:
       0: new           #68                 // class juzu/test/CompilerAssert$1
       3: dup
       4: invokespecial #69                 // Method juzu/test/CompilerAssert$1."<init>":()V
       7: putstatic     #25                 // Field META_MODEL_PROCESSOR_FACTORY:Ljavax/inject/Provider;
      10: new           #70                 // class java/util/WeakHashMap
      13: dup
      14: invokespecial #71                 // Method java/util/WeakHashMap."<init>":()V
      17: putstatic     #2                  // Field classPathCache:Ljava/util/WeakHashMap;
      20: return
}
