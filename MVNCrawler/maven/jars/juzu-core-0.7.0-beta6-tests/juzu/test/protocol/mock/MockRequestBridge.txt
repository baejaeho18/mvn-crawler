Compiled from "MockRequestBridge.java"
public abstract class juzu.test.protocol.mock.MockRequestBridge implements juzu.impl.bridge.spi.RequestBridge {
  protected final juzu.impl.plugin.application.ApplicationLifeCycle<?, ?> application;

  protected final juzu.test.protocol.mock.MockClient client;

  private final juzu.impl.common.MethodHandle target;

  private final juzu.impl.bridge.spi.ScopedContext attributes;

  private final juzu.test.protocol.mock.MockHttpContext httpContext;

  private final juzu.test.protocol.mock.MockSecurityContext securityContext;

  private final juzu.test.protocol.mock.MockWindowContext windowContext;

  private final java.util.List<juzu.impl.inject.Scoped> attributesHistory;

  private final java.util.Map<juzu.impl.request.ControlParameter, java.lang.Object> arguments;

  protected java.util.Map<java.lang.String, juzu.request.RequestParameter> requestParameters;

  protected juzu.Response response;

  public juzu.test.protocol.mock.MockRequestBridge(juzu.impl.plugin.application.ApplicationLifeCycle<?, ?>, juzu.test.protocol.mock.MockClient, juzu.impl.common.MethodHandle, java.util.Map<java.lang.String, java.lang.String[]>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: invokestatic  #2                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       7: astore        5
       9: aload         4
      11: invokeinterface #3,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      16: invokeinterface #4,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      21: astore        6
      23: aload         6
      25: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          78
      33: aload         6
      35: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #7                  // class java/util/Map$Entry
      43: astore        7
      45: aload         5
      47: invokeinterface #8,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
      52: ifeq          64
      55: new           #9                  // class java/util/HashMap
      58: dup
      59: invokespecial #10                 // Method java/util/HashMap."<init>":()V
      62: astore        5
      64: aload         7
      66: invokestatic  #11                 // Method juzu/request/RequestParameter.create:(Ljava/util/Map$Entry;)Ljuzu/request/RequestParameter;
      69: aload         5
      71: invokevirtual #12                 // Method juzu/request/RequestParameter.appendTo:(Ljava/util/Map;)Ljava/util/Map;
      74: pop
      75: goto          23
      78: aload_1
      79: ldc_w         #13                 // class juzu/impl/plugin/controller/ControllerPlugin
      82: invokevirtual #14                 // Method juzu/impl/plugin/application/ApplicationLifeCycle.resolveBean:(Ljava/lang/Class;)Ljava/lang/Object;
      85: checkcast     #13                 // class juzu/impl/plugin/controller/ControllerPlugin
      88: invokevirtual #15                 // Method juzu/impl/plugin/controller/ControllerPlugin.getDescriptor:()Ljuzu/impl/plugin/controller/descriptor/ControllersDescriptor;
      91: aload_3
      92: invokevirtual #16                 // Method juzu/impl/plugin/controller/descriptor/ControllersDescriptor.getMethodByHandle:(Ljuzu/impl/common/MethodHandle;)Ljuzu/impl/request/Method;
      95: astore        6
      97: aload         6
      99: aload         5
     101: invokevirtual #17                 // Method juzu/impl/request/Method.getArguments:(Ljava/util/Map;)Ljava/util/Map;
     104: astore        7
     106: aload_0
     107: aload_1
     108: putfield      #18                 // Field application:Ljuzu/impl/plugin/application/ApplicationLifeCycle;
     111: aload_0
     112: aload_2
     113: putfield      #19                 // Field client:Ljuzu/test/protocol/mock/MockClient;
     116: aload_0
     117: aload_3
     118: putfield      #20                 // Field target:Ljuzu/impl/common/MethodHandle;
     121: aload_0
     122: new           #21                 // class juzu/impl/bridge/spi/servlet/ServletScopedContext
     125: dup
     126: getstatic     #22                 // Field juzu/impl/common/Logger.SYSTEM:Ljuzu/impl/common/Logger;
     129: invokespecial #23                 // Method juzu/impl/bridge/spi/servlet/ServletScopedContext."<init>":(Ljuzu/impl/common/Logger;)V
     132: putfield      #24                 // Field attributes:Ljuzu/impl/bridge/spi/ScopedContext;
     135: aload_0
     136: new           #25                 // class juzu/test/protocol/mock/MockHttpContext
     139: dup
     140: invokespecial #26                 // Method juzu/test/protocol/mock/MockHttpContext."<init>":()V
     143: putfield      #27                 // Field httpContext:Ljuzu/test/protocol/mock/MockHttpContext;
     146: aload_0
     147: new           #28                 // class juzu/test/protocol/mock/MockSecurityContext
     150: dup
     151: invokespecial #29                 // Method juzu/test/protocol/mock/MockSecurityContext."<init>":()V
     154: putfield      #30                 // Field securityContext:Ljuzu/test/protocol/mock/MockSecurityContext;
     157: aload_0
     158: new           #31                 // class juzu/test/protocol/mock/MockWindowContext
     161: dup
     162: invokespecial #32                 // Method juzu/test/protocol/mock/MockWindowContext."<init>":()V
     165: putfield      #33                 // Field windowContext:Ljuzu/test/protocol/mock/MockWindowContext;
     168: aload_0
     169: new           #34                 // class java/util/ArrayList
     172: dup
     173: invokespecial #35                 // Method java/util/ArrayList."<init>":()V
     176: putfield      #36                 // Field attributesHistory:Ljava/util/List;
     179: aload_0
     180: aload         7
     182: putfield      #37                 // Field arguments:Ljava/util/Map;
     185: aload_0
     186: aload         5
     188: putfield      #38                 // Field requestParameters:Ljava/util/Map;
     191: return

  public java.util.Map<java.lang.String, juzu.request.RequestParameter> getRequestParameters();
    Code:
       0: aload_0
       1: getfield      #38                 // Field requestParameters:Ljava/util/Map;
       4: areturn

  public java.util.Map<juzu.impl.request.ControlParameter, java.lang.Object> getArguments();
    Code:
       0: aload_0
       1: getfield      #37                 // Field arguments:Ljava/util/Map;
       4: areturn

  public java.util.List<juzu.impl.inject.Scoped> getAttributesHistory();
    Code:
       0: aload_0
       1: getfield      #36                 // Field attributesHistory:Ljava/util/List;
       4: areturn

  public juzu.impl.common.MethodHandle getTarget();
    Code:
       0: aload_0
       1: getfield      #20                 // Field target:Ljuzu/impl/common/MethodHandle;
       4: areturn

  public <T> T getProperty(juzu.PropertyType<T>);
    Code:
       0: aconst_null
       1: areturn

  public juzu.impl.inject.Scoped getFlashValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #19                 // Field client:Ljuzu/test/protocol/mock/MockClient;
       4: aload_1
       5: invokevirtual #39                 // Method juzu/test/protocol/mock/MockClient.getFlashValue:(Ljava/lang/Object;)Ljuzu/impl/inject/Scoped;
       8: areturn

  public void setFlashValue(java.lang.Object, juzu.impl.inject.Scoped);
    Code:
       0: aload_0
       1: getfield      #19                 // Field client:Ljuzu/test/protocol/mock/MockClient;
       4: aload_1
       5: aload_2
       6: invokevirtual #40                 // Method juzu/test/protocol/mock/MockClient.setFlashValue:(Ljava/lang/Object;Ljuzu/impl/inject/Scoped;)V
       9: return

  public juzu.impl.inject.Scoped getRequestValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #24                 // Field attributes:Ljuzu/impl/bridge/spi/ScopedContext;
       4: aload_1
       5: invokeinterface #41,  2           // InterfaceMethod juzu/impl/bridge/spi/ScopedContext.get:(Ljava/lang/Object;)Ljuzu/impl/inject/Scoped;
      10: areturn

  public void setRequestValue(java.lang.Object, juzu.impl.inject.Scoped);
    Code:
       0: aload_2
       1: ifnull        18
       4: aload_0
       5: getfield      #24                 // Field attributes:Ljuzu/impl/bridge/spi/ScopedContext;
       8: aload_1
       9: aload_2
      10: invokeinterface #42,  3           // InterfaceMethod juzu/impl/bridge/spi/ScopedContext.set:(Ljava/lang/Object;Ljuzu/impl/inject/Scoped;)V
      15: goto          29
      18: aload_0
      19: getfield      #24                 // Field attributes:Ljuzu/impl/bridge/spi/ScopedContext;
      22: aload_1
      23: aconst_null
      24: invokeinterface #42,  3           // InterfaceMethod juzu/impl/bridge/spi/ScopedContext.set:(Ljava/lang/Object;Ljuzu/impl/inject/Scoped;)V
      29: return

  public juzu.impl.inject.Scoped getSessionValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #19                 // Field client:Ljuzu/test/protocol/mock/MockClient;
       4: invokevirtual #43                 // Method juzu/test/protocol/mock/MockClient.getSession:()Ljuzu/impl/bridge/spi/ScopedContext;
       7: aload_1
       8: invokeinterface #41,  2           // InterfaceMethod juzu/impl/bridge/spi/ScopedContext.get:(Ljava/lang/Object;)Ljuzu/impl/inject/Scoped;
      13: areturn

  public void setSessionValue(java.lang.Object, juzu.impl.inject.Scoped);
    Code:
       0: aload_2
       1: ifnull        21
       4: aload_0
       5: getfield      #19                 // Field client:Ljuzu/test/protocol/mock/MockClient;
       8: invokevirtual #43                 // Method juzu/test/protocol/mock/MockClient.getSession:()Ljuzu/impl/bridge/spi/ScopedContext;
      11: aload_1
      12: aload_2
      13: invokeinterface #42,  3           // InterfaceMethod juzu/impl/bridge/spi/ScopedContext.set:(Ljava/lang/Object;Ljuzu/impl/inject/Scoped;)V
      18: goto          35
      21: aload_0
      22: getfield      #19                 // Field client:Ljuzu/test/protocol/mock/MockClient;
      25: invokevirtual #43                 // Method juzu/test/protocol/mock/MockClient.getSession:()Ljuzu/impl/bridge/spi/ScopedContext;
      28: aload_1
      29: aconst_null
      30: invokeinterface #42,  3           // InterfaceMethod juzu/impl/bridge/spi/ScopedContext.set:(Ljava/lang/Object;Ljuzu/impl/inject/Scoped;)V
      35: return

  public void purgeSession();
    Code:
       0: new           #44                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #45                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public juzu.impl.inject.Scoped getIdentityValue(java.lang.Object);
    Code:
       0: aconst_null
       1: areturn

  public void setIdentityValue(java.lang.Object, juzu.impl.inject.Scoped);
    Code:
       0: return

  public juzu.test.protocol.mock.MockSecurityContext getSecurityContext();
    Code:
       0: aload_0
       1: getfield      #30                 // Field securityContext:Ljuzu/test/protocol/mock/MockSecurityContext;
       4: areturn

  public juzu.test.protocol.mock.MockHttpContext getHttpContext();
    Code:
       0: aload_0
       1: getfield      #27                 // Field httpContext:Ljuzu/test/protocol/mock/MockHttpContext;
       4: areturn

  public juzu.test.protocol.mock.MockWindowContext getWindowContext();
    Code:
       0: aload_0
       1: getfield      #33                 // Field windowContext:Ljuzu/test/protocol/mock/MockWindowContext;
       4: areturn

  public juzu.request.UserContext getUserContext();
    Code:
       0: aload_0
       1: getfield      #19                 // Field client:Ljuzu/test/protocol/mock/MockClient;
       4: areturn

  public juzu.request.ApplicationContext getApplicationContext();
    Code:
       0: aload_0
       1: getfield      #19                 // Field client:Ljuzu/test/protocol/mock/MockClient;
       4: getfield      #46                 // Field juzu/test/protocol/mock/MockClient.application:Ljuzu/test/protocol/mock/MockApplication;
       7: areturn

  public void close();
    Code:
       0: return

  public java.lang.String _checkPropertyValidity(juzu.request.Phase, juzu.PropertyType<?>, java.lang.Object);
    Code:
       0: aload_2
       1: getstatic     #47                 // Field juzu/PropertyType.ESCAPE_XML:Ljuzu/PropertyType;
       4: if_acmpne     9
       7: aconst_null
       8: areturn
       9: new           #48                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #50                 // String Unsupported property
      18: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_2
      22: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: ldc           #53                 // String  =
      27: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_3
      31: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: areturn

  public final juzu.impl.bridge.spi.DispatchBridge createDispatch(juzu.request.Phase, juzu.impl.common.MethodHandle, java.util.Map<java.lang.String, juzu.request.ResponseParameter>) throws java.lang.NullPointerException, java.lang.IllegalArgumentException;
    Code:
       0: new           #55                 // class juzu/test/protocol/mock/MockRequestBridge$1
       3: dup
       4: aload_0
       5: aload_2
       6: aload_3
       7: aload_1
       8: invokespecial #56                 // Method juzu/test/protocol/mock/MockRequestBridge$1."<init>":(Ljuzu/test/protocol/mock/MockRequestBridge;Ljuzu/impl/common/MethodHandle;Ljava/util/Map;Ljuzu/request/Phase;)V
      11: areturn

  public void begin(juzu.impl.request.Request);
    Code:
       0: return

  public void end();
    Code:
       0: aload_0
       1: getfield      #36                 // Field attributesHistory:Ljava/util/List;
       4: aload_0
       5: getfield      #24                 // Field attributes:Ljuzu/impl/bridge/spi/ScopedContext;
       8: invokestatic  #57                 // Method juzu/impl/common/Tools.list:(Ljava/lang/Iterable;)Ljava/util/ArrayList;
      11: invokeinterface #58,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      16: pop
      17: aload_0
      18: getfield      #24                 // Field attributes:Ljuzu/impl/bridge/spi/ScopedContext;
      21: invokeinterface #59,  1           // InterfaceMethod juzu/impl/bridge/spi/ScopedContext.close:()V
      26: return

  public void setResponse(juzu.Response) throws java.lang.IllegalStateException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #60                 // Field response:Ljuzu/Response;
       5: return

  public <T extends java.lang.Throwable> T assertFailure(java.lang.Class<T>);
    Code:
       0: ldc_w         #61                 // class juzu/Response$Error
       3: aload_0
       4: getfield      #60                 // Field response:Ljuzu/Response;
       7: invokestatic  #62                 // Method juzu/test/AbstractTestCase.assertInstanceOf:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #61                 // class juzu/Response$Error
      13: astore_2
      14: aload_1
      15: aload_2
      16: invokevirtual #63                 // Method juzu/Response$Error.getCause:()Ljava/lang/Throwable;
      19: invokestatic  #62                 // Method juzu/test/AbstractTestCase.assertInstanceOf:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #64                 // class java/lang/Throwable
      25: areturn

  public juzu.request.WindowContext getWindowContext();
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method getWindowContext:()Ljuzu/test/protocol/mock/MockWindowContext;
       4: areturn

  public juzu.request.SecurityContext getSecurityContext();
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method getSecurityContext:()Ljuzu/test/protocol/mock/MockSecurityContext;
       4: areturn

  public juzu.request.HttpContext getHttpContext();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method getHttpContext:()Ljuzu/test/protocol/mock/MockHttpContext;
       4: areturn
}
