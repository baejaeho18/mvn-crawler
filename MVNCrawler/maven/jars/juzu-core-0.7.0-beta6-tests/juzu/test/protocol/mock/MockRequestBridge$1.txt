Compiled from "MockRequestBridge.java"
class juzu.test.protocol.mock.MockRequestBridge$1 implements juzu.impl.bridge.spi.DispatchBridge {
  final juzu.impl.common.MethodHandle val$target;

  final java.util.Map val$parameters;

  final juzu.request.Phase val$phase;

  final juzu.test.protocol.mock.MockRequestBridge this$0;

  juzu.test.protocol.mock.MockRequestBridge$1(juzu.test.protocol.mock.MockRequestBridge, juzu.impl.common.MethodHandle, java.util.Map, juzu.request.Phase);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Ljuzu/test/protocol/mock/MockRequestBridge;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$target:Ljuzu/impl/common/MethodHandle;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$parameters:Ljava/util/Map;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$phase:Ljuzu/request/Phase;
      21: aload_0
      22: invokespecial #5                  // Method java/lang/Object."<init>":()V
      25: return

  public juzu.impl.common.MethodHandle getTarget();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$target:Ljuzu/impl/common/MethodHandle;
       4: areturn

  public java.util.Map<java.lang.String, juzu.request.ResponseParameter> getParameters();
    Code:
       0: aload_0
       1: getfield      #3                  // Field val$parameters:Ljava/util/Map;
       4: areturn

  public <T> java.lang.String checkPropertyValidity(juzu.PropertyType<T>, T);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Ljuzu/test/protocol/mock/MockRequestBridge;
       4: aload_0
       5: getfield      #4                  // Field val$phase:Ljuzu/request/Phase;
       8: aload_1
       9: aload_2
      10: invokevirtual #6                  // Method juzu/test/protocol/mock/MockRequestBridge._checkPropertyValidity:(Ljuzu/request/Phase;Ljuzu/PropertyType;Ljava/lang/Object;)Ljava/lang/String;
      13: areturn

  public void renderURL(juzu.PropertyMap, juzu.impl.common.MimeType, java.lang.Appendable) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Ljuzu/test/protocol/mock/MockRequestBridge;
       4: getfield      #7                  // Field juzu/test/protocol/mock/MockRequestBridge.application:Ljuzu/impl/plugin/application/ApplicationLifeCycle;
       7: ldc_w         #8                  // class juzu/impl/plugin/controller/ControllerPlugin
      10: invokevirtual #9                  // Method juzu/impl/plugin/application/ApplicationLifeCycle.resolveBean:(Ljava/lang/Class;)Ljava/lang/Object;
      13: checkcast     #8                  // class juzu/impl/plugin/controller/ControllerPlugin
      16: invokevirtual #10                 // Method juzu/impl/plugin/controller/ControllerPlugin.getDescriptor:()Ljuzu/impl/plugin/controller/descriptor/ControllersDescriptor;
      19: aload_0
      20: getfield      #2                  // Field val$target:Ljuzu/impl/common/MethodHandle;
      23: invokevirtual #11                 // Method juzu/impl/plugin/controller/descriptor/ControllersDescriptor.getMethodByHandle:(Ljuzu/impl/common/MethodHandle;)Ljuzu/impl/request/Method;
      26: astore        4
      28: new           #12                 // class juzu/impl/common/JSON
      31: dup
      32: invokespecial #13                 // Method juzu/impl/common/JSON."<init>":()V
      35: astore        5
      37: aload_1
      38: ifnull        129
      41: aload_1
      42: invokevirtual #14                 // Method juzu/PropertyMap.iterator:()Ljava/util/Iterator;
      45: astore        6
      47: aload         6
      49: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      54: ifeq          129
      57: aload         6
      59: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      64: checkcast     #17                 // class juzu/PropertyType
      67: astore        7
      69: aload_1
      70: aload         7
      72: invokevirtual #18                 // Method juzu/PropertyMap.getValue:(Ljuzu/PropertyType;)Ljava/lang/Object;
      75: astore        8
      77: aload_0
      78: getfield      #1                  // Field this$0:Ljuzu/test/protocol/mock/MockRequestBridge;
      81: aload         4
      83: invokevirtual #19                 // Method juzu/impl/request/Method.getPhase:()Ljuzu/request/Phase;
      86: aload         7
      88: aload         8
      90: invokevirtual #6                  // Method juzu/test/protocol/mock/MockRequestBridge._checkPropertyValidity:(Ljuzu/request/Phase;Ljuzu/PropertyType;Ljava/lang/Object;)Ljava/lang/String;
      93: astore        9
      95: aload         9
      97: ifnull        110
     100: new           #20                 // class java/lang/IllegalArgumentException
     103: dup
     104: aload         9
     106: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     109: athrow
     110: aload         5
     112: aload         7
     114: invokevirtual #22                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     117: invokevirtual #23                 // Method java/lang/Class.getName:()Ljava/lang/String;
     120: aload         8
     122: invokevirtual #24                 // Method juzu/impl/common/JSON.set:(Ljava/lang/String;Ljava/lang/Object;)Ljuzu/impl/common/JSON;
     125: pop
     126: goto          47
     129: new           #25                 // class java/util/HashMap
     132: dup
     133: invokespecial #26                 // Method java/util/HashMap."<init>":()V
     136: astore        6
     138: aload_0
     139: getfield      #3                  // Field val$parameters:Ljava/util/Map;
     142: invokeinterface #27,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     147: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     152: astore        7
     154: aload         7
     156: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     161: ifeq          195
     164: aload         7
     166: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     171: checkcast     #29                 // class juzu/request/ResponseParameter
     174: astore        8
     176: aload         6
     178: aload         8
     180: invokevirtual #30                 // Method juzu/request/ResponseParameter.getName:()Ljava/lang/String;
     183: aload         8
     185: invokevirtual #31                 // Method juzu/request/ResponseParameter.toArray:()[Ljava/lang/String;
     188: invokevirtual #32                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     191: pop
     192: goto          154
     195: new           #12                 // class juzu/impl/common/JSON
     198: dup
     199: invokespecial #13                 // Method juzu/impl/common/JSON."<init>":()V
     202: astore        7
     204: aload         7
     206: ldc           #33                 // String target
     208: aload_0
     209: getfield      #2                  // Field val$target:Ljuzu/impl/common/MethodHandle;
     212: invokevirtual #34                 // Method juzu/impl/common/MethodHandle.toString:()Ljava/lang/String;
     215: invokevirtual #24                 // Method juzu/impl/common/JSON.set:(Ljava/lang/String;Ljava/lang/Object;)Ljuzu/impl/common/JSON;
     218: pop
     219: aload         7
     221: ldc           #35                 // String parameters
     223: aload         6
     225: invokevirtual #36                 // Method juzu/impl/common/JSON.map:(Ljava/lang/String;Ljava/util/Map;)Ljuzu/impl/common/JSON;
     228: pop
     229: aload         7
     231: ldc           #37                 // String properties
     233: aload         5
     235: invokevirtual #24                 // Method juzu/impl/common/JSON.set:(Ljava/lang/String;Ljava/lang/Object;)Ljuzu/impl/common/JSON;
     238: pop
     239: aload         7
     241: aload_3
     242: invokevirtual #38                 // Method juzu/impl/common/JSON.toString:(Ljava/lang/Appendable;)Ljava/lang/Appendable;
     245: pop
     246: return
}
