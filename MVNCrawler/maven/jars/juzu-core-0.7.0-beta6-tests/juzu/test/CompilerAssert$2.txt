Compiled from "CompilerAssert.java"
class juzu.test.CompilerAssert$2 implements juzu.impl.fs.Filter<juzu.impl.fs.spi.url.Node> {
  final juzu.test.CompilerAssert this$0;

  juzu.test.CompilerAssert$2(juzu.test.CompilerAssert);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Ljuzu/test/CompilerAssert;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public boolean acceptDir(juzu.impl.fs.spi.url.Node, java.lang.String) throws java.io.IOException;
    Code:
       0: iconst_1
       1: ireturn

  public boolean acceptFile(juzu.impl.fs.spi.url.Node, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_2
       1: ldc           #3                  // String .java
       3: invokevirtual #4                  // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean acceptFile(java.lang.Object, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #5                  // class juzu/impl/fs/spi/url/Node
       5: aload_2
       6: invokevirtual #6                  // Method acceptFile:(Ljuzu/impl/fs/spi/url/Node;Ljava/lang/String;)Z
       9: ireturn

  public boolean acceptDir(java.lang.Object, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #5                  // class juzu/impl/fs/spi/url/Node
       5: aload_2
       6: invokevirtual #7                  // Method acceptDir:(Ljuzu/impl/fs/spi/url/Node;Ljava/lang/String;)Z
       9: ireturn
}
