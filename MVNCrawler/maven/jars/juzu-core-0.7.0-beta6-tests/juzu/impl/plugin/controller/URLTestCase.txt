Compiled from "URLTestCase.java"
public class juzu.impl.plugin.controller.URLTestCase extends juzu.test.AbstractInjectTestCase {
  public juzu.impl.plugin.controller.URLTestCase(juzu.impl.inject.spi.InjectorProvider);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method juzu/test/AbstractInjectTestCase."<init>":(Ljuzu/impl/inject/spi/InjectorProvider;)V
       5: return

  public void testSimple() throws java.lang.Exception;
    Code:
       0: aload_0
       1: ldc           #2                  // String plugin.controller.url.simple
       3: invokevirtual #3                  // Method application:(Ljava/lang/String;)Ljuzu/test/protocol/mock/MockApplication;
       6: astore_1
       7: aload_1
       8: invokevirtual #4                  // Method juzu/test/protocol/mock/MockApplication.init:()Ljuzu/test/protocol/mock/MockApplication;
      11: pop
      12: aload_1
      13: invokevirtual #5                  // Method juzu/test/protocol/mock/MockApplication.client:()Ljuzu/test/protocol/mock/MockClient;
      16: astore_2
      17: aload_2
      18: invokevirtual #6                  // Method juzu/test/protocol/mock/MockClient.render:()Ljuzu/test/protocol/mock/MockRenderBridge;
      21: astore_3
      22: aload_3
      23: invokevirtual #7                  // Method juzu/test/protocol/mock/MockRenderBridge.assertStringResult:()Ljava/lang/String;
      26: invokestatic  #8                  // Method juzu/impl/common/JSON.parse:(Ljava/lang/String;)Ljava/lang/Object;
      29: checkcast     #9                  // class juzu/impl/common/JSON
      32: astore        4
      34: aload         4
      36: ldc           #10                 // String properties
      38: invokevirtual #11                 // Method juzu/impl/common/JSON.getJSON:(Ljava/lang/String;)Ljuzu/impl/common/JSON;
      41: getstatic     #12                 // Field juzu/PropertyType.ESCAPE_XML:Ljuzu/PropertyType;
      44: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      47: invokevirtual #14                 // Method java/lang/Class.getName:()Ljava/lang/String;
      50: invokevirtual #15                 // Method juzu/impl/common/JSON.contains:(Ljava/lang/String;)Z
      53: invokestatic  #16                 // Method assertFalse:(Z)V
      56: return

  public void testEscapeXML() throws java.lang.Exception;
    Code:
       0: aload_0
       1: ldc           #17                 // String plugin.controller.url.escapexml
       3: invokevirtual #3                  // Method application:(Ljava/lang/String;)Ljuzu/test/protocol/mock/MockApplication;
       6: astore_1
       7: aload_1
       8: invokevirtual #4                  // Method juzu/test/protocol/mock/MockApplication.init:()Ljuzu/test/protocol/mock/MockApplication;
      11: pop
      12: aload_1
      13: invokevirtual #5                  // Method juzu/test/protocol/mock/MockApplication.client:()Ljuzu/test/protocol/mock/MockClient;
      16: astore_2
      17: aload_2
      18: invokevirtual #6                  // Method juzu/test/protocol/mock/MockClient.render:()Ljuzu/test/protocol/mock/MockRenderBridge;
      21: astore_3
      22: aload_3
      23: invokevirtual #7                  // Method juzu/test/protocol/mock/MockRenderBridge.assertStringResult:()Ljava/lang/String;
      26: invokestatic  #8                  // Method juzu/impl/common/JSON.parse:(Ljava/lang/String;)Ljava/lang/Object;
      29: checkcast     #9                  // class juzu/impl/common/JSON
      32: astore        4
      34: getstatic     #18                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      37: aload         4
      39: ldc           #10                 // String properties
      41: invokevirtual #11                 // Method juzu/impl/common/JSON.getJSON:(Ljava/lang/String;)Ljuzu/impl/common/JSON;
      44: getstatic     #12                 // Field juzu/PropertyType.ESCAPE_XML:Ljuzu/PropertyType;
      47: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      50: invokevirtual #14                 // Method java/lang/Class.getName:()Ljava/lang/String;
      53: invokevirtual #19                 // Method juzu/impl/common/JSON.get:(Ljava/lang/String;)Ljava/lang/Object;
      56: invokestatic  #20                 // Method assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      59: return

  public void testInvalidProperty() throws java.lang.Exception;
    Code:
       0: aload_0
       1: ldc           #21                 // String plugin.controller.url.invalidproperty
       3: invokevirtual #3                  // Method application:(Ljava/lang/String;)Ljuzu/test/protocol/mock/MockApplication;
       6: astore_1
       7: aload_1
       8: invokevirtual #4                  // Method juzu/test/protocol/mock/MockApplication.init:()Ljuzu/test/protocol/mock/MockApplication;
      11: pop
      12: aload_1
      13: invokevirtual #5                  // Method juzu/test/protocol/mock/MockApplication.client:()Ljuzu/test/protocol/mock/MockClient;
      16: astore_2
      17: aload_2
      18: invokevirtual #6                  // Method juzu/test/protocol/mock/MockClient.render:()Ljuzu/test/protocol/mock/MockRenderBridge;
      21: astore_3
      22: ldc           #22                 // String pass
      24: aload_3
      25: invokevirtual #7                  // Method juzu/test/protocol/mock/MockRenderBridge.assertStringResult:()Ljava/lang/String;
      28: invokestatic  #23                 // Method assertEquals:(Ljava/lang/String;Ljava/lang/String;)V
      31: return
}
