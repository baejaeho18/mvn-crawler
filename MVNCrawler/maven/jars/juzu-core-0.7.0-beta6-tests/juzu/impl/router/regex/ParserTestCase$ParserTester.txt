Compiled from "ParserTestCase.java"
class juzu.impl.router.regex.ParserTestCase$ParserTester {
  private final juzu.impl.router.regex.REParser parser;

  private juzu.impl.router.regex.ParserTestCase$ParserTester(java.lang.CharSequence);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class juzu/impl/router/regex/REParser
       8: dup
       9: aload_1
      10: invokespecial #4                  // Method juzu/impl/router/regex/REParser."<init>":(Ljava/lang/CharSequence;)V
      13: putfield      #5                  // Field parser:Ljuzu/impl/router/regex/REParser;
      16: return

  juzu.impl.router.regex.ParserTestCase$ParserTester assertParseCharacterClass(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field parser:Ljuzu/impl/router/regex/REParser;
       4: invokevirtual #6                  // Method juzu/impl/router/regex/REParser.parseExpression:()Ljuzu/impl/router/regex/RENode$Expr;
       7: astore_2
       8: aload_2
       9: instanceof    #7                  // class juzu/impl/router/regex/RENode$CharacterClass
      12: invokestatic  #8                  // Method junit/framework/Assert.assertTrue:(Z)V
      15: aload_1
      16: aload_2
      17: invokevirtual #9                  // Method juzu/impl/router/regex/RENode.toString:()Ljava/lang/String;
      20: invokestatic  #10                 // Method junit/framework/Assert.assertEquals:(Ljava/lang/String;Ljava/lang/String;)V
      23: aload_0
      24: areturn
      25: astore_2
      26: aload_2
      27: invokestatic  #12                 // Method juzu/test/AbstractTestCase.failure:(Ljava/lang/Throwable;)Ljunit/framework/AssertionFailedError;
      30: athrow
    Exception table:
       from    to  target type
           0    24    25   Class juzu/impl/router/regex/SyntaxException

  juzu.impl.router.regex.ParserTestCase$ParserTester assertParseDisjunction(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field parser:Ljuzu/impl/router/regex/REParser;
       4: invokevirtual #13                 // Method juzu/impl/router/regex/REParser.parseDisjunction:()Ljuzu/impl/router/regex/RENode$Disjunction;
       7: astore_2
       8: aload_0
       9: getfield      #5                  // Field parser:Ljuzu/impl/router/regex/REParser;
      12: invokevirtual #14                 // Method juzu/impl/router/regex/REParser.isDone:()Z
      15: invokestatic  #8                  // Method junit/framework/Assert.assertTrue:(Z)V
      18: aload_1
      19: invokevirtual #15                 // Method java/lang/String.length:()I
      22: ifne          32
      25: aload_2
      26: invokestatic  #16                 // Method junit/framework/Assert.assertNull:(Ljava/lang/Object;)V
      29: goto          44
      32: aload_2
      33: invokestatic  #17                 // Method junit/framework/Assert.assertNotNull:(Ljava/lang/Object;)V
      36: aload_1
      37: aload_2
      38: invokevirtual #18                 // Method juzu/impl/router/regex/RENode$Disjunction.toString:()Ljava/lang/String;
      41: invokestatic  #10                 // Method junit/framework/Assert.assertEquals:(Ljava/lang/String;Ljava/lang/String;)V
      44: aload_0
      45: areturn
      46: astore_2
      47: aload_2
      48: invokestatic  #12                 // Method juzu/test/AbstractTestCase.failure:(Ljava/lang/Throwable;)Ljunit/framework/AssertionFailedError;
      51: athrow
    Exception table:
       from    to  target type
           0    45    46   Class juzu/impl/router/regex/SyntaxException

  juzu.impl.router.regex.ParserTestCase$ParserTester assertNotParseDisjunction();
    Code:
       0: aload_0
       1: getfield      #5                  // Field parser:Ljuzu/impl/router/regex/REParser;
       4: invokevirtual #19                 // Method juzu/impl/router/regex/REParser.getIndex:()I
       7: istore_1
       8: aload_0
       9: getfield      #5                  // Field parser:Ljuzu/impl/router/regex/REParser;
      12: invokevirtual #13                 // Method juzu/impl/router/regex/REParser.parseDisjunction:()Ljuzu/impl/router/regex/RENode$Disjunction;
      15: pop
      16: invokestatic  #20                 // Method junit/framework/Assert.fail:()V
      19: goto          34
      22: astore_2
      23: iload_1
      24: aload_0
      25: getfield      #5                  // Field parser:Ljuzu/impl/router/regex/REParser;
      28: invokevirtual #19                 // Method juzu/impl/router/regex/REParser.getIndex:()I
      31: invokestatic  #21                 // Method junit/framework/Assert.assertEquals:(II)V
      34: aload_0
      35: areturn
    Exception table:
       from    to  target type
           8    19    22   Class juzu/impl/router/regex/SyntaxException

  juzu.impl.router.regex.ParserTestCase$ParserTester assertParseExpression(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field parser:Ljuzu/impl/router/regex/REParser;
       4: invokevirtual #6                  // Method juzu/impl/router/regex/REParser.parseExpression:()Ljuzu/impl/router/regex/RENode$Expr;
       7: astore_3
       8: aload_1
       9: aload_3
      10: invokevirtual #22                 // Method juzu/impl/router/regex/RENode$Expr.toString:()Ljava/lang/String;
      13: invokestatic  #10                 // Method junit/framework/Assert.assertEquals:(Ljava/lang/String;Ljava/lang/String;)V
      16: iload_2
      17: aload_0
      18: getfield      #5                  // Field parser:Ljuzu/impl/router/regex/REParser;
      21: invokevirtual #19                 // Method juzu/impl/router/regex/REParser.getIndex:()I
      24: invokestatic  #21                 // Method junit/framework/Assert.assertEquals:(II)V
      27: aload_0
      28: areturn
      29: astore_3
      30: aload_3
      31: invokestatic  #12                 // Method juzu/test/AbstractTestCase.failure:(Ljava/lang/Throwable;)Ljunit/framework/AssertionFailedError;
      34: athrow
    Exception table:
       from    to  target type
           0    28    29   Class juzu/impl/router/regex/SyntaxException

  juzu.impl.router.regex.ParserTestCase$ParserTester assertNotParseExpression();
    Code:
       0: aload_0
       1: getfield      #5                  // Field parser:Ljuzu/impl/router/regex/REParser;
       4: invokevirtual #6                  // Method juzu/impl/router/regex/REParser.parseExpression:()Ljuzu/impl/router/regex/RENode$Expr;
       7: astore_1
       8: aload_1
       9: invokestatic  #16                 // Method junit/framework/Assert.assertNull:(Ljava/lang/Object;)V
      12: goto          16
      15: astore_1
      16: aload_0
      17: areturn
    Exception table:
       from    to  target type
           0    12    15   Class juzu/impl/router/regex/SyntaxException

  juzu.impl.router.regex.ParserTestCase$ParserTester assertParseQuantifier(juzu.impl.router.regex.Quantifier);
    Code:
       0: aload_0
       1: getfield      #5                  // Field parser:Ljuzu/impl/router/regex/REParser;
       4: invokevirtual #23                 // Method juzu/impl/router/regex/REParser.parseQuantifier:()Ljuzu/impl/router/regex/Quantifier;
       7: astore_2
       8: goto          17
      11: astore_3
      12: aload_3
      13: invokestatic  #12                 // Method juzu/test/AbstractTestCase.failure:(Ljava/lang/Throwable;)Ljunit/framework/AssertionFailedError;
      16: athrow
      17: aload_1
      18: ifnull        29
      21: aload_1
      22: aload_2
      23: invokestatic  #24                 // Method junit/framework/Assert.assertEquals:(Ljava/lang/Object;Ljava/lang/Object;)V
      26: goto          33
      29: aload_2
      30: invokestatic  #16                 // Method junit/framework/Assert.assertNull:(Ljava/lang/Object;)V
      33: aload_0
      34: areturn
    Exception table:
       from    to  target type
           0     8    11   Class juzu/impl/router/regex/SyntaxException

  juzu.impl.router.regex.ParserTestCase$ParserTester(java.lang.CharSequence, juzu.impl.router.regex.ParserTestCase$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Ljava/lang/CharSequence;)V
       5: return
}
