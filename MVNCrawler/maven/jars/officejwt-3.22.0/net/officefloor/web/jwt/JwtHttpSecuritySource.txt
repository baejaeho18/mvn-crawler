Compiled from "JwtHttpSecuritySource.java"
public class net.officefloor.web.jwt.JwtHttpSecuritySource<C> extends net.officefloor.web.spi.security.impl.AbstractHttpSecuritySource<net.officefloor.web.security.HttpAuthentication<java.lang.Void>, net.officefloor.web.jwt.JwtHttpAccessControl<C>, java.lang.Void, net.officefloor.frame.api.build.None, net.officefloor.web.jwt.JwtHttpSecuritySource$Flows> implements net.officefloor.web.spi.security.HttpSecurity<net.officefloor.web.security.HttpAuthentication<java.lang.Void>, net.officefloor.web.jwt.JwtHttpAccessControl<C>, java.lang.Void, net.officefloor.frame.api.build.None, net.officefloor.web.jwt.JwtHttpSecuritySource$Flows> {
  private static java.lang.ThreadLocal<net.officefloor.web.jwt.JwtHttpSecuritySource$JwtKeysFactoryOverride> threadLocalKeysOverride;

  public static final java.lang.String AUTHENTICATION_SCHEME_BEARER;

  public static final java.lang.String PROPERTY_CLAIMS_CLASS;

  public static final java.lang.String PROEPRTY_STARTUP_TIMEOUT;

  public static final long DEFAULT_STARTUP_TIMEOUT;

  public static final java.lang.String PROPERTY_CLOCK_SKEW;

  public static final long DEFAULT_CLOCK_SKEW;

  private static final java.lang.String CHALLENGE_ATTRIBUTE_NAME;

  private io.jsonwebtoken.io.Decoder<java.lang.String, byte[]> base64UrlDecoder;

  private static final com.fasterxml.jackson.databind.ObjectMapper mapper;

  private static final com.fasterxml.jackson.databind.JavaType jwtClaimsJavaType;

  private static final com.fasterxml.jackson.databind.JavaType jwtHeaderJavaType;

  private net.officefloor.frame.api.clock.Clock<java.lang.Long> clock;

  private long clockSkew;

  private java.lang.Class<?> claimsClass;

  private com.fasterxml.jackson.databind.JavaType claimsJavaType;

  private long startupTimeout;

  private net.officefloor.plugin.managedobject.poll.StatePoller<net.officefloor.web.jwt.validate.JwtValidateKey[], net.officefloor.frame.api.build.None> jwtValidateKeys;

  private net.officefloor.web.jwt.JwtHttpSecuritySource$JwtKeysFactoryOverride keysOverride;

  public net.officefloor.web.jwt.JwtHttpSecuritySource();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method net/officefloor/web/spi/security/impl/AbstractHttpSecuritySource."<init>":()V
       4: aload_0
       5: invokedynamic #3,  0              // InvokeDynamic #0:decode:()Lio/jsonwebtoken/io/Decoder;
      10: putfield      #4                  // Field base64UrlDecoder:Lio/jsonwebtoken/io/Decoder;
      13: return

  public static <T extends java.lang.Throwable> void runWithKeys(net.officefloor.web.jwt.JwtHttpSecuritySource$JwtValidateKeysFactory, net.officefloor.web.jwt.JwtHttpSecuritySource$ContextRunnable<T>) throws T;
    Code:
       0: getstatic     #5                  // Field threadLocalKeysOverride:Ljava/lang/ThreadLocal;
       3: new           #6                  // class net/officefloor/web/jwt/JwtHttpSecuritySource$JwtKeysFactoryOverride
       6: dup
       7: aload_0
       8: aconst_null
       9: invokespecial #7                  // Method net/officefloor/web/jwt/JwtHttpSecuritySource$JwtKeysFactoryOverride."<init>":(Lnet/officefloor/web/jwt/JwtHttpSecuritySource$JwtValidateKeysFactory;Lnet/officefloor/web/jwt/JwtHttpSecuritySource$1;)V
      12: invokevirtual #8                  // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      15: aload_1
      16: invokeinterface #9,  1            // InterfaceMethod net/officefloor/web/jwt/JwtHttpSecuritySource$ContextRunnable.run:()V
      21: getstatic     #5                  // Field threadLocalKeysOverride:Ljava/lang/ThreadLocal;
      24: invokevirtual #10                 // Method java/lang/ThreadLocal.remove:()V
      27: goto          39
      30: astore_2
      31: getstatic     #5                  // Field threadLocalKeysOverride:Ljava/lang/ThreadLocal;
      34: invokevirtual #10                 // Method java/lang/ThreadLocal.remove:()V
      37: aload_2
      38: athrow
      39: return
    Exception table:
       from    to  target type
          15    21    30   any

  protected void loadSpecification(net.officefloor.web.spi.security.impl.AbstractHttpSecuritySource$SpecificationContext);
    Code:
       0: aload_1
       1: ldc           #12                 // String claims.class
       3: ldc           #13                 // String Claims Class
       5: invokeinterface #14,  3           // InterfaceMethod net/officefloor/web/spi/security/impl/AbstractHttpSecuritySource$SpecificationContext.addProperty:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  protected void loadMetaData(net.officefloor.web.spi.security.impl.AbstractHttpSecuritySource$MetaDataContext<net.officefloor.web.security.HttpAuthentication<java.lang.Void>, net.officefloor.web.jwt.JwtHttpAccessControl<C>, java.lang.Void, net.officefloor.frame.api.build.None, net.officefloor.web.jwt.JwtHttpSecuritySource$Flows>) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod net/officefloor/web/spi/security/impl/AbstractHttpSecuritySource$MetaDataContext.getHttpSecuritySourceContext:()Lnet/officefloor/web/spi/security/HttpSecuritySourceContext;
       6: astore_2
       7: aload_0
       8: aload_2
       9: invokedynamic #16,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      14: invokeinterface #17,  2           // InterfaceMethod net/officefloor/web/spi/security/HttpSecuritySourceContext.getClock:(Ljava/util/function/Function;)Lnet/officefloor/frame/api/clock/Clock;
      19: putfield      #18                 // Field clock:Lnet/officefloor/frame/api/clock/Clock;
      22: aload_0
      23: aload_2
      24: ldc           #19                 // String clock.skew
      26: ldc2_w        #20                 // long 2l
      29: invokestatic  #22                 // Method java/lang/String.valueOf:(J)Ljava/lang/String;
      32: invokeinterface #23,  3           // InterfaceMethod net/officefloor/web/spi/security/HttpSecuritySourceContext.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      37: invokestatic  #24                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      40: putfield      #25                 // Field clockSkew:J
      43: aload_0
      44: aload_2
      45: aload_2
      46: ldc           #12                 // String claims.class
      48: invokeinterface #26,  2           // InterfaceMethod net/officefloor/web/spi/security/HttpSecuritySourceContext.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      53: invokeinterface #27,  2           // InterfaceMethod net/officefloor/web/spi/security/HttpSecuritySourceContext.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      58: putfield      #28                 // Field claimsClass:Ljava/lang/Class;
      61: aload_0
      62: aload_2
      63: ldc           #29                 // String startup.timeout
      65: ldc2_w        #30                 // long 1000l
      68: invokestatic  #22                 // Method java/lang/String.valueOf:(J)Ljava/lang/String;
      71: invokeinterface #23,  3           // InterfaceMethod net/officefloor/web/spi/security/HttpSecuritySourceContext.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      76: invokestatic  #24                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      79: putfield      #32                 // Field startupTimeout:J
      82: aload_0
      83: getstatic     #33                 // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      86: aload_0
      87: getfield      #28                 // Field claimsClass:Ljava/lang/Class;
      90: invokevirtual #34                 // Method com/fasterxml/jackson/databind/ObjectMapper.constructType:(Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JavaType;
      93: putfield      #35                 // Field claimsJavaType:Lcom/fasterxml/jackson/databind/JavaType;
      96: getstatic     #33                 // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      99: aload_0
     100: getfield      #35                 // Field claimsJavaType:Lcom/fasterxml/jackson/databind/JavaType;
     103: invokevirtual #36                 // Method com/fasterxml/jackson/databind/ObjectMapper.canDeserialize:(Lcom/fasterxml/jackson/databind/JavaType;)Z
     106: ifne          147
     109: new           #37                 // class java/io/IOException
     112: dup
     113: new           #38                 // class java/lang/StringBuilder
     116: dup
     117: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     120: ldc           #40                 // String Unable to deserialise
     122: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload_0
     126: getfield      #28                 // Field claimsClass:Ljava/lang/Class;
     129: invokevirtual #42                 // Method java/lang/Class.getName:()Ljava/lang/String;
     132: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: ldc           #43                 // String  to load JWT claims
     137: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     143: invokespecial #45                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     146: athrow
     147: aload_0
     148: getstatic     #5                  // Field threadLocalKeysOverride:Ljava/lang/ThreadLocal;
     151: invokevirtual #46                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
     154: checkcast     #6                  // class net/officefloor/web/jwt/JwtHttpSecuritySource$JwtKeysFactoryOverride
     157: putfield      #47                 // Field keysOverride:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$JwtKeysFactoryOverride;
     160: aload_0
     161: getfield      #47                 // Field keysOverride:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$JwtKeysFactoryOverride;
     164: ifnull        177
     167: aload_0
     168: getfield      #47                 // Field keysOverride:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$JwtKeysFactoryOverride;
     171: invokestatic  #48                 // Method net/officefloor/web/jwt/JwtHttpSecuritySource$JwtKeysFactoryOverride.access$100:(Lnet/officefloor/web/jwt/JwtHttpSecuritySource$JwtKeysFactoryOverride;)Lnet/officefloor/web/jwt/JwtHttpSecuritySource$JwtValidateKeysFactory;
     174: ifnonnull     182
     177: aload_0
     178: aconst_null
     179: putfield      #47                 // Field keysOverride:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$JwtKeysFactoryOverride;
     182: aload_1
     183: ldc           #49                 // class net/officefloor/web/security/HttpAuthentication
     185: invokeinterface #50,  2           // InterfaceMethod net/officefloor/web/spi/security/impl/AbstractHttpSecuritySource$MetaDataContext.setAuthenticationClass:(Ljava/lang/Class;)V
     190: aload_1
     191: ldc           #51                 // class net/officefloor/web/jwt/JwtHttpAccessControl
     193: invokeinterface #52,  2           // InterfaceMethod net/officefloor/web/spi/security/impl/AbstractHttpSecuritySource$MetaDataContext.setAccessControlClass:(Ljava/lang/Class;)V
     198: aload_1
     199: getstatic     #53                 // Field net/officefloor/web/jwt/JwtHttpSecuritySource$Flows.RETRIEVE_KEYS:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$Flows;
     202: ldc           #54                 // class net/officefloor/web/jwt/validate/JwtValidateKeyCollector
     204: invokeinterface #55,  3           // InterfaceMethod net/officefloor/web/spi/security/impl/AbstractHttpSecuritySource$MetaDataContext.addFlow:(Ljava/lang/Enum;Ljava/lang/Class;)Lnet/officefloor/web/spi/security/impl/AbstractHttpSecuritySource$Labeller;
     209: pop
     210: aload_1
     211: getstatic     #56                 // Field net/officefloor/web/jwt/JwtHttpSecuritySource$Flows.RETRIEVE_ROLES:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$Flows;
     214: ldc           #57                 // class net/officefloor/web/jwt/role/JwtRoleCollector
     216: invokeinterface #55,  3           // InterfaceMethod net/officefloor/web/spi/security/impl/AbstractHttpSecuritySource$MetaDataContext.addFlow:(Ljava/lang/Enum;Ljava/lang/Class;)Lnet/officefloor/web/spi/security/impl/AbstractHttpSecuritySource$Labeller;
     221: pop
     222: aload_1
     223: getstatic     #58                 // Field net/officefloor/web/jwt/JwtHttpSecuritySource$Flows.NO_JWT:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$Flows;
     226: aconst_null
     227: invokeinterface #55,  3           // InterfaceMethod net/officefloor/web/spi/security/impl/AbstractHttpSecuritySource$MetaDataContext.addFlow:(Ljava/lang/Enum;Ljava/lang/Class;)Lnet/officefloor/web/spi/security/impl/AbstractHttpSecuritySource$Labeller;
     232: pop
     233: aload_1
     234: getstatic     #59                 // Field net/officefloor/web/jwt/JwtHttpSecuritySource$Flows.INVALID_JWT:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$Flows;
     237: aconst_null
     238: invokeinterface #55,  3           // InterfaceMethod net/officefloor/web/spi/security/impl/AbstractHttpSecuritySource$MetaDataContext.addFlow:(Ljava/lang/Enum;Ljava/lang/Class;)Lnet/officefloor/web/spi/security/impl/AbstractHttpSecuritySource$Labeller;
     243: pop
     244: aload_1
     245: getstatic     #60                 // Field net/officefloor/web/jwt/JwtHttpSecuritySource$Flows.EXPIRED_JWT:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$Flows;
     248: aconst_null
     249: invokeinterface #55,  3           // InterfaceMethod net/officefloor/web/spi/security/impl/AbstractHttpSecuritySource$MetaDataContext.addFlow:(Ljava/lang/Enum;Ljava/lang/Class;)Lnet/officefloor/web/spi/security/impl/AbstractHttpSecuritySource$Labeller;
     254: pop
     255: aload_2
     256: ldc           #61                 // String JWT_CLAIMS
     258: new           #62                 // class net/officefloor/web/jwt/JwtClaimsManagedObjectSource
     261: dup
     262: aload_0
     263: getfield      #28                 // Field claimsClass:Ljava/lang/Class;
     266: invokespecial #63                 // Method net/officefloor/web/jwt/JwtClaimsManagedObjectSource."<init>":(Ljava/lang/Class;)V
     269: getstatic     #64                 // Field net/officefloor/frame/internal/structure/ManagedObjectScope.THREAD:Lnet/officefloor/frame/internal/structure/ManagedObjectScope;
     272: invokeinterface #65,  4           // InterfaceMethod net/officefloor/web/spi/security/HttpSecuritySourceContext.addSupportingManagedObject:(Ljava/lang/String;Lnet/officefloor/frame/api/managedobject/source/ManagedObjectSource;Lnet/officefloor/frame/internal/structure/ManagedObjectScope;)Lnet/officefloor/web/spi/security/HttpSecuritySupportingManagedObject;
     277: astore_3
     278: aload_3
     279: getstatic     #66                 // Field net/officefloor/web/jwt/JwtClaimsManagedObjectSource$Dependencies.ACCESS_CONTROL:Lnet/officefloor/web/jwt/JwtClaimsManagedObjectSource$Dependencies;
     282: invokeinterface #67,  2           // InterfaceMethod net/officefloor/web/spi/security/HttpSecuritySupportingManagedObject.linkAccessControl:(Ljava/lang/Enum;)V
     287: return

  public net.officefloor.web.spi.security.HttpSecurity<net.officefloor.web.security.HttpAuthentication<java.lang.Void>, net.officefloor.web.jwt.JwtHttpAccessControl<C>, java.lang.Void, net.officefloor.frame.api.build.None, net.officefloor.web.jwt.JwtHttpSecuritySource$Flows> sourceHttpSecurity(net.officefloor.web.spi.security.HttpSecurityContext) throws net.officefloor.server.http.HttpException;
    Code:
       0: aload_0
       1: areturn

  public void start(net.officefloor.web.spi.security.HttpSecurityExecuteContext<net.officefloor.web.jwt.JwtHttpSecuritySource$Flows>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #47                 // Field keysOverride:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$JwtKeysFactoryOverride;
       4: ifnull        8
       7: return
       8: aload_0
       9: ldc           #68                 // class "[Lnet/officefloor/web/jwt/validate/JwtValidateKey;"
      11: aload_0
      12: aload_1
      13: invokedynamic #69,  0             // InvokeDynamic #2:initialise:(Lnet/officefloor/web/jwt/JwtHttpSecuritySource;Lnet/officefloor/web/spi/security/HttpSecurityExecuteContext;)Lnet/officefloor/plugin/managedobject/poll/StatePoller$Initialiser;
      18: aload_0
      19: aload_1
      20: invokedynamic #70,  0             // InvokeDynamic #3:nextPoll:(Lnet/officefloor/web/jwt/JwtHttpSecuritySource;Lnet/officefloor/web/spi/security/HttpSecurityExecuteContext;)Lnet/officefloor/plugin/managedobject/poll/StatePoller$Poller;
      25: invokestatic  #71                 // Method net/officefloor/plugin/managedobject/poll/StatePoller.builder:(Ljava/lang/Class;Lnet/officefloor/plugin/managedobject/poll/StatePoller$Initialiser;Lnet/officefloor/plugin/managedobject/poll/StatePoller$Poller;)Lnet/officefloor/plugin/managedobject/poll/StatePoller$Builder;
      28: ldc           #72                 // String JWT decode keys
      30: invokevirtual #73                 // Method net/officefloor/plugin/managedobject/poll/StatePoller$Builder.identifier:(Ljava/lang/String;)Lnet/officefloor/plugin/managedobject/poll/StatePoller$Builder;
      33: invokevirtual #74                 // Method net/officefloor/plugin/managedobject/poll/StatePoller$Builder.build:()Lnet/officefloor/plugin/managedobject/poll/StatePoller;
      36: putfield      #1                  // Field jwtValidateKeys:Lnet/officefloor/plugin/managedobject/poll/StatePoller;
      39: return

  public net.officefloor.web.security.HttpAuthentication<java.lang.Void> createAuthentication(net.officefloor.web.spi.security.AuthenticationContext<net.officefloor.web.jwt.JwtHttpAccessControl<C>, java.lang.Void>);
    Code:
       0: new           #75                 // class net/officefloor/web/security/scheme/HttpAuthenticationImpl
       3: dup
       4: aload_1
       5: aconst_null
       6: invokespecial #76                 // Method net/officefloor/web/security/scheme/HttpAuthenticationImpl."<init>":(Lnet/officefloor/web/spi/security/AuthenticationContext;Ljava/lang/Class;)V
       9: areturn

  public boolean ratify(java.lang.Void, net.officefloor.web.spi.security.RatifyContext<net.officefloor.web.jwt.JwtHttpAccessControl<C>>);
    Code:
       0: aload_2
       1: invokeinterface #77,  1           // InterfaceMethod net/officefloor/web/spi/security/RatifyContext.getConnection:()Lnet/officefloor/server/http/ServerHttpConnection;
       6: invokeinterface #78,  1           // InterfaceMethod net/officefloor/server/http/ServerHttpConnection.getRequest:()Lnet/officefloor/server/http/HttpRequest;
      11: invokestatic  #79                 // Method net/officefloor/web/security/scheme/HttpAuthenticationScheme.getHttpAuthenticationScheme:(Lnet/officefloor/server/http/HttpRequest;)Lnet/officefloor/web/security/scheme/HttpAuthenticationScheme;
      14: astore_3
      15: aload_3
      16: ifnull        31
      19: ldc           #80                 // String Bearer
      21: aload_3
      22: invokevirtual #81                 // Method net/officefloor/web/security/scheme/HttpAuthenticationScheme.getAuthentiationScheme:()Ljava/lang/String;
      25: invokevirtual #82                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      28: ifne          55
      31: aload_2
      32: invokeinterface #83,  1           // InterfaceMethod net/officefloor/web/spi/security/RatifyContext.getRequestState:()Lnet/officefloor/web/state/HttpRequestState;
      37: aload_2
      38: ldc           #84                 // String challenge.reason
      40: invokeinterface #85,  2           // InterfaceMethod net/officefloor/web/spi/security/RatifyContext.getQualifiedAttributeName:(Ljava/lang/String;)Ljava/lang/String;
      45: getstatic     #86                 // Field net/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason.NO_JWT:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason;
      48: invokeinterface #87,  3           // InterfaceMethod net/officefloor/web/state/HttpRequestState.setAttribute:(Ljava/lang/String;Ljava/io/Serializable;)V
      53: iconst_0
      54: ireturn
      55: iconst_1
      56: ireturn

  public void authenticate(java.lang.Void, net.officefloor.web.spi.security.AuthenticateContext<net.officefloor.web.jwt.JwtHttpAccessControl<C>, net.officefloor.frame.api.build.None, net.officefloor.web.jwt.JwtHttpSecuritySource$Flows>) throws net.officefloor.server.http.HttpException;
    Code:
       0: aload_0
       1: getfield      #47                 // Field keysOverride:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$JwtKeysFactoryOverride;
       4: ifnull        45
       7: aload_0
       8: getfield      #47                 // Field keysOverride:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$JwtKeysFactoryOverride;
      11: invokestatic  #48                 // Method net/officefloor/web/jwt/JwtHttpSecuritySource$JwtKeysFactoryOverride.access$100:(Lnet/officefloor/web/jwt/JwtHttpSecuritySource$JwtKeysFactoryOverride;)Lnet/officefloor/web/jwt/JwtHttpSecuritySource$JwtValidateKeysFactory;
      14: invokeinterface #88,  1           // InterfaceMethod net/officefloor/web/jwt/JwtHttpSecuritySource$JwtValidateKeysFactory.createJwtValidateKeys:()[Lnet/officefloor/web/jwt/validate/JwtValidateKey;
      19: astore_3
      20: goto          95
      23: astore        4
      25: aload_2
      26: aconst_null
      27: new           #90                 // class net/officefloor/server/http/HttpException
      30: dup
      31: getstatic     #91                 // Field net/officefloor/server/http/HttpStatus.SERVICE_UNAVAILABLE:Lnet/officefloor/server/http/HttpStatus;
      34: aload         4
      36: invokespecial #92                 // Method net/officefloor/server/http/HttpException."<init>":(Lnet/officefloor/server/http/HttpStatus;Ljava/lang/Throwable;)V
      39: invokeinterface #93,  3           // InterfaceMethod net/officefloor/web/spi/security/AuthenticateContext.accessControlChange:(Ljava/io/Serializable;Ljava/lang/Throwable;)V
      44: return
      45: aload_0
      46: getfield      #1                  // Field jwtValidateKeys:Lnet/officefloor/plugin/managedobject/poll/StatePoller;
      49: aload_0
      50: getfield      #32                 // Field startupTimeout:J
      53: getstatic     #94                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      56: invokevirtual #95                 // Method net/officefloor/plugin/managedobject/poll/StatePoller.getState:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      59: checkcast     #68                 // class "[Lnet/officefloor/web/jwt/validate/JwtValidateKey;"
      62: astore_3
      63: goto          95
      66: astore        4
      68: aload_2
      69: aconst_null
      70: new           #90                 // class net/officefloor/server/http/HttpException
      73: dup
      74: getstatic     #91                 // Field net/officefloor/server/http/HttpStatus.SERVICE_UNAVAILABLE:Lnet/officefloor/server/http/HttpStatus;
      77: new           #96                 // class java/util/concurrent/TimeoutException
      80: dup
      81: ldc           #97                 // String Server timed out loading JWT keys
      83: invokespecial #98                 // Method java/util/concurrent/TimeoutException."<init>":(Ljava/lang/String;)V
      86: invokespecial #92                 // Method net/officefloor/server/http/HttpException."<init>":(Lnet/officefloor/server/http/HttpStatus;Ljava/lang/Throwable;)V
      89: invokeinterface #93,  3           // InterfaceMethod net/officefloor/web/spi/security/AuthenticateContext.accessControlChange:(Ljava/io/Serializable;Ljava/lang/Throwable;)V
      94: return
      95: aload_2
      96: invokeinterface #99,  1           // InterfaceMethod net/officefloor/web/spi/security/AuthenticateContext.getConnection:()Lnet/officefloor/server/http/ServerHttpConnection;
     101: invokeinterface #78,  1           // InterfaceMethod net/officefloor/server/http/ServerHttpConnection.getRequest:()Lnet/officefloor/server/http/HttpRequest;
     106: invokestatic  #79                 // Method net/officefloor/web/security/scheme/HttpAuthenticationScheme.getHttpAuthenticationScheme:(Lnet/officefloor/server/http/HttpRequest;)Lnet/officefloor/web/security/scheme/HttpAuthenticationScheme;
     109: astore        4
     111: aload         4
     113: invokevirtual #100                // Method net/officefloor/web/security/scheme/HttpAuthenticationScheme.getParameters:()Ljava/lang/String;
     116: astore        5
     118: aload         5
     120: ldc           #101                // String \\.
     122: invokevirtual #102                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
     125: astore        6
     127: aload         6
     129: arraylength
     130: iconst_3
     131: if_icmpeq     143
     134: aload_0
     135: getstatic     #103                // Field net/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason.INVALID_JWT:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason;
     138: aload_2
     139: invokespecial #104                // Method challenge:(Lnet/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason;Lnet/officefloor/web/spi/security/AuthenticateContext;)V
     142: return
     143: aload         6
     145: iconst_0
     146: aaload
     147: astore        7
     149: aload         6
     151: iconst_1
     152: aaload
     153: astore        8
     155: aload         6
     157: iconst_2
     158: aaload
     159: astore        9
     161: aload_0
     162: getfield      #4                  // Field base64UrlDecoder:Lio/jsonwebtoken/io/Decoder;
     165: aload         8
     167: invokeinterface #105,  2          // InterfaceMethod io/jsonwebtoken/io/Decoder.decode:(Ljava/lang/Object;)Ljava/lang/Object;
     172: checkcast     #106                // class "[B"
     175: astore        10
     177: getstatic     #33                 // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
     180: aload         10
     182: getstatic     #107                // Field jwtClaimsJavaType:Lcom/fasterxml/jackson/databind/JavaType;
     185: invokevirtual #108                // Method com/fasterxml/jackson/databind/ObjectMapper.readValue:([BLcom/fasterxml/jackson/databind/JavaType;)Ljava/lang/Object;
     188: checkcast     #109                // class net/officefloor/web/jwt/JwtHttpSecuritySource$JwtClaims
     191: astore        11
     193: goto          207
     196: astore        12
     198: aload_0
     199: getstatic     #103                // Field net/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason.INVALID_JWT:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason;
     202: aload_2
     203: invokespecial #104                // Method challenge:(Lnet/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason;Lnet/officefloor/web/spi/security/AuthenticateContext;)V
     206: return
     207: aload_0
     208: getfield      #18                 // Field clock:Lnet/officefloor/frame/api/clock/Clock;
     211: invokeinterface #110,  1          // InterfaceMethod net/officefloor/frame/api/clock/Clock.getTime:()Ljava/lang/Object;
     216: checkcast     #111                // class java/lang/Long
     219: invokevirtual #112                // Method java/lang/Long.longValue:()J
     222: lstore        12
     224: aload         11
     226: invokestatic  #113                // Method net/officefloor/web/jwt/JwtHttpSecuritySource$JwtClaims.access$200:(Lnet/officefloor/web/jwt/JwtHttpSecuritySource$JwtClaims;)Ljava/lang/Long;
     229: ifnull        260
     232: aload         11
     234: invokestatic  #113                // Method net/officefloor/web/jwt/JwtHttpSecuritySource$JwtClaims.access$200:(Lnet/officefloor/web/jwt/JwtHttpSecuritySource$JwtClaims;)Ljava/lang/Long;
     237: invokevirtual #112                // Method java/lang/Long.longValue:()J
     240: lload         12
     242: aload_0
     243: getfield      #25                 // Field clockSkew:J
     246: ladd
     247: lcmp
     248: ifle          260
     251: aload_0
     252: getstatic     #103                // Field net/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason.INVALID_JWT:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason;
     255: aload_2
     256: invokespecial #104                // Method challenge:(Lnet/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason;Lnet/officefloor/web/spi/security/AuthenticateContext;)V
     259: return
     260: aload         11
     262: invokestatic  #114                // Method net/officefloor/web/jwt/JwtHttpSecuritySource$JwtClaims.access$300:(Lnet/officefloor/web/jwt/JwtHttpSecuritySource$JwtClaims;)Ljava/lang/Long;
     265: ifnull        296
     268: aload         11
     270: invokestatic  #114                // Method net/officefloor/web/jwt/JwtHttpSecuritySource$JwtClaims.access$300:(Lnet/officefloor/web/jwt/JwtHttpSecuritySource$JwtClaims;)Ljava/lang/Long;
     273: invokevirtual #112                // Method java/lang/Long.longValue:()J
     276: lload         12
     278: aload_0
     279: getfield      #25                 // Field clockSkew:J
     282: lsub
     283: lcmp
     284: ifge          296
     287: aload_0
     288: getstatic     #115                // Field net/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason.EXPIRED_JWT:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason;
     291: aload_2
     292: invokespecial #104                // Method challenge:(Lnet/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason;Lnet/officefloor/web/spi/security/AuthenticateContext;)V
     295: return
     296: aload_0
     297: getfield      #4                  // Field base64UrlDecoder:Lio/jsonwebtoken/io/Decoder;
     300: aload         7
     302: invokeinterface #105,  2          // InterfaceMethod io/jsonwebtoken/io/Decoder.decode:(Ljava/lang/Object;)Ljava/lang/Object;
     307: checkcast     #106                // class "[B"
     310: astore        14
     312: getstatic     #33                 // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
     315: aload         14
     317: getstatic     #116                // Field jwtHeaderJavaType:Lcom/fasterxml/jackson/databind/JavaType;
     320: invokevirtual #108                // Method com/fasterxml/jackson/databind/ObjectMapper.readValue:([BLcom/fasterxml/jackson/databind/JavaType;)Ljava/lang/Object;
     323: checkcast     #117                // class net/officefloor/web/jwt/JwtHttpSecuritySource$JwtHeader
     326: astore        15
     328: goto          342
     331: astore        16
     333: aload_0
     334: getstatic     #103                // Field net/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason.INVALID_JWT:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason;
     337: aload_2
     338: invokespecial #104                // Method challenge:(Lnet/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason;Lnet/officefloor/web/spi/security/AuthenticateContext;)V
     341: return
     342: aload         15
     344: invokestatic  #118                // Method net/officefloor/web/jwt/JwtHttpSecuritySource$JwtHeader.access$400:(Lnet/officefloor/web/jwt/JwtHttpSecuritySource$JwtHeader;)Ljava/lang/String;
     347: ifnonnull     359
     350: aload_0
     351: getstatic     #103                // Field net/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason.INVALID_JWT:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason;
     354: aload_2
     355: invokespecial #104                // Method challenge:(Lnet/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason;Lnet/officefloor/web/spi/security/AuthenticateContext;)V
     358: return
     359: aload         15
     361: invokestatic  #118                // Method net/officefloor/web/jwt/JwtHttpSecuritySource$JwtHeader.access$400:(Lnet/officefloor/web/jwt/JwtHttpSecuritySource$JwtHeader;)Ljava/lang/String;
     364: invokestatic  #119                // Method io/jsonwebtoken/SignatureAlgorithm.valueOf:(Ljava/lang/String;)Lio/jsonwebtoken/SignatureAlgorithm;
     367: astore        16
     369: aload         16
     371: ifnull        382
     374: aload         16
     376: getstatic     #120                // Field io/jsonwebtoken/SignatureAlgorithm.NONE:Lio/jsonwebtoken/SignatureAlgorithm;
     379: if_acmpne     391
     382: aload_0
     383: getstatic     #103                // Field net/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason.INVALID_JWT:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason;
     386: aload_2
     387: invokespecial #104                // Method challenge:(Lnet/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason;Lnet/officefloor/web/spi/security/AuthenticateContext;)V
     390: return
     391: aload         5
     393: iconst_0
     394: aload         7
     396: invokevirtual #121                // Method java/lang/String.length:()I
     399: ldc           #122                // String .
     401: invokevirtual #121                // Method java/lang/String.length:()I
     404: iadd
     405: aload         8
     407: invokevirtual #121                // Method java/lang/String.length:()I
     410: iadd
     411: invokevirtual #123                // Method java/lang/String.substring:(II)Ljava/lang/String;
     414: astore        17
     416: iconst_0
     417: istore        18
     419: aload_3
     420: astore        19
     422: aload         19
     424: arraylength
     425: istore        20
     427: iconst_0
     428: istore        21
     430: iload         21
     432: iload         20
     434: if_icmpge     528
     437: aload         19
     439: iload         21
     441: aaload
     442: astore        22
     444: aload         22
     446: invokevirtual #124                // Method net/officefloor/web/jwt/validate/JwtValidateKey.getStartTime:()J
     449: lload         12
     451: aload_0
     452: getfield      #25                 // Field clockSkew:J
     455: ladd
     456: lcmp
     457: ifgt          522
     460: aload         22
     462: invokevirtual #125                // Method net/officefloor/web/jwt/validate/JwtValidateKey.getExpireTime:()J
     465: lload         12
     467: aload_0
     468: getfield      #25                 // Field clockSkew:J
     471: lsub
     472: lcmp
     473: ifge          479
     476: goto          522
     479: new           #126                // class io/jsonwebtoken/impl/crypto/DefaultJwtSignatureValidator
     482: dup
     483: aload         16
     485: aload         22
     487: invokevirtual #127                // Method net/officefloor/web/jwt/validate/JwtValidateKey.getKey:()Ljava/security/Key;
     490: aload_0
     491: getfield      #4                  // Field base64UrlDecoder:Lio/jsonwebtoken/io/Decoder;
     494: invokespecial #128                // Method io/jsonwebtoken/impl/crypto/DefaultJwtSignatureValidator."<init>":(Lio/jsonwebtoken/SignatureAlgorithm;Ljava/security/Key;Lio/jsonwebtoken/io/Decoder;)V
     497: astore        23
     499: aload         23
     501: aload         17
     503: aload         9
     505: invokevirtual #129                // Method io/jsonwebtoken/impl/crypto/DefaultJwtSignatureValidator.isValid:(Ljava/lang/String;Ljava/lang/String;)Z
     508: ifeq          517
     511: iconst_1
     512: istore        18
     514: goto          528
     517: goto          522
     520: astore        24
     522: iinc          21, 1
     525: goto          430
     528: iload         18
     530: ifne          542
     533: aload_0
     534: getstatic     #103                // Field net/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason.INVALID_JWT:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason;
     537: aload_2
     538: invokespecial #104                // Method challenge:(Lnet/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason;Lnet/officefloor/web/spi/security/AuthenticateContext;)V
     541: return
     542: getstatic     #33                 // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
     545: aload         10
     547: aload_0
     548: getfield      #35                 // Field claimsJavaType:Lcom/fasterxml/jackson/databind/JavaType;
     551: invokevirtual #108                // Method com/fasterxml/jackson/databind/ObjectMapper.readValue:([BLcom/fasterxml/jackson/databind/JavaType;)Ljava/lang/Object;
     554: astore        19
     556: goto          570
     559: astore        20
     561: aload_0
     562: getstatic     #103                // Field net/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason.INVALID_JWT:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason;
     565: aload_2
     566: invokespecial #104                // Method challenge:(Lnet/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason;Lnet/officefloor/web/spi/security/AuthenticateContext;)V
     569: return
     570: aload         4
     572: invokevirtual #81                 // Method net/officefloor/web/security/scheme/HttpAuthenticationScheme.getAuthentiationScheme:()Ljava/lang/String;
     575: astore        20
     577: aload         11
     579: invokestatic  #130                // Method net/officefloor/web/jwt/JwtHttpSecuritySource$JwtClaims.access$500:(Lnet/officefloor/web/jwt/JwtHttpSecuritySource$JwtClaims;)Ljava/lang/String;
     582: astore        21
     584: new           #131                // class net/officefloor/web/jwt/JwtHttpSecuritySource$JwtRoleCollectorImpl
     587: dup
     588: aload_0
     589: aload         19
     591: aload         20
     593: aload         21
     595: aload_2
     596: aconst_null
     597: invokespecial #132                // Method net/officefloor/web/jwt/JwtHttpSecuritySource$JwtRoleCollectorImpl."<init>":(Lnet/officefloor/web/jwt/JwtHttpSecuritySource;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;Lnet/officefloor/web/spi/security/AuthenticateContext;Lnet/officefloor/web/jwt/JwtHttpSecuritySource$1;)V
     600: astore        22
     602: aload_2
     603: getstatic     #56                 // Field net/officefloor/web/jwt/JwtHttpSecuritySource$Flows.RETRIEVE_ROLES:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$Flows;
     606: aload         22
     608: aload         22
     610: invokeinterface #133,  4          // InterfaceMethod net/officefloor/web/spi/security/AuthenticateContext.doFlow:(Ljava/lang/Enum;Ljava/lang/Object;Lnet/officefloor/frame/api/function/FlowCallback;)V
     615: return
    Exception table:
       from    to  target type
           7    20    23   Class java/lang/Exception
          45    63    66   Class java/util/concurrent/TimeoutException
         177   193   196   Class java/io/IOException
         312   328   331   Class java/io/IOException
         499   514   520   Class java/lang/Exception
         542   556   559   Class java/io/IOException

  private void challenge(net.officefloor.web.jwt.JwtHttpSecuritySource$ChallengeReason, net.officefloor.web.spi.security.AuthenticateContext<net.officefloor.web.jwt.JwtHttpAccessControl<C>, net.officefloor.frame.api.build.None, net.officefloor.web.jwt.JwtHttpSecuritySource$Flows>);
    Code:
       0: aload_2
       1: invokeinterface #134,  1          // InterfaceMethod net/officefloor/web/spi/security/AuthenticateContext.getRequestState:()Lnet/officefloor/web/state/HttpRequestState;
       6: aload_2
       7: ldc           #84                 // String challenge.reason
       9: invokeinterface #135,  2          // InterfaceMethod net/officefloor/web/spi/security/AuthenticateContext.getQualifiedAttributeName:(Ljava/lang/String;)Ljava/lang/String;
      14: aload_1
      15: invokeinterface #87,  3           // InterfaceMethod net/officefloor/web/state/HttpRequestState.setAttribute:(Ljava/lang/String;Ljava/io/Serializable;)V
      20: return

  public void challenge(net.officefloor.web.spi.security.ChallengeContext<net.officefloor.frame.api.build.None, net.officefloor.web.jwt.JwtHttpSecuritySource$Flows>) throws net.officefloor.server.http.HttpException;
    Code:
       0: aload_1
       1: invokeinterface #136,  1          // InterfaceMethod net/officefloor/web/spi/security/ChallengeContext.getConnection:()Lnet/officefloor/server/http/ServerHttpConnection;
       6: invokeinterface #137,  1          // InterfaceMethod net/officefloor/server/http/ServerHttpConnection.getResponse:()Lnet/officefloor/server/http/HttpResponse;
      11: astore_2
      12: aload_2
      13: getstatic     #138                // Field net/officefloor/server/http/HttpStatus.UNAUTHORIZED:Lnet/officefloor/server/http/HttpStatus;
      16: invokeinterface #139,  2          // InterfaceMethod net/officefloor/server/http/HttpResponse.setStatus:(Lnet/officefloor/server/http/HttpStatus;)V
      21: aload_1
      22: invokeinterface #140,  1          // InterfaceMethod net/officefloor/web/spi/security/ChallengeContext.getRequestState:()Lnet/officefloor/web/state/HttpRequestState;
      27: aload_1
      28: ldc           #84                 // String challenge.reason
      30: invokeinterface #141,  2          // InterfaceMethod net/officefloor/web/spi/security/ChallengeContext.getQualifiedAttributeName:(Ljava/lang/String;)Ljava/lang/String;
      35: invokeinterface #142,  2          // InterfaceMethod net/officefloor/web/state/HttpRequestState.getAttribute:(Ljava/lang/String;)Ljava/io/Serializable;
      40: checkcast     #143                // class net/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason
      43: astore_3
      44: getstatic     #144                // Field net/officefloor/web/jwt/JwtHttpSecuritySource$1.$SwitchMap$net$officefloor$web$jwt$JwtHttpSecuritySource$ChallengeReason:[I
      47: aload_3
      48: invokevirtual #145                // Method net/officefloor/web/jwt/JwtHttpSecuritySource$ChallengeReason.ordinal:()I
      51: iaload
      52: tableswitch   { // 1 to 3
                     1: 80
                     2: 94
                     3: 108
               default: 119
          }
      80: aload_1
      81: getstatic     #58                 // Field net/officefloor/web/jwt/JwtHttpSecuritySource$Flows.NO_JWT:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$Flows;
      84: aconst_null
      85: aconst_null
      86: invokeinterface #146,  4          // InterfaceMethod net/officefloor/web/spi/security/ChallengeContext.doFlow:(Ljava/lang/Enum;Ljava/lang/Object;Lnet/officefloor/frame/api/function/FlowCallback;)V
      91: goto          119
      94: aload_1
      95: getstatic     #59                 // Field net/officefloor/web/jwt/JwtHttpSecuritySource$Flows.INVALID_JWT:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$Flows;
      98: aconst_null
      99: aconst_null
     100: invokeinterface #146,  4          // InterfaceMethod net/officefloor/web/spi/security/ChallengeContext.doFlow:(Ljava/lang/Enum;Ljava/lang/Object;Lnet/officefloor/frame/api/function/FlowCallback;)V
     105: goto          119
     108: aload_1
     109: getstatic     #60                 // Field net/officefloor/web/jwt/JwtHttpSecuritySource$Flows.EXPIRED_JWT:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$Flows;
     112: aconst_null
     113: aconst_null
     114: invokeinterface #146,  4          // InterfaceMethod net/officefloor/web/spi/security/ChallengeContext.doFlow:(Ljava/lang/Enum;Ljava/lang/Object;Lnet/officefloor/frame/api/function/FlowCallback;)V
     119: return

  public void logout(net.officefloor.web.spi.security.LogoutContext<net.officefloor.frame.api.build.None, net.officefloor.web.jwt.JwtHttpSecuritySource$Flows>) throws net.officefloor.server.http.HttpException;
    Code:
       0: return

  public void authenticate(java.lang.Object, net.officefloor.web.spi.security.AuthenticateContext) throws net.officefloor.server.http.HttpException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #147                // class java/lang/Void
       5: aload_2
       6: invokevirtual #148                // Method authenticate:(Ljava/lang/Void;Lnet/officefloor/web/spi/security/AuthenticateContext;)V
       9: return

  public boolean ratify(java.lang.Object, net.officefloor.web.spi.security.RatifyContext);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #147                // class java/lang/Void
       5: aload_2
       6: invokevirtual #149                // Method ratify:(Ljava/lang/Void;Lnet/officefloor/web/spi/security/RatifyContext;)Z
       9: ireturn

  public java.lang.Object createAuthentication(net.officefloor.web.spi.security.AuthenticationContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #150                // Method createAuthentication:(Lnet/officefloor/web/spi/security/AuthenticationContext;)Lnet/officefloor/web/security/HttpAuthentication;
       5: areturn

  private void lambda$start$3(net.officefloor.web.spi.security.HttpSecurityExecuteContext, long, net.officefloor.plugin.managedobject.poll.StatePollContext, net.officefloor.frame.api.function.FlowCallback);
    Code:
       0: aload_1
       1: getstatic     #53                 // Field net/officefloor/web/jwt/JwtHttpSecuritySource$Flows.RETRIEVE_KEYS:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$Flows;
       4: new           #151                // class net/officefloor/web/jwt/JwtHttpSecuritySource$JwtValidateKeyCollectorImpl
       7: dup
       8: aload_0
       9: aload         4
      11: aconst_null
      12: invokespecial #152                // Method net/officefloor/web/jwt/JwtHttpSecuritySource$JwtValidateKeyCollectorImpl."<init>":(Lnet/officefloor/web/jwt/JwtHttpSecuritySource;Lnet/officefloor/plugin/managedobject/poll/StatePollContext;Lnet/officefloor/web/jwt/JwtHttpSecuritySource$1;)V
      15: lload_2
      16: aload         5
      18: invokeinterface #153,  6          // InterfaceMethod net/officefloor/web/spi/security/HttpSecurityExecuteContext.invokeProcess:(Ljava/lang/Enum;Ljava/lang/Object;JLnet/officefloor/frame/api/function/FlowCallback;)Lnet/officefloor/frame/api/manage/ProcessManager;
      23: pop
      24: return

  private void lambda$start$2(net.officefloor.web.spi.security.HttpSecurityExecuteContext, net.officefloor.plugin.managedobject.poll.StatePollContext, net.officefloor.frame.api.function.FlowCallback);
    Code:
       0: aload_1
       1: getstatic     #53                 // Field net/officefloor/web/jwt/JwtHttpSecuritySource$Flows.RETRIEVE_KEYS:Lnet/officefloor/web/jwt/JwtHttpSecuritySource$Flows;
       4: new           #151                // class net/officefloor/web/jwt/JwtHttpSecuritySource$JwtValidateKeyCollectorImpl
       7: dup
       8: aload_0
       9: aload_2
      10: aconst_null
      11: invokespecial #152                // Method net/officefloor/web/jwt/JwtHttpSecuritySource$JwtValidateKeyCollectorImpl."<init>":(Lnet/officefloor/web/jwt/JwtHttpSecuritySource;Lnet/officefloor/plugin/managedobject/poll/StatePollContext;Lnet/officefloor/web/jwt/JwtHttpSecuritySource$1;)V
      14: aload_3
      15: invokeinterface #154,  4          // InterfaceMethod net/officefloor/web/spi/security/HttpSecurityExecuteContext.registerStartupProcess:(Ljava/lang/Enum;Ljava/lang/Object;Lnet/officefloor/frame/api/function/FlowCallback;)Lnet/officefloor/frame/api/managedobject/source/ManagedObjectStartupProcess;
      20: astore        4
      22: aload         4
      24: iconst_1
      25: invokeinterface #155,  2          // InterfaceMethod net/officefloor/frame/api/managedobject/source/ManagedObjectStartupProcess.setConcurrent:(Z)V
      30: return

  private static java.lang.Long lambda$loadMetaData$1(java.lang.Long);
    Code:
       0: aload_0
       1: areturn

  private static byte[] lambda$new$0(java.lang.String) throws io.jsonwebtoken.io.DecodingException;
    Code:
       0: invokestatic  #156                // Method java/util/Base64.getUrlDecoder:()Ljava/util/Base64$Decoder;
       3: aload_0
       4: invokevirtual #157                // Method java/util/Base64$Decoder.decode:(Ljava/lang/String;)[B
       7: areturn

  static net.officefloor.plugin.managedobject.poll.StatePoller access$700(net.officefloor.web.jwt.JwtHttpSecuritySource);
    Code:
       0: aload_0
       1: getfield      #1                  // Field jwtValidateKeys:Lnet/officefloor/plugin/managedobject/poll/StatePoller;
       4: areturn

  static {};
    Code:
       0: new           #158                // class java/lang/ThreadLocal
       3: dup
       4: invokespecial #159                // Method java/lang/ThreadLocal."<init>":()V
       7: putstatic     #5                  // Field threadLocalKeysOverride:Ljava/lang/ThreadLocal;
      10: new           #160                // class com/fasterxml/jackson/databind/ObjectMapper
      13: dup
      14: invokespecial #161                // Method com/fasterxml/jackson/databind/ObjectMapper."<init>":()V
      17: putstatic     #33                 // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      20: getstatic     #33                 // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      23: ldc           #109                // class net/officefloor/web/jwt/JwtHttpSecuritySource$JwtClaims
      25: invokevirtual #34                 // Method com/fasterxml/jackson/databind/ObjectMapper.constructType:(Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JavaType;
      28: putstatic     #107                // Field jwtClaimsJavaType:Lcom/fasterxml/jackson/databind/JavaType;
      31: getstatic     #33                 // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      34: ldc           #117                // class net/officefloor/web/jwt/JwtHttpSecuritySource$JwtHeader
      36: invokevirtual #34                 // Method com/fasterxml/jackson/databind/ObjectMapper.constructType:(Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JavaType;
      39: putstatic     #116                // Field jwtHeaderJavaType:Lcom/fasterxml/jackson/databind/JavaType;
      42: getstatic     #33                 // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      45: getstatic     #107                // Field jwtClaimsJavaType:Lcom/fasterxml/jackson/databind/JavaType;
      48: invokevirtual #36                 // Method com/fasterxml/jackson/databind/ObjectMapper.canDeserialize:(Lcom/fasterxml/jackson/databind/JavaType;)Z
      51: ifne          85
      54: new           #162                // class java/lang/IllegalStateException
      57: dup
      58: new           #38                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #163                // String Unable to deserialize
      67: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: ldc           #109                // class net/officefloor/web/jwt/JwtHttpSecuritySource$JwtClaims
      72: invokevirtual #164                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      75: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokespecial #165                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: getstatic     #33                 // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      88: getstatic     #116                // Field jwtHeaderJavaType:Lcom/fasterxml/jackson/databind/JavaType;
      91: invokevirtual #36                 // Method com/fasterxml/jackson/databind/ObjectMapper.canDeserialize:(Lcom/fasterxml/jackson/databind/JavaType;)Z
      94: ifne          128
      97: new           #162                // class java/lang/IllegalStateException
     100: dup
     101: new           #38                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #163                // String Unable to deserialize
     110: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: ldc           #117                // class net/officefloor/web/jwt/JwtHttpSecuritySource$JwtHeader
     115: invokevirtual #164                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
     118: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     124: invokespecial #165                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     127: athrow
     128: getstatic     #33                 // Field mapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
     131: getstatic     #166                // Field com/fasterxml/jackson/databind/DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES:Lcom/fasterxml/jackson/databind/DeserializationFeature;
     134: iconst_0
     135: invokevirtual #167                // Method com/fasterxml/jackson/databind/ObjectMapper.configure:(Lcom/fasterxml/jackson/databind/DeserializationFeature;Z)Lcom/fasterxml/jackson/databind/ObjectMapper;
     138: pop
     139: return
}
