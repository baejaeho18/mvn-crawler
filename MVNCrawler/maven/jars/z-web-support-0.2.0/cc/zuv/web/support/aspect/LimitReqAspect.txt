Compiled from "LimitReqAspect.java"
public abstract class cc.zuv.web.support.aspect.LimitReqAspect {
  private static final org.slf4j.Logger log;

  public cc.zuv.web.support.aspect.LimitReqAspect();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void logPointCut();
    Code:
       0: return

  public java.lang.Object around(org.aspectj.lang.ProceedingJoinPoint) throws java.lang.Throwable;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: aload_1
       4: invokespecial #2                  // Method checkLimited:(Lorg/aspectj/lang/ProceedingJoinPoint;)Z
       7: ifeq          17
      10: aload_1
      11: invokeinterface #3,  1            // InterfaceMethod org/aspectj/lang/ProceedingJoinPoint.proceed:()Ljava/lang/Object;
      16: astore_2
      17: aload_2
      18: areturn

  private boolean checkLimited(org.aspectj.lang.ProceedingJoinPoint);
    Code:
       0: invokestatic  #4                  // Method org/springframework/web/context/request/RequestContextHolder.getRequestAttributes:()Lorg/springframework/web/context/request/RequestAttributes;
       3: checkcast     #5                  // class org/springframework/web/context/request/ServletRequestAttributes
       6: astore_2
       7: aload_2
       8: invokevirtual #6                  // Method org/springframework/web/context/request/ServletRequestAttributes.getRequest:()Ljavax/servlet/http/HttpServletRequest;
      11: astore_3
      12: aload_1
      13: invokeinterface #7,  1            // InterfaceMethod org/aspectj/lang/ProceedingJoinPoint.getSignature:()Lorg/aspectj/lang/Signature;
      18: checkcast     #8                  // class org/aspectj/lang/reflect/MethodSignature
      21: astore        4
      23: aload         4
      25: invokeinterface #9,  1            // InterfaceMethod org/aspectj/lang/reflect/MethodSignature.getMethod:()Ljava/lang/reflect/Method;
      30: astore        5
      32: aload         5
      34: ldc           #10                 // class cc/zuv/web/support/annotation/LimitedRequest
      36: invokevirtual #11                 // Method java/lang/reflect/Method.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      39: checkcast     #10                 // class cc/zuv/web/support/annotation/LimitedRequest
      42: astore        6
      44: aload         6
      46: ifnonnull     51
      49: iconst_1
      50: ireturn
      51: aload         6
      53: invokeinterface #12,  1           // InterfaceMethod cc/zuv/web/support/annotation/LimitedRequest.interval:()J
      58: lstore        7
      60: aload_1
      61: invokeinterface #13,  1           // InterfaceMethod org/aspectj/lang/ProceedingJoinPoint.getTarget:()Ljava/lang/Object;
      66: invokevirtual #14                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      69: invokevirtual #15                 // Method java/lang/Class.getName:()Ljava/lang/String;
      72: astore        9
      74: aload         4
      76: invokeinterface #16,  1           // InterfaceMethod org/aspectj/lang/reflect/MethodSignature.getName:()Ljava/lang/String;
      81: astore        10
      83: new           #17                 // class java/lang/StringBuilder
      86: dup
      87: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      90: aload         9
      92: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: ldc           #20                 // String .
      97: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: aload         10
     102: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: ldc           #21                 // String ()
     107: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: astore        11
     115: aconst_null
     116: astore        12
     118: aload_3
     119: invokeinterface #23,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getContentType:()Ljava/lang/String;
     124: ifnull        155
     127: ldc           #25                 // String application/x-www-form-urlencoded
     129: aload_3
     130: invokeinterface #23,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getContentType:()Ljava/lang/String;
     135: invokevirtual #26                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     138: ifne          155
     141: ldc           #27                 // String application/json;charset=UTF-8
     143: aload_3
     144: invokeinterface #23,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getContentType:()Ljava/lang/String;
     149: invokevirtual #26                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     152: ifeq          188
     155: aload_1
     156: invokeinterface #28,  1           // InterfaceMethod org/aspectj/lang/ProceedingJoinPoint.getArgs:()[Ljava/lang/Object;
     161: astore        13
     163: aload         13
     165: ifnull        188
     168: aload         13
     170: arraylength
     171: ifle          188
     174: new           #29                 // class com/google/gson/Gson
     177: dup
     178: invokespecial #30                 // Method com/google/gson/Gson."<init>":()V
     181: aload         13
     183: invokevirtual #31                 // Method com/google/gson/Gson.toJson:(Ljava/lang/Object;)Ljava/lang/String;
     186: astore        12
     188: aload_3
     189: invokeinterface #32,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRemoteHost:()Ljava/lang/String;
     194: astore        13
     196: aload_3
     197: invokeinterface #33,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRequestURI:()Ljava/lang/String;
     202: astore        14
     204: aload_3
     205: invokeinterface #34,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getMethod:()Ljava/lang/String;
     210: astore        15
     212: aload_0
     213: lload         7
     215: aload         11
     217: aload         12
     219: aload         13
     221: aload         14
     223: aload         15
     225: invokevirtual #35                 // Method checkLimited:(JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
     228: ireturn

  protected abstract boolean checkLimited(long, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  static {};
    Code:
       0: ldc           #36                 // class cc/zuv/web/support/aspect/LimitReqAspect
       2: invokestatic  #37                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #38                 // Field log:Lorg/slf4j/Logger;
       8: return
}
