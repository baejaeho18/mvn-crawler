Compiled from "TLVUtils.java"
public final class pro.javacard.gp.TLVUtils {
  public pro.javacard.gp.TLVUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static int skipTag(byte[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: iload_2
       4: if_icmpne     10
       7: iinc          1, 1
      10: iload_1
      11: ireturn

  static int skip_tag_or_throw(byte[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #2                  // Method skipTag:([BII)I
       6: istore_3
       7: iload_3
       8: iload_1
       9: if_icmpne     56
      12: new           #3                  // class java/lang/RuntimeException
      15: dup
      16: new           #4                  // class java/lang/StringBuilder
      19: dup
      20: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #6                  // String Expected tag
      25: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: iload_2
      29: invokestatic  #8                  // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      32: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #9                  // String  but had
      37: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: iload_1
      42: baload
      43: invokestatic  #8                  // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      46: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #11                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: iload_3
      57: ireturn

  static int get_length(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: sipush        255
       6: iand
       7: ireturn

  static int skipLength(byte[], int);
    Code:
       0: iload_1
       1: iconst_1
       2: iadd
       3: ireturn

  static int get_byte_value(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: sipush        255
       6: iand
       7: ireturn

  static int expectTag(byte[], int, byte);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: iload_2
       4: if_icmpne     10
       7: iinc          1, 1
      10: iload_1
      11: ireturn

  static int skipTagAndLength(byte[], int, byte);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #12                 // Method expectTag:([BIB)I
       6: istore_1
       7: aload_0
       8: iload_1
       9: invokestatic  #13                 // Method skipLength:([BI)I
      12: istore_1
      13: iload_1
      14: ireturn

  static int getTagLength(byte[], int);
    Code:
       0: iinc          1, 1
       3: aload_0
       4: iload_1
       5: invokestatic  #14                 // Method getLength:([BI)I
       8: ireturn

  static int getTLVTag(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: sipush        255
       6: iand
       7: ireturn

  static java.lang.String getTLVValueAsHex(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #15                 // Method getTagLength:([BI)I
       5: istore_2
       6: aload_0
       7: iload_1
       8: iconst_2
       9: iadd
      10: iload_1
      11: iconst_2
      12: iadd
      13: iload_2
      14: iadd
      15: invokestatic  #16                 // Method java/util/Arrays.copyOfRange:([BII)[B
      18: invokestatic  #17                 // Method apdu4j/HexUtils.bin2hex:([B)Ljava/lang/String;
      21: areturn

  static byte[] getTLVValueAsBytes(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #15                 // Method getTagLength:([BI)I
       5: istore_2
       6: aload_0
       7: iload_1
       8: iconst_2
       9: iadd
      10: iload_1
      11: iconst_2
      12: iadd
      13: iload_2
      14: iadd
      15: invokestatic  #16                 // Method java/util/Arrays.copyOfRange:([BII)[B
      18: areturn

  static byte[] getTLVAsBytes(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #15                 // Method getTagLength:([BI)I
       5: istore_2
       6: aload_0
       7: iload_1
       8: iload_1
       9: iconst_2
      10: iadd
      11: iload_2
      12: iadd
      13: invokestatic  #16                 // Method java/util/Arrays.copyOfRange:([BII)[B
      16: areturn

  static int getTLVValueOffset(byte[], int);
    Code:
       0: iload_1
       1: iconst_2
       2: iadd
       3: ireturn

  static int getTagLength(byte[], int, byte);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #12                 // Method expectTag:([BIB)I
       6: istore_1
       7: aload_0
       8: iload_1
       9: invokestatic  #13                 // Method skipLength:([BI)I
      12: istore_1
      13: iload_1
      14: ireturn

  static int getLength(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: sipush        255
       6: iand
       7: ireturn

  static int skipAnyTag(byte[], int);
    Code:
       0: iinc          1, 1
       3: iload_1
       4: aload_0
       5: iload_1
       6: invokestatic  #14                 // Method getLength:([BI)I
       9: iadd
      10: iconst_1
      11: iadd
      12: ireturn

  static int findTag(byte[], int, byte);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: iload_2
       4: if_icmpne     9
       7: iload_1
       8: ireturn
       9: aload_0
      10: iload_1
      11: invokestatic  #18                 // Method skipAnyTag:([BI)I
      14: istore_1
      15: goto          0

  static int findTag(byte[], int, short);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #19                 // Method getShort:([BI)S
       5: iload_2
       6: if_icmpne     11
       9: iload_1
      10: ireturn
      11: aload_0
      12: iload_1
      13: invokestatic  #18                 // Method skipAnyTag:([BI)I
      16: istore_1
      17: goto          0

  public static final short getShort(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: bipush        8
       5: ishl
       6: aload_0
       7: iload_1
       8: iconst_1
       9: iadd
      10: baload
      11: sipush        255
      14: iand
      15: iadd
      16: i2s
      17: ireturn

  static void buffer_increment(byte[], int, int);
    Code:
       0: iload_2
       1: iconst_1
       2: if_icmpge     6
       5: return
       6: iload_1
       7: iload_2
       8: iadd
       9: iconst_1
      10: isub
      11: istore_3
      12: iload_3
      13: iload_1
      14: if_icmplt     45
      17: aload_0
      18: iload_3
      19: baload
      20: iconst_m1
      21: if_icmpeq     35
      24: aload_0
      25: iload_3
      26: dup2
      27: baload
      28: iconst_1
      29: iadd
      30: i2b
      31: bastore
      32: goto          45
      35: aload_0
      36: iload_3
      37: iconst_0
      38: bastore
      39: iinc          3, -1
      42: goto          12
      45: return
}
