Compiled from "XRayMock.scala"
public final class zio.aws.xray.XRayMock$$anon$2 implements zio.aws.xray.XRay {
  private final zio.mock.Proxy proxy$2;

  private final zio.Runtime rts$2;

  private final software.amazon.awssdk.services.xray.XRayAsyncClient api;

  public zio.aws.xray.XRayMock$$anon$2(zio.mock.Proxy, zio.Runtime);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       5: aload_0
       6: aload_2
       7: putfield      #150                // Field rts$2:Lzio/Runtime;
      10: aload_0
      11: invokespecial #153                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: aconst_null
      16: putfield      #155                // Field api:Lsoftware/amazon/awssdk/services/xray/XRayAsyncClient;
      19: return

  public software.amazon.awssdk.services.xray.XRayAsyncClient api();
    Code:
       0: aload_0
       1: getfield      #155                // Field api:Lsoftware/amazon/awssdk/services/xray/XRayAsyncClient;
       4: areturn

  public zio.aws.xray.XRay withAspect(zio.ZIOAspect, zio.ZEnvironment);
    Code:
       0: aload_0
       1: areturn

  public zio.stream.ZStream getInsightEvents(zio.aws.xray.model.GetInsightEventsRequest);
    Code:
       0: getstatic     #173                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       3: aload_0
       4: aload_1
       5: invokedynamic #195,  0            // InvokeDynamic #0:apply:(Lzio/aws/xray/XRayMock$$anon$2;Lzio/aws/xray/model/GetInsightEventsRequest;)Lscala/Function1;
      10: invokevirtual #199                // Method zio/Unsafe$.unsafe:(Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #201                // class zio/stream/ZStream
      16: areturn

  public zio.ZIO getInsightEventsPaginated(zio.aws.xray.model.GetInsightEventsRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #207                // Field zio/aws/xray/XRayMock$GetInsightEventsPaginated$.MODULE$:Lzio/aws/xray/XRayMock$GetInsightEventsPaginated$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO getServiceGraph(zio.aws.xray.model.GetServiceGraphRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #217                // Field zio/aws/xray/XRayMock$GetServiceGraph$.MODULE$:Lzio/aws/xray/XRayMock$GetServiceGraph$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO getServiceGraphPaginated(zio.aws.xray.model.GetServiceGraphRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #222                // Field zio/aws/xray/XRayMock$GetServiceGraphPaginated$.MODULE$:Lzio/aws/xray/XRayMock$GetServiceGraphPaginated$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream batchGetTraces(zio.aws.xray.model.BatchGetTracesRequest);
    Code:
       0: getstatic     #173                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       3: aload_0
       4: aload_1
       5: invokedynamic #232,  0            // InvokeDynamic #1:apply:(Lzio/aws/xray/XRayMock$$anon$2;Lzio/aws/xray/model/BatchGetTracesRequest;)Lscala/Function1;
      10: invokevirtual #199                // Method zio/Unsafe$.unsafe:(Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #201                // class zio/stream/ZStream
      16: areturn

  public zio.ZIO batchGetTracesPaginated(zio.aws.xray.model.BatchGetTracesRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #238                // Field zio/aws/xray/XRayMock$BatchGetTracesPaginated$.MODULE$:Lzio/aws/xray/XRayMock$BatchGetTracesPaginated$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO getTimeSeriesServiceStatistics(zio.aws.xray.model.GetTimeSeriesServiceStatisticsRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #243                // Field zio/aws/xray/XRayMock$GetTimeSeriesServiceStatistics$.MODULE$:Lzio/aws/xray/XRayMock$GetTimeSeriesServiceStatistics$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO getTimeSeriesServiceStatisticsPaginated(zio.aws.xray.model.GetTimeSeriesServiceStatisticsRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #248                // Field zio/aws/xray/XRayMock$GetTimeSeriesServiceStatisticsPaginated$.MODULE$:Lzio/aws/xray/XRayMock$GetTimeSeriesServiceStatisticsPaginated$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO deleteGroup(zio.aws.xray.model.DeleteGroupRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #253                // Field zio/aws/xray/XRayMock$DeleteGroup$.MODULE$:Lzio/aws/xray/XRayMock$DeleteGroup$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream getTraceGraph(zio.aws.xray.model.GetTraceGraphRequest);
    Code:
       0: getstatic     #173                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       3: aload_0
       4: aload_1
       5: invokedynamic #264,  0            // InvokeDynamic #2:apply:(Lzio/aws/xray/XRayMock$$anon$2;Lzio/aws/xray/model/GetTraceGraphRequest;)Lscala/Function1;
      10: invokevirtual #199                // Method zio/Unsafe$.unsafe:(Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #201                // class zio/stream/ZStream
      16: areturn

  public zio.ZIO getTraceGraphPaginated(zio.aws.xray.model.GetTraceGraphRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #270                // Field zio/aws/xray/XRayMock$GetTraceGraphPaginated$.MODULE$:Lzio/aws/xray/XRayMock$GetTraceGraphPaginated$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream getSamplingStatisticSummaries(zio.aws.xray.model.GetSamplingStatisticSummariesRequest);
    Code:
       0: getstatic     #173                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       3: aload_0
       4: aload_1
       5: invokedynamic #280,  0            // InvokeDynamic #3:apply:(Lzio/aws/xray/XRayMock$$anon$2;Lzio/aws/xray/model/GetSamplingStatisticSummariesRequest;)Lscala/Function1;
      10: invokevirtual #199                // Method zio/Unsafe$.unsafe:(Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #201                // class zio/stream/ZStream
      16: areturn

  public zio.ZIO getSamplingStatisticSummariesPaginated(zio.aws.xray.model.GetSamplingStatisticSummariesRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #286                // Field zio/aws/xray/XRayMock$GetSamplingStatisticSummariesPaginated$.MODULE$:Lzio/aws/xray/XRayMock$GetSamplingStatisticSummariesPaginated$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO putTelemetryRecords(zio.aws.xray.model.PutTelemetryRecordsRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #291                // Field zio/aws/xray/XRayMock$PutTelemetryRecords$.MODULE$:Lzio/aws/xray/XRayMock$PutTelemetryRecords$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO createSamplingRule(zio.aws.xray.model.CreateSamplingRuleRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #297                // Field zio/aws/xray/XRayMock$CreateSamplingRule$.MODULE$:Lzio/aws/xray/XRayMock$CreateSamplingRule$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO updateSamplingRule(zio.aws.xray.model.UpdateSamplingRuleRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #303                // Field zio/aws/xray/XRayMock$UpdateSamplingRule$.MODULE$:Lzio/aws/xray/XRayMock$UpdateSamplingRule$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO getInsightImpactGraph(zio.aws.xray.model.GetInsightImpactGraphRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #309                // Field zio/aws/xray/XRayMock$GetInsightImpactGraph$.MODULE$:Lzio/aws/xray/XRayMock$GetInsightImpactGraph$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO getInsightImpactGraphPaginated(zio.aws.xray.model.GetInsightImpactGraphRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #314                // Field zio/aws/xray/XRayMock$GetInsightImpactGraphPaginated$.MODULE$:Lzio/aws/xray/XRayMock$GetInsightImpactGraphPaginated$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO deleteSamplingRule(zio.aws.xray.model.DeleteSamplingRuleRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #319                // Field zio/aws/xray/XRayMock$DeleteSamplingRule$.MODULE$:Lzio/aws/xray/XRayMock$DeleteSamplingRule$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO untagResource(zio.aws.xray.model.UntagResourceRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #325                // Field zio/aws/xray/XRayMock$UntagResource$.MODULE$:Lzio/aws/xray/XRayMock$UntagResource$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO getSamplingTargets(zio.aws.xray.model.GetSamplingTargetsRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #331                // Field zio/aws/xray/XRayMock$GetSamplingTargets$.MODULE$:Lzio/aws/xray/XRayMock$GetSamplingTargets$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO putEncryptionConfig(zio.aws.xray.model.PutEncryptionConfigRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #337                // Field zio/aws/xray/XRayMock$PutEncryptionConfig$.MODULE$:Lzio/aws/xray/XRayMock$PutEncryptionConfig$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO createGroup(zio.aws.xray.model.CreateGroupRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #343                // Field zio/aws/xray/XRayMock$CreateGroup$.MODULE$:Lzio/aws/xray/XRayMock$CreateGroup$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream listTagsForResource(zio.aws.xray.model.ListTagsForResourceRequest);
    Code:
       0: getstatic     #173                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       3: aload_0
       4: aload_1
       5: invokedynamic #354,  0            // InvokeDynamic #4:apply:(Lzio/aws/xray/XRayMock$$anon$2;Lzio/aws/xray/model/ListTagsForResourceRequest;)Lscala/Function1;
      10: invokevirtual #199                // Method zio/Unsafe$.unsafe:(Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #201                // class zio/stream/ZStream
      16: areturn

  public zio.ZIO listTagsForResourcePaginated(zio.aws.xray.model.ListTagsForResourceRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #360                // Field zio/aws/xray/XRayMock$ListTagsForResourcePaginated$.MODULE$:Lzio/aws/xray/XRayMock$ListTagsForResourcePaginated$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO updateGroup(zio.aws.xray.model.UpdateGroupRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #365                // Field zio/aws/xray/XRayMock$UpdateGroup$.MODULE$:Lzio/aws/xray/XRayMock$UpdateGroup$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO getTraceSummaries(zio.aws.xray.model.GetTraceSummariesRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #371                // Field zio/aws/xray/XRayMock$GetTraceSummaries$.MODULE$:Lzio/aws/xray/XRayMock$GetTraceSummaries$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO getTraceSummariesPaginated(zio.aws.xray.model.GetTraceSummariesRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #376                // Field zio/aws/xray/XRayMock$GetTraceSummariesPaginated$.MODULE$:Lzio/aws/xray/XRayMock$GetTraceSummariesPaginated$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO tagResource(zio.aws.xray.model.TagResourceRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #381                // Field zio/aws/xray/XRayMock$TagResource$.MODULE$:Lzio/aws/xray/XRayMock$TagResource$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO getGroup(zio.aws.xray.model.GetGroupRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #387                // Field zio/aws/xray/XRayMock$GetGroup$.MODULE$:Lzio/aws/xray/XRayMock$GetGroup$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO getInsight(zio.aws.xray.model.GetInsightRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #393                // Field zio/aws/xray/XRayMock$GetInsight$.MODULE$:Lzio/aws/xray/XRayMock$GetInsight$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO getEncryptionConfig(zio.aws.xray.model.GetEncryptionConfigRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #399                // Field zio/aws/xray/XRayMock$GetEncryptionConfig$.MODULE$:Lzio/aws/xray/XRayMock$GetEncryptionConfig$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO putTraceSegments(zio.aws.xray.model.PutTraceSegmentsRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #405                // Field zio/aws/xray/XRayMock$PutTraceSegments$.MODULE$:Lzio/aws/xray/XRayMock$PutTraceSegments$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream getSamplingRules(zio.aws.xray.model.GetSamplingRulesRequest);
    Code:
       0: getstatic     #173                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       3: aload_0
       4: aload_1
       5: invokedynamic #416,  0            // InvokeDynamic #5:apply:(Lzio/aws/xray/XRayMock$$anon$2;Lzio/aws/xray/model/GetSamplingRulesRequest;)Lscala/Function1;
      10: invokevirtual #199                // Method zio/Unsafe$.unsafe:(Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #201                // class zio/stream/ZStream
      16: areturn

  public zio.ZIO getSamplingRulesPaginated(zio.aws.xray.model.GetSamplingRulesRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #422                // Field zio/aws/xray/XRayMock$GetSamplingRulesPaginated$.MODULE$:Lzio/aws/xray/XRayMock$GetSamplingRulesPaginated$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream getInsightSummaries(zio.aws.xray.model.GetInsightSummariesRequest);
    Code:
       0: getstatic     #173                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       3: aload_0
       4: aload_1
       5: invokedynamic #432,  0            // InvokeDynamic #6:apply:(Lzio/aws/xray/XRayMock$$anon$2;Lzio/aws/xray/model/GetInsightSummariesRequest;)Lscala/Function1;
      10: invokevirtual #199                // Method zio/Unsafe$.unsafe:(Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #201                // class zio/stream/ZStream
      16: areturn

  public zio.ZIO getInsightSummariesPaginated(zio.aws.xray.model.GetInsightSummariesRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #438                // Field zio/aws/xray/XRayMock$GetInsightSummariesPaginated$.MODULE$:Lzio/aws/xray/XRayMock$GetInsightSummariesPaginated$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream getGroups(zio.aws.xray.model.GetGroupsRequest);
    Code:
       0: getstatic     #173                // Field zio/Unsafe$.MODULE$:Lzio/Unsafe$;
       3: aload_0
       4: aload_1
       5: invokedynamic #448,  0            // InvokeDynamic #7:apply:(Lzio/aws/xray/XRayMock$$anon$2;Lzio/aws/xray/model/GetGroupsRequest;)Lscala/Function1;
      10: invokevirtual #199                // Method zio/Unsafe$.unsafe:(Lscala/Function1;)Ljava/lang/Object;
      13: checkcast     #201                // class zio/stream/ZStream
      16: areturn

  public zio.ZIO getGroupsPaginated(zio.aws.xray.model.GetGroupsRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
       4: getstatic     #454                // Field zio/aws/xray/XRayMock$GetGroupsPaginated$.MODULE$:Lzio/aws/xray/XRayMock$GetGroupsPaginated$;
       7: aload_1
       8: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public java.lang.Object withAspect(zio.ZIOAspect, zio.ZEnvironment);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #457                // Method withAspect:(Lzio/ZIOAspect;Lzio/ZEnvironment;)Lzio/aws/xray/XRay;
       6: areturn

  private final zio.stream.ZStream getInsightEvents$$anonfun$1(zio.aws.xray.model.GetInsightEventsRequest, zio.Unsafe);
    Code:
       0: aload_0
       1: getfield      #150                // Field rts$2:Lzio/Runtime;
       4: invokeinterface #462,  1          // InterfaceMethod zio/Runtime.unsafe:()Lzio/Runtime$UnsafeAPI;
       9: aload_0
      10: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
      13: getstatic     #465                // Field zio/aws/xray/XRayMock$GetInsightEvents$.MODULE$:Lzio/aws/xray/XRayMock$GetInsightEvents$;
      16: aload_1
      17: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      20: ldc_w         #467                // String zio.aws.xray.XRayMock.compose.$anon.getInsightEvents(XRayMock.scala:294)
      23: aload_2
      24: invokeinterface #471,  4          // InterfaceMethod zio/Runtime$UnsafeAPI.run:(Lzio/ZIO;Ljava/lang/Object;Lzio/Unsafe;)Lzio/Exit;
      29: aload_2
      30: invokeinterface #477,  2          // InterfaceMethod zio/Exit.getOrThrowFiberFailure:(Lzio/Unsafe;)Ljava/lang/Object;
      35: checkcast     #201                // class zio/stream/ZStream
      38: areturn

  private final zio.stream.ZStream batchGetTraces$$anonfun$1(zio.aws.xray.model.BatchGetTracesRequest, zio.Unsafe);
    Code:
       0: aload_0
       1: getfield      #150                // Field rts$2:Lzio/Runtime;
       4: invokeinterface #462,  1          // InterfaceMethod zio/Runtime.unsafe:()Lzio/Runtime$UnsafeAPI;
       9: aload_0
      10: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
      13: getstatic     #482                // Field zio/aws/xray/XRayMock$BatchGetTraces$.MODULE$:Lzio/aws/xray/XRayMock$BatchGetTraces$;
      16: aload_1
      17: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      20: ldc_w         #484                // String zio.aws.xray.XRayMock.compose.$anon.batchGetTraces(XRayMock.scala:319)
      23: aload_2
      24: invokeinterface #471,  4          // InterfaceMethod zio/Runtime$UnsafeAPI.run:(Lzio/ZIO;Ljava/lang/Object;Lzio/Unsafe;)Lzio/Exit;
      29: aload_2
      30: invokeinterface #477,  2          // InterfaceMethod zio/Exit.getOrThrowFiberFailure:(Lzio/Unsafe;)Ljava/lang/Object;
      35: checkcast     #201                // class zio/stream/ZStream
      38: areturn

  private final zio.stream.ZStream getTraceGraph$$anonfun$1(zio.aws.xray.model.GetTraceGraphRequest, zio.Unsafe);
    Code:
       0: aload_0
       1: getfield      #150                // Field rts$2:Lzio/Runtime;
       4: invokeinterface #462,  1          // InterfaceMethod zio/Runtime.unsafe:()Lzio/Runtime$UnsafeAPI;
       9: aload_0
      10: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
      13: getstatic     #488                // Field zio/aws/xray/XRayMock$GetTraceGraph$.MODULE$:Lzio/aws/xray/XRayMock$GetTraceGraph$;
      16: aload_1
      17: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      20: ldc_w         #490                // String zio.aws.xray.XRayMock.compose.$anon.getTraceGraph(XRayMock.scala:350)
      23: aload_2
      24: invokeinterface #471,  4          // InterfaceMethod zio/Runtime$UnsafeAPI.run:(Lzio/ZIO;Ljava/lang/Object;Lzio/Unsafe;)Lzio/Exit;
      29: aload_2
      30: invokeinterface #477,  2          // InterfaceMethod zio/Exit.getOrThrowFiberFailure:(Lzio/Unsafe;)Ljava/lang/Object;
      35: checkcast     #201                // class zio/stream/ZStream
      38: areturn

  private final zio.stream.ZStream getSamplingStatisticSummaries$$anonfun$1(zio.aws.xray.model.GetSamplingStatisticSummariesRequest, zio.Unsafe);
    Code:
       0: aload_0
       1: getfield      #150                // Field rts$2:Lzio/Runtime;
       4: invokeinterface #462,  1          // InterfaceMethod zio/Runtime.unsafe:()Lzio/Runtime$UnsafeAPI;
       9: aload_0
      10: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
      13: getstatic     #494                // Field zio/aws/xray/XRayMock$GetSamplingStatisticSummaries$.MODULE$:Lzio/aws/xray/XRayMock$GetSamplingStatisticSummaries$;
      16: aload_1
      17: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      20: ldc_w         #496                // String zio.aws.xray.XRayMock.compose.$anon.getSamplingStatisticSummaries(XRayMock.scala:367)
      23: aload_2
      24: invokeinterface #471,  4          // InterfaceMethod zio/Runtime$UnsafeAPI.run:(Lzio/ZIO;Ljava/lang/Object;Lzio/Unsafe;)Lzio/Exit;
      29: aload_2
      30: invokeinterface #477,  2          // InterfaceMethod zio/Exit.getOrThrowFiberFailure:(Lzio/Unsafe;)Ljava/lang/Object;
      35: checkcast     #201                // class zio/stream/ZStream
      38: areturn

  private final zio.stream.ZStream listTagsForResource$$anonfun$1(zio.aws.xray.model.ListTagsForResourceRequest, zio.Unsafe);
    Code:
       0: aload_0
       1: getfield      #150                // Field rts$2:Lzio/Runtime;
       4: invokeinterface #462,  1          // InterfaceMethod zio/Runtime.unsafe:()Lzio/Runtime$UnsafeAPI;
       9: aload_0
      10: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
      13: getstatic     #500                // Field zio/aws/xray/XRayMock$ListTagsForResource$.MODULE$:Lzio/aws/xray/XRayMock$ListTagsForResource$;
      16: aload_1
      17: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      20: ldc_w         #502                // String zio.aws.xray.XRayMock.compose.$anon.listTagsForResource(XRayMock.scala:428)
      23: aload_2
      24: invokeinterface #471,  4          // InterfaceMethod zio/Runtime$UnsafeAPI.run:(Lzio/ZIO;Ljava/lang/Object;Lzio/Unsafe;)Lzio/Exit;
      29: aload_2
      30: invokeinterface #477,  2          // InterfaceMethod zio/Exit.getOrThrowFiberFailure:(Lzio/Unsafe;)Ljava/lang/Object;
      35: checkcast     #201                // class zio/stream/ZStream
      38: areturn

  private final zio.stream.ZStream getSamplingRules$$anonfun$1(zio.aws.xray.model.GetSamplingRulesRequest, zio.Unsafe);
    Code:
       0: aload_0
       1: getfield      #150                // Field rts$2:Lzio/Runtime;
       4: invokeinterface #462,  1          // InterfaceMethod zio/Runtime.unsafe:()Lzio/Runtime$UnsafeAPI;
       9: aload_0
      10: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
      13: getstatic     #506                // Field zio/aws/xray/XRayMock$GetSamplingRules$.MODULE$:Lzio/aws/xray/XRayMock$GetSamplingRules$;
      16: aload_1
      17: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      20: ldc_w         #508                // String zio.aws.xray.XRayMock.compose.$anon.getSamplingRules(XRayMock.scala:480)
      23: aload_2
      24: invokeinterface #471,  4          // InterfaceMethod zio/Runtime$UnsafeAPI.run:(Lzio/ZIO;Ljava/lang/Object;Lzio/Unsafe;)Lzio/Exit;
      29: aload_2
      30: invokeinterface #477,  2          // InterfaceMethod zio/Exit.getOrThrowFiberFailure:(Lzio/Unsafe;)Ljava/lang/Object;
      35: checkcast     #201                // class zio/stream/ZStream
      38: areturn

  private final zio.stream.ZStream getInsightSummaries$$anonfun$1(zio.aws.xray.model.GetInsightSummariesRequest, zio.Unsafe);
    Code:
       0: aload_0
       1: getfield      #150                // Field rts$2:Lzio/Runtime;
       4: invokeinterface #462,  1          // InterfaceMethod zio/Runtime.unsafe:()Lzio/Runtime$UnsafeAPI;
       9: aload_0
      10: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
      13: getstatic     #512                // Field zio/aws/xray/XRayMock$GetInsightSummaries$.MODULE$:Lzio/aws/xray/XRayMock$GetInsightSummaries$;
      16: aload_1
      17: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      20: ldc_w         #514                // String zio.aws.xray.XRayMock.compose.$anon.getInsightSummaries(XRayMock.scala:497)
      23: aload_2
      24: invokeinterface #471,  4          // InterfaceMethod zio/Runtime$UnsafeAPI.run:(Lzio/ZIO;Ljava/lang/Object;Lzio/Unsafe;)Lzio/Exit;
      29: aload_2
      30: invokeinterface #477,  2          // InterfaceMethod zio/Exit.getOrThrowFiberFailure:(Lzio/Unsafe;)Ljava/lang/Object;
      35: checkcast     #201                // class zio/stream/ZStream
      38: areturn

  private final zio.stream.ZStream getGroups$$anonfun$1(zio.aws.xray.model.GetGroupsRequest, zio.Unsafe);
    Code:
       0: aload_0
       1: getfield      #150                // Field rts$2:Lzio/Runtime;
       4: invokeinterface #462,  1          // InterfaceMethod zio/Runtime.unsafe:()Lzio/Runtime$UnsafeAPI;
       9: aload_0
      10: getfield      #148                // Field proxy$2:Lzio/mock/Proxy;
      13: getstatic     #518                // Field zio/aws/xray/XRayMock$GetGroups$.MODULE$:Lzio/aws/xray/XRayMock$GetGroups$;
      16: aload_1
      17: invokevirtual #212                // Method zio/mock/Proxy.apply:(Lzio/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      20: ldc_w         #520                // String zio.aws.xray.XRayMock.compose.$anon.getGroups(XRayMock.scala:514)
      23: aload_2
      24: invokeinterface #471,  4          // InterfaceMethod zio/Runtime$UnsafeAPI.run:(Lzio/ZIO;Ljava/lang/Object;Lzio/Unsafe;)Lzio/Exit;
      29: aload_2
      30: invokeinterface #477,  2          // InterfaceMethod zio/Exit.getOrThrowFiberFailure:(Lzio/Unsafe;)Ljava/lang/Object;
      35: checkcast     #201                // class zio/stream/ZStream
      38: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #532,  0            // InvokeDynamic #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
