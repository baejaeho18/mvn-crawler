Compiled from "SamplingRule.scala"
public interface zio.aws.xray.model.SamplingRule$ReadOnly {
  public static zio.aws.xray.model.SamplingRule asEditable$(zio.aws.xray.model.SamplingRule$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #15                 // InterfaceMethod asEditable:()Lzio/aws/xray/model/SamplingRule;
       4: areturn

  public default zio.aws.xray.model.SamplingRule asEditable();
    Code:
       0: getstatic     #22                 // Field zio/aws/xray/model/SamplingRule$.MODULE$:Lzio/aws/xray/model/SamplingRule$;
       3: aload_0
       4: invokeinterface #26,  1           // InterfaceMethod ruleName:()Lzio/prelude/data/Optional;
       9: aload_0
      10: invokedynamic #47,  0             // InvokeDynamic #0:apply:(Lzio/aws/xray/model/SamplingRule$ReadOnly;)Lscala/Function1;
      15: invokeinterface #53,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      20: aload_0
      21: invokeinterface #56,  1           // InterfaceMethod ruleARN:()Lzio/prelude/data/Optional;
      26: aload_0
      27: invokedynamic #61,  0             // InvokeDynamic #1:apply:(Lzio/aws/xray/model/SamplingRule$ReadOnly;)Lscala/Function1;
      32: invokeinterface #53,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      37: aload_0
      38: invokeinterface #65,  1           // InterfaceMethod resourceARN:()Ljava/lang/String;
      43: aload_0
      44: invokeinterface #69,  1           // InterfaceMethod priority:()I
      49: aload_0
      50: invokeinterface #73,  1           // InterfaceMethod fixedRate:()D
      55: aload_0
      56: invokeinterface #76,  1           // InterfaceMethod reservoirSize:()I
      61: aload_0
      62: invokeinterface #79,  1           // InterfaceMethod serviceName:()Ljava/lang/String;
      67: aload_0
      68: invokeinterface #82,  1           // InterfaceMethod serviceType:()Ljava/lang/String;
      73: aload_0
      74: invokeinterface #85,  1           // InterfaceMethod host:()Ljava/lang/String;
      79: aload_0
      80: invokeinterface #88,  1           // InterfaceMethod httpMethod:()Ljava/lang/String;
      85: aload_0
      86: invokeinterface #91,  1           // InterfaceMethod urlPath:()Ljava/lang/String;
      91: aload_0
      92: invokeinterface #94,  1           // InterfaceMethod version:()I
      97: aload_0
      98: invokeinterface #97,  1           // InterfaceMethod attributes:()Lzio/prelude/data/Optional;
     103: aload_0
     104: invokedynamic #104,  0            // InvokeDynamic #2:apply:(Lzio/aws/xray/model/SamplingRule$ReadOnly;)Lscala/Function1;
     109: invokeinterface #53,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     114: invokevirtual #107                // Method zio/aws/xray/model/SamplingRule$.apply:(Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Ljava/lang/String;IDILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILzio/prelude/data/Optional;)Lzio/aws/xray/model/SamplingRule;
     117: areturn

  public abstract zio.prelude.data.Optional<java.lang.String> ruleName();

  public abstract zio.prelude.data.Optional<java.lang.String> ruleARN();

  public abstract java.lang.String resourceARN();

  public abstract int priority();

  public abstract double fixedRate();

  public abstract int reservoirSize();

  public abstract java.lang.String serviceName();

  public abstract java.lang.String serviceType();

  public abstract java.lang.String host();

  public abstract java.lang.String httpMethod();

  public abstract java.lang.String urlPath();

  public abstract int version();

  public abstract zio.prelude.data.Optional<scala.collection.immutable.Map<java.lang.String, java.lang.String>> attributes();

  public static zio.ZIO getRuleName$(zio.aws.xray.model.SamplingRule$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #116                // InterfaceMethod getRuleName:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getRuleName();
    Code:
       0: getstatic     #122                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #123                // String ruleName
       5: aload_0
       6: invokedynamic #133,  0            // InvokeDynamic #3:apply:(Lzio/aws/xray/model/SamplingRule$ReadOnly;)Lscala/Function0;
      11: invokevirtual #137                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getRuleARN$(zio.aws.xray.model.SamplingRule$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #141                // InterfaceMethod getRuleARN:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getRuleARN();
    Code:
       0: getstatic     #122                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #142                // String ruleARN
       5: aload_0
       6: invokedynamic #147,  0            // InvokeDynamic #4:apply:(Lzio/aws/xray/model/SamplingRule$ReadOnly;)Lscala/Function0;
      11: invokevirtual #137                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getResourceARN$(zio.aws.xray.model.SamplingRule$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #151                // InterfaceMethod getResourceARN:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.String> getResourceARN();
    Code:
       0: getstatic     #157                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokedynamic #164,  0            // InvokeDynamic #5:apply:(Lzio/aws/xray/model/SamplingRule$ReadOnly;)Lscala/Function1;
       9: ldc           #166                // String zio.aws.xray.model.SamplingRule.ReadOnly.getResourceARN(SamplingRule.scala:110)
      11: invokevirtual #170                // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getPriority$(zio.aws.xray.model.SamplingRule$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #174                // InterfaceMethod getPriority:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object> getPriority();
    Code:
       0: getstatic     #157                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokedynamic #182,  0            // InvokeDynamic #6:apply:(Lzio/aws/xray/model/SamplingRule$ReadOnly;)Lscala/Function1;
       9: ldc           #184                // String zio.aws.xray.model.SamplingRule.ReadOnly.getPriority(SamplingRule.scala:111)
      11: invokevirtual #170                // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getFixedRate$(zio.aws.xray.model.SamplingRule$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #188                // InterfaceMethod getFixedRate:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object> getFixedRate();
    Code:
       0: getstatic     #157                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokedynamic #195,  0            // InvokeDynamic #7:apply:(Lzio/aws/xray/model/SamplingRule$ReadOnly;)Lscala/Function1;
       9: ldc           #197                // String zio.aws.xray.model.SamplingRule.ReadOnly.getFixedRate(SamplingRule.scala:112)
      11: invokevirtual #170                // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getReservoirSize$(zio.aws.xray.model.SamplingRule$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #201                // InterfaceMethod getReservoirSize:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object> getReservoirSize();
    Code:
       0: getstatic     #157                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokedynamic #206,  0            // InvokeDynamic #8:apply:(Lzio/aws/xray/model/SamplingRule$ReadOnly;)Lscala/Function1;
       9: ldc           #208                // String zio.aws.xray.model.SamplingRule.ReadOnly.getReservoirSize(SamplingRule.scala:114)
      11: invokevirtual #170                // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getServiceName$(zio.aws.xray.model.SamplingRule$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #212                // InterfaceMethod getServiceName:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.String> getServiceName();
    Code:
       0: getstatic     #157                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokedynamic #217,  0            // InvokeDynamic #9:apply:(Lzio/aws/xray/model/SamplingRule$ReadOnly;)Lscala/Function1;
       9: ldc           #219                // String zio.aws.xray.model.SamplingRule.ReadOnly.getServiceName(SamplingRule.scala:116)
      11: invokevirtual #170                // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getServiceType$(zio.aws.xray.model.SamplingRule$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #223                // InterfaceMethod getServiceType:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.String> getServiceType();
    Code:
       0: getstatic     #157                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokedynamic #228,  0            // InvokeDynamic #10:apply:(Lzio/aws/xray/model/SamplingRule$ReadOnly;)Lscala/Function1;
       9: ldc           #230                // String zio.aws.xray.model.SamplingRule.ReadOnly.getServiceType(SamplingRule.scala:118)
      11: invokevirtual #170                // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getHost$(zio.aws.xray.model.SamplingRule$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #234                // InterfaceMethod getHost:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.String> getHost();
    Code:
       0: getstatic     #157                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokedynamic #239,  0            // InvokeDynamic #11:apply:(Lzio/aws/xray/model/SamplingRule$ReadOnly;)Lscala/Function1;
       9: ldc           #241                // String zio.aws.xray.model.SamplingRule.ReadOnly.getHost(SamplingRule.scala:119)
      11: invokevirtual #170                // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getHttpMethod$(zio.aws.xray.model.SamplingRule$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #245                // InterfaceMethod getHttpMethod:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.String> getHttpMethod();
    Code:
       0: getstatic     #157                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokedynamic #250,  0            // InvokeDynamic #12:apply:(Lzio/aws/xray/model/SamplingRule$ReadOnly;)Lscala/Function1;
       9: ldc           #252                // String zio.aws.xray.model.SamplingRule.ReadOnly.getHttpMethod(SamplingRule.scala:120)
      11: invokevirtual #170                // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getUrlPath$(zio.aws.xray.model.SamplingRule$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #256                // InterfaceMethod getUrlPath:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.String> getUrlPath();
    Code:
       0: getstatic     #157                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokedynamic #261,  0            // InvokeDynamic #13:apply:(Lzio/aws/xray/model/SamplingRule$ReadOnly;)Lscala/Function1;
       9: ldc_w         #263                // String zio.aws.xray.model.SamplingRule.ReadOnly.getUrlPath(SamplingRule.scala:121)
      12: invokevirtual #170                // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      15: areturn

  public static zio.ZIO getVersion$(zio.aws.xray.model.SamplingRule$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #267                // InterfaceMethod getVersion:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, scala.runtime.Nothing$, java.lang.Object> getVersion();
    Code:
       0: getstatic     #157                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokedynamic #272,  0            // InvokeDynamic #14:apply:(Lzio/aws/xray/model/SamplingRule$ReadOnly;)Lscala/Function1;
       9: ldc_w         #274                // String zio.aws.xray.model.SamplingRule.ReadOnly.getVersion(SamplingRule.scala:122)
      12: invokevirtual #170                // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      15: areturn

  public static zio.ZIO getAttributes$(zio.aws.xray.model.SamplingRule$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #278                // InterfaceMethod getAttributes:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, scala.collection.immutable.Map<java.lang.String, java.lang.String>> getAttributes();
    Code:
       0: getstatic     #122                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc_w         #280                // String attributes
       6: aload_0
       7: invokedynamic #285,  0            // InvokeDynamic #15:apply:(Lzio/aws/xray/model/SamplingRule$ReadOnly;)Lscala/Function0;
      12: invokevirtual #137                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      15: areturn

  private java.lang.String asEditable$$anonfun$1(java.lang.String);
    Code:
       0: aload_1
       1: areturn

  private java.lang.String asEditable$$anonfun$2(java.lang.String);
    Code:
       0: aload_1
       1: areturn

  private scala.collection.immutable.Map asEditable$$anonfun$3(scala.collection.immutable.Map);
    Code:
       0: aload_1
       1: areturn

  private zio.prelude.data.Optional getRuleName$$anonfun$1();
    Code:
       0: aload_0
       1: invokeinterface #26,  1           // InterfaceMethod ruleName:()Lzio/prelude/data/Optional;
       6: areturn

  private zio.prelude.data.Optional getRuleARN$$anonfun$1();
    Code:
       0: aload_0
       1: invokeinterface #56,  1           // InterfaceMethod ruleARN:()Lzio/prelude/data/Optional;
       6: areturn

  private java.lang.String getResourceARN$$anonfun$1(zio.Unsafe);
    Code:
       0: aload_0
       1: invokeinterface #65,  1           // InterfaceMethod resourceARN:()Ljava/lang/String;
       6: areturn

  private int getPriority$$anonfun$1(zio.Unsafe);
    Code:
       0: aload_0
       1: invokeinterface #69,  1           // InterfaceMethod priority:()I
       6: ireturn

  private double getFixedRate$$anonfun$1(zio.Unsafe);
    Code:
       0: aload_0
       1: invokeinterface #73,  1           // InterfaceMethod fixedRate:()D
       6: dreturn

  private int getReservoirSize$$anonfun$1(zio.Unsafe);
    Code:
       0: aload_0
       1: invokeinterface #76,  1           // InterfaceMethod reservoirSize:()I
       6: ireturn

  private java.lang.String getServiceName$$anonfun$1(zio.Unsafe);
    Code:
       0: aload_0
       1: invokeinterface #79,  1           // InterfaceMethod serviceName:()Ljava/lang/String;
       6: areturn

  private java.lang.String getServiceType$$anonfun$1(zio.Unsafe);
    Code:
       0: aload_0
       1: invokeinterface #82,  1           // InterfaceMethod serviceType:()Ljava/lang/String;
       6: areturn

  private java.lang.String getHost$$anonfun$1(zio.Unsafe);
    Code:
       0: aload_0
       1: invokeinterface #85,  1           // InterfaceMethod host:()Ljava/lang/String;
       6: areturn

  private java.lang.String getHttpMethod$$anonfun$1(zio.Unsafe);
    Code:
       0: aload_0
       1: invokeinterface #88,  1           // InterfaceMethod httpMethod:()Ljava/lang/String;
       6: areturn

  private java.lang.String getUrlPath$$anonfun$1(zio.Unsafe);
    Code:
       0: aload_0
       1: invokeinterface #91,  1           // InterfaceMethod urlPath:()Ljava/lang/String;
       6: areturn

  private int getVersion$$anonfun$1(zio.Unsafe);
    Code:
       0: aload_0
       1: invokeinterface #94,  1           // InterfaceMethod version:()I
       6: ireturn

  private zio.prelude.data.Optional getAttributes$$anonfun$1();
    Code:
       0: aload_0
       1: invokeinterface #97,  1           // InterfaceMethod attributes:()Lzio/prelude/data/Optional;
       6: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #311,  0            // InvokeDynamic #16:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
