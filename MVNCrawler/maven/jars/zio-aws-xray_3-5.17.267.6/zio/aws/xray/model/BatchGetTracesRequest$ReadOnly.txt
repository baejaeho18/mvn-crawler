Compiled from "BatchGetTracesRequest.scala"
public interface zio.aws.xray.model.BatchGetTracesRequest$ReadOnly {
  public static zio.aws.xray.model.BatchGetTracesRequest asEditable$(zio.aws.xray.model.BatchGetTracesRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #15                 // InterfaceMethod asEditable:()Lzio/aws/xray/model/BatchGetTracesRequest;
       4: areturn

  public default zio.aws.xray.model.BatchGetTracesRequest asEditable();
    Code:
       0: getstatic     #22                 // Field zio/aws/xray/model/BatchGetTracesRequest$.MODULE$:Lzio/aws/xray/model/BatchGetTracesRequest$;
       3: aload_0
       4: invokeinterface #26,  1           // InterfaceMethod traceIds:()Lscala/collection/immutable/List;
       9: aload_0
      10: invokeinterface #30,  1           // InterfaceMethod nextToken:()Lzio/prelude/data/Optional;
      15: aload_0
      16: invokedynamic #51,  0             // InvokeDynamic #0:apply:(Lzio/aws/xray/model/BatchGetTracesRequest$ReadOnly;)Lscala/Function1;
      21: invokeinterface #57,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      26: invokevirtual #60                 // Method zio/aws/xray/model/BatchGetTracesRequest$.apply:(Lscala/collection/Iterable;Lzio/prelude/data/Optional;)Lzio/aws/xray/model/BatchGetTracesRequest;
      29: areturn

  public abstract scala.collection.immutable.List<java.lang.String> traceIds();

  public abstract zio.prelude.data.Optional<java.lang.String> nextToken();

  public static zio.ZIO getTraceIds$(zio.aws.xray.model.BatchGetTracesRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #69                 // InterfaceMethod getTraceIds:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, scala.runtime.Nothing$, scala.collection.immutable.List<java.lang.String>> getTraceIds();
    Code:
       0: getstatic     #75                 // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokedynamic #82,  0             // InvokeDynamic #1:apply:(Lzio/aws/xray/model/BatchGetTracesRequest$ReadOnly;)Lscala/Function1;
       9: ldc           #84                 // String zio.aws.xray.model.BatchGetTracesRequest.ReadOnly.getTraceIds(BatchGetTracesRequest.scala:37)
      11: invokevirtual #88                 // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getNextToken$(zio.aws.xray.model.BatchGetTracesRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #92                 // InterfaceMethod getNextToken:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getNextToken();
    Code:
       0: getstatic     #98                 // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #99                 // String nextToken
       5: aload_0
       6: invokedynamic #109,  0            // InvokeDynamic #2:apply:(Lzio/aws/xray/model/BatchGetTracesRequest$ReadOnly;)Lscala/Function0;
      11: invokevirtual #113                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  private java.lang.String asEditable$$anonfun$1(java.lang.String);
    Code:
       0: aload_1
       1: areturn

  private scala.collection.immutable.List getTraceIds$$anonfun$1(zio.Unsafe);
    Code:
       0: aload_0
       1: invokeinterface #26,  1           // InterfaceMethod traceIds:()Lscala/collection/immutable/List;
       6: areturn

  private zio.prelude.data.Optional getNextToken$$anonfun$1();
    Code:
       0: aload_0
       1: invokeinterface #30,  1           // InterfaceMethod nextToken:()Lzio/prelude/data/Optional;
       6: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #129,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
