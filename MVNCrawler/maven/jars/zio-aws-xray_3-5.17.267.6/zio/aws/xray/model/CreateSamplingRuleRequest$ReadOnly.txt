Compiled from "CreateSamplingRuleRequest.scala"
public interface zio.aws.xray.model.CreateSamplingRuleRequest$ReadOnly {
  public static zio.aws.xray.model.CreateSamplingRuleRequest asEditable$(zio.aws.xray.model.CreateSamplingRuleRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #23                 // InterfaceMethod asEditable:()Lzio/aws/xray/model/CreateSamplingRuleRequest;
       4: areturn

  public default zio.aws.xray.model.CreateSamplingRuleRequest asEditable();
    Code:
       0: getstatic     #30                 // Field zio/aws/xray/model/CreateSamplingRuleRequest$.MODULE$:Lzio/aws/xray/model/CreateSamplingRuleRequest$;
       3: aload_0
       4: invokeinterface #34,  1           // InterfaceMethod samplingRule:()Lzio/aws/xray/model/SamplingRule$ReadOnly;
       9: invokeinterface #37,  1           // InterfaceMethod zio/aws/xray/model/SamplingRule$ReadOnly.asEditable:()Lzio/aws/xray/model/SamplingRule;
      14: aload_0
      15: invokeinterface #41,  1           // InterfaceMethod tags:()Lzio/prelude/data/Optional;
      20: aload_0
      21: invokedynamic #62,  0             // InvokeDynamic #0:apply:(Lzio/aws/xray/model/CreateSamplingRuleRequest$ReadOnly;)Lscala/Function1;
      26: invokeinterface #68,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      31: invokevirtual #71                 // Method zio/aws/xray/model/CreateSamplingRuleRequest$.apply:(Lzio/aws/xray/model/SamplingRule;Lzio/prelude/data/Optional;)Lzio/aws/xray/model/CreateSamplingRuleRequest;
      34: areturn

  public abstract zio.aws.xray.model.SamplingRule$ReadOnly samplingRule();

  public abstract zio.prelude.data.Optional<scala.collection.immutable.List<zio.aws.xray.model.Tag$ReadOnly>> tags();

  public static zio.ZIO getSamplingRule$(zio.aws.xray.model.CreateSamplingRuleRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #79                 // InterfaceMethod getSamplingRule:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, scala.runtime.Nothing$, zio.aws.xray.model.SamplingRule$ReadOnly> getSamplingRule();
    Code:
       0: getstatic     #85                 // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokedynamic #92,  0             // InvokeDynamic #1:apply:(Lzio/aws/xray/model/CreateSamplingRuleRequest$ReadOnly;)Lscala/Function1;
       9: ldc           #94                 // String zio.aws.xray.model.CreateSamplingRuleRequest.ReadOnly.getSamplingRule(CreateSamplingRuleRequest.scala:46)
      11: invokevirtual #98                 // Method zio/ZIO$.succeed:(Lscala/Function1;Ljava/lang/Object;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getTags$(zio.aws.xray.model.CreateSamplingRuleRequest$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #102                // InterfaceMethod getTags:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, scala.collection.immutable.List<zio.aws.xray.model.Tag$ReadOnly>> getTags();
    Code:
       0: getstatic     #108                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #109                // String tags
       5: aload_0
       6: invokedynamic #119,  0            // InvokeDynamic #2:apply:(Lzio/aws/xray/model/CreateSamplingRuleRequest$ReadOnly;)Lscala/Function0;
      11: invokevirtual #123                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  private zio.aws.xray.model.Tag asEditable$$anonfun$1$$anonfun$1(zio.aws.xray.model.Tag$ReadOnly);
    Code:
       0: aload_1
       1: invokeinterface #129,  1          // InterfaceMethod zio/aws/xray/model/Tag$ReadOnly.asEditable:()Lzio/aws/xray/model/Tag;
       6: areturn

  private scala.collection.immutable.List asEditable$$anonfun$1(scala.collection.immutable.List);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #136,  0            // InvokeDynamic #3:apply:(Lzio/aws/xray/model/CreateSamplingRuleRequest$ReadOnly;)Lscala/Function1;
       7: invokevirtual #141                // Method scala/collection/immutable/List.map:(Lscala/Function1;)Lscala/collection/immutable/List;
      10: areturn

  private zio.aws.xray.model.SamplingRule$ReadOnly getSamplingRule$$anonfun$1(zio.Unsafe);
    Code:
       0: aload_0
       1: invokeinterface #34,  1           // InterfaceMethod samplingRule:()Lzio/aws/xray/model/SamplingRule$ReadOnly;
       6: areturn

  private zio.prelude.data.Optional getTags$$anonfun$1();
    Code:
       0: aload_0
       1: invokeinterface #41,  1           // InterfaceMethod tags:()Lzio/prelude/data/Optional;
       6: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #156,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
