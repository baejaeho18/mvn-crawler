Compiled from "Trace.scala"
public final class zio.aws.xray.model.Trace implements scala.Product,java.io.Serializable {
  private final zio.prelude.data.Optional id;

  private final zio.prelude.data.Optional duration;

  private final zio.prelude.data.Optional limitExceeded;

  private final zio.prelude.data.Optional segments;

  public static final long OFFSET$_m_0;

  public static zio.aws.xray.model.Trace apply(zio.prelude.data.Optional<java.lang.String>, zio.prelude.data.Optional<java.lang.Object>, zio.prelude.data.Optional<java.lang.Object>, zio.prelude.data.Optional<scala.collection.Iterable<zio.aws.xray.model.Segment>>);
    Code:
       0: getstatic     #54                 // Field zio/aws/xray/model/Trace$.MODULE$:Lzio/aws/xray/model/Trace$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #56                 // Method zio/aws/xray/model/Trace$.apply:(Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;)Lzio/aws/xray/model/Trace;
      10: areturn

  public static zio.aws.xray.model.Trace fromProduct(scala.Product);
    Code:
       0: getstatic     #54                 // Field zio/aws/xray/model/Trace$.MODULE$:Lzio/aws/xray/model/Trace$;
       3: aload_0
       4: invokevirtual #60                 // Method zio/aws/xray/model/Trace$.fromProduct:(Lscala/Product;)Lzio/aws/xray/model/Trace;
       7: areturn

  public static zio.aws.xray.model.Trace unapply(zio.aws.xray.model.Trace);
    Code:
       0: getstatic     #54                 // Field zio/aws/xray/model/Trace$.MODULE$:Lzio/aws/xray/model/Trace$;
       3: aload_0
       4: invokevirtual #64                 // Method zio/aws/xray/model/Trace$.unapply:(Lzio/aws/xray/model/Trace;)Lzio/aws/xray/model/Trace;
       7: areturn

  public static zio.aws.xray.model.Trace$ReadOnly wrap(software.amazon.awssdk.services.xray.model.Trace);
    Code:
       0: getstatic     #54                 // Field zio/aws/xray/model/Trace$.MODULE$:Lzio/aws/xray/model/Trace$;
       3: aload_0
       4: invokevirtual #68                 // Method zio/aws/xray/model/Trace$.wrap:(Lsoftware/amazon/awssdk/services/xray/model/Trace;)Lzio/aws/xray/model/Trace$ReadOnly;
       7: areturn

  public static zio.prelude.data.Optional<java.lang.String> $lessinit$greater$default$1();
    Code:
       0: getstatic     #54                 // Field zio/aws/xray/model/Trace$.MODULE$:Lzio/aws/xray/model/Trace$;
       3: invokevirtual #73                 // Method zio/aws/xray/model/Trace$.$lessinit$greater$default$1:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional<java.lang.Object> $lessinit$greater$default$2();
    Code:
       0: getstatic     #54                 // Field zio/aws/xray/model/Trace$.MODULE$:Lzio/aws/xray/model/Trace$;
       3: invokevirtual #77                 // Method zio/aws/xray/model/Trace$.$lessinit$greater$default$2:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional<java.lang.Object> $lessinit$greater$default$3();
    Code:
       0: getstatic     #54                 // Field zio/aws/xray/model/Trace$.MODULE$:Lzio/aws/xray/model/Trace$;
       3: invokevirtual #80                 // Method zio/aws/xray/model/Trace$.$lessinit$greater$default$3:()Lzio/prelude/data/Optional;
       6: areturn

  public static zio.prelude.data.Optional<scala.collection.Iterable<zio.aws.xray.model.Segment>> $lessinit$greater$default$4();
    Code:
       0: getstatic     #54                 // Field zio/aws/xray/model/Trace$.MODULE$:Lzio/aws/xray/model/Trace$;
       3: invokevirtual #84                 // Method zio/aws/xray/model/Trace$.$lessinit$greater$default$4:()Lzio/prelude/data/Optional;
       6: areturn

  public zio.aws.xray.model.Trace(zio.prelude.data.Optional<java.lang.String>, zio.prelude.data.Optional<java.lang.Object>, zio.prelude.data.Optional<java.lang.Object>, zio.prelude.data.Optional<scala.collection.Iterable<zio.aws.xray.model.Segment>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #89                 // Field id:Lzio/prelude/data/Optional;
       5: aload_0
       6: aload_2
       7: putfield      #91                 // Field duration:Lzio/prelude/data/Optional;
      10: aload_0
      11: aload_3
      12: putfield      #93                 // Field limitExceeded:Lzio/prelude/data/Optional;
      15: aload_0
      16: aload         4
      18: putfield      #95                 // Field segments:Lzio/prelude/data/Optional;
      21: aload_0
      22: invokespecial #98                 // Method java/lang/Object."<init>":()V
      25: return

  private static {};
    Code:
       0: getstatic     #106                // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #50                 // class zio/aws/xray/model/Trace$
       5: ldc           #108                // String 0bitmap$1
       7: invokevirtual #114                // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      10: invokevirtual #118                // Method scala/runtime/LazyVals$.getOffsetStatic:(Ljava/lang/reflect/Field;)J
      13: putstatic     #120                // Field OFFSET$_m_0:J
      16: return

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #126                // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #130                // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public int hashCode();
    Code:
       0: getstatic     #137                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #141                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     158
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class zio/aws/xray/model/Trace
      11: ifeq          151
      14: aload_2
      15: checkcast     #2                  // class zio/aws/xray/model/Trace
      18: astore_3
      19: aload_0
      20: invokevirtual #146                // Method id:()Lzio/prelude/data/Optional;
      23: aload_3
      24: invokevirtual #146                // Method id:()Lzio/prelude/data/Optional;
      27: astore        4
      29: dup
      30: ifnonnull     42
      33: pop
      34: aload         4
      36: ifnull        50
      39: goto          147
      42: aload         4
      44: invokevirtual #148                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          147
      50: aload_0
      51: invokevirtual #150                // Method duration:()Lzio/prelude/data/Optional;
      54: aload_3
      55: invokevirtual #150                // Method duration:()Lzio/prelude/data/Optional;
      58: astore        5
      60: dup
      61: ifnonnull     73
      64: pop
      65: aload         5
      67: ifnull        81
      70: goto          147
      73: aload         5
      75: invokevirtual #148                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      78: ifeq          147
      81: aload_0
      82: invokevirtual #152                // Method limitExceeded:()Lzio/prelude/data/Optional;
      85: aload_3
      86: invokevirtual #152                // Method limitExceeded:()Lzio/prelude/data/Optional;
      89: astore        6
      91: dup
      92: ifnonnull     104
      95: pop
      96: aload         6
      98: ifnull        112
     101: goto          147
     104: aload         6
     106: invokevirtual #148                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     109: ifeq          147
     112: aload_0
     113: invokevirtual #154                // Method segments:()Lzio/prelude/data/Optional;
     116: aload_3
     117: invokevirtual #154                // Method segments:()Lzio/prelude/data/Optional;
     120: astore        7
     122: dup
     123: ifnonnull     135
     126: pop
     127: aload         7
     129: ifnull        143
     132: goto          147
     135: aload         7
     137: invokevirtual #148                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     140: ifeq          147
     143: iconst_1
     144: goto          148
     147: iconst_0
     148: goto          155
     151: iconst_0
     152: goto          155
     155: ifeq          162
     158: iconst_1
     159: goto          163
     162: iconst_0
     163: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #137                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #163                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class zio/aws/xray/model/Trace
       4: ireturn

  public int productArity();
    Code:
       0: iconst_4
       1: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #169                // String Trace
       2: areturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 32
                     1: 37
                     2: 42
                     3: 47
               default: 52
          }
      32: aload_0
      33: invokevirtual #175                // Method _1:()Lzio/prelude/data/Optional;
      36: areturn
      37: aload_0
      38: invokevirtual #178                // Method _2:()Lzio/prelude/data/Optional;
      41: areturn
      42: aload_0
      43: invokevirtual #181                // Method _3:()Lzio/prelude/data/Optional;
      46: areturn
      47: aload_0
      48: invokevirtual #184                // Method _4:()Lzio/prelude/data/Optional;
      51: areturn
      52: new           #186                // class java/lang/IndexOutOfBoundsException
      55: dup
      56: iload_1
      57: invokestatic  #192                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      60: invokevirtual #196                // Method java/lang/Integer.toString:()Ljava/lang/String;
      63: invokespecial #199                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      66: athrow

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 3
                     0: 32
                     1: 35
                     2: 38
                     3: 41
               default: 44
          }
      32: ldc           #203                // String id
      34: areturn
      35: ldc           #204                // String duration
      37: areturn
      38: ldc           #205                // String limitExceeded
      40: areturn
      41: ldc           #206                // String segments
      43: areturn
      44: new           #186                // class java/lang/IndexOutOfBoundsException
      47: dup
      48: iload_1
      49: invokestatic  #192                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      52: invokevirtual #196                // Method java/lang/Integer.toString:()Ljava/lang/String;
      55: invokespecial #199                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      58: athrow

  public zio.prelude.data.Optional<java.lang.String> id();
    Code:
       0: aload_0
       1: getfield      #89                 // Field id:Lzio/prelude/data/Optional;
       4: areturn

  public zio.prelude.data.Optional<java.lang.Object> duration();
    Code:
       0: aload_0
       1: getfield      #91                 // Field duration:Lzio/prelude/data/Optional;
       4: areturn

  public zio.prelude.data.Optional<java.lang.Object> limitExceeded();
    Code:
       0: aload_0
       1: getfield      #93                 // Field limitExceeded:Lzio/prelude/data/Optional;
       4: areturn

  public zio.prelude.data.Optional<scala.collection.Iterable<zio.aws.xray.model.Segment>> segments();
    Code:
       0: aload_0
       1: getfield      #95                 // Field segments:Lzio/prelude/data/Optional;
       4: areturn

  public software.amazon.awssdk.services.xray.model.Trace buildAwsValue();
    Code:
       0: getstatic     #54                 // Field zio/aws/xray/model/Trace$.MODULE$:Lzio/aws/xray/model/Trace$;
       3: invokevirtual #212                // Method zio/aws/xray/model/Trace$.zio$aws$xray$model$Trace$$$zioAwsBuilderHelper:()Lzio/aws/core/BuilderHelper;
       6: getstatic     #54                 // Field zio/aws/xray/model/Trace$.MODULE$:Lzio/aws/xray/model/Trace$;
       9: invokevirtual #212                // Method zio/aws/xray/model/Trace$.zio$aws$xray$model$Trace$$$zioAwsBuilderHelper:()Lzio/aws/core/BuilderHelper;
      12: getstatic     #54                 // Field zio/aws/xray/model/Trace$.MODULE$:Lzio/aws/xray/model/Trace$;
      15: invokevirtual #212                // Method zio/aws/xray/model/Trace$.zio$aws$xray$model$Trace$$$zioAwsBuilderHelper:()Lzio/aws/core/BuilderHelper;
      18: getstatic     #54                 // Field zio/aws/xray/model/Trace$.MODULE$:Lzio/aws/xray/model/Trace$;
      21: invokevirtual #212                // Method zio/aws/xray/model/Trace$.zio$aws$xray$model$Trace$$$zioAwsBuilderHelper:()Lzio/aws/core/BuilderHelper;
      24: invokestatic  #216                // Method software/amazon/awssdk/services/xray/model/Trace.builder:()Lsoftware/amazon/awssdk/services/xray/model/Trace$Builder;
      27: invokeinterface #219,  2          // InterfaceMethod zio/aws/core/BuilderHelper.BuilderOps:(Lsoftware/amazon/awssdk/utils/builder/SdkBuilder;)Lzio/aws/core/BuilderHelper$BuilderOps;
      32: aload_0
      33: invokevirtual #146                // Method id:()Lzio/prelude/data/Optional;
      36: invokedynamic #239,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
      41: invokeinterface #243,  2          // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      46: invokedynamic #250,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      51: invokevirtual #254                // Method zio/aws/core/BuilderHelper$BuilderOps.optionallyWith:(Lzio/prelude/data/Optional;Lscala/Function1;)Lsoftware/amazon/awssdk/utils/builder/SdkBuilder;
      54: invokeinterface #219,  2          // InterfaceMethod zio/aws/core/BuilderHelper.BuilderOps:(Lsoftware/amazon/awssdk/utils/builder/SdkBuilder;)Lzio/aws/core/BuilderHelper$BuilderOps;
      59: aload_0
      60: invokevirtual #150                // Method duration:()Lzio/prelude/data/Optional;
      63: invokedynamic #261,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
      68: invokeinterface #243,  2          // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      73: invokedynamic #266,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
      78: invokevirtual #254                // Method zio/aws/core/BuilderHelper$BuilderOps.optionallyWith:(Lzio/prelude/data/Optional;Lscala/Function1;)Lsoftware/amazon/awssdk/utils/builder/SdkBuilder;
      81: invokeinterface #219,  2          // InterfaceMethod zio/aws/core/BuilderHelper.BuilderOps:(Lsoftware/amazon/awssdk/utils/builder/SdkBuilder;)Lzio/aws/core/BuilderHelper$BuilderOps;
      86: aload_0
      87: invokevirtual #152                // Method limitExceeded:()Lzio/prelude/data/Optional;
      90: invokedynamic #273,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
      95: invokeinterface #243,  2          // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     100: invokedynamic #278,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
     105: invokevirtual #254                // Method zio/aws/core/BuilderHelper$BuilderOps.optionallyWith:(Lzio/prelude/data/Optional;Lscala/Function1;)Lsoftware/amazon/awssdk/utils/builder/SdkBuilder;
     108: invokeinterface #219,  2          // InterfaceMethod zio/aws/core/BuilderHelper.BuilderOps:(Lsoftware/amazon/awssdk/utils/builder/SdkBuilder;)Lzio/aws/core/BuilderHelper$BuilderOps;
     113: aload_0
     114: invokevirtual #154                // Method segments:()Lzio/prelude/data/Optional;
     117: invokedynamic #285,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
     122: invokeinterface #243,  2          // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     127: invokedynamic #290,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
     132: invokevirtual #254                // Method zio/aws/core/BuilderHelper$BuilderOps.optionallyWith:(Lzio/prelude/data/Optional;Lscala/Function1;)Lsoftware/amazon/awssdk/utils/builder/SdkBuilder;
     135: invokeinterface #296,  1          // InterfaceMethod software/amazon/awssdk/utils/builder/SdkBuilder.build:()Ljava/lang/Object;
     140: checkcast     #18                 // class software/amazon/awssdk/services/xray/model/Trace
     143: areturn

  public zio.aws.xray.model.Trace$ReadOnly asReadOnly();
    Code:
       0: getstatic     #54                 // Field zio/aws/xray/model/Trace$.MODULE$:Lzio/aws/xray/model/Trace$;
       3: aload_0
       4: invokevirtual #300                // Method buildAwsValue:()Lsoftware/amazon/awssdk/services/xray/model/Trace;
       7: invokevirtual #68                 // Method zio/aws/xray/model/Trace$.wrap:(Lsoftware/amazon/awssdk/services/xray/model/Trace;)Lzio/aws/xray/model/Trace$ReadOnly;
      10: areturn

  public zio.aws.xray.model.Trace copy(zio.prelude.data.Optional<java.lang.String>, zio.prelude.data.Optional<java.lang.Object>, zio.prelude.data.Optional<java.lang.Object>, zio.prelude.data.Optional<scala.collection.Iterable<zio.aws.xray.model.Segment>>);
    Code:
       0: new           #2                  // class zio/aws/xray/model/Trace
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokespecial #303                // Method "<init>":(Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;)V
      12: areturn

  public zio.prelude.data.Optional<java.lang.String> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #146                // Method id:()Lzio/prelude/data/Optional;
       4: areturn

  public zio.prelude.data.Optional<java.lang.Object> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #150                // Method duration:()Lzio/prelude/data/Optional;
       4: areturn

  public zio.prelude.data.Optional<java.lang.Object> copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #152                // Method limitExceeded:()Lzio/prelude/data/Optional;
       4: areturn

  public zio.prelude.data.Optional<scala.collection.Iterable<zio.aws.xray.model.Segment>> copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #154                // Method segments:()Lzio/prelude/data/Optional;
       4: areturn

  public zio.prelude.data.Optional<java.lang.String> _1();
    Code:
       0: aload_0
       1: invokevirtual #146                // Method id:()Lzio/prelude/data/Optional;
       4: areturn

  public zio.prelude.data.Optional<java.lang.Object> _2();
    Code:
       0: aload_0
       1: invokevirtual #150                // Method duration:()Lzio/prelude/data/Optional;
       4: areturn

  public zio.prelude.data.Optional<java.lang.Object> _3();
    Code:
       0: aload_0
       1: invokevirtual #152                // Method limitExceeded:()Lzio/prelude/data/Optional;
       4: areturn

  public zio.prelude.data.Optional<scala.collection.Iterable<zio.aws.xray.model.Segment>> _4();
    Code:
       0: aload_0
       1: invokevirtual #154                // Method segments:()Lzio/prelude/data/Optional;
       4: areturn

  private static final java.lang.String buildAwsValue$$anonfun$1(java.lang.String);
    Code:
       0: getstatic     #311                // Field zio/aws/xray/model/package$primitives$TraceId$.MODULE$:Lzio/aws/xray/model/package$primitives$TraceId$;
       3: aload_0
       4: invokevirtual #314                // Method zio/aws/xray/model/package$primitives$TraceId$.unwrap:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #316                // class java/lang/String
      10: areturn

  private static final software.amazon.awssdk.services.xray.model.Trace$Builder buildAwsValue$$anonfun$2$$anonfun$1(software.amazon.awssdk.services.xray.model.Trace$Builder, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #323,  2          // InterfaceMethod software/amazon/awssdk/services/xray/model/Trace$Builder.id:(Ljava/lang/String;)Lsoftware/amazon/awssdk/services/xray/model/Trace$Builder;
       7: areturn

  private static final scala.Function1 buildAwsValue$$anonfun$2(software.amazon.awssdk.services.xray.model.Trace$Builder);
    Code:
       0: aload_0
       1: invokedynamic #331,  0            // InvokeDynamic #8:apply:(Lsoftware/amazon/awssdk/services/xray/model/Trace$Builder;)Lscala/Function1;
       6: areturn

  private static final java.lang.Double buildAwsValue$$anonfun$3(double);
    Code:
       0: getstatic     #338                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: dload_0
       4: invokevirtual #341                // Method scala/Predef$.double2Double:(D)Ljava/lang/Double;
       7: areturn

  private static java.lang.Double buildAwsValue$$anonfun$adapted$1(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #346                // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
       4: invokestatic  #348                // Method buildAwsValue$$anonfun$3:(D)Ljava/lang/Double;
       7: areturn

  private static final software.amazon.awssdk.services.xray.model.Trace$Builder buildAwsValue$$anonfun$4$$anonfun$1(software.amazon.awssdk.services.xray.model.Trace$Builder, java.lang.Double);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #354,  2          // InterfaceMethod software/amazon/awssdk/services/xray/model/Trace$Builder.duration:(Ljava/lang/Double;)Lsoftware/amazon/awssdk/services/xray/model/Trace$Builder;
       7: areturn

  private static final scala.Function1 buildAwsValue$$anonfun$4(software.amazon.awssdk.services.xray.model.Trace$Builder);
    Code:
       0: aload_0
       1: invokedynamic #361,  0            // InvokeDynamic #9:apply:(Lsoftware/amazon/awssdk/services/xray/model/Trace$Builder;)Lscala/Function1;
       6: areturn

  private static final java.lang.Boolean buildAwsValue$$anonfun$5(boolean);
    Code:
       0: getstatic     #338                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: iload_0
       4: invokevirtual #366                // Method scala/Predef$.boolean2Boolean:(Z)Ljava/lang/Boolean;
       7: areturn

  private static java.lang.Boolean buildAwsValue$$anonfun$adapted$2(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #370                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       4: invokestatic  #372                // Method buildAwsValue$$anonfun$5:(Z)Ljava/lang/Boolean;
       7: areturn

  private static final software.amazon.awssdk.services.xray.model.Trace$Builder buildAwsValue$$anonfun$6$$anonfun$1(software.amazon.awssdk.services.xray.model.Trace$Builder, java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #378,  2          // InterfaceMethod software/amazon/awssdk/services/xray/model/Trace$Builder.limitExceeded:(Ljava/lang/Boolean;)Lsoftware/amazon/awssdk/services/xray/model/Trace$Builder;
       7: areturn

  private static final scala.Function1 buildAwsValue$$anonfun$6(software.amazon.awssdk.services.xray.model.Trace$Builder);
    Code:
       0: aload_0
       1: invokedynamic #385,  0            // InvokeDynamic #10:apply:(Lsoftware/amazon/awssdk/services/xray/model/Trace$Builder;)Lscala/Function1;
       6: areturn

  private static final software.amazon.awssdk.services.xray.model.Segment buildAwsValue$$anonfun$7$$anonfun$1(zio.aws.xray.model.Segment);
    Code:
       0: aload_0
       1: invokevirtual #393                // Method zio/aws/xray/model/Segment.buildAwsValue:()Lsoftware/amazon/awssdk/services/xray/model/Segment;
       4: areturn

  private static final java.util.Collection buildAwsValue$$anonfun$7(scala.collection.Iterable);
    Code:
       0: getstatic     #399                // Field scala/jdk/CollectionConverters$.MODULE$:Lscala/jdk/CollectionConverters$;
       3: aload_0
       4: invokedynamic #404,  0            // InvokeDynamic #11:apply:()Lscala/Function1;
       9: invokeinterface #409,  2          // InterfaceMethod scala/collection/Iterable.map:(Lscala/Function1;)Ljava/lang/Object;
      14: checkcast     #406                // class scala/collection/Iterable
      17: invokevirtual #412                // Method scala/jdk/CollectionConverters$.IterableHasAsJava:(Lscala/collection/Iterable;)Lscala/collection/convert/AsJavaExtensions$IterableHasAsJava;
      20: invokevirtual #416                // Method scala/collection/convert/AsJavaExtensions$IterableHasAsJava.asJavaCollection:()Ljava/util/Collection;
      23: areturn

  private static final software.amazon.awssdk.services.xray.model.Trace$Builder buildAwsValue$$anonfun$8$$anonfun$1(software.amazon.awssdk.services.xray.model.Trace$Builder, java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #423,  2          // InterfaceMethod software/amazon/awssdk/services/xray/model/Trace$Builder.segments:(Ljava/util/Collection;)Lsoftware/amazon/awssdk/services/xray/model/Trace$Builder;
       7: areturn

  private static final scala.Function1 buildAwsValue$$anonfun$8(software.amazon.awssdk.services.xray.model.Trace$Builder);
    Code:
       0: aload_0
       1: invokedynamic #430,  0            // InvokeDynamic #12:apply:(Lsoftware/amazon/awssdk/services/xray/model/Trace$Builder;)Lscala/Function1;
       6: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #442,  0            // InvokeDynamic #13:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
