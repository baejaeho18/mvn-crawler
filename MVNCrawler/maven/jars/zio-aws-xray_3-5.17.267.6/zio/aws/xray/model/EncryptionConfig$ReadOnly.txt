Compiled from "EncryptionConfig.scala"
public interface zio.aws.xray.model.EncryptionConfig$ReadOnly {
  public static zio.aws.xray.model.EncryptionConfig asEditable$(zio.aws.xray.model.EncryptionConfig$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #15                 // InterfaceMethod asEditable:()Lzio/aws/xray/model/EncryptionConfig;
       4: areturn

  public default zio.aws.xray.model.EncryptionConfig asEditable();
    Code:
       0: getstatic     #22                 // Field zio/aws/xray/model/EncryptionConfig$.MODULE$:Lzio/aws/xray/model/EncryptionConfig$;
       3: aload_0
       4: invokeinterface #26,  1           // InterfaceMethod keyId:()Lzio/prelude/data/Optional;
       9: aload_0
      10: invokedynamic #47,  0             // InvokeDynamic #0:apply:(Lzio/aws/xray/model/EncryptionConfig$ReadOnly;)Lscala/Function1;
      15: invokeinterface #53,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      20: aload_0
      21: invokeinterface #56,  1           // InterfaceMethod status:()Lzio/prelude/data/Optional;
      26: aload_0
      27: invokedynamic #63,  0             // InvokeDynamic #1:apply:(Lzio/aws/xray/model/EncryptionConfig$ReadOnly;)Lscala/Function1;
      32: invokeinterface #53,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      37: aload_0
      38: invokeinterface #66,  1           // InterfaceMethod type:()Lzio/prelude/data/Optional;
      43: aload_0
      44: invokedynamic #73,  0             // InvokeDynamic #2:apply:(Lzio/aws/xray/model/EncryptionConfig$ReadOnly;)Lscala/Function1;
      49: invokeinterface #53,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      54: invokevirtual #76                 // Method zio/aws/xray/model/EncryptionConfig$.apply:(Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;)Lzio/aws/xray/model/EncryptionConfig;
      57: areturn

  public abstract zio.prelude.data.Optional<java.lang.String> keyId();

  public abstract zio.prelude.data.Optional<zio.aws.xray.model.EncryptionStatus> status();

  public abstract zio.prelude.data.Optional<zio.aws.xray.model.EncryptionType> type();

  public static zio.ZIO getKeyId$(zio.aws.xray.model.EncryptionConfig$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #86                 // InterfaceMethod getKeyId:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getKeyId();
    Code:
       0: getstatic     #92                 // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #93                 // String keyId
       5: aload_0
       6: invokedynamic #103,  0            // InvokeDynamic #3:apply:(Lzio/aws/xray/model/EncryptionConfig$ReadOnly;)Lscala/Function0;
      11: invokevirtual #107                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getStatus$(zio.aws.xray.model.EncryptionConfig$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #111                // InterfaceMethod getStatus:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.xray.model.EncryptionStatus> getStatus();
    Code:
       0: getstatic     #92                 // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #113                // String status
       5: aload_0
       6: invokedynamic #118,  0            // InvokeDynamic #4:apply:(Lzio/aws/xray/model/EncryptionConfig$ReadOnly;)Lscala/Function0;
      11: invokevirtual #107                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getType$(zio.aws.xray.model.EncryptionConfig$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #122                // InterfaceMethod getType:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.xray.model.EncryptionType> getType();
    Code:
       0: getstatic     #92                 // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #124                // String type
       5: aload_0
       6: invokedynamic #129,  0            // InvokeDynamic #5:apply:(Lzio/aws/xray/model/EncryptionConfig$ReadOnly;)Lscala/Function0;
      11: invokevirtual #107                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  private java.lang.String asEditable$$anonfun$1(java.lang.String);
    Code:
       0: aload_1
       1: areturn

  private zio.aws.xray.model.EncryptionStatus asEditable$$anonfun$2(zio.aws.xray.model.EncryptionStatus);
    Code:
       0: aload_1
       1: areturn

  private zio.aws.xray.model.EncryptionType asEditable$$anonfun$3(zio.aws.xray.model.EncryptionType);
    Code:
       0: aload_1
       1: areturn

  private zio.prelude.data.Optional getKeyId$$anonfun$1();
    Code:
       0: aload_0
       1: invokeinterface #26,  1           // InterfaceMethod keyId:()Lzio/prelude/data/Optional;
       6: areturn

  private zio.prelude.data.Optional getStatus$$anonfun$1();
    Code:
       0: aload_0
       1: invokeinterface #56,  1           // InterfaceMethod status:()Lzio/prelude/data/Optional;
       6: areturn

  private zio.prelude.data.Optional getType$$anonfun$1();
    Code:
       0: aload_0
       1: invokeinterface #66,  1           // InterfaceMethod type:()Lzio/prelude/data/Optional;
       6: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #145,  0            // InvokeDynamic #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
