Compiled from "SamplingRuleUpdate.scala"
public interface zio.aws.xray.model.SamplingRuleUpdate$ReadOnly {
  public static zio.aws.xray.model.SamplingRuleUpdate asEditable$(zio.aws.xray.model.SamplingRuleUpdate$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #15                 // InterfaceMethod asEditable:()Lzio/aws/xray/model/SamplingRuleUpdate;
       4: areturn

  public default zio.aws.xray.model.SamplingRuleUpdate asEditable();
    Code:
       0: getstatic     #22                 // Field zio/aws/xray/model/SamplingRuleUpdate$.MODULE$:Lzio/aws/xray/model/SamplingRuleUpdate$;
       3: aload_0
       4: invokeinterface #26,  1           // InterfaceMethod ruleName:()Lzio/prelude/data/Optional;
       9: aload_0
      10: invokedynamic #47,  0             // InvokeDynamic #0:apply:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/Function1;
      15: invokeinterface #53,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      20: aload_0
      21: invokeinterface #56,  1           // InterfaceMethod ruleARN:()Lzio/prelude/data/Optional;
      26: aload_0
      27: invokedynamic #61,  0             // InvokeDynamic #1:apply:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/Function1;
      32: invokeinterface #53,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      37: aload_0
      38: invokeinterface #64,  1           // InterfaceMethod resourceARN:()Lzio/prelude/data/Optional;
      43: aload_0
      44: invokedynamic #69,  0             // InvokeDynamic #2:apply:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/Function1;
      49: invokeinterface #53,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      54: aload_0
      55: invokeinterface #72,  1           // InterfaceMethod priority:()Lzio/prelude/data/Optional;
      60: aload_0
      61: invokedynamic #82,  0             // InvokeDynamic #3:apply$mcII$sp:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/runtime/java8/JFunction1$mcII$sp;
      66: invokeinterface #53,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      71: aload_0
      72: invokeinterface #85,  1           // InterfaceMethod fixedRate:()Lzio/prelude/data/Optional;
      77: aload_0
      78: invokedynamic #95,  0             // InvokeDynamic #4:apply$mcDD$sp:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/runtime/java8/JFunction1$mcDD$sp;
      83: invokeinterface #53,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
      88: aload_0
      89: invokeinterface #98,  1           // InterfaceMethod reservoirSize:()Lzio/prelude/data/Optional;
      94: aload_0
      95: invokedynamic #103,  0            // InvokeDynamic #5:apply$mcII$sp:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/runtime/java8/JFunction1$mcII$sp;
     100: invokeinterface #53,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     105: aload_0
     106: invokeinterface #106,  1          // InterfaceMethod host:()Lzio/prelude/data/Optional;
     111: aload_0
     112: invokedynamic #111,  0            // InvokeDynamic #6:apply:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/Function1;
     117: invokeinterface #53,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     122: aload_0
     123: invokeinterface #114,  1          // InterfaceMethod serviceName:()Lzio/prelude/data/Optional;
     128: aload_0
     129: invokedynamic #119,  0            // InvokeDynamic #7:apply:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/Function1;
     134: invokeinterface #53,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     139: aload_0
     140: invokeinterface #122,  1          // InterfaceMethod serviceType:()Lzio/prelude/data/Optional;
     145: aload_0
     146: invokedynamic #127,  0            // InvokeDynamic #8:apply:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/Function1;
     151: invokeinterface #53,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     156: aload_0
     157: invokeinterface #130,  1          // InterfaceMethod httpMethod:()Lzio/prelude/data/Optional;
     162: aload_0
     163: invokedynamic #135,  0            // InvokeDynamic #9:apply:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/Function1;
     168: invokeinterface #53,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     173: aload_0
     174: invokeinterface #138,  1          // InterfaceMethod urlPath:()Lzio/prelude/data/Optional;
     179: aload_0
     180: invokedynamic #143,  0            // InvokeDynamic #10:apply:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/Function1;
     185: invokeinterface #53,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     190: aload_0
     191: invokeinterface #146,  1          // InterfaceMethod attributes:()Lzio/prelude/data/Optional;
     196: aload_0
     197: invokedynamic #153,  0            // InvokeDynamic #11:apply:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/Function1;
     202: invokeinterface #53,  2           // InterfaceMethod zio/prelude/data/Optional.map:(Lscala/Function1;)Lzio/prelude/data/Optional;
     207: invokevirtual #156                // Method zio/aws/xray/model/SamplingRuleUpdate$.apply:(Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;Lzio/prelude/data/Optional;)Lzio/aws/xray/model/SamplingRuleUpdate;
     210: areturn

  public abstract zio.prelude.data.Optional<java.lang.String> ruleName();

  public abstract zio.prelude.data.Optional<java.lang.String> ruleARN();

  public abstract zio.prelude.data.Optional<java.lang.String> resourceARN();

  public abstract zio.prelude.data.Optional<java.lang.Object> priority();

  public abstract zio.prelude.data.Optional<java.lang.Object> fixedRate();

  public abstract zio.prelude.data.Optional<java.lang.Object> reservoirSize();

  public abstract zio.prelude.data.Optional<java.lang.String> host();

  public abstract zio.prelude.data.Optional<java.lang.String> serviceName();

  public abstract zio.prelude.data.Optional<java.lang.String> serviceType();

  public abstract zio.prelude.data.Optional<java.lang.String> httpMethod();

  public abstract zio.prelude.data.Optional<java.lang.String> urlPath();

  public abstract zio.prelude.data.Optional<scala.collection.immutable.Map<java.lang.String, java.lang.String>> attributes();

  public static zio.ZIO getRuleName$(zio.aws.xray.model.SamplingRuleUpdate$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #166                // InterfaceMethod getRuleName:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getRuleName();
    Code:
       0: getstatic     #172                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #173                // String ruleName
       5: aload_0
       6: invokedynamic #183,  0            // InvokeDynamic #12:apply:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/Function0;
      11: invokevirtual #187                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getRuleARN$(zio.aws.xray.model.SamplingRuleUpdate$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #191                // InterfaceMethod getRuleARN:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getRuleARN();
    Code:
       0: getstatic     #172                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #192                // String ruleARN
       5: aload_0
       6: invokedynamic #197,  0            // InvokeDynamic #13:apply:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/Function0;
      11: invokevirtual #187                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getResourceARN$(zio.aws.xray.model.SamplingRuleUpdate$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #201                // InterfaceMethod getResourceARN:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getResourceARN();
    Code:
       0: getstatic     #172                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #202                // String resourceARN
       5: aload_0
       6: invokedynamic #207,  0            // InvokeDynamic #14:apply:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/Function0;
      11: invokevirtual #187                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getPriority$(zio.aws.xray.model.SamplingRuleUpdate$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #211                // InterfaceMethod getPriority:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.Object> getPriority();
    Code:
       0: getstatic     #172                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #213                // String priority
       5: aload_0
       6: invokedynamic #218,  0            // InvokeDynamic #15:apply:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/Function0;
      11: invokevirtual #187                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getFixedRate$(zio.aws.xray.model.SamplingRuleUpdate$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #222                // InterfaceMethod getFixedRate:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.Object> getFixedRate();
    Code:
       0: getstatic     #172                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #223                // String fixedRate
       5: aload_0
       6: invokedynamic #228,  0            // InvokeDynamic #16:apply:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/Function0;
      11: invokevirtual #187                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getReservoirSize$(zio.aws.xray.model.SamplingRuleUpdate$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #232                // InterfaceMethod getReservoirSize:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.Object> getReservoirSize();
    Code:
       0: getstatic     #172                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #233                // String reservoirSize
       5: aload_0
       6: invokedynamic #238,  0            // InvokeDynamic #17:apply:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/Function0;
      11: invokevirtual #187                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getHost$(zio.aws.xray.model.SamplingRuleUpdate$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #242                // InterfaceMethod getHost:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getHost();
    Code:
       0: getstatic     #172                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #243                // String host
       5: aload_0
       6: invokedynamic #248,  0            // InvokeDynamic #18:apply:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/Function0;
      11: invokevirtual #187                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getServiceName$(zio.aws.xray.model.SamplingRuleUpdate$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #252                // InterfaceMethod getServiceName:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getServiceName();
    Code:
       0: getstatic     #172                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc           #253                // String serviceName
       5: aload_0
       6: invokedynamic #258,  0            // InvokeDynamic #19:apply:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/Function0;
      11: invokevirtual #187                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      14: areturn

  public static zio.ZIO getServiceType$(zio.aws.xray.model.SamplingRuleUpdate$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #262                // InterfaceMethod getServiceType:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getServiceType();
    Code:
       0: getstatic     #172                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc_w         #263                // String serviceType
       6: aload_0
       7: invokedynamic #268,  0            // InvokeDynamic #20:apply:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/Function0;
      12: invokevirtual #187                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      15: areturn

  public static zio.ZIO getHttpMethod$(zio.aws.xray.model.SamplingRuleUpdate$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #272                // InterfaceMethod getHttpMethod:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getHttpMethod();
    Code:
       0: getstatic     #172                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc_w         #273                // String httpMethod
       6: aload_0
       7: invokedynamic #278,  0            // InvokeDynamic #21:apply:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/Function0;
      12: invokevirtual #187                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      15: areturn

  public static zio.ZIO getUrlPath$(zio.aws.xray.model.SamplingRuleUpdate$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #282                // InterfaceMethod getUrlPath:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, java.lang.String> getUrlPath();
    Code:
       0: getstatic     #172                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc_w         #283                // String urlPath
       6: aload_0
       7: invokedynamic #288,  0            // InvokeDynamic #22:apply:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/Function0;
      12: invokevirtual #187                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      15: areturn

  public static zio.ZIO getAttributes$(zio.aws.xray.model.SamplingRuleUpdate$ReadOnly);
    Code:
       0: aload_0
       1: invokespecial #292                // InterfaceMethod getAttributes:()Lzio/ZIO;
       4: areturn

  public default zio.ZIO<java.lang.Object, zio.aws.core.AwsError, scala.collection.immutable.Map<java.lang.String, java.lang.String>> getAttributes();
    Code:
       0: getstatic     #172                // Field zio/aws/core/AwsError$.MODULE$:Lzio/aws/core/AwsError$;
       3: ldc_w         #294                // String attributes
       6: aload_0
       7: invokedynamic #299,  0            // InvokeDynamic #23:apply:(Lzio/aws/xray/model/SamplingRuleUpdate$ReadOnly;)Lscala/Function0;
      12: invokevirtual #187                // Method zio/aws/core/AwsError$.unwrapOptionField:(Ljava/lang/String;Lscala/Function0;)Lzio/ZIO;
      15: areturn

  private java.lang.String asEditable$$anonfun$1(java.lang.String);
    Code:
       0: aload_1
       1: areturn

  private java.lang.String asEditable$$anonfun$2(java.lang.String);
    Code:
       0: aload_1
       1: areturn

  private java.lang.String asEditable$$anonfun$3(java.lang.String);
    Code:
       0: aload_1
       1: areturn

  private int asEditable$$anonfun$4(int);
    Code:
       0: iload_1
       1: ireturn

  private double asEditable$$anonfun$5(double);
    Code:
       0: dload_1
       1: dreturn

  private int asEditable$$anonfun$6(int);
    Code:
       0: iload_1
       1: ireturn

  private java.lang.String asEditable$$anonfun$7(java.lang.String);
    Code:
       0: aload_1
       1: areturn

  private java.lang.String asEditable$$anonfun$8(java.lang.String);
    Code:
       0: aload_1
       1: areturn

  private java.lang.String asEditable$$anonfun$9(java.lang.String);
    Code:
       0: aload_1
       1: areturn

  private java.lang.String asEditable$$anonfun$10(java.lang.String);
    Code:
       0: aload_1
       1: areturn

  private java.lang.String asEditable$$anonfun$11(java.lang.String);
    Code:
       0: aload_1
       1: areturn

  private scala.collection.immutable.Map asEditable$$anonfun$12(scala.collection.immutable.Map);
    Code:
       0: aload_1
       1: areturn

  private zio.prelude.data.Optional getRuleName$$anonfun$1();
    Code:
       0: aload_0
       1: invokeinterface #26,  1           // InterfaceMethod ruleName:()Lzio/prelude/data/Optional;
       6: areturn

  private zio.prelude.data.Optional getRuleARN$$anonfun$1();
    Code:
       0: aload_0
       1: invokeinterface #56,  1           // InterfaceMethod ruleARN:()Lzio/prelude/data/Optional;
       6: areturn

  private zio.prelude.data.Optional getResourceARN$$anonfun$1();
    Code:
       0: aload_0
       1: invokeinterface #64,  1           // InterfaceMethod resourceARN:()Lzio/prelude/data/Optional;
       6: areturn

  private zio.prelude.data.Optional getPriority$$anonfun$1();
    Code:
       0: aload_0
       1: invokeinterface #72,  1           // InterfaceMethod priority:()Lzio/prelude/data/Optional;
       6: areturn

  private zio.prelude.data.Optional getFixedRate$$anonfun$1();
    Code:
       0: aload_0
       1: invokeinterface #85,  1           // InterfaceMethod fixedRate:()Lzio/prelude/data/Optional;
       6: areturn

  private zio.prelude.data.Optional getReservoirSize$$anonfun$1();
    Code:
       0: aload_0
       1: invokeinterface #98,  1           // InterfaceMethod reservoirSize:()Lzio/prelude/data/Optional;
       6: areturn

  private zio.prelude.data.Optional getHost$$anonfun$1();
    Code:
       0: aload_0
       1: invokeinterface #106,  1          // InterfaceMethod host:()Lzio/prelude/data/Optional;
       6: areturn

  private zio.prelude.data.Optional getServiceName$$anonfun$1();
    Code:
       0: aload_0
       1: invokeinterface #114,  1          // InterfaceMethod serviceName:()Lzio/prelude/data/Optional;
       6: areturn

  private zio.prelude.data.Optional getServiceType$$anonfun$1();
    Code:
       0: aload_0
       1: invokeinterface #122,  1          // InterfaceMethod serviceType:()Lzio/prelude/data/Optional;
       6: areturn

  private zio.prelude.data.Optional getHttpMethod$$anonfun$1();
    Code:
       0: aload_0
       1: invokeinterface #130,  1          // InterfaceMethod httpMethod:()Lzio/prelude/data/Optional;
       6: areturn

  private zio.prelude.data.Optional getUrlPath$$anonfun$1();
    Code:
       0: aload_0
       1: invokeinterface #138,  1          // InterfaceMethod urlPath:()Lzio/prelude/data/Optional;
       6: areturn

  private zio.prelude.data.Optional getAttributes$$anonfun$1();
    Code:
       0: aload_0
       1: invokeinterface #146,  1          // InterfaceMethod attributes:()Lzio/prelude/data/Optional;
       6: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #316,  0            // InvokeDynamic #24:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
