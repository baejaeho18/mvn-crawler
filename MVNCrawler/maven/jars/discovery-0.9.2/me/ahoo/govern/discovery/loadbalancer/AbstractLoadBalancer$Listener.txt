Compiled from "AbstractLoadBalancer.java"
class me.ahoo.govern.discovery.loadbalancer.AbstractLoadBalancer$Listener implements me.ahoo.govern.discovery.ServiceChangedListener {
  final me.ahoo.govern.discovery.loadbalancer.AbstractLoadBalancer this$0;

  private me.ahoo.govern.discovery.loadbalancer.AbstractLoadBalancer$Listener(me.ahoo.govern.discovery.loadbalancer.AbstractLoadBalancer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lme/ahoo/govern/discovery/loadbalancer/AbstractLoadBalancer;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: return

  public void onChange(me.ahoo.govern.discovery.NamespacedServiceId, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lme/ahoo/govern/discovery/loadbalancer/AbstractLoadBalancer;
       4: invokestatic  #4                  // Method me/ahoo/govern/discovery/loadbalancer/AbstractLoadBalancer.access$000:(Lme/ahoo/govern/discovery/loadbalancer/AbstractLoadBalancer;)Ljava/util/concurrent/ConcurrentHashMap;
       7: aload_1
       8: aload_0
       9: aload_1
      10: invokedynamic #5,  0              // InvokeDynamic #0:apply:(Lme/ahoo/govern/discovery/loadbalancer/AbstractLoadBalancer$Listener;Lme/ahoo/govern/discovery/NamespacedServiceId;)Ljava/util/function/BiFunction;
      15: invokevirtual #6                  // Method java/util/concurrent/ConcurrentHashMap.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      18: pop
      19: return

  private java.util.concurrent.CompletableFuture lambda$onChange$1(me.ahoo.govern.discovery.NamespacedServiceId, me.ahoo.govern.discovery.NamespacedServiceId, java.util.concurrent.CompletableFuture);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lme/ahoo/govern/discovery/loadbalancer/AbstractLoadBalancer;
       4: invokestatic  #7                  // Method me/ahoo/govern/discovery/loadbalancer/AbstractLoadBalancer.access$100:(Lme/ahoo/govern/discovery/loadbalancer/AbstractLoadBalancer;)Lme/ahoo/govern/discovery/redis/ConsistencyRedisServiceDiscovery;
       7: aload_1
       8: invokevirtual #8                  // Method me/ahoo/govern/discovery/NamespacedServiceId.getNamespace:()Ljava/lang/String;
      11: aload_1
      12: invokevirtual #9                  // Method me/ahoo/govern/discovery/NamespacedServiceId.getServiceId:()Ljava/lang/String;
      15: invokevirtual #10                 // Method me/ahoo/govern/discovery/redis/ConsistencyRedisServiceDiscovery.getInstances:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
      18: aload_0
      19: invokedynamic #11,  0             // InvokeDynamic #1:apply:(Lme/ahoo/govern/discovery/loadbalancer/AbstractLoadBalancer$Listener;)Ljava/util/function/Function;
      24: invokevirtual #12                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      27: areturn

  private me.ahoo.govern.discovery.loadbalancer.LoadBalancer$Chooser lambda$null$0(java.util.List);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lme/ahoo/govern/discovery/loadbalancer/AbstractLoadBalancer;
       4: aload_1
       5: invokevirtual #13                 // Method me/ahoo/govern/discovery/loadbalancer/AbstractLoadBalancer.createChooser:(Ljava/util/List;)Lme/ahoo/govern/discovery/loadbalancer/LoadBalancer$Chooser;
       8: areturn

  me.ahoo.govern.discovery.loadbalancer.AbstractLoadBalancer$Listener(me.ahoo.govern.discovery.loadbalancer.AbstractLoadBalancer, me.ahoo.govern.discovery.loadbalancer.AbstractLoadBalancer$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lme/ahoo/govern/discovery/loadbalancer/AbstractLoadBalancer;)V
       5: return
}
