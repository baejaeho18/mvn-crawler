Compiled from "RenewInstanceService.java"
public class me.ahoo.govern.discovery.RenewInstanceService {
  private static final org.slf4j.Logger log;

  private volatile boolean running;

  private final me.ahoo.govern.discovery.RenewProperties renewProperties;

  private final me.ahoo.govern.discovery.ServiceRegistry serviceRegistry;

  private final java.util.concurrent.ScheduledExecutorService scheduledExecutorService;

  public me.ahoo.govern.discovery.RenewInstanceService(me.ahoo.govern.discovery.RenewProperties, me.ahoo.govern.discovery.ServiceRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #1                  // class java/util/concurrent/ScheduledThreadPoolExecutor
       6: dup
       7: iconst_1
       8: invokestatic  #2                  // Method createThreadFactory:()Ljava/util/concurrent/ThreadFactory;
      11: invokespecial #3                  // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/ThreadFactory;)V
      14: invokespecial #4                  // Method "<init>":(Lme/ahoo/govern/discovery/RenewProperties;Lme/ahoo/govern/discovery/ServiceRegistry;Ljava/util/concurrent/ScheduledExecutorService;)V
      17: return

  public me.ahoo.govern.discovery.RenewInstanceService(me.ahoo.govern.discovery.RenewProperties, me.ahoo.govern.discovery.ServiceRegistry, java.util.concurrent.ScheduledExecutorService);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #6                  // Field renewProperties:Lme/ahoo/govern/discovery/RenewProperties;
       9: aload_0
      10: aload_2
      11: putfield      #7                  // Field serviceRegistry:Lme/ahoo/govern/discovery/ServiceRegistry;
      14: aload_0
      15: aload_3
      16: putfield      #8                  // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
      19: return

  public void start();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isRunning:()Z
       4: ifeq          8
       7: return
       8: getstatic     #10                 // Field log:Lorg/slf4j/Logger;
      11: ldc           #11                 // String start.
      13: invokeinterface #12,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      18: aload_0
      19: iconst_1
      20: putfield      #13                 // Field running:Z
      23: aload_0
      24: getfield      #8                  // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
      27: aload_0
      28: invokedynamic #14,  0             // InvokeDynamic #0:run:(Lme/ahoo/govern/discovery/RenewInstanceService;)Ljava/lang/Runnable;
      33: aload_0
      34: getfield      #6                  // Field renewProperties:Lme/ahoo/govern/discovery/RenewProperties;
      37: invokevirtual #15                 // Method me/ahoo/govern/discovery/RenewProperties.getInitialDelay:()I
      40: i2l
      41: aload_0
      42: getfield      #6                  // Field renewProperties:Lme/ahoo/govern/discovery/RenewProperties;
      45: invokevirtual #16                 // Method me/ahoo/govern/discovery/RenewProperties.getPeriod:()I
      48: i2l
      49: getstatic     #17                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      52: invokeinterface #18,  7           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      57: pop
      58: return

  public boolean isRunning();
    Code:
       0: aload_0
       1: getfield      #13                 // Field running:Z
       4: ireturn

  public void stop();
    Code:
       0: aload_0
       1: getfield      #13                 // Field running:Z
       4: ifne          8
       7: return
       8: getstatic     #10                 // Field log:Lorg/slf4j/Logger;
      11: ldc           #19                 // String stop.
      13: invokeinterface #12,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      18: aload_0
      19: iconst_0
      20: putfield      #13                 // Field running:Z
      23: aload_0
      24: getfield      #8                  // Field scheduledExecutorService:Ljava/util/concurrent/ScheduledExecutorService;
      27: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
      32: return

  private void renew();
    Code:
       0: aload_0
       1: getfield      #7                  // Field serviceRegistry:Lme/ahoo/govern/discovery/ServiceRegistry;
       4: invokeinterface #21,  1           // InterfaceMethod me/ahoo/govern/discovery/ServiceRegistry.getRegisteredEphemeralInstances:()Ljava/util/Set;
       9: astore_1
      10: getstatic     #10                 // Field log:Lorg/slf4j/Logger;
      13: ldc           #22                 // String renew - instances size:{}.
      15: aload_1
      16: invokeinterface #23,  1           // InterfaceMethod java/util/Set.size:()I
      21: invokestatic  #24                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      24: invokeinterface #25,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      29: aload_1
      30: invokeinterface #26,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      35: ifeq          39
      38: return
      39: aload_1
      40: invokeinterface #23,  1           // InterfaceMethod java/util/Set.size:()I
      45: anewarray     #27                 // class java/util/concurrent/CompletableFuture
      48: astore_2
      49: aload_1
      50: invokeinterface #28,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      55: astore_3
      56: iconst_0
      57: istore        4
      59: iload         4
      61: aload_2
      62: arraylength
      63: if_icmpge     106
      66: aload_3
      67: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      72: checkcast     #30                 // class me/ahoo/govern/discovery/NamespacedServiceInstance
      75: astore        5
      77: aload_2
      78: iload         4
      80: aload_0
      81: getfield      #7                  // Field serviceRegistry:Lme/ahoo/govern/discovery/ServiceRegistry;
      84: aload         5
      86: invokevirtual #31                 // Method me/ahoo/govern/discovery/NamespacedServiceInstance.getNamespace:()Ljava/lang/String;
      89: aload         5
      91: invokevirtual #32                 // Method me/ahoo/govern/discovery/NamespacedServiceInstance.getServiceInstance:()Lme/ahoo/govern/discovery/ServiceInstance;
      94: invokeinterface #33,  3           // InterfaceMethod me/ahoo/govern/discovery/ServiceRegistry.renew:(Ljava/lang/String;Lme/ahoo/govern/discovery/ServiceInstance;)Ljava/util/concurrent/CompletableFuture;
      99: aastore
     100: iinc          4, 1
     103: goto          59
     106: aload_2
     107: invokestatic  #34                 // Method java/util/concurrent/CompletableFuture.allOf:([Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;
     110: invokevirtual #35                 // Method java/util/concurrent/CompletableFuture.join:()Ljava/lang/Object;
     113: pop
     114: return

  private static java.util.concurrent.ThreadFactory createThreadFactory();
    Code:
       0: new           #36                 // class com/google/common/util/concurrent/ThreadFactoryBuilder
       3: dup
       4: invokespecial #37                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder."<init>":()V
       7: new           #38                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      14: ldc           #40                 // class me/ahoo/govern/discovery/RenewInstanceService
      16: invokevirtual #41                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      19: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #43                 // String -%d
      24: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokevirtual #45                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder.setNameFormat:(Ljava/lang/String;)Lcom/google/common/util/concurrent/ThreadFactoryBuilder;
      33: iconst_1
      34: invokevirtual #46                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder.setDaemon:(Z)Lcom/google/common/util/concurrent/ThreadFactoryBuilder;
      37: invokevirtual #47                 // Method com/google/common/util/concurrent/ThreadFactoryBuilder.build:()Ljava/util/concurrent/ThreadFactory;
      40: areturn

  static {};
    Code:
       0: ldc           #40                 // class me/ahoo/govern/discovery/RenewInstanceService
       2: invokestatic  #48                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #10                 // Field log:Lorg/slf4j/Logger;
       8: return
}
