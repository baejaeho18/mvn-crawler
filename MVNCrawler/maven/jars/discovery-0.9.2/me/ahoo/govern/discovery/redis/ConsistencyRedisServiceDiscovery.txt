Compiled from "ConsistencyRedisServiceDiscovery.java"
public class me.ahoo.govern.discovery.redis.ConsistencyRedisServiceDiscovery implements me.ahoo.govern.discovery.ServiceDiscovery,me.ahoo.govern.discovery.ServiceListenable {
  private static final org.slf4j.Logger log;

  private final me.ahoo.govern.discovery.ServiceDiscovery delegate;

  private final me.ahoo.govern.core.listener.MessageListenable messageListenable;

  private final me.ahoo.govern.discovery.redis.ConsistencyRedisServiceDiscovery$ServiceIdxListener serviceIdxListener;

  private final me.ahoo.govern.discovery.redis.ConsistencyRedisServiceDiscovery$InstanceListener instanceListener;

  private final java.util.concurrent.ConcurrentHashMap<me.ahoo.govern.discovery.NamespacedServiceId, java.util.concurrent.CompletableFuture<java.util.concurrent.CopyOnWriteArrayList<me.ahoo.govern.discovery.ServiceInstance>>> serviceMapInstances;

  private final java.util.concurrent.ConcurrentHashMap<me.ahoo.govern.discovery.NamespacedServiceId, java.util.concurrent.CopyOnWriteArraySet<me.ahoo.govern.discovery.ServiceChangedListener>> serviceMapListener;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, java.util.concurrent.CompletableFuture<java.util.Set<java.lang.String>>> namespaceMapServices;

  public me.ahoo.govern.discovery.redis.ConsistencyRedisServiceDiscovery(me.ahoo.govern.discovery.ServiceDiscovery, me.ahoo.govern.core.listener.MessageListenable);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #8                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #1                  // Field serviceMapInstances:Ljava/util/concurrent/ConcurrentHashMap;
      15: aload_0
      16: new           #7                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #8                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #3                  // Field namespaceMapServices:Ljava/util/concurrent/ConcurrentHashMap;
      26: aload_0
      27: new           #7                  // class java/util/concurrent/ConcurrentHashMap
      30: dup
      31: invokespecial #8                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      34: putfield      #2                  // Field serviceMapListener:Ljava/util/concurrent/ConcurrentHashMap;
      37: aload_0
      38: aload_1
      39: putfield      #4                  // Field delegate:Lme/ahoo/govern/discovery/ServiceDiscovery;
      42: aload_0
      43: aload_2
      44: putfield      #9                  // Field messageListenable:Lme/ahoo/govern/core/listener/MessageListenable;
      47: aload_0
      48: new           #10                 // class me/ahoo/govern/discovery/redis/ConsistencyRedisServiceDiscovery$ServiceIdxListener
      51: dup
      52: aload_0
      53: aconst_null
      54: invokespecial #11                 // Method me/ahoo/govern/discovery/redis/ConsistencyRedisServiceDiscovery$ServiceIdxListener."<init>":(Lme/ahoo/govern/discovery/redis/ConsistencyRedisServiceDiscovery;Lme/ahoo/govern/discovery/redis/ConsistencyRedisServiceDiscovery$1;)V
      57: putfield      #12                 // Field serviceIdxListener:Lme/ahoo/govern/discovery/redis/ConsistencyRedisServiceDiscovery$ServiceIdxListener;
      60: aload_0
      61: new           #13                 // class me/ahoo/govern/discovery/redis/ConsistencyRedisServiceDiscovery$InstanceListener
      64: dup
      65: aload_0
      66: aconst_null
      67: invokespecial #14                 // Method me/ahoo/govern/discovery/redis/ConsistencyRedisServiceDiscovery$InstanceListener."<init>":(Lme/ahoo/govern/discovery/redis/ConsistencyRedisServiceDiscovery;Lme/ahoo/govern/discovery/redis/ConsistencyRedisServiceDiscovery$1;)V
      70: putfield      #15                 // Field instanceListener:Lme/ahoo/govern/discovery/redis/ConsistencyRedisServiceDiscovery$InstanceListener;
      73: return

  public java.util.concurrent.CompletableFuture<java.util.Set<java.lang.String>> getServices(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field namespaceMapServices:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: aload_0
       6: aload_1
       7: invokedynamic #16,  0             // InvokeDynamic #0:apply:(Lme/ahoo/govern/discovery/redis/ConsistencyRedisServiceDiscovery;Ljava/lang/String;)Ljava/util/function/Function;
      12: invokevirtual #17                 // Method java/util/concurrent/ConcurrentHashMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      15: checkcast     #18                 // class java/util/concurrent/CompletableFuture
      18: areturn

  public java.util.concurrent.CompletableFuture<java.util.Set<java.lang.String>> getServices();
    Code:
       0: aload_0
       1: getstatic     #19                 // Field me/ahoo/govern/core/NamespacedContext.GLOBAL:Lme/ahoo/govern/core/NamespacedContext;
       4: invokeinterface #20,  1           // InterfaceMethod me/ahoo/govern/core/NamespacedContext.getNamespace:()Ljava/lang/String;
       9: invokevirtual #21                 // Method getServices:(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
      12: areturn

  public java.util.concurrent.CompletableFuture<java.util.List<me.ahoo.govern.discovery.ServiceInstance>> getInstances(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #19                 // Field me/ahoo/govern/core/NamespacedContext.GLOBAL:Lme/ahoo/govern/core/NamespacedContext;
       4: invokeinterface #20,  1           // InterfaceMethod me/ahoo/govern/core/NamespacedContext.getNamespace:()Ljava/lang/String;
       9: aload_1
      10: invokevirtual #22                 // Method getInstances:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
      13: areturn

  public java.util.concurrent.CompletableFuture<java.util.List<me.ahoo.govern.discovery.ServiceInstance>> getInstances(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field serviceMapInstances:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: aload_2
       6: invokestatic  #23                 // Method me/ahoo/govern/discovery/NamespacedServiceId.of:(Ljava/lang/String;Ljava/lang/String;)Lme/ahoo/govern/discovery/NamespacedServiceId;
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokedynamic #24,  0             // InvokeDynamic #1:apply:(Lme/ahoo/govern/discovery/redis/ConsistencyRedisServiceDiscovery;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Function;
      17: invokevirtual #17                 // Method java/util/concurrent/ConcurrentHashMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      20: checkcast     #18                 // class java/util/concurrent/CompletableFuture
      23: invokedynamic #25,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      28: invokevirtual #26                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      31: areturn

  public java.util.concurrent.CompletableFuture<me.ahoo.govern.discovery.ServiceInstance> getInstance0(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #23                 // Method me/ahoo/govern/discovery/NamespacedServiceId.of:(Ljava/lang/String;Ljava/lang/String;)Lme/ahoo/govern/discovery/NamespacedServiceId;
       5: astore        4
       7: aload_0
       8: getfield      #1                  // Field serviceMapInstances:Ljava/util/concurrent/ConcurrentHashMap;
      11: aload         4
      13: invokevirtual #27                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #18                 // class java/util/concurrent/CompletableFuture
      19: astore        5
      21: aload         5
      23: invokestatic  #28                 // Method java/util/Objects.isNull:(Ljava/lang/Object;)Z
      26: ifeq          34
      29: aconst_null
      30: invokestatic  #29                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      33: areturn
      34: aload         5
      36: aload_3
      37: invokedynamic #30,  0             // InvokeDynamic #3:apply:(Ljava/lang/String;)Ljava/util/function/Function;
      42: invokevirtual #26                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      45: areturn

  public java.util.concurrent.CompletableFuture<me.ahoo.govern.discovery.ServiceInstance> getInstance(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #31                 // Method getInstance0:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokedynamic #32,  0             // InvokeDynamic #4:apply:(Lme/ahoo/govern/discovery/redis/ConsistencyRedisServiceDiscovery;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Function;
      16: invokevirtual #33                 // Method java/util/concurrent/CompletableFuture.thenCompose:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      19: areturn

  public java.util.concurrent.CompletableFuture<java.lang.Long> getInstanceTtl(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #31                 // Method getInstance0:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokedynamic #34,  0             // InvokeDynamic #5:apply:(Lme/ahoo/govern/discovery/redis/ConsistencyRedisServiceDiscovery;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Function;
      16: invokevirtual #33                 // Method java/util/concurrent/CompletableFuture.thenCompose:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      19: areturn

  public java.util.concurrent.CompletableFuture<java.lang.Void> addListener(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #35                 // Method getPatternTopic:(Ljava/lang/String;Ljava/lang/String;)Lme/ahoo/govern/core/listener/PatternTopic;
       6: astore_3
       7: aload_0
       8: getfield      #9                  // Field messageListenable:Lme/ahoo/govern/core/listener/MessageListenable;
      11: aload_3
      12: aload_0
      13: getfield      #15                 // Field instanceListener:Lme/ahoo/govern/discovery/redis/ConsistencyRedisServiceDiscovery$InstanceListener;
      16: invokeinterface #36,  3           // InterfaceMethod me/ahoo/govern/core/listener/MessageListenable.addListener:(Lme/ahoo/govern/core/listener/Topic;Lme/ahoo/govern/core/listener/MessageListener;)Ljava/util/concurrent/CompletableFuture;
      21: areturn

  public void addListener(me.ahoo.govern.discovery.NamespacedServiceId, me.ahoo.govern.discovery.ServiceChangedListener);
    Code:
       0: aload_0
       1: getfield      #2                  // Field serviceMapListener:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: aload_2
       6: invokedynamic #37,  0             // InvokeDynamic #6:apply:(Lme/ahoo/govern/discovery/ServiceChangedListener;)Ljava/util/function/BiFunction;
      11: invokevirtual #38                 // Method java/util/concurrent/ConcurrentHashMap.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      14: pop
      15: return

  public void removeListener(me.ahoo.govern.discovery.NamespacedServiceId, me.ahoo.govern.discovery.ServiceChangedListener);
    Code:
       0: aload_0
       1: getfield      #2                  // Field serviceMapListener:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: aload_2
       6: invokedynamic #39,  0             // InvokeDynamic #7:apply:(Lme/ahoo/govern/discovery/ServiceChangedListener;)Ljava/util/function/BiFunction;
      11: invokevirtual #38                 // Method java/util/concurrent/ConcurrentHashMap.compute:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      14: pop
      15: return

  public java.util.concurrent.Future<java.lang.Void> removeListener(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #35                 // Method getPatternTopic:(Ljava/lang/String;Ljava/lang/String;)Lme/ahoo/govern/core/listener/PatternTopic;
       6: astore_3
       7: aload_0
       8: getfield      #9                  // Field messageListenable:Lme/ahoo/govern/core/listener/MessageListenable;
      11: aload_3
      12: aload_0
      13: getfield      #15                 // Field instanceListener:Lme/ahoo/govern/discovery/redis/ConsistencyRedisServiceDiscovery$InstanceListener;
      16: invokeinterface #40,  3           // InterfaceMethod me/ahoo/govern/core/listener/MessageListenable.removeListener:(Lme/ahoo/govern/core/listener/Topic;Lme/ahoo/govern/core/listener/MessageListener;)Ljava/util/concurrent/CompletableFuture;
      21: areturn

  private me.ahoo.govern.core.listener.PatternTopic getPatternTopic(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #41                 // Method me/ahoo/govern/discovery/DiscoveryKeyGenerator.getInstanceKeyPatternOfService:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       5: astore_3
       6: aload_3
       7: invokestatic  #42                 // Method me/ahoo/govern/core/listener/PatternTopic.of:(Ljava/lang/String;)Lme/ahoo/govern/core/listener/PatternTopic;
      10: astore        4
      12: aload         4
      14: areturn

  private static java.util.concurrent.CopyOnWriteArraySet lambda$removeListener$12(me.ahoo.govern.discovery.ServiceChangedListener, me.ahoo.govern.discovery.NamespacedServiceId, java.util.concurrent.CopyOnWriteArraySet);
    Code:
       0: aload_2
       1: invokestatic  #28                 // Method java/util/Objects.isNull:(Ljava/lang/Object;)Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_2
      10: astore_3
      11: aload_3
      12: aload_0
      13: invokevirtual #43                 // Method java/util/concurrent/CopyOnWriteArraySet.remove:(Ljava/lang/Object;)Z
      16: pop
      17: aload_3
      18: areturn

  private static java.util.concurrent.CopyOnWriteArraySet lambda$addListener$11(me.ahoo.govern.discovery.ServiceChangedListener, me.ahoo.govern.discovery.NamespacedServiceId, java.util.concurrent.CopyOnWriteArraySet);
    Code:
       0: aload_2
       1: astore_3
       2: aload_2
       3: invokestatic  #28                 // Method java/util/Objects.isNull:(Ljava/lang/Object;)Z
       6: ifeq          17
       9: new           #44                 // class java/util/concurrent/CopyOnWriteArraySet
      12: dup
      13: invokespecial #45                 // Method java/util/concurrent/CopyOnWriteArraySet."<init>":()V
      16: astore_3
      17: aload_3
      18: aload_0
      19: invokevirtual #46                 // Method java/util/concurrent/CopyOnWriteArraySet.add:(Ljava/lang/Object;)Z
      22: pop
      23: aload_3
      24: areturn

  private java.util.concurrent.CompletionStage lambda$getInstanceTtl$10(java.lang.String, java.lang.String, java.lang.String, me.ahoo.govern.discovery.ServiceInstance);
    Code:
       0: getstatic     #47                 // Field me/ahoo/govern/discovery/ServiceInstance.NOT_FOUND:Lme/ahoo/govern/discovery/ServiceInstance;
       3: aload         4
       5: invokevirtual #48                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       8: ifeq          16
      11: aconst_null
      12: invokestatic  #29                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      15: areturn
      16: aload         4
      18: invokestatic  #28                 // Method java/util/Objects.isNull:(Ljava/lang/Object;)Z
      21: ifeq          37
      24: aload_0
      25: getfield      #4                  // Field delegate:Lme/ahoo/govern/discovery/ServiceDiscovery;
      28: aload_1
      29: aload_2
      30: aload_3
      31: invokeinterface #49,  4           // InterfaceMethod me/ahoo/govern/discovery/ServiceDiscovery.getInstanceTtl:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
      36: areturn
      37: aload         4
      39: invokevirtual #50                 // Method me/ahoo/govern/discovery/ServiceInstance.getTtlAt:()J
      42: invokestatic  #51                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      45: invokestatic  #29                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      48: areturn

  private java.util.concurrent.CompletionStage lambda$getInstance$9(java.lang.String, java.lang.String, java.lang.String, me.ahoo.govern.discovery.ServiceInstance);
    Code:
       0: getstatic     #47                 // Field me/ahoo/govern/discovery/ServiceInstance.NOT_FOUND:Lme/ahoo/govern/discovery/ServiceInstance;
       3: aload         4
       5: invokevirtual #48                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       8: ifeq          16
      11: aconst_null
      12: invokestatic  #29                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      15: areturn
      16: aload         4
      18: invokestatic  #28                 // Method java/util/Objects.isNull:(Ljava/lang/Object;)Z
      21: ifeq          37
      24: aload_0
      25: getfield      #4                  // Field delegate:Lme/ahoo/govern/discovery/ServiceDiscovery;
      28: aload_1
      29: aload_2
      30: aload_3
      31: invokeinterface #52,  4           // InterfaceMethod me/ahoo/govern/discovery/ServiceDiscovery.getInstance:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
      36: areturn
      37: aload         4
      39: invokestatic  #29                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      42: areturn

  private static me.ahoo.govern.discovery.ServiceInstance lambda$getInstance0$8(java.lang.String, java.util.concurrent.CopyOnWriteArrayList);
    Code:
       0: aload_1
       1: invokestatic  #28                 // Method java/util/Objects.isNull:(Ljava/lang/Object;)Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_1
      10: invokevirtual #53                 // Method java/util/concurrent/CopyOnWriteArrayList.stream:()Ljava/util/stream/Stream;
      13: aload_0
      14: invokedynamic #54,  0             // InvokeDynamic #8:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
      19: invokeinterface #55,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      24: invokeinterface #56,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      29: astore_2
      30: aload_2
      31: getstatic     #47                 // Field me/ahoo/govern/discovery/ServiceInstance.NOT_FOUND:Lme/ahoo/govern/discovery/ServiceInstance;
      34: invokevirtual #57                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #58                 // class me/ahoo/govern/discovery/ServiceInstance
      40: areturn

  private static boolean lambda$null$7(java.lang.String, me.ahoo.govern.discovery.ServiceInstance);
    Code:
       0: aload_1
       1: invokevirtual #59                 // Method me/ahoo/govern/discovery/ServiceInstance.getInstanceId:()Ljava/lang/String;
       4: aload_0
       5: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       8: ireturn

  private static java.util.List lambda$getInstances$6(java.util.concurrent.CopyOnWriteArrayList);
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method java/util/concurrent/CopyOnWriteArrayList.stream:()Ljava/util/stream/Stream;
       4: invokedynamic #61,  0             // InvokeDynamic #9:test:()Ljava/util/function/Predicate;
       9: invokeinterface #55,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      14: invokestatic  #62                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      17: invokeinterface #63,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      22: checkcast     #64                 // class java/util/List
      25: areturn

  private static boolean lambda$null$5(me.ahoo.govern.discovery.ServiceInstance);
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method me/ahoo/govern/discovery/ServiceInstance.isExpired:()Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private java.util.concurrent.CompletableFuture lambda$getInstances$4(java.lang.String, java.lang.String, me.ahoo.govern.discovery.NamespacedServiceId);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #66                 // Method addListener:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokedynamic #67,  0             // InvokeDynamic #10:apply:(Lme/ahoo/govern/discovery/redis/ConsistencyRedisServiceDiscovery;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Function;
      14: invokevirtual #33                 // Method java/util/concurrent/CompletableFuture.thenCompose:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      17: areturn

  private java.util.concurrent.CompletionStage lambda$null$3(java.lang.String, java.lang.String, java.lang.Void);
    Code:
       0: aload_0
       1: getfield      #4                  // Field delegate:Lme/ahoo/govern/discovery/ServiceDiscovery;
       4: aload_1
       5: aload_2
       6: invokeinterface #68,  3           // InterfaceMethod me/ahoo/govern/discovery/ServiceDiscovery.getInstances:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
      11: invokedynamic #69,  0             // InvokeDynamic #11:apply:()Ljava/util/function/Function;
      16: invokevirtual #26                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      19: areturn

  private static java.util.concurrent.CopyOnWriteArrayList lambda$null$2(java.util.List);
    Code:
       0: new           #70                 // class java/util/concurrent/CopyOnWriteArrayList
       3: dup
       4: aload_0
       5: invokespecial #71                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":(Ljava/util/Collection;)V
       8: areturn

  private java.util.concurrent.CompletableFuture lambda$getServices$1(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #72                 // Method me/ahoo/govern/discovery/DiscoveryKeyGenerator.getServiceIdxKey:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_3
       5: aload_3
       6: invokestatic  #73                 // Method me/ahoo/govern/core/listener/ChannelTopic.of:(Ljava/lang/String;)Lme/ahoo/govern/core/listener/ChannelTopic;
       9: astore        4
      11: aload_0
      12: getfield      #9                  // Field messageListenable:Lme/ahoo/govern/core/listener/MessageListenable;
      15: aload         4
      17: aload_0
      18: getfield      #12                 // Field serviceIdxListener:Lme/ahoo/govern/discovery/redis/ConsistencyRedisServiceDiscovery$ServiceIdxListener;
      21: invokeinterface #36,  3           // InterfaceMethod me/ahoo/govern/core/listener/MessageListenable.addListener:(Lme/ahoo/govern/core/listener/Topic;Lme/ahoo/govern/core/listener/MessageListener;)Ljava/util/concurrent/CompletableFuture;
      26: aload_0
      27: aload_1
      28: invokedynamic #74,  0             // InvokeDynamic #12:apply:(Lme/ahoo/govern/discovery/redis/ConsistencyRedisServiceDiscovery;Ljava/lang/String;)Ljava/util/function/Function;
      33: invokevirtual #33                 // Method java/util/concurrent/CompletableFuture.thenCompose:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      36: areturn

  private java.util.concurrent.CompletionStage lambda$null$0(java.lang.String, java.lang.Void);
    Code:
       0: aload_0
       1: getfield      #4                  // Field delegate:Lme/ahoo/govern/discovery/ServiceDiscovery;
       4: aload_1
       5: invokeinterface #75,  2           // InterfaceMethod me/ahoo/govern/discovery/ServiceDiscovery.getServices:(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
      10: areturn

  static org.slf4j.Logger access$200();
    Code:
       0: getstatic     #5                  // Field log:Lorg/slf4j/Logger;
       3: areturn

  static me.ahoo.govern.discovery.ServiceDiscovery access$300(me.ahoo.govern.discovery.redis.ConsistencyRedisServiceDiscovery);
    Code:
       0: aload_0
       1: getfield      #4                  // Field delegate:Lme/ahoo/govern/discovery/ServiceDiscovery;
       4: areturn

  static java.util.concurrent.ConcurrentHashMap access$400(me.ahoo.govern.discovery.redis.ConsistencyRedisServiceDiscovery);
    Code:
       0: aload_0
       1: getfield      #3                  // Field namespaceMapServices:Ljava/util/concurrent/ConcurrentHashMap;
       4: areturn

  static java.util.concurrent.ConcurrentHashMap access$500(me.ahoo.govern.discovery.redis.ConsistencyRedisServiceDiscovery);
    Code:
       0: aload_0
       1: getfield      #2                  // Field serviceMapListener:Ljava/util/concurrent/ConcurrentHashMap;
       4: areturn

  static java.util.concurrent.ConcurrentHashMap access$600(me.ahoo.govern.discovery.redis.ConsistencyRedisServiceDiscovery);
    Code:
       0: aload_0
       1: getfield      #1                  // Field serviceMapInstances:Ljava/util/concurrent/ConcurrentHashMap;
       4: areturn

  static {};
    Code:
       0: ldc           #76                 // class me/ahoo/govern/discovery/redis/ConsistencyRedisServiceDiscovery
       2: invokestatic  #77                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #5                  // Field log:Lorg/slf4j/Logger;
       8: return
}
