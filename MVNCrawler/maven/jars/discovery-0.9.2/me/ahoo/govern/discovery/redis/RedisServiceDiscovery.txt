Compiled from "RedisServiceDiscovery.java"
public class me.ahoo.govern.discovery.redis.RedisServiceDiscovery implements me.ahoo.govern.discovery.ServiceDiscovery {
  private static final org.slf4j.Logger log;

  private final io.lettuce.core.cluster.api.async.RedisClusterAsyncCommands<java.lang.String, java.lang.String> redisCommands;

  public me.ahoo.govern.discovery.redis.RedisServiceDiscovery(io.lettuce.core.cluster.api.async.RedisClusterAsyncCommands<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field redisCommands:Lio/lettuce/core/cluster/api/async/RedisClusterAsyncCommands;
       9: return

  public java.util.concurrent.CompletableFuture<java.util.List<me.ahoo.govern.discovery.ServiceInstance>> getInstances(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #3                  // Field me/ahoo/govern/core/NamespacedContext.GLOBAL:Lme/ahoo/govern/core/NamespacedContext;
       4: invokeinterface #4,  1            // InterfaceMethod me/ahoo/govern/core/NamespacedContext.getNamespace:()Ljava/lang/String;
       9: aload_1
      10: invokevirtual #5                  // Method getInstances:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
      13: areturn

  public java.util.concurrent.CompletableFuture<java.util.List<me.ahoo.govern.discovery.ServiceInstance>> getInstances(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field redisCommands:Lio/lettuce/core/cluster/api/async/RedisClusterAsyncCommands;
       4: invokestatic  #6                  // Method me/ahoo/govern/discovery/redis/DiscoveryRedisScripts.loadDiscoveryGetInstances:(Lio/lettuce/core/api/async/RedisScriptingAsyncCommands;)Ljava/util/concurrent/CompletableFuture;
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokedynamic #7,  0              // InvokeDynamic #0:apply:(Lme/ahoo/govern/discovery/redis/RedisServiceDiscovery;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Function;
      15: invokevirtual #8                  // Method java/util/concurrent/CompletableFuture.thenCompose:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      18: invokedynamic #9,  0              // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      23: invokevirtual #10                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      26: areturn

  public java.util.concurrent.CompletableFuture<me.ahoo.govern.discovery.ServiceInstance> getInstance(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field redisCommands:Lio/lettuce/core/cluster/api/async/RedisClusterAsyncCommands;
       4: invokestatic  #11                 // Method me/ahoo/govern/discovery/redis/DiscoveryRedisScripts.loadDiscoveryGetInstance:(Lio/lettuce/core/api/async/RedisScriptingAsyncCommands;)Ljava/util/concurrent/CompletableFuture;
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokedynamic #12,  0             // InvokeDynamic #2:apply:(Lme/ahoo/govern/discovery/redis/RedisServiceDiscovery;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Function;
      16: invokevirtual #8                  // Method java/util/concurrent/CompletableFuture.thenCompose:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      19: invokedynamic #13,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      24: invokevirtual #10                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      27: areturn

  public java.util.concurrent.CompletableFuture<java.lang.Long> getInstanceTtl(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field redisCommands:Lio/lettuce/core/cluster/api/async/RedisClusterAsyncCommands;
       4: invokestatic  #14                 // Method me/ahoo/govern/discovery/redis/DiscoveryRedisScripts.loadDiscoveryGetInstanceTtl:(Lio/lettuce/core/api/async/RedisScriptingAsyncCommands;)Ljava/util/concurrent/CompletableFuture;
       7: aload_0
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokedynamic #15,  0             // InvokeDynamic #4:apply:(Lme/ahoo/govern/discovery/redis/RedisServiceDiscovery;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/Function;
      16: invokevirtual #8                  // Method java/util/concurrent/CompletableFuture.thenCompose:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      19: areturn

  public java.util.concurrent.CompletableFuture<java.util.Set<java.lang.String>> getServices(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method me/ahoo/govern/discovery/DiscoveryKeyGenerator.getServiceIdxKey:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #2                  // Field redisCommands:Lio/lettuce/core/cluster/api/async/RedisClusterAsyncCommands;
       9: aload_2
      10: invokeinterface #17,  2           // InterfaceMethod io/lettuce/core/cluster/api/async/RedisClusterAsyncCommands.smembers:(Ljava/lang/Object;)Lio/lettuce/core/RedisFuture;
      15: invokeinterface #18,  1           // InterfaceMethod io/lettuce/core/RedisFuture.toCompletableFuture:()Ljava/util/concurrent/CompletableFuture;
      20: areturn

  public java.util.concurrent.CompletableFuture<java.util.Set<java.lang.String>> getServices();
    Code:
       0: aload_0
       1: getstatic     #3                  // Field me/ahoo/govern/core/NamespacedContext.GLOBAL:Lme/ahoo/govern/core/NamespacedContext;
       4: invokeinterface #4,  1            // InterfaceMethod me/ahoo/govern/core/NamespacedContext.getNamespace:()Ljava/lang/String;
       9: invokevirtual #19                 // Method getServices:(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;
      12: areturn

  private java.util.concurrent.CompletionStage lambda$getInstanceTtl$5(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: iconst_1
       1: anewarray     #20                 // class java/lang/String
       4: dup
       5: iconst_0
       6: aload_1
       7: aastore
       8: astore        5
      10: iconst_2
      11: anewarray     #20                 // class java/lang/String
      14: dup
      15: iconst_0
      16: aload_2
      17: aastore
      18: dup
      19: iconst_1
      20: aload_3
      21: aastore
      22: astore        6
      24: aload_0
      25: getfield      #2                  // Field redisCommands:Lio/lettuce/core/cluster/api/async/RedisClusterAsyncCommands;
      28: aload         4
      30: getstatic     #21                 // Field io/lettuce/core/ScriptOutputType.INTEGER:Lio/lettuce/core/ScriptOutputType;
      33: aload         5
      35: aload         6
      37: invokeinterface #22,  5           // InterfaceMethod io/lettuce/core/cluster/api/async/RedisClusterAsyncCommands.evalsha:(Ljava/lang/String;Lio/lettuce/core/ScriptOutputType;[Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/RedisFuture;
      42: astore        7
      44: aload         7
      46: areturn

  private static me.ahoo.govern.discovery.ServiceInstance lambda$getInstance$4(java.util.List);
    Code:
       0: aload_0
       1: invokestatic  #23                 // Method java/util/Objects.isNull:(Ljava/lang/Object;)Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: invokestatic  #24                 // Method me/ahoo/govern/discovery/ServiceInstanceCodec.decode:(Ljava/util/List;)Lme/ahoo/govern/discovery/ServiceInstance;
      13: areturn

  private java.util.concurrent.CompletionStage lambda$getInstance$3(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: iconst_1
       1: anewarray     #20                 // class java/lang/String
       4: dup
       5: iconst_0
       6: aload_1
       7: aastore
       8: astore        5
      10: iconst_2
      11: anewarray     #20                 // class java/lang/String
      14: dup
      15: iconst_0
      16: aload_2
      17: aastore
      18: dup
      19: iconst_1
      20: aload_3
      21: aastore
      22: astore        6
      24: aload_0
      25: getfield      #2                  // Field redisCommands:Lio/lettuce/core/cluster/api/async/RedisClusterAsyncCommands;
      28: aload         4
      30: getstatic     #25                 // Field io/lettuce/core/ScriptOutputType.MULTI:Lio/lettuce/core/ScriptOutputType;
      33: aload         5
      35: aload         6
      37: invokeinterface #22,  5           // InterfaceMethod io/lettuce/core/cluster/api/async/RedisClusterAsyncCommands.evalsha:(Ljava/lang/String;Lio/lettuce/core/ScriptOutputType;[Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/RedisFuture;
      42: astore        7
      44: aload         7
      46: areturn

  private static java.util.List lambda$getInstances$2(java.util.List);
    Code:
       0: aload_0
       1: invokestatic  #23                 // Method java/util/Objects.isNull:(Ljava/lang/Object;)Z
       4: ifeq          11
       7: invokestatic  #26                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: areturn
      11: new           #27                 // class java/util/ArrayList
      14: dup
      15: aload_0
      16: invokeinterface #28,  1           // InterfaceMethod java/util/List.size:()I
      21: invokespecial #29                 // Method java/util/ArrayList."<init>":(I)V
      24: astore_1
      25: aload_0
      26: aload_1
      27: invokedynamic #30,  0             // InvokeDynamic #5:accept:(Ljava/util/ArrayList;)Ljava/util/function/Consumer;
      32: invokeinterface #31,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      37: aload_1
      38: areturn

  private static void lambda$null$1(java.util.ArrayList, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #24                 // Method me/ahoo/govern/discovery/ServiceInstanceCodec.decode:(Ljava/util/List;)Lme/ahoo/govern/discovery/ServiceInstance;
       5: invokevirtual #32                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  private java.util.concurrent.CompletionStage lambda$getInstances$0(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: iconst_1
       1: anewarray     #20                 // class java/lang/String
       4: dup
       5: iconst_0
       6: aload_1
       7: aastore
       8: astore        4
      10: iconst_1
      11: anewarray     #20                 // class java/lang/String
      14: dup
      15: iconst_0
      16: aload_2
      17: aastore
      18: astore        5
      20: aload_0
      21: getfield      #2                  // Field redisCommands:Lio/lettuce/core/cluster/api/async/RedisClusterAsyncCommands;
      24: aload_3
      25: getstatic     #25                 // Field io/lettuce/core/ScriptOutputType.MULTI:Lio/lettuce/core/ScriptOutputType;
      28: aload         4
      30: aload         5
      32: invokeinterface #22,  5           // InterfaceMethod io/lettuce/core/cluster/api/async/RedisClusterAsyncCommands.evalsha:(Ljava/lang/String;Lio/lettuce/core/ScriptOutputType;[Ljava/lang/Object;[Ljava/lang/Object;)Lio/lettuce/core/RedisFuture;
      37: astore        6
      39: aload         6
      41: areturn

  static {};
    Code:
       0: ldc           #33                 // class me/ahoo/govern/discovery/redis/RedisServiceDiscovery
       2: invokestatic  #34                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #35                 // Field log:Lorg/slf4j/Logger;
       8: return
}
