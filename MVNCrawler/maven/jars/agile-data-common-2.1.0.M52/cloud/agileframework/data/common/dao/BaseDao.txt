Compiled from "BaseDao.java"
public interface cloud.agileframework.data.common.dao.BaseDao {
  public static final java.util.Map<java.lang.Class<?>, org.springframework.data.repository.PagingAndSortingRepository> REPOSITORY_CACHE;

  public abstract cloud.agileframework.data.common.dictionary.DataExtendManager dictionaryManager();

  public abstract <T, ID> org.springframework.data.repository.PagingAndSortingRepository<T, ID> getRepository(java.lang.Class<T>);

  public default <T> void save(T);
    Code:
       0: aload_1
       1: instanceof    #1                  // class java/lang/Class
       4: ifeq          24
       7: new           #2                  // class cloud/agileframework/common/DataException
      10: dup
      11: new           #3                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #4                  // String Parameter must be of type POJO
      17: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
      24: aload_0
      25: aload_1
      26: invokeinterface #7,  2            // InterfaceMethod saveAndReturn:(Ljava/lang/Object;)Ljava/lang/Object;
      31: pop
      32: return

  public default <T> boolean save(java.lang.Iterable<T>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokeinterface #8,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          50
      18: aload_3
      19: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: astore        4
      26: aload         4
      28: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      31: astore        5
      33: aload_0
      34: aload         5
      36: invokeinterface #12,  2           // InterfaceMethod getRepository:(Ljava/lang/Class;)Lorg/springframework/data/repository/PagingAndSortingRepository;
      41: aload_1
      42: invokeinterface #13,  2           // InterfaceMethod org/springframework/data/repository/PagingAndSortingRepository.saveAll:(Ljava/lang/Iterable;)Ljava/lang/Iterable;
      47: pop
      48: iconst_1
      49: istore_2
      50: iload_2
      51: ireturn

  public abstract java.sql.Connection getConnection() throws java.sql.SQLException;

  public default <T> boolean contains(T);
    Code:
       0: aload_1
       1: instanceof    #1                  // class java/lang/Class
       4: ifeq          24
       7: new           #2                  // class cloud/agileframework/common/DataException
      10: dup
      11: new           #3                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #4                  // String Parameter must be of type POJO
      17: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
      24: aload_1
      25: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: astore_2
      29: aload_0
      30: aload_2
      31: invokeinterface #12,  2           // InterfaceMethod getRepository:(Ljava/lang/Class;)Lorg/springframework/data/repository/PagingAndSortingRepository;
      36: astore_3
      37: aload_0
      38: aload_1
      39: invokeinterface #14,  2           // InterfaceMethod getId:(Ljava/lang/Object;)Ljava/lang/Object;
      44: astore        4
      46: aload_3
      47: aload         4
      49: invokeinterface #15,  2           // InterfaceMethod org/springframework/data/repository/PagingAndSortingRepository.existsById:(Ljava/lang/Object;)Z
      54: ireturn

  public default <T> T saveOrUpdate(T);
    Code:
       0: aload_1
       1: instanceof    #1                  // class java/lang/Class
       4: ifeq          24
       7: new           #2                  // class cloud/agileframework/common/DataException
      10: dup
      11: new           #3                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #4                  // String Parameter must be of type POJO
      17: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
      24: aload_0
      25: aload_1
      26: invokeinterface #14,  2           // InterfaceMethod getId:(Ljava/lang/Object;)Ljava/lang/Object;
      31: astore_2
      32: aload_0
      33: aload_1
      34: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      37: aload_2
      38: invokeinterface #16,  3           // InterfaceMethod existsById:(Ljava/lang/Class;Ljava/lang/Object;)Z
      43: ifeq          67
      46: aload_0
      47: aload_1
      48: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      51: aload_2
      52: invokeinterface #17,  3           // InterfaceMethod deleteById:(Ljava/lang/Class;Ljava/lang/Object;)Z
      57: pop
      58: aload_0
      59: aload_1
      60: iconst_1
      61: invokeinterface #18,  3           // InterfaceMethod saveAndReturn:(Ljava/lang/Object;Z)Ljava/lang/Object;
      66: areturn
      67: aload_0
      68: aload_1
      69: invokeinterface #7,  2            // InterfaceMethod saveAndReturn:(Ljava/lang/Object;)Ljava/lang/Object;
      74: areturn

  public default <T> T saveAndReturn(T, boolean);
    Code:
       0: aload_1
       1: instanceof    #1                  // class java/lang/Class
       4: ifeq          24
       7: new           #2                  // class cloud/agileframework/common/DataException
      10: dup
      11: new           #3                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #4                  // String Parameter must be of type POJO
      17: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
      24: aload_1
      25: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: astore_3
      29: aload_0
      30: aload_3
      31: invokeinterface #12,  2           // InterfaceMethod getRepository:(Ljava/lang/Class;)Lorg/springframework/data/repository/PagingAndSortingRepository;
      36: astore        4
      38: aload         4
      40: aload_1
      41: invokeinterface #19,  2           // InterfaceMethod org/springframework/data/repository/PagingAndSortingRepository.save:(Ljava/lang/Object;)Ljava/lang/Object;
      46: astore        5
      48: aload_0
      49: invokeinterface #20,  1           // InterfaceMethod dictionaryManager:()Lcloud/agileframework/data/common/dictionary/DataExtendManager;
      54: aload         5
      56: invokeinterface #21,  2           // InterfaceMethod cloud/agileframework/data/common/dictionary/DataExtendManager.cover:(Ljava/lang/Object;)V
      61: aload         5
      63: areturn

  public default <T> T saveAndReturn(T);
    Code:
       0: aload_1
       1: instanceof    #1                  // class java/lang/Class
       4: ifeq          24
       7: new           #2                  // class cloud/agileframework/common/DataException
      10: dup
      11: new           #3                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #4                  // String Parameter must be of type POJO
      17: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
      24: aload_0
      25: aload_1
      26: getstatic     #22                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      29: invokevirtual #23                 // Method java/lang/Boolean.booleanValue:()Z
      32: invokeinterface #18,  3           // InterfaceMethod saveAndReturn:(Ljava/lang/Object;Z)Ljava/lang/Object;
      37: areturn

  public default <T> java.util.List<T> saveAndReturn(java.lang.Iterable<T>);
    Code:
       0: aload_1
       1: invokeinterface #8,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          47
      16: aload_2
      17: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: astore_3
      23: aload_3
      24: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: astore        4
      29: aload_0
      30: aload         4
      32: invokeinterface #12,  2           // InterfaceMethod getRepository:(Ljava/lang/Class;)Lorg/springframework/data/repository/PagingAndSortingRepository;
      37: aload_1
      38: invokeinterface #13,  2           // InterfaceMethod org/springframework/data/repository/PagingAndSortingRepository.saveAll:(Ljava/lang/Iterable;)Ljava/lang/Iterable;
      43: invokestatic  #24                 // Method com/google/common/collect/Lists.newArrayList:(Ljava/lang/Iterable;)Ljava/util/ArrayList;
      46: areturn
      47: new           #25                 // class java/util/ArrayList
      50: dup
      51: iconst_0
      52: invokespecial #26                 // Method java/util/ArrayList."<init>":(I)V
      55: areturn

  public default <T> boolean existsById(java.lang.Class<T>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #12,  2           // InterfaceMethod getRepository:(Ljava/lang/Class;)Lorg/springframework/data/repository/PagingAndSortingRepository;
       7: astore_3
       8: aload_3
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokeinterface #27,  3           // InterfaceMethod toIdType:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      17: invokeinterface #15,  2           // InterfaceMethod org/springframework/data/repository/PagingAndSortingRepository.existsById:(Ljava/lang/Object;)Z
      22: ireturn

  public default <T> boolean update(T);
    Code:
       0: aload_1
       1: instanceof    #1                  // class java/lang/Class
       4: ifeq          24
       7: new           #2                  // class cloud/agileframework/common/DataException
      10: dup
      11: new           #3                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #4                  // String Parameter must be of type POJO
      17: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
      24: aload_1
      25: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: astore_2
      29: aload_0
      30: aload_1
      31: invokeinterface #14,  2           // InterfaceMethod getId:(Ljava/lang/Object;)Ljava/lang/Object;
      36: astore_3
      37: aload_0
      38: aload_2
      39: aload_3
      40: invokeinterface #16,  3           // InterfaceMethod existsById:(Ljava/lang/Class;Ljava/lang/Object;)Z
      45: ifeq          68
      48: aload_0
      49: aload_2
      50: aload_3
      51: invokeinterface #17,  3           // InterfaceMethod deleteById:(Ljava/lang/Class;Ljava/lang/Object;)Z
      56: pop
      57: aload_0
      58: aload_1
      59: iconst_1
      60: invokeinterface #18,  3           // InterfaceMethod saveAndReturn:(Ljava/lang/Object;Z)Ljava/lang/Object;
      65: pop
      66: iconst_1
      67: ireturn
      68: iconst_0
      69: ireturn

  public default <T> T updateOfNotNull(T);
    Code:
       0: aload_1
       1: instanceof    #1                  // class java/lang/Class
       4: ifeq          24
       7: new           #2                  // class cloud/agileframework/common/DataException
      10: dup
      11: new           #3                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #4                  // String Parameter must be of type POJO
      17: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
      24: aload_1
      25: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: astore_2
      29: aload_0
      30: aload_1
      31: invokeinterface #14,  2           // InterfaceMethod getId:(Ljava/lang/Object;)Ljava/lang/Object;
      36: astore_3
      37: aload_0
      38: aload_2
      39: aload_3
      40: invokeinterface #16,  3           // InterfaceMethod existsById:(Ljava/lang/Class;Ljava/lang/Object;)Z
      45: ifeq          85
      48: aload_0
      49: aload_2
      50: aload_3
      51: invokeinterface #28,  3           // InterfaceMethod findOne:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      56: astore        4
      58: aload         4
      60: aload_1
      61: getstatic     #29                 // Field cloud/agileframework/common/util/object/ObjectUtil$Compare.DIFF_TARGET_NULL:Lcloud/agileframework/common/util/object/ObjectUtil$Compare;
      64: invokestatic  #30                 // Method cloud/agileframework/common/util/object/ObjectUtil.copyProperties:(Ljava/lang/Object;Ljava/lang/Object;Lcloud/agileframework/common/util/object/ObjectUtil$Compare;)V
      67: aload_0
      68: aload_2
      69: aload_3
      70: invokeinterface #17,  3           // InterfaceMethod deleteById:(Ljava/lang/Class;Ljava/lang/Object;)Z
      75: pop
      76: aload_0
      77: aload_1
      78: iconst_1
      79: invokeinterface #18,  3           // InterfaceMethod saveAndReturn:(Ljava/lang/Object;Z)Ljava/lang/Object;
      84: areturn
      85: aconst_null
      86: areturn

  public default <T> void delete(T);
    Code:
       0: aload_1
       1: instanceof    #1                  // class java/lang/Class
       4: ifeq          24
       7: new           #2                  // class cloud/agileframework/common/DataException
      10: dup
      11: new           #3                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #4                  // String Parameter must be of type POJO
      17: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
      24: aload_1
      25: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: astore_2
      29: aload_0
      30: aload_2
      31: invokeinterface #12,  2           // InterfaceMethod getRepository:(Ljava/lang/Class;)Lorg/springframework/data/repository/PagingAndSortingRepository;
      36: aload_1
      37: invokeinterface #31,  2           // InterfaceMethod org/springframework/data/repository/PagingAndSortingRepository.delete:(Ljava/lang/Object;)V
      42: return

  public default <T> boolean deleteById(java.lang.Class<T>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #12,  2           // InterfaceMethod getRepository:(Ljava/lang/Class;)Lorg/springframework/data/repository/PagingAndSortingRepository;
       7: astore_3
       8: aload_3
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokeinterface #27,  3           // InterfaceMethod toIdType:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      17: invokeinterface #32,  2           // InterfaceMethod org/springframework/data/repository/PagingAndSortingRepository.deleteById:(Ljava/lang/Object;)V
      22: goto          29
      25: astore        4
      27: iconst_0
      28: ireturn
      29: iconst_1
      30: ireturn
    Exception table:
       from    to  target type
           8    22    25   Class java/lang/Exception

  public default <T> void deleteAll(java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #12,  2           // InterfaceMethod getRepository:(Ljava/lang/Class;)Lorg/springframework/data/repository/PagingAndSortingRepository;
       7: invokeinterface #34,  1           // InterfaceMethod org/springframework/data/repository/PagingAndSortingRepository.deleteAll:()V
      12: return

  public default <T> void deleteAllInBatch(java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #35,  2           // InterfaceMethod deleteAll:(Ljava/lang/Class;)V
       7: return

  public default <T> void deleteInBatch(java.lang.Class<T>, java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #36                 // Method com/google/common/collect/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;
       6: invokeinterface #37,  3           // InterfaceMethod deleteInBatch:(Ljava/lang/Class;Ljava/lang/Iterable;)V
      11: return

  public default <T> void deleteInBatch(java.lang.Class<T>, java.lang.Iterable<?>);
    Code:
       0: aload_2
       1: ifnonnull     5
       4: return
       5: aload_0
       6: aload_1
       7: invokeinterface #12,  2           // InterfaceMethod getRepository:(Ljava/lang/Class;)Lorg/springframework/data/repository/PagingAndSortingRepository;
      12: astore_3
      13: invokestatic  #38                 // Method com/google/common/collect/Sets.newHashSet:()Ljava/util/HashSet;
      16: astore        4
      18: aload_2
      19: invokeinterface #8,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      24: astore        5
      26: aload         5
      28: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          65
      36: aload         5
      38: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: astore        6
      45: aload         4
      47: aload_0
      48: aload_1
      49: aload         6
      51: invokeinterface #27,  3           // InterfaceMethod toIdType:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      56: invokeinterface #39,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      61: pop
      62: goto          26
      65: aload_3
      66: aload         4
      68: invokeinterface #40,  2           // InterfaceMethod org/springframework/data/repository/PagingAndSortingRepository.deleteAllById:(Ljava/lang/Iterable;)V
      73: return

  public default <T> void deleteInBatch(java.lang.Iterable<T>);
    Code:
       0: aload_1
       1: invokestatic  #41                 // Method com/google/common/collect/Iterables.isEmpty:(Ljava/lang/Iterable;)Z
       4: ifeq          8
       7: return
       8: aload_0
       9: aload_1
      10: invokeinterface #8,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      15: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      23: invokeinterface #12,  2           // InterfaceMethod getRepository:(Ljava/lang/Class;)Lorg/springframework/data/repository/PagingAndSortingRepository;
      28: astore_2
      29: aload_2
      30: aload_1
      31: invokeinterface #42,  2           // InterfaceMethod org/springframework/data/repository/PagingAndSortingRepository.deleteAll:(Ljava/lang/Iterable;)V
      36: return

  public default <T> T findOne(java.lang.Class<T>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #12,  2           // InterfaceMethod getRepository:(Ljava/lang/Class;)Lorg/springframework/data/repository/PagingAndSortingRepository;
       7: astore_3
       8: aload_3
       9: aload_2
      10: invokeinterface #43,  2           // InterfaceMethod org/springframework/data/repository/PagingAndSortingRepository.findById:(Ljava/lang/Object;)Ljava/util/Optional;
      15: aconst_null
      16: invokevirtual #44                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      19: astore        4
      21: aload_0
      22: invokeinterface #20,  1           // InterfaceMethod dictionaryManager:()Lcloud/agileframework/data/common/dictionary/DataExtendManager;
      27: aload         4
      29: invokeinterface #21,  2           // InterfaceMethod cloud/agileframework/data/common/dictionary/DataExtendManager.cover:(Ljava/lang/Object;)V
      34: aload         4
      36: areturn

  public default <T> T findOne(T);
    Code:
       0: aload_1
       1: instanceof    #1                  // class java/lang/Class
       4: ifeq          24
       7: new           #2                  // class cloud/agileframework/common/DataException
      10: dup
      11: new           #3                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #4                  // String Parameter must be of type POJO
      17: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
      24: aload_0
      25: aload_1
      26: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      29: invokeinterface #12,  2           // InterfaceMethod getRepository:(Ljava/lang/Class;)Lorg/springframework/data/repository/PagingAndSortingRepository;
      34: astore_2
      35: aload_2
      36: aload_0
      37: aload_1
      38: invokeinterface #14,  2           // InterfaceMethod getId:(Ljava/lang/Object;)Ljava/lang/Object;
      43: invokeinterface #43,  2           // InterfaceMethod org/springframework/data/repository/PagingAndSortingRepository.findById:(Ljava/lang/Object;)Ljava/util/Optional;
      48: aconst_null
      49: invokevirtual #44                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      52: astore_3
      53: aload_0
      54: invokeinterface #20,  1           // InterfaceMethod dictionaryManager:()Lcloud/agileframework/data/common/dictionary/DataExtendManager;
      59: aload_3
      60: invokeinterface #21,  2           // InterfaceMethod cloud/agileframework/data/common/dictionary/DataExtendManager.cover:(Ljava/lang/Object;)V
      65: aload_3
      66: areturn

  public default <T> T findOne(java.lang.String, java.lang.Class<T>, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokeinterface #45,  4           // InterfaceMethod findBySQL:(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/util/List;
       9: invokeinterface #46,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      14: invokeinterface #47,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      19: aconst_null
      20: invokevirtual #44                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      23: astore        4
      25: aload_0
      26: invokeinterface #20,  1           // InterfaceMethod dictionaryManager:()Lcloud/agileframework/data/common/dictionary/DataExtendManager;
      31: aload         4
      33: invokeinterface #21,  2           // InterfaceMethod cloud/agileframework/data/common/dictionary/DataExtendManager.cover:(Ljava/lang/Object;)V
      38: aload         4
      40: areturn

  public default <T> java.util.List<T> findAll(T);
    Code:
       0: aload_1
       1: instanceof    #1                  // class java/lang/Class
       4: ifeq          24
       7: new           #2                  // class cloud/agileframework/common/DataException
      10: dup
      11: new           #3                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #4                  // String Parameter must be of type POJO
      17: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
      24: aload_0
      25: aload_0
      26: aload_1
      27: invokestatic  #48                 // Method org/springframework/data/domain/Sort.unsorted:()Lorg/springframework/data/domain/Sort;
      30: getstatic     #49                 // Field com/alibaba/druid/DbType.mysql:Lcom/alibaba/druid/DbType;
      33: invokeinterface #50,  4           // InterfaceMethod toSelectSql:(Ljava/lang/Object;Lorg/springframework/data/domain/Sort;Lcom/alibaba/druid/DbType;)Ljava/lang/String;
      38: aload_1
      39: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      42: aconst_null
      43: invokeinterface #45,  4           // InterfaceMethod findBySQL:(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/util/List;
      48: astore_2
      49: aload_0
      50: invokeinterface #20,  1           // InterfaceMethod dictionaryManager:()Lcloud/agileframework/data/common/dictionary/DataExtendManager;
      55: aload_2
      56: invokeinterface #21,  2           // InterfaceMethod cloud/agileframework/data/common/dictionary/DataExtendManager.cover:(Ljava/lang/Object;)V
      61: aload_2
      62: areturn

  public default <T> java.util.List<T> findAll(T, org.springframework.data.domain.Sort);
    Code:
       0: aload_1
       1: instanceof    #1                  // class java/lang/Class
       4: ifeq          24
       7: new           #2                  // class cloud/agileframework/common/DataException
      10: dup
      11: new           #3                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #4                  // String Parameter must be of type POJO
      17: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
      24: aload_0
      25: aload_0
      26: aload_1
      27: aload_2
      28: getstatic     #49                 // Field com/alibaba/druid/DbType.mysql:Lcom/alibaba/druid/DbType;
      31: invokeinterface #50,  4           // InterfaceMethod toSelectSql:(Ljava/lang/Object;Lorg/springframework/data/domain/Sort;Lcom/alibaba/druid/DbType;)Ljava/lang/String;
      36: aload_1
      37: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      40: aconst_null
      41: invokeinterface #45,  4           // InterfaceMethod findBySQL:(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/util/List;
      46: astore_3
      47: aload_0
      48: invokeinterface #20,  1           // InterfaceMethod dictionaryManager:()Lcloud/agileframework/data/common/dictionary/DataExtendManager;
      53: aload_3
      54: invokeinterface #21,  2           // InterfaceMethod cloud/agileframework/data/common/dictionary/DataExtendManager.cover:(Ljava/lang/Object;)V
      59: aload_3
      60: areturn

  public default <T> org.springframework.data.domain.Page<T> page(T, int, int);
    Code:
       0: aload_1
       1: instanceof    #1                  // class java/lang/Class
       4: ifeq          24
       7: new           #2                  // class cloud/agileframework/common/DataException
      10: dup
      11: new           #3                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #4                  // String Parameter must be of type POJO
      17: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
      24: aload_0
      25: aload_1
      26: iload_2
      27: iload_3
      28: invokestatic  #48                 // Method org/springframework/data/domain/Sort.unsorted:()Lorg/springframework/data/domain/Sort;
      31: invokeinterface #51,  5           // InterfaceMethod page:(Ljava/lang/Object;IILorg/springframework/data/domain/Sort;)Lorg/springframework/data/domain/Page;
      36: areturn

  public default <T> org.springframework.data.domain.Page<T> page(T, int, int, org.springframework.data.domain.Sort);
    Code:
       0: aload_1
       1: instanceof    #1                  // class java/lang/Class
       4: ifeq          24
       7: new           #2                  // class cloud/agileframework/common/DataException
      10: dup
      11: new           #3                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #4                  // String Parameter must be of type POJO
      17: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
      24: aload_0
      25: aload_1
      26: iload_2
      27: iload_3
      28: aload         4
      30: invokestatic  #52                 // Method org/springframework/data/domain/PageRequest.of:(IILorg/springframework/data/domain/Sort;)Lorg/springframework/data/domain/PageRequest;
      33: invokeinterface #53,  3           // InterfaceMethod page:(Ljava/lang/Object;Lorg/springframework/data/domain/PageRequest;)Lorg/springframework/data/domain/Page;
      38: areturn

  public abstract <T> org.springframework.data.domain.Page<T> page(T, org.springframework.data.domain.PageRequest);

  public default <T> org.springframework.data.domain.Page<T> pageByClass(java.lang.Class<T>, org.springframework.data.domain.PageRequest);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #12,  2           // InterfaceMethod getRepository:(Ljava/lang/Class;)Lorg/springframework/data/repository/PagingAndSortingRepository;
       7: aload_2
       8: invokeinterface #54,  2           // InterfaceMethod org/springframework/data/repository/PagingAndSortingRepository.findAll:(Lorg/springframework/data/domain/Pageable;)Lorg/springframework/data/domain/Page;
      13: astore_3
      14: aload_0
      15: invokeinterface #20,  1           // InterfaceMethod dictionaryManager:()Lcloud/agileframework/data/common/dictionary/DataExtendManager;
      20: aload_3
      21: invokeinterface #55,  1           // InterfaceMethod org/springframework/data/domain/Page.getContent:()Ljava/util/List;
      26: invokeinterface #21,  2           // InterfaceMethod cloud/agileframework/data/common/dictionary/DataExtendManager.cover:(Ljava/lang/Object;)V
      31: aload_3
      32: areturn

  public default <T> org.springframework.data.domain.Page<T> pageByClass(java.lang.Class<T>, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_1
       4: isub
       5: iload_3
       6: invokestatic  #56                 // Method org/springframework/data/domain/PageRequest.of:(II)Lorg/springframework/data/domain/PageRequest;
       9: invokeinterface #57,  3           // InterfaceMethod pageByClass:(Ljava/lang/Class;Lorg/springframework/data/domain/PageRequest;)Lorg/springframework/data/domain/Page;
      14: areturn

  public abstract <T> org.springframework.data.domain.Page<T> pageBySQL(java.lang.String, org.springframework.data.domain.PageRequest, java.lang.Class<T>, java.lang.Object...);

  public default <T> org.springframework.data.domain.Page<T> pageBySQL(java.lang.String, int, int, java.lang.Class<T>, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_1
       4: isub
       5: iload_3
       6: invokestatic  #48                 // Method org/springframework/data/domain/Sort.unsorted:()Lorg/springframework/data/domain/Sort;
       9: invokestatic  #52                 // Method org/springframework/data/domain/PageRequest.of:(IILorg/springframework/data/domain/Sort;)Lorg/springframework/data/domain/PageRequest;
      12: aload         4
      14: aload         5
      16: invokeinterface #58,  5           // InterfaceMethod pageBySQL:(Ljava/lang/String;Lorg/springframework/data/domain/PageRequest;Ljava/lang/Class;[Ljava/lang/Object;)Lorg/springframework/data/domain/Page;
      21: areturn

  public default <T> java.util.List<T> findAllByClass(java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #12,  2           // InterfaceMethod getRepository:(Ljava/lang/Class;)Lorg/springframework/data/repository/PagingAndSortingRepository;
       7: invokeinterface #59,  1           // InterfaceMethod org/springframework/data/repository/PagingAndSortingRepository.findAll:()Ljava/lang/Iterable;
      12: astore_2
      13: aload_0
      14: invokeinterface #20,  1           // InterfaceMethod dictionaryManager:()Lcloud/agileframework/data/common/dictionary/DataExtendManager;
      19: aload_2
      20: invokeinterface #21,  2           // InterfaceMethod cloud/agileframework/data/common/dictionary/DataExtendManager.cover:(Ljava/lang/Object;)V
      25: aload_2
      26: invokestatic  #24                 // Method com/google/common/collect/Lists.newArrayList:(Ljava/lang/Iterable;)Ljava/util/ArrayList;
      29: areturn

  public default <T> java.util.List<T> findAllByClass(java.lang.Class<T>, org.springframework.data.domain.Sort);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #12,  2           // InterfaceMethod getRepository:(Ljava/lang/Class;)Lorg/springframework/data/repository/PagingAndSortingRepository;
       7: aload_2
       8: invokeinterface #60,  2           // InterfaceMethod org/springframework/data/repository/PagingAndSortingRepository.findAll:(Lorg/springframework/data/domain/Sort;)Ljava/lang/Iterable;
      13: astore_3
      14: aload_0
      15: invokeinterface #20,  1           // InterfaceMethod dictionaryManager:()Lcloud/agileframework/data/common/dictionary/DataExtendManager;
      20: aload_3
      21: invokeinterface #21,  2           // InterfaceMethod cloud/agileframework/data/common/dictionary/DataExtendManager.cover:(Ljava/lang/Object;)V
      26: aload_3
      27: invokestatic  #24                 // Method com/google/common/collect/Lists.newArrayList:(Ljava/lang/Iterable;)Ljava/util/ArrayList;
      30: areturn

  public abstract <T> java.util.List<T> findBySQL(java.lang.String, java.lang.Class<T>, java.lang.Object...);

  public abstract <T> java.util.List<T> findBySQL(java.lang.String, java.lang.Class<T>, java.lang.Integer, java.lang.Integer, java.lang.Object...);

  public abstract java.util.List<java.util.Map<java.lang.String, java.lang.Object>> findBySQL(java.lang.String, java.lang.Object...);

  public abstract int updateBySQL(java.lang.String, java.lang.Object...);

  public default <T> java.util.List<T> findAllById(java.lang.Class<T>, java.lang.Iterable<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #12,  2           // InterfaceMethod getRepository:(Ljava/lang/Class;)Lorg/springframework/data/repository/PagingAndSortingRepository;
       7: aload_2
       8: invokeinterface #61,  2           // InterfaceMethod org/springframework/data/repository/PagingAndSortingRepository.findAllById:(Ljava/lang/Iterable;)Ljava/lang/Iterable;
      13: astore_3
      14: aload_0
      15: invokeinterface #20,  1           // InterfaceMethod dictionaryManager:()Lcloud/agileframework/data/common/dictionary/DataExtendManager;
      20: aload_3
      21: invokeinterface #21,  2           // InterfaceMethod cloud/agileframework/data/common/dictionary/DataExtendManager.cover:(Ljava/lang/Object;)V
      26: aload_3
      27: invokestatic  #24                 // Method com/google/common/collect/Lists.newArrayList:(Ljava/lang/Iterable;)Ljava/util/ArrayList;
      30: areturn

  public default <T> java.util.List<T> findAllByArrayId(java.lang.Class<T>, java.lang.Object...);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #12,  2           // InterfaceMethod getRepository:(Ljava/lang/Class;)Lorg/springframework/data/repository/PagingAndSortingRepository;
       7: aload_2
       8: invokestatic  #36                 // Method com/google/common/collect/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;
      11: invokeinterface #61,  2           // InterfaceMethod org/springframework/data/repository/PagingAndSortingRepository.findAllById:(Ljava/lang/Iterable;)Ljava/lang/Iterable;
      16: astore_3
      17: aload_0
      18: invokeinterface #20,  1           // InterfaceMethod dictionaryManager:()Lcloud/agileframework/data/common/dictionary/DataExtendManager;
      23: aload_3
      24: invokeinterface #21,  2           // InterfaceMethod cloud/agileframework/data/common/dictionary/DataExtendManager.cover:(Ljava/lang/Object;)V
      29: aload_3
      30: invokestatic  #24                 // Method com/google/common/collect/Lists.newArrayList:(Ljava/lang/Iterable;)Ljava/util/ArrayList;
      33: areturn

  public default long count(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #12,  2           // InterfaceMethod getRepository:(Ljava/lang/Class;)Lorg/springframework/data/repository/PagingAndSortingRepository;
       7: invokeinterface #62,  1           // InterfaceMethod org/springframework/data/repository/PagingAndSortingRepository.count:()J
      12: lreturn

  public default <T> void batchInsert(java.util.List<T>);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        1000
       5: invokeinterface #63,  3           // InterfaceMethod batchInsert:(Ljava/util/List;I)V
      10: return

  public default <T> void batchUpdate(java.util.List<T>);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        1000
       5: invokeinterface #64,  3           // InterfaceMethod batchUpdate:(Ljava/util/List;I)V
      10: return

  public default <T> void batchDelete(java.util.List<T>);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        1000
       5: invokeinterface #65,  3           // InterfaceMethod batchDelete:(Ljava/util/List;I)V
      10: return

  public default <T> void batchInsert(java.util.List<T>, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #66,  2           // InterfaceMethod save:(Ljava/lang/Iterable;)Z
       7: pop
       8: return

  public default <T> void batchUpdate(java.util.List<T>, int);
    Code:
       0: aload_1
       1: invokeinterface #67,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          36
      16: aload_3
      17: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: astore        4
      24: aload_0
      25: aload         4
      27: invokeinterface #68,  2           // InterfaceMethod update:(Ljava/lang/Object;)Z
      32: pop
      33: goto          7
      36: return

  public default <T> void batchDelete(java.util.List<T>, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #67,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       7: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      12: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokeinterface #12,  2           // InterfaceMethod getRepository:(Ljava/lang/Class;)Lorg/springframework/data/repository/PagingAndSortingRepository;
      20: astore_3
      21: aload_3
      22: aload_1
      23: invokeinterface #42,  2           // InterfaceMethod org/springframework/data/repository/PagingAndSortingRepository.deleteAll:(Ljava/lang/Iterable;)V
      28: return

  public default java.lang.reflect.Field getIdField(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #69                 // class org/springframework/data/annotation/Id
       3: invokestatic  #70                 // Method cloud/agileframework/common/util/clazz/ClassUtil.getAllEntityAnnotation:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Set;
       6: astore_2
       7: aload_2
       8: invokeinterface #71,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      13: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      18: checkcast     #72                 // class cloud/agileframework/common/util/clazz/ClassUtil$Target
      21: invokevirtual #73                 // Method cloud/agileframework/common/util/clazz/ClassUtil$Target.getMember:()Ljava/lang/reflect/Member;
      24: astore_3
      25: aload_3
      26: instanceof    #74                 // class java/lang/reflect/Field
      29: ifeq          37
      32: aload_3
      33: checkcast     #74                 // class java/lang/reflect/Field
      36: areturn
      37: aload_3
      38: invokeinterface #75,  1           // InterfaceMethod java/lang/reflect/Member.getName:()Ljava/lang/String;
      43: astore        4
      45: aload         4
      47: ldc           #76                 // String get
      49: invokevirtual #77                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      52: ifeq          66
      55: aload_1
      56: aload         4
      58: iconst_3
      59: invokevirtual #78                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      62: invokestatic  #79                 // Method cloud/agileframework/common/util/clazz/ClassUtil.getField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
      65: areturn
      66: new           #2                  // class cloud/agileframework/common/DataException
      69: dup
      70: new           #80                 // class java/lang/NoSuchFieldException
      73: dup
      74: ldc           #81                 // String 没找到主键字段
      76: invokespecial #82                 // Method java/lang/NoSuchFieldException."<init>":(Ljava/lang/String;)V
      79: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      82: athrow

  public default java.lang.Object getId(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokeinterface #83,  2           // InterfaceMethod getIdField:(Ljava/lang/Class;)Ljava/lang/reflect/Field;
      10: aload_1
      11: invokevirtual #84                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn
      15: astore_2
      16: new           #2                  // class cloud/agileframework/common/DataException
      19: dup
      20: aload_2
      21: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      24: athrow
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/IllegalAccessException

  public default void setId(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokeinterface #83,  2           // InterfaceMethod getIdField:(Ljava/lang/Class;)Ljava/lang/reflect/Field;
      10: astore_3
      11: aload_3
      12: iconst_1
      13: invokevirtual #86                 // Method java/lang/reflect/Field.setAccessible:(Z)V
      16: aload_3
      17: aload_1
      18: aload_2
      19: new           #87                 // class cloud/agileframework/common/util/clazz/TypeReference
      22: dup
      23: aload_3
      24: invokevirtual #88                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      27: invokespecial #89                 // Method cloud/agileframework/common/util/clazz/TypeReference."<init>":(Ljava/lang/reflect/Type;)V
      30: invokestatic  #90                 // Method cloud/agileframework/common/util/object/ObjectUtil.to:(Ljava/lang/Object;Lcloud/agileframework/common/util/clazz/TypeReference;)Ljava/lang/Object;
      33: invokevirtual #91                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      36: goto          49
      39: astore_3
      40: new           #2                  // class cloud/agileframework/common/DataException
      43: dup
      44: aload_3
      45: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      48: athrow
      49: return
    Exception table:
       from    to  target type
           0    36    39   Class java/lang/IllegalAccessException

  public default java.lang.Class<?> getIdType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #83,  2           // InterfaceMethod getIdField:(Ljava/lang/Class;)Ljava/lang/reflect/Field;
       7: invokevirtual #88                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      10: areturn

  public default java.lang.Object toIdType(java.lang.Class<?>, java.lang.Object);
    Code:
       0: aload_2
       1: new           #87                 // class cloud/agileframework/common/util/clazz/TypeReference
       4: dup
       5: aload_0
       6: aload_1
       7: invokeinterface #92,  2           // InterfaceMethod getIdType:(Ljava/lang/Class;)Ljava/lang/Class;
      12: invokespecial #89                 // Method cloud/agileframework/common/util/clazz/TypeReference."<init>":(Ljava/lang/reflect/Type;)V
      15: invokestatic  #90                 // Method cloud/agileframework/common/util/object/ObjectUtil.to:(Ljava/lang/Object;Lcloud/agileframework/common/util/clazz/TypeReference;)Ljava/lang/Object;
      18: areturn

  public default <T> java.lang.String toSelectSql(T, org.springframework.data.domain.Sort, com.alibaba.druid.DbType);
    Code:
       0: aload_1
       1: instanceof    #1                  // class java/lang/Class
       4: ifne          11
       7: aload_1
       8: ifnonnull     28
      11: new           #2                  // class cloud/agileframework/common/DataException
      14: dup
      15: new           #3                  // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #4                  // String Parameter must be of type POJO
      21: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      27: athrow
      28: new           #93                 // class cloud/agileframework/data/common/dao/TableWrapper
      31: dup
      32: aload_1
      33: aload_0
      34: invokedynamic #94,  0             // InvokeDynamic #0:apply:(Lcloud/agileframework/data/common/dao/BaseDao;)Ljava/util/function/Function;
      39: aload_0
      40: invokedynamic #95,  0             // InvokeDynamic #1:apply:(Lcloud/agileframework/data/common/dao/BaseDao;)Ljava/util/function/Function;
      45: invokespecial #96                 // Method cloud/agileframework/data/common/dao/TableWrapper."<init>":(Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Function;)V
      48: astore        4
      50: new           #97                 // class com/alibaba/druid/sql/ast/statement/SQLSelectQueryBlock
      53: dup
      54: invokespecial #98                 // Method com/alibaba/druid/sql/ast/statement/SQLSelectQueryBlock."<init>":()V
      57: astore        5
      59: aload         5
      61: new           #99                 // class com/alibaba/druid/sql/ast/statement/SQLExprTableSource
      64: dup
      65: aload         4
      67: invokevirtual #100                // Method cloud/agileframework/data/common/dao/TableWrapper.getTableName:()Ljava/lang/String;
      70: invokespecial #101                // Method com/alibaba/druid/sql/ast/statement/SQLExprTableSource."<init>":(Ljava/lang/String;)V
      73: invokevirtual #102                // Method com/alibaba/druid/sql/ast/statement/SQLSelectQueryBlock.setFrom:(Lcom/alibaba/druid/sql/ast/statement/SQLTableSource;)V
      76: aload         4
      78: invokevirtual #103                // Method cloud/agileframework/data/common/dao/TableWrapper.getColumns:()Ljava/util/List;
      81: invokeinterface #46,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      86: invokedynamic #104,  0            // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      91: invokeinterface #105,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      96: aload         5
      98: invokedynamic #106,  0            // InvokeDynamic #3:accept:(Lcom/alibaba/druid/sql/ast/statement/SQLSelectQueryBlock;)Ljava/util/function/Consumer;
     103: invokeinterface #107,  2          // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
     108: aload         4
     110: invokevirtual #103                // Method cloud/agileframework/data/common/dao/TableWrapper.getColumns:()Ljava/util/List;
     113: invokeinterface #46,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
     118: invokedynamic #108,  0            // InvokeDynamic #4:test:()Ljava/util/function/Predicate;
     123: invokeinterface #109,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     128: aload_3
     129: invokedynamic #110,  0            // InvokeDynamic #5:apply:(Lcom/alibaba/druid/DbType;)Ljava/util/function/Function;
     134: invokeinterface #105,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     139: invokedynamic #111,  0            // InvokeDynamic #6:apply:()Ljava/util/function/BinaryOperator;
     144: invokeinterface #112,  2          // InterfaceMethod java/util/stream/Stream.reduce:(Ljava/util/function/BinaryOperator;)Ljava/util/Optional;
     149: aload         5
     151: dup
     152: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     155: pop
     156: invokedynamic #113,  0            // InvokeDynamic #7:accept:(Lcom/alibaba/druid/sql/ast/statement/SQLSelectQueryBlock;)Ljava/util/function/Consumer;
     161: invokevirtual #114                // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     164: aload_2
     165: invokevirtual #115                // Method org/springframework/data/domain/Sort.stream:()Ljava/util/stream/Stream;
     168: aload         5
     170: invokedynamic #116,  0            // InvokeDynamic #8:accept:(Lcom/alibaba/druid/sql/ast/statement/SQLSelectQueryBlock;)Ljava/util/function/Consumer;
     175: invokeinterface #107,  2          // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
     180: aload         5
     182: aload_3
     183: invokestatic  #117                // Method com/alibaba/druid/sql/SQLUtils.toSQLString:(Lcom/alibaba/druid/sql/ast/SQLObject;Lcom/alibaba/druid/DbType;)Ljava/lang/String;
     186: areturn

  public default <T> java.lang.String toUpdateSql(T, com.alibaba.druid.DbType);
    Code:
       0: aload_1
       1: instanceof    #1                  // class java/lang/Class
       4: ifne          11
       7: aload_1
       8: ifnonnull     28
      11: new           #2                  // class cloud/agileframework/common/DataException
      14: dup
      15: new           #3                  // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #4                  // String Parameter must be of type POJO
      21: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      27: athrow
      28: new           #93                 // class cloud/agileframework/data/common/dao/TableWrapper
      31: dup
      32: aload_1
      33: aload_0
      34: invokedynamic #94,  0             // InvokeDynamic #0:apply:(Lcloud/agileframework/data/common/dao/BaseDao;)Ljava/util/function/Function;
      39: aload_0
      40: invokedynamic #95,  0             // InvokeDynamic #1:apply:(Lcloud/agileframework/data/common/dao/BaseDao;)Ljava/util/function/Function;
      45: invokespecial #96                 // Method cloud/agileframework/data/common/dao/TableWrapper."<init>":(Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Function;)V
      48: astore_3
      49: new           #118                // class com/alibaba/druid/sql/ast/statement/SQLUpdateStatement
      52: dup
      53: invokespecial #119                // Method com/alibaba/druid/sql/ast/statement/SQLUpdateStatement."<init>":()V
      56: astore        4
      58: aload         4
      60: new           #99                 // class com/alibaba/druid/sql/ast/statement/SQLExprTableSource
      63: dup
      64: aload_3
      65: invokevirtual #100                // Method cloud/agileframework/data/common/dao/TableWrapper.getTableName:()Ljava/lang/String;
      68: invokespecial #101                // Method com/alibaba/druid/sql/ast/statement/SQLExprTableSource."<init>":(Ljava/lang/String;)V
      71: invokevirtual #120                // Method com/alibaba/druid/sql/ast/statement/SQLUpdateStatement.setTableSource:(Lcom/alibaba/druid/sql/ast/statement/SQLTableSource;)V
      74: aload_3
      75: invokevirtual #103                // Method cloud/agileframework/data/common/dao/TableWrapper.getColumns:()Ljava/util/List;
      78: invokeinterface #46,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      83: invokedynamic #121,  0            // InvokeDynamic #9:test:()Ljava/util/function/Predicate;
      88: invokeinterface #109,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      93: invokedynamic #122,  0            // InvokeDynamic #10:test:()Ljava/util/function/Predicate;
      98: invokeinterface #109,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     103: aload_2
     104: invokedynamic #123,  0            // InvokeDynamic #11:apply:(Lcom/alibaba/druid/DbType;)Ljava/util/function/Function;
     109: invokeinterface #105,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     114: invokedynamic #124,  0            // InvokeDynamic #12:apply:()Ljava/util/function/BinaryOperator;
     119: invokeinterface #112,  2          // InterfaceMethod java/util/stream/Stream.reduce:(Ljava/util/function/BinaryOperator;)Ljava/util/Optional;
     124: aload         4
     126: dup
     127: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     130: pop
     131: invokedynamic #125,  0            // InvokeDynamic #13:accept:(Lcom/alibaba/druid/sql/ast/statement/SQLUpdateStatement;)Ljava/util/function/Consumer;
     136: invokevirtual #114                // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     139: aload_3
     140: invokevirtual #103                // Method cloud/agileframework/data/common/dao/TableWrapper.getColumns:()Ljava/util/List;
     143: invokeinterface #46,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
     148: invokedynamic #126,  0            // InvokeDynamic #14:test:()Ljava/util/function/Predicate;
     153: invokeinterface #109,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     158: invokedynamic #127,  0            // InvokeDynamic #15:test:()Ljava/util/function/Predicate;
     163: invokeinterface #109,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     168: aload_2
     169: aload         4
     171: invokedynamic #128,  0            // InvokeDynamic #16:accept:(Lcom/alibaba/druid/DbType;Lcom/alibaba/druid/sql/ast/statement/SQLUpdateStatement;)Ljava/util/function/Consumer;
     176: invokeinterface #107,  2          // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
     181: aload         4
     183: aload_2
     184: invokestatic  #117                // Method com/alibaba/druid/sql/SQLUtils.toSQLString:(Lcom/alibaba/druid/sql/ast/SQLObject;Lcom/alibaba/druid/DbType;)Ljava/lang/String;
     187: areturn

  public default <T> java.lang.String toInsertSql(T, com.alibaba.druid.DbType);
    Code:
       0: aload_1
       1: instanceof    #1                  // class java/lang/Class
       4: ifne          11
       7: aload_1
       8: ifnonnull     28
      11: new           #2                  // class cloud/agileframework/common/DataException
      14: dup
      15: new           #3                  // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #4                  // String Parameter must be of type POJO
      21: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      27: athrow
      28: new           #93                 // class cloud/agileframework/data/common/dao/TableWrapper
      31: dup
      32: aload_1
      33: aload_0
      34: invokedynamic #94,  0             // InvokeDynamic #0:apply:(Lcloud/agileframework/data/common/dao/BaseDao;)Ljava/util/function/Function;
      39: aload_0
      40: invokedynamic #95,  0             // InvokeDynamic #1:apply:(Lcloud/agileframework/data/common/dao/BaseDao;)Ljava/util/function/Function;
      45: invokespecial #96                 // Method cloud/agileframework/data/common/dao/TableWrapper."<init>":(Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Function;)V
      48: astore_3
      49: new           #129                // class com/alibaba/druid/sql/ast/statement/SQLInsertStatement
      52: dup
      53: invokespecial #130                // Method com/alibaba/druid/sql/ast/statement/SQLInsertStatement."<init>":()V
      56: astore        4
      58: aload         4
      60: new           #99                 // class com/alibaba/druid/sql/ast/statement/SQLExprTableSource
      63: dup
      64: aload_3
      65: invokevirtual #100                // Method cloud/agileframework/data/common/dao/TableWrapper.getTableName:()Ljava/lang/String;
      68: invokespecial #101                // Method com/alibaba/druid/sql/ast/statement/SQLExprTableSource."<init>":(Ljava/lang/String;)V
      71: invokevirtual #131                // Method com/alibaba/druid/sql/ast/statement/SQLInsertStatement.setTableSource:(Lcom/alibaba/druid/sql/ast/statement/SQLExprTableSource;)V
      74: new           #132                // class com/alibaba/druid/sql/ast/statement/SQLInsertStatement$ValuesClause
      77: dup
      78: invokespecial #133                // Method com/alibaba/druid/sql/ast/statement/SQLInsertStatement$ValuesClause."<init>":()V
      81: astore        5
      83: aload_3
      84: invokevirtual #103                // Method cloud/agileframework/data/common/dao/TableWrapper.getColumns:()Ljava/util/List;
      87: invokeinterface #46,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      92: invokedynamic #134,  0            // InvokeDynamic #17:test:()Ljava/util/function/Predicate;
      97: invokeinterface #109,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     102: aload         4
     104: aload_2
     105: aload         5
     107: invokedynamic #135,  0            // InvokeDynamic #18:accept:(Lcom/alibaba/druid/sql/ast/statement/SQLInsertStatement;Lcom/alibaba/druid/DbType;Lcom/alibaba/druid/sql/ast/statement/SQLInsertStatement$ValuesClause;)Ljava/util/function/Consumer;
     112: invokeinterface #107,  2          // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
     117: aload         4
     119: aload         5
     121: invokevirtual #136                // Method com/alibaba/druid/sql/ast/statement/SQLInsertStatement.addValueCause:(Lcom/alibaba/druid/sql/ast/statement/SQLInsertStatement$ValuesClause;)V
     124: aload         4
     126: aload_2
     127: invokestatic  #117                // Method com/alibaba/druid/sql/SQLUtils.toSQLString:(Lcom/alibaba/druid/sql/ast/SQLObject;Lcom/alibaba/druid/DbType;)Ljava/lang/String;
     130: areturn

  public default <T> java.lang.String toInsertSql(java.util.List<T>, com.alibaba.druid.DbType);
    Code:
       0: aload_1
       1: ifnull        13
       4: aload_1
       5: invokeinterface #137,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      10: ifeq          30
      13: new           #2                  // class cloud/agileframework/common/DataException
      16: dup
      17: new           #3                  // class java/lang/IllegalArgumentException
      20: dup
      21: ldc           #138                // String Parameter contains at least one element
      23: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      29: athrow
      30: aload_1
      31: invokeinterface #46,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      36: aload_0
      37: invokedynamic #139,  0            // InvokeDynamic #19:apply:(Lcloud/agileframework/data/common/dao/BaseDao;)Ljava/util/function/Function;
      42: invokeinterface #105,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      47: invokestatic  #140                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      50: invokeinterface #141,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      55: checkcast     #142                // class java/util/List
      58: astore_3
      59: new           #129                // class com/alibaba/druid/sql/ast/statement/SQLInsertStatement
      62: dup
      63: invokespecial #130                // Method com/alibaba/druid/sql/ast/statement/SQLInsertStatement."<init>":()V
      66: astore        4
      68: aload_3
      69: aload         4
      71: aload_2
      72: invokedynamic #143,  0            // InvokeDynamic #20:accept:(Lcom/alibaba/druid/sql/ast/statement/SQLInsertStatement;Lcom/alibaba/druid/DbType;)Ljava/util/function/Consumer;
      77: invokeinterface #144,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      82: aload         4
      84: aload_2
      85: invokestatic  #117                // Method com/alibaba/druid/sql/SQLUtils.toSQLString:(Lcom/alibaba/druid/sql/ast/SQLObject;Lcom/alibaba/druid/DbType;)Ljava/lang/String;
      88: areturn

  public default <T> java.lang.String toDeleteSql(T, com.alibaba.druid.DbType);
    Code:
       0: aload_1
       1: instanceof    #1                  // class java/lang/Class
       4: ifne          11
       7: aload_1
       8: ifnonnull     28
      11: new           #2                  // class cloud/agileframework/common/DataException
      14: dup
      15: new           #3                  // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #4                  // String Parameter must be of type POJO
      21: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      27: athrow
      28: new           #93                 // class cloud/agileframework/data/common/dao/TableWrapper
      31: dup
      32: aload_1
      33: aload_0
      34: invokedynamic #94,  0             // InvokeDynamic #0:apply:(Lcloud/agileframework/data/common/dao/BaseDao;)Ljava/util/function/Function;
      39: aload_0
      40: invokedynamic #95,  0             // InvokeDynamic #1:apply:(Lcloud/agileframework/data/common/dao/BaseDao;)Ljava/util/function/Function;
      45: invokespecial #96                 // Method cloud/agileframework/data/common/dao/TableWrapper."<init>":(Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Function;)V
      48: astore_3
      49: new           #145                // class com/alibaba/druid/sql/ast/statement/SQLDeleteStatement
      52: dup
      53: invokespecial #146                // Method com/alibaba/druid/sql/ast/statement/SQLDeleteStatement."<init>":()V
      56: astore        4
      58: aload         4
      60: new           #99                 // class com/alibaba/druid/sql/ast/statement/SQLExprTableSource
      63: dup
      64: aload_3
      65: invokevirtual #100                // Method cloud/agileframework/data/common/dao/TableWrapper.getTableName:()Ljava/lang/String;
      68: invokespecial #101                // Method com/alibaba/druid/sql/ast/statement/SQLExprTableSource."<init>":(Ljava/lang/String;)V
      71: invokevirtual #147                // Method com/alibaba/druid/sql/ast/statement/SQLDeleteStatement.setTableSource:(Lcom/alibaba/druid/sql/ast/statement/SQLTableSource;)V
      74: aload_3
      75: invokevirtual #103                // Method cloud/agileframework/data/common/dao/TableWrapper.getColumns:()Ljava/util/List;
      78: invokeinterface #46,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      83: invokedynamic #148,  0            // InvokeDynamic #21:test:()Ljava/util/function/Predicate;
      88: invokeinterface #109,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      93: aload_2
      94: invokedynamic #149,  0            // InvokeDynamic #22:apply:(Lcom/alibaba/druid/DbType;)Ljava/util/function/Function;
      99: invokeinterface #105,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     104: invokedynamic #150,  0            // InvokeDynamic #23:apply:()Ljava/util/function/BinaryOperator;
     109: invokeinterface #112,  2          // InterfaceMethod java/util/stream/Stream.reduce:(Ljava/util/function/BinaryOperator;)Ljava/util/Optional;
     114: aload         4
     116: dup
     117: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     120: pop
     121: invokedynamic #151,  0            // InvokeDynamic #24:accept:(Lcom/alibaba/druid/sql/ast/statement/SQLDeleteStatement;)Ljava/util/function/Consumer;
     126: invokevirtual #114                // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     129: aload         4
     131: aload_2
     132: invokestatic  #117                // Method com/alibaba/druid/sql/SQLUtils.toSQLString:(Lcom/alibaba/druid/sql/ast/SQLObject;Lcom/alibaba/druid/DbType;)Ljava/lang/String;
     135: areturn

  public abstract <T> java.util.List<cloud.agileframework.data.common.dao.ColumnName> toColumnNames(java.lang.Class<T>);

  public abstract <T> java.lang.String toTableName(java.lang.Class<T>);

  public default <T> java.lang.String toPageSQL(T, org.springframework.data.domain.PageRequest, com.alibaba.druid.DbType);
    Code:
       0: aload_1
       1: instanceof    #1                  // class java/lang/Class
       4: ifeq          24
       7: new           #2                  // class cloud/agileframework/common/DataException
      10: dup
      11: new           #3                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #4                  // String Parameter must be of type POJO
      17: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
      24: aload_0
      25: aload_1
      26: aload_2
      27: invokevirtual #152                // Method org/springframework/data/domain/PageRequest.getSort:()Lorg/springframework/data/domain/Sort;
      30: aload_3
      31: invokeinterface #50,  4           // InterfaceMethod toSelectSql:(Ljava/lang/Object;Lorg/springframework/data/domain/Sort;Lcom/alibaba/druid/DbType;)Ljava/lang/String;
      36: astore        4
      38: aload_2
      39: invokevirtual #153                // Method org/springframework/data/domain/PageRequest.getPageSize:()I
      42: istore        5
      44: aload_2
      45: invokevirtual #154                // Method org/springframework/data/domain/PageRequest.getPageNumber:()I
      48: istore        6
      50: aload         4
      52: getstatic     #49                 // Field com/alibaba/druid/DbType.mysql:Lcom/alibaba/druid/DbType;
      55: iload         6
      57: iload         5
      59: imul
      60: iload         5
      62: invokestatic  #155                // Method com/alibaba/druid/sql/PagerUtils.limit:(Ljava/lang/String;Lcom/alibaba/druid/DbType;II)Ljava/lang/String;
      65: areturn

  public default <T> java.lang.String toPageCountSQL(T, org.springframework.data.domain.PageRequest, com.alibaba.druid.DbType);
    Code:
       0: aload_1
       1: instanceof    #1                  // class java/lang/Class
       4: ifeq          24
       7: new           #2                  // class cloud/agileframework/common/DataException
      10: dup
      11: new           #3                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #4                  // String Parameter must be of type POJO
      17: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
      24: aload_0
      25: aload_1
      26: aload_2
      27: invokevirtual #152                // Method org/springframework/data/domain/PageRequest.getSort:()Lorg/springframework/data/domain/Sort;
      30: aload_3
      31: invokeinterface #50,  4           // InterfaceMethod toSelectSql:(Ljava/lang/Object;Lorg/springframework/data/domain/Sort;Lcom/alibaba/druid/DbType;)Ljava/lang/String;
      36: astore        4
      38: aload         4
      40: getstatic     #49                 // Field com/alibaba/druid/DbType.mysql:Lcom/alibaba/druid/DbType;
      43: invokestatic  #156                // Method com/alibaba/druid/sql/PagerUtils.count:(Ljava/lang/String;Lcom/alibaba/druid/DbType;)Ljava/lang/String;
      46: areturn

  public default <T> java.util.Map<java.lang.String, java.util.Optional<java.lang.Object>> toColumnValueMapping(T);
    Code:
       0: aload_1
       1: instanceof    #1                  // class java/lang/Class
       4: ifne          11
       7: aload_1
       8: ifnonnull     28
      11: new           #2                  // class cloud/agileframework/common/DataException
      14: dup
      15: new           #3                  // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #4                  // String Parameter must be of type POJO
      21: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: invokespecial #6                  // Method cloud/agileframework/common/DataException."<init>":(Ljava/lang/Throwable;)V
      27: athrow
      28: aload_1
      29: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      32: astore_2
      33: aload_0
      34: aload_2
      35: invokeinterface #157,  2          // InterfaceMethod toColumnNames:(Ljava/lang/Class;)Ljava/util/List;
      40: invokeinterface #46,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      45: invokedynamic #158,  0            // InvokeDynamic #25:test:()Ljava/util/function/Predicate;
      50: invokeinterface #109,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      55: invokestatic  #159                // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      58: invokeinterface #141,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      63: checkcast     #160                // class java/util/Set
      66: astore_3
      67: aload_3
      68: invokeinterface #161,  1          // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      73: invokedynamic #162,  0            // InvokeDynamic #26:test:()Ljava/util/function/Predicate;
      78: invokeinterface #109,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      83: invokedynamic #104,  0            // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      88: aload_1
      89: invokedynamic #163,  0            // InvokeDynamic #27:apply:(Ljava/lang/Object;)Ljava/util/function/Function;
      94: invokestatic  #164                // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      97: invokeinterface #141,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     102: checkcast     #165                // class java/util/Map
     105: astore        4
     107: aload_3
     108: invokeinterface #161,  1          // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
     113: invokedynamic #166,  0            // InvokeDynamic #28:test:()Ljava/util/function/Predicate;
     118: invokeinterface #109,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     123: invokedynamic #104,  0            // InvokeDynamic #2:apply:()Ljava/util/function/Function;
     128: aload_1
     129: invokedynamic #167,  0            // InvokeDynamic #29:apply:(Ljava/lang/Object;)Ljava/util/function/Function;
     134: invokestatic  #164                // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
     137: invokeinterface #141,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     142: checkcast     #165                // class java/util/Map
     145: astore        5
     147: aload         4
     149: aload         5
     151: invokeinterface #168,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     156: aload         4
     158: areturn

  private static java.util.Optional lambda$toColumnValueMapping$25(java.lang.Object, cloud.agileframework.data.common.dao.ColumnName);
    Code:
       0: aload_1
       1: invokevirtual #169                // Method cloud/agileframework/data/common/dao/ColumnName.getMember:()Ljava/lang/reflect/Member;
       4: checkcast     #170                // class java/lang/reflect/Method
       7: astore_2
       8: aload_2
       9: iconst_1
      10: invokevirtual #171                // Method java/lang/reflect/Method.setAccessible:(Z)V
      13: aload_2
      14: aload_0
      15: iconst_0
      16: anewarray     #172                // class java/lang/Object
      19: invokevirtual #173                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      22: invokestatic  #174                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      25: areturn
      26: astore_2
      27: aload_2
      28: invokevirtual #176                // Method java/lang/ReflectiveOperationException.printStackTrace:()V
      31: invokestatic  #177                // Method java/util/Optional.empty:()Ljava/util/Optional;
      34: areturn
    Exception table:
       from    to  target type
           0    25    26   Class java/lang/IllegalAccessException
           0    25    26   Class java/lang/reflect/InvocationTargetException

  private static boolean lambda$toColumnValueMapping$24(cloud.agileframework.data.common.dao.ColumnName);
    Code:
       0: aload_0
       1: invokevirtual #169                // Method cloud/agileframework/data/common/dao/ColumnName.getMember:()Ljava/lang/reflect/Member;
       4: instanceof    #170                // class java/lang/reflect/Method
       7: ireturn

  private static java.util.Optional lambda$toColumnValueMapping$23(java.lang.Object, cloud.agileframework.data.common.dao.ColumnName);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #169                // Method cloud/agileframework/data/common/dao/ColumnName.getMember:()Ljava/lang/reflect/Member;
       5: checkcast     #74                 // class java/lang/reflect/Field
       8: invokestatic  #178                // Method cloud/agileframework/common/util/object/ObjectUtil.getFieldValue:(Ljava/lang/Object;Ljava/lang/reflect/Field;)Ljava/lang/Object;
      11: invokestatic  #174                // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      14: areturn

  private static boolean lambda$toColumnValueMapping$22(cloud.agileframework.data.common.dao.ColumnName);
    Code:
       0: aload_0
       1: invokevirtual #169                // Method cloud/agileframework/data/common/dao/ColumnName.getMember:()Ljava/lang/reflect/Member;
       4: instanceof    #74                 // class java/lang/reflect/Field
       7: ireturn

  private static boolean lambda$toColumnValueMapping$21(cloud.agileframework.data.common.dao.ColumnName);
    Code:
       0: aload_0
       1: invokevirtual #169                // Method cloud/agileframework/data/common/dao/ColumnName.getMember:()Ljava/lang/reflect/Member;
       4: checkcast     #179                // class java/lang/reflect/AccessibleObject
       7: checkcast     #179                // class java/lang/reflect/AccessibleObject
      10: invokevirtual #180                // Method java/lang/reflect/AccessibleObject.getAnnotations:()[Ljava/lang/annotation/Annotation;
      13: invokestatic  #181                // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      16: invokedynamic #182,  0            // InvokeDynamic #30:test:()Ljava/util/function/Predicate;
      21: invokeinterface #183,  2          // InterfaceMethod java/util/stream/Stream.noneMatch:(Ljava/util/function/Predicate;)Z
      26: ireturn

  private static boolean lambda$null$20(java.lang.annotation.Annotation);
    Code:
       0: ldc           #184                // String Transient
       2: aload_0
       3: invokeinterface #185,  1          // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
       8: invokevirtual #186                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      11: invokevirtual #187                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      14: ireturn

  private static com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr lambda$toDeleteSql$19(com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr, com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr);
    Code:
       0: new           #188                // class com/alibaba/druid/sql/ast/expr/SQLBinaryOpExpr
       3: dup
       4: aload_0
       5: getstatic     #189                // Field com/alibaba/druid/sql/ast/expr/SQLBinaryOperator.BooleanAnd:Lcom/alibaba/druid/sql/ast/expr/SQLBinaryOperator;
       8: aload_1
       9: invokespecial #190                // Method com/alibaba/druid/sql/ast/expr/SQLBinaryOpExpr."<init>":(Lcom/alibaba/druid/sql/ast/SQLExpr;Lcom/alibaba/druid/sql/ast/expr/SQLBinaryOperator;Lcom/alibaba/druid/sql/ast/SQLExpr;)V
      12: areturn

  private static com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr lambda$toDeleteSql$18(com.alibaba.druid.DbType, cloud.agileframework.data.common.dao.ColumnName);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #191                // Method cloud/agileframework/data/common/dao/ColumnName.sql:(Lcom/alibaba/druid/DbType;)Lcom/alibaba/druid/sql/ast/expr/SQLBinaryOpExpr;
       5: areturn

  private static boolean lambda$toDeleteSql$17(cloud.agileframework.data.common.dao.ColumnName);
    Code:
       0: aload_0
       1: invokevirtual #192                // Method cloud/agileframework/data/common/dao/ColumnName.getValue:()Ljava/util/Optional;
       4: invokevirtual #193                // Method java/util/Optional.isPresent:()Z
       7: ireturn

  private static void lambda$toInsertSql$16(com.alibaba.druid.sql.ast.statement.SQLInsertStatement, com.alibaba.druid.DbType, cloud.agileframework.data.common.dao.TableWrapper);
    Code:
       0: aload_0
       1: invokevirtual #194                // Method com/alibaba/druid/sql/ast/statement/SQLInsertStatement.getTableName:()Lcom/alibaba/druid/sql/ast/SQLName;
       4: ifnonnull     67
       7: aload_0
       8: new           #99                 // class com/alibaba/druid/sql/ast/statement/SQLExprTableSource
      11: dup
      12: aload_2
      13: invokevirtual #100                // Method cloud/agileframework/data/common/dao/TableWrapper.getTableName:()Ljava/lang/String;
      16: invokespecial #101                // Method com/alibaba/druid/sql/ast/statement/SQLExprTableSource."<init>":(Ljava/lang/String;)V
      19: invokevirtual #131                // Method com/alibaba/druid/sql/ast/statement/SQLInsertStatement.setTableSource:(Lcom/alibaba/druid/sql/ast/statement/SQLExprTableSource;)V
      22: new           #132                // class com/alibaba/druid/sql/ast/statement/SQLInsertStatement$ValuesClause
      25: dup
      26: invokespecial #133                // Method com/alibaba/druid/sql/ast/statement/SQLInsertStatement$ValuesClause."<init>":()V
      29: astore_3
      30: aload_2
      31: invokevirtual #103                // Method cloud/agileframework/data/common/dao/TableWrapper.getColumns:()Ljava/util/List;
      34: invokeinterface #46,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      39: invokedynamic #195,  0            // InvokeDynamic #31:test:()Ljava/util/function/Predicate;
      44: invokeinterface #109,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      49: aload_0
      50: aload_1
      51: aload_3
      52: invokedynamic #196,  0            // InvokeDynamic #32:accept:(Lcom/alibaba/druid/sql/ast/statement/SQLInsertStatement;Lcom/alibaba/druid/DbType;Lcom/alibaba/druid/sql/ast/statement/SQLInsertStatement$ValuesClause;)Ljava/util/function/Consumer;
      57: invokeinterface #107,  2          // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      62: aload_0
      63: aload_3
      64: invokevirtual #136                // Method com/alibaba/druid/sql/ast/statement/SQLInsertStatement.addValueCause:(Lcom/alibaba/druid/sql/ast/statement/SQLInsertStatement$ValuesClause;)V
      67: return

  private static void lambda$null$15(com.alibaba.druid.sql.ast.statement.SQLInsertStatement, com.alibaba.druid.DbType, com.alibaba.druid.sql.ast.statement.SQLInsertStatement$ValuesClause, cloud.agileframework.data.common.dao.ColumnName);
    Code:
       0: aload_0
       1: aload_3
       2: invokevirtual #197                // Method cloud/agileframework/data/common/dao/ColumnName.getName:()Ljava/lang/String;
       5: aload_1
       6: invokestatic  #198                // Method com/alibaba/druid/sql/SQLUtils.toSQLExpr:(Ljava/lang/String;Lcom/alibaba/druid/DbType;)Lcom/alibaba/druid/sql/ast/SQLExpr;
       9: invokevirtual #199                // Method com/alibaba/druid/sql/ast/statement/SQLInsertStatement.addColumn:(Lcom/alibaba/druid/sql/ast/SQLExpr;)V
      12: aload_2
      13: aload_3
      14: invokevirtual #200                // Method cloud/agileframework/data/common/dao/ColumnName.sqlValue:()Lcom/alibaba/druid/sql/ast/SQLExpr;
      17: invokevirtual #201                // Method com/alibaba/druid/sql/ast/statement/SQLInsertStatement$ValuesClause.addValue:(Lcom/alibaba/druid/sql/ast/SQLExpr;)V
      20: return

  private static boolean lambda$null$14(cloud.agileframework.data.common.dao.ColumnName);
    Code:
       0: aload_0
       1: invokevirtual #192                // Method cloud/agileframework/data/common/dao/ColumnName.getValue:()Ljava/util/Optional;
       4: invokevirtual #193                // Method java/util/Optional.isPresent:()Z
       7: ireturn

  private cloud.agileframework.data.common.dao.TableWrapper lambda$toInsertSql$13(java.lang.Object);
    Code:
       0: new           #93                 // class cloud/agileframework/data/common/dao/TableWrapper
       3: dup
       4: aload_1
       5: aload_0
       6: invokedynamic #94,  0             // InvokeDynamic #0:apply:(Lcloud/agileframework/data/common/dao/BaseDao;)Ljava/util/function/Function;
      11: aload_0
      12: invokedynamic #95,  0             // InvokeDynamic #1:apply:(Lcloud/agileframework/data/common/dao/BaseDao;)Ljava/util/function/Function;
      17: invokespecial #96                 // Method cloud/agileframework/data/common/dao/TableWrapper."<init>":(Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Function;)V
      20: areturn

  private static void lambda$toInsertSql$12(com.alibaba.druid.sql.ast.statement.SQLInsertStatement, com.alibaba.druid.DbType, com.alibaba.druid.sql.ast.statement.SQLInsertStatement$ValuesClause, cloud.agileframework.data.common.dao.ColumnName);
    Code:
       0: aload_0
       1: aload_3
       2: invokevirtual #197                // Method cloud/agileframework/data/common/dao/ColumnName.getName:()Ljava/lang/String;
       5: aload_1
       6: invokestatic  #198                // Method com/alibaba/druid/sql/SQLUtils.toSQLExpr:(Ljava/lang/String;Lcom/alibaba/druid/DbType;)Lcom/alibaba/druid/sql/ast/SQLExpr;
       9: invokevirtual #199                // Method com/alibaba/druid/sql/ast/statement/SQLInsertStatement.addColumn:(Lcom/alibaba/druid/sql/ast/SQLExpr;)V
      12: aload_2
      13: aload_3
      14: invokevirtual #200                // Method cloud/agileframework/data/common/dao/ColumnName.sqlValue:()Lcom/alibaba/druid/sql/ast/SQLExpr;
      17: invokevirtual #201                // Method com/alibaba/druid/sql/ast/statement/SQLInsertStatement$ValuesClause.addValue:(Lcom/alibaba/druid/sql/ast/SQLExpr;)V
      20: return

  private static boolean lambda$toInsertSql$11(cloud.agileframework.data.common.dao.ColumnName);
    Code:
       0: aload_0
       1: invokevirtual #192                // Method cloud/agileframework/data/common/dao/ColumnName.getValue:()Ljava/util/Optional;
       4: invokevirtual #193                // Method java/util/Optional.isPresent:()Z
       7: ireturn

  private static void lambda$toUpdateSql$10(com.alibaba.druid.DbType, com.alibaba.druid.sql.ast.statement.SQLUpdateStatement, cloud.agileframework.data.common.dao.ColumnName);
    Code:
       0: new           #202                // class com/alibaba/druid/sql/ast/statement/SQLUpdateSetItem
       3: dup
       4: invokespecial #203                // Method com/alibaba/druid/sql/ast/statement/SQLUpdateSetItem."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_2
      10: invokevirtual #197                // Method cloud/agileframework/data/common/dao/ColumnName.getName:()Ljava/lang/String;
      13: aload_0
      14: invokestatic  #198                // Method com/alibaba/druid/sql/SQLUtils.toSQLExpr:(Ljava/lang/String;Lcom/alibaba/druid/DbType;)Lcom/alibaba/druid/sql/ast/SQLExpr;
      17: invokevirtual #204                // Method com/alibaba/druid/sql/ast/statement/SQLUpdateSetItem.setColumn:(Lcom/alibaba/druid/sql/ast/SQLExpr;)V
      20: aload_3
      21: aload_2
      22: invokevirtual #200                // Method cloud/agileframework/data/common/dao/ColumnName.sqlValue:()Lcom/alibaba/druid/sql/ast/SQLExpr;
      25: invokevirtual #205                // Method com/alibaba/druid/sql/ast/statement/SQLUpdateSetItem.setValue:(Lcom/alibaba/druid/sql/ast/SQLExpr;)V
      28: aload_1
      29: aload_3
      30: invokevirtual #206                // Method com/alibaba/druid/sql/ast/statement/SQLUpdateStatement.addItem:(Lcom/alibaba/druid/sql/ast/statement/SQLUpdateSetItem;)V
      33: return

  private static boolean lambda$toUpdateSql$9(cloud.agileframework.data.common.dao.ColumnName);
    Code:
       0: aload_0
       1: invokevirtual #192                // Method cloud/agileframework/data/common/dao/ColumnName.getValue:()Ljava/util/Optional;
       4: invokevirtual #193                // Method java/util/Optional.isPresent:()Z
       7: ireturn

  private static boolean lambda$toUpdateSql$8(cloud.agileframework.data.common.dao.ColumnName);
    Code:
       0: aload_0
       1: invokevirtual #207                // Method cloud/agileframework/data/common/dao/ColumnName.isPrimaryKey:()Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private static com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr lambda$toUpdateSql$7(com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr, com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr);
    Code:
       0: new           #188                // class com/alibaba/druid/sql/ast/expr/SQLBinaryOpExpr
       3: dup
       4: aload_0
       5: getstatic     #189                // Field com/alibaba/druid/sql/ast/expr/SQLBinaryOperator.BooleanAnd:Lcom/alibaba/druid/sql/ast/expr/SQLBinaryOperator;
       8: aload_1
       9: invokespecial #190                // Method com/alibaba/druid/sql/ast/expr/SQLBinaryOpExpr."<init>":(Lcom/alibaba/druid/sql/ast/SQLExpr;Lcom/alibaba/druid/sql/ast/expr/SQLBinaryOperator;Lcom/alibaba/druid/sql/ast/SQLExpr;)V
      12: areturn

  private static com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr lambda$toUpdateSql$6(com.alibaba.druid.DbType, cloud.agileframework.data.common.dao.ColumnName);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #191                // Method cloud/agileframework/data/common/dao/ColumnName.sql:(Lcom/alibaba/druid/DbType;)Lcom/alibaba/druid/sql/ast/expr/SQLBinaryOpExpr;
       5: areturn

  private static boolean lambda$toUpdateSql$5(cloud.agileframework.data.common.dao.ColumnName);
    Code:
       0: aload_0
       1: invokevirtual #192                // Method cloud/agileframework/data/common/dao/ColumnName.getValue:()Ljava/util/Optional;
       4: invokevirtual #193                // Method java/util/Optional.isPresent:()Z
       7: ireturn

  private static void lambda$toSelectSql$4(com.alibaba.druid.sql.ast.statement.SQLSelectQueryBlock, org.springframework.data.domain.Sort$Order);
    Code:
       0: aload_0
       1: new           #208                // class com/alibaba/druid/sql/ast/SQLOrderBy
       4: dup
       5: aload_1
       6: invokevirtual #209                // Method org/springframework/data/domain/Sort$Order.getProperty:()Ljava/lang/String;
       9: invokestatic  #210                // Method com/alibaba/druid/sql/SQLUtils.toSQLExpr:(Ljava/lang/String;)Lcom/alibaba/druid/sql/ast/SQLExpr;
      12: aload_1
      13: invokevirtual #211                // Method org/springframework/data/domain/Sort$Order.getDirection:()Lorg/springframework/data/domain/Sort$Direction;
      16: invokevirtual #212                // Method org/springframework/data/domain/Sort$Direction.isAscending:()Z
      19: ifeq          28
      22: getstatic     #213                // Field com/alibaba/druid/sql/ast/SQLOrderingSpecification.ASC:Lcom/alibaba/druid/sql/ast/SQLOrderingSpecification;
      25: goto          31
      28: getstatic     #214                // Field com/alibaba/druid/sql/ast/SQLOrderingSpecification.DESC:Lcom/alibaba/druid/sql/ast/SQLOrderingSpecification;
      31: invokespecial #215                // Method com/alibaba/druid/sql/ast/SQLOrderBy."<init>":(Lcom/alibaba/druid/sql/ast/SQLExpr;Lcom/alibaba/druid/sql/ast/SQLOrderingSpecification;)V
      34: invokevirtual #216                // Method com/alibaba/druid/sql/ast/statement/SQLSelectQueryBlock.addOrderBy:(Lcom/alibaba/druid/sql/ast/SQLOrderBy;)V
      37: return

  private static com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr lambda$toSelectSql$3(com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr, com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr);
    Code:
       0: new           #188                // class com/alibaba/druid/sql/ast/expr/SQLBinaryOpExpr
       3: dup
       4: aload_0
       5: getstatic     #189                // Field com/alibaba/druid/sql/ast/expr/SQLBinaryOperator.BooleanAnd:Lcom/alibaba/druid/sql/ast/expr/SQLBinaryOperator;
       8: aload_1
       9: invokespecial #190                // Method com/alibaba/druid/sql/ast/expr/SQLBinaryOpExpr."<init>":(Lcom/alibaba/druid/sql/ast/SQLExpr;Lcom/alibaba/druid/sql/ast/expr/SQLBinaryOperator;Lcom/alibaba/druid/sql/ast/SQLExpr;)V
      12: areturn

  private static com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr lambda$toSelectSql$2(com.alibaba.druid.DbType, cloud.agileframework.data.common.dao.ColumnName);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #191                // Method cloud/agileframework/data/common/dao/ColumnName.sql:(Lcom/alibaba/druid/DbType;)Lcom/alibaba/druid/sql/ast/expr/SQLBinaryOpExpr;
       5: areturn

  private static boolean lambda$toSelectSql$1(cloud.agileframework.data.common.dao.ColumnName);
    Code:
       0: aload_0
       1: invokevirtual #192                // Method cloud/agileframework/data/common/dao/ColumnName.getValue:()Ljava/util/Optional;
       4: invokevirtual #193                // Method java/util/Optional.isPresent:()Z
       7: ireturn

  private static void lambda$toSelectSql$0(com.alibaba.druid.sql.ast.statement.SQLSelectQueryBlock, java.lang.String);
    Code:
       0: aload_0
       1: new           #217                // class com/alibaba/druid/sql/ast/statement/SQLSelectItem
       4: dup
       5: aload_1
       6: invokestatic  #210                // Method com/alibaba/druid/sql/SQLUtils.toSQLExpr:(Ljava/lang/String;)Lcom/alibaba/druid/sql/ast/SQLExpr;
       9: invokespecial #218                // Method com/alibaba/druid/sql/ast/statement/SQLSelectItem."<init>":(Lcom/alibaba/druid/sql/ast/SQLExpr;)V
      12: invokevirtual #219                // Method com/alibaba/druid/sql/ast/statement/SQLSelectQueryBlock.addSelectItem:(Lcom/alibaba/druid/sql/ast/statement/SQLSelectItem;)V
      15: return

  static {};
    Code:
       0: new           #220                // class java/util/HashMap
       3: dup
       4: invokespecial #221                // Method java/util/HashMap."<init>":()V
       7: putstatic     #222                // Field REPOSITORY_CACHE:Ljava/util/Map;
      10: return
}
