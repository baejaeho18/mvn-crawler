Compiled from "TableWrapper.java"
public class cloud.agileframework.data.common.dao.TableWrapper<T> {
  private final T o;

  private final java.util.List<cloud.agileframework.data.common.dao.ColumnName> columns;

  private final java.lang.String tableName;

  public cloud.agileframework.data.common.dao.TableWrapper(T, java.util.function.Function<java.lang.Class<T>, java.util.List<cloud.agileframework.data.common.dao.ColumnName>>, java.util.function.Function<java.lang.Class<T>, java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field o:Ljava/lang/Object;
       9: aload_1
      10: invokevirtual #3                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: astore        4
      15: aload_0
      16: aload_3
      17: aload         4
      19: invokeinterface #4,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #5                  // class java/lang/String
      27: putfield      #6                  // Field tableName:Ljava/lang/String;
      30: aload_0
      31: aload_2
      32: aload         4
      34: invokeinterface #4,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #7                  // class java/util/List
      42: invokeinterface #8,  1            // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      47: invokedynamic #9,  0              // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      52: invokeinterface #10,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      57: invokestatic  #11                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      60: invokeinterface #12,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      65: checkcast     #7                  // class java/util/List
      68: putfield      #13                 // Field columns:Ljava/util/List;
      71: aload_0
      72: getfield      #13                 // Field columns:Ljava/util/List;
      75: invokeinterface #8,  1            // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      80: invokedynamic #14,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      85: invokeinterface #10,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      90: aload_1
      91: invokedynamic #15,  0             // InvokeDynamic #2:accept:(Ljava/lang/Object;)Ljava/util/function/Consumer;
      96: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
     101: aload_0
     102: getfield      #13                 // Field columns:Ljava/util/List;
     105: invokeinterface #8,  1            // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
     110: invokedynamic #17,  0             // InvokeDynamic #3:test:()Ljava/util/function/Predicate;
     115: invokeinterface #10,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
     120: aload_1
     121: invokedynamic #18,  0             // InvokeDynamic #4:accept:(Ljava/lang/Object;)Ljava/util/function/Consumer;
     126: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
     131: return

  public T getO();
    Code:
       0: aload_0
       1: getfield      #2                  // Field o:Ljava/lang/Object;
       4: areturn

  public java.util.List<cloud.agileframework.data.common.dao.ColumnName> getColumns();
    Code:
       0: aload_0
       1: getfield      #13                 // Field columns:Ljava/util/List;
       4: areturn

  public java.lang.String getTableName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field tableName:Ljava/lang/String;
       4: areturn

  private static void lambda$new$5(java.lang.Object, cloud.agileframework.data.common.dao.ColumnName);
    Code:
       0: aload_1
       1: invokevirtual #19                 // Method cloud/agileframework/data/common/dao/ColumnName.getMember:()Ljava/lang/reflect/Member;
       4: checkcast     #20                 // class java/lang/reflect/Method
       7: astore_2
       8: aload_2
       9: iconst_1
      10: invokevirtual #21                 // Method java/lang/reflect/Method.setAccessible:(Z)V
      13: aload_1
      14: aload_2
      15: aload_0
      16: iconst_0
      17: anewarray     #22                 // class java/lang/Object
      20: invokevirtual #23                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      23: invokestatic  #24                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      26: invokevirtual #25                 // Method cloud/agileframework/data/common/dao/ColumnName.setValue:(Ljava/util/Optional;)V
      29: goto          37
      32: astore_2
      33: aload_2
      34: invokevirtual #28                 // Method java/lang/ReflectiveOperationException.printStackTrace:()V
      37: aload_1
      38: invokestatic  #29                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      41: invokevirtual #25                 // Method cloud/agileframework/data/common/dao/ColumnName.setValue:(Ljava/util/Optional;)V
      44: return
    Exception table:
       from    to  target type
           0    29    32   Class java/lang/IllegalAccessException
           0    29    32   Class java/lang/reflect/InvocationTargetException

  private static boolean lambda$new$4(cloud.agileframework.data.common.dao.ColumnName);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method cloud/agileframework/data/common/dao/ColumnName.getMember:()Ljava/lang/reflect/Member;
       4: instanceof    #20                 // class java/lang/reflect/Method
       7: ireturn

  private static void lambda$new$3(java.lang.Object, cloud.agileframework.data.common.dao.ColumnName);
    Code:
       0: aload_1
       1: aload_0
       2: aload_1
       3: invokevirtual #19                 // Method cloud/agileframework/data/common/dao/ColumnName.getMember:()Ljava/lang/reflect/Member;
       6: checkcast     #30                 // class java/lang/reflect/Field
       9: invokestatic  #31                 // Method cloud/agileframework/common/util/object/ObjectUtil.getFieldValue:(Ljava/lang/Object;Ljava/lang/reflect/Field;)Ljava/lang/Object;
      12: invokestatic  #24                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      15: invokevirtual #25                 // Method cloud/agileframework/data/common/dao/ColumnName.setValue:(Ljava/util/Optional;)V
      18: return

  private static boolean lambda$new$2(cloud.agileframework.data.common.dao.ColumnName);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method cloud/agileframework/data/common/dao/ColumnName.getMember:()Ljava/lang/reflect/Member;
       4: instanceof    #30                 // class java/lang/reflect/Field
       7: ireturn

  private static boolean lambda$new$1(cloud.agileframework.data.common.dao.ColumnName);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method cloud/agileframework/data/common/dao/ColumnName.getMember:()Ljava/lang/reflect/Member;
       4: checkcast     #32                 // class java/lang/reflect/AccessibleObject
       7: checkcast     #32                 // class java/lang/reflect/AccessibleObject
      10: invokevirtual #33                 // Method java/lang/reflect/AccessibleObject.getAnnotations:()[Ljava/lang/annotation/Annotation;
      13: invokestatic  #34                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      16: invokedynamic #35,  0             // InvokeDynamic #5:test:()Ljava/util/function/Predicate;
      21: invokeinterface #36,  2           // InterfaceMethod java/util/stream/Stream.noneMatch:(Ljava/util/function/Predicate;)Z
      26: ireturn

  private static boolean lambda$null$0(java.lang.annotation.Annotation);
    Code:
       0: ldc           #37                 // String Transient
       2: aload_0
       3: invokeinterface #38,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
       8: invokevirtual #39                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      11: invokevirtual #40                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      14: ireturn
}
