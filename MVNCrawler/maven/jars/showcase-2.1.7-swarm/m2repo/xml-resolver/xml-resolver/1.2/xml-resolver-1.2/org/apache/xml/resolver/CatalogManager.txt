Compiled from "CatalogManager.java"
public class org.apache.xml.resolver.CatalogManager {
  private static java.lang.String pFiles;

  private static java.lang.String pVerbosity;

  private static java.lang.String pPrefer;

  private static java.lang.String pStatic;

  private static java.lang.String pAllowPI;

  private static java.lang.String pClassname;

  private static java.lang.String pIgnoreMissing;

  private static org.apache.xml.resolver.CatalogManager staticManager;

  private org.apache.xml.resolver.helpers.BootstrapResolver bResolver;

  private boolean ignoreMissingProperties;

  private java.util.ResourceBundle resources;

  private java.lang.String propertyFile;

  private java.net.URL propertyFileURI;

  private java.lang.String defaultCatalogFiles;

  private java.lang.String catalogFiles;

  private boolean fromPropertiesFile;

  private int defaultVerbosity;

  private java.lang.Integer verbosity;

  private boolean defaultPreferPublic;

  private java.lang.Boolean preferPublic;

  private boolean defaultUseStaticCatalog;

  private java.lang.Boolean useStaticCatalog;

  private static org.apache.xml.resolver.Catalog staticCatalog;

  private boolean defaultOasisXMLCatalogPI;

  private java.lang.Boolean oasisXMLCatalogPI;

  private boolean defaultRelativeCatalogs;

  private java.lang.Boolean relativeCatalogs;

  private java.lang.String catalogClassName;

  public org.apache.xml.resolver.helpers.Debug debug;

  static java.lang.Class class$org$apache$xml$resolver$CatalogManager;

  public org.apache.xml.resolver.CatalogManager();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class org/apache/xml/resolver/helpers/BootstrapResolver
       8: dup
       9: invokespecial #8                  // Method org/apache/xml/resolver/helpers/BootstrapResolver."<init>":()V
      12: putfield      #9                  // Field bResolver:Lorg/apache/xml/resolver/helpers/BootstrapResolver;
      15: aload_0
      16: getstatic     #10                 // Field pIgnoreMissing:Ljava/lang/String;
      19: invokestatic  #11                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      22: ifnonnull     34
      25: getstatic     #12                 // Field pFiles:Ljava/lang/String;
      28: invokestatic  #11                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      31: ifnull        38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: putfield      #13                 // Field ignoreMissingProperties:Z
      42: aload_0
      43: ldc           #14                 // String CatalogManager.properties
      45: putfield      #15                 // Field propertyFile:Ljava/lang/String;
      48: aload_0
      49: aconst_null
      50: putfield      #16                 // Field propertyFileURI:Ljava/net/URL;
      53: aload_0
      54: ldc           #17                 // String ./xcatalog
      56: putfield      #18                 // Field defaultCatalogFiles:Ljava/lang/String;
      59: aload_0
      60: aconst_null
      61: putfield      #19                 // Field catalogFiles:Ljava/lang/String;
      64: aload_0
      65: iconst_0
      66: putfield      #20                 // Field fromPropertiesFile:Z
      69: aload_0
      70: iconst_1
      71: putfield      #21                 // Field defaultVerbosity:I
      74: aload_0
      75: aconst_null
      76: putfield      #22                 // Field verbosity:Ljava/lang/Integer;
      79: aload_0
      80: iconst_1
      81: putfield      #23                 // Field defaultPreferPublic:Z
      84: aload_0
      85: aconst_null
      86: putfield      #24                 // Field preferPublic:Ljava/lang/Boolean;
      89: aload_0
      90: iconst_1
      91: putfield      #25                 // Field defaultUseStaticCatalog:Z
      94: aload_0
      95: aconst_null
      96: putfield      #26                 // Field useStaticCatalog:Ljava/lang/Boolean;
      99: aload_0
     100: iconst_1
     101: putfield      #27                 // Field defaultOasisXMLCatalogPI:Z
     104: aload_0
     105: aconst_null
     106: putfield      #28                 // Field oasisXMLCatalogPI:Ljava/lang/Boolean;
     109: aload_0
     110: iconst_1
     111: putfield      #29                 // Field defaultRelativeCatalogs:Z
     114: aload_0
     115: aconst_null
     116: putfield      #30                 // Field relativeCatalogs:Ljava/lang/Boolean;
     119: aload_0
     120: aconst_null
     121: putfield      #31                 // Field catalogClassName:Ljava/lang/String;
     124: aload_0
     125: aconst_null
     126: putfield      #32                 // Field debug:Lorg/apache/xml/resolver/helpers/Debug;
     129: aload_0
     130: new           #33                 // class org/apache/xml/resolver/helpers/Debug
     133: dup
     134: invokespecial #34                 // Method org/apache/xml/resolver/helpers/Debug."<init>":()V
     137: putfield      #32                 // Field debug:Lorg/apache/xml/resolver/helpers/Debug;
     140: return

  public org.apache.xml.resolver.CatalogManager(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class org/apache/xml/resolver/helpers/BootstrapResolver
       8: dup
       9: invokespecial #8                  // Method org/apache/xml/resolver/helpers/BootstrapResolver."<init>":()V
      12: putfield      #9                  // Field bResolver:Lorg/apache/xml/resolver/helpers/BootstrapResolver;
      15: aload_0
      16: getstatic     #10                 // Field pIgnoreMissing:Ljava/lang/String;
      19: invokestatic  #11                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      22: ifnonnull     34
      25: getstatic     #12                 // Field pFiles:Ljava/lang/String;
      28: invokestatic  #11                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      31: ifnull        38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: putfield      #13                 // Field ignoreMissingProperties:Z
      42: aload_0
      43: ldc           #14                 // String CatalogManager.properties
      45: putfield      #15                 // Field propertyFile:Ljava/lang/String;
      48: aload_0
      49: aconst_null
      50: putfield      #16                 // Field propertyFileURI:Ljava/net/URL;
      53: aload_0
      54: ldc           #17                 // String ./xcatalog
      56: putfield      #18                 // Field defaultCatalogFiles:Ljava/lang/String;
      59: aload_0
      60: aconst_null
      61: putfield      #19                 // Field catalogFiles:Ljava/lang/String;
      64: aload_0
      65: iconst_0
      66: putfield      #20                 // Field fromPropertiesFile:Z
      69: aload_0
      70: iconst_1
      71: putfield      #21                 // Field defaultVerbosity:I
      74: aload_0
      75: aconst_null
      76: putfield      #22                 // Field verbosity:Ljava/lang/Integer;
      79: aload_0
      80: iconst_1
      81: putfield      #23                 // Field defaultPreferPublic:Z
      84: aload_0
      85: aconst_null
      86: putfield      #24                 // Field preferPublic:Ljava/lang/Boolean;
      89: aload_0
      90: iconst_1
      91: putfield      #25                 // Field defaultUseStaticCatalog:Z
      94: aload_0
      95: aconst_null
      96: putfield      #26                 // Field useStaticCatalog:Ljava/lang/Boolean;
      99: aload_0
     100: iconst_1
     101: putfield      #27                 // Field defaultOasisXMLCatalogPI:Z
     104: aload_0
     105: aconst_null
     106: putfield      #28                 // Field oasisXMLCatalogPI:Ljava/lang/Boolean;
     109: aload_0
     110: iconst_1
     111: putfield      #29                 // Field defaultRelativeCatalogs:Z
     114: aload_0
     115: aconst_null
     116: putfield      #30                 // Field relativeCatalogs:Ljava/lang/Boolean;
     119: aload_0
     120: aconst_null
     121: putfield      #31                 // Field catalogClassName:Ljava/lang/String;
     124: aload_0
     125: aconst_null
     126: putfield      #32                 // Field debug:Lorg/apache/xml/resolver/helpers/Debug;
     129: aload_0
     130: aload_1
     131: putfield      #15                 // Field propertyFile:Ljava/lang/String;
     134: aload_0
     135: new           #33                 // class org/apache/xml/resolver/helpers/Debug
     138: dup
     139: invokespecial #34                 // Method org/apache/xml/resolver/helpers/Debug."<init>":()V
     142: putfield      #32                 // Field debug:Lorg/apache/xml/resolver/helpers/Debug;
     145: return

  public void setBootstrapResolver(org.apache.xml.resolver.helpers.BootstrapResolver);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field bResolver:Lorg/apache/xml/resolver/helpers/BootstrapResolver;
       5: return

  public org.apache.xml.resolver.helpers.BootstrapResolver getBootstrapResolver();
    Code:
       0: aload_0
       1: getfield      #9                  // Field bResolver:Lorg/apache/xml/resolver/helpers/BootstrapResolver;
       4: areturn

  private synchronized void readProperties();
    Code:
       0: aload_0
       1: getstatic     #35                 // Field class$org$apache$xml$resolver$CatalogManager:Ljava/lang/Class;
       4: ifnonnull     19
       7: ldc           #36                 // String org.apache.xml.resolver.CatalogManager
       9: invokestatic  #37                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      12: dup
      13: putstatic     #35                 // Field class$org$apache$xml$resolver$CatalogManager:Ljava/lang/Class;
      16: goto          22
      19: getstatic     #35                 // Field class$org$apache$xml$resolver$CatalogManager:Ljava/lang/Class;
      22: new           #38                 // class java/lang/StringBuffer
      25: dup
      26: invokespecial #39                 // Method java/lang/StringBuffer."<init>":()V
      29: ldc           #40                 // String /
      31: invokevirtual #41                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      34: aload_0
      35: getfield      #15                 // Field propertyFile:Ljava/lang/String;
      38: invokevirtual #41                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      41: invokevirtual #42                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      44: invokevirtual #43                 // Method java/lang/Class.getResource:(Ljava/lang/String;)Ljava/net/URL;
      47: putfield      #16                 // Field propertyFileURI:Ljava/net/URL;
      50: getstatic     #35                 // Field class$org$apache$xml$resolver$CatalogManager:Ljava/lang/Class;
      53: ifnonnull     68
      56: ldc           #36                 // String org.apache.xml.resolver.CatalogManager
      58: invokestatic  #37                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      61: dup
      62: putstatic     #35                 // Field class$org$apache$xml$resolver$CatalogManager:Ljava/lang/Class;
      65: goto          71
      68: getstatic     #35                 // Field class$org$apache$xml$resolver$CatalogManager:Ljava/lang/Class;
      71: new           #38                 // class java/lang/StringBuffer
      74: dup
      75: invokespecial #39                 // Method java/lang/StringBuffer."<init>":()V
      78: ldc           #40                 // String /
      80: invokevirtual #41                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      83: aload_0
      84: getfield      #15                 // Field propertyFile:Ljava/lang/String;
      87: invokevirtual #41                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      90: invokevirtual #42                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      93: invokevirtual #44                 // Method java/lang/Class.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      96: astore_1
      97: aload_1
      98: ifnonnull     142
     101: aload_0
     102: getfield      #13                 // Field ignoreMissingProperties:Z
     105: ifne          141
     108: getstatic     #45                 // Field java/lang/System.err:Ljava/io/PrintStream;
     111: new           #38                 // class java/lang/StringBuffer
     114: dup
     115: invokespecial #39                 // Method java/lang/StringBuffer."<init>":()V
     118: ldc           #46                 // String Cannot find
     120: invokevirtual #41                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     123: aload_0
     124: getfield      #15                 // Field propertyFile:Ljava/lang/String;
     127: invokevirtual #41                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     130: invokevirtual #42                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     133: invokevirtual #47                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     136: aload_0
     137: iconst_1
     138: putfield      #13                 // Field ignoreMissingProperties:Z
     141: return
     142: aload_0
     143: new           #48                 // class java/util/PropertyResourceBundle
     146: dup
     147: aload_1
     148: invokespecial #49                 // Method java/util/PropertyResourceBundle."<init>":(Ljava/io/InputStream;)V
     151: putfield      #50                 // Field resources:Ljava/util/ResourceBundle;
     154: goto          232
     157: astore_1
     158: aload_0
     159: getfield      #13                 // Field ignoreMissingProperties:Z
     162: ifne          232
     165: getstatic     #45                 // Field java/lang/System.err:Ljava/io/PrintStream;
     168: new           #38                 // class java/lang/StringBuffer
     171: dup
     172: invokespecial #39                 // Method java/lang/StringBuffer."<init>":()V
     175: ldc           #52                 // String Cannot read
     177: invokevirtual #41                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     180: aload_0
     181: getfield      #15                 // Field propertyFile:Ljava/lang/String;
     184: invokevirtual #41                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     187: invokevirtual #42                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     190: invokevirtual #47                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     193: goto          232
     196: astore_2
     197: aload_0
     198: getfield      #13                 // Field ignoreMissingProperties:Z
     201: ifne          232
     204: getstatic     #45                 // Field java/lang/System.err:Ljava/io/PrintStream;
     207: new           #38                 // class java/lang/StringBuffer
     210: dup
     211: invokespecial #39                 // Method java/lang/StringBuffer."<init>":()V
     214: ldc           #54                 // String Failure trying to read
     216: invokevirtual #41                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     219: aload_0
     220: getfield      #15                 // Field propertyFile:Ljava/lang/String;
     223: invokevirtual #41                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     226: invokevirtual #42                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     229: invokevirtual #47                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     232: aload_0
     233: getfield      #22                 // Field verbosity:Ljava/lang/Integer;
     236: ifnonnull     281
     239: aload_0
     240: getfield      #50                 // Field resources:Ljava/util/ResourceBundle;
     243: ldc           #55                 // String verbosity
     245: invokevirtual #56                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
     248: astore_1
     249: aload_1
     250: invokevirtual #57                 // Method java/lang/String.trim:()Ljava/lang/String;
     253: invokestatic  #58                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     256: istore_2
     257: aload_0
     258: getfield      #32                 // Field debug:Lorg/apache/xml/resolver/helpers/Debug;
     261: iload_2
     262: invokevirtual #59                 // Method org/apache/xml/resolver/helpers/Debug.setDebug:(I)V
     265: aload_0
     266: new           #60                 // class java/lang/Integer
     269: dup
     270: iload_2
     271: invokespecial #61                 // Method java/lang/Integer."<init>":(I)V
     274: putfield      #22                 // Field verbosity:Ljava/lang/Integer;
     277: goto          281
     280: astore_1
     281: return
    Exception table:
       from    to  target type
           0   154   157   Class java/util/MissingResourceException
           0   154   196   Class java/io/IOException
         239   277   280   Class java/lang/Exception

  public static org.apache.xml.resolver.CatalogManager getStaticManager();
    Code:
       0: getstatic     #63                 // Field staticManager:Lorg/apache/xml/resolver/CatalogManager;
       3: areturn

  public boolean getIgnoreMissingProperties();
    Code:
       0: aload_0
       1: getfield      #13                 // Field ignoreMissingProperties:Z
       4: ireturn

  public void setIgnoreMissingProperties(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field ignoreMissingProperties:Z
       5: return

  public void ignoreMissingProperties(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #64                 // Method setIgnoreMissingProperties:(Z)V
       5: return

  private int queryVerbosity();
    Code:
       0: aload_0
       1: getfield      #21                 // Field defaultVerbosity:I
       4: invokestatic  #65                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       7: astore_1
       8: getstatic     #66                 // Field pVerbosity:Ljava/lang/String;
      11: invokestatic  #11                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      14: astore_2
      15: aload_2
      16: ifnonnull     58
      19: aload_0
      20: getfield      #50                 // Field resources:Ljava/util/ResourceBundle;
      23: ifnonnull     30
      26: aload_0
      27: invokespecial #67                 // Method readProperties:()V
      30: aload_0
      31: getfield      #50                 // Field resources:Ljava/util/ResourceBundle;
      34: ifnull        56
      37: aload_0
      38: getfield      #50                 // Field resources:Ljava/util/ResourceBundle;
      41: ldc           #55                 // String verbosity
      43: invokevirtual #56                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      46: astore_2
      47: goto          53
      50: astore_3
      51: aload_1
      52: astore_2
      53: goto          58
      56: aload_1
      57: astore_2
      58: aload_0
      59: getfield      #21                 // Field defaultVerbosity:I
      62: istore_3
      63: aload_2
      64: invokevirtual #57                 // Method java/lang/String.trim:()Ljava/lang/String;
      67: invokestatic  #58                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      70: istore_3
      71: goto          106
      74: astore        4
      76: getstatic     #45                 // Field java/lang/System.err:Ljava/io/PrintStream;
      79: new           #38                 // class java/lang/StringBuffer
      82: dup
      83: invokespecial #39                 // Method java/lang/StringBuffer."<init>":()V
      86: ldc           #68                 // String Cannot parse verbosity: \"
      88: invokevirtual #41                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      91: aload_2
      92: invokevirtual #41                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      95: ldc           #69                 // String \"
      97: invokevirtual #41                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     100: invokevirtual #42                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     103: invokevirtual #47                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     106: aload_0
     107: getfield      #22                 // Field verbosity:Ljava/lang/Integer;
     110: ifnonnull     133
     113: aload_0
     114: getfield      #32                 // Field debug:Lorg/apache/xml/resolver/helpers/Debug;
     117: iload_3
     118: invokevirtual #59                 // Method org/apache/xml/resolver/helpers/Debug.setDebug:(I)V
     121: aload_0
     122: new           #60                 // class java/lang/Integer
     125: dup
     126: iload_3
     127: invokespecial #61                 // Method java/lang/Integer."<init>":(I)V
     130: putfield      #22                 // Field verbosity:Ljava/lang/Integer;
     133: iload_3
     134: ireturn
    Exception table:
       from    to  target type
          37    47    50   Class java/util/MissingResourceException
          63    71    74   Class java/lang/Exception

  public int getVerbosity();
    Code:
       0: aload_0
       1: getfield      #22                 // Field verbosity:Ljava/lang/Integer;
       4: ifnonnull     22
       7: aload_0
       8: new           #60                 // class java/lang/Integer
      11: dup
      12: aload_0
      13: invokespecial #70                 // Method queryVerbosity:()I
      16: invokespecial #61                 // Method java/lang/Integer."<init>":(I)V
      19: putfield      #22                 // Field verbosity:Ljava/lang/Integer;
      22: aload_0
      23: getfield      #22                 // Field verbosity:Ljava/lang/Integer;
      26: invokevirtual #71                 // Method java/lang/Integer.intValue:()I
      29: ireturn

  public void setVerbosity(int);
    Code:
       0: aload_0
       1: new           #60                 // class java/lang/Integer
       4: dup
       5: iload_1
       6: invokespecial #61                 // Method java/lang/Integer."<init>":(I)V
       9: putfield      #22                 // Field verbosity:Ljava/lang/Integer;
      12: aload_0
      13: getfield      #32                 // Field debug:Lorg/apache/xml/resolver/helpers/Debug;
      16: iload_1
      17: invokevirtual #59                 // Method org/apache/xml/resolver/helpers/Debug.setDebug:(I)V
      20: return

  public int verbosity();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method getVerbosity:()I
       4: ireturn

  private boolean queryRelativeCatalogs();
    Code:
       0: aload_0
       1: getfield      #50                 // Field resources:Ljava/util/ResourceBundle;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #67                 // Method readProperties:()V
      11: aload_0
      12: getfield      #50                 // Field resources:Ljava/util/ResourceBundle;
      15: ifnonnull     23
      18: aload_0
      19: getfield      #29                 // Field defaultRelativeCatalogs:Z
      22: ireturn
      23: aload_0
      24: getfield      #50                 // Field resources:Ljava/util/ResourceBundle;
      27: ldc           #73                 // String relative-catalogs
      29: invokevirtual #56                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      32: astore_1
      33: aload_1
      34: ldc           #74                 // String true
      36: invokevirtual #75                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      39: ifne          60
      42: aload_1
      43: ldc           #76                 // String yes
      45: invokevirtual #75                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      48: ifne          60
      51: aload_1
      52: ldc           #77                 // String 1
      54: invokevirtual #75                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      57: ifeq          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: ireturn
      66: astore_1
      67: aload_0
      68: getfield      #29                 // Field defaultRelativeCatalogs:Z
      71: ireturn
    Exception table:
       from    to  target type
          23    66    66   Class java/util/MissingResourceException

  public boolean getRelativeCatalogs();
    Code:
       0: aload_0
       1: getfield      #30                 // Field relativeCatalogs:Ljava/lang/Boolean;
       4: ifnonnull     22
       7: aload_0
       8: new           #78                 // class java/lang/Boolean
      11: dup
      12: aload_0
      13: invokespecial #79                 // Method queryRelativeCatalogs:()Z
      16: invokespecial #80                 // Method java/lang/Boolean."<init>":(Z)V
      19: putfield      #30                 // Field relativeCatalogs:Ljava/lang/Boolean;
      22: aload_0
      23: getfield      #30                 // Field relativeCatalogs:Ljava/lang/Boolean;
      26: invokevirtual #81                 // Method java/lang/Boolean.booleanValue:()Z
      29: ireturn

  public void setRelativeCatalogs(boolean);
    Code:
       0: aload_0
       1: new           #78                 // class java/lang/Boolean
       4: dup
       5: iload_1
       6: invokespecial #80                 // Method java/lang/Boolean."<init>":(Z)V
       9: putfield      #30                 // Field relativeCatalogs:Ljava/lang/Boolean;
      12: return

  public boolean relativeCatalogs();
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method getRelativeCatalogs:()Z
       4: ireturn

  private java.lang.String queryCatalogFiles();
    Code:
       0: getstatic     #12                 // Field pFiles:Ljava/lang/String;
       3: invokestatic  #11                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_0
       8: iconst_0
       9: putfield      #20                 // Field fromPropertiesFile:Z
      12: aload_1
      13: ifnonnull     83
      16: aload_0
      17: getfield      #50                 // Field resources:Ljava/util/ResourceBundle;
      20: ifnonnull     27
      23: aload_0
      24: invokespecial #67                 // Method readProperties:()V
      27: aload_0
      28: getfield      #50                 // Field resources:Ljava/util/ResourceBundle;
      31: ifnull        83
      34: aload_0
      35: getfield      #50                 // Field resources:Ljava/util/ResourceBundle;
      38: ldc           #83                 // String catalogs
      40: invokevirtual #56                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      43: astore_1
      44: aload_0
      45: iconst_1
      46: putfield      #20                 // Field fromPropertiesFile:Z
      49: goto          83
      52: astore_2
      53: getstatic     #45                 // Field java/lang/System.err:Ljava/io/PrintStream;
      56: new           #38                 // class java/lang/StringBuffer
      59: dup
      60: invokespecial #39                 // Method java/lang/StringBuffer."<init>":()V
      63: aload_0
      64: getfield      #15                 // Field propertyFile:Ljava/lang/String;
      67: invokevirtual #41                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      70: ldc           #84                 // String : catalogs not found.
      72: invokevirtual #41                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      75: invokevirtual #42                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      78: invokevirtual #47                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      81: aconst_null
      82: astore_1
      83: aload_1
      84: ifnonnull     92
      87: aload_0
      88: getfield      #18                 // Field defaultCatalogFiles:Ljava/lang/String;
      91: astore_1
      92: aload_1
      93: areturn
    Exception table:
       from    to  target type
          34    49    52   Class java/util/MissingResourceException

  public java.util.Vector getCatalogFiles();
    Code:
       0: aload_0
       1: getfield      #19                 // Field catalogFiles:Ljava/lang/String;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokespecial #85                 // Method queryCatalogFiles:()Ljava/lang/String;
      12: putfield      #19                 // Field catalogFiles:Ljava/lang/String;
      15: new           #86                 // class java/util/StringTokenizer
      18: dup
      19: aload_0
      20: getfield      #19                 // Field catalogFiles:Ljava/lang/String;
      23: ldc           #87                 // String ;
      25: invokespecial #88                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      28: astore_1
      29: new           #89                 // class java/util/Vector
      32: dup
      33: invokespecial #90                 // Method java/util/Vector."<init>":()V
      36: astore_2
      37: goto          96
      40: aload_1
      41: invokevirtual #91                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      44: astore_3
      45: aconst_null
      46: astore        4
      48: aload_0
      49: getfield      #20                 // Field fromPropertiesFile:Z
      52: ifeq          90
      55: aload_0
      56: invokevirtual #92                 // Method relativeCatalogs:()Z
      59: ifne          90
      62: new           #93                 // class java/net/URL
      65: dup
      66: aload_0
      67: getfield      #16                 // Field propertyFileURI:Ljava/net/URL;
      70: aload_3
      71: invokespecial #94                 // Method java/net/URL."<init>":(Ljava/net/URL;Ljava/lang/String;)V
      74: astore        4
      76: aload         4
      78: invokevirtual #95                 // Method java/net/URL.toString:()Ljava/lang/String;
      81: astore_3
      82: goto          90
      85: astore        5
      87: aconst_null
      88: astore        4
      90: aload_2
      91: aload_3
      92: invokevirtual #97                 // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      95: pop
      96: aload_1
      97: invokevirtual #98                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
     100: ifne          40
     103: aload_2
     104: areturn
    Exception table:
       from    to  target type
          62    82    85   Class java/net/MalformedURLException

  public void setCatalogFiles(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field catalogFiles:Ljava/lang/String;
       5: aload_0
       6: iconst_0
       7: putfield      #20                 // Field fromPropertiesFile:Z
      10: return

  public java.util.Vector catalogFiles();
    Code:
       0: aload_0
       1: invokevirtual #99                 // Method getCatalogFiles:()Ljava/util/Vector;
       4: areturn

  private boolean queryPreferPublic();
    Code:
       0: getstatic     #100                // Field pPrefer:Ljava/lang/String;
       3: invokestatic  #11                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnonnull     53
      11: aload_0
      12: getfield      #50                 // Field resources:Ljava/util/ResourceBundle;
      15: ifnonnull     22
      18: aload_0
      19: invokespecial #67                 // Method readProperties:()V
      22: aload_0
      23: getfield      #50                 // Field resources:Ljava/util/ResourceBundle;
      26: ifnonnull     34
      29: aload_0
      30: getfield      #23                 // Field defaultPreferPublic:Z
      33: ireturn
      34: aload_0
      35: getfield      #50                 // Field resources:Ljava/util/ResourceBundle;
      38: ldc           #101                // String prefer
      40: invokevirtual #56                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      43: astore_1
      44: goto          53
      47: astore_2
      48: aload_0
      49: getfield      #23                 // Field defaultPreferPublic:Z
      52: ireturn
      53: aload_1
      54: ifnonnull     62
      57: aload_0
      58: getfield      #23                 // Field defaultPreferPublic:Z
      61: ireturn
      62: aload_1
      63: ldc           #102                // String public
      65: invokevirtual #75                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      68: ireturn
    Exception table:
       from    to  target type
          34    44    47   Class java/util/MissingResourceException

  public boolean getPreferPublic();
    Code:
       0: aload_0
       1: getfield      #24                 // Field preferPublic:Ljava/lang/Boolean;
       4: ifnonnull     22
       7: aload_0
       8: new           #78                 // class java/lang/Boolean
      11: dup
      12: aload_0
      13: invokespecial #103                // Method queryPreferPublic:()Z
      16: invokespecial #80                 // Method java/lang/Boolean."<init>":(Z)V
      19: putfield      #24                 // Field preferPublic:Ljava/lang/Boolean;
      22: aload_0
      23: getfield      #24                 // Field preferPublic:Ljava/lang/Boolean;
      26: invokevirtual #81                 // Method java/lang/Boolean.booleanValue:()Z
      29: ireturn

  public void setPreferPublic(boolean);
    Code:
       0: aload_0
       1: new           #78                 // class java/lang/Boolean
       4: dup
       5: iload_1
       6: invokespecial #80                 // Method java/lang/Boolean."<init>":(Z)V
       9: putfield      #24                 // Field preferPublic:Ljava/lang/Boolean;
      12: return

  public boolean preferPublic();
    Code:
       0: aload_0
       1: invokevirtual #104                // Method getPreferPublic:()Z
       4: ireturn

  private boolean queryUseStaticCatalog();
    Code:
       0: getstatic     #105                // Field pStatic:Ljava/lang/String;
       3: invokestatic  #11                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnonnull     53
      11: aload_0
      12: getfield      #50                 // Field resources:Ljava/util/ResourceBundle;
      15: ifnonnull     22
      18: aload_0
      19: invokespecial #67                 // Method readProperties:()V
      22: aload_0
      23: getfield      #50                 // Field resources:Ljava/util/ResourceBundle;
      26: ifnonnull     34
      29: aload_0
      30: getfield      #25                 // Field defaultUseStaticCatalog:Z
      33: ireturn
      34: aload_0
      35: getfield      #50                 // Field resources:Ljava/util/ResourceBundle;
      38: ldc           #106                // String static-catalog
      40: invokevirtual #56                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      43: astore_1
      44: goto          53
      47: astore_2
      48: aload_0
      49: getfield      #25                 // Field defaultUseStaticCatalog:Z
      52: ireturn
      53: aload_1
      54: ifnonnull     62
      57: aload_0
      58: getfield      #25                 // Field defaultUseStaticCatalog:Z
      61: ireturn
      62: aload_1
      63: ldc           #74                 // String true
      65: invokevirtual #75                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      68: ifne          89
      71: aload_1
      72: ldc           #76                 // String yes
      74: invokevirtual #75                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      77: ifne          89
      80: aload_1
      81: ldc           #77                 // String 1
      83: invokevirtual #75                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      86: ifeq          93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: ireturn
    Exception table:
       from    to  target type
          34    44    47   Class java/util/MissingResourceException

  public boolean getUseStaticCatalog();
    Code:
       0: aload_0
       1: getfield      #26                 // Field useStaticCatalog:Ljava/lang/Boolean;
       4: ifnonnull     22
       7: aload_0
       8: new           #78                 // class java/lang/Boolean
      11: dup
      12: aload_0
      13: invokespecial #107                // Method queryUseStaticCatalog:()Z
      16: invokespecial #80                 // Method java/lang/Boolean."<init>":(Z)V
      19: putfield      #26                 // Field useStaticCatalog:Ljava/lang/Boolean;
      22: aload_0
      23: getfield      #26                 // Field useStaticCatalog:Ljava/lang/Boolean;
      26: invokevirtual #81                 // Method java/lang/Boolean.booleanValue:()Z
      29: ireturn

  public void setUseStaticCatalog(boolean);
    Code:
       0: aload_0
       1: new           #78                 // class java/lang/Boolean
       4: dup
       5: iload_1
       6: invokespecial #80                 // Method java/lang/Boolean."<init>":(Z)V
       9: putfield      #26                 // Field useStaticCatalog:Ljava/lang/Boolean;
      12: return

  public boolean staticCatalog();
    Code:
       0: aload_0
       1: invokevirtual #108                // Method getUseStaticCatalog:()Z
       4: ireturn

  public org.apache.xml.resolver.Catalog getPrivateCatalog();
    Code:
       0: getstatic     #109                // Field staticCatalog:Lorg/apache/xml/resolver/Catalog;
       3: astore_1
       4: aload_0
       5: getfield      #26                 // Field useStaticCatalog:Ljava/lang/Boolean;
       8: ifnonnull     26
      11: aload_0
      12: new           #78                 // class java/lang/Boolean
      15: dup
      16: aload_0
      17: invokevirtual #108                // Method getUseStaticCatalog:()Z
      20: invokespecial #80                 // Method java/lang/Boolean."<init>":(Z)V
      23: putfield      #26                 // Field useStaticCatalog:Ljava/lang/Boolean;
      26: aload_1
      27: ifnull        40
      30: aload_0
      31: getfield      #26                 // Field useStaticCatalog:Ljava/lang/Boolean;
      34: invokevirtual #81                 // Method java/lang/Boolean.booleanValue:()Z
      37: ifne          195
      40: aload_0
      41: invokevirtual #110                // Method getCatalogClassName:()Ljava/lang/String;
      44: astore_2
      45: aload_2
      46: ifnonnull     60
      49: new           #111                // class org/apache/xml/resolver/Catalog
      52: dup
      53: invokespecial #112                // Method org/apache/xml/resolver/Catalog."<init>":()V
      56: astore_1
      57: goto          160
      60: aload_2
      61: invokestatic  #1                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      64: invokevirtual #113                // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      67: checkcast     #111                // class org/apache/xml/resolver/Catalog
      70: astore_1
      71: goto          160
      74: astore_3
      75: aload_0
      76: getfield      #32                 // Field debug:Lorg/apache/xml/resolver/helpers/Debug;
      79: iconst_1
      80: new           #38                 // class java/lang/StringBuffer
      83: dup
      84: invokespecial #39                 // Method java/lang/StringBuffer."<init>":()V
      87: ldc           #114                // String Catalog class named \'
      89: invokevirtual #41                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      92: aload_2
      93: invokevirtual #41                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      96: ldc           #115                // String \' could not be found. Using default.
      98: invokevirtual #41                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     101: invokevirtual #42                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     104: invokevirtual #116                // Method org/apache/xml/resolver/helpers/Debug.message:(ILjava/lang/String;)V
     107: new           #111                // class org/apache/xml/resolver/Catalog
     110: dup
     111: invokespecial #112                // Method org/apache/xml/resolver/Catalog."<init>":()V
     114: astore_1
     115: goto          160
     118: astore        4
     120: aload_0
     121: getfield      #32                 // Field debug:Lorg/apache/xml/resolver/helpers/Debug;
     124: iconst_1
     125: new           #38                 // class java/lang/StringBuffer
     128: dup
     129: invokespecial #39                 // Method java/lang/StringBuffer."<init>":()V
     132: ldc           #118                // String Class named \'
     134: invokevirtual #41                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     137: aload_2
     138: invokevirtual #41                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     141: ldc           #119                // String \' is not a Catalog. Using default.
     143: invokevirtual #41                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     146: invokevirtual #42                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     149: invokevirtual #116                // Method org/apache/xml/resolver/helpers/Debug.message:(ILjava/lang/String;)V
     152: new           #111                // class org/apache/xml/resolver/Catalog
     155: dup
     156: invokespecial #112                // Method org/apache/xml/resolver/Catalog."<init>":()V
     159: astore_1
     160: aload_1
     161: aload_0
     162: invokevirtual #120                // Method org/apache/xml/resolver/Catalog.setCatalogManager:(Lorg/apache/xml/resolver/CatalogManager;)V
     165: aload_1
     166: invokevirtual #121                // Method org/apache/xml/resolver/Catalog.setupReaders:()V
     169: aload_1
     170: invokevirtual #122                // Method org/apache/xml/resolver/Catalog.loadSystemCatalogs:()V
     173: goto          181
     176: astore_2
     177: aload_2
     178: invokevirtual #123                // Method java/lang/Throwable.printStackTrace:()V
     181: aload_0
     182: getfield      #26                 // Field useStaticCatalog:Ljava/lang/Boolean;
     185: invokevirtual #81                 // Method java/lang/Boolean.booleanValue:()Z
     188: ifeq          195
     191: aload_1
     192: putstatic     #109                // Field staticCatalog:Lorg/apache/xml/resolver/Catalog;
     195: aload_1
     196: areturn
    Exception table:
       from    to  target type
          60    71    74   Class java/lang/ClassNotFoundException
          60    71   118   Class java/lang/ClassCastException
          40   173   176   Class java/lang/Exception

  public org.apache.xml.resolver.Catalog getCatalog();
    Code:
       0: getstatic     #109                // Field staticCatalog:Lorg/apache/xml/resolver/Catalog;
       3: astore_1
       4: aload_0
       5: getfield      #26                 // Field useStaticCatalog:Ljava/lang/Boolean;
       8: ifnonnull     26
      11: aload_0
      12: new           #78                 // class java/lang/Boolean
      15: dup
      16: aload_0
      17: invokevirtual #108                // Method getUseStaticCatalog:()Z
      20: invokespecial #80                 // Method java/lang/Boolean."<init>":(Z)V
      23: putfield      #26                 // Field useStaticCatalog:Ljava/lang/Boolean;
      26: aload_1
      27: ifnull        40
      30: aload_0
      31: getfield      #26                 // Field useStaticCatalog:Ljava/lang/Boolean;
      34: invokevirtual #81                 // Method java/lang/Boolean.booleanValue:()Z
      37: ifne          59
      40: aload_0
      41: invokevirtual #124                // Method getPrivateCatalog:()Lorg/apache/xml/resolver/Catalog;
      44: astore_1
      45: aload_0
      46: getfield      #26                 // Field useStaticCatalog:Ljava/lang/Boolean;
      49: invokevirtual #81                 // Method java/lang/Boolean.booleanValue:()Z
      52: ifeq          59
      55: aload_1
      56: putstatic     #109                // Field staticCatalog:Lorg/apache/xml/resolver/Catalog;
      59: aload_1
      60: areturn

  public boolean queryAllowOasisXMLCatalogPI();
    Code:
       0: getstatic     #125                // Field pAllowPI:Ljava/lang/String;
       3: invokestatic  #11                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnonnull     53
      11: aload_0
      12: getfield      #50                 // Field resources:Ljava/util/ResourceBundle;
      15: ifnonnull     22
      18: aload_0
      19: invokespecial #67                 // Method readProperties:()V
      22: aload_0
      23: getfield      #50                 // Field resources:Ljava/util/ResourceBundle;
      26: ifnonnull     34
      29: aload_0
      30: getfield      #27                 // Field defaultOasisXMLCatalogPI:Z
      33: ireturn
      34: aload_0
      35: getfield      #50                 // Field resources:Ljava/util/ResourceBundle;
      38: ldc           #126                // String allow-oasis-xml-catalog-pi
      40: invokevirtual #56                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      43: astore_1
      44: goto          53
      47: astore_2
      48: aload_0
      49: getfield      #27                 // Field defaultOasisXMLCatalogPI:Z
      52: ireturn
      53: aload_1
      54: ifnonnull     62
      57: aload_0
      58: getfield      #27                 // Field defaultOasisXMLCatalogPI:Z
      61: ireturn
      62: aload_1
      63: ldc           #74                 // String true
      65: invokevirtual #75                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      68: ifne          89
      71: aload_1
      72: ldc           #76                 // String yes
      74: invokevirtual #75                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      77: ifne          89
      80: aload_1
      81: ldc           #77                 // String 1
      83: invokevirtual #75                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      86: ifeq          93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: ireturn
    Exception table:
       from    to  target type
          34    44    47   Class java/util/MissingResourceException

  public boolean getAllowOasisXMLCatalogPI();
    Code:
       0: aload_0
       1: getfield      #28                 // Field oasisXMLCatalogPI:Ljava/lang/Boolean;
       4: ifnonnull     22
       7: aload_0
       8: new           #78                 // class java/lang/Boolean
      11: dup
      12: aload_0
      13: invokevirtual #127                // Method queryAllowOasisXMLCatalogPI:()Z
      16: invokespecial #80                 // Method java/lang/Boolean."<init>":(Z)V
      19: putfield      #28                 // Field oasisXMLCatalogPI:Ljava/lang/Boolean;
      22: aload_0
      23: getfield      #28                 // Field oasisXMLCatalogPI:Ljava/lang/Boolean;
      26: invokevirtual #81                 // Method java/lang/Boolean.booleanValue:()Z
      29: ireturn

  public void setAllowOasisXMLCatalogPI(boolean);
    Code:
       0: aload_0
       1: new           #78                 // class java/lang/Boolean
       4: dup
       5: iload_1
       6: invokespecial #80                 // Method java/lang/Boolean."<init>":(Z)V
       9: putfield      #28                 // Field oasisXMLCatalogPI:Ljava/lang/Boolean;
      12: return

  public boolean allowOasisXMLCatalogPI();
    Code:
       0: aload_0
       1: invokevirtual #128                // Method getAllowOasisXMLCatalogPI:()Z
       4: ireturn

  public java.lang.String queryCatalogClassName();
    Code:
       0: getstatic     #129                // Field pClassname:Ljava/lang/String;
       3: invokestatic  #11                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnonnull     44
      11: aload_0
      12: getfield      #50                 // Field resources:Ljava/util/ResourceBundle;
      15: ifnonnull     22
      18: aload_0
      19: invokespecial #67                 // Method readProperties:()V
      22: aload_0
      23: getfield      #50                 // Field resources:Ljava/util/ResourceBundle;
      26: ifnonnull     31
      29: aconst_null
      30: areturn
      31: aload_0
      32: getfield      #50                 // Field resources:Ljava/util/ResourceBundle;
      35: ldc           #130                // String catalog-class-name
      37: invokevirtual #56                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      40: areturn
      41: astore_2
      42: aconst_null
      43: areturn
      44: aload_1
      45: areturn
    Exception table:
       from    to  target type
          31    41    41   Class java/util/MissingResourceException

  public java.lang.String getCatalogClassName();
    Code:
       0: aload_0
       1: getfield      #31                 // Field catalogClassName:Ljava/lang/String;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokevirtual #131                // Method queryCatalogClassName:()Ljava/lang/String;
      12: putfield      #31                 // Field catalogClassName:Ljava/lang/String;
      15: aload_0
      16: getfield      #31                 // Field catalogClassName:Ljava/lang/String;
      19: areturn

  public void setCatalogClassName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field catalogClassName:Ljava/lang/String;
       5: return

  public java.lang.String catalogClassName();
    Code:
       0: aload_0
       1: invokevirtual #110                // Method getCatalogClassName:()Ljava/lang/String;
       4: areturn

  static java.lang.Class class$(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       4: areturn
       5: astore_1
       6: new           #3                  // class java/lang/NoClassDefFoundError
       9: dup
      10: aload_1
      11: invokevirtual #4                  // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      14: invokespecial #5                  // Method java/lang/NoClassDefFoundError."<init>":(Ljava/lang/String;)V
      17: athrow
    Exception table:
       from    to  target type
           0     5     5   Class java/lang/ClassNotFoundException

  static {};
    Code:
       0: ldc           #132                // String xml.catalog.files
       2: putstatic     #12                 // Field pFiles:Ljava/lang/String;
       5: ldc           #133                // String xml.catalog.verbosity
       7: putstatic     #66                 // Field pVerbosity:Ljava/lang/String;
      10: ldc           #134                // String xml.catalog.prefer
      12: putstatic     #100                // Field pPrefer:Ljava/lang/String;
      15: ldc           #135                // String xml.catalog.staticCatalog
      17: putstatic     #105                // Field pStatic:Ljava/lang/String;
      20: ldc           #136                // String xml.catalog.allowPI
      22: putstatic     #125                // Field pAllowPI:Ljava/lang/String;
      25: ldc           #137                // String xml.catalog.className
      27: putstatic     #129                // Field pClassname:Ljava/lang/String;
      30: ldc           #138                // String xml.catalog.ignoreMissing
      32: putstatic     #10                 // Field pIgnoreMissing:Ljava/lang/String;
      35: new           #139                // class org/apache/xml/resolver/CatalogManager
      38: dup
      39: invokespecial #140                // Method "<init>":()V
      42: putstatic     #63                 // Field staticManager:Lorg/apache/xml/resolver/CatalogManager;
      45: aconst_null
      46: putstatic     #109                // Field staticCatalog:Lorg/apache/xml/resolver/Catalog;
      49: return
}
