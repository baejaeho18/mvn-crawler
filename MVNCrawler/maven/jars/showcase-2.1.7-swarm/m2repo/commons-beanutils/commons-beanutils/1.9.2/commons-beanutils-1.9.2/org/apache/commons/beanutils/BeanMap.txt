Compiled from "BeanMap.java"
public class org.apache.commons.beanutils.BeanMap extends java.util.AbstractMap<java.lang.Object, java.lang.Object> implements java.lang.Cloneable {
  private transient java.lang.Object bean;

  private transient java.util.HashMap<java.lang.String, java.lang.reflect.Method> readMethods;

  private transient java.util.HashMap<java.lang.String, java.lang.reflect.Method> writeMethods;

  private transient java.util.HashMap<java.lang.String, java.lang.Class<? extends java.lang.Object>> types;

  public static final java.lang.Object[] NULL_ARGUMENTS;

  private static final java.util.Map<java.lang.Class<? extends java.lang.Object>, org.apache.commons.collections.Transformer> typeTransformers;

  public static java.util.HashMap defaultTransformers;

  private static java.util.Map<java.lang.Class<? extends java.lang.Object>, org.apache.commons.collections.Transformer> createTypeTransformers();
    Code:
       0: new           #3                  // class java/util/HashMap
       3: dup
       4: invokespecial #4                  // Method java/util/HashMap."<init>":()V
       7: astore_0
       8: aload_0
       9: getstatic     #5                  // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      12: new           #6                  // class org/apache/commons/beanutils/BeanMap$2
      15: dup
      16: invokespecial #7                  // Method org/apache/commons/beanutils/BeanMap$2."<init>":()V
      19: invokeinterface #8,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: aload_0
      26: getstatic     #9                  // Field java/lang/Character.TYPE:Ljava/lang/Class;
      29: new           #10                 // class org/apache/commons/beanutils/BeanMap$3
      32: dup
      33: invokespecial #11                 // Method org/apache/commons/beanutils/BeanMap$3."<init>":()V
      36: invokeinterface #8,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: aload_0
      43: getstatic     #12                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      46: new           #13                 // class org/apache/commons/beanutils/BeanMap$4
      49: dup
      50: invokespecial #14                 // Method org/apache/commons/beanutils/BeanMap$4."<init>":()V
      53: invokeinterface #8,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      58: pop
      59: aload_0
      60: getstatic     #15                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      63: new           #16                 // class org/apache/commons/beanutils/BeanMap$5
      66: dup
      67: invokespecial #17                 // Method org/apache/commons/beanutils/BeanMap$5."<init>":()V
      70: invokeinterface #8,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: pop
      76: aload_0
      77: getstatic     #18                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      80: new           #19                 // class org/apache/commons/beanutils/BeanMap$6
      83: dup
      84: invokespecial #20                 // Method org/apache/commons/beanutils/BeanMap$6."<init>":()V
      87: invokeinterface #8,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      92: pop
      93: aload_0
      94: getstatic     #21                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      97: new           #22                 // class org/apache/commons/beanutils/BeanMap$7
     100: dup
     101: invokespecial #23                 // Method org/apache/commons/beanutils/BeanMap$7."<init>":()V
     104: invokeinterface #8,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     109: pop
     110: aload_0
     111: getstatic     #24                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
     114: new           #25                 // class org/apache/commons/beanutils/BeanMap$8
     117: dup
     118: invokespecial #26                 // Method org/apache/commons/beanutils/BeanMap$8."<init>":()V
     121: invokeinterface #8,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     126: pop
     127: aload_0
     128: getstatic     #27                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
     131: new           #28                 // class org/apache/commons/beanutils/BeanMap$9
     134: dup
     135: invokespecial #29                 // Method org/apache/commons/beanutils/BeanMap$9."<init>":()V
     138: invokeinterface #8,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     143: pop
     144: aload_0
     145: areturn

  public org.apache.commons.beanutils.BeanMap();
    Code:
       0: aload_0
       1: invokespecial #30                 // Method java/util/AbstractMap."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      12: putfield      #1                  // Field readMethods:Ljava/util/HashMap;
      15: aload_0
      16: new           #3                  // class java/util/HashMap
      19: dup
      20: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      23: putfield      #31                 // Field writeMethods:Ljava/util/HashMap;
      26: aload_0
      27: new           #3                  // class java/util/HashMap
      30: dup
      31: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      34: putfield      #32                 // Field types:Ljava/util/HashMap;
      37: return

  public org.apache.commons.beanutils.BeanMap(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method java/util/AbstractMap."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      12: putfield      #1                  // Field readMethods:Ljava/util/HashMap;
      15: aload_0
      16: new           #3                  // class java/util/HashMap
      19: dup
      20: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      23: putfield      #31                 // Field writeMethods:Ljava/util/HashMap;
      26: aload_0
      27: new           #3                  // class java/util/HashMap
      30: dup
      31: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      34: putfield      #32                 // Field types:Ljava/util/HashMap;
      37: aload_0
      38: aload_1
      39: putfield      #33                 // Field bean:Ljava/lang/Object;
      42: aload_0
      43: invokespecial #34                 // Method initialise:()V
      46: return

  public java.lang.String toString();
    Code:
       0: new           #35                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #37                 // String BeanMap<
       9: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #33                 // Field bean:Ljava/lang/Object;
      16: invokestatic  #39                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      19: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #40                 // String >
      24: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #42                 // Method java/util/AbstractMap.clone:()Ljava/lang/Object;
       4: checkcast     #43                 // class org/apache/commons/beanutils/BeanMap
       7: astore_1
       8: aload_0
       9: getfield      #33                 // Field bean:Ljava/lang/Object;
      12: ifnonnull     17
      15: aload_1
      16: areturn
      17: aconst_null
      18: astore_2
      19: aload_0
      20: getfield      #33                 // Field bean:Ljava/lang/Object;
      23: invokevirtual #44                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      26: astore_3
      27: aload_3
      28: invokevirtual #45                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      31: astore_2
      32: goto          89
      35: astore        4
      37: new           #47                 // class java/lang/CloneNotSupportedException
      40: dup
      41: new           #35                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #48                 // String Unable to instantiate the underlying bean \"
      50: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_3
      54: invokevirtual #49                 // Method java/lang/Class.getName:()Ljava/lang/String;
      57: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: ldc           #50                 // String \":
      62: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload         4
      67: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      70: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokespecial #52                 // Method java/lang/CloneNotSupportedException."<init>":(Ljava/lang/String;)V
      76: astore        5
      78: aload         5
      80: aload         4
      82: invokestatic  #53                 // Method org/apache/commons/beanutils/BeanUtils.initCause:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Z
      85: pop
      86: aload         5
      88: athrow
      89: aload_1
      90: aload_2
      91: invokevirtual #54                 // Method setBean:(Ljava/lang/Object;)V
      94: goto          139
      97: astore        4
      99: new           #47                 // class java/lang/CloneNotSupportedException
     102: dup
     103: new           #35                 // class java/lang/StringBuilder
     106: dup
     107: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     110: ldc           #55                 // String Unable to set bean in the cloned bean map:
     112: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: aload         4
     117: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     120: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: invokespecial #52                 // Method java/lang/CloneNotSupportedException."<init>":(Ljava/lang/String;)V
     126: astore        5
     128: aload         5
     130: aload         4
     132: invokestatic  #53                 // Method org/apache/commons/beanutils/BeanUtils.initCause:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Z
     135: pop
     136: aload         5
     138: athrow
     139: aload_0
     140: getfield      #1                  // Field readMethods:Ljava/util/HashMap;
     143: invokevirtual #56                 // Method java/util/HashMap.keySet:()Ljava/util/Set;
     146: invokeinterface #57,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     151: astore        4
     153: aload         4
     155: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     160: ifeq          197
     163: aload         4
     165: invokeinterface #59,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     170: astore        5
     172: aload_0
     173: aload         5
     175: invokevirtual #60                 // Method getWriteMethod:(Ljava/lang/Object;)Ljava/lang/reflect/Method;
     178: ifnull        194
     181: aload_1
     182: aload         5
     184: aload_0
     185: aload         5
     187: invokevirtual #61                 // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
     190: invokevirtual #62                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     193: pop
     194: goto          153
     197: goto          242
     200: astore        4
     202: new           #47                 // class java/lang/CloneNotSupportedException
     205: dup
     206: new           #35                 // class java/lang/StringBuilder
     209: dup
     210: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
     213: ldc           #63                 // String Unable to copy bean values to cloned bean map:
     215: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     218: aload         4
     220: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     223: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     226: invokespecial #52                 // Method java/lang/CloneNotSupportedException."<init>":(Ljava/lang/String;)V
     229: astore        5
     231: aload         5
     233: aload         4
     235: invokestatic  #53                 // Method org/apache/commons/beanutils/BeanUtils.initCause:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Z
     238: pop
     239: aload         5
     241: athrow
     242: aload_1
     243: areturn
    Exception table:
       from    to  target type
          27    32    35   Class java/lang/Exception
          89    94    97   Class java/lang/Exception
         139   197   200   Class java/lang/Exception

  public void putAllWriteable(org.apache.commons.beanutils.BeanMap);
    Code:
       0: aload_1
       1: getfield      #1                  // Field readMethods:Ljava/util/HashMap;
       4: invokevirtual #56                 // Method java/util/HashMap.keySet:()Ljava/util/Set;
       7: invokeinterface #57,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          51
      22: aload_2
      23: invokeinterface #59,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: astore_3
      29: aload_0
      30: aload_3
      31: invokevirtual #60                 // Method getWriteMethod:(Ljava/lang/Object;)Ljava/lang/reflect/Method;
      34: ifnull        48
      37: aload_0
      38: aload_3
      39: aload_1
      40: aload_3
      41: invokevirtual #61                 // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
      44: invokevirtual #62                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: goto          13
      51: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #33                 // Field bean:Ljava/lang/Object;
       4: ifnonnull     8
       7: return
       8: aconst_null
       9: astore_1
      10: aload_0
      11: getfield      #33                 // Field bean:Ljava/lang/Object;
      14: invokevirtual #44                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: astore_1
      18: aload_0
      19: aload_1
      20: invokevirtual #45                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      23: putfield      #33                 // Field bean:Ljava/lang/Object;
      26: goto          65
      29: astore_2
      30: new           #64                 // class java/lang/UnsupportedOperationException
      33: dup
      34: new           #35                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #65                 // String Could not create new instance of class:
      43: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_1
      47: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #66                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      56: astore_3
      57: aload_3
      58: aload_2
      59: invokestatic  #53                 // Method org/apache/commons/beanutils/BeanUtils.initCause:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Z
      62: pop
      63: aload_3
      64: athrow
      65: return
    Exception table:
       from    to  target type
          10    26    29   Class java/lang/Exception

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #67                 // Method getReadMethod:(Ljava/lang/Object;)Ljava/lang/reflect/Method;
       5: astore_2
       6: aload_2
       7: ifnull        14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #68                 // Method java/util/AbstractMap.containsValue:(Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #33                 // Field bean:Ljava/lang/Object;
       4: ifnull        62
       7: aload_0
       8: aload_1
       9: invokevirtual #67                 // Method getReadMethod:(Ljava/lang/Object;)Ljava/lang/reflect/Method;
      12: astore_2
      13: aload_2
      14: ifnull        62
      17: aload_2
      18: aload_0
      19: getfield      #33                 // Field bean:Ljava/lang/Object;
      22: getstatic     #69                 // Field NULL_ARGUMENTS:[Ljava/lang/Object;
      25: invokevirtual #70                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      28: areturn
      29: astore_3
      30: aload_0
      31: aload_3
      32: invokevirtual #72                 // Method logWarn:(Ljava/lang/Exception;)V
      35: goto          62
      38: astore_3
      39: aload_0
      40: aload_3
      41: invokevirtual #72                 // Method logWarn:(Ljava/lang/Exception;)V
      44: goto          62
      47: astore_3
      48: aload_0
      49: aload_3
      50: invokevirtual #72                 // Method logWarn:(Ljava/lang/Exception;)V
      53: goto          62
      56: astore_3
      57: aload_0
      58: aload_3
      59: invokevirtual #72                 // Method logWarn:(Ljava/lang/Exception;)V
      62: aconst_null
      63: areturn
    Exception table:
       from    to  target type
          17    28    29   Class java/lang/IllegalAccessException
          17    28    38   Class java/lang/IllegalArgumentException
          17    28    47   Class java/lang/reflect/InvocationTargetException
          17    28    56   Class java/lang/NullPointerException

  public java.lang.Object put(java.lang.Object, java.lang.Object) throws java.lang.IllegalArgumentException, java.lang.ClassCastException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field bean:Ljava/lang/Object;
       4: ifnull        181
       7: aload_0
       8: aload_1
       9: invokevirtual #61                 // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: astore_3
      13: aload_0
      14: aload_1
      15: invokevirtual #60                 // Method getWriteMethod:(Ljava/lang/Object;)Ljava/lang/reflect/Method;
      18: astore        4
      20: aload         4
      22: ifnonnull     70
      25: new           #73                 // class java/lang/IllegalArgumentException
      28: dup
      29: new           #35                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #76                 // String The bean of type:
      38: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: getfield      #33                 // Field bean:Ljava/lang/Object;
      45: invokevirtual #44                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      48: invokevirtual #49                 // Method java/lang/Class.getName:()Ljava/lang/String;
      51: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc           #77                 // String  has no property called:
      56: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_1
      60: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #78                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: aload_0
      71: aload         4
      73: aload_2
      74: invokevirtual #79                 // Method createWriteMethodArguments:(Ljava/lang/reflect/Method;Ljava/lang/Object;)[Ljava/lang/Object;
      77: astore        5
      79: aload         4
      81: aload_0
      82: getfield      #33                 // Field bean:Ljava/lang/Object;
      85: aload         5
      87: invokevirtual #70                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      90: pop
      91: aload_0
      92: aload_1
      93: invokevirtual #61                 // Method get:(Ljava/lang/Object;)Ljava/lang/Object;
      96: astore        6
      98: aload_0
      99: aload_1
     100: aload_3
     101: aload         6
     103: invokevirtual #80                 // Method firePropertyChange:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     106: goto          179
     109: astore        5
     111: new           #73                 // class java/lang/IllegalArgumentException
     114: dup
     115: aload         5
     117: invokevirtual #81                 // Method java/lang/reflect/InvocationTargetException.getMessage:()Ljava/lang/String;
     120: invokespecial #78                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     123: astore        6
     125: aload         6
     127: aload         5
     129: invokestatic  #53                 // Method org/apache/commons/beanutils/BeanUtils.initCause:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Z
     132: ifne          141
     135: aload_0
     136: aload         5
     138: invokevirtual #82                 // Method logInfo:(Ljava/lang/Exception;)V
     141: aload         6
     143: athrow
     144: astore        5
     146: new           #73                 // class java/lang/IllegalArgumentException
     149: dup
     150: aload         5
     152: invokevirtual #83                 // Method java/lang/IllegalAccessException.getMessage:()Ljava/lang/String;
     155: invokespecial #78                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     158: astore        6
     160: aload         6
     162: aload         5
     164: invokestatic  #53                 // Method org/apache/commons/beanutils/BeanUtils.initCause:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Z
     167: ifne          176
     170: aload_0
     171: aload         5
     173: invokevirtual #82                 // Method logInfo:(Ljava/lang/Exception;)V
     176: aload         6
     178: athrow
     179: aload_3
     180: areturn
     181: aconst_null
     182: areturn
    Exception table:
       from    to  target type
          70   106   109   Class java/lang/reflect/InvocationTargetException
          70   106   144   Class java/lang/IllegalAccessException

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field readMethods:Ljava/util/HashMap;
       4: invokevirtual #84                 // Method java/util/HashMap.size:()I
       7: ireturn

  public java.util.Set<java.lang.Object> keySet();
    Code:
       0: aload_0
       1: getfield      #1                  // Field readMethods:Ljava/util/HashMap;
       4: invokevirtual #56                 // Method java/util/HashMap.keySet:()Ljava/util/Set;
       7: invokestatic  #85                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      10: areturn

  public java.util.Set<java.util.Map$Entry<java.lang.Object, java.lang.Object>> entrySet();
    Code:
       0: new           #86                 // class org/apache/commons/beanutils/BeanMap$10
       3: dup
       4: aload_0
       5: invokespecial #87                 // Method org/apache/commons/beanutils/BeanMap$10."<init>":(Lorg/apache/commons/beanutils/BeanMap;)V
       8: invokestatic  #85                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      11: areturn

  public java.util.Collection<java.lang.Object> values();
    Code:
       0: new           #88                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #1                  // Field readMethods:Ljava/util/HashMap;
       8: invokevirtual #84                 // Method java/util/HashMap.size:()I
      11: invokespecial #89                 // Method java/util/ArrayList."<init>":(I)V
      14: astore_1
      15: aload_0
      16: invokevirtual #90                 // Method valueIterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          43
      29: aload_1
      30: aload_2
      31: invokeinterface #59,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: invokevirtual #91                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      39: pop
      40: goto          20
      43: aload_1
      44: invokestatic  #92                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      47: areturn

  public java.lang.Class<?> getType(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #32                 // Field types:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #93                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #94                 // class java/lang/Class
      11: areturn

  public java.util.Iterator<java.lang.String> keyIterator();
    Code:
       0: aload_0
       1: getfield      #1                  // Field readMethods:Ljava/util/HashMap;
       4: invokevirtual #56                 // Method java/util/HashMap.keySet:()Ljava/util/Set;
       7: invokeinterface #57,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      12: areturn

  public java.util.Iterator<java.lang.Object> valueIterator();
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method keyIterator:()Ljava/util/Iterator;
       4: astore_1
       5: new           #96                 // class org/apache/commons/beanutils/BeanMap$11
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #97                 // Method org/apache/commons/beanutils/BeanMap$11."<init>":(Lorg/apache/commons/beanutils/BeanMap;Ljava/util/Iterator;)V
      14: areturn

  public java.util.Iterator<java.util.Map$Entry<java.lang.Object, java.lang.Object>> entryIterator();
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method keyIterator:()Ljava/util/Iterator;
       4: astore_1
       5: new           #98                 // class org/apache/commons/beanutils/BeanMap$12
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #99                 // Method org/apache/commons/beanutils/BeanMap$12."<init>":(Lorg/apache/commons/beanutils/BeanMap;Ljava/util/Iterator;)V
      14: areturn

  public java.lang.Object getBean();
    Code:
       0: aload_0
       1: getfield      #33                 // Field bean:Ljava/lang/Object;
       4: areturn

  public void setBean(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field bean:Ljava/lang/Object;
       5: aload_0
       6: invokevirtual #100                // Method reinitialise:()V
       9: return

  public java.lang.reflect.Method getReadMethod(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field readMethods:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #93                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #101                // class java/lang/reflect/Method
      11: areturn

  public java.lang.reflect.Method getWriteMethod(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #31                 // Field writeMethods:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #93                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #101                // class java/lang/reflect/Method
      11: areturn

  protected java.lang.reflect.Method getReadMethod(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field readMethods:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #93                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #101                // class java/lang/reflect/Method
      11: areturn

  protected java.lang.reflect.Method getWriteMethod(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #31                 // Field writeMethods:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #93                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #101                // class java/lang/reflect/Method
      11: areturn

  protected void reinitialise();
    Code:
       0: aload_0
       1: getfield      #1                  // Field readMethods:Ljava/util/HashMap;
       4: invokevirtual #102                // Method java/util/HashMap.clear:()V
       7: aload_0
       8: getfield      #31                 // Field writeMethods:Ljava/util/HashMap;
      11: invokevirtual #102                // Method java/util/HashMap.clear:()V
      14: aload_0
      15: getfield      #32                 // Field types:Ljava/util/HashMap;
      18: invokevirtual #102                // Method java/util/HashMap.clear:()V
      21: aload_0
      22: invokespecial #34                 // Method initialise:()V
      25: return

  private void initialise();
    Code:
       0: aload_0
       1: invokevirtual #103                // Method getBean:()Ljava/lang/Object;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: invokevirtual #103                // Method getBean:()Ljava/lang/Object;
      12: invokevirtual #44                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: astore_1
      16: aload_1
      17: invokestatic  #104                // Method java/beans/Introspector.getBeanInfo:(Ljava/lang/Class;)Ljava/beans/BeanInfo;
      20: astore_2
      21: aload_2
      22: invokeinterface #105,  1          // InterfaceMethod java/beans/BeanInfo.getPropertyDescriptors:()[Ljava/beans/PropertyDescriptor;
      27: astore_3
      28: aload_3
      29: ifnull        133
      32: iconst_0
      33: istore        4
      35: iload         4
      37: aload_3
      38: arraylength
      39: if_icmpge     133
      42: aload_3
      43: iload         4
      45: aaload
      46: astore        5
      48: aload         5
      50: ifnull        127
      53: aload         5
      55: invokevirtual #106                // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
      58: astore        6
      60: aload         5
      62: invokevirtual #107                // Method java/beans/PropertyDescriptor.getReadMethod:()Ljava/lang/reflect/Method;
      65: astore        7
      67: aload         5
      69: invokevirtual #108                // Method java/beans/PropertyDescriptor.getWriteMethod:()Ljava/lang/reflect/Method;
      72: astore        8
      74: aload         5
      76: invokevirtual #109                // Method java/beans/PropertyDescriptor.getPropertyType:()Ljava/lang/Class;
      79: astore        9
      81: aload         7
      83: ifnull        98
      86: aload_0
      87: getfield      #1                  // Field readMethods:Ljava/util/HashMap;
      90: aload         6
      92: aload         7
      94: invokevirtual #110                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      97: pop
      98: aload         8
     100: ifnull        115
     103: aload_0
     104: getfield      #31                 // Field writeMethods:Ljava/util/HashMap;
     107: aload         6
     109: aload         8
     111: invokevirtual #110                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     114: pop
     115: aload_0
     116: getfield      #32                 // Field types:Ljava/util/HashMap;
     119: aload         6
     121: aload         9
     123: invokevirtual #110                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     126: pop
     127: iinc          4, 1
     130: goto          35
     133: goto          142
     136: astore_2
     137: aload_0
     138: aload_2
     139: invokevirtual #72                 // Method logWarn:(Ljava/lang/Exception;)V
     142: return
    Exception table:
       from    to  target type
          16   133   136   Class java/beans/IntrospectionException

  protected void firePropertyChange(java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: return

  protected java.lang.Object[] createWriteMethodArguments(java.lang.reflect.Method, java.lang.Object) throws java.lang.IllegalAccessException, java.lang.ClassCastException;
    Code:
       0: aload_2
       1: ifnull        43
       4: aload_1
       5: invokevirtual #112                // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
       8: astore_3
       9: aload_3
      10: ifnull        43
      13: aload_3
      14: arraylength
      15: ifle          43
      18: aload_3
      19: iconst_0
      20: aaload
      21: astore        4
      23: aload         4
      25: aload_2
      26: invokevirtual #44                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      29: invokevirtual #113                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      32: ifne          43
      35: aload_0
      36: aload         4
      38: aload_2
      39: invokevirtual #114                // Method convertType:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      42: astore_2
      43: iconst_1
      44: anewarray     #115                // class java/lang/Object
      47: dup
      48: iconst_0
      49: aload_2
      50: aastore
      51: astore_3
      52: aload_3
      53: areturn
      54: astore_3
      55: new           #73                 // class java/lang/IllegalArgumentException
      58: dup
      59: aload_3
      60: invokevirtual #81                 // Method java/lang/reflect/InvocationTargetException.getMessage:()Ljava/lang/String;
      63: invokespecial #78                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: astore        4
      68: aload         4
      70: aload_3
      71: invokestatic  #53                 // Method org/apache/commons/beanutils/BeanUtils.initCause:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Z
      74: ifne          82
      77: aload_0
      78: aload_3
      79: invokevirtual #82                 // Method logInfo:(Ljava/lang/Exception;)V
      82: aload         4
      84: athrow
      85: astore_3
      86: new           #73                 // class java/lang/IllegalArgumentException
      89: dup
      90: aload_3
      91: invokevirtual #117                // Method java/lang/InstantiationException.getMessage:()Ljava/lang/String;
      94: invokespecial #78                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      97: astore        4
      99: aload         4
     101: aload_3
     102: invokestatic  #53                 // Method org/apache/commons/beanutils/BeanUtils.initCause:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Z
     105: ifne          113
     108: aload_0
     109: aload_3
     110: invokevirtual #82                 // Method logInfo:(Ljava/lang/Exception;)V
     113: aload         4
     115: aload_3
     116: invokestatic  #53                 // Method org/apache/commons/beanutils/BeanUtils.initCause:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Z
     119: pop
     120: aload         4
     122: athrow
    Exception table:
       from    to  target type
           0    53    54   Class java/lang/reflect/InvocationTargetException
           0    53    85   Class java/lang/InstantiationException

  protected java.lang.Object convertType(java.lang.Class<?>, java.lang.Object) throws java.lang.InstantiationException, java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException;
    Code:
       0: iconst_1
       1: anewarray     #94                 // class java/lang/Class
       4: dup
       5: iconst_0
       6: aload_2
       7: invokevirtual #44                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aastore
      11: astore_3
      12: aload_1
      13: aload_3
      14: invokevirtual #118                // Method java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      17: astore        4
      19: iconst_1
      20: anewarray     #115                // class java/lang/Object
      23: dup
      24: iconst_0
      25: aload_2
      26: aastore
      27: astore        5
      29: aload         4
      31: aload         5
      33: invokevirtual #119                // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      36: areturn
      37: astore        4
      39: aload_0
      40: aload_1
      41: invokevirtual #121                // Method getTypeTransformer:(Ljava/lang/Class;)Lorg/apache/commons/collections/Transformer;
      44: astore        5
      46: aload         5
      48: ifnull        60
      51: aload         5
      53: aload_2
      54: invokeinterface #122,  2          // InterfaceMethod org/apache/commons/collections/Transformer.transform:(Ljava/lang/Object;)Ljava/lang/Object;
      59: areturn
      60: aload_2
      61: areturn
    Exception table:
       from    to  target type
          12    36    37   Class java/lang/NoSuchMethodException

  protected org.apache.commons.collections.Transformer getTypeTransformer(java.lang.Class<?>);
    Code:
       0: getstatic     #2                  // Field typeTransformers:Ljava/util/Map;
       3: aload_1
       4: invokeinterface #123,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #124                // class org/apache/commons/collections/Transformer
      12: areturn

  protected void logInfo(java.lang.Exception);
    Code:
       0: getstatic     #125                // Field java/lang/System.out:Ljava/io/PrintStream;
       3: new           #35                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #126                // String INFO: Exception:
      12: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_1
      16: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: invokevirtual #127                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      25: return

  protected void logWarn(java.lang.Exception);
    Code:
       0: getstatic     #125                // Field java/lang/System.out:Ljava/io/PrintStream;
       3: new           #35                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #36                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #128                // String WARN: Exception:
      12: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_1
      16: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: invokevirtual #127                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      25: aload_1
      26: invokevirtual #129                // Method java/lang/Exception.printStackTrace:()V
      29: return

  static java.util.Map access$000();
    Code:
       0: getstatic     #2                  // Field typeTransformers:Ljava/util/Map;
       3: areturn

  static java.util.HashMap access$100(org.apache.commons.beanutils.BeanMap);
    Code:
       0: aload_0
       1: getfield      #1                  // Field readMethods:Ljava/util/HashMap;
       4: areturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #115                // class java/lang/Object
       4: putstatic     #69                 // Field NULL_ARGUMENTS:[Ljava/lang/Object;
       7: invokestatic  #130                // Method createTypeTransformers:()Ljava/util/Map;
      10: invokestatic  #131                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      13: putstatic     #2                  // Field typeTransformers:Ljava/util/Map;
      16: new           #132                // class org/apache/commons/beanutils/BeanMap$1
      19: dup
      20: invokespecial #133                // Method org/apache/commons/beanutils/BeanMap$1."<init>":()V
      23: putstatic     #134                // Field defaultTransformers:Ljava/util/HashMap;
      26: return
}
