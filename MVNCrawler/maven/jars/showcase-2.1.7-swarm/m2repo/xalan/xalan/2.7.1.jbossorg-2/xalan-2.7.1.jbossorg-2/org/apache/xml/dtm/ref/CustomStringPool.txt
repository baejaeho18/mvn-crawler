Compiled from "CustomStringPool.java"
public class org.apache.xml.dtm.ref.CustomStringPool extends org.apache.xml.dtm.ref.DTMStringPool {
  final java.util.Hashtable m_stringToInt;

  public static final int NULL;

  public org.apache.xml.dtm.ref.CustomStringPool();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/xml/dtm/ref/DTMStringPool."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/Hashtable
       8: dup
       9: invokespecial #3                  // Method java/util/Hashtable."<init>":()V
      12: putfield      #4                  // Field m_stringToInt:Ljava/util/Hashtable;
      15: return

  public void removeAllElements();
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_intToString:Ljava/util/Vector;
       4: invokevirtual #6                  // Method java/util/Vector.removeAllElements:()V
       7: aload_0
       8: getfield      #4                  // Field m_stringToInt:Ljava/util/Hashtable;
      11: ifnull        21
      14: aload_0
      15: getfield      #4                  // Field m_stringToInt:Ljava/util/Hashtable;
      18: invokevirtual #7                  // Method java/util/Hashtable.clear:()V
      21: return

  public java.lang.String indexToString(int) throws java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_intToString:Ljava/util/Vector;
       4: iload_1
       5: invokevirtual #8                  // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
       8: checkcast     #9                  // class java/lang/String
      11: areturn

  public int stringToIndex(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_m1
       5: ireturn
       6: aload_0
       7: getfield      #4                  // Field m_stringToInt:Ljava/util/Hashtable;
      10: aload_1
      11: invokevirtual #10                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #11                 // class java/lang/Integer
      17: astore_2
      18: aload_2
      19: ifnonnull     55
      22: aload_0
      23: getfield      #5                  // Field m_intToString:Ljava/util/Vector;
      26: aload_1
      27: invokevirtual #12                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      30: new           #11                 // class java/lang/Integer
      33: dup
      34: aload_0
      35: getfield      #5                  // Field m_intToString:Ljava/util/Vector;
      38: invokevirtual #13                 // Method java/util/Vector.size:()I
      41: invokespecial #14                 // Method java/lang/Integer."<init>":(I)V
      44: astore_2
      45: aload_0
      46: getfield      #4                  // Field m_stringToInt:Ljava/util/Hashtable;
      49: aload_1
      50: aload_2
      51: invokevirtual #15                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: aload_2
      56: invokevirtual #16                 // Method java/lang/Integer.intValue:()I
      59: ireturn
}
