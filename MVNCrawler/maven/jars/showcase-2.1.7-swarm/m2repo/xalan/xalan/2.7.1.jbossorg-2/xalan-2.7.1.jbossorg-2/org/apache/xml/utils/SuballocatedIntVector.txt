Compiled from "SuballocatedIntVector.java"
public class org.apache.xml.utils.SuballocatedIntVector {
  protected int m_blocksize;

  protected int m_SHIFT;

  protected int m_MASK;

  protected static final int NUMBLOCKS_DEFAULT;

  protected int m_numblocks;

  protected int[][] m_map;

  protected int m_firstFree;

  protected int[] m_map0;

  protected int[] m_buildCache;

  protected int m_buildCacheStartIndex;

  public org.apache.xml.utils.SuballocatedIntVector();
    Code:
       0: aload_0
       1: sipush        2048
       4: invokespecial #1                  // Method "<init>":(I)V
       7: return

  public org.apache.xml.utils.SuballocatedIntVector(int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        32
       7: putfield      #3                  // Field m_numblocks:I
      10: aload_0
      11: iconst_0
      12: putfield      #4                  // Field m_firstFree:I
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field m_SHIFT:I
      20: iconst_0
      21: iload_1
      22: iconst_1
      23: iushr
      24: dup
      25: istore_1
      26: if_icmpeq     42
      29: aload_0
      30: dup
      31: getfield      #5                  // Field m_SHIFT:I
      34: iconst_1
      35: iadd
      36: putfield      #5                  // Field m_SHIFT:I
      39: goto          20
      42: aload_0
      43: iconst_1
      44: aload_0
      45: getfield      #5                  // Field m_SHIFT:I
      48: ishl
      49: putfield      #6                  // Field m_blocksize:I
      52: aload_0
      53: aload_0
      54: getfield      #6                  // Field m_blocksize:I
      57: iconst_1
      58: isub
      59: putfield      #7                  // Field m_MASK:I
      62: aload_0
      63: iload_2
      64: putfield      #3                  // Field m_numblocks:I
      67: aload_0
      68: aload_0
      69: getfield      #6                  // Field m_blocksize:I
      72: newarray       int
      74: putfield      #8                  // Field m_map0:[I
      77: aload_0
      78: iload_2
      79: anewarray     #9                  // class "[I"
      82: putfield      #10                 // Field m_map:[[I
      85: aload_0
      86: getfield      #10                 // Field m_map:[[I
      89: iconst_0
      90: aload_0
      91: getfield      #8                  // Field m_map0:[I
      94: aastore
      95: aload_0
      96: aload_0
      97: getfield      #8                  // Field m_map0:[I
     100: putfield      #11                 // Field m_buildCache:[I
     103: aload_0
     104: iconst_0
     105: putfield      #12                 // Field m_buildCacheStartIndex:I
     108: return

  public org.apache.xml.utils.SuballocatedIntVector(int);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        32
       4: invokespecial #13                 // Method "<init>":(II)V
       7: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: ireturn

  public void setSize(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: iload_1
       5: if_icmple     13
       8: aload_0
       9: iload_1
      10: putfield      #4                  // Field m_firstFree:I
      13: return

  public void addElement(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: aload_0
       5: getfield      #12                 // Field m_buildCacheStartIndex:I
       8: isub
       9: istore_2
      10: iload_2
      11: iflt          42
      14: iload_2
      15: aload_0
      16: getfield      #6                  // Field m_blocksize:I
      19: if_icmpge     42
      22: aload_0
      23: getfield      #11                 // Field m_buildCache:[I
      26: iload_2
      27: iload_1
      28: iastore
      29: aload_0
      30: dup
      31: getfield      #4                  // Field m_firstFree:I
      34: iconst_1
      35: iadd
      36: putfield      #4                  // Field m_firstFree:I
      39: goto          171
      42: aload_0
      43: getfield      #4                  // Field m_firstFree:I
      46: aload_0
      47: getfield      #5                  // Field m_SHIFT:I
      50: iushr
      51: istore_3
      52: aload_0
      53: getfield      #4                  // Field m_firstFree:I
      56: aload_0
      57: getfield      #7                  // Field m_MASK:I
      60: iand
      61: istore        4
      63: iload_3
      64: aload_0
      65: getfield      #10                 // Field m_map:[[I
      68: arraylength
      69: if_icmplt     109
      72: iload_3
      73: aload_0
      74: getfield      #3                  // Field m_numblocks:I
      77: iadd
      78: istore        5
      80: iload         5
      82: anewarray     #9                  // class "[I"
      85: astore        6
      87: aload_0
      88: getfield      #10                 // Field m_map:[[I
      91: iconst_0
      92: aload         6
      94: iconst_0
      95: aload_0
      96: getfield      #10                 // Field m_map:[[I
      99: arraylength
     100: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     103: aload_0
     104: aload         6
     106: putfield      #10                 // Field m_map:[[I
     109: aload_0
     110: getfield      #10                 // Field m_map:[[I
     113: iload_3
     114: aaload
     115: astore        5
     117: aconst_null
     118: aload         5
     120: if_acmpne     138
     123: aload_0
     124: getfield      #10                 // Field m_map:[[I
     127: iload_3
     128: aload_0
     129: getfield      #6                  // Field m_blocksize:I
     132: newarray       int
     134: dup_x2
     135: aastore
     136: astore        5
     138: aload         5
     140: iload         4
     142: iload_1
     143: iastore
     144: aload_0
     145: aload         5
     147: putfield      #11                 // Field m_buildCache:[I
     150: aload_0
     151: aload_0
     152: getfield      #4                  // Field m_firstFree:I
     155: iload         4
     157: isub
     158: putfield      #12                 // Field m_buildCacheStartIndex:I
     161: aload_0
     162: dup
     163: getfield      #4                  // Field m_firstFree:I
     166: iconst_1
     167: iadd
     168: putfield      #4                  // Field m_firstFree:I
     171: return

  private void addElements(int, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: iload_2
       5: iadd
       6: aload_0
       7: getfield      #6                  // Field m_blocksize:I
      10: if_icmpge     46
      13: iconst_0
      14: istore_3
      15: iload_3
      16: iload_2
      17: if_icmpge     43
      20: aload_0
      21: getfield      #8                  // Field m_map0:[I
      24: aload_0
      25: dup
      26: getfield      #4                  // Field m_firstFree:I
      29: dup_x1
      30: iconst_1
      31: iadd
      32: putfield      #4                  // Field m_firstFree:I
      35: iload_1
      36: iastore
      37: iinc          3, 1
      40: goto          15
      43: goto          214
      46: aload_0
      47: getfield      #4                  // Field m_firstFree:I
      50: aload_0
      51: getfield      #5                  // Field m_SHIFT:I
      54: iushr
      55: istore_3
      56: aload_0
      57: getfield      #4                  // Field m_firstFree:I
      60: aload_0
      61: getfield      #7                  // Field m_MASK:I
      64: iand
      65: istore        4
      67: aload_0
      68: dup
      69: getfield      #4                  // Field m_firstFree:I
      72: iload_2
      73: iadd
      74: putfield      #4                  // Field m_firstFree:I
      77: iload_2
      78: ifle          214
      81: iload_3
      82: aload_0
      83: getfield      #10                 // Field m_map:[[I
      86: arraylength
      87: if_icmplt     127
      90: iload_3
      91: aload_0
      92: getfield      #3                  // Field m_numblocks:I
      95: iadd
      96: istore        5
      98: iload         5
     100: anewarray     #9                  // class "[I"
     103: astore        6
     105: aload_0
     106: getfield      #10                 // Field m_map:[[I
     109: iconst_0
     110: aload         6
     112: iconst_0
     113: aload_0
     114: getfield      #10                 // Field m_map:[[I
     117: arraylength
     118: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     121: aload_0
     122: aload         6
     124: putfield      #10                 // Field m_map:[[I
     127: aload_0
     128: getfield      #10                 // Field m_map:[[I
     131: iload_3
     132: aaload
     133: astore        5
     135: aconst_null
     136: aload         5
     138: if_acmpne     156
     141: aload_0
     142: getfield      #10                 // Field m_map:[[I
     145: iload_3
     146: aload_0
     147: getfield      #6                  // Field m_blocksize:I
     150: newarray       int
     152: dup_x2
     153: aastore
     154: astore        5
     156: aload_0
     157: getfield      #6                  // Field m_blocksize:I
     160: iload         4
     162: isub
     163: iload_2
     164: if_icmpge     177
     167: aload_0
     168: getfield      #6                  // Field m_blocksize:I
     171: iload         4
     173: isub
     174: goto          178
     177: iload_2
     178: istore        6
     180: iload_2
     181: iload         6
     183: isub
     184: istore_2
     185: iload         6
     187: iinc          6, -1
     190: ifle          205
     193: aload         5
     195: iload         4
     197: iinc          4, 1
     200: iload_1
     201: iastore
     202: goto          185
     205: iinc          3, 1
     208: iconst_0
     209: istore        4
     211: goto          77
     214: return

  private void addElements(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: iload_1
       5: iadd
       6: istore_2
       7: iload_2
       8: aload_0
       9: getfield      #6                  // Field m_blocksize:I
      12: if_icmple     69
      15: aload_0
      16: getfield      #4                  // Field m_firstFree:I
      19: aload_0
      20: getfield      #5                  // Field m_SHIFT:I
      23: iushr
      24: istore_3
      25: aload_0
      26: getfield      #4                  // Field m_firstFree:I
      29: iload_1
      30: iadd
      31: aload_0
      32: getfield      #5                  // Field m_SHIFT:I
      35: iushr
      36: istore        4
      38: iload_3
      39: iconst_1
      40: iadd
      41: istore        5
      43: iload         5
      45: iload         4
      47: if_icmpgt     69
      50: aload_0
      51: getfield      #10                 // Field m_map:[[I
      54: iload         5
      56: aload_0
      57: getfield      #6                  // Field m_blocksize:I
      60: newarray       int
      62: aastore
      63: iinc          5, 1
      66: goto          43
      69: aload_0
      70: iload_2
      71: putfield      #4                  // Field m_firstFree:I
      74: return

  private void insertElementAt(int, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #4                  // Field m_firstFree:I
       5: if_icmpne     16
       8: aload_0
       9: iload_1
      10: invokevirtual #15                 // Method addElement:(I)V
      13: goto          263
      16: iload_2
      17: aload_0
      18: getfield      #4                  // Field m_firstFree:I
      21: if_icmple     131
      24: iload_2
      25: aload_0
      26: getfield      #5                  // Field m_SHIFT:I
      29: iushr
      30: istore_3
      31: iload_3
      32: aload_0
      33: getfield      #10                 // Field m_map:[[I
      36: arraylength
      37: if_icmplt     77
      40: iload_3
      41: aload_0
      42: getfield      #3                  // Field m_numblocks:I
      45: iadd
      46: istore        4
      48: iload         4
      50: anewarray     #9                  // class "[I"
      53: astore        5
      55: aload_0
      56: getfield      #10                 // Field m_map:[[I
      59: iconst_0
      60: aload         5
      62: iconst_0
      63: aload_0
      64: getfield      #10                 // Field m_map:[[I
      67: arraylength
      68: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      71: aload_0
      72: aload         5
      74: putfield      #10                 // Field m_map:[[I
      77: aload_0
      78: getfield      #10                 // Field m_map:[[I
      81: iload_3
      82: aaload
      83: astore        4
      85: aconst_null
      86: aload         4
      88: if_acmpne     106
      91: aload_0
      92: getfield      #10                 // Field m_map:[[I
      95: iload_3
      96: aload_0
      97: getfield      #6                  // Field m_blocksize:I
     100: newarray       int
     102: dup_x2
     103: aastore
     104: astore        4
     106: iload_2
     107: aload_0
     108: getfield      #7                  // Field m_MASK:I
     111: iand
     112: istore        5
     114: aload         4
     116: iload         5
     118: iload_1
     119: iastore
     120: aload_0
     121: iload         5
     123: iconst_1
     124: iadd
     125: putfield      #4                  // Field m_firstFree:I
     128: goto          263
     131: iload_2
     132: aload_0
     133: getfield      #5                  // Field m_SHIFT:I
     136: iushr
     137: istore_3
     138: aload_0
     139: getfield      #4                  // Field m_firstFree:I
     142: aload_0
     143: getfield      #5                  // Field m_SHIFT:I
     146: iushr
     147: istore        4
     149: aload_0
     150: dup
     151: getfield      #4                  // Field m_firstFree:I
     154: iconst_1
     155: iadd
     156: putfield      #4                  // Field m_firstFree:I
     159: iload_2
     160: aload_0
     161: getfield      #7                  // Field m_MASK:I
     164: iand
     165: istore        5
     167: iload_3
     168: iload         4
     170: if_icmpgt     263
     173: aload_0
     174: getfield      #6                  // Field m_blocksize:I
     177: iload         5
     179: isub
     180: iconst_1
     181: isub
     182: istore        7
     184: aload_0
     185: getfield      #10                 // Field m_map:[[I
     188: iload_3
     189: aaload
     190: astore        8
     192: aconst_null
     193: aload         8
     195: if_acmpne     219
     198: iconst_0
     199: istore        6
     201: aload_0
     202: getfield      #10                 // Field m_map:[[I
     205: iload_3
     206: aload_0
     207: getfield      #6                  // Field m_blocksize:I
     210: newarray       int
     212: dup_x2
     213: aastore
     214: astore        8
     216: goto          245
     219: aload         8
     221: aload_0
     222: getfield      #6                  // Field m_blocksize:I
     225: iconst_1
     226: isub
     227: iaload
     228: istore        6
     230: aload         8
     232: iload         5
     234: aload         8
     236: iload         5
     238: iconst_1
     239: iadd
     240: iload         7
     242: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     245: aload         8
     247: iload         5
     249: iload_1
     250: iastore
     251: iload         6
     253: istore_1
     254: iconst_0
     255: istore        5
     257: iinc          3, 1
     260: goto          167
     263: return

  public void removeAllElements();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #4                  // Field m_firstFree:I
       5: aload_0
       6: aload_0
       7: getfield      #8                  // Field m_map0:[I
      10: putfield      #11                 // Field m_buildCache:[I
      13: aload_0
      14: iconst_0
      15: putfield      #12                 // Field m_buildCacheStartIndex:I
      18: return

  private boolean removeElement(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokevirtual #16                 // Method indexOf:(II)I
       6: istore_2
       7: iload_2
       8: ifge          13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: iload_2
      15: invokespecial #17                 // Method removeElementAt:(I)V
      18: iconst_1
      19: ireturn

  private void removeElementAt(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #4                  // Field m_firstFree:I
       5: if_icmpge     160
       8: iload_1
       9: aload_0
      10: getfield      #5                  // Field m_SHIFT:I
      13: iushr
      14: istore_2
      15: aload_0
      16: getfield      #4                  // Field m_firstFree:I
      19: aload_0
      20: getfield      #5                  // Field m_SHIFT:I
      23: iushr
      24: istore_3
      25: iload_1
      26: aload_0
      27: getfield      #7                  // Field m_MASK:I
      30: iand
      31: istore        4
      33: iload_2
      34: iload_3
      35: if_icmpgt     160
      38: aload_0
      39: getfield      #6                  // Field m_blocksize:I
      42: iload         4
      44: isub
      45: iconst_1
      46: isub
      47: istore        5
      49: aload_0
      50: getfield      #10                 // Field m_map:[[I
      53: iload_2
      54: aaload
      55: astore        6
      57: aconst_null
      58: aload         6
      60: if_acmpne     81
      63: aload_0
      64: getfield      #10                 // Field m_map:[[I
      67: iload_2
      68: aload_0
      69: getfield      #6                  // Field m_blocksize:I
      72: newarray       int
      74: dup_x2
      75: aastore
      76: astore        6
      78: goto          96
      81: aload         6
      83: iload         4
      85: iconst_1
      86: iadd
      87: aload         6
      89: iload         4
      91: iload         5
      93: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      96: iload_2
      97: iload_3
      98: if_icmpge     141
     101: aload_0
     102: getfield      #10                 // Field m_map:[[I
     105: iload_2
     106: iconst_1
     107: iadd
     108: aaload
     109: astore        7
     111: aload         7
     113: ifnull        138
     116: aload         6
     118: aload_0
     119: getfield      #6                  // Field m_blocksize:I
     122: iconst_1
     123: isub
     124: aload         7
     126: ifnull        136
     129: aload         7
     131: iconst_0
     132: iaload
     133: goto          137
     136: iconst_0
     137: iastore
     138: goto          151
     141: aload         6
     143: aload_0
     144: getfield      #6                  // Field m_blocksize:I
     147: iconst_1
     148: isub
     149: iconst_0
     150: iastore
     151: iconst_0
     152: istore        4
     154: iinc          2, 1
     157: goto          33
     160: aload_0
     161: dup
     162: getfield      #4                  // Field m_firstFree:I
     165: iconst_1
     166: isub
     167: putfield      #4                  // Field m_firstFree:I
     170: return

  public void setElementAt(int, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #6                  // Field m_blocksize:I
       5: if_icmpge     18
       8: aload_0
       9: getfield      #8                  // Field m_map0:[I
      12: iload_2
      13: iload_1
      14: iastore
      15: goto          114
      18: iload_2
      19: aload_0
      20: getfield      #5                  // Field m_SHIFT:I
      23: iushr
      24: istore_3
      25: iload_2
      26: aload_0
      27: getfield      #7                  // Field m_MASK:I
      30: iand
      31: istore        4
      33: iload_3
      34: aload_0
      35: getfield      #10                 // Field m_map:[[I
      38: arraylength
      39: if_icmplt     79
      42: iload_3
      43: aload_0
      44: getfield      #3                  // Field m_numblocks:I
      47: iadd
      48: istore        5
      50: iload         5
      52: anewarray     #9                  // class "[I"
      55: astore        6
      57: aload_0
      58: getfield      #10                 // Field m_map:[[I
      61: iconst_0
      62: aload         6
      64: iconst_0
      65: aload_0
      66: getfield      #10                 // Field m_map:[[I
      69: arraylength
      70: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      73: aload_0
      74: aload         6
      76: putfield      #10                 // Field m_map:[[I
      79: aload_0
      80: getfield      #10                 // Field m_map:[[I
      83: iload_3
      84: aaload
      85: astore        5
      87: aconst_null
      88: aload         5
      90: if_acmpne     108
      93: aload_0
      94: getfield      #10                 // Field m_map:[[I
      97: iload_3
      98: aload_0
      99: getfield      #6                  // Field m_blocksize:I
     102: newarray       int
     104: dup_x2
     105: aastore
     106: astore        5
     108: aload         5
     110: iload         4
     112: iload_1
     113: iastore
     114: iload_2
     115: aload_0
     116: getfield      #4                  // Field m_firstFree:I
     119: if_icmplt     129
     122: aload_0
     123: iload_2
     124: iconst_1
     125: iadd
     126: putfield      #4                  // Field m_firstFree:I
     129: return

  public int elementAt(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #6                  // Field m_blocksize:I
       5: if_icmpge     15
       8: aload_0
       9: getfield      #8                  // Field m_map0:[I
      12: iload_1
      13: iaload
      14: ireturn
      15: aload_0
      16: getfield      #10                 // Field m_map:[[I
      19: iload_1
      20: aload_0
      21: getfield      #5                  // Field m_SHIFT:I
      24: iushr
      25: aaload
      26: iload_1
      27: aload_0
      28: getfield      #7                  // Field m_MASK:I
      31: iand
      32: iaload
      33: ireturn

  private boolean contains(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokevirtual #16                 // Method indexOf:(II)I
       6: iflt          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public int indexOf(int, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #4                  // Field m_firstFree:I
       5: if_icmplt     10
       8: iconst_m1
       9: ireturn
      10: iload_2
      11: aload_0
      12: getfield      #5                  // Field m_SHIFT:I
      15: iushr
      16: istore_3
      17: iload_2
      18: aload_0
      19: getfield      #7                  // Field m_MASK:I
      22: iand
      23: istore        4
      25: aload_0
      26: getfield      #4                  // Field m_firstFree:I
      29: aload_0
      30: getfield      #5                  // Field m_SHIFT:I
      33: iushr
      34: istore        5
      36: iload_3
      37: iload         5
      39: if_icmpge     102
      42: aload_0
      43: getfield      #10                 // Field m_map:[[I
      46: iload_3
      47: aaload
      48: astore        6
      50: aload         6
      52: ifnull        93
      55: iload         4
      57: istore        7
      59: iload         7
      61: aload_0
      62: getfield      #6                  // Field m_blocksize:I
      65: if_icmpge     93
      68: aload         6
      70: iload         7
      72: iaload
      73: iload_1
      74: if_icmpne     87
      77: iload         7
      79: iload_3
      80: aload_0
      81: getfield      #6                  // Field m_blocksize:I
      84: imul
      85: iadd
      86: ireturn
      87: iinc          7, 1
      90: goto          59
      93: iconst_0
      94: istore        4
      96: iinc          3, 1
      99: goto          36
     102: aload_0
     103: getfield      #4                  // Field m_firstFree:I
     106: aload_0
     107: getfield      #7                  // Field m_MASK:I
     110: iand
     111: istore        7
     113: aload_0
     114: getfield      #10                 // Field m_map:[[I
     117: iload         5
     119: aaload
     120: astore        6
     122: iload         4
     124: istore        8
     126: iload         8
     128: iload         7
     130: if_icmpge     159
     133: aload         6
     135: iload         8
     137: iaload
     138: iload_1
     139: if_icmpne     153
     142: iload         8
     144: iload         5
     146: aload_0
     147: getfield      #6                  // Field m_blocksize:I
     150: imul
     151: iadd
     152: ireturn
     153: iinc          8, 1
     156: goto          126
     159: iconst_m1
     160: ireturn

  public int indexOf(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokevirtual #16                 // Method indexOf:(II)I
       6: ireturn

  private int lastIndexOf(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: aload_0
       5: getfield      #7                  // Field m_MASK:I
       8: iand
       9: istore_2
      10: aload_0
      11: getfield      #4                  // Field m_firstFree:I
      14: aload_0
      15: getfield      #5                  // Field m_SHIFT:I
      18: iushr
      19: istore_3
      20: iload_3
      21: iflt          78
      24: aload_0
      25: getfield      #10                 // Field m_map:[[I
      28: iload_3
      29: aaload
      30: astore        4
      32: aload         4
      34: ifnull        70
      37: iload_2
      38: istore        5
      40: iload         5
      42: iflt          70
      45: aload         4
      47: iload         5
      49: iaload
      50: iload_1
      51: if_icmpne     64
      54: iload         5
      56: iload_3
      57: aload_0
      58: getfield      #6                  // Field m_blocksize:I
      61: imul
      62: iadd
      63: ireturn
      64: iinc          5, -1
      67: goto          40
      70: iconst_0
      71: istore_2
      72: iinc          3, -1
      75: goto          20
      78: iconst_m1
      79: ireturn

  public final int[] getMap0();
    Code:
       0: aload_0
       1: getfield      #8                  // Field m_map0:[I
       4: areturn

  public final int[][] getMap();
    Code:
       0: aload_0
       1: getfield      #10                 // Field m_map:[[I
       4: areturn
}
