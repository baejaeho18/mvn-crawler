Compiled from "SuballocatedByteVector.java"
public class org.apache.xml.utils.SuballocatedByteVector {
  protected int m_blocksize;

  protected int m_numblocks;

  protected byte[][] m_map;

  protected int m_firstFree;

  protected byte[] m_map0;

  public org.apache.xml.utils.SuballocatedByteVector();
    Code:
       0: aload_0
       1: sipush        2048
       4: invokespecial #1                  // Method "<init>":(I)V
       7: return

  public org.apache.xml.utils.SuballocatedByteVector(int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        32
       7: putfield      #3                  // Field m_numblocks:I
      10: aload_0
      11: iconst_0
      12: putfield      #4                  // Field m_firstFree:I
      15: aload_0
      16: iload_1
      17: putfield      #5                  // Field m_blocksize:I
      20: aload_0
      21: iload_1
      22: newarray       byte
      24: putfield      #6                  // Field m_map0:[B
      27: aload_0
      28: aload_0
      29: getfield      #3                  // Field m_numblocks:I
      32: anewarray     #7                  // class "[B"
      35: putfield      #8                  // Field m_map:[[B
      38: aload_0
      39: getfield      #8                  // Field m_map:[[B
      42: iconst_0
      43: aload_0
      44: getfield      #6                  // Field m_map0:[B
      47: aastore
      48: return

  public org.apache.xml.utils.SuballocatedByteVector(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method "<init>":(I)V
       5: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: ireturn

  private void setSize(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: iload_1
       5: if_icmpge     13
       8: aload_0
       9: iload_1
      10: putfield      #4                  // Field m_firstFree:I
      13: return

  public void addElement(byte);
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: aload_0
       5: getfield      #5                  // Field m_blocksize:I
       8: if_icmpge     31
      11: aload_0
      12: getfield      #6                  // Field m_map0:[B
      15: aload_0
      16: dup
      17: getfield      #4                  // Field m_firstFree:I
      20: dup_x1
      21: iconst_1
      22: iadd
      23: putfield      #4                  // Field m_firstFree:I
      26: iload_1
      27: bastore
      28: goto          141
      31: aload_0
      32: getfield      #4                  // Field m_firstFree:I
      35: aload_0
      36: getfield      #5                  // Field m_blocksize:I
      39: idiv
      40: istore_2
      41: aload_0
      42: getfield      #4                  // Field m_firstFree:I
      45: aload_0
      46: getfield      #5                  // Field m_blocksize:I
      49: irem
      50: istore_3
      51: aload_0
      52: dup
      53: getfield      #4                  // Field m_firstFree:I
      56: iconst_1
      57: iadd
      58: putfield      #4                  // Field m_firstFree:I
      61: iload_2
      62: aload_0
      63: getfield      #8                  // Field m_map:[[B
      66: arraylength
      67: if_icmplt     107
      70: iload_2
      71: aload_0
      72: getfield      #3                  // Field m_numblocks:I
      75: iadd
      76: istore        4
      78: iload         4
      80: anewarray     #7                  // class "[B"
      83: astore        5
      85: aload_0
      86: getfield      #8                  // Field m_map:[[B
      89: iconst_0
      90: aload         5
      92: iconst_0
      93: aload_0
      94: getfield      #8                  // Field m_map:[[B
      97: arraylength
      98: invokestatic  #9                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     101: aload_0
     102: aload         5
     104: putfield      #8                  // Field m_map:[[B
     107: aload_0
     108: getfield      #8                  // Field m_map:[[B
     111: iload_2
     112: aaload
     113: astore        4
     115: aconst_null
     116: aload         4
     118: if_acmpne     136
     121: aload_0
     122: getfield      #8                  // Field m_map:[[B
     125: iload_2
     126: aload_0
     127: getfield      #5                  // Field m_blocksize:I
     130: newarray       byte
     132: dup_x2
     133: aastore
     134: astore        4
     136: aload         4
     138: iload_3
     139: iload_1
     140: bastore
     141: return

  private void addElements(byte, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: iload_2
       5: iadd
       6: aload_0
       7: getfield      #5                  // Field m_blocksize:I
      10: if_icmpge     46
      13: iconst_0
      14: istore_3
      15: iload_3
      16: iload_2
      17: if_icmpge     43
      20: aload_0
      21: getfield      #6                  // Field m_map0:[B
      24: aload_0
      25: dup
      26: getfield      #4                  // Field m_firstFree:I
      29: dup_x1
      30: iconst_1
      31: iadd
      32: putfield      #4                  // Field m_firstFree:I
      35: iload_1
      36: bastore
      37: iinc          3, 1
      40: goto          15
      43: goto          214
      46: aload_0
      47: getfield      #4                  // Field m_firstFree:I
      50: aload_0
      51: getfield      #5                  // Field m_blocksize:I
      54: idiv
      55: istore_3
      56: aload_0
      57: getfield      #4                  // Field m_firstFree:I
      60: aload_0
      61: getfield      #5                  // Field m_blocksize:I
      64: irem
      65: istore        4
      67: aload_0
      68: dup
      69: getfield      #4                  // Field m_firstFree:I
      72: iload_2
      73: iadd
      74: putfield      #4                  // Field m_firstFree:I
      77: iload_2
      78: ifle          214
      81: iload_3
      82: aload_0
      83: getfield      #8                  // Field m_map:[[B
      86: arraylength
      87: if_icmplt     127
      90: iload_3
      91: aload_0
      92: getfield      #3                  // Field m_numblocks:I
      95: iadd
      96: istore        5
      98: iload         5
     100: anewarray     #7                  // class "[B"
     103: astore        6
     105: aload_0
     106: getfield      #8                  // Field m_map:[[B
     109: iconst_0
     110: aload         6
     112: iconst_0
     113: aload_0
     114: getfield      #8                  // Field m_map:[[B
     117: arraylength
     118: invokestatic  #9                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     121: aload_0
     122: aload         6
     124: putfield      #8                  // Field m_map:[[B
     127: aload_0
     128: getfield      #8                  // Field m_map:[[B
     131: iload_3
     132: aaload
     133: astore        5
     135: aconst_null
     136: aload         5
     138: if_acmpne     156
     141: aload_0
     142: getfield      #8                  // Field m_map:[[B
     145: iload_3
     146: aload_0
     147: getfield      #5                  // Field m_blocksize:I
     150: newarray       byte
     152: dup_x2
     153: aastore
     154: astore        5
     156: aload_0
     157: getfield      #5                  // Field m_blocksize:I
     160: iload         4
     162: isub
     163: iload_2
     164: if_icmpge     177
     167: aload_0
     168: getfield      #5                  // Field m_blocksize:I
     171: iload         4
     173: isub
     174: goto          178
     177: iload_2
     178: istore        6
     180: iload_2
     181: iload         6
     183: isub
     184: istore_2
     185: iload         6
     187: iinc          6, -1
     190: ifle          205
     193: aload         5
     195: iload         4
     197: iinc          4, 1
     200: iload_1
     201: bastore
     202: goto          185
     205: iinc          3, 1
     208: iconst_0
     209: istore        4
     211: goto          77
     214: return

  private void addElements(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: iload_1
       5: iadd
       6: istore_2
       7: iload_2
       8: aload_0
       9: getfield      #5                  // Field m_blocksize:I
      12: if_icmple     69
      15: aload_0
      16: getfield      #4                  // Field m_firstFree:I
      19: aload_0
      20: getfield      #5                  // Field m_blocksize:I
      23: irem
      24: istore_3
      25: aload_0
      26: getfield      #4                  // Field m_firstFree:I
      29: iload_1
      30: iadd
      31: aload_0
      32: getfield      #5                  // Field m_blocksize:I
      35: irem
      36: istore        4
      38: iload_3
      39: iconst_1
      40: iadd
      41: istore        5
      43: iload         5
      45: iload         4
      47: if_icmpgt     69
      50: aload_0
      51: getfield      #8                  // Field m_map:[[B
      54: iload         5
      56: aload_0
      57: getfield      #5                  // Field m_blocksize:I
      60: newarray       byte
      62: aastore
      63: iinc          5, 1
      66: goto          43
      69: aload_0
      70: iload_2
      71: putfield      #4                  // Field m_firstFree:I
      74: return

  private void insertElementAt(byte, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #4                  // Field m_firstFree:I
       5: if_icmpne     16
       8: aload_0
       9: iload_1
      10: invokevirtual #10                 // Method addElement:(B)V
      13: goto          265
      16: iload_2
      17: aload_0
      18: getfield      #4                  // Field m_firstFree:I
      21: if_icmple     131
      24: iload_2
      25: aload_0
      26: getfield      #5                  // Field m_blocksize:I
      29: idiv
      30: istore_3
      31: iload_3
      32: aload_0
      33: getfield      #8                  // Field m_map:[[B
      36: arraylength
      37: if_icmplt     77
      40: iload_3
      41: aload_0
      42: getfield      #3                  // Field m_numblocks:I
      45: iadd
      46: istore        4
      48: iload         4
      50: anewarray     #7                  // class "[B"
      53: astore        5
      55: aload_0
      56: getfield      #8                  // Field m_map:[[B
      59: iconst_0
      60: aload         5
      62: iconst_0
      63: aload_0
      64: getfield      #8                  // Field m_map:[[B
      67: arraylength
      68: invokestatic  #9                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      71: aload_0
      72: aload         5
      74: putfield      #8                  // Field m_map:[[B
      77: aload_0
      78: getfield      #8                  // Field m_map:[[B
      81: iload_3
      82: aaload
      83: astore        4
      85: aconst_null
      86: aload         4
      88: if_acmpne     106
      91: aload_0
      92: getfield      #8                  // Field m_map:[[B
      95: iload_3
      96: aload_0
      97: getfield      #5                  // Field m_blocksize:I
     100: newarray       byte
     102: dup_x2
     103: aastore
     104: astore        4
     106: iload_2
     107: aload_0
     108: getfield      #5                  // Field m_blocksize:I
     111: irem
     112: istore        5
     114: aload         4
     116: iload         5
     118: iload_1
     119: bastore
     120: aload_0
     121: iload         5
     123: iconst_1
     124: iadd
     125: putfield      #4                  // Field m_firstFree:I
     128: goto          265
     131: iload_2
     132: aload_0
     133: getfield      #5                  // Field m_blocksize:I
     136: idiv
     137: istore_3
     138: aload_0
     139: getfield      #4                  // Field m_firstFree:I
     142: iconst_1
     143: aload_0
     144: getfield      #5                  // Field m_blocksize:I
     147: idiv
     148: iadd
     149: istore        4
     151: aload_0
     152: dup
     153: getfield      #4                  // Field m_firstFree:I
     156: iconst_1
     157: iadd
     158: putfield      #4                  // Field m_firstFree:I
     161: iload_2
     162: aload_0
     163: getfield      #5                  // Field m_blocksize:I
     166: irem
     167: istore        5
     169: iload_3
     170: iload         4
     172: if_icmpgt     265
     175: aload_0
     176: getfield      #5                  // Field m_blocksize:I
     179: iload         5
     181: isub
     182: iconst_1
     183: isub
     184: istore        7
     186: aload_0
     187: getfield      #8                  // Field m_map:[[B
     190: iload_3
     191: aaload
     192: astore        8
     194: aconst_null
     195: aload         8
     197: if_acmpne     221
     200: iconst_0
     201: istore        6
     203: aload_0
     204: getfield      #8                  // Field m_map:[[B
     207: iload_3
     208: aload_0
     209: getfield      #5                  // Field m_blocksize:I
     212: newarray       byte
     214: dup_x2
     215: aastore
     216: astore        8
     218: goto          247
     221: aload         8
     223: aload_0
     224: getfield      #5                  // Field m_blocksize:I
     227: iconst_1
     228: isub
     229: baload
     230: istore        6
     232: aload         8
     234: iload         5
     236: aload         8
     238: iload         5
     240: iconst_1
     241: iadd
     242: iload         7
     244: invokestatic  #9                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     247: aload         8
     249: iload         5
     251: iload_1
     252: bastore
     253: iload         6
     255: istore_1
     256: iconst_0
     257: istore        5
     259: iinc          3, 1
     262: goto          169
     265: return

  public void removeAllElements();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #4                  // Field m_firstFree:I
       5: return

  private boolean removeElement(byte);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokevirtual #11                 // Method indexOf:(BI)I
       6: istore_2
       7: iload_2
       8: ifge          13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: iload_2
      15: invokespecial #12                 // Method removeElementAt:(I)V
      18: iconst_1
      19: ireturn

  private void removeElementAt(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #4                  // Field m_firstFree:I
       5: if_icmpge     160
       8: iload_1
       9: aload_0
      10: getfield      #5                  // Field m_blocksize:I
      13: idiv
      14: istore_2
      15: aload_0
      16: getfield      #4                  // Field m_firstFree:I
      19: aload_0
      20: getfield      #5                  // Field m_blocksize:I
      23: idiv
      24: istore_3
      25: iload_1
      26: aload_0
      27: getfield      #5                  // Field m_blocksize:I
      30: irem
      31: istore        4
      33: iload_2
      34: iload_3
      35: if_icmpgt     160
      38: aload_0
      39: getfield      #5                  // Field m_blocksize:I
      42: iload         4
      44: isub
      45: iconst_1
      46: isub
      47: istore        5
      49: aload_0
      50: getfield      #8                  // Field m_map:[[B
      53: iload_2
      54: aaload
      55: astore        6
      57: aconst_null
      58: aload         6
      60: if_acmpne     81
      63: aload_0
      64: getfield      #8                  // Field m_map:[[B
      67: iload_2
      68: aload_0
      69: getfield      #5                  // Field m_blocksize:I
      72: newarray       byte
      74: dup_x2
      75: aastore
      76: astore        6
      78: goto          96
      81: aload         6
      83: iload         4
      85: iconst_1
      86: iadd
      87: aload         6
      89: iload         4
      91: iload         5
      93: invokestatic  #9                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      96: iload_2
      97: iload_3
      98: if_icmpge     141
     101: aload_0
     102: getfield      #8                  // Field m_map:[[B
     105: iload_2
     106: iconst_1
     107: iadd
     108: aaload
     109: astore        7
     111: aload         7
     113: ifnull        138
     116: aload         6
     118: aload_0
     119: getfield      #5                  // Field m_blocksize:I
     122: iconst_1
     123: isub
     124: aload         7
     126: ifnull        136
     129: aload         7
     131: iconst_0
     132: baload
     133: goto          137
     136: iconst_0
     137: bastore
     138: goto          151
     141: aload         6
     143: aload_0
     144: getfield      #5                  // Field m_blocksize:I
     147: iconst_1
     148: isub
     149: iconst_0
     150: bastore
     151: iconst_0
     152: istore        4
     154: iinc          2, 1
     157: goto          33
     160: aload_0
     161: dup
     162: getfield      #4                  // Field m_firstFree:I
     165: iconst_1
     166: isub
     167: putfield      #4                  // Field m_firstFree:I
     170: return

  public void setElementAt(byte, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #5                  // Field m_blocksize:I
       5: if_icmpge     16
       8: aload_0
       9: getfield      #6                  // Field m_map0:[B
      12: iload_2
      13: iload_1
      14: bastore
      15: return
      16: iload_2
      17: aload_0
      18: getfield      #5                  // Field m_blocksize:I
      21: idiv
      22: istore_3
      23: iload_2
      24: aload_0
      25: getfield      #5                  // Field m_blocksize:I
      28: irem
      29: istore        4
      31: iload_3
      32: aload_0
      33: getfield      #8                  // Field m_map:[[B
      36: arraylength
      37: if_icmplt     77
      40: iload_3
      41: aload_0
      42: getfield      #3                  // Field m_numblocks:I
      45: iadd
      46: istore        5
      48: iload         5
      50: anewarray     #7                  // class "[B"
      53: astore        6
      55: aload_0
      56: getfield      #8                  // Field m_map:[[B
      59: iconst_0
      60: aload         6
      62: iconst_0
      63: aload_0
      64: getfield      #8                  // Field m_map:[[B
      67: arraylength
      68: invokestatic  #9                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      71: aload_0
      72: aload         6
      74: putfield      #8                  // Field m_map:[[B
      77: aload_0
      78: getfield      #8                  // Field m_map:[[B
      81: iload_3
      82: aaload
      83: astore        5
      85: aconst_null
      86: aload         5
      88: if_acmpne     106
      91: aload_0
      92: getfield      #8                  // Field m_map:[[B
      95: iload_3
      96: aload_0
      97: getfield      #5                  // Field m_blocksize:I
     100: newarray       byte
     102: dup_x2
     103: aastore
     104: astore        5
     106: aload         5
     108: iload         4
     110: iload_1
     111: bastore
     112: iload_2
     113: aload_0
     114: getfield      #4                  // Field m_firstFree:I
     117: if_icmplt     127
     120: aload_0
     121: iload_2
     122: iconst_1
     123: iadd
     124: putfield      #4                  // Field m_firstFree:I
     127: return

  public byte elementAt(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #5                  // Field m_blocksize:I
       5: if_icmpge     15
       8: aload_0
       9: getfield      #6                  // Field m_map0:[B
      12: iload_1
      13: baload
      14: ireturn
      15: aload_0
      16: getfield      #8                  // Field m_map:[[B
      19: iload_1
      20: aload_0
      21: getfield      #5                  // Field m_blocksize:I
      24: idiv
      25: aaload
      26: iload_1
      27: aload_0
      28: getfield      #5                  // Field m_blocksize:I
      31: irem
      32: baload
      33: ireturn

  private boolean contains(byte);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokevirtual #11                 // Method indexOf:(BI)I
       6: iflt          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public int indexOf(byte, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #4                  // Field m_firstFree:I
       5: if_icmplt     10
       8: iconst_m1
       9: ireturn
      10: iload_2
      11: aload_0
      12: getfield      #5                  // Field m_blocksize:I
      15: idiv
      16: istore_3
      17: iload_2
      18: aload_0
      19: getfield      #5                  // Field m_blocksize:I
      22: irem
      23: istore        4
      25: aload_0
      26: getfield      #4                  // Field m_firstFree:I
      29: aload_0
      30: getfield      #5                  // Field m_blocksize:I
      33: idiv
      34: istore        5
      36: iload_3
      37: iload         5
      39: if_icmpge     102
      42: aload_0
      43: getfield      #8                  // Field m_map:[[B
      46: iload_3
      47: aaload
      48: astore        6
      50: aload         6
      52: ifnull        93
      55: iload         4
      57: istore        7
      59: iload         7
      61: aload_0
      62: getfield      #5                  // Field m_blocksize:I
      65: if_icmpge     93
      68: aload         6
      70: iload         7
      72: baload
      73: iload_1
      74: if_icmpne     87
      77: iload         7
      79: iload_3
      80: aload_0
      81: getfield      #5                  // Field m_blocksize:I
      84: imul
      85: iadd
      86: ireturn
      87: iinc          7, 1
      90: goto          59
      93: iconst_0
      94: istore        4
      96: iinc          3, 1
      99: goto          36
     102: aload_0
     103: getfield      #4                  // Field m_firstFree:I
     106: aload_0
     107: getfield      #5                  // Field m_blocksize:I
     110: irem
     111: istore        7
     113: aload_0
     114: getfield      #8                  // Field m_map:[[B
     117: iload         5
     119: aaload
     120: astore        6
     122: iload         4
     124: istore        8
     126: iload         8
     128: iload         7
     130: if_icmpge     159
     133: aload         6
     135: iload         8
     137: baload
     138: iload_1
     139: if_icmpne     153
     142: iload         8
     144: iload         5
     146: aload_0
     147: getfield      #5                  // Field m_blocksize:I
     150: imul
     151: iadd
     152: ireturn
     153: iinc          8, 1
     156: goto          126
     159: iconst_m1
     160: ireturn

  public int indexOf(byte);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokevirtual #11                 // Method indexOf:(BI)I
       6: ireturn

  private int lastIndexOf(byte);
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: aload_0
       5: getfield      #5                  // Field m_blocksize:I
       8: irem
       9: istore_2
      10: aload_0
      11: getfield      #4                  // Field m_firstFree:I
      14: aload_0
      15: getfield      #5                  // Field m_blocksize:I
      18: idiv
      19: istore_3
      20: iload_3
      21: iflt          78
      24: aload_0
      25: getfield      #8                  // Field m_map:[[B
      28: iload_3
      29: aaload
      30: astore        4
      32: aload         4
      34: ifnull        70
      37: iload_2
      38: istore        5
      40: iload         5
      42: iflt          70
      45: aload         4
      47: iload         5
      49: baload
      50: iload_1
      51: if_icmpne     64
      54: iload         5
      56: iload_3
      57: aload_0
      58: getfield      #5                  // Field m_blocksize:I
      61: imul
      62: iadd
      63: ireturn
      64: iinc          5, -1
      67: goto          40
      70: iconst_0
      71: istore_2
      72: iinc          3, -1
      75: goto          20
      78: iconst_m1
      79: ireturn
}
