Compiled from "MultiValuedNodeHeapIterator.java"
public abstract class org.apache.xalan.xsltc.dom.MultiValuedNodeHeapIterator extends org.apache.xml.dtm.ref.DTMAxisIteratorBase {
  private static final int InitSize;

  private int _heapSize;

  private int _size;

  private org.apache.xalan.xsltc.dom.MultiValuedNodeHeapIterator$HeapNode[] _heap;

  private int _free;

  private int _returnedLast;

  private int _cachedReturnedLast;

  private int _cachedHeapSize;

  public org.apache.xalan.xsltc.dom.MultiValuedNodeHeapIterator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/xml/dtm/ref/DTMAxisIteratorBase."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field _heapSize:I
       9: aload_0
      10: bipush        8
      12: putfield      #3                  // Field _size:I
      15: aload_0
      16: bipush        8
      18: anewarray     #4                  // class org/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode
      21: putfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field _free:I
      29: aload_0
      30: iconst_m1
      31: putfield      #7                  // Field _cachedReturnedLast:I
      34: return

  public org.apache.xml.dtm.DTMAxisIterator cloneIterator();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #8                  // Field _isRestartable:Z
       5: aload_0
       6: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
       9: arraylength
      10: anewarray     #4                  // class org/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode
      13: astore_1
      14: aload_0
      15: invokespecial #9                  // Method java/lang/Object.clone:()Ljava/lang/Object;
      18: checkcast     #10                 // class org/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator
      21: astore_2
      22: iconst_0
      23: istore_3
      24: iload_3
      25: aload_0
      26: getfield      #6                  // Field _free:I
      29: if_icmpge     50
      32: aload_1
      33: iload_3
      34: aload_0
      35: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      38: iload_3
      39: aaload
      40: invokevirtual #11                 // Method org/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode.cloneHeapNode:()Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      43: aastore
      44: iinc          3, 1
      47: goto          24
      50: aload_2
      51: iconst_0
      52: invokevirtual #12                 // Method setRestartable:(Z)V
      55: aload_2
      56: aload_1
      57: putfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      60: aload_2
      61: invokevirtual #13                 // Method reset:()Lorg/apache/xml/dtm/DTMAxisIterator;
      64: areturn
      65: astore_2
      66: ldc           #15                 // String ITERATOR_CLONE_ERR
      68: aload_2
      69: invokevirtual #16                 // Method java/lang/CloneNotSupportedException.toString:()Ljava/lang/String;
      72: invokestatic  #17                 // Method org/apache/xalan/xsltc/runtime/BasisLibrary.runTimeError:(Ljava/lang/String;Ljava/lang/Object;)V
      75: aconst_null
      76: areturn
    Exception table:
       from    to  target type
          14    64    65   Class java/lang/CloneNotSupportedException

  protected void addHeapNode(org.apache.xalan.xsltc.dom.MultiValuedNodeHeapIterator$HeapNode);
    Code:
       0: aload_0
       1: getfield      #6                  // Field _free:I
       4: aload_0
       5: getfield      #3                  // Field _size:I
       8: if_icmpne     45
      11: aload_0
      12: dup
      13: getfield      #3                  // Field _size:I
      16: iconst_2
      17: imul
      18: dup_x1
      19: putfield      #3                  // Field _size:I
      22: anewarray     #4                  // class org/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode
      25: astore_2
      26: aload_0
      27: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      30: iconst_0
      31: aload_2
      32: iconst_0
      33: aload_0
      34: getfield      #6                  // Field _free:I
      37: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      40: aload_0
      41: aload_2
      42: putfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      45: aload_0
      46: dup
      47: getfield      #2                  // Field _heapSize:I
      50: iconst_1
      51: iadd
      52: putfield      #2                  // Field _heapSize:I
      55: aload_0
      56: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      59: aload_0
      60: dup
      61: getfield      #6                  // Field _free:I
      64: dup_x1
      65: iconst_1
      66: iadd
      67: putfield      #6                  // Field _free:I
      70: aload_1
      71: aastore
      72: return

  public int next();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _heapSize:I
       4: ifle          129
       7: aload_0
       8: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      11: iconst_0
      12: aaload
      13: getfield      #19                 // Field org/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode._node:I
      16: istore_1
      17: iload_1
      18: iconst_m1
      19: if_icmpne     74
      22: aload_0
      23: getfield      #2                  // Field _heapSize:I
      26: iconst_1
      27: if_icmple     72
      30: aload_0
      31: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      34: iconst_0
      35: aaload
      36: astore_2
      37: aload_0
      38: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      41: iconst_0
      42: aload_0
      43: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      46: aload_0
      47: dup
      48: getfield      #2                  // Field _heapSize:I
      51: iconst_1
      52: isub
      53: dup_x1
      54: putfield      #2                  // Field _heapSize:I
      57: aaload
      58: aastore
      59: aload_0
      60: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      63: aload_0
      64: getfield      #2                  // Field _heapSize:I
      67: aload_2
      68: aastore
      69: goto          121
      72: iconst_m1
      73: ireturn
      74: iload_1
      75: aload_0
      76: getfield      #20                 // Field _returnedLast:I
      79: if_icmpne     95
      82: aload_0
      83: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      86: iconst_0
      87: aaload
      88: invokevirtual #21                 // Method org/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode.step:()I
      91: pop
      92: goto          121
      95: aload_0
      96: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      99: iconst_0
     100: aaload
     101: invokevirtual #21                 // Method org/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode.step:()I
     104: pop
     105: aload_0
     106: iconst_0
     107: invokespecial #22                 // Method heapify:(I)V
     110: aload_0
     111: aload_0
     112: iload_1
     113: dup_x1
     114: putfield      #20                 // Field _returnedLast:I
     117: invokevirtual #23                 // Method returnNode:(I)I
     120: ireturn
     121: aload_0
     122: iconst_0
     123: invokespecial #22                 // Method heapify:(I)V
     126: goto          0
     129: iconst_m1
     130: ireturn

  public org.apache.xml.dtm.DTMAxisIterator setStartNode(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field _isRestartable:Z
       4: ifeq          108
       7: aload_0
       8: iload_1
       9: putfield      #24                 // Field _startNode:I
      12: iconst_0
      13: istore_2
      14: iload_2
      15: aload_0
      16: getfield      #6                  // Field _free:I
      19: if_icmpge     71
      22: aload_0
      23: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      26: iload_2
      27: aaload
      28: getfield      #25                 // Field org/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode._isStartSet:Z
      31: ifne          65
      34: aload_0
      35: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      38: iload_2
      39: aaload
      40: iload_1
      41: invokevirtual #26                 // Method org/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode.setStartNode:(I)Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      44: pop
      45: aload_0
      46: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      49: iload_2
      50: aaload
      51: invokevirtual #21                 // Method org/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode.step:()I
      54: pop
      55: aload_0
      56: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      59: iload_2
      60: aaload
      61: iconst_1
      62: putfield      #25                 // Field org/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode._isStartSet:Z
      65: iinc          2, 1
      68: goto          14
      71: aload_0
      72: aload_0
      73: getfield      #6                  // Field _free:I
      76: dup_x1
      77: putfield      #2                  // Field _heapSize:I
      80: iconst_2
      81: idiv
      82: istore_2
      83: iload_2
      84: iflt          98
      87: aload_0
      88: iload_2
      89: invokespecial #22                 // Method heapify:(I)V
      92: iinc          2, -1
      95: goto          83
      98: aload_0
      99: iconst_m1
     100: putfield      #20                 // Field _returnedLast:I
     103: aload_0
     104: invokevirtual #27                 // Method resetPosition:()Lorg/apache/xml/dtm/DTMAxisIterator;
     107: areturn
     108: aload_0
     109: areturn

  protected void init();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #6                  // Field _free:I
       7: if_icmpge     23
      10: aload_0
      11: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      14: iload_1
      15: aconst_null
      16: aastore
      17: iinc          1, 1
      20: goto          2
      23: aload_0
      24: iconst_0
      25: putfield      #2                  // Field _heapSize:I
      28: aload_0
      29: iconst_0
      30: putfield      #6                  // Field _free:I
      33: return

  private void heapify(int);
    Code:
       0: iload_1
       1: iconst_1
       2: iadd
       3: iconst_1
       4: ishl
       5: istore_2
       6: iload_2
       7: iconst_1
       8: isub
       9: istore_3
      10: iload_3
      11: aload_0
      12: getfield      #2                  // Field _heapSize:I
      15: if_icmpge     40
      18: aload_0
      19: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      22: iload_3
      23: aaload
      24: aload_0
      25: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      28: iload_1
      29: aaload
      30: invokevirtual #28                 // Method org/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode.isLessThan:(Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;)Z
      33: ifeq          40
      36: iload_3
      37: goto          41
      40: iload_1
      41: istore        4
      43: iload_2
      44: aload_0
      45: getfield      #2                  // Field _heapSize:I
      48: if_icmpge     73
      51: aload_0
      52: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      55: iload_2
      56: aaload
      57: aload_0
      58: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      61: iload         4
      63: aaload
      64: invokevirtual #28                 // Method org/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode.isLessThan:(Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;)Z
      67: ifeq          73
      70: iload_2
      71: istore        4
      73: iload         4
      75: iload_1
      76: if_icmpeq     115
      79: aload_0
      80: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      83: iload         4
      85: aaload
      86: astore        5
      88: aload_0
      89: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      92: iload         4
      94: aload_0
      95: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      98: iload_1
      99: aaload
     100: aastore
     101: aload_0
     102: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
     105: iload_1
     106: aload         5
     108: aastore
     109: iload         4
     111: istore_1
     112: goto          0
     115: return

  public void setMark();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #6                  // Field _free:I
       7: if_icmpge     25
      10: aload_0
      11: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      14: iload_1
      15: aaload
      16: invokevirtual #29                 // Method org/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode.setMark:()V
      19: iinc          1, 1
      22: goto          2
      25: aload_0
      26: aload_0
      27: getfield      #20                 // Field _returnedLast:I
      30: putfield      #7                  // Field _cachedReturnedLast:I
      33: aload_0
      34: aload_0
      35: getfield      #2                  // Field _heapSize:I
      38: putfield      #30                 // Field _cachedHeapSize:I
      41: return

  public void gotoMark();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #6                  // Field _free:I
       7: if_icmpge     25
      10: aload_0
      11: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      14: iload_1
      15: aaload
      16: invokevirtual #31                 // Method org/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode.gotoMark:()V
      19: iinc          1, 1
      22: goto          2
      25: aload_0
      26: aload_0
      27: getfield      #30                 // Field _cachedHeapSize:I
      30: dup_x1
      31: putfield      #2                  // Field _heapSize:I
      34: iconst_2
      35: idiv
      36: istore_1
      37: iload_1
      38: iflt          52
      41: aload_0
      42: iload_1
      43: invokespecial #22                 // Method heapify:(I)V
      46: iinc          1, -1
      49: goto          37
      52: aload_0
      53: aload_0
      54: getfield      #7                  // Field _cachedReturnedLast:I
      57: putfield      #20                 // Field _returnedLast:I
      60: return

  public org.apache.xml.dtm.DTMAxisIterator reset();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #6                  // Field _free:I
       7: if_icmpge     36
      10: aload_0
      11: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      14: iload_1
      15: aaload
      16: invokevirtual #32                 // Method org/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode.reset:()Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      19: pop
      20: aload_0
      21: getfield      #5                  // Field _heap:[Lorg/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode;
      24: iload_1
      25: aaload
      26: invokevirtual #21                 // Method org/apache/xalan/xsltc/dom/MultiValuedNodeHeapIterator$HeapNode.step:()I
      29: pop
      30: iinc          1, 1
      33: goto          2
      36: aload_0
      37: aload_0
      38: getfield      #6                  // Field _free:I
      41: dup_x1
      42: putfield      #2                  // Field _heapSize:I
      45: iconst_2
      46: idiv
      47: istore_1
      48: iload_1
      49: iflt          63
      52: aload_0
      53: iload_1
      54: invokespecial #22                 // Method heapify:(I)V
      57: iinc          1, -1
      60: goto          48
      63: aload_0
      64: iconst_m1
      65: putfield      #20                 // Field _returnedLast:I
      68: aload_0
      69: invokevirtual #27                 // Method resetPosition:()Lorg/apache/xml/dtm/DTMAxisIterator;
      72: areturn
}
