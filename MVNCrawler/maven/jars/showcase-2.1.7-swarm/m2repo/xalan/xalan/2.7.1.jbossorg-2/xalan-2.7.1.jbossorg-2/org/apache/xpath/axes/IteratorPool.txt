Compiled from "IteratorPool.java"
public final class org.apache.xpath.axes.IteratorPool implements java.io.Serializable {
  static final long serialVersionUID;

  private final org.apache.xml.dtm.DTMIterator m_orig;

  private final java.util.ArrayList m_freeStack;

  public org.apache.xpath.axes.IteratorPool(org.apache.xml.dtm.DTMIterator);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field m_orig:Lorg/apache/xml/dtm/DTMIterator;
       9: aload_0
      10: new           #3                  // class java/util/ArrayList
      13: dup
      14: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      17: putfield      #5                  // Field m_freeStack:Ljava/util/ArrayList;
      20: return

  public synchronized org.apache.xml.dtm.DTMIterator getInstanceOrThrow() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_freeStack:Ljava/util/ArrayList;
       4: invokevirtual #6                  // Method java/util/ArrayList.isEmpty:()Z
       7: ifeq          23
      10: aload_0
      11: getfield      #2                  // Field m_orig:Lorg/apache/xml/dtm/DTMIterator;
      14: invokeinterface #7,  1            // InterfaceMethod org/apache/xml/dtm/DTMIterator.clone:()Ljava/lang/Object;
      19: checkcast     #8                  // class org/apache/xml/dtm/DTMIterator
      22: areturn
      23: aload_0
      24: getfield      #5                  // Field m_freeStack:Ljava/util/ArrayList;
      27: aload_0
      28: getfield      #5                  // Field m_freeStack:Ljava/util/ArrayList;
      31: invokevirtual #9                  // Method java/util/ArrayList.size:()I
      34: iconst_1
      35: isub
      36: invokevirtual #10                 // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;
      39: checkcast     #8                  // class org/apache/xml/dtm/DTMIterator
      42: astore_1
      43: aload_1
      44: areturn

  public synchronized org.apache.xml.dtm.DTMIterator getInstance();
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_freeStack:Ljava/util/ArrayList;
       4: invokevirtual #6                  // Method java/util/ArrayList.isEmpty:()Z
       7: ifeq          33
      10: aload_0
      11: getfield      #2                  // Field m_orig:Lorg/apache/xml/dtm/DTMIterator;
      14: invokeinterface #7,  1            // InterfaceMethod org/apache/xml/dtm/DTMIterator.clone:()Ljava/lang/Object;
      19: checkcast     #8                  // class org/apache/xml/dtm/DTMIterator
      22: areturn
      23: astore_1
      24: new           #12                 // class org/apache/xml/utils/WrappedRuntimeException
      27: dup
      28: aload_1
      29: invokespecial #13                 // Method org/apache/xml/utils/WrappedRuntimeException."<init>":(Ljava/lang/Exception;)V
      32: athrow
      33: aload_0
      34: getfield      #5                  // Field m_freeStack:Ljava/util/ArrayList;
      37: aload_0
      38: getfield      #5                  // Field m_freeStack:Ljava/util/ArrayList;
      41: invokevirtual #9                  // Method java/util/ArrayList.size:()I
      44: iconst_1
      45: isub
      46: invokevirtual #10                 // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;
      49: checkcast     #8                  // class org/apache/xml/dtm/DTMIterator
      52: astore_1
      53: aload_1
      54: areturn
    Exception table:
       from    to  target type
          10    22    23   Class java/lang/Exception

  public synchronized void freeInstance(org.apache.xml.dtm.DTMIterator);
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_freeStack:Ljava/util/ArrayList;
       4: aload_1
       5: invokevirtual #14                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
       8: pop
       9: return
}
