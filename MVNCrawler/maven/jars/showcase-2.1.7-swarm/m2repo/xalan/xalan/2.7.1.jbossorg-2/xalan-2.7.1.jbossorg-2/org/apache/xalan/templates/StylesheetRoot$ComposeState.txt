Compiled from "StylesheetRoot.java"
class org.apache.xalan.templates.StylesheetRoot$ComposeState {
  private org.apache.xml.dtm.ref.ExpandedNameTable m_ent;

  private java.util.Vector m_variableNames;

  org.apache.xml.utils.IntStack m_marks;

  private int m_maxStackFrameSize;

  final org.apache.xalan.templates.StylesheetRoot this$0;

  org.apache.xalan.templates.StylesheetRoot$ComposeState(org.apache.xalan.templates.StylesheetRoot);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/xalan/templates/StylesheetRoot;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #3                  // class org/apache/xml/dtm/ref/ExpandedNameTable
      13: dup
      14: invokespecial #4                  // Method org/apache/xml/dtm/ref/ExpandedNameTable."<init>":()V
      17: putfield      #5                  // Field m_ent:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
      20: aload_0
      21: new           #6                  // class java/util/Vector
      24: dup
      25: invokespecial #7                  // Method java/util/Vector."<init>":()V
      28: putfield      #8                  // Field m_variableNames:Ljava/util/Vector;
      31: aload_0
      32: new           #9                  // class org/apache/xml/utils/IntStack
      35: dup
      36: invokespecial #10                 // Method org/apache/xml/utils/IntStack."<init>":()V
      39: putfield      #11                 // Field m_marks:Lorg/apache/xml/utils/IntStack;
      42: aload_1
      43: invokestatic  #12                 // Method org/apache/xalan/templates/StylesheetRoot.access$000:(Lorg/apache/xalan/templates/StylesheetRoot;)Ljava/util/Vector;
      46: invokevirtual #13                 // Method java/util/Vector.size:()I
      49: istore_2
      50: iconst_0
      51: istore_3
      52: iload_3
      53: iload_2
      54: if_icmpge     88
      57: aload_1
      58: invokestatic  #12                 // Method org/apache/xalan/templates/StylesheetRoot.access$000:(Lorg/apache/xalan/templates/StylesheetRoot;)Ljava/util/Vector;
      61: iload_3
      62: invokevirtual #14                 // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      65: checkcast     #15                 // class org/apache/xalan/templates/ElemVariable
      68: astore        4
      70: aload_0
      71: getfield      #8                  // Field m_variableNames:Ljava/util/Vector;
      74: aload         4
      76: invokevirtual #16                 // Method org/apache/xalan/templates/ElemVariable.getName:()Lorg/apache/xml/utils/QName;
      79: invokevirtual #17                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      82: iinc          3, 1
      85: goto          52
      88: return

  public int getQNameID(org.apache.xml.utils.QName);
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_ent:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
       4: aload_1
       5: invokevirtual #18                 // Method org/apache/xml/utils/QName.getNamespace:()Ljava/lang/String;
       8: aload_1
       9: invokevirtual #19                 // Method org/apache/xml/utils/QName.getLocalName:()Ljava/lang/String;
      12: iconst_1
      13: invokevirtual #20                 // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
      16: ireturn

  int addVariableName(org.apache.xml.utils.QName);
    Code:
       0: aload_0
       1: getfield      #8                  // Field m_variableNames:Ljava/util/Vector;
       4: invokevirtual #13                 // Method java/util/Vector.size:()I
       7: istore_2
       8: aload_0
       9: getfield      #8                  // Field m_variableNames:Ljava/util/Vector;
      12: aload_1
      13: invokevirtual #17                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      16: aload_0
      17: getfield      #8                  // Field m_variableNames:Ljava/util/Vector;
      20: invokevirtual #13                 // Method java/util/Vector.size:()I
      23: aload_0
      24: invokevirtual #21                 // Method getGlobalsSize:()I
      27: isub
      28: istore_3
      29: iload_3
      30: aload_0
      31: getfield      #22                 // Field m_maxStackFrameSize:I
      34: if_icmple     47
      37: aload_0
      38: dup
      39: getfield      #22                 // Field m_maxStackFrameSize:I
      42: iconst_1
      43: iadd
      44: putfield      #22                 // Field m_maxStackFrameSize:I
      47: iload_2
      48: ireturn

  void resetStackFrameSize();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #22                 // Field m_maxStackFrameSize:I
       5: return

  int getFrameSize();
    Code:
       0: aload_0
       1: getfield      #22                 // Field m_maxStackFrameSize:I
       4: ireturn

  int getCurrentStackFrameSize();
    Code:
       0: aload_0
       1: getfield      #8                  // Field m_variableNames:Ljava/util/Vector;
       4: invokevirtual #13                 // Method java/util/Vector.size:()I
       7: ireturn

  void setCurrentStackFrameSize(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field m_variableNames:Ljava/util/Vector;
       4: iload_1
       5: invokevirtual #23                 // Method java/util/Vector.setSize:(I)V
       8: return

  int getGlobalsSize();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/xalan/templates/StylesheetRoot;
       4: invokestatic  #12                 // Method org/apache/xalan/templates/StylesheetRoot.access$000:(Lorg/apache/xalan/templates/StylesheetRoot;)Ljava/util/Vector;
       7: invokevirtual #13                 // Method java/util/Vector.size:()I
      10: ireturn

  void pushStackMark();
    Code:
       0: aload_0
       1: getfield      #11                 // Field m_marks:Lorg/apache/xml/utils/IntStack;
       4: aload_0
       5: invokevirtual #24                 // Method getCurrentStackFrameSize:()I
       8: invokevirtual #25                 // Method org/apache/xml/utils/IntStack.push:(I)I
      11: pop
      12: return

  void popStackMark();
    Code:
       0: aload_0
       1: getfield      #11                 // Field m_marks:Lorg/apache/xml/utils/IntStack;
       4: invokevirtual #26                 // Method org/apache/xml/utils/IntStack.pop:()I
       7: istore_1
       8: aload_0
       9: iload_1
      10: invokevirtual #27                 // Method setCurrentStackFrameSize:(I)V
      13: return

  java.util.Vector getVariableNames();
    Code:
       0: aload_0
       1: getfield      #8                  // Field m_variableNames:Ljava/util/Vector;
       4: areturn
}
