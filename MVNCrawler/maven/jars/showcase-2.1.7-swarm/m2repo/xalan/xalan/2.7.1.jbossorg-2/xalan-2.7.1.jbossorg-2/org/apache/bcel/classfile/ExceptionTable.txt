Compiled from "ExceptionTable.java"
public final class org.apache.bcel.classfile.ExceptionTable extends org.apache.bcel.classfile.Attribute {
  private int number_of_exceptions;

  private int[] exception_index_table;

  public org.apache.bcel.classfile.ExceptionTable(org.apache.bcel.classfile.ExceptionTable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method org/apache/bcel/classfile/Attribute.getNameIndex:()I
       5: aload_1
       6: invokevirtual #2                  // Method org/apache/bcel/classfile/Attribute.getLength:()I
       9: aload_1
      10: invokevirtual #3                  // Method getExceptionIndexTable:()[I
      13: aload_1
      14: invokevirtual #4                  // Method org/apache/bcel/classfile/Attribute.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;
      17: invokespecial #5                  // Method "<init>":(II[ILorg/apache/bcel/classfile/ConstantPool;)V
      20: return

  public org.apache.bcel.classfile.ExceptionTable(int, int, int[], org.apache.bcel.classfile.ConstantPool);
    Code:
       0: aload_0
       1: iconst_3
       2: iload_1
       3: iload_2
       4: aload         4
       6: invokespecial #6                  // Method org/apache/bcel/classfile/Attribute."<init>":(BIILorg/apache/bcel/classfile/ConstantPool;)V
       9: aload_0
      10: aload_3
      11: invokevirtual #7                  // Method setExceptionIndexTable:([I)V
      14: return

  org.apache.bcel.classfile.ExceptionTable(int, int, java.io.DataInputStream, org.apache.bcel.classfile.ConstantPool) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aconst_null
       4: checkcast     #8                  // class "[I"
       7: aload         4
       9: invokespecial #5                  // Method "<init>":(II[ILorg/apache/bcel/classfile/ConstantPool;)V
      12: aload_0
      13: aload_3
      14: invokevirtual #9                  // Method java/io/DataInputStream.readUnsignedShort:()I
      17: putfield      #10                 // Field number_of_exceptions:I
      20: aload_0
      21: aload_0
      22: getfield      #10                 // Field number_of_exceptions:I
      25: newarray       int
      27: putfield      #11                 // Field exception_index_table:[I
      30: iconst_0
      31: istore        5
      33: goto          50
      36: aload_0
      37: getfield      #11                 // Field exception_index_table:[I
      40: iload         5
      42: aload_3
      43: invokevirtual #9                  // Method java/io/DataInputStream.readUnsignedShort:()I
      46: iastore
      47: iinc          5, 1
      50: iload         5
      52: aload_0
      53: getfield      #10                 // Field number_of_exceptions:I
      56: if_icmplt     36
      59: return

  public void accept(org.apache.bcel.classfile.Visitor);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #12,  2           // InterfaceMethod org/apache/bcel/classfile/Visitor.visitExceptionTable:(Lorg/apache/bcel/classfile/ExceptionTable;)V
       7: return

  public final void dump(java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method org/apache/bcel/classfile/Attribute.dump:(Ljava/io/DataOutputStream;)V
       5: aload_1
       6: aload_0
       7: getfield      #10                 // Field number_of_exceptions:I
      10: invokevirtual #14                 // Method java/io/DataOutputStream.writeShort:(I)V
      13: iconst_0
      14: istore_2
      15: goto          31
      18: aload_1
      19: aload_0
      20: getfield      #11                 // Field exception_index_table:[I
      23: iload_2
      24: iaload
      25: invokevirtual #14                 // Method java/io/DataOutputStream.writeShort:(I)V
      28: iinc          2, 1
      31: iload_2
      32: aload_0
      33: getfield      #10                 // Field number_of_exceptions:I
      36: if_icmplt     18
      39: return

  public final int[] getExceptionIndexTable();
    Code:
       0: aload_0
       1: getfield      #11                 // Field exception_index_table:[I
       4: areturn

  public final int getNumberOfExceptions();
    Code:
       0: aload_0
       1: getfield      #10                 // Field number_of_exceptions:I
       4: ireturn

  public final java.lang.String[] getExceptionNames();
    Code:
       0: aload_0
       1: getfield      #10                 // Field number_of_exceptions:I
       4: anewarray     #15                 // class java/lang/String
       7: astore_1
       8: iconst_0
       9: istore_2
      10: goto          41
      13: aload_1
      14: iload_2
      15: aload_0
      16: getfield      #16                 // Field org/apache/bcel/classfile/Attribute.constant_pool:Lorg/apache/bcel/classfile/ConstantPool;
      19: aload_0
      20: getfield      #11                 // Field exception_index_table:[I
      23: iload_2
      24: iaload
      25: bipush        7
      27: invokevirtual #17                 // Method org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;
      30: bipush        47
      32: bipush        46
      34: invokevirtual #18                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      37: aastore
      38: iinc          2, 1
      41: iload_2
      42: aload_0
      43: getfield      #10                 // Field number_of_exceptions:I
      46: if_icmplt     13
      49: aload_1
      50: areturn

  public final void setExceptionIndexTable(int[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field exception_index_table:[I
       5: aload_0
       6: aload_1
       7: ifnonnull     14
      10: iconst_0
      11: goto          16
      14: aload_1
      15: arraylength
      16: putfield      #10                 // Field number_of_exceptions:I
      19: return

  public final java.lang.String toString();
    Code:
       0: new           #19                 // class java/lang/StringBuffer
       3: dup
       4: ldc           #20                 // String
       6: invokespecial #21                 // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: iconst_0
      11: istore_3
      12: goto          61
      15: aload_0
      16: getfield      #16                 // Field org/apache/bcel/classfile/Attribute.constant_pool:Lorg/apache/bcel/classfile/ConstantPool;
      19: aload_0
      20: getfield      #11                 // Field exception_index_table:[I
      23: iload_3
      24: iaload
      25: bipush        7
      27: invokevirtual #17                 // Method org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;
      30: astore_2
      31: aload_1
      32: aload_2
      33: iconst_0
      34: invokestatic  #22                 // Method org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;
      37: invokevirtual #23                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      40: pop
      41: iload_3
      42: aload_0
      43: getfield      #10                 // Field number_of_exceptions:I
      46: iconst_1
      47: isub
      48: if_icmpge     58
      51: aload_1
      52: ldc           #24                 // String ,
      54: invokevirtual #23                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      57: pop
      58: iinc          3, 1
      61: iload_3
      62: aload_0
      63: getfield      #10                 // Field number_of_exceptions:I
      66: if_icmplt     15
      69: aload_1
      70: invokevirtual #25                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      73: areturn

  public org.apache.bcel.classfile.Attribute copy(org.apache.bcel.classfile.ConstantPool);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method org/apache/bcel/classfile/Attribute.clone:()Ljava/lang/Object;
       4: checkcast     #27                 // class org/apache/bcel/classfile/ExceptionTable
       7: astore_2
       8: aload_2
       9: aload_0
      10: getfield      #11                 // Field exception_index_table:[I
      13: invokevirtual #28                 // Method java/lang/Object.clone:()Ljava/lang/Object;
      16: checkcast     #8                  // class "[I"
      19: putfield      #11                 // Field exception_index_table:[I
      22: aload_2
      23: aload_1
      24: putfield      #16                 // Field org/apache/bcel/classfile/Attribute.constant_pool:Lorg/apache/bcel/classfile/ConstantPool;
      27: aload_2
      28: areturn
}
