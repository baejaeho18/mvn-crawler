Compiled from "FastStringBuffer.java"
public class org.apache.xml.utils.FastStringBuffer {
  static final int DEBUG_FORCE_INIT_BITS;

  static final boolean DEBUG_FORCE_FIXED_CHUNKSIZE;

  public static final int SUPPRESS_LEADING_WS;

  public static final int SUPPRESS_TRAILING_WS;

  public static final int SUPPRESS_BOTH;

  private static final int CARRY_WS;

  int m_chunkBits;

  int m_maxChunkBits;

  int m_rebundleBits;

  int m_chunkSize;

  int m_chunkMask;

  char[][] m_array;

  int m_lastChunk;

  int m_firstFree;

  org.apache.xml.utils.FastStringBuffer m_innerFSB;

  static final char[] SINGLE_SPACE;

  public org.apache.xml.utils.FastStringBuffer(int, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        15
       7: putfield      #2                  // Field m_chunkBits:I
      10: aload_0
      11: bipush        15
      13: putfield      #3                  // Field m_maxChunkBits:I
      16: aload_0
      17: iconst_2
      18: putfield      #4                  // Field m_rebundleBits:I
      21: aload_0
      22: iconst_0
      23: putfield      #5                  // Field m_lastChunk:I
      26: aload_0
      27: iconst_0
      28: putfield      #6                  // Field m_firstFree:I
      31: aload_0
      32: aconst_null
      33: putfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      36: iload_1
      37: istore_2
      38: aload_0
      39: bipush        16
      41: anewarray     #8                  // class "[C"
      44: putfield      #9                  // Field m_array:[[C
      47: iload_1
      48: iload_2
      49: if_icmple     54
      52: iload_2
      53: istore_1
      54: aload_0
      55: iload_1
      56: putfield      #2                  // Field m_chunkBits:I
      59: aload_0
      60: iload_2
      61: putfield      #3                  // Field m_maxChunkBits:I
      64: aload_0
      65: iload_3
      66: putfield      #4                  // Field m_rebundleBits:I
      69: aload_0
      70: iconst_1
      71: iload_1
      72: ishl
      73: putfield      #10                 // Field m_chunkSize:I
      76: aload_0
      77: aload_0
      78: getfield      #10                 // Field m_chunkSize:I
      81: iconst_1
      82: isub
      83: putfield      #11                 // Field m_chunkMask:I
      86: aload_0
      87: getfield      #9                  // Field m_array:[[C
      90: iconst_0
      91: aload_0
      92: getfield      #10                 // Field m_chunkSize:I
      95: newarray       char
      97: aastore
      98: return

  public org.apache.xml.utils.FastStringBuffer(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iconst_2
       4: invokespecial #12                 // Method "<init>":(III)V
       7: return

  public org.apache.xml.utils.FastStringBuffer(int);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        15
       4: iconst_2
       5: invokespecial #12                 // Method "<init>":(III)V
       8: return

  public org.apache.xml.utils.FastStringBuffer();
    Code:
       0: aload_0
       1: bipush        10
       3: bipush        15
       5: iconst_2
       6: invokespecial #12                 // Method "<init>":(III)V
       9: return

  public final int size();
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_lastChunk:I
       4: aload_0
       5: getfield      #2                  // Field m_chunkBits:I
       8: ishl
       9: aload_0
      10: getfield      #6                  // Field m_firstFree:I
      13: iadd
      14: ireturn

  public final int length();
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_lastChunk:I
       4: aload_0
       5: getfield      #2                  // Field m_chunkBits:I
       8: ishl
       9: aload_0
      10: getfield      #6                  // Field m_firstFree:I
      13: iadd
      14: ireturn

  public final void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #5                  // Field m_lastChunk:I
       5: aload_0
       6: iconst_0
       7: putfield      #6                  // Field m_firstFree:I
      10: aload_0
      11: astore_1
      12: aload_1
      13: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      16: ifnull        27
      19: aload_1
      20: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      23: astore_1
      24: goto          12
      27: aload_0
      28: aload_1
      29: getfield      #2                  // Field m_chunkBits:I
      32: putfield      #2                  // Field m_chunkBits:I
      35: aload_0
      36: aload_1
      37: getfield      #10                 // Field m_chunkSize:I
      40: putfield      #10                 // Field m_chunkSize:I
      43: aload_0
      44: aload_1
      45: getfield      #11                 // Field m_chunkMask:I
      48: putfield      #11                 // Field m_chunkMask:I
      51: aload_0
      52: aconst_null
      53: putfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      56: aload_0
      57: bipush        16
      59: iconst_0
      60: multianewarray #13,  2            // class "[[C"
      64: putfield      #9                  // Field m_array:[[C
      67: aload_0
      68: getfield      #9                  // Field m_array:[[C
      71: iconst_0
      72: aload_0
      73: getfield      #10                 // Field m_chunkSize:I
      76: newarray       char
      78: aastore
      79: return

  public final void setLength(int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: getfield      #2                  // Field m_chunkBits:I
       6: iushr
       7: putfield      #5                  // Field m_lastChunk:I
      10: aload_0
      11: getfield      #5                  // Field m_lastChunk:I
      14: ifne          36
      17: aload_0
      18: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      21: ifnull        36
      24: aload_0
      25: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      28: iload_1
      29: aload_0
      30: invokespecial #14                 // Method setLength:(ILorg/apache/xml/utils/FastStringBuffer;)V
      33: goto          78
      36: aload_0
      37: iload_1
      38: aload_0
      39: getfield      #11                 // Field m_chunkMask:I
      42: iand
      43: putfield      #6                  // Field m_firstFree:I
      46: aload_0
      47: getfield      #6                  // Field m_firstFree:I
      50: ifne          78
      53: aload_0
      54: getfield      #5                  // Field m_lastChunk:I
      57: ifle          78
      60: aload_0
      61: dup
      62: getfield      #5                  // Field m_lastChunk:I
      65: iconst_1
      66: isub
      67: putfield      #5                  // Field m_lastChunk:I
      70: aload_0
      71: aload_0
      72: getfield      #10                 // Field m_chunkSize:I
      75: putfield      #6                  // Field m_firstFree:I
      78: return

  private final void setLength(int, org.apache.xml.utils.FastStringBuffer);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: getfield      #2                  // Field m_chunkBits:I
       6: iushr
       7: putfield      #5                  // Field m_lastChunk:I
      10: aload_0
      11: getfield      #5                  // Field m_lastChunk:I
      14: ifne          36
      17: aload_0
      18: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      21: ifnull        36
      24: aload_0
      25: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      28: iload_1
      29: aload_2
      30: invokespecial #14                 // Method setLength:(ILorg/apache/xml/utils/FastStringBuffer;)V
      33: goto          110
      36: aload_2
      37: aload_0
      38: getfield      #2                  // Field m_chunkBits:I
      41: putfield      #2                  // Field m_chunkBits:I
      44: aload_2
      45: aload_0
      46: getfield      #3                  // Field m_maxChunkBits:I
      49: putfield      #3                  // Field m_maxChunkBits:I
      52: aload_2
      53: aload_0
      54: getfield      #4                  // Field m_rebundleBits:I
      57: putfield      #4                  // Field m_rebundleBits:I
      60: aload_2
      61: aload_0
      62: getfield      #10                 // Field m_chunkSize:I
      65: putfield      #10                 // Field m_chunkSize:I
      68: aload_2
      69: aload_0
      70: getfield      #11                 // Field m_chunkMask:I
      73: putfield      #11                 // Field m_chunkMask:I
      76: aload_2
      77: aload_0
      78: getfield      #9                  // Field m_array:[[C
      81: putfield      #9                  // Field m_array:[[C
      84: aload_2
      85: aload_0
      86: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      89: putfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      92: aload_2
      93: aload_0
      94: getfield      #5                  // Field m_lastChunk:I
      97: putfield      #5                  // Field m_lastChunk:I
     100: aload_2
     101: iload_1
     102: aload_0
     103: getfield      #11                 // Field m_chunkMask:I
     106: iand
     107: putfield      #6                  // Field m_firstFree:I
     110: return

  public final java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_lastChunk:I
       4: aload_0
       5: getfield      #2                  // Field m_chunkBits:I
       8: ishl
       9: aload_0
      10: getfield      #6                  // Field m_firstFree:I
      13: iadd
      14: istore_1
      15: aload_0
      16: new           #15                 // class java/lang/StringBuffer
      19: dup
      20: iload_1
      21: invokespecial #16                 // Method java/lang/StringBuffer."<init>":(I)V
      24: iconst_0
      25: iconst_0
      26: iload_1
      27: invokevirtual #17                 // Method getString:(Ljava/lang/StringBuffer;III)Ljava/lang/StringBuffer;
      30: invokevirtual #18                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      33: areturn

  public final void append(char);
    Code:
       0: aload_0
       1: getfield      #6                  // Field m_firstFree:I
       4: aload_0
       5: getfield      #10                 // Field m_chunkSize:I
       8: if_icmpge     24
      11: aload_0
      12: getfield      #9                  // Field m_array:[[C
      15: aload_0
      16: getfield      #5                  // Field m_lastChunk:I
      19: aaload
      20: astore_2
      21: goto          146
      24: aload_0
      25: getfield      #9                  // Field m_array:[[C
      28: arraylength
      29: istore_3
      30: aload_0
      31: getfield      #5                  // Field m_lastChunk:I
      34: iconst_1
      35: iadd
      36: iload_3
      37: if_icmpne     67
      40: iload_3
      41: bipush        16
      43: iadd
      44: anewarray     #8                  // class "[C"
      47: astore        4
      49: aload_0
      50: getfield      #9                  // Field m_array:[[C
      53: iconst_0
      54: aload         4
      56: iconst_0
      57: iload_3
      58: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      61: aload_0
      62: aload         4
      64: putfield      #9                  // Field m_array:[[C
      67: aload_0
      68: getfield      #9                  // Field m_array:[[C
      71: aload_0
      72: dup
      73: getfield      #5                  // Field m_lastChunk:I
      76: iconst_1
      77: iadd
      78: dup_x1
      79: putfield      #5                  // Field m_lastChunk:I
      82: aaload
      83: astore_2
      84: aload_2
      85: ifnonnull     141
      88: aload_0
      89: getfield      #5                  // Field m_lastChunk:I
      92: iconst_1
      93: aload_0
      94: getfield      #4                  // Field m_rebundleBits:I
      97: ishl
      98: if_icmpne     124
     101: aload_0
     102: getfield      #2                  // Field m_chunkBits:I
     105: aload_0
     106: getfield      #3                  // Field m_maxChunkBits:I
     109: if_icmpge     124
     112: aload_0
     113: new           #20                 // class org/apache/xml/utils/FastStringBuffer
     116: dup
     117: aload_0
     118: invokespecial #21                 // Method "<init>":(Lorg/apache/xml/utils/FastStringBuffer;)V
     121: putfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     124: aload_0
     125: getfield      #9                  // Field m_array:[[C
     128: aload_0
     129: getfield      #5                  // Field m_lastChunk:I
     132: aload_0
     133: getfield      #10                 // Field m_chunkSize:I
     136: newarray       char
     138: dup_x2
     139: aastore
     140: astore_2
     141: aload_0
     142: iconst_0
     143: putfield      #6                  // Field m_firstFree:I
     146: aload_2
     147: aload_0
     148: dup
     149: getfield      #6                  // Field m_firstFree:I
     152: dup_x1
     153: iconst_1
     154: iadd
     155: putfield      #6                  // Field m_firstFree:I
     158: iload_1
     159: castore
     160: return

  public final void append(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: invokevirtual #22                 // Method java/lang/String.length:()I
       9: istore_2
      10: iconst_0
      11: iload_2
      12: if_icmpne     16
      15: return
      16: iconst_0
      17: istore_3
      18: aload_0
      19: getfield      #9                  // Field m_array:[[C
      22: aload_0
      23: getfield      #5                  // Field m_lastChunk:I
      26: aaload
      27: astore        4
      29: aload_0
      30: getfield      #10                 // Field m_chunkSize:I
      33: aload_0
      34: getfield      #6                  // Field m_firstFree:I
      37: isub
      38: istore        5
      40: iload_2
      41: ifle          227
      44: iload         5
      46: iload_2
      47: if_icmple     53
      50: iload_2
      51: istore        5
      53: aload_1
      54: iload_3
      55: iload_3
      56: iload         5
      58: iadd
      59: aload_0
      60: getfield      #9                  // Field m_array:[[C
      63: aload_0
      64: getfield      #5                  // Field m_lastChunk:I
      67: aaload
      68: aload_0
      69: getfield      #6                  // Field m_firstFree:I
      72: invokevirtual #23                 // Method java/lang/String.getChars:(II[CI)V
      75: iload_2
      76: iload         5
      78: isub
      79: istore_2
      80: iload_3
      81: iload         5
      83: iadd
      84: istore_3
      85: iload_2
      86: ifle          40
      89: aload_0
      90: getfield      #9                  // Field m_array:[[C
      93: arraylength
      94: istore        6
      96: aload_0
      97: getfield      #5                  // Field m_lastChunk:I
     100: iconst_1
     101: iadd
     102: iload         6
     104: if_icmpne     136
     107: iload         6
     109: bipush        16
     111: iadd
     112: anewarray     #8                  // class "[C"
     115: astore        7
     117: aload_0
     118: getfield      #9                  // Field m_array:[[C
     121: iconst_0
     122: aload         7
     124: iconst_0
     125: iload         6
     127: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     130: aload_0
     131: aload         7
     133: putfield      #9                  // Field m_array:[[C
     136: aload_0
     137: getfield      #9                  // Field m_array:[[C
     140: aload_0
     141: dup
     142: getfield      #5                  // Field m_lastChunk:I
     145: iconst_1
     146: iadd
     147: dup_x1
     148: putfield      #5                  // Field m_lastChunk:I
     151: aaload
     152: astore        4
     154: aload         4
     156: ifnonnull     213
     159: aload_0
     160: getfield      #5                  // Field m_lastChunk:I
     163: iconst_1
     164: aload_0
     165: getfield      #4                  // Field m_rebundleBits:I
     168: ishl
     169: if_icmpne     195
     172: aload_0
     173: getfield      #2                  // Field m_chunkBits:I
     176: aload_0
     177: getfield      #3                  // Field m_maxChunkBits:I
     180: if_icmpge     195
     183: aload_0
     184: new           #20                 // class org/apache/xml/utils/FastStringBuffer
     187: dup
     188: aload_0
     189: invokespecial #21                 // Method "<init>":(Lorg/apache/xml/utils/FastStringBuffer;)V
     192: putfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     195: aload_0
     196: getfield      #9                  // Field m_array:[[C
     199: aload_0
     200: getfield      #5                  // Field m_lastChunk:I
     203: aload_0
     204: getfield      #10                 // Field m_chunkSize:I
     207: newarray       char
     209: dup_x2
     210: aastore
     211: astore        4
     213: aload_0
     214: getfield      #10                 // Field m_chunkSize:I
     217: istore        5
     219: aload_0
     220: iconst_0
     221: putfield      #6                  // Field m_firstFree:I
     224: goto          40
     227: aload_0
     228: dup
     229: getfield      #6                  // Field m_firstFree:I
     232: iload         5
     234: iadd
     235: putfield      #6                  // Field m_firstFree:I
     238: return

  public final void append(java.lang.StringBuffer);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: invokevirtual #24                 // Method java/lang/StringBuffer.length:()I
       9: istore_2
      10: iconst_0
      11: iload_2
      12: if_icmpne     16
      15: return
      16: iconst_0
      17: istore_3
      18: aload_0
      19: getfield      #9                  // Field m_array:[[C
      22: aload_0
      23: getfield      #5                  // Field m_lastChunk:I
      26: aaload
      27: astore        4
      29: aload_0
      30: getfield      #10                 // Field m_chunkSize:I
      33: aload_0
      34: getfield      #6                  // Field m_firstFree:I
      37: isub
      38: istore        5
      40: iload_2
      41: ifle          227
      44: iload         5
      46: iload_2
      47: if_icmple     53
      50: iload_2
      51: istore        5
      53: aload_1
      54: iload_3
      55: iload_3
      56: iload         5
      58: iadd
      59: aload_0
      60: getfield      #9                  // Field m_array:[[C
      63: aload_0
      64: getfield      #5                  // Field m_lastChunk:I
      67: aaload
      68: aload_0
      69: getfield      #6                  // Field m_firstFree:I
      72: invokevirtual #25                 // Method java/lang/StringBuffer.getChars:(II[CI)V
      75: iload_2
      76: iload         5
      78: isub
      79: istore_2
      80: iload_3
      81: iload         5
      83: iadd
      84: istore_3
      85: iload_2
      86: ifle          40
      89: aload_0
      90: getfield      #9                  // Field m_array:[[C
      93: arraylength
      94: istore        6
      96: aload_0
      97: getfield      #5                  // Field m_lastChunk:I
     100: iconst_1
     101: iadd
     102: iload         6
     104: if_icmpne     136
     107: iload         6
     109: bipush        16
     111: iadd
     112: anewarray     #8                  // class "[C"
     115: astore        7
     117: aload_0
     118: getfield      #9                  // Field m_array:[[C
     121: iconst_0
     122: aload         7
     124: iconst_0
     125: iload         6
     127: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     130: aload_0
     131: aload         7
     133: putfield      #9                  // Field m_array:[[C
     136: aload_0
     137: getfield      #9                  // Field m_array:[[C
     140: aload_0
     141: dup
     142: getfield      #5                  // Field m_lastChunk:I
     145: iconst_1
     146: iadd
     147: dup_x1
     148: putfield      #5                  // Field m_lastChunk:I
     151: aaload
     152: astore        4
     154: aload         4
     156: ifnonnull     213
     159: aload_0
     160: getfield      #5                  // Field m_lastChunk:I
     163: iconst_1
     164: aload_0
     165: getfield      #4                  // Field m_rebundleBits:I
     168: ishl
     169: if_icmpne     195
     172: aload_0
     173: getfield      #2                  // Field m_chunkBits:I
     176: aload_0
     177: getfield      #3                  // Field m_maxChunkBits:I
     180: if_icmpge     195
     183: aload_0
     184: new           #20                 // class org/apache/xml/utils/FastStringBuffer
     187: dup
     188: aload_0
     189: invokespecial #21                 // Method "<init>":(Lorg/apache/xml/utils/FastStringBuffer;)V
     192: putfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     195: aload_0
     196: getfield      #9                  // Field m_array:[[C
     199: aload_0
     200: getfield      #5                  // Field m_lastChunk:I
     203: aload_0
     204: getfield      #10                 // Field m_chunkSize:I
     207: newarray       char
     209: dup_x2
     210: aastore
     211: astore        4
     213: aload_0
     214: getfield      #10                 // Field m_chunkSize:I
     217: istore        5
     219: aload_0
     220: iconst_0
     221: putfield      #6                  // Field m_firstFree:I
     224: goto          40
     227: aload_0
     228: dup
     229: getfield      #6                  // Field m_firstFree:I
     232: iload         5
     234: iadd
     235: putfield      #6                  // Field m_firstFree:I
     238: return

  public final void append(char[], int, int);
    Code:
       0: iload_3
       1: istore        4
       3: iconst_0
       4: iload         4
       6: if_icmpne     10
       9: return
      10: iload_2
      11: istore        5
      13: aload_0
      14: getfield      #9                  // Field m_array:[[C
      17: aload_0
      18: getfield      #5                  // Field m_lastChunk:I
      21: aaload
      22: astore        6
      24: aload_0
      25: getfield      #10                 // Field m_chunkSize:I
      28: aload_0
      29: getfield      #6                  // Field m_firstFree:I
      32: isub
      33: istore        7
      35: iload         4
      37: ifle          229
      40: iload         7
      42: iload         4
      44: if_icmple     51
      47: iload         4
      49: istore        7
      51: aload_1
      52: iload         5
      54: aload_0
      55: getfield      #9                  // Field m_array:[[C
      58: aload_0
      59: getfield      #5                  // Field m_lastChunk:I
      62: aaload
      63: aload_0
      64: getfield      #6                  // Field m_firstFree:I
      67: iload         7
      69: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      72: iload         4
      74: iload         7
      76: isub
      77: istore        4
      79: iload         5
      81: iload         7
      83: iadd
      84: istore        5
      86: iload         4
      88: ifle          35
      91: aload_0
      92: getfield      #9                  // Field m_array:[[C
      95: arraylength
      96: istore        8
      98: aload_0
      99: getfield      #5                  // Field m_lastChunk:I
     102: iconst_1
     103: iadd
     104: iload         8
     106: if_icmpne     138
     109: iload         8
     111: bipush        16
     113: iadd
     114: anewarray     #8                  // class "[C"
     117: astore        9
     119: aload_0
     120: getfield      #9                  // Field m_array:[[C
     123: iconst_0
     124: aload         9
     126: iconst_0
     127: iload         8
     129: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     132: aload_0
     133: aload         9
     135: putfield      #9                  // Field m_array:[[C
     138: aload_0
     139: getfield      #9                  // Field m_array:[[C
     142: aload_0
     143: dup
     144: getfield      #5                  // Field m_lastChunk:I
     147: iconst_1
     148: iadd
     149: dup_x1
     150: putfield      #5                  // Field m_lastChunk:I
     153: aaload
     154: astore        6
     156: aload         6
     158: ifnonnull     215
     161: aload_0
     162: getfield      #5                  // Field m_lastChunk:I
     165: iconst_1
     166: aload_0
     167: getfield      #4                  // Field m_rebundleBits:I
     170: ishl
     171: if_icmpne     197
     174: aload_0
     175: getfield      #2                  // Field m_chunkBits:I
     178: aload_0
     179: getfield      #3                  // Field m_maxChunkBits:I
     182: if_icmpge     197
     185: aload_0
     186: new           #20                 // class org/apache/xml/utils/FastStringBuffer
     189: dup
     190: aload_0
     191: invokespecial #21                 // Method "<init>":(Lorg/apache/xml/utils/FastStringBuffer;)V
     194: putfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     197: aload_0
     198: getfield      #9                  // Field m_array:[[C
     201: aload_0
     202: getfield      #5                  // Field m_lastChunk:I
     205: aload_0
     206: getfield      #10                 // Field m_chunkSize:I
     209: newarray       char
     211: dup_x2
     212: aastore
     213: astore        6
     215: aload_0
     216: getfield      #10                 // Field m_chunkSize:I
     219: istore        7
     221: aload_0
     222: iconst_0
     223: putfield      #6                  // Field m_firstFree:I
     226: goto          35
     229: aload_0
     230: dup
     231: getfield      #6                  // Field m_firstFree:I
     234: iload         7
     236: iadd
     237: putfield      #6                  // Field m_firstFree:I
     240: return

  public final void append(org.apache.xml.utils.FastStringBuffer);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: invokevirtual #26                 // Method length:()I
       9: istore_2
      10: iconst_0
      11: iload_2
      12: if_icmpne     16
      15: return
      16: iconst_0
      17: istore_3
      18: aload_0
      19: getfield      #9                  // Field m_array:[[C
      22: aload_0
      23: getfield      #5                  // Field m_lastChunk:I
      26: aaload
      27: astore        4
      29: aload_0
      30: getfield      #10                 // Field m_chunkSize:I
      33: aload_0
      34: getfield      #6                  // Field m_firstFree:I
      37: isub
      38: istore        5
      40: iload_2
      41: ifle          316
      44: iload         5
      46: iload_2
      47: if_icmple     53
      50: iload_2
      51: istore        5
      53: iload_3
      54: aload_1
      55: getfield      #10                 // Field m_chunkSize:I
      58: iadd
      59: iconst_1
      60: isub
      61: aload_1
      62: getfield      #2                  // Field m_chunkBits:I
      65: iushr
      66: istore        6
      68: iload_3
      69: aload_1
      70: getfield      #11                 // Field m_chunkMask:I
      73: iand
      74: istore        7
      76: aload_1
      77: getfield      #10                 // Field m_chunkSize:I
      80: iload         7
      82: isub
      83: istore        8
      85: iload         8
      87: iload         5
      89: if_icmple     96
      92: iload         5
      94: istore        8
      96: aload_1
      97: getfield      #9                  // Field m_array:[[C
     100: iload         6
     102: aaload
     103: iload         7
     105: aload_0
     106: getfield      #9                  // Field m_array:[[C
     109: aload_0
     110: getfield      #5                  // Field m_lastChunk:I
     113: aaload
     114: aload_0
     115: getfield      #6                  // Field m_firstFree:I
     118: iload         8
     120: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     123: iload         8
     125: iload         5
     127: if_icmpeq     164
     130: aload_1
     131: getfield      #9                  // Field m_array:[[C
     134: iload         6
     136: iconst_1
     137: iadd
     138: aaload
     139: iconst_0
     140: aload_0
     141: getfield      #9                  // Field m_array:[[C
     144: aload_0
     145: getfield      #5                  // Field m_lastChunk:I
     148: aaload
     149: aload_0
     150: getfield      #6                  // Field m_firstFree:I
     153: iload         8
     155: iadd
     156: iload         5
     158: iload         8
     160: isub
     161: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     164: iload_2
     165: iload         5
     167: isub
     168: istore_2
     169: iload_3
     170: iload         5
     172: iadd
     173: istore_3
     174: iload_2
     175: ifle          313
     178: aload_0
     179: getfield      #9                  // Field m_array:[[C
     182: arraylength
     183: istore        9
     185: aload_0
     186: getfield      #5                  // Field m_lastChunk:I
     189: iconst_1
     190: iadd
     191: iload         9
     193: if_icmpne     225
     196: iload         9
     198: bipush        16
     200: iadd
     201: anewarray     #8                  // class "[C"
     204: astore        10
     206: aload_0
     207: getfield      #9                  // Field m_array:[[C
     210: iconst_0
     211: aload         10
     213: iconst_0
     214: iload         9
     216: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     219: aload_0
     220: aload         10
     222: putfield      #9                  // Field m_array:[[C
     225: aload_0
     226: getfield      #9                  // Field m_array:[[C
     229: aload_0
     230: dup
     231: getfield      #5                  // Field m_lastChunk:I
     234: iconst_1
     235: iadd
     236: dup_x1
     237: putfield      #5                  // Field m_lastChunk:I
     240: aaload
     241: astore        4
     243: aload         4
     245: ifnonnull     302
     248: aload_0
     249: getfield      #5                  // Field m_lastChunk:I
     252: iconst_1
     253: aload_0
     254: getfield      #4                  // Field m_rebundleBits:I
     257: ishl
     258: if_icmpne     284
     261: aload_0
     262: getfield      #2                  // Field m_chunkBits:I
     265: aload_0
     266: getfield      #3                  // Field m_maxChunkBits:I
     269: if_icmpge     284
     272: aload_0
     273: new           #20                 // class org/apache/xml/utils/FastStringBuffer
     276: dup
     277: aload_0
     278: invokespecial #21                 // Method "<init>":(Lorg/apache/xml/utils/FastStringBuffer;)V
     281: putfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     284: aload_0
     285: getfield      #9                  // Field m_array:[[C
     288: aload_0
     289: getfield      #5                  // Field m_lastChunk:I
     292: aload_0
     293: getfield      #10                 // Field m_chunkSize:I
     296: newarray       char
     298: dup_x2
     299: aastore
     300: astore        4
     302: aload_0
     303: getfield      #10                 // Field m_chunkSize:I
     306: istore        5
     308: aload_0
     309: iconst_0
     310: putfield      #6                  // Field m_firstFree:I
     313: goto          40
     316: aload_0
     317: dup
     318: getfield      #6                  // Field m_firstFree:I
     321: iload         5
     323: iadd
     324: putfield      #6                  // Field m_firstFree:I
     327: return

  public boolean isWhitespace(int, int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #2                  // Field m_chunkBits:I
       5: iushr
       6: istore_3
       7: iload_1
       8: aload_0
       9: getfield      #11                 // Field m_chunkMask:I
      12: iand
      13: istore        4
      15: aload_0
      16: getfield      #10                 // Field m_chunkSize:I
      19: iload         4
      21: isub
      22: istore        5
      24: iload_2
      25: ifle          111
      28: iload_2
      29: iload         5
      31: if_icmpgt     38
      34: iload_2
      35: goto          40
      38: iload         5
      40: istore        7
      42: iload_3
      43: ifne          69
      46: aload_0
      47: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      50: ifnull        69
      53: aload_0
      54: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      57: iload         4
      59: iload         7
      61: invokevirtual #27                 // Method isWhitespace:(II)Z
      64: istore        6
      66: goto          84
      69: aload_0
      70: getfield      #9                  // Field m_array:[[C
      73: iload_3
      74: aaload
      75: iload         4
      77: iload         7
      79: invokestatic  #28                 // Method org/apache/xml/utils/XMLCharacterRecognizer.isWhiteSpace:([CII)Z
      82: istore        6
      84: iload         6
      86: ifne          91
      89: iconst_0
      90: ireturn
      91: iload_2
      92: iload         7
      94: isub
      95: istore_2
      96: iinc          3, 1
      99: iconst_0
     100: istore        4
     102: aload_0
     103: getfield      #10                 // Field m_chunkSize:I
     106: istore        5
     108: goto          24
     111: iconst_1
     112: ireturn

  public java.lang.String getString(int, int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #11                 // Field m_chunkMask:I
       5: iand
       6: istore_3
       7: iload_1
       8: aload_0
       9: getfield      #2                  // Field m_chunkBits:I
      12: iushr
      13: istore        4
      15: iload_3
      16: iload_2
      17: iadd
      18: aload_0
      19: getfield      #11                 // Field m_chunkMask:I
      22: if_icmpge     41
      25: aload_0
      26: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      29: ifnonnull     41
      32: aload_0
      33: iload         4
      35: iload_3
      36: iload_2
      37: invokevirtual #29                 // Method getOneChunkString:(III)Ljava/lang/String;
      40: areturn
      41: aload_0
      42: new           #15                 // class java/lang/StringBuffer
      45: dup
      46: iload_2
      47: invokespecial #16                 // Method java/lang/StringBuffer."<init>":(I)V
      50: iload         4
      52: iload_3
      53: iload_2
      54: invokevirtual #17                 // Method getString:(Ljava/lang/StringBuffer;III)Ljava/lang/StringBuffer;
      57: invokevirtual #18                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      60: areturn

  protected java.lang.String getOneChunkString(int, int, int);
    Code:
       0: new           #30                 // class java/lang/String
       3: dup
       4: aload_0
       5: getfield      #9                  // Field m_array:[[C
       8: iload_1
       9: aaload
      10: iload_2
      11: iload_3
      12: invokespecial #31                 // Method java/lang/String."<init>":([CII)V
      15: areturn

  java.lang.StringBuffer getString(java.lang.StringBuffer, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_0
       4: getfield      #2                  // Field m_chunkBits:I
       7: iushr
       8: iload_2
       9: aload_0
      10: getfield      #11                 // Field m_chunkMask:I
      13: iand
      14: iload_3
      15: invokevirtual #17                 // Method getString:(Ljava/lang/StringBuffer;III)Ljava/lang/StringBuffer;
      18: areturn

  java.lang.StringBuffer getString(java.lang.StringBuffer, int, int, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #2                  // Field m_chunkBits:I
       5: ishl
       6: iload_3
       7: iadd
       8: iload         4
      10: iadd
      11: istore        5
      13: iload         5
      15: aload_0
      16: getfield      #2                  // Field m_chunkBits:I
      19: iushr
      20: istore        6
      22: iload         5
      24: aload_0
      25: getfield      #11                 // Field m_chunkMask:I
      28: iand
      29: istore        7
      31: iload_2
      32: istore        8
      34: iload         8
      36: iload         6
      38: if_icmpge     99
      41: iload         8
      43: ifne          72
      46: aload_0
      47: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      50: ifnull        72
      53: aload_0
      54: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      57: aload_1
      58: iload_3
      59: aload_0
      60: getfield      #10                 // Field m_chunkSize:I
      63: iload_3
      64: isub
      65: invokevirtual #32                 // Method getString:(Ljava/lang/StringBuffer;II)Ljava/lang/StringBuffer;
      68: pop
      69: goto          91
      72: aload_1
      73: aload_0
      74: getfield      #9                  // Field m_array:[[C
      77: iload         8
      79: aaload
      80: iload_3
      81: aload_0
      82: getfield      #10                 // Field m_chunkSize:I
      85: iload_3
      86: isub
      87: invokevirtual #33                 // Method java/lang/StringBuffer.append:([CII)Ljava/lang/StringBuffer;
      90: pop
      91: iconst_0
      92: istore_3
      93: iinc          8, 1
      96: goto          34
      99: iload         6
     101: ifne          128
     104: aload_0
     105: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     108: ifnull        128
     111: aload_0
     112: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     115: aload_1
     116: iload_3
     117: iload         7
     119: iload_3
     120: isub
     121: invokevirtual #32                 // Method getString:(Ljava/lang/StringBuffer;II)Ljava/lang/StringBuffer;
     124: pop
     125: goto          151
     128: iload         7
     130: iload_3
     131: if_icmple     151
     134: aload_1
     135: aload_0
     136: getfield      #9                  // Field m_array:[[C
     139: iload         6
     141: aaload
     142: iload_3
     143: iload         7
     145: iload_3
     146: isub
     147: invokevirtual #33                 // Method java/lang/StringBuffer.append:([CII)Ljava/lang/StringBuffer;
     150: pop
     151: aload_1
     152: areturn

  public char charAt(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #2                  // Field m_chunkBits:I
       5: iushr
       6: istore_2
       7: iload_2
       8: ifne          32
      11: aload_0
      12: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      15: ifnull        32
      18: aload_0
      19: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      22: iload_1
      23: aload_0
      24: getfield      #11                 // Field m_chunkMask:I
      27: iand
      28: invokevirtual #34                 // Method charAt:(I)C
      31: ireturn
      32: aload_0
      33: getfield      #9                  // Field m_array:[[C
      36: iload_2
      37: aaload
      38: iload_1
      39: aload_0
      40: getfield      #11                 // Field m_chunkMask:I
      43: iand
      44: caload
      45: ireturn

  public void sendSAXcharacters(org.xml.sax.ContentHandler, int, int) throws org.xml.sax.SAXException;
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #2                  // Field m_chunkBits:I
       5: iushr
       6: istore        4
       8: iload_2
       9: aload_0
      10: getfield      #11                 // Field m_chunkMask:I
      13: iand
      14: istore        5
      16: iload         5
      18: iload_3
      19: iadd
      20: aload_0
      21: getfield      #11                 // Field m_chunkMask:I
      24: if_icmpge     51
      27: aload_0
      28: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      31: ifnonnull     51
      34: aload_1
      35: aload_0
      36: getfield      #9                  // Field m_array:[[C
      39: iload         4
      41: aaload
      42: iload         5
      44: iload_3
      45: invokeinterface #35,  4           // InterfaceMethod org/xml/sax/ContentHandler.characters:([CII)V
      50: return
      51: iload_2
      52: iload_3
      53: iadd
      54: istore        6
      56: iload         6
      58: aload_0
      59: getfield      #2                  // Field m_chunkBits:I
      62: iushr
      63: istore        7
      65: iload         6
      67: aload_0
      68: getfield      #11                 // Field m_chunkMask:I
      71: iand
      72: istore        8
      74: iload         4
      76: istore        9
      78: iload         9
      80: iload         7
      82: if_icmpge     148
      85: iload         9
      87: ifne          117
      90: aload_0
      91: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      94: ifnull        117
      97: aload_0
      98: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     101: aload_1
     102: iload         5
     104: aload_0
     105: getfield      #10                 // Field m_chunkSize:I
     108: iload         5
     110: isub
     111: invokevirtual #36                 // Method sendSAXcharacters:(Lorg/xml/sax/ContentHandler;II)V
     114: goto          139
     117: aload_1
     118: aload_0
     119: getfield      #9                  // Field m_array:[[C
     122: iload         9
     124: aaload
     125: iload         5
     127: aload_0
     128: getfield      #10                 // Field m_chunkSize:I
     131: iload         5
     133: isub
     134: invokeinterface #35,  4           // InterfaceMethod org/xml/sax/ContentHandler.characters:([CII)V
     139: iconst_0
     140: istore        5
     142: iinc          9, 1
     145: goto          78
     148: iload         7
     150: ifne          178
     153: aload_0
     154: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     157: ifnull        178
     160: aload_0
     161: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     164: aload_1
     165: iload         5
     167: iload         8
     169: iload         5
     171: isub
     172: invokevirtual #36                 // Method sendSAXcharacters:(Lorg/xml/sax/ContentHandler;II)V
     175: goto          205
     178: iload         8
     180: iload         5
     182: if_icmple     205
     185: aload_1
     186: aload_0
     187: getfield      #9                  // Field m_array:[[C
     190: iload         7
     192: aaload
     193: iload         5
     195: iload         8
     197: iload         5
     199: isub
     200: invokeinterface #35,  4           // InterfaceMethod org/xml/sax/ContentHandler.characters:([CII)V
     205: return

  public int sendNormalizedSAXcharacters(org.xml.sax.ContentHandler, int, int) throws org.xml.sax.SAXException;
    Code:
       0: iconst_1
       1: istore        4
       3: iload_2
       4: iload_3
       5: iadd
       6: istore        5
       8: iload_2
       9: aload_0
      10: getfield      #2                  // Field m_chunkBits:I
      13: iushr
      14: istore        6
      16: iload_2
      17: aload_0
      18: getfield      #11                 // Field m_chunkMask:I
      21: iand
      22: istore        7
      24: iload         5
      26: aload_0
      27: getfield      #2                  // Field m_chunkBits:I
      30: iushr
      31: istore        8
      33: iload         5
      35: aload_0
      36: getfield      #11                 // Field m_chunkMask:I
      39: iand
      40: istore        9
      42: iload         6
      44: istore        10
      46: iload         10
      48: iload         8
      50: if_icmpge     120
      53: iload         10
      55: ifne          87
      58: aload_0
      59: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      62: ifnull        87
      65: aload_0
      66: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      69: aload_1
      70: iload         7
      72: aload_0
      73: getfield      #10                 // Field m_chunkSize:I
      76: iload         7
      78: isub
      79: invokevirtual #37                 // Method sendNormalizedSAXcharacters:(Lorg/xml/sax/ContentHandler;II)I
      82: istore        4
      84: goto          111
      87: aload_0
      88: getfield      #9                  // Field m_array:[[C
      91: iload         10
      93: aaload
      94: iload         7
      96: aload_0
      97: getfield      #10                 // Field m_chunkSize:I
     100: iload         7
     102: isub
     103: aload_1
     104: iload         4
     106: invokestatic  #38                 // Method sendNormalizedSAXcharacters:([CIILorg/xml/sax/ContentHandler;I)I
     109: istore        4
     111: iconst_0
     112: istore        7
     114: iinc          10, 1
     117: goto          46
     120: iload         8
     122: ifne          152
     125: aload_0
     126: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     129: ifnull        152
     132: aload_0
     133: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     136: aload_1
     137: iload         7
     139: iload         9
     141: iload         7
     143: isub
     144: invokevirtual #37                 // Method sendNormalizedSAXcharacters:(Lorg/xml/sax/ContentHandler;II)I
     147: istore        4
     149: goto          183
     152: iload         9
     154: iload         7
     156: if_icmple     183
     159: aload_0
     160: getfield      #9                  // Field m_array:[[C
     163: iload         8
     165: aaload
     166: iload         7
     168: iload         9
     170: iload         7
     172: isub
     173: aload_1
     174: iload         4
     176: iconst_2
     177: ior
     178: invokestatic  #38                 // Method sendNormalizedSAXcharacters:([CIILorg/xml/sax/ContentHandler;I)I
     181: istore        4
     183: iload         4
     185: ireturn

  static int sendNormalizedSAXcharacters(char[], int, int, org.xml.sax.ContentHandler, int) throws org.xml.sax.SAXException;
    Code:
       0: iload         4
       2: iconst_1
       3: iand
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: istore        5
      14: iload         4
      16: iconst_4
      17: iand
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: istore        6
      28: iload_1
      29: istore        7
      31: iload_1
      32: iload_2
      33: iadd
      34: istore        8
      36: iload         5
      38: ifeq          74
      41: iload         7
      43: iload         8
      45: if_icmpge     64
      48: aload_0
      49: iload         7
      51: caload
      52: invokestatic  #39                 // Method org/apache/xml/utils/XMLCharacterRecognizer.isWhiteSpace:(C)Z
      55: ifeq          64
      58: iinc          7, 1
      61: goto          41
      64: iload         7
      66: iload         8
      68: if_icmpne     74
      71: iload         4
      73: ireturn
      74: iload         7
      76: iload         8
      78: if_icmpge     188
      81: iload         7
      83: istore        9
      85: iload         7
      87: iload         8
      89: if_icmpge     108
      92: aload_0
      93: iload         7
      95: caload
      96: invokestatic  #39                 // Method org/apache/xml/utils/XMLCharacterRecognizer.isWhiteSpace:(C)Z
      99: ifne          108
     102: iinc          7, 1
     105: goto          85
     108: iload         9
     110: iload         7
     112: if_icmpeq     148
     115: iload         6
     117: ifeq          134
     120: aload_3
     121: getstatic     #40                 // Field SINGLE_SPACE:[C
     124: iconst_0
     125: iconst_1
     126: invokeinterface #35,  4           // InterfaceMethod org/xml/sax/ContentHandler.characters:([CII)V
     131: iconst_0
     132: istore        6
     134: aload_3
     135: aload_0
     136: iload         9
     138: iload         7
     140: iload         9
     142: isub
     143: invokeinterface #35,  4           // InterfaceMethod org/xml/sax/ContentHandler.characters:([CII)V
     148: iload         7
     150: istore        10
     152: iload         7
     154: iload         8
     156: if_icmpge     175
     159: aload_0
     160: iload         7
     162: caload
     163: invokestatic  #39                 // Method org/apache/xml/utils/XMLCharacterRecognizer.isWhiteSpace:(C)Z
     166: ifeq          175
     169: iinc          7, 1
     172: goto          152
     175: iload         10
     177: iload         7
     179: if_icmpeq     185
     182: iconst_1
     183: istore        6
     185: goto          74
     188: iload         6
     190: ifeq          197
     193: iconst_4
     194: goto          198
     197: iconst_0
     198: iload         4
     200: iconst_2
     201: iand
     202: ior
     203: ireturn

  public static void sendNormalizedSAXcharacters(char[], int, int, org.xml.sax.ContentHandler) throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: iconst_3
       5: invokestatic  #38                 // Method sendNormalizedSAXcharacters:([CIILorg/xml/sax/ContentHandler;I)I
       8: pop
       9: return

  public void sendSAXComment(org.xml.sax.ext.LexicalHandler, int, int) throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: invokevirtual #41                 // Method getString:(II)Ljava/lang/String;
       6: astore        4
       8: aload_1
       9: aload         4
      11: invokevirtual #42                 // Method java/lang/String.toCharArray:()[C
      14: iconst_0
      15: iload_3
      16: invokeinterface #43,  4           // InterfaceMethod org/xml/sax/ext/LexicalHandler.comment:([CII)V
      21: return

  private void getChars(int, int, char[], int);
    Code:
       0: return

  private org.apache.xml.utils.FastStringBuffer(org.apache.xml.utils.FastStringBuffer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        15
       7: putfield      #2                  // Field m_chunkBits:I
      10: aload_0
      11: bipush        15
      13: putfield      #3                  // Field m_maxChunkBits:I
      16: aload_0
      17: iconst_2
      18: putfield      #4                  // Field m_rebundleBits:I
      21: aload_0
      22: iconst_0
      23: putfield      #5                  // Field m_lastChunk:I
      26: aload_0
      27: iconst_0
      28: putfield      #6                  // Field m_firstFree:I
      31: aload_0
      32: aconst_null
      33: putfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      36: aload_0
      37: aload_1
      38: getfield      #2                  // Field m_chunkBits:I
      41: putfield      #2                  // Field m_chunkBits:I
      44: aload_0
      45: aload_1
      46: getfield      #3                  // Field m_maxChunkBits:I
      49: putfield      #3                  // Field m_maxChunkBits:I
      52: aload_0
      53: aload_1
      54: getfield      #4                  // Field m_rebundleBits:I
      57: putfield      #4                  // Field m_rebundleBits:I
      60: aload_0
      61: aload_1
      62: getfield      #10                 // Field m_chunkSize:I
      65: putfield      #10                 // Field m_chunkSize:I
      68: aload_0
      69: aload_1
      70: getfield      #11                 // Field m_chunkMask:I
      73: putfield      #11                 // Field m_chunkMask:I
      76: aload_0
      77: aload_1
      78: getfield      #9                  // Field m_array:[[C
      81: putfield      #9                  // Field m_array:[[C
      84: aload_0
      85: aload_1
      86: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      89: putfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      92: aload_0
      93: aload_1
      94: getfield      #5                  // Field m_lastChunk:I
      97: iconst_1
      98: isub
      99: putfield      #5                  // Field m_lastChunk:I
     102: aload_0
     103: aload_1
     104: getfield      #10                 // Field m_chunkSize:I
     107: putfield      #6                  // Field m_firstFree:I
     110: aload_1
     111: bipush        16
     113: anewarray     #8                  // class "[C"
     116: putfield      #9                  // Field m_array:[[C
     119: aload_1
     120: aload_0
     121: putfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     124: aload_1
     125: iconst_1
     126: putfield      #5                  // Field m_lastChunk:I
     129: aload_1
     130: iconst_0
     131: putfield      #6                  // Field m_firstFree:I
     134: aload_1
     135: dup
     136: getfield      #2                  // Field m_chunkBits:I
     139: aload_0
     140: getfield      #4                  // Field m_rebundleBits:I
     143: iadd
     144: putfield      #2                  // Field m_chunkBits:I
     147: aload_1
     148: iconst_1
     149: aload_1
     150: getfield      #2                  // Field m_chunkBits:I
     153: ishl
     154: putfield      #10                 // Field m_chunkSize:I
     157: aload_1
     158: aload_1
     159: getfield      #10                 // Field m_chunkSize:I
     162: iconst_1
     163: isub
     164: putfield      #11                 // Field m_chunkMask:I
     167: return

  static {};
    Code:
       0: iconst_1
       1: newarray       char
       3: dup
       4: iconst_0
       5: bipush        32
       7: castore
       8: putstatic     #40                 // Field SINGLE_SPACE:[C
      11: return
}
