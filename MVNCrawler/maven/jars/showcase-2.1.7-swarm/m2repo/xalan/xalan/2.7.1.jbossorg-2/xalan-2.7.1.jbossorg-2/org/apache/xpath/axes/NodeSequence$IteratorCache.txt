Compiled from "NodeSequence.java"
final class org.apache.xpath.axes.NodeSequence$IteratorCache {
  private org.apache.xml.utils.NodeVector m_vec2;

  private boolean m_isComplete2;

  private int m_useCount2;

  org.apache.xpath.axes.NodeSequence$IteratorCache();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #8                  // Field m_vec2:Lorg/apache/xml/utils/NodeVector;
       9: aload_0
      10: iconst_0
      11: putfield      #9                  // Field m_isComplete2:Z
      14: aload_0
      15: iconst_1
      16: putfield      #10                 // Field m_useCount2:I
      19: return

  private int useCount();
    Code:
       0: aload_0
       1: getfield      #10                 // Field m_useCount2:I
       4: ireturn

  private void increaseUseCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field m_vec2:Lorg/apache/xml/utils/NodeVector;
       4: ifnull        17
       7: aload_0
       8: dup
       9: getfield      #10                 // Field m_useCount2:I
      12: iconst_1
      13: iadd
      14: putfield      #10                 // Field m_useCount2:I
      17: return

  private void setVector(org.apache.xml.utils.NodeVector);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field m_vec2:Lorg/apache/xml/utils/NodeVector;
       5: aload_0
       6: iconst_1
       7: putfield      #10                 // Field m_useCount2:I
      10: return

  private org.apache.xml.utils.NodeVector getVector();
    Code:
       0: aload_0
       1: getfield      #8                  // Field m_vec2:Lorg/apache/xml/utils/NodeVector;
       4: areturn

  private void setCacheComplete(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field m_isComplete2:Z
       5: return

  private boolean isComplete();
    Code:
       0: aload_0
       1: getfield      #9                  // Field m_isComplete2:Z
       4: ireturn

  static org.apache.xml.utils.NodeVector access$000(org.apache.xpath.axes.NodeSequence$IteratorCache);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method getVector:()Lorg/apache/xml/utils/NodeVector;
       4: areturn

  static boolean access$100(org.apache.xpath.axes.NodeSequence$IteratorCache);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method isComplete:()Z
       4: ireturn

  static void access$200(org.apache.xpath.axes.NodeSequence$IteratorCache, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #4                  // Method setCacheComplete:(Z)V
       5: return

  static int access$300(org.apache.xpath.axes.NodeSequence$IteratorCache);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method useCount:()I
       4: ireturn

  static void access$400(org.apache.xpath.axes.NodeSequence$IteratorCache, org.apache.xml.utils.NodeVector);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method setVector:(Lorg/apache/xml/utils/NodeVector;)V
       5: return

  static void access$500(org.apache.xpath.axes.NodeSequence$IteratorCache);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method increaseUseCount:()V
       4: return
}
