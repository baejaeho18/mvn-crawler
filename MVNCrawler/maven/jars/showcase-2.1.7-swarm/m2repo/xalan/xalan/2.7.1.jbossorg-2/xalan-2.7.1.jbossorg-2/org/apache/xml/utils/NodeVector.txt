Compiled from "NodeVector.java"
public class org.apache.xml.utils.NodeVector implements java.io.Serializable,java.lang.Cloneable {
  static final long serialVersionUID;

  private int m_blocksize;

  private int[] m_map;

  protected int m_firstFree;

  private int m_mapSize;

  public org.apache.xml.utils.NodeVector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field m_firstFree:I
       9: aload_0
      10: bipush        32
      12: putfield      #3                  // Field m_blocksize:I
      15: aload_0
      16: iconst_0
      17: putfield      #4                  // Field m_mapSize:I
      20: return

  public org.apache.xml.utils.NodeVector(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field m_firstFree:I
       9: aload_0
      10: iload_1
      11: putfield      #3                  // Field m_blocksize:I
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field m_mapSize:I
      19: return

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #6                  // class org/apache/xml/utils/NodeVector
       7: astore_1
       8: aconst_null
       9: aload_0
      10: getfield      #7                  // Field m_map:[I
      13: if_acmpeq     56
      16: aload_0
      17: getfield      #7                  // Field m_map:[I
      20: aload_1
      21: getfield      #7                  // Field m_map:[I
      24: if_acmpne     56
      27: aload_1
      28: aload_0
      29: getfield      #7                  // Field m_map:[I
      32: arraylength
      33: newarray       int
      35: putfield      #7                  // Field m_map:[I
      38: aload_0
      39: getfield      #7                  // Field m_map:[I
      42: iconst_0
      43: aload_1
      44: getfield      #7                  // Field m_map:[I
      47: iconst_0
      48: aload_0
      49: getfield      #7                  // Field m_map:[I
      52: arraylength
      53: invokestatic  #8                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      56: aload_1
      57: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #2                  // Field m_firstFree:I
       4: ireturn

  public void addElement(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field m_firstFree:I
       4: iconst_1
       5: iadd
       6: aload_0
       7: getfield      #4                  // Field m_mapSize:I
      10: if_icmplt     83
      13: aconst_null
      14: aload_0
      15: getfield      #7                  // Field m_map:[I
      18: if_acmpne     42
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field m_blocksize:I
      26: newarray       int
      28: putfield      #7                  // Field m_map:[I
      31: aload_0
      32: aload_0
      33: getfield      #3                  // Field m_blocksize:I
      36: putfield      #4                  // Field m_mapSize:I
      39: goto          83
      42: aload_0
      43: dup
      44: getfield      #4                  // Field m_mapSize:I
      47: aload_0
      48: getfield      #3                  // Field m_blocksize:I
      51: iadd
      52: putfield      #4                  // Field m_mapSize:I
      55: aload_0
      56: getfield      #4                  // Field m_mapSize:I
      59: newarray       int
      61: astore_2
      62: aload_0
      63: getfield      #7                  // Field m_map:[I
      66: iconst_0
      67: aload_2
      68: iconst_0
      69: aload_0
      70: getfield      #2                  // Field m_firstFree:I
      73: iconst_1
      74: iadd
      75: invokestatic  #8                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      78: aload_0
      79: aload_2
      80: putfield      #7                  // Field m_map:[I
      83: aload_0
      84: getfield      #7                  // Field m_map:[I
      87: aload_0
      88: getfield      #2                  // Field m_firstFree:I
      91: iload_1
      92: iastore
      93: aload_0
      94: dup
      95: getfield      #2                  // Field m_firstFree:I
      98: iconst_1
      99: iadd
     100: putfield      #2                  // Field m_firstFree:I
     103: return

  public final void push(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field m_firstFree:I
       4: istore_2
       5: iload_2
       6: iconst_1
       7: iadd
       8: aload_0
       9: getfield      #4                  // Field m_mapSize:I
      12: if_icmplt     82
      15: aconst_null
      16: aload_0
      17: getfield      #7                  // Field m_map:[I
      20: if_acmpne     44
      23: aload_0
      24: aload_0
      25: getfield      #3                  // Field m_blocksize:I
      28: newarray       int
      30: putfield      #7                  // Field m_map:[I
      33: aload_0
      34: aload_0
      35: getfield      #3                  // Field m_blocksize:I
      38: putfield      #4                  // Field m_mapSize:I
      41: goto          82
      44: aload_0
      45: dup
      46: getfield      #4                  // Field m_mapSize:I
      49: aload_0
      50: getfield      #3                  // Field m_blocksize:I
      53: iadd
      54: putfield      #4                  // Field m_mapSize:I
      57: aload_0
      58: getfield      #4                  // Field m_mapSize:I
      61: newarray       int
      63: astore_3
      64: aload_0
      65: getfield      #7                  // Field m_map:[I
      68: iconst_0
      69: aload_3
      70: iconst_0
      71: iload_2
      72: iconst_1
      73: iadd
      74: invokestatic  #8                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      77: aload_0
      78: aload_3
      79: putfield      #7                  // Field m_map:[I
      82: aload_0
      83: getfield      #7                  // Field m_map:[I
      86: iload_2
      87: iload_1
      88: iastore
      89: iinc          2, 1
      92: aload_0
      93: iload_2
      94: putfield      #2                  // Field m_firstFree:I
      97: return

  public final int pop();
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field m_firstFree:I
       5: iconst_1
       6: isub
       7: putfield      #2                  // Field m_firstFree:I
      10: aload_0
      11: getfield      #7                  // Field m_map:[I
      14: aload_0
      15: getfield      #2                  // Field m_firstFree:I
      18: iaload
      19: istore_1
      20: aload_0
      21: getfield      #7                  // Field m_map:[I
      24: aload_0
      25: getfield      #2                  // Field m_firstFree:I
      28: iconst_m1
      29: iastore
      30: iload_1
      31: ireturn

  public final int popAndTop();
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field m_firstFree:I
       5: iconst_1
       6: isub
       7: putfield      #2                  // Field m_firstFree:I
      10: aload_0
      11: getfield      #7                  // Field m_map:[I
      14: aload_0
      15: getfield      #2                  // Field m_firstFree:I
      18: iconst_m1
      19: iastore
      20: aload_0
      21: getfield      #2                  // Field m_firstFree:I
      24: ifne          31
      27: iconst_m1
      28: goto          42
      31: aload_0
      32: getfield      #7                  // Field m_map:[I
      35: aload_0
      36: getfield      #2                  // Field m_firstFree:I
      39: iconst_1
      40: isub
      41: iaload
      42: ireturn

  public final void popQuick();
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field m_firstFree:I
       5: iconst_1
       6: isub
       7: putfield      #2                  // Field m_firstFree:I
      10: aload_0
      11: getfield      #7                  // Field m_map:[I
      14: aload_0
      15: getfield      #2                  // Field m_firstFree:I
      18: iconst_m1
      19: iastore
      20: return

  public final int peepOrNull();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #7                  // Field m_map:[I
       5: if_acmpeq     29
       8: aload_0
       9: getfield      #2                  // Field m_firstFree:I
      12: ifle          29
      15: aload_0
      16: getfield      #7                  // Field m_map:[I
      19: aload_0
      20: getfield      #2                  // Field m_firstFree:I
      23: iconst_1
      24: isub
      25: iaload
      26: goto          30
      29: iconst_m1
      30: ireturn

  public final void pushPair(int, int);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #7                  // Field m_map:[I
       5: if_acmpne     29
       8: aload_0
       9: aload_0
      10: getfield      #3                  // Field m_blocksize:I
      13: newarray       int
      15: putfield      #7                  // Field m_map:[I
      18: aload_0
      19: aload_0
      20: getfield      #3                  // Field m_blocksize:I
      23: putfield      #4                  // Field m_mapSize:I
      26: goto          81
      29: aload_0
      30: getfield      #2                  // Field m_firstFree:I
      33: iconst_2
      34: iadd
      35: aload_0
      36: getfield      #4                  // Field m_mapSize:I
      39: if_icmplt     81
      42: aload_0
      43: dup
      44: getfield      #4                  // Field m_mapSize:I
      47: aload_0
      48: getfield      #3                  // Field m_blocksize:I
      51: iadd
      52: putfield      #4                  // Field m_mapSize:I
      55: aload_0
      56: getfield      #4                  // Field m_mapSize:I
      59: newarray       int
      61: astore_3
      62: aload_0
      63: getfield      #7                  // Field m_map:[I
      66: iconst_0
      67: aload_3
      68: iconst_0
      69: aload_0
      70: getfield      #2                  // Field m_firstFree:I
      73: invokestatic  #8                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      76: aload_0
      77: aload_3
      78: putfield      #7                  // Field m_map:[I
      81: aload_0
      82: getfield      #7                  // Field m_map:[I
      85: aload_0
      86: getfield      #2                  // Field m_firstFree:I
      89: iload_1
      90: iastore
      91: aload_0
      92: getfield      #7                  // Field m_map:[I
      95: aload_0
      96: getfield      #2                  // Field m_firstFree:I
      99: iconst_1
     100: iadd
     101: iload_2
     102: iastore
     103: aload_0
     104: dup
     105: getfield      #2                  // Field m_firstFree:I
     108: iconst_2
     109: iadd
     110: putfield      #2                  // Field m_firstFree:I
     113: return

  public final void popPair();
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field m_firstFree:I
       5: iconst_2
       6: isub
       7: putfield      #2                  // Field m_firstFree:I
      10: aload_0
      11: getfield      #7                  // Field m_map:[I
      14: aload_0
      15: getfield      #2                  // Field m_firstFree:I
      18: iconst_m1
      19: iastore
      20: aload_0
      21: getfield      #7                  // Field m_map:[I
      24: aload_0
      25: getfield      #2                  // Field m_firstFree:I
      28: iconst_1
      29: iadd
      30: iconst_m1
      31: iastore
      32: return

  public final void setTail(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field m_map:[I
       4: aload_0
       5: getfield      #2                  // Field m_firstFree:I
       8: iconst_1
       9: isub
      10: iload_1
      11: iastore
      12: return

  public final void setTailSub1(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field m_map:[I
       4: aload_0
       5: getfield      #2                  // Field m_firstFree:I
       8: iconst_2
       9: isub
      10: iload_1
      11: iastore
      12: return

  public final int peepTail();
    Code:
       0: aload_0
       1: getfield      #7                  // Field m_map:[I
       4: aload_0
       5: getfield      #2                  // Field m_firstFree:I
       8: iconst_1
       9: isub
      10: iaload
      11: ireturn

  public final int peepTailSub1();
    Code:
       0: aload_0
       1: getfield      #7                  // Field m_map:[I
       4: aload_0
       5: getfield      #2                  // Field m_firstFree:I
       8: iconst_2
       9: isub
      10: iaload
      11: ireturn

  public void insertInOrder(int);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #2                  // Field m_firstFree:I
       7: if_icmpge     33
      10: iload_1
      11: aload_0
      12: getfield      #7                  // Field m_map:[I
      15: iload_2
      16: iaload
      17: if_icmpge     27
      20: aload_0
      21: iload_1
      22: iload_2
      23: invokevirtual #9                  // Method insertElementAt:(II)V
      26: return
      27: iinc          2, 1
      30: goto          2
      33: aload_0
      34: iload_1
      35: invokevirtual #10                 // Method addElement:(I)V
      38: return

  public void insertElementAt(int, int);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #7                  // Field m_map:[I
       5: if_acmpne     29
       8: aload_0
       9: aload_0
      10: getfield      #3                  // Field m_blocksize:I
      13: newarray       int
      15: putfield      #7                  // Field m_map:[I
      18: aload_0
      19: aload_0
      20: getfield      #3                  // Field m_blocksize:I
      23: putfield      #4                  // Field m_mapSize:I
      26: goto          83
      29: aload_0
      30: getfield      #2                  // Field m_firstFree:I
      33: iconst_1
      34: iadd
      35: aload_0
      36: getfield      #4                  // Field m_mapSize:I
      39: if_icmplt     83
      42: aload_0
      43: dup
      44: getfield      #4                  // Field m_mapSize:I
      47: aload_0
      48: getfield      #3                  // Field m_blocksize:I
      51: iadd
      52: putfield      #4                  // Field m_mapSize:I
      55: aload_0
      56: getfield      #4                  // Field m_mapSize:I
      59: newarray       int
      61: astore_3
      62: aload_0
      63: getfield      #7                  // Field m_map:[I
      66: iconst_0
      67: aload_3
      68: iconst_0
      69: aload_0
      70: getfield      #2                  // Field m_firstFree:I
      73: iconst_1
      74: iadd
      75: invokestatic  #8                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      78: aload_0
      79: aload_3
      80: putfield      #7                  // Field m_map:[I
      83: iload_2
      84: aload_0
      85: getfield      #2                  // Field m_firstFree:I
      88: iconst_1
      89: isub
      90: if_icmpgt     114
      93: aload_0
      94: getfield      #7                  // Field m_map:[I
      97: iload_2
      98: aload_0
      99: getfield      #7                  // Field m_map:[I
     102: iload_2
     103: iconst_1
     104: iadd
     105: aload_0
     106: getfield      #2                  // Field m_firstFree:I
     109: iload_2
     110: isub
     111: invokestatic  #8                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     114: aload_0
     115: getfield      #7                  // Field m_map:[I
     118: iload_2
     119: iload_1
     120: iastore
     121: aload_0
     122: dup
     123: getfield      #2                  // Field m_firstFree:I
     126: iconst_1
     127: iadd
     128: putfield      #2                  // Field m_firstFree:I
     131: return

  public void appendNodes(org.apache.xml.utils.NodeVector);
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method size:()I
       4: istore_2
       5: aconst_null
       6: aload_0
       7: getfield      #7                  // Field m_map:[I
      10: if_acmpne     36
      13: aload_0
      14: iload_2
      15: aload_0
      16: getfield      #3                  // Field m_blocksize:I
      19: iadd
      20: putfield      #4                  // Field m_mapSize:I
      23: aload_0
      24: aload_0
      25: getfield      #4                  // Field m_mapSize:I
      28: newarray       int
      30: putfield      #7                  // Field m_map:[I
      33: goto          92
      36: aload_0
      37: getfield      #2                  // Field m_firstFree:I
      40: iload_2
      41: iadd
      42: aload_0
      43: getfield      #4                  // Field m_mapSize:I
      46: if_icmplt     92
      49: aload_0
      50: dup
      51: getfield      #4                  // Field m_mapSize:I
      54: iload_2
      55: aload_0
      56: getfield      #3                  // Field m_blocksize:I
      59: iadd
      60: iadd
      61: putfield      #4                  // Field m_mapSize:I
      64: aload_0
      65: getfield      #4                  // Field m_mapSize:I
      68: newarray       int
      70: astore_3
      71: aload_0
      72: getfield      #7                  // Field m_map:[I
      75: iconst_0
      76: aload_3
      77: iconst_0
      78: aload_0
      79: getfield      #2                  // Field m_firstFree:I
      82: iload_2
      83: iadd
      84: invokestatic  #8                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      87: aload_0
      88: aload_3
      89: putfield      #7                  // Field m_map:[I
      92: aload_1
      93: getfield      #7                  // Field m_map:[I
      96: iconst_0
      97: aload_0
      98: getfield      #7                  // Field m_map:[I
     101: aload_0
     102: getfield      #2                  // Field m_firstFree:I
     105: iload_2
     106: invokestatic  #8                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     109: aload_0
     110: dup
     111: getfield      #2                  // Field m_firstFree:I
     114: iload_2
     115: iadd
     116: putfield      #2                  // Field m_firstFree:I
     119: return

  public void removeAllElements();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #7                  // Field m_map:[I
       5: if_acmpne     9
       8: return
       9: iconst_0
      10: istore_1
      11: iload_1
      12: aload_0
      13: getfield      #2                  // Field m_firstFree:I
      16: if_icmpge     32
      19: aload_0
      20: getfield      #7                  // Field m_map:[I
      23: iload_1
      24: iconst_m1
      25: iastore
      26: iinc          1, 1
      29: goto          11
      32: aload_0
      33: iconst_0
      34: putfield      #2                  // Field m_firstFree:I
      37: return

  public void RemoveAllNoClear();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #7                  // Field m_map:[I
       5: if_acmpne     9
       8: return
       9: aload_0
      10: iconst_0
      11: putfield      #2                  // Field m_firstFree:I
      14: return

  public boolean removeElement(int);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #7                  // Field m_map:[I
       5: if_acmpne     10
       8: iconst_0
       9: ireturn
      10: iconst_0
      11: istore_2
      12: iload_2
      13: aload_0
      14: getfield      #2                  // Field m_firstFree:I
      17: if_icmpge     91
      20: aload_0
      21: getfield      #7                  // Field m_map:[I
      24: iload_2
      25: iaload
      26: istore_3
      27: iload_3
      28: iload_1
      29: if_icmpne     85
      32: iload_2
      33: aload_0
      34: getfield      #2                  // Field m_firstFree:I
      37: if_icmple     66
      40: aload_0
      41: getfield      #7                  // Field m_map:[I
      44: iload_2
      45: iconst_1
      46: iadd
      47: aload_0
      48: getfield      #7                  // Field m_map:[I
      51: iload_2
      52: iconst_1
      53: isub
      54: aload_0
      55: getfield      #2                  // Field m_firstFree:I
      58: iload_2
      59: isub
      60: invokestatic  #8                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      63: goto          73
      66: aload_0
      67: getfield      #7                  // Field m_map:[I
      70: iload_2
      71: iconst_m1
      72: iastore
      73: aload_0
      74: dup
      75: getfield      #2                  // Field m_firstFree:I
      78: iconst_1
      79: isub
      80: putfield      #2                  // Field m_firstFree:I
      83: iconst_1
      84: ireturn
      85: iinc          2, 1
      88: goto          12
      91: iconst_0
      92: ireturn

  public void removeElementAt(int);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #7                  // Field m_map:[I
       5: if_acmpne     9
       8: return
       9: iload_1
      10: aload_0
      11: getfield      #2                  // Field m_firstFree:I
      14: if_icmple     43
      17: aload_0
      18: getfield      #7                  // Field m_map:[I
      21: iload_1
      22: iconst_1
      23: iadd
      24: aload_0
      25: getfield      #7                  // Field m_map:[I
      28: iload_1
      29: iconst_1
      30: isub
      31: aload_0
      32: getfield      #2                  // Field m_firstFree:I
      35: iload_1
      36: isub
      37: invokestatic  #8                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      40: goto          50
      43: aload_0
      44: getfield      #7                  // Field m_map:[I
      47: iload_1
      48: iconst_m1
      49: iastore
      50: return

  public void setElementAt(int, int);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #7                  // Field m_map:[I
       5: if_acmpne     26
       8: aload_0
       9: aload_0
      10: getfield      #3                  // Field m_blocksize:I
      13: newarray       int
      15: putfield      #7                  // Field m_map:[I
      18: aload_0
      19: aload_0
      20: getfield      #3                  // Field m_blocksize:I
      23: putfield      #4                  // Field m_mapSize:I
      26: iload_2
      27: iconst_m1
      28: if_icmpne     36
      31: aload_0
      32: iload_1
      33: invokevirtual #10                 // Method addElement:(I)V
      36: aload_0
      37: getfield      #7                  // Field m_map:[I
      40: iload_2
      41: iload_1
      42: iastore
      43: return

  public int elementAt(int);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #7                  // Field m_map:[I
       5: if_acmpne     10
       8: iconst_m1
       9: ireturn
      10: aload_0
      11: getfield      #7                  // Field m_map:[I
      14: iload_1
      15: iaload
      16: ireturn

  public boolean contains(int);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #7                  // Field m_map:[I
       5: if_acmpne     10
       8: iconst_0
       9: ireturn
      10: iconst_0
      11: istore_2
      12: iload_2
      13: aload_0
      14: getfield      #2                  // Field m_firstFree:I
      17: if_icmpge     40
      20: aload_0
      21: getfield      #7                  // Field m_map:[I
      24: iload_2
      25: iaload
      26: istore_3
      27: iload_3
      28: iload_1
      29: if_icmpne     34
      32: iconst_1
      33: ireturn
      34: iinc          2, 1
      37: goto          12
      40: iconst_0
      41: ireturn

  public int indexOf(int, int);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #7                  // Field m_map:[I
       5: if_acmpne     10
       8: iconst_m1
       9: ireturn
      10: iload_2
      11: istore_3
      12: iload_3
      13: aload_0
      14: getfield      #2                  // Field m_firstFree:I
      17: if_icmpge     42
      20: aload_0
      21: getfield      #7                  // Field m_map:[I
      24: iload_3
      25: iaload
      26: istore        4
      28: iload         4
      30: iload_1
      31: if_icmpne     36
      34: iload_3
      35: ireturn
      36: iinc          3, 1
      39: goto          12
      42: iconst_m1
      43: ireturn

  public int indexOf(int);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #7                  // Field m_map:[I
       5: if_acmpne     10
       8: iconst_m1
       9: ireturn
      10: iconst_0
      11: istore_2
      12: iload_2
      13: aload_0
      14: getfield      #2                  // Field m_firstFree:I
      17: if_icmpge     40
      20: aload_0
      21: getfield      #7                  // Field m_map:[I
      24: iload_2
      25: iaload
      26: istore_3
      27: iload_3
      28: iload_1
      29: if_icmpne     34
      32: iload_2
      33: ireturn
      34: iinc          2, 1
      37: goto          12
      40: iconst_m1
      41: ireturn

  public void sort(int[], int, int) throws java.lang.Exception;
    Code:
       0: iload_2
       1: istore        4
       3: iload_3
       4: istore        5
       6: iload         4
       8: iload         5
      10: if_icmplt     14
      13: return
      14: iload         4
      16: iload         5
      18: iconst_1
      19: isub
      20: if_icmpne     55
      23: aload_1
      24: iload         4
      26: iaload
      27: aload_1
      28: iload         5
      30: iaload
      31: if_icmple     54
      34: aload_1
      35: iload         4
      37: iaload
      38: istore        6
      40: aload_1
      41: iload         4
      43: aload_1
      44: iload         5
      46: iaload
      47: iastore
      48: aload_1
      49: iload         5
      51: iload         6
      53: iastore
      54: return
      55: aload_1
      56: iload         4
      58: iload         5
      60: iadd
      61: iconst_2
      62: idiv
      63: iaload
      64: istore        6
      66: aload_1
      67: iload         4
      69: iload         5
      71: iadd
      72: iconst_2
      73: idiv
      74: aload_1
      75: iload         5
      77: iaload
      78: iastore
      79: aload_1
      80: iload         5
      82: iload         6
      84: iastore
      85: iload         4
      87: iload         5
      89: if_icmpge     166
      92: aload_1
      93: iload         4
      95: iaload
      96: iload         6
      98: if_icmpgt     114
     101: iload         4
     103: iload         5
     105: if_icmpge     114
     108: iinc          4, 1
     111: goto          92
     114: iload         6
     116: aload_1
     117: iload         5
     119: iaload
     120: if_icmpgt     136
     123: iload         4
     125: iload         5
     127: if_icmpge     136
     130: iinc          5, -1
     133: goto          114
     136: iload         4
     138: iload         5
     140: if_icmpge     85
     143: aload_1
     144: iload         4
     146: iaload
     147: istore        7
     149: aload_1
     150: iload         4
     152: aload_1
     153: iload         5
     155: iaload
     156: iastore
     157: aload_1
     158: iload         5
     160: iload         7
     162: iastore
     163: goto          85
     166: aload_1
     167: iload_3
     168: aload_1
     169: iload         5
     171: iaload
     172: iastore
     173: aload_1
     174: iload         5
     176: iload         6
     178: iastore
     179: aload_0
     180: aload_1
     181: iload_2
     182: iload         4
     184: iconst_1
     185: isub
     186: invokevirtual #12                 // Method sort:([III)V
     189: aload_0
     190: aload_1
     191: iload         5
     193: iconst_1
     194: iadd
     195: iload_3
     196: invokevirtual #12                 // Method sort:([III)V
     199: return

  public void sort() throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field m_map:[I
       5: iconst_0
       6: aload_0
       7: getfield      #2                  // Field m_firstFree:I
      10: iconst_1
      11: isub
      12: invokevirtual #12                 // Method sort:([III)V
      15: return
}
