Compiled from "SQLDocument.java"
public class org.apache.xalan.lib.sql.SQLDocument extends org.apache.xalan.lib.sql.DTMDocument {
  private boolean DEBUG;

  private static final java.lang.String S_NAMESPACE;

  private static final java.lang.String S_SQL;

  private static final java.lang.String S_ROW_SET;

  private static final java.lang.String S_METADATA;

  private static final java.lang.String S_COLUMN_HEADER;

  private static final java.lang.String S_ROW;

  private static final java.lang.String S_COL;

  private static final java.lang.String S_OUT_PARAMETERS;

  private static final java.lang.String S_CATALOGUE_NAME;

  private static final java.lang.String S_DISPLAY_SIZE;

  private static final java.lang.String S_COLUMN_LABEL;

  private static final java.lang.String S_COLUMN_NAME;

  private static final java.lang.String S_COLUMN_TYPE;

  private static final java.lang.String S_COLUMN_TYPENAME;

  private static final java.lang.String S_PRECISION;

  private static final java.lang.String S_SCALE;

  private static final java.lang.String S_SCHEMA_NAME;

  private static final java.lang.String S_TABLE_NAME;

  private static final java.lang.String S_CASESENSITIVE;

  private static final java.lang.String S_DEFINITELYWRITABLE;

  private static final java.lang.String S_ISNULLABLE;

  private static final java.lang.String S_ISSIGNED;

  private static final java.lang.String S_ISWRITEABLE;

  private static final java.lang.String S_ISSEARCHABLE;

  private int m_SQL_TypeID;

  private int m_MetaData_TypeID;

  private int m_ColumnHeader_TypeID;

  private int m_RowSet_TypeID;

  private int m_Row_TypeID;

  private int m_Col_TypeID;

  private int m_OutParameter_TypeID;

  private int m_ColAttrib_CATALOGUE_NAME_TypeID;

  private int m_ColAttrib_DISPLAY_SIZE_TypeID;

  private int m_ColAttrib_COLUMN_LABEL_TypeID;

  private int m_ColAttrib_COLUMN_NAME_TypeID;

  private int m_ColAttrib_COLUMN_TYPE_TypeID;

  private int m_ColAttrib_COLUMN_TYPENAME_TypeID;

  private int m_ColAttrib_PRECISION_TypeID;

  private int m_ColAttrib_SCALE_TypeID;

  private int m_ColAttrib_SCHEMA_NAME_TypeID;

  private int m_ColAttrib_TABLE_NAME_TypeID;

  private int m_ColAttrib_CASESENSITIVE_TypeID;

  private int m_ColAttrib_DEFINITELYWRITEABLE_TypeID;

  private int m_ColAttrib_ISNULLABLE_TypeID;

  private int m_ColAttrib_ISSIGNED_TypeID;

  private int m_ColAttrib_ISWRITEABLE_TypeID;

  private int m_ColAttrib_ISSEARCHABLE_TypeID;

  private java.sql.Statement m_Statement;

  private org.apache.xalan.extensions.ExpressionContext m_ExpressionContext;

  private org.apache.xalan.lib.sql.ConnectionPool m_ConnectionPool;

  private java.sql.ResultSet m_ResultSet;

  private org.apache.xalan.lib.sql.SQLQueryParser m_QueryParser;

  private int[] m_ColHeadersIdx;

  private int m_ColCount;

  private int m_MetaDataIdx;

  private int m_RowSetIdx;

  private int m_SQLIdx;

  private int m_FirstRowIdx;

  private int m_LastRowIdx;

  private boolean m_StreamingMode;

  private boolean m_MultipleResults;

  private boolean m_HasErrors;

  private boolean m_IsStatementCachingEnabled;

  private org.apache.xalan.lib.sql.XConnection m_XConnection;

  public org.apache.xalan.lib.sql.SQLDocument(org.apache.xml.dtm.DTMManager, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method org/apache/xalan/lib/sql/DTMDocument."<init>":(Lorg/apache/xml/dtm/DTMManager;I)V
       6: aload_0
       7: iconst_0
       8: putfield      #2                  // Field DEBUG:Z
      11: aload_0
      12: iconst_0
      13: putfield      #3                  // Field m_SQL_TypeID:I
      16: aload_0
      17: iconst_0
      18: putfield      #4                  // Field m_MetaData_TypeID:I
      21: aload_0
      22: iconst_0
      23: putfield      #5                  // Field m_ColumnHeader_TypeID:I
      26: aload_0
      27: iconst_0
      28: putfield      #6                  // Field m_RowSet_TypeID:I
      31: aload_0
      32: iconst_0
      33: putfield      #7                  // Field m_Row_TypeID:I
      36: aload_0
      37: iconst_0
      38: putfield      #8                  // Field m_Col_TypeID:I
      41: aload_0
      42: iconst_0
      43: putfield      #9                  // Field m_OutParameter_TypeID:I
      46: aload_0
      47: iconst_0
      48: putfield      #10                 // Field m_ColAttrib_CATALOGUE_NAME_TypeID:I
      51: aload_0
      52: iconst_0
      53: putfield      #11                 // Field m_ColAttrib_DISPLAY_SIZE_TypeID:I
      56: aload_0
      57: iconst_0
      58: putfield      #12                 // Field m_ColAttrib_COLUMN_LABEL_TypeID:I
      61: aload_0
      62: iconst_0
      63: putfield      #13                 // Field m_ColAttrib_COLUMN_NAME_TypeID:I
      66: aload_0
      67: iconst_0
      68: putfield      #14                 // Field m_ColAttrib_COLUMN_TYPE_TypeID:I
      71: aload_0
      72: iconst_0
      73: putfield      #15                 // Field m_ColAttrib_COLUMN_TYPENAME_TypeID:I
      76: aload_0
      77: iconst_0
      78: putfield      #16                 // Field m_ColAttrib_PRECISION_TypeID:I
      81: aload_0
      82: iconst_0
      83: putfield      #17                 // Field m_ColAttrib_SCALE_TypeID:I
      86: aload_0
      87: iconst_0
      88: putfield      #18                 // Field m_ColAttrib_SCHEMA_NAME_TypeID:I
      91: aload_0
      92: iconst_0
      93: putfield      #19                 // Field m_ColAttrib_TABLE_NAME_TypeID:I
      96: aload_0
      97: iconst_0
      98: putfield      #20                 // Field m_ColAttrib_CASESENSITIVE_TypeID:I
     101: aload_0
     102: iconst_0
     103: putfield      #21                 // Field m_ColAttrib_DEFINITELYWRITEABLE_TypeID:I
     106: aload_0
     107: iconst_0
     108: putfield      #22                 // Field m_ColAttrib_ISNULLABLE_TypeID:I
     111: aload_0
     112: iconst_0
     113: putfield      #23                 // Field m_ColAttrib_ISSIGNED_TypeID:I
     116: aload_0
     117: iconst_0
     118: putfield      #24                 // Field m_ColAttrib_ISWRITEABLE_TypeID:I
     121: aload_0
     122: iconst_0
     123: putfield      #25                 // Field m_ColAttrib_ISSEARCHABLE_TypeID:I
     126: aload_0
     127: aconst_null
     128: putfield      #26                 // Field m_Statement:Ljava/sql/Statement;
     131: aload_0
     132: aconst_null
     133: putfield      #27                 // Field m_ExpressionContext:Lorg/apache/xalan/extensions/ExpressionContext;
     136: aload_0
     137: aconst_null
     138: putfield      #28                 // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
     141: aload_0
     142: aconst_null
     143: putfield      #29                 // Field m_ResultSet:Ljava/sql/ResultSet;
     146: aload_0
     147: aconst_null
     148: putfield      #30                 // Field m_QueryParser:Lorg/apache/xalan/lib/sql/SQLQueryParser;
     151: aload_0
     152: iconst_m1
     153: putfield      #31                 // Field m_MetaDataIdx:I
     156: aload_0
     157: iconst_m1
     158: putfield      #32                 // Field m_RowSetIdx:I
     161: aload_0
     162: iconst_m1
     163: putfield      #33                 // Field m_SQLIdx:I
     166: aload_0
     167: iconst_m1
     168: putfield      #34                 // Field m_FirstRowIdx:I
     171: aload_0
     172: iconst_m1
     173: putfield      #35                 // Field m_LastRowIdx:I
     176: aload_0
     177: iconst_1
     178: putfield      #36                 // Field m_StreamingMode:Z
     181: aload_0
     182: iconst_0
     183: putfield      #37                 // Field m_MultipleResults:Z
     186: aload_0
     187: iconst_0
     188: putfield      #38                 // Field m_HasErrors:Z
     191: aload_0
     192: iconst_0
     193: putfield      #39                 // Field m_IsStatementCachingEnabled:Z
     196: aload_0
     197: aconst_null
     198: putfield      #40                 // Field m_XConnection:Lorg/apache/xalan/lib/sql/XConnection;
     201: return

  public static org.apache.xalan.lib.sql.SQLDocument getNewDocument(org.apache.xalan.extensions.ExpressionContext);
    Code:
       0: aload_0
       1: checkcast     #41                 // class org/apache/xpath/XPathContext$XPathExpressionContext
       4: invokevirtual #42                 // Method org/apache/xpath/XPathContext$XPathExpressionContext.getDTMManager:()Lorg/apache/xml/dtm/DTMManager;
       7: astore_1
       8: aload_1
       9: checkcast     #43                 // class org/apache/xml/dtm/ref/DTMManagerDefault
      12: astore_2
      13: aload_2
      14: invokevirtual #44                 // Method org/apache/xml/dtm/ref/DTMManagerDefault.getFirstFreeDTMID:()I
      17: istore_3
      18: new           #45                 // class org/apache/xalan/lib/sql/SQLDocument
      21: dup
      22: aload_1
      23: iload_3
      24: bipush        16
      26: ishl
      27: invokespecial #46                 // Method "<init>":(Lorg/apache/xml/dtm/DTMManager;I)V
      30: astore        4
      32: aload_2
      33: aload         4
      35: iload_3
      36: invokevirtual #47                 // Method org/apache/xml/dtm/ref/DTMManagerDefault.addDTM:(Lorg/apache/xml/dtm/DTM;I)V
      39: aload         4
      41: aload_0
      42: invokevirtual #48                 // Method setExpressionContext:(Lorg/apache/xalan/extensions/ExpressionContext;)V
      45: aload         4
      47: areturn

  protected void setExpressionContext(org.apache.xalan.extensions.ExpressionContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field m_ExpressionContext:Lorg/apache/xalan/extensions/ExpressionContext;
       5: return

  public org.apache.xalan.extensions.ExpressionContext getExpressionContext();
    Code:
       0: aload_0
       1: getfield      #27                 // Field m_ExpressionContext:Lorg/apache/xalan/extensions/ExpressionContext;
       4: areturn

  public void execute(org.apache.xalan.lib.sql.XConnection, org.apache.xalan.lib.sql.SQLQueryParser) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #49                 // String true
       3: aload_1
       4: ldc           #50                 // String streaming
       6: invokevirtual #51                 // Method org/apache/xalan/lib/sql/XConnection.getFeature:(Ljava/lang/String;)Ljava/lang/String;
       9: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: putfield      #36                 // Field m_StreamingMode:Z
      15: aload_0
      16: ldc           #49                 // String true
      18: aload_1
      19: ldc           #53                 // String multiple-results
      21: invokevirtual #51                 // Method org/apache/xalan/lib/sql/XConnection.getFeature:(Ljava/lang/String;)Ljava/lang/String;
      24: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: putfield      #37                 // Field m_MultipleResults:Z
      30: aload_0
      31: ldc           #49                 // String true
      33: aload_1
      34: ldc           #54                 // String cache-statements
      36: invokevirtual #51                 // Method org/apache/xalan/lib/sql/XConnection.getFeature:(Ljava/lang/String;)Ljava/lang/String;
      39: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      42: putfield      #39                 // Field m_IsStatementCachingEnabled:Z
      45: aload_0
      46: aload_1
      47: putfield      #40                 // Field m_XConnection:Lorg/apache/xalan/lib/sql/XConnection;
      50: aload_0
      51: aload_2
      52: putfield      #30                 // Field m_QueryParser:Lorg/apache/xalan/lib/sql/SQLQueryParser;
      55: aload_0
      56: invokespecial #55                 // Method executeSQLStatement:()V
      59: aload_0
      60: invokevirtual #56                 // Method createExpandedNameTable:()V
      63: aload_0
      64: aload_0
      65: iconst_0
      66: aload_0
      67: getfield      #57                 // Field m_Document_TypeID:I
      70: iconst_m1
      71: iconst_m1
      72: invokevirtual #58                 // Method addElement:(IIII)I
      75: putfield      #59                 // Field m_DocumentIdx:I
      78: aload_0
      79: aload_0
      80: iconst_1
      81: aload_0
      82: getfield      #3                  // Field m_SQL_TypeID:I
      85: aload_0
      86: getfield      #59                 // Field m_DocumentIdx:I
      89: iconst_m1
      90: invokevirtual #58                 // Method addElement:(IIII)I
      93: putfield      #33                 // Field m_SQLIdx:I
      96: aload_0
      97: getfield      #37                 // Field m_MultipleResults:Z
     100: ifne          116
     103: aload_0
     104: aload_0
     105: getfield      #29                 // Field m_ResultSet:Ljava/sql/ResultSet;
     108: invokeinterface #60,  1           // InterfaceMethod java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;
     113: invokespecial #61                 // Method extractSQLMetaData:(Ljava/sql/ResultSetMetaData;)V
     116: goto          127
     119: astore_3
     120: aload_0
     121: iconst_1
     122: putfield      #38                 // Field m_HasErrors:Z
     125: aload_3
     126: athrow
     127: return
    Exception table:
       from    to  target type
           0   116   119   Class java/sql/SQLException

  private void executeSQLStatement() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #40                 // Field m_XConnection:Lorg/apache/xalan/lib/sql/XConnection;
       5: invokevirtual #63                 // Method org/apache/xalan/lib/sql/XConnection.getConnectionPool:()Lorg/apache/xalan/lib/sql/ConnectionPool;
       8: putfield      #28                 // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
      11: aload_0
      12: getfield      #28                 // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
      15: invokeinterface #64,  1           // InterfaceMethod org/apache/xalan/lib/sql/ConnectionPool.getConnection:()Ljava/sql/Connection;
      20: astore_1
      21: aload_0
      22: getfield      #30                 // Field m_QueryParser:Lorg/apache/xalan/lib/sql/SQLQueryParser;
      25: invokevirtual #65                 // Method org/apache/xalan/lib/sql/SQLQueryParser.hasParameters:()Z
      28: ifne          64
      31: aload_0
      32: aload_1
      33: invokeinterface #66,  1           // InterfaceMethod java/sql/Connection.createStatement:()Ljava/sql/Statement;
      38: putfield      #26                 // Field m_Statement:Ljava/sql/Statement;
      41: aload_0
      42: aload_0
      43: getfield      #26                 // Field m_Statement:Ljava/sql/Statement;
      46: aload_0
      47: getfield      #30                 // Field m_QueryParser:Lorg/apache/xalan/lib/sql/SQLQueryParser;
      50: invokevirtual #67                 // Method org/apache/xalan/lib/sql/SQLQueryParser.getSQLQuery:()Ljava/lang/String;
      53: invokeinterface #68,  2           // InterfaceMethod java/sql/Statement.executeQuery:(Ljava/lang/String;)Ljava/sql/ResultSet;
      58: putfield      #29                 // Field m_ResultSet:Ljava/sql/ResultSet;
      61: goto          189
      64: aload_0
      65: getfield      #30                 // Field m_QueryParser:Lorg/apache/xalan/lib/sql/SQLQueryParser;
      68: invokevirtual #69                 // Method org/apache/xalan/lib/sql/SQLQueryParser.isCallable:()Z
      71: ifeq          148
      74: aload_1
      75: aload_0
      76: getfield      #30                 // Field m_QueryParser:Lorg/apache/xalan/lib/sql/SQLQueryParser;
      79: invokevirtual #67                 // Method org/apache/xalan/lib/sql/SQLQueryParser.getSQLQuery:()Ljava/lang/String;
      82: invokeinterface #70,  2           // InterfaceMethod java/sql/Connection.prepareCall:(Ljava/lang/String;)Ljava/sql/CallableStatement;
      87: astore_2
      88: aload_0
      89: getfield      #30                 // Field m_QueryParser:Lorg/apache/xalan/lib/sql/SQLQueryParser;
      92: aload_2
      93: invokevirtual #71                 // Method org/apache/xalan/lib/sql/SQLQueryParser.registerOutputParameters:(Ljava/sql/CallableStatement;)V
      96: aload_0
      97: getfield      #30                 // Field m_QueryParser:Lorg/apache/xalan/lib/sql/SQLQueryParser;
     100: aload_2
     101: aload_0
     102: getfield      #27                 // Field m_ExpressionContext:Lorg/apache/xalan/extensions/ExpressionContext;
     105: invokevirtual #72                 // Method org/apache/xalan/lib/sql/SQLQueryParser.populateStatement:(Ljava/sql/PreparedStatement;Lorg/apache/xalan/extensions/ExpressionContext;)V
     108: aload_0
     109: aload_2
     110: putfield      #26                 // Field m_Statement:Ljava/sql/Statement;
     113: aload_2
     114: invokeinterface #73,  1           // InterfaceMethod java/sql/CallableStatement.execute:()Z
     119: ifne          132
     122: new           #62                 // class java/sql/SQLException
     125: dup
     126: ldc           #74                 // String Error in Callable Statement
     128: invokespecial #75                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
     131: athrow
     132: aload_0
     133: aload_0
     134: getfield      #26                 // Field m_Statement:Ljava/sql/Statement;
     137: invokeinterface #76,  1           // InterfaceMethod java/sql/Statement.getResultSet:()Ljava/sql/ResultSet;
     142: putfield      #29                 // Field m_ResultSet:Ljava/sql/ResultSet;
     145: goto          189
     148: aload_1
     149: aload_0
     150: getfield      #30                 // Field m_QueryParser:Lorg/apache/xalan/lib/sql/SQLQueryParser;
     153: invokevirtual #67                 // Method org/apache/xalan/lib/sql/SQLQueryParser.getSQLQuery:()Ljava/lang/String;
     156: invokeinterface #77,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
     161: astore_2
     162: aload_0
     163: getfield      #30                 // Field m_QueryParser:Lorg/apache/xalan/lib/sql/SQLQueryParser;
     166: aload_2
     167: aload_0
     168: getfield      #27                 // Field m_ExpressionContext:Lorg/apache/xalan/extensions/ExpressionContext;
     171: invokevirtual #72                 // Method org/apache/xalan/lib/sql/SQLQueryParser.populateStatement:(Ljava/sql/PreparedStatement;Lorg/apache/xalan/extensions/ExpressionContext;)V
     174: aload_0
     175: aload_2
     176: putfield      #26                 // Field m_Statement:Ljava/sql/Statement;
     179: aload_0
     180: aload_2
     181: invokeinterface #78,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
     186: putfield      #29                 // Field m_ResultSet:Ljava/sql/ResultSet;
     189: return

  public void skip(int);
    Code:
       0: aload_0
       1: getfield      #29                 // Field m_ResultSet:Ljava/sql/ResultSet;
       4: ifnull        18
       7: aload_0
       8: getfield      #29                 // Field m_ResultSet:Ljava/sql/ResultSet;
      11: iload_1
      12: invokeinterface #79,  2           // InterfaceMethod java/sql/ResultSet.relative:(I)Z
      17: pop
      18: goto          80
      21: astore_2
      22: iconst_0
      23: istore_3
      24: iload_3
      25: iload_1
      26: if_icmpge     50
      29: aload_0
      30: getfield      #29                 // Field m_ResultSet:Ljava/sql/ResultSet;
      33: invokeinterface #81,  1           // InterfaceMethod java/sql/ResultSet.next:()Z
      38: ifne          44
      41: goto          50
      44: iinc          3, 1
      47: goto          24
      50: goto          80
      53: astore_3
      54: aload_0
      55: getfield      #40                 // Field m_XConnection:Lorg/apache/xalan/lib/sql/XConnection;
      58: aload_2
      59: aload_0
      60: aload_0
      61: invokevirtual #82                 // Method checkWarnings:()Ljava/sql/SQLWarning;
      64: invokevirtual #83                 // Method org/apache/xalan/lib/sql/XConnection.setError:(Ljava/lang/Exception;Lorg/apache/xalan/lib/sql/SQLDocument;Ljava/sql/SQLWarning;)V
      67: aload_0
      68: getfield      #40                 // Field m_XConnection:Lorg/apache/xalan/lib/sql/XConnection;
      71: aload_3
      72: aload_0
      73: aload_0
      74: invokevirtual #82                 // Method checkWarnings:()Ljava/sql/SQLWarning;
      77: invokevirtual #83                 // Method org/apache/xalan/lib/sql/XConnection.setError:(Ljava/lang/Exception;Lorg/apache/xalan/lib/sql/SQLDocument;Ljava/sql/SQLWarning;)V
      80: return
    Exception table:
       from    to  target type
           0    18    21   Class java/lang/Exception
          22    50    53   Class java/lang/Exception

  private void extractSQLMetaData(java.sql.ResultSetMetaData);
    Code:
       0: aload_0
       1: aload_0
       2: iconst_1
       3: aload_0
       4: getfield      #4                  // Field m_MetaData_TypeID:I
       7: aload_0
       8: getfield      #37                 // Field m_MultipleResults:Z
      11: ifeq          21
      14: aload_0
      15: getfield      #32                 // Field m_RowSetIdx:I
      18: goto          25
      21: aload_0
      22: getfield      #33                 // Field m_SQLIdx:I
      25: iconst_m1
      26: invokevirtual #58                 // Method addElement:(IIII)I
      29: putfield      #31                 // Field m_MetaDataIdx:I
      32: aload_0
      33: aload_1
      34: invokeinterface #84,  1           // InterfaceMethod java/sql/ResultSetMetaData.getColumnCount:()I
      39: putfield      #85                 // Field m_ColCount:I
      42: aload_0
      43: aload_0
      44: getfield      #85                 // Field m_ColCount:I
      47: newarray       int
      49: putfield      #86                 // Field m_ColHeadersIdx:[I
      52: goto          69
      55: astore_2
      56: aload_0
      57: getfield      #40                 // Field m_XConnection:Lorg/apache/xalan/lib/sql/XConnection;
      60: aload_2
      61: aload_0
      62: aload_0
      63: invokevirtual #82                 // Method checkWarnings:()Ljava/sql/SQLWarning;
      66: invokevirtual #83                 // Method org/apache/xalan/lib/sql/XConnection.setError:(Ljava/lang/Exception;Lorg/apache/xalan/lib/sql/SQLDocument;Ljava/sql/SQLWarning;)V
      69: iconst_m1
      70: istore_2
      71: iconst_1
      72: istore_3
      73: iconst_1
      74: istore_3
      75: iload_3
      76: aload_0
      77: getfield      #85                 // Field m_ColCount:I
      80: if_icmpgt     754
      83: aload_0
      84: getfield      #86                 // Field m_ColHeadersIdx:[I
      87: iload_3
      88: iconst_1
      89: isub
      90: aload_0
      91: iconst_2
      92: aload_0
      93: getfield      #5                  // Field m_ColumnHeader_TypeID:I
      96: aload_0
      97: getfield      #31                 // Field m_MetaDataIdx:I
     100: iload_2
     101: invokevirtual #58                 // Method addElement:(IIII)I
     104: iastore
     105: aload_0
     106: getfield      #86                 // Field m_ColHeadersIdx:[I
     109: iload_3
     110: iconst_1
     111: isub
     112: iaload
     113: istore_2
     114: aload_0
     115: aload_1
     116: iload_3
     117: invokeinterface #87,  2           // InterfaceMethod java/sql/ResultSetMetaData.getColumnName:(I)Ljava/lang/String;
     122: aload_0
     123: getfield      #13                 // Field m_ColAttrib_COLUMN_NAME_TypeID:I
     126: iload_2
     127: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     130: pop
     131: goto          148
     134: astore        4
     136: aload_0
     137: ldc           #89                 // String Not Supported
     139: aload_0
     140: getfield      #13                 // Field m_ColAttrib_COLUMN_NAME_TypeID:I
     143: iload_2
     144: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     147: pop
     148: aload_0
     149: aload_1
     150: iload_3
     151: invokeinterface #90,  2           // InterfaceMethod java/sql/ResultSetMetaData.getColumnLabel:(I)Ljava/lang/String;
     156: aload_0
     157: getfield      #12                 // Field m_ColAttrib_COLUMN_LABEL_TypeID:I
     160: iload_2
     161: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     164: pop
     165: goto          182
     168: astore        4
     170: aload_0
     171: ldc           #89                 // String Not Supported
     173: aload_0
     174: getfield      #12                 // Field m_ColAttrib_COLUMN_LABEL_TypeID:I
     177: iload_2
     178: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     181: pop
     182: aload_0
     183: aload_1
     184: iload_3
     185: invokeinterface #91,  2           // InterfaceMethod java/sql/ResultSetMetaData.getCatalogName:(I)Ljava/lang/String;
     190: aload_0
     191: getfield      #10                 // Field m_ColAttrib_CATALOGUE_NAME_TypeID:I
     194: iload_2
     195: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     198: pop
     199: goto          216
     202: astore        4
     204: aload_0
     205: ldc           #89                 // String Not Supported
     207: aload_0
     208: getfield      #10                 // Field m_ColAttrib_CATALOGUE_NAME_TypeID:I
     211: iload_2
     212: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     215: pop
     216: aload_0
     217: new           #92                 // class java/lang/Integer
     220: dup
     221: aload_1
     222: iload_3
     223: invokeinterface #93,  2           // InterfaceMethod java/sql/ResultSetMetaData.getColumnDisplaySize:(I)I
     228: invokespecial #94                 // Method java/lang/Integer."<init>":(I)V
     231: aload_0
     232: getfield      #11                 // Field m_ColAttrib_DISPLAY_SIZE_TypeID:I
     235: iload_2
     236: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     239: pop
     240: goto          257
     243: astore        4
     245: aload_0
     246: ldc           #89                 // String Not Supported
     248: aload_0
     249: getfield      #11                 // Field m_ColAttrib_DISPLAY_SIZE_TypeID:I
     252: iload_2
     253: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     256: pop
     257: aload_0
     258: new           #92                 // class java/lang/Integer
     261: dup
     262: aload_1
     263: iload_3
     264: invokeinterface #95,  2           // InterfaceMethod java/sql/ResultSetMetaData.getColumnType:(I)I
     269: invokespecial #94                 // Method java/lang/Integer."<init>":(I)V
     272: aload_0
     273: getfield      #14                 // Field m_ColAttrib_COLUMN_TYPE_TypeID:I
     276: iload_2
     277: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     280: pop
     281: goto          298
     284: astore        4
     286: aload_0
     287: ldc           #89                 // String Not Supported
     289: aload_0
     290: getfield      #14                 // Field m_ColAttrib_COLUMN_TYPE_TypeID:I
     293: iload_2
     294: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     297: pop
     298: aload_0
     299: aload_1
     300: iload_3
     301: invokeinterface #96,  2           // InterfaceMethod java/sql/ResultSetMetaData.getColumnTypeName:(I)Ljava/lang/String;
     306: aload_0
     307: getfield      #15                 // Field m_ColAttrib_COLUMN_TYPENAME_TypeID:I
     310: iload_2
     311: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     314: pop
     315: goto          332
     318: astore        4
     320: aload_0
     321: ldc           #89                 // String Not Supported
     323: aload_0
     324: getfield      #15                 // Field m_ColAttrib_COLUMN_TYPENAME_TypeID:I
     327: iload_2
     328: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     331: pop
     332: aload_0
     333: new           #92                 // class java/lang/Integer
     336: dup
     337: aload_1
     338: iload_3
     339: invokeinterface #97,  2           // InterfaceMethod java/sql/ResultSetMetaData.getPrecision:(I)I
     344: invokespecial #94                 // Method java/lang/Integer."<init>":(I)V
     347: aload_0
     348: getfield      #16                 // Field m_ColAttrib_PRECISION_TypeID:I
     351: iload_2
     352: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     355: pop
     356: goto          373
     359: astore        4
     361: aload_0
     362: ldc           #89                 // String Not Supported
     364: aload_0
     365: getfield      #16                 // Field m_ColAttrib_PRECISION_TypeID:I
     368: iload_2
     369: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     372: pop
     373: aload_0
     374: new           #92                 // class java/lang/Integer
     377: dup
     378: aload_1
     379: iload_3
     380: invokeinterface #98,  2           // InterfaceMethod java/sql/ResultSetMetaData.getScale:(I)I
     385: invokespecial #94                 // Method java/lang/Integer."<init>":(I)V
     388: aload_0
     389: getfield      #17                 // Field m_ColAttrib_SCALE_TypeID:I
     392: iload_2
     393: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     396: pop
     397: goto          414
     400: astore        4
     402: aload_0
     403: ldc           #89                 // String Not Supported
     405: aload_0
     406: getfield      #17                 // Field m_ColAttrib_SCALE_TypeID:I
     409: iload_2
     410: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     413: pop
     414: aload_0
     415: aload_1
     416: iload_3
     417: invokeinterface #99,  2           // InterfaceMethod java/sql/ResultSetMetaData.getSchemaName:(I)Ljava/lang/String;
     422: aload_0
     423: getfield      #18                 // Field m_ColAttrib_SCHEMA_NAME_TypeID:I
     426: iload_2
     427: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     430: pop
     431: goto          448
     434: astore        4
     436: aload_0
     437: ldc           #89                 // String Not Supported
     439: aload_0
     440: getfield      #18                 // Field m_ColAttrib_SCHEMA_NAME_TypeID:I
     443: iload_2
     444: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     447: pop
     448: aload_0
     449: aload_1
     450: iload_3
     451: invokeinterface #100,  2          // InterfaceMethod java/sql/ResultSetMetaData.getTableName:(I)Ljava/lang/String;
     456: aload_0
     457: getfield      #19                 // Field m_ColAttrib_TABLE_NAME_TypeID:I
     460: iload_2
     461: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     464: pop
     465: goto          482
     468: astore        4
     470: aload_0
     471: ldc           #89                 // String Not Supported
     473: aload_0
     474: getfield      #19                 // Field m_ColAttrib_TABLE_NAME_TypeID:I
     477: iload_2
     478: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     481: pop
     482: aload_0
     483: aload_1
     484: iload_3
     485: invokeinterface #101,  2          // InterfaceMethod java/sql/ResultSetMetaData.isCaseSensitive:(I)Z
     490: ifeq          498
     493: ldc           #49                 // String true
     495: goto          500
     498: ldc           #102                // String false
     500: aload_0
     501: getfield      #20                 // Field m_ColAttrib_CASESENSITIVE_TypeID:I
     504: iload_2
     505: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     508: pop
     509: goto          526
     512: astore        4
     514: aload_0
     515: ldc           #89                 // String Not Supported
     517: aload_0
     518: getfield      #20                 // Field m_ColAttrib_CASESENSITIVE_TypeID:I
     521: iload_2
     522: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     525: pop
     526: aload_0
     527: aload_1
     528: iload_3
     529: invokeinterface #103,  2          // InterfaceMethod java/sql/ResultSetMetaData.isDefinitelyWritable:(I)Z
     534: ifeq          542
     537: ldc           #49                 // String true
     539: goto          544
     542: ldc           #102                // String false
     544: aload_0
     545: getfield      #21                 // Field m_ColAttrib_DEFINITELYWRITEABLE_TypeID:I
     548: iload_2
     549: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     552: pop
     553: goto          570
     556: astore        4
     558: aload_0
     559: ldc           #89                 // String Not Supported
     561: aload_0
     562: getfield      #21                 // Field m_ColAttrib_DEFINITELYWRITEABLE_TypeID:I
     565: iload_2
     566: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     569: pop
     570: aload_0
     571: aload_1
     572: iload_3
     573: invokeinterface #104,  2          // InterfaceMethod java/sql/ResultSetMetaData.isNullable:(I)I
     578: ifeq          586
     581: ldc           #49                 // String true
     583: goto          588
     586: ldc           #102                // String false
     588: aload_0
     589: getfield      #22                 // Field m_ColAttrib_ISNULLABLE_TypeID:I
     592: iload_2
     593: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     596: pop
     597: goto          614
     600: astore        4
     602: aload_0
     603: ldc           #89                 // String Not Supported
     605: aload_0
     606: getfield      #22                 // Field m_ColAttrib_ISNULLABLE_TypeID:I
     609: iload_2
     610: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     613: pop
     614: aload_0
     615: aload_1
     616: iload_3
     617: invokeinterface #105,  2          // InterfaceMethod java/sql/ResultSetMetaData.isSigned:(I)Z
     622: ifeq          630
     625: ldc           #49                 // String true
     627: goto          632
     630: ldc           #102                // String false
     632: aload_0
     633: getfield      #23                 // Field m_ColAttrib_ISSIGNED_TypeID:I
     636: iload_2
     637: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     640: pop
     641: goto          658
     644: astore        4
     646: aload_0
     647: ldc           #89                 // String Not Supported
     649: aload_0
     650: getfield      #23                 // Field m_ColAttrib_ISSIGNED_TypeID:I
     653: iload_2
     654: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     657: pop
     658: aload_0
     659: aload_1
     660: iload_3
     661: invokeinterface #106,  2          // InterfaceMethod java/sql/ResultSetMetaData.isWritable:(I)Z
     666: iconst_1
     667: if_icmpne     675
     670: ldc           #49                 // String true
     672: goto          677
     675: ldc           #102                // String false
     677: aload_0
     678: getfield      #24                 // Field m_ColAttrib_ISWRITEABLE_TypeID:I
     681: iload_2
     682: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     685: pop
     686: goto          703
     689: astore        4
     691: aload_0
     692: ldc           #89                 // String Not Supported
     694: aload_0
     695: getfield      #24                 // Field m_ColAttrib_ISWRITEABLE_TypeID:I
     698: iload_2
     699: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     702: pop
     703: aload_0
     704: aload_1
     705: iload_3
     706: invokeinterface #107,  2          // InterfaceMethod java/sql/ResultSetMetaData.isSearchable:(I)Z
     711: iconst_1
     712: if_icmpne     720
     715: ldc           #49                 // String true
     717: goto          722
     720: ldc           #102                // String false
     722: aload_0
     723: getfield      #25                 // Field m_ColAttrib_ISSEARCHABLE_TypeID:I
     726: iload_2
     727: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     730: pop
     731: goto          748
     734: astore        4
     736: aload_0
     737: ldc           #89                 // String Not Supported
     739: aload_0
     740: getfield      #25                 // Field m_ColAttrib_ISSEARCHABLE_TypeID:I
     743: iload_2
     744: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     747: pop
     748: iinc          3, 1
     751: goto          75
     754: return
    Exception table:
       from    to  target type
          32    52    55   Class java/lang/Exception
         114   131   134   Class java/lang/Exception
         148   165   168   Class java/lang/Exception
         182   199   202   Class java/lang/Exception
         216   240   243   Class java/lang/Exception
         257   281   284   Class java/lang/Exception
         298   315   318   Class java/lang/Exception
         332   356   359   Class java/lang/Exception
         373   397   400   Class java/lang/Exception
         414   431   434   Class java/lang/Exception
         448   465   468   Class java/lang/Exception
         482   509   512   Class java/lang/Exception
         526   553   556   Class java/lang/Exception
         570   597   600   Class java/lang/Exception
         614   641   644   Class java/lang/Exception
         658   686   689   Class java/lang/Exception
         703   731   734   Class java/lang/Exception

  protected void createExpandedNameTable();
    Code:
       0: aload_0
       1: invokespecial #108                // Method org/apache/xalan/lib/sql/DTMDocument.createExpandedNameTable:()V
       4: aload_0
       5: aload_0
       6: getfield      #109                // Field m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
       9: ldc           #110                // String http://xml.apache.org/xalan/SQLExtension
      11: ldc           #111                // String sql
      13: iconst_1
      14: invokevirtual #112                // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
      17: putfield      #3                  // Field m_SQL_TypeID:I
      20: aload_0
      21: aload_0
      22: getfield      #109                // Field m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
      25: ldc           #110                // String http://xml.apache.org/xalan/SQLExtension
      27: ldc           #113                // String metadata
      29: iconst_1
      30: invokevirtual #112                // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
      33: putfield      #4                  // Field m_MetaData_TypeID:I
      36: aload_0
      37: aload_0
      38: getfield      #109                // Field m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
      41: ldc           #110                // String http://xml.apache.org/xalan/SQLExtension
      43: ldc           #114                // String column-header
      45: iconst_1
      46: invokevirtual #112                // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
      49: putfield      #5                  // Field m_ColumnHeader_TypeID:I
      52: aload_0
      53: aload_0
      54: getfield      #109                // Field m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
      57: ldc           #110                // String http://xml.apache.org/xalan/SQLExtension
      59: ldc           #115                // String row-set
      61: iconst_1
      62: invokevirtual #112                // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
      65: putfield      #6                  // Field m_RowSet_TypeID:I
      68: aload_0
      69: aload_0
      70: getfield      #109                // Field m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
      73: ldc           #110                // String http://xml.apache.org/xalan/SQLExtension
      75: ldc           #116                // String row
      77: iconst_1
      78: invokevirtual #112                // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
      81: putfield      #7                  // Field m_Row_TypeID:I
      84: aload_0
      85: aload_0
      86: getfield      #109                // Field m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
      89: ldc           #110                // String http://xml.apache.org/xalan/SQLExtension
      91: ldc           #117                // String col
      93: iconst_1
      94: invokevirtual #112                // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
      97: putfield      #8                  // Field m_Col_TypeID:I
     100: aload_0
     101: aload_0
     102: getfield      #109                // Field m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
     105: ldc           #110                // String http://xml.apache.org/xalan/SQLExtension
     107: ldc           #118                // String out-parameters
     109: iconst_1
     110: invokevirtual #112                // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
     113: putfield      #9                  // Field m_OutParameter_TypeID:I
     116: aload_0
     117: aload_0
     118: getfield      #109                // Field m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
     121: ldc           #110                // String http://xml.apache.org/xalan/SQLExtension
     123: ldc           #119                // String catalogue-name
     125: iconst_2
     126: invokevirtual #112                // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
     129: putfield      #10                 // Field m_ColAttrib_CATALOGUE_NAME_TypeID:I
     132: aload_0
     133: aload_0
     134: getfield      #109                // Field m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
     137: ldc           #110                // String http://xml.apache.org/xalan/SQLExtension
     139: ldc           #120                // String column-display-size
     141: iconst_2
     142: invokevirtual #112                // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
     145: putfield      #11                 // Field m_ColAttrib_DISPLAY_SIZE_TypeID:I
     148: aload_0
     149: aload_0
     150: getfield      #109                // Field m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
     153: ldc           #110                // String http://xml.apache.org/xalan/SQLExtension
     155: ldc           #121                // String column-label
     157: iconst_2
     158: invokevirtual #112                // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
     161: putfield      #12                 // Field m_ColAttrib_COLUMN_LABEL_TypeID:I
     164: aload_0
     165: aload_0
     166: getfield      #109                // Field m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
     169: ldc           #110                // String http://xml.apache.org/xalan/SQLExtension
     171: ldc           #122                // String column-name
     173: iconst_2
     174: invokevirtual #112                // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
     177: putfield      #13                 // Field m_ColAttrib_COLUMN_NAME_TypeID:I
     180: aload_0
     181: aload_0
     182: getfield      #109                // Field m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
     185: ldc           #110                // String http://xml.apache.org/xalan/SQLExtension
     187: ldc           #123                // String column-type
     189: iconst_2
     190: invokevirtual #112                // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
     193: putfield      #14                 // Field m_ColAttrib_COLUMN_TYPE_TypeID:I
     196: aload_0
     197: aload_0
     198: getfield      #109                // Field m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
     201: ldc           #110                // String http://xml.apache.org/xalan/SQLExtension
     203: ldc           #124                // String column-typename
     205: iconst_2
     206: invokevirtual #112                // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
     209: putfield      #15                 // Field m_ColAttrib_COLUMN_TYPENAME_TypeID:I
     212: aload_0
     213: aload_0
     214: getfield      #109                // Field m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
     217: ldc           #110                // String http://xml.apache.org/xalan/SQLExtension
     219: ldc           #125                // String precision
     221: iconst_2
     222: invokevirtual #112                // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
     225: putfield      #16                 // Field m_ColAttrib_PRECISION_TypeID:I
     228: aload_0
     229: aload_0
     230: getfield      #109                // Field m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
     233: ldc           #110                // String http://xml.apache.org/xalan/SQLExtension
     235: ldc           #126                // String scale
     237: iconst_2
     238: invokevirtual #112                // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
     241: putfield      #17                 // Field m_ColAttrib_SCALE_TypeID:I
     244: aload_0
     245: aload_0
     246: getfield      #109                // Field m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
     249: ldc           #110                // String http://xml.apache.org/xalan/SQLExtension
     251: ldc           #127                // String schema-name
     253: iconst_2
     254: invokevirtual #112                // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
     257: putfield      #18                 // Field m_ColAttrib_SCHEMA_NAME_TypeID:I
     260: aload_0
     261: aload_0
     262: getfield      #109                // Field m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
     265: ldc           #110                // String http://xml.apache.org/xalan/SQLExtension
     267: ldc           #128                // String table-name
     269: iconst_2
     270: invokevirtual #112                // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
     273: putfield      #19                 // Field m_ColAttrib_TABLE_NAME_TypeID:I
     276: aload_0
     277: aload_0
     278: getfield      #109                // Field m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
     281: ldc           #110                // String http://xml.apache.org/xalan/SQLExtension
     283: ldc           #129                // String case-sensitive
     285: iconst_2
     286: invokevirtual #112                // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
     289: putfield      #20                 // Field m_ColAttrib_CASESENSITIVE_TypeID:I
     292: aload_0
     293: aload_0
     294: getfield      #109                // Field m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
     297: ldc           #110                // String http://xml.apache.org/xalan/SQLExtension
     299: ldc           #130                // String definitely-writable
     301: iconst_2
     302: invokevirtual #112                // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
     305: putfield      #21                 // Field m_ColAttrib_DEFINITELYWRITEABLE_TypeID:I
     308: aload_0
     309: aload_0
     310: getfield      #109                // Field m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
     313: ldc           #110                // String http://xml.apache.org/xalan/SQLExtension
     315: ldc           #131                // String nullable
     317: iconst_2
     318: invokevirtual #112                // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
     321: putfield      #22                 // Field m_ColAttrib_ISNULLABLE_TypeID:I
     324: aload_0
     325: aload_0
     326: getfield      #109                // Field m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
     329: ldc           #110                // String http://xml.apache.org/xalan/SQLExtension
     331: ldc           #132                // String signed
     333: iconst_2
     334: invokevirtual #112                // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
     337: putfield      #23                 // Field m_ColAttrib_ISSIGNED_TypeID:I
     340: aload_0
     341: aload_0
     342: getfield      #109                // Field m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
     345: ldc           #110                // String http://xml.apache.org/xalan/SQLExtension
     347: ldc           #133                // String writable
     349: iconst_2
     350: invokevirtual #112                // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
     353: putfield      #24                 // Field m_ColAttrib_ISWRITEABLE_TypeID:I
     356: aload_0
     357: aload_0
     358: getfield      #109                // Field m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
     361: ldc           #110                // String http://xml.apache.org/xalan/SQLExtension
     363: ldc           #134                // String searchable
     365: iconst_2
     366: invokevirtual #112                // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
     369: putfield      #25                 // Field m_ColAttrib_ISSEARCHABLE_TypeID:I
     372: return

  private boolean addRowToDTMFromResultSet();
    Code:
       0: aload_0
       1: getfield      #34                 // Field m_FirstRowIdx:I
       4: iconst_m1
       5: if_icmpne     63
       8: aload_0
       9: aload_0
      10: iconst_1
      11: aload_0
      12: getfield      #6                  // Field m_RowSet_TypeID:I
      15: aload_0
      16: getfield      #33                 // Field m_SQLIdx:I
      19: aload_0
      20: getfield      #37                 // Field m_MultipleResults:Z
      23: ifeq          33
      26: aload_0
      27: getfield      #32                 // Field m_RowSetIdx:I
      30: goto          37
      33: aload_0
      34: getfield      #31                 // Field m_MetaDataIdx:I
      37: invokevirtual #58                 // Method addElement:(IIII)I
      40: putfield      #32                 // Field m_RowSetIdx:I
      43: aload_0
      44: getfield      #37                 // Field m_MultipleResults:Z
      47: ifeq          63
      50: aload_0
      51: aload_0
      52: getfield      #29                 // Field m_ResultSet:Ljava/sql/ResultSet;
      55: invokeinterface #60,  1           // InterfaceMethod java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;
      60: invokespecial #61                 // Method extractSQLMetaData:(Ljava/sql/ResultSetMetaData;)V
      63: aload_0
      64: getfield      #29                 // Field m_ResultSet:Ljava/sql/ResultSet;
      67: invokeinterface #81,  1           // InterfaceMethod java/sql/ResultSet.next:()Z
      72: ifne          375
      75: aload_0
      76: getfield      #36                 // Field m_StreamingMode:Z
      79: ifeq          102
      82: aload_0
      83: getfield      #35                 // Field m_LastRowIdx:I
      86: iconst_m1
      87: if_icmpeq     102
      90: aload_0
      91: getfield      #135                // Field m_nextsib:Lorg/apache/xml/utils/SuballocatedIntVector;
      94: iconst_m1
      95: aload_0
      96: getfield      #35                 // Field m_LastRowIdx:I
      99: invokevirtual #136                // Method org/apache/xml/utils/SuballocatedIntVector.setElementAt:(II)V
     102: aload_0
     103: getfield      #29                 // Field m_ResultSet:Ljava/sql/ResultSet;
     106: invokeinterface #137,  1          // InterfaceMethod java/sql/ResultSet.close:()V
     111: aload_0
     112: getfield      #37                 // Field m_MultipleResults:Z
     115: ifeq          161
     118: aload_0
     119: getfield      #26                 // Field m_Statement:Ljava/sql/Statement;
     122: invokeinterface #138,  1          // InterfaceMethod java/sql/Statement.getMoreResults:()Z
     127: ifne          145
     130: aload_0
     131: getfield      #26                 // Field m_Statement:Ljava/sql/Statement;
     134: invokeinterface #139,  1          // InterfaceMethod java/sql/Statement.getUpdateCount:()I
     139: iflt          145
     142: goto          118
     145: aload_0
     146: aload_0
     147: getfield      #26                 // Field m_Statement:Ljava/sql/Statement;
     150: invokeinterface #76,  1           // InterfaceMethod java/sql/Statement.getResultSet:()Ljava/sql/ResultSet;
     155: putfield      #29                 // Field m_ResultSet:Ljava/sql/ResultSet;
     158: goto          166
     161: aload_0
     162: aconst_null
     163: putfield      #29                 // Field m_ResultSet:Ljava/sql/ResultSet;
     166: aload_0
     167: getfield      #29                 // Field m_ResultSet:Ljava/sql/ResultSet;
     170: ifnull        186
     173: aload_0
     174: iconst_m1
     175: putfield      #34                 // Field m_FirstRowIdx:I
     178: aload_0
     179: invokespecial #140                // Method addRowToDTMFromResultSet:()Z
     182: pop
     183: goto          373
     186: aload_0
     187: getfield      #30                 // Field m_QueryParser:Lorg/apache/xalan/lib/sql/SQLQueryParser;
     190: invokevirtual #141                // Method org/apache/xalan/lib/sql/SQLQueryParser.getParameters:()Ljava/util/Vector;
     193: astore_1
     194: aload_1
     195: ifnull        354
     198: aload_0
     199: iconst_1
     200: aload_0
     201: getfield      #9                  // Field m_OutParameter_TypeID:I
     204: aload_0
     205: getfield      #33                 // Field m_SQLIdx:I
     208: aload_0
     209: getfield      #32                 // Field m_RowSetIdx:I
     212: invokevirtual #58                 // Method addElement:(IIII)I
     215: istore_2
     216: iconst_m1
     217: istore_3
     218: iconst_0
     219: istore        4
     221: iload         4
     223: aload_1
     224: invokevirtual #142                // Method java/util/Vector.size:()I
     227: if_icmpge     354
     230: aload_1
     231: iload         4
     233: invokevirtual #143                // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
     236: checkcast     #144                // class org/apache/xalan/lib/sql/QueryParameter
     239: astore        5
     241: aload         5
     243: invokevirtual #145                // Method org/apache/xalan/lib/sql/QueryParameter.isOutput:()Z
     246: ifeq          348
     249: aload_0
     250: getfield      #26                 // Field m_Statement:Ljava/sql/Statement;
     253: checkcast     #146                // class java/sql/CallableStatement
     256: iload         4
     258: iconst_1
     259: iadd
     260: invokeinterface #147,  2          // InterfaceMethod java/sql/CallableStatement.getObject:(I)Ljava/lang/Object;
     265: astore        6
     267: aload_0
     268: aload         6
     270: iconst_2
     271: aload_0
     272: getfield      #8                  // Field m_Col_TypeID:I
     275: iload_2
     276: iload_3
     277: invokevirtual #148                // Method addElementWithData:(Ljava/lang/Object;IIII)I
     280: istore_3
     281: aload_0
     282: aload         5
     284: invokevirtual #149                // Method org/apache/xalan/lib/sql/QueryParameter.getName:()Ljava/lang/String;
     287: aload_0
     288: getfield      #13                 // Field m_ColAttrib_COLUMN_NAME_TypeID:I
     291: iload_3
     292: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     295: pop
     296: aload_0
     297: aload         5
     299: invokevirtual #149                // Method org/apache/xalan/lib/sql/QueryParameter.getName:()Ljava/lang/String;
     302: aload_0
     303: getfield      #12                 // Field m_ColAttrib_COLUMN_LABEL_TypeID:I
     306: iload_3
     307: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     310: pop
     311: aload_0
     312: new           #92                 // class java/lang/Integer
     315: dup
     316: aload         5
     318: invokevirtual #150                // Method org/apache/xalan/lib/sql/QueryParameter.getType:()I
     321: invokespecial #94                 // Method java/lang/Integer."<init>":(I)V
     324: aload_0
     325: getfield      #14                 // Field m_ColAttrib_COLUMN_TYPE_TypeID:I
     328: iload_3
     329: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     332: pop
     333: aload_0
     334: aload         5
     336: invokevirtual #151                // Method org/apache/xalan/lib/sql/QueryParameter.getTypeName:()Ljava/lang/String;
     339: aload_0
     340: getfield      #15                 // Field m_ColAttrib_COLUMN_TYPENAME_TypeID:I
     343: iload_3
     344: invokevirtual #88                 // Method addAttributeToNode:(Ljava/lang/Object;II)I
     347: pop
     348: iinc          4, 1
     351: goto          221
     354: aload_0
     355: invokevirtual #82                 // Method checkWarnings:()Ljava/sql/SQLWarning;
     358: astore_2
     359: aload_2
     360: ifnull        373
     363: aload_0
     364: getfield      #40                 // Field m_XConnection:Lorg/apache/xalan/lib/sql/XConnection;
     367: aconst_null
     368: aconst_null
     369: aload_2
     370: invokevirtual #83                 // Method org/apache/xalan/lib/sql/XConnection.setError:(Ljava/lang/Exception;Lorg/apache/xalan/lib/sql/SQLDocument;Ljava/sql/SQLWarning;)V
     373: iconst_0
     374: ireturn
     375: aload_0
     376: getfield      #34                 // Field m_FirstRowIdx:I
     379: iconst_m1
     380: if_icmpne     448
     383: aload_0
     384: aload_0
     385: iconst_2
     386: aload_0
     387: getfield      #7                  // Field m_Row_TypeID:I
     390: aload_0
     391: getfield      #32                 // Field m_RowSetIdx:I
     394: aload_0
     395: getfield      #37                 // Field m_MultipleResults:Z
     398: ifeq          408
     401: aload_0
     402: getfield      #31                 // Field m_MetaDataIdx:I
     405: goto          409
     408: iconst_m1
     409: invokevirtual #58                 // Method addElement:(IIII)I
     412: putfield      #34                 // Field m_FirstRowIdx:I
     415: aload_0
     416: aload_0
     417: getfield      #34                 // Field m_FirstRowIdx:I
     420: putfield      #35                 // Field m_LastRowIdx:I
     423: aload_0
     424: getfield      #36                 // Field m_StreamingMode:Z
     427: ifeq          476
     430: aload_0
     431: getfield      #135                // Field m_nextsib:Lorg/apache/xml/utils/SuballocatedIntVector;
     434: aload_0
     435: getfield      #35                 // Field m_LastRowIdx:I
     438: aload_0
     439: getfield      #35                 // Field m_LastRowIdx:I
     442: invokevirtual #136                // Method org/apache/xml/utils/SuballocatedIntVector.setElementAt:(II)V
     445: goto          476
     448: aload_0
     449: getfield      #36                 // Field m_StreamingMode:Z
     452: ifne          476
     455: aload_0
     456: aload_0
     457: iconst_2
     458: aload_0
     459: getfield      #7                  // Field m_Row_TypeID:I
     462: aload_0
     463: getfield      #32                 // Field m_RowSetIdx:I
     466: aload_0
     467: getfield      #35                 // Field m_LastRowIdx:I
     470: invokevirtual #58                 // Method addElement:(IIII)I
     473: putfield      #35                 // Field m_LastRowIdx:I
     476: aload_0
     477: aload_0
     478: getfield      #35                 // Field m_LastRowIdx:I
     481: invokevirtual #152                // Method _firstch:(I)I
     484: istore_1
     485: iconst_m1
     486: istore_2
     487: iconst_1
     488: istore_3
     489: iload_3
     490: aload_0
     491: getfield      #85                 // Field m_ColCount:I
     494: if_icmpgt     597
     497: aload_0
     498: getfield      #29                 // Field m_ResultSet:Ljava/sql/ResultSet;
     501: iload_3
     502: invokeinterface #153,  2          // InterfaceMethod java/sql/ResultSet.getObject:(I)Ljava/lang/Object;
     507: astore        4
     509: iload_1
     510: iconst_m1
     511: if_icmpne     547
     514: aload_0
     515: aload         4
     517: iconst_3
     518: aload_0
     519: getfield      #8                  // Field m_Col_TypeID:I
     522: aload_0
     523: getfield      #35                 // Field m_LastRowIdx:I
     526: iload_2
     527: invokevirtual #148                // Method addElementWithData:(Ljava/lang/Object;IIII)I
     530: istore_2
     531: aload_0
     532: iload_2
     533: aload_0
     534: getfield      #86                 // Field m_ColHeadersIdx:[I
     537: iload_3
     538: iconst_1
     539: isub
     540: iaload
     541: invokevirtual #154                // Method cloneAttributeFromNode:(II)V
     544: goto          580
     547: aload_0
     548: iload_1
     549: invokevirtual #152                // Method _firstch:(I)I
     552: istore        5
     554: iload         5
     556: iconst_m1
     557: if_icmpne     569
     560: aload_0
     561: ldc           #155                // String Streaming Mode, Data Error
     563: invokevirtual #156                // Method error:(Ljava/lang/String;)V
     566: goto          580
     569: aload_0
     570: getfield      #157                // Field m_ObjectArray:Lorg/apache/xalan/lib/sql/ObjectArray;
     573: iload         5
     575: aload         4
     577: invokevirtual #158                // Method org/apache/xalan/lib/sql/ObjectArray.setAt:(ILjava/lang/Object;)V
     580: iload_1
     581: iconst_m1
     582: if_icmpeq     591
     585: aload_0
     586: iload_1
     587: invokevirtual #159                // Method _nextsib:(I)I
     590: istore_1
     591: iinc          3, 1
     594: goto          489
     597: goto          659
     600: astore_1
     601: aload_0
     602: getfield      #2                  // Field DEBUG:Z
     605: ifeq          641
     608: getstatic     #160                // Field java/lang/System.out:Ljava/io/PrintStream;
     611: new           #161                // class java/lang/StringBuilder
     614: dup
     615: invokespecial #162                // Method java/lang/StringBuilder."<init>":()V
     618: ldc           #163                // String SQL Error Fetching next row [
     620: invokevirtual #164                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     623: aload_1
     624: invokevirtual #165                // Method java/lang/Exception.getLocalizedMessage:()Ljava/lang/String;
     627: invokevirtual #164                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     630: ldc           #166                // String ]
     632: invokevirtual #164                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     635: invokevirtual #167                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     638: invokevirtual #168                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     641: aload_0
     642: getfield      #40                 // Field m_XConnection:Lorg/apache/xalan/lib/sql/XConnection;
     645: aload_1
     646: aload_0
     647: aload_0
     648: invokevirtual #82                 // Method checkWarnings:()Ljava/sql/SQLWarning;
     651: invokevirtual #83                 // Method org/apache/xalan/lib/sql/XConnection.setError:(Ljava/lang/Exception;Lorg/apache/xalan/lib/sql/SQLDocument;Ljava/sql/SQLWarning;)V
     654: aload_0
     655: iconst_1
     656: putfield      #38                 // Field m_HasErrors:Z
     659: iconst_1
     660: ireturn
    Exception table:
       from    to  target type
           0   374   600   Class java/lang/Exception
         375   597   600   Class java/lang/Exception

  public boolean hasErrors();
    Code:
       0: aload_0
       1: getfield      #38                 // Field m_HasErrors:Z
       4: ireturn

  public void close(boolean);
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method checkWarnings:()Ljava/sql/SQLWarning;
       4: astore_2
       5: aload_2
       6: ifnull        19
       9: aload_0
      10: getfield      #40                 // Field m_XConnection:Lorg/apache/xalan/lib/sql/XConnection;
      13: aconst_null
      14: aconst_null
      15: aload_2
      16: invokevirtual #83                 // Method org/apache/xalan/lib/sql/XConnection.setError:(Ljava/lang/Exception;Lorg/apache/xalan/lib/sql/SQLDocument;Ljava/sql/SQLWarning;)V
      19: goto          23
      22: astore_2
      23: aconst_null
      24: aload_0
      25: getfield      #29                 // Field m_ResultSet:Ljava/sql/ResultSet;
      28: if_acmpeq     45
      31: aload_0
      32: getfield      #29                 // Field m_ResultSet:Ljava/sql/ResultSet;
      35: invokeinterface #137,  1          // InterfaceMethod java/sql/ResultSet.close:()V
      40: aload_0
      41: aconst_null
      42: putfield      #29                 // Field m_ResultSet:Ljava/sql/ResultSet;
      45: goto          49
      48: astore_2
      49: aconst_null
      50: astore_2
      51: aconst_null
      52: aload_0
      53: getfield      #26                 // Field m_Statement:Ljava/sql/Statement;
      56: if_acmpeq     83
      59: aload_0
      60: getfield      #26                 // Field m_Statement:Ljava/sql/Statement;
      63: invokeinterface #169,  1          // InterfaceMethod java/sql/Statement.getConnection:()Ljava/sql/Connection;
      68: astore_2
      69: aload_0
      70: getfield      #26                 // Field m_Statement:Ljava/sql/Statement;
      73: invokeinterface #170,  1          // InterfaceMethod java/sql/Statement.close:()V
      78: aload_0
      79: aconst_null
      80: putfield      #26                 // Field m_Statement:Ljava/sql/Statement;
      83: goto          87
      86: astore_3
      87: aload_2
      88: ifnull        121
      91: aload_0
      92: getfield      #38                 // Field m_HasErrors:Z
      95: ifeq          111
      98: aload_0
      99: getfield      #28                 // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
     102: aload_2
     103: invokeinterface #171,  2          // InterfaceMethod org/apache/xalan/lib/sql/ConnectionPool.releaseConnectionOnError:(Ljava/sql/Connection;)V
     108: goto          121
     111: aload_0
     112: getfield      #28                 // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
     115: aload_2
     116: invokeinterface #172,  2          // InterfaceMethod org/apache/xalan/lib/sql/ConnectionPool.releaseConnection:(Ljava/sql/Connection;)V
     121: goto          125
     124: astore_3
     125: aload_0
     126: invokevirtual #173                // Method getManager:()Lorg/apache/xml/dtm/DTMManager;
     129: aload_0
     130: iconst_1
     131: invokevirtual #174                // Method org/apache/xml/dtm/DTMManager.release:(Lorg/apache/xml/dtm/DTM;Z)Z
     134: pop
     135: return
    Exception table:
       from    to  target type
           0    19    22   Class java/lang/Exception
          23    45    48   Class java/lang/Exception
          51    83    86   Class java/lang/Exception
          87   121   124   Class java/lang/Exception

  protected boolean nextNode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field DEBUG:Z
       4: ifeq          15
       7: getstatic     #160                // Field java/lang/System.out:Ljava/io/PrintStream;
      10: ldc           #175                // String nextNode()
      12: invokevirtual #168                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      15: iconst_0
      16: ireturn
      17: astore_1
      18: iconst_0
      19: ireturn
    Exception table:
       from    to  target type
          15    16    17   Class java/lang/Exception

  protected int _nextsib(int);
    Code:
       0: aload_0
       1: getfield      #29                 // Field m_ResultSet:Ljava/sql/ResultSet;
       4: ifnull        123
       7: aload_0
       8: iload_1
       9: invokevirtual #176                // Method _exptype:(I)I
      12: istore_2
      13: aload_0
      14: getfield      #34                 // Field m_FirstRowIdx:I
      17: iconst_m1
      18: if_icmpne     26
      21: aload_0
      22: invokespecial #140                // Method addRowToDTMFromResultSet:()Z
      25: pop
      26: iload_2
      27: aload_0
      28: getfield      #7                  // Field m_Row_TypeID:I
      31: if_icmpne     65
      34: iload_1
      35: aload_0
      36: getfield      #35                 // Field m_LastRowIdx:I
      39: if_icmplt     65
      42: aload_0
      43: getfield      #2                  // Field DEBUG:Z
      46: ifeq          57
      49: getstatic     #160                // Field java/lang/System.out:Ljava/io/PrintStream;
      52: ldc           #177                // String reading from the ResultSet
      54: invokevirtual #168                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      57: aload_0
      58: invokespecial #140                // Method addRowToDTMFromResultSet:()Z
      61: pop
      62: goto          123
      65: aload_0
      66: getfield      #37                 // Field m_MultipleResults:Z
      69: ifeq          123
      72: iload_1
      73: aload_0
      74: getfield      #32                 // Field m_RowSetIdx:I
      77: if_icmpne     123
      80: aload_0
      81: getfield      #2                  // Field DEBUG:Z
      84: ifeq          95
      87: getstatic     #160                // Field java/lang/System.out:Ljava/io/PrintStream;
      90: ldc           #178                // String reading for next ResultSet
      92: invokevirtual #168                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      95: aload_0
      96: getfield      #32                 // Field m_RowSetIdx:I
      99: istore_3
     100: iload_3
     101: aload_0
     102: getfield      #32                 // Field m_RowSetIdx:I
     105: if_icmpne     123
     108: aload_0
     109: getfield      #29                 // Field m_ResultSet:Ljava/sql/ResultSet;
     112: ifnull        123
     115: aload_0
     116: invokespecial #140                // Method addRowToDTMFromResultSet:()Z
     119: pop
     120: goto          100
     123: aload_0
     124: iload_1
     125: invokespecial #179                // Method org/apache/xalan/lib/sql/DTMDocument._nextsib:(I)I
     128: ireturn

  public void documentRegistration();
    Code:
       0: aload_0
       1: getfield      #2                  // Field DEBUG:Z
       4: ifeq          15
       7: getstatic     #160                // Field java/lang/System.out:Ljava/io/PrintStream;
      10: ldc           #180                // String Document Registration
      12: invokevirtual #168                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      15: return

  public void documentRelease();
    Code:
       0: aload_0
       1: getfield      #2                  // Field DEBUG:Z
       4: ifeq          15
       7: getstatic     #160                // Field java/lang/System.out:Ljava/io/PrintStream;
      10: ldc           #181                // String Document Release
      12: invokevirtual #168                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      15: return

  public java.sql.SQLWarning checkWarnings();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #26                 // Field m_Statement:Ljava/sql/Statement;
       6: ifnull        32
       9: aload_0
      10: getfield      #26                 // Field m_Statement:Ljava/sql/Statement;
      13: invokeinterface #182,  1          // InterfaceMethod java/sql/Statement.getWarnings:()Ljava/sql/SQLWarning;
      18: astore_1
      19: aload_0
      20: getfield      #26                 // Field m_Statement:Ljava/sql/Statement;
      23: invokeinterface #183,  1          // InterfaceMethod java/sql/Statement.clearWarnings:()V
      28: goto          32
      31: astore_2
      32: aload_1
      33: areturn
    Exception table:
       from    to  target type
           9    28    31   Class java/sql/SQLException
}
