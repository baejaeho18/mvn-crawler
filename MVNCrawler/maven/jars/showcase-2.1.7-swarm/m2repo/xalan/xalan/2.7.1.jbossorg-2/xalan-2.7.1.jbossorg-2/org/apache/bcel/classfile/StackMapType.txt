Compiled from "StackMapType.java"
public final class org.apache.bcel.classfile.StackMapType implements java.lang.Cloneable {
  private byte type;

  private int index;

  private org.apache.bcel.classfile.ConstantPool constant_pool;

  org.apache.bcel.classfile.StackMapType(java.io.DataInputStream, org.apache.bcel.classfile.ConstantPool) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method java/io/DataInputStream.readByte:()B
       5: iconst_m1
       6: aload_2
       7: invokespecial #2                  // Method "<init>":(BILorg/apache/bcel/classfile/ConstantPool;)V
      10: aload_0
      11: invokevirtual #3                  // Method hasIndex:()Z
      14: ifeq          25
      17: aload_0
      18: aload_1
      19: invokevirtual #4                  // Method java/io/DataInputStream.readShort:()S
      22: invokevirtual #5                  // Method setIndex:(I)V
      25: aload_0
      26: aload_2
      27: invokevirtual #6                  // Method setConstantPool:(Lorg/apache/bcel/classfile/ConstantPool;)V
      30: return

  public org.apache.bcel.classfile.StackMapType(byte, int, org.apache.bcel.classfile.ConstantPool);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #8                  // Field index:I
       9: aload_0
      10: iload_1
      11: invokevirtual #9                  // Method setType:(B)V
      14: aload_0
      15: iload_2
      16: invokevirtual #5                  // Method setIndex:(I)V
      19: aload_0
      20: aload_3
      21: invokevirtual #6                  // Method setConstantPool:(Lorg/apache/bcel/classfile/ConstantPool;)V
      24: return

  public void setType(byte);
    Code:
       0: iload_1
       1: iflt          10
       4: iload_1
       5: bipush        8
       7: if_icmple     37
      10: new           #10                 // class java/lang/RuntimeException
      13: dup
      14: new           #11                 // class java/lang/StringBuffer
      17: dup
      18: invokespecial #12                 // Method java/lang/StringBuffer."<init>":()V
      21: ldc           #13                 // String Illegal type for StackMapType:
      23: invokevirtual #14                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      26: iload_1
      27: invokevirtual #15                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      30: invokevirtual #16                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      33: invokespecial #17                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: iload_1
      39: putfield      #18                 // Field type:B
      42: return

  public byte getType();
    Code:
       0: aload_0
       1: getfield      #18                 // Field type:B
       4: ireturn

  public void setIndex(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field index:I
       5: return

  public int getIndex();
    Code:
       0: aload_0
       1: getfield      #8                  // Field index:I
       4: ireturn

  public final void dump(java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #18                 // Field type:B
       5: invokevirtual #19                 // Method java/io/DataOutputStream.writeByte:(I)V
       8: aload_0
       9: invokevirtual #3                  // Method hasIndex:()Z
      12: ifeq          23
      15: aload_1
      16: aload_0
      17: invokevirtual #20                 // Method getIndex:()I
      20: invokevirtual #21                 // Method java/io/DataOutputStream.writeShort:(I)V
      23: return

  public final boolean hasIndex();
    Code:
       0: aload_0
       1: getfield      #18                 // Field type:B
       4: bipush        7
       6: if_icmpeq     18
       9: aload_0
      10: getfield      #18                 // Field type:B
      13: bipush        8
      15: if_icmpne     22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  private java.lang.String printIndex();
    Code:
       0: aload_0
       1: getfield      #18                 // Field type:B
       4: bipush        7
       6: if_icmpne     41
       9: new           #11                 // class java/lang/StringBuffer
      12: dup
      13: invokespecial #12                 // Method java/lang/StringBuffer."<init>":()V
      16: ldc           #22                 // String , class=
      18: invokevirtual #14                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      21: aload_0
      22: getfield      #23                 // Field constant_pool:Lorg/apache/bcel/classfile/ConstantPool;
      25: aload_0
      26: getfield      #8                  // Field index:I
      29: bipush        7
      31: invokevirtual #24                 // Method org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;
      34: invokevirtual #14                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      37: invokevirtual #16                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      40: areturn
      41: aload_0
      42: getfield      #18                 // Field type:B
      45: bipush        8
      47: if_icmpne     73
      50: new           #11                 // class java/lang/StringBuffer
      53: dup
      54: invokespecial #12                 // Method java/lang/StringBuffer."<init>":()V
      57: ldc           #25                 // String , offset=
      59: invokevirtual #14                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      62: aload_0
      63: getfield      #8                  // Field index:I
      66: invokevirtual #15                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      69: invokevirtual #16                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      72: areturn
      73: ldc           #26                 // String
      75: areturn

  public final java.lang.String toString();
    Code:
       0: new           #11                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #12                 // Method java/lang/StringBuffer."<init>":()V
       7: ldc           #27                 // String (type=
       9: invokevirtual #14                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      12: getstatic     #28                 // Field org/apache/bcel/Constants.ITEM_NAMES:[Ljava/lang/String;
      15: aload_0
      16: getfield      #18                 // Field type:B
      19: aaload
      20: invokevirtual #14                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      23: aload_0
      24: invokespecial #29                 // Method printIndex:()Ljava/lang/String;
      27: invokevirtual #14                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      30: ldc           #30                 // String )
      32: invokevirtual #14                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      35: invokevirtual #16                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      38: areturn

  public org.apache.bcel.classfile.StackMapType copy();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #32                 // class org/apache/bcel/classfile/StackMapType
       7: areturn
       8: astore_1
       9: aconst_null
      10: areturn
    Exception table:
       from    to  target type
           0     8     8   Class java/lang/CloneNotSupportedException

  public final org.apache.bcel.classfile.ConstantPool getConstantPool();
    Code:
       0: aload_0
       1: getfield      #23                 // Field constant_pool:Lorg/apache/bcel/classfile/ConstantPool;
       4: areturn

  public final void setConstantPool(org.apache.bcel.classfile.ConstantPool);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field constant_pool:Lorg/apache/bcel/classfile/ConstantPool;
       5: return
}
