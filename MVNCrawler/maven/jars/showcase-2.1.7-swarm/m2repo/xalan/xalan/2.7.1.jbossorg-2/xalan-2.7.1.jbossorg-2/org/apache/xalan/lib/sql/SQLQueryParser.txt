Compiled from "SQLQueryParser.java"
public class org.apache.xalan.lib.sql.SQLQueryParser {
  private boolean m_InlineVariables;

  private boolean m_IsCallable;

  private java.lang.String m_OrigQuery;

  private java.lang.StringBuffer m_ParsedQuery;

  private java.util.Vector m_Parameters;

  private boolean m_hasOutput;

  private boolean m_HasParameters;

  public static final int NO_OVERRIDE;

  public static final int NO_INLINE_PARSER;

  public static final int INLINE_PARSER;

  public org.apache.xalan.lib.sql.SQLQueryParser();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field m_InlineVariables:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field m_IsCallable:Z
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field m_OrigQuery:Ljava/lang/String;
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field m_ParsedQuery:Ljava/lang/StringBuffer;
      24: aload_0
      25: aconst_null
      26: putfield      #6                  // Field m_Parameters:Ljava/util/Vector;
      29: aload_0
      30: iconst_0
      31: putfield      #7                  // Field m_hasOutput:Z
      34: aload_0
      35: invokespecial #8                  // Method init:()V
      38: return

  private org.apache.xalan.lib.sql.SQLQueryParser(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field m_InlineVariables:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field m_IsCallable:Z
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field m_OrigQuery:Ljava/lang/String;
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field m_ParsedQuery:Ljava/lang/StringBuffer;
      24: aload_0
      25: aconst_null
      26: putfield      #6                  // Field m_Parameters:Ljava/util/Vector;
      29: aload_0
      30: iconst_0
      31: putfield      #7                  // Field m_hasOutput:Z
      34: aload_0
      35: aload_1
      36: putfield      #4                  // Field m_OrigQuery:Ljava/lang/String;
      39: return

  private void init();
    Code:
       0: return

  public org.apache.xalan.lib.sql.SQLQueryParser parse(org.apache.xalan.lib.sql.XConnection, java.lang.String, int);
    Code:
       0: new           #9                  // class org/apache/xalan/lib/sql/SQLQueryParser
       3: dup
       4: aload_2
       5: invokespecial #10                 // Method "<init>":(Ljava/lang/String;)V
       8: astore        4
      10: aload         4
      12: aload_1
      13: iload_3
      14: invokespecial #11                 // Method parse:(Lorg/apache/xalan/lib/sql/XConnection;I)V
      17: aload         4
      19: areturn

  private void parse(org.apache.xalan.lib.sql.XConnection, int);
    Code:
       0: aload_0
       1: ldc           #12                 // String true
       3: aload_1
       4: ldc           #13                 // String inline-variables
       6: invokevirtual #14                 // Method org/apache/xalan/lib/sql/XConnection.getFeature:(Ljava/lang/String;)Ljava/lang/String;
       9: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: putfield      #2                  // Field m_InlineVariables:Z
      15: iload_2
      16: iconst_1
      17: if_icmpne     28
      20: aload_0
      21: iconst_0
      22: putfield      #2                  // Field m_InlineVariables:Z
      25: goto          38
      28: iload_2
      29: iconst_2
      30: if_icmpne     38
      33: aload_0
      34: iconst_1
      35: putfield      #2                  // Field m_InlineVariables:Z
      38: aload_0
      39: getfield      #2                  // Field m_InlineVariables:Z
      42: ifeq          49
      45: aload_0
      46: invokevirtual #16                 // Method inlineParser:()V
      49: return

  public boolean hasParameters();
    Code:
       0: aload_0
       1: getfield      #17                 // Field m_HasParameters:Z
       4: ireturn

  public boolean isCallable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field m_IsCallable:Z
       4: ireturn

  public java.util.Vector getParameters();
    Code:
       0: aload_0
       1: getfield      #6                  // Field m_Parameters:Ljava/util/Vector;
       4: areturn

  public void setParameters(java.util.Vector);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #17                 // Field m_HasParameters:Z
       5: aload_0
       6: aload_1
       7: putfield      #6                  // Field m_Parameters:Ljava/util/Vector;
      10: return

  public java.lang.String getSQLQuery();
    Code:
       0: aload_0
       1: getfield      #2                  // Field m_InlineVariables:Z
       4: ifeq          15
       7: aload_0
       8: getfield      #5                  // Field m_ParsedQuery:Ljava/lang/StringBuffer;
      11: invokevirtual #18                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      14: areturn
      15: aload_0
      16: getfield      #4                  // Field m_OrigQuery:Ljava/lang/String;
      19: areturn

  public void populateStatement(java.sql.PreparedStatement, org.apache.xalan.extensions.ExpressionContext);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: aload_0
       4: getfield      #6                  // Field m_Parameters:Ljava/util/Vector;
       7: invokevirtual #19                 // Method java/util/Vector.size:()I
      10: if_icmpge     155
      13: aload_0
      14: getfield      #6                  // Field m_Parameters:Ljava/util/Vector;
      17: iload_3
      18: invokevirtual #20                 // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      21: checkcast     #21                 // class org/apache/xalan/lib/sql/QueryParameter
      24: astore        4
      26: aload_0
      27: getfield      #2                  // Field m_InlineVariables:Z
      30: ifeq          98
      33: aload_2
      34: new           #22                 // class org/apache/xml/utils/QName
      37: dup
      38: aload         4
      40: invokevirtual #23                 // Method org/apache/xalan/lib/sql/QueryParameter.getName:()Ljava/lang/String;
      43: invokespecial #24                 // Method org/apache/xml/utils/QName."<init>":(Ljava/lang/String;)V
      46: invokeinterface #25,  2           // InterfaceMethod org/apache/xalan/extensions/ExpressionContext.getVariableOrParam:(Lorg/apache/xml/utils/QName;)Lorg/apache/xpath/objects/XObject;
      51: astore        5
      53: aload         5
      55: ifnull        81
      58: aload_1
      59: iload_3
      60: iconst_1
      61: iadd
      62: aload         5
      64: invokevirtual #26                 // Method org/apache/xpath/objects/XObject.object:()Ljava/lang/Object;
      67: aload         4
      69: invokevirtual #27                 // Method org/apache/xalan/lib/sql/QueryParameter.getType:()I
      72: iconst_4
      73: invokeinterface #28,  5           // InterfaceMethod java/sql/PreparedStatement.setObject:(ILjava/lang/Object;II)V
      78: goto          95
      81: aload_1
      82: iload_3
      83: iconst_1
      84: iadd
      85: aload         4
      87: invokevirtual #27                 // Method org/apache/xalan/lib/sql/QueryParameter.getType:()I
      90: invokeinterface #29,  3           // InterfaceMethod java/sql/PreparedStatement.setNull:(II)V
      95: goto          144
      98: aload         4
     100: invokevirtual #30                 // Method org/apache/xalan/lib/sql/QueryParameter.getValue:()Ljava/lang/String;
     103: astore        5
     105: aload         5
     107: ifnull        130
     110: aload_1
     111: iload_3
     112: iconst_1
     113: iadd
     114: aload         5
     116: aload         4
     118: invokevirtual #27                 // Method org/apache/xalan/lib/sql/QueryParameter.getType:()I
     121: iconst_4
     122: invokeinterface #28,  5           // InterfaceMethod java/sql/PreparedStatement.setObject:(ILjava/lang/Object;II)V
     127: goto          144
     130: aload_1
     131: iload_3
     132: iconst_1
     133: iadd
     134: aload         4
     136: invokevirtual #27                 // Method org/apache/xalan/lib/sql/QueryParameter.getType:()I
     139: invokeinterface #29,  3           // InterfaceMethod java/sql/PreparedStatement.setNull:(II)V
     144: goto          149
     147: astore        5
     149: iinc          3, 1
     152: goto          2
     155: return
    Exception table:
       from    to  target type
          26   144   147   Class java/lang/Exception

  public void registerOutputParameters(java.sql.CallableStatement) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field m_IsCallable:Z
       4: ifeq          65
       7: aload_0
       8: getfield      #7                  // Field m_hasOutput:Z
      11: ifeq          65
      14: iconst_0
      15: istore_2
      16: iload_2
      17: aload_0
      18: getfield      #6                  // Field m_Parameters:Ljava/util/Vector;
      21: invokevirtual #19                 // Method java/util/Vector.size:()I
      24: if_icmpge     65
      27: aload_0
      28: getfield      #6                  // Field m_Parameters:Ljava/util/Vector;
      31: iload_2
      32: invokevirtual #20                 // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      35: checkcast     #21                 // class org/apache/xalan/lib/sql/QueryParameter
      38: astore_3
      39: aload_3
      40: invokevirtual #32                 // Method org/apache/xalan/lib/sql/QueryParameter.isOutput:()Z
      43: ifeq          59
      46: aload_1
      47: iload_2
      48: iconst_1
      49: iadd
      50: aload_3
      51: invokevirtual #27                 // Method org/apache/xalan/lib/sql/QueryParameter.getType:()I
      54: invokeinterface #33,  3           // InterfaceMethod java/sql/CallableStatement.registerOutParameter:(II)V
      59: iinc          2, 1
      62: goto          16
      65: return

  protected void inlineParser();
    Code:
       0: aconst_null
       1: astore_1
       2: iconst_0
       3: istore_2
       4: new           #34                 // class java/lang/StringBuffer
       7: dup
       8: invokespecial #35                 // Method java/lang/StringBuffer."<init>":()V
      11: astore_3
      12: iconst_1
      13: istore        4
      15: aload_0
      16: getfield      #6                  // Field m_Parameters:Ljava/util/Vector;
      19: ifnonnull     33
      22: aload_0
      23: new           #36                 // class java/util/Vector
      26: dup
      27: invokespecial #37                 // Method java/util/Vector."<init>":()V
      30: putfield      #6                  // Field m_Parameters:Ljava/util/Vector;
      33: aload_0
      34: getfield      #5                  // Field m_ParsedQuery:Ljava/lang/StringBuffer;
      37: ifnonnull     51
      40: aload_0
      41: new           #34                 // class java/lang/StringBuffer
      44: dup
      45: invokespecial #35                 // Method java/lang/StringBuffer."<init>":()V
      48: putfield      #5                  // Field m_ParsedQuery:Ljava/lang/StringBuffer;
      51: iconst_0
      52: istore        5
      54: iload         5
      56: aload_0
      57: getfield      #4                  // Field m_OrigQuery:Ljava/lang/String;
      60: invokevirtual #38                 // Method java/lang/String.length:()I
      63: if_icmpge     615
      66: aload_0
      67: getfield      #4                  // Field m_OrigQuery:Ljava/lang/String;
      70: iload         5
      72: invokevirtual #39                 // Method java/lang/String.charAt:(I)C
      75: istore        6
      77: iload_2
      78: tableswitch   { // 0 to 8
                     0: 128
                     1: 194
                     2: 228
                     3: 243
                     4: 351
                     5: 363
                     6: 454
                     7: 467
                     8: 533
               default: 609
          }
     128: iload         6
     130: bipush        39
     132: if_icmpne     140
     135: iconst_1
     136: istore_2
     137: goto          181
     140: iload         6
     142: bipush        63
     144: if_icmpne     152
     147: iconst_4
     148: istore_2
     149: goto          181
     152: iload         4
     154: ifeq          181
     157: iload         6
     159: invokestatic  #40                 // Method java/lang/Character.isLetterOrDigit:(C)Z
     162: ifne          172
     165: iload         6
     167: bipush        35
     169: if_icmpne     181
     172: aload_3
     173: iload         6
     175: invokevirtual #41                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     178: pop
     179: iconst_3
     180: istore_2
     181: aload_0
     182: getfield      #5                  // Field m_ParsedQuery:Ljava/lang/StringBuffer;
     185: iload         6
     187: invokevirtual #41                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     190: pop
     191: goto          609
     194: iload         6
     196: bipush        39
     198: if_icmpne     206
     201: iconst_0
     202: istore_2
     203: goto          215
     206: iload         6
     208: bipush        92
     210: if_icmpne     215
     213: iconst_2
     214: istore_2
     215: aload_0
     216: getfield      #5                  // Field m_ParsedQuery:Ljava/lang/StringBuffer;
     219: iload         6
     221: invokevirtual #41                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     224: pop
     225: goto          609
     228: iconst_1
     229: istore_2
     230: aload_0
     231: getfield      #5                  // Field m_ParsedQuery:Ljava/lang/StringBuffer;
     234: iload         6
     236: invokevirtual #41                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     239: pop
     240: goto          609
     243: iload         6
     245: invokestatic  #40                 // Method java/lang/Character.isLetterOrDigit:(C)Z
     248: ifne          265
     251: iload         6
     253: bipush        35
     255: if_icmpeq     265
     258: iload         6
     260: bipush        95
     262: if_icmpne     275
     265: aload_3
     266: iload         6
     268: invokevirtual #41                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     271: pop
     272: goto          338
     275: aload_3
     276: invokevirtual #18                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     279: ldc           #42                 // String call
     281: invokevirtual #43                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     284: ifeq          301
     287: aload_0
     288: iconst_1
     289: putfield      #3                  // Field m_IsCallable:Z
     292: aload_1
     293: ifnull        301
     296: aload_1
     297: iconst_1
     298: invokevirtual #44                 // Method org/apache/xalan/lib/sql/QueryParameter.setIsOutput:(Z)V
     301: iconst_0
     302: istore        4
     304: new           #34                 // class java/lang/StringBuffer
     307: dup
     308: invokespecial #35                 // Method java/lang/StringBuffer."<init>":()V
     311: astore_3
     312: iload         6
     314: bipush        39
     316: if_icmpne     324
     319: iconst_1
     320: istore_2
     321: goto          338
     324: iload         6
     326: bipush        63
     328: if_icmpne     336
     331: iconst_4
     332: istore_2
     333: goto          338
     336: iconst_0
     337: istore_2
     338: aload_0
     339: getfield      #5                  // Field m_ParsedQuery:Ljava/lang/StringBuffer;
     342: iload         6
     344: invokevirtual #41                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     347: pop
     348: goto          609
     351: iload         6
     353: bipush        91
     355: if_icmpne     609
     358: iconst_5
     359: istore_2
     360: goto          609
     363: iload         6
     365: invokestatic  #45                 // Method java/lang/Character.isWhitespace:(C)Z
     368: ifne          391
     371: iload         6
     373: bipush        61
     375: if_icmpeq     391
     378: aload_3
     379: iload         6
     381: invokestatic  #46                 // Method java/lang/Character.toUpperCase:(C)C
     384: invokevirtual #41                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     387: pop
     388: goto          609
     391: aload_3
     392: invokevirtual #47                 // Method java/lang/StringBuffer.length:()I
     395: ifle          609
     398: aload_0
     399: iconst_1
     400: putfield      #17                 // Field m_HasParameters:Z
     403: new           #21                 // class org/apache/xalan/lib/sql/QueryParameter
     406: dup
     407: invokespecial #48                 // Method org/apache/xalan/lib/sql/QueryParameter."<init>":()V
     410: astore_1
     411: aload_1
     412: aload_3
     413: invokevirtual #18                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     416: invokevirtual #49                 // Method org/apache/xalan/lib/sql/QueryParameter.setTypeName:(Ljava/lang/String;)V
     419: aload_0
     420: getfield      #6                  // Field m_Parameters:Ljava/util/Vector;
     423: aload_1
     424: invokevirtual #50                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
     427: new           #34                 // class java/lang/StringBuffer
     430: dup
     431: invokespecial #35                 // Method java/lang/StringBuffer."<init>":()V
     434: astore_3
     435: iload         6
     437: bipush        61
     439: if_icmpne     448
     442: bipush        7
     444: istore_2
     445: goto          609
     448: bipush        6
     450: istore_2
     451: goto          609
     454: iload         6
     456: bipush        61
     458: if_icmpne     609
     461: bipush        7
     463: istore_2
     464: goto          609
     467: iload         6
     469: invokestatic  #45                 // Method java/lang/Character.isWhitespace:(C)Z
     472: ifne          492
     475: iload         6
     477: bipush        93
     479: if_icmpeq     492
     482: aload_3
     483: iload         6
     485: invokevirtual #41                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     488: pop
     489: goto          609
     492: aload_3
     493: invokevirtual #47                 // Method java/lang/StringBuffer.length:()I
     496: ifle          609
     499: aload_1
     500: aload_3
     501: invokevirtual #18                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     504: invokevirtual #51                 // Method org/apache/xalan/lib/sql/QueryParameter.setName:(Ljava/lang/String;)V
     507: new           #34                 // class java/lang/StringBuffer
     510: dup
     511: invokespecial #35                 // Method java/lang/StringBuffer."<init>":()V
     514: astore_3
     515: iload         6
     517: bipush        93
     519: if_icmpne     527
     522: iconst_0
     523: istore_2
     524: goto          609
     527: bipush        8
     529: istore_2
     530: goto          609
     533: iload         6
     535: invokestatic  #45                 // Method java/lang/Character.isWhitespace:(C)Z
     538: ifne          558
     541: iload         6
     543: bipush        93
     545: if_icmpeq     558
     548: aload_3
     549: iload         6
     551: invokevirtual #41                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     554: pop
     555: goto          609
     558: aload_3
     559: invokevirtual #47                 // Method java/lang/StringBuffer.length:()I
     562: ifle          609
     565: aload_3
     566: iconst_3
     567: invokevirtual #52                 // Method java/lang/StringBuffer.setLength:(I)V
     570: aload_3
     571: invokevirtual #18                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     574: ldc           #53                 // String OUT
     576: invokevirtual #43                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     579: ifeq          592
     582: aload_1
     583: iconst_1
     584: invokevirtual #44                 // Method org/apache/xalan/lib/sql/QueryParameter.setIsOutput:(Z)V
     587: aload_0
     588: iconst_1
     589: putfield      #7                  // Field m_hasOutput:Z
     592: new           #34                 // class java/lang/StringBuffer
     595: dup
     596: invokespecial #35                 // Method java/lang/StringBuffer."<init>":()V
     599: astore_3
     600: iload         6
     602: bipush        93
     604: if_icmpne     609
     607: iconst_0
     608: istore_2
     609: iinc          5, 1
     612: goto          54
     615: aload_0
     616: getfield      #3                  // Field m_IsCallable:Z
     619: ifeq          643
     622: aload_0
     623: getfield      #5                  // Field m_ParsedQuery:Ljava/lang/StringBuffer;
     626: iconst_0
     627: bipush        123
     629: invokevirtual #54                 // Method java/lang/StringBuffer.insert:(IC)Ljava/lang/StringBuffer;
     632: pop
     633: aload_0
     634: getfield      #5                  // Field m_ParsedQuery:Ljava/lang/StringBuffer;
     637: bipush        125
     639: invokevirtual #41                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     642: pop
     643: return
}
