Compiled from "DefinitionImpl.java"
public class com.ibm.wsdl.DefinitionImpl extends com.ibm.wsdl.AbstractWSDLElement implements javax.wsdl.Definition {
  protected java.lang.String documentBaseURI;

  protected javax.xml.namespace.QName name;

  protected java.lang.String targetNamespace;

  protected java.util.Map namespaces;

  protected java.util.Map imports;

  protected javax.wsdl.Types types;

  protected java.util.Map messages;

  protected java.util.Map bindings;

  protected java.util.Map portTypes;

  protected java.util.Map services;

  protected java.util.List nativeAttributeNames;

  protected javax.wsdl.extensions.ExtensionRegistry extReg;

  public static final long serialVersionUID;

  public com.ibm.wsdl.DefinitionImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/ibm/wsdl/AbstractWSDLElement."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field documentBaseURI:Ljava/lang/String;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field name:Ljavax/xml/namespace/QName;
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field targetNamespace:Ljava/lang/String;
      19: aload_0
      20: new           #5                  // class java/util/HashMap
      23: dup
      24: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      27: putfield      #7                  // Field namespaces:Ljava/util/Map;
      30: aload_0
      31: new           #5                  // class java/util/HashMap
      34: dup
      35: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      38: putfield      #8                  // Field imports:Ljava/util/Map;
      41: aload_0
      42: aconst_null
      43: putfield      #9                  // Field types:Ljavax/wsdl/Types;
      46: aload_0
      47: new           #5                  // class java/util/HashMap
      50: dup
      51: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      54: putfield      #10                 // Field messages:Ljava/util/Map;
      57: aload_0
      58: new           #5                  // class java/util/HashMap
      61: dup
      62: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      65: putfield      #11                 // Field bindings:Ljava/util/Map;
      68: aload_0
      69: new           #5                  // class java/util/HashMap
      72: dup
      73: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      76: putfield      #12                 // Field portTypes:Ljava/util/Map;
      79: aload_0
      80: new           #5                  // class java/util/HashMap
      83: dup
      84: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      87: putfield      #13                 // Field services:Ljava/util/Map;
      90: aload_0
      91: getstatic     #14                 // Field com/ibm/wsdl/Constants.DEFINITION_ATTR_NAMES:[Ljava/lang/String;
      94: invokestatic  #15                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      97: putfield      #16                 // Field nativeAttributeNames:Ljava/util/List;
     100: aload_0
     101: aconst_null
     102: putfield      #17                 // Field extReg:Ljavax/wsdl/extensions/ExtensionRegistry;
     105: return

  public void setDocumentBaseURI(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field documentBaseURI:Ljava/lang/String;
       5: return

  public java.lang.String getDocumentBaseURI();
    Code:
       0: aload_0
       1: getfield      #2                  // Field documentBaseURI:Ljava/lang/String;
       4: areturn

  public void setQName(javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field name:Ljavax/xml/namespace/QName;
       5: return

  public javax.xml.namespace.QName getQName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field name:Ljavax/xml/namespace/QName;
       4: areturn

  public void setTargetNamespace(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field targetNamespace:Ljava/lang/String;
       5: return

  public java.lang.String getTargetNamespace();
    Code:
       0: aload_0
       1: getfield      #4                  // Field targetNamespace:Ljava/lang/String;
       4: areturn

  public void addNamespace(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     7
       4: ldc           #18                 // String
       6: astore_1
       7: aload_2
       8: ifnull        26
      11: aload_0
      12: getfield      #7                  // Field namespaces:Ljava/util/Map;
      15: aload_1
      16: aload_2
      17: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: goto          37
      26: aload_0
      27: getfield      #7                  // Field namespaces:Ljava/util/Map;
      30: aload_1
      31: invokeinterface #20,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: return

  public java.lang.String getNamespace(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     7
       4: ldc           #18                 // String
       6: astore_1
       7: aload_0
       8: getfield      #7                  // Field namespaces:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #22                 // class java/lang/String
      20: areturn

  public java.lang.String removeNamespace(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     7
       4: ldc           #18                 // String
       6: astore_1
       7: aload_0
       8: getfield      #7                  // Field namespaces:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #20,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #22                 // class java/lang/String
      20: areturn

  public java.lang.String getPrefix(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #7                  // Field namespaces:Ljava/util/Map;
      10: invokeinterface #23,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      15: invokeinterface #24,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          77
      30: aload_2
      31: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #27                 // class java/util/Map$Entry
      39: astore_3
      40: aload_3
      41: invokeinterface #28,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      46: checkcast     #22                 // class java/lang/String
      49: astore        4
      51: aload_3
      52: invokeinterface #29,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      57: checkcast     #22                 // class java/lang/String
      60: astore        5
      62: aload_1
      63: aload         5
      65: invokevirtual #30                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      68: ifeq          74
      71: aload         4
      73: areturn
      74: goto          21
      77: aconst_null
      78: areturn

  public java.util.Map getNamespaces();
    Code:
       0: aload_0
       1: getfield      #7                  // Field namespaces:Ljava/util/Map;
       4: areturn

  public void setTypes(javax.wsdl.Types);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field types:Ljavax/wsdl/Types;
       5: return

  public javax.wsdl.Types getTypes();
    Code:
       0: aload_0
       1: getfield      #9                  // Field types:Ljavax/wsdl/Types;
       4: areturn

  public void addImport(javax.wsdl.Import);
    Code:
       0: aload_1
       1: invokeinterface #31,  1           // InterfaceMethod javax/wsdl/Import.getNamespaceURI:()Ljava/lang/String;
       6: astore_2
       7: aload_0
       8: getfield      #8                  // Field imports:Ljava/util/Map;
      11: aload_2
      12: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #32                 // class java/util/List
      20: astore_3
      21: aload_3
      22: ifnonnull     45
      25: new           #33                 // class java/util/Vector
      28: dup
      29: invokespecial #34                 // Method java/util/Vector."<init>":()V
      32: astore_3
      33: aload_0
      34: getfield      #8                  // Field imports:Ljava/util/Map;
      37: aload_2
      38: aload_3
      39: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      44: pop
      45: aload_3
      46: aload_1
      47: invokeinterface #35,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      52: pop
      53: return

  public javax.wsdl.Import removeImport(javax.wsdl.Import);
    Code:
       0: aload_1
       1: invokeinterface #31,  1           // InterfaceMethod javax/wsdl/Import.getNamespaceURI:()Ljava/lang/String;
       6: astore_2
       7: aload_0
       8: getfield      #8                  // Field imports:Ljava/util/Map;
      11: aload_2
      12: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #32                 // class java/util/List
      20: astore_3
      21: aconst_null
      22: astore        4
      24: aload_3
      25: ifnull        41
      28: aload_3
      29: aload_1
      30: invokeinterface #36,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      35: ifeq          41
      38: aload_1
      39: astore        4
      41: aload         4
      43: areturn

  public java.util.List getImports(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field imports:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #32                 // class java/util/List
      13: areturn

  public java.util.Map getImports();
    Code:
       0: aload_0
       1: getfield      #8                  // Field imports:Ljava/util/Map;
       4: areturn

  public void addMessage(javax.wsdl.Message);
    Code:
       0: aload_0
       1: getfield      #10                 // Field messages:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #37,  1           // InterfaceMethod javax/wsdl/Message.getQName:()Ljavax/xml/namespace/QName;
      10: aload_1
      11: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: return

  public javax.wsdl.Message getMessage(javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: getfield      #10                 // Field messages:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #38                 // class javax/wsdl/Message
      13: astore_2
      14: aload_2
      15: ifnonnull     33
      18: aload_1
      19: ifnull        33
      22: aload_0
      23: ldc           #39                 // String message
      25: aload_1
      26: invokespecial #40                 // Method getFromImports:(Ljava/lang/String;Ljavax/xml/namespace/QName;)Ljava/lang/Object;
      29: checkcast     #38                 // class javax/wsdl/Message
      32: astore_2
      33: aload_2
      34: areturn

  public javax.wsdl.Message removeMessage(javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: getfield      #10                 // Field messages:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #20,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #38                 // class javax/wsdl/Message
      13: areturn

  public java.util.Map getMessages();
    Code:
       0: aload_0
       1: getfield      #10                 // Field messages:Ljava/util/Map;
       4: areturn

  public void addBinding(javax.wsdl.Binding);
    Code:
       0: aload_0
       1: getfield      #11                 // Field bindings:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #41,  1           // InterfaceMethod javax/wsdl/Binding.getQName:()Ljavax/xml/namespace/QName;
      10: aload_1
      11: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: return

  public javax.wsdl.Binding getBinding(javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: getfield      #11                 // Field bindings:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #42                 // class javax/wsdl/Binding
      13: astore_2
      14: aload_2
      15: ifnonnull     33
      18: aload_1
      19: ifnull        33
      22: aload_0
      23: ldc           #43                 // String binding
      25: aload_1
      26: invokespecial #40                 // Method getFromImports:(Ljava/lang/String;Ljavax/xml/namespace/QName;)Ljava/lang/Object;
      29: checkcast     #42                 // class javax/wsdl/Binding
      32: astore_2
      33: aload_2
      34: areturn

  public javax.wsdl.Binding removeBinding(javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: getfield      #11                 // Field bindings:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #20,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #42                 // class javax/wsdl/Binding
      13: areturn

  public java.util.Map getBindings();
    Code:
       0: aload_0
       1: getfield      #11                 // Field bindings:Ljava/util/Map;
       4: areturn

  public void addPortType(javax.wsdl.PortType);
    Code:
       0: aload_0
       1: getfield      #12                 // Field portTypes:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #44,  1           // InterfaceMethod javax/wsdl/PortType.getQName:()Ljavax/xml/namespace/QName;
      10: aload_1
      11: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: return

  public javax.wsdl.PortType getPortType(javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: getfield      #12                 // Field portTypes:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #45                 // class javax/wsdl/PortType
      13: astore_2
      14: aload_2
      15: ifnonnull     33
      18: aload_1
      19: ifnull        33
      22: aload_0
      23: ldc           #46                 // String portType
      25: aload_1
      26: invokespecial #40                 // Method getFromImports:(Ljava/lang/String;Ljavax/xml/namespace/QName;)Ljava/lang/Object;
      29: checkcast     #45                 // class javax/wsdl/PortType
      32: astore_2
      33: aload_2
      34: areturn

  public javax.wsdl.PortType removePortType(javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: getfield      #12                 // Field portTypes:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #20,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #45                 // class javax/wsdl/PortType
      13: areturn

  public java.util.Map getPortTypes();
    Code:
       0: aload_0
       1: getfield      #12                 // Field portTypes:Ljava/util/Map;
       4: areturn

  public void addService(javax.wsdl.Service);
    Code:
       0: aload_0
       1: getfield      #13                 // Field services:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #47,  1           // InterfaceMethod javax/wsdl/Service.getQName:()Ljavax/xml/namespace/QName;
      10: aload_1
      11: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: return

  public javax.wsdl.Service getService(javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: getfield      #13                 // Field services:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #48                 // class javax/wsdl/Service
      13: astore_2
      14: aload_2
      15: ifnonnull     33
      18: aload_1
      19: ifnull        33
      22: aload_0
      23: ldc           #49                 // String service
      25: aload_1
      26: invokespecial #40                 // Method getFromImports:(Ljava/lang/String;Ljavax/xml/namespace/QName;)Ljava/lang/Object;
      29: checkcast     #48                 // class javax/wsdl/Service
      32: astore_2
      33: aload_2
      34: areturn

  public javax.wsdl.Service removeService(javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: getfield      #13                 // Field services:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #20,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #48                 // class javax/wsdl/Service
      13: areturn

  public java.util.Map getServices();
    Code:
       0: aload_0
       1: getfield      #13                 // Field services:Ljava/util/Map;
       4: areturn

  public javax.wsdl.Binding createBinding();
    Code:
       0: new           #50                 // class com/ibm/wsdl/BindingImpl
       3: dup
       4: invokespecial #51                 // Method com/ibm/wsdl/BindingImpl."<init>":()V
       7: areturn

  public javax.wsdl.BindingFault createBindingFault();
    Code:
       0: new           #52                 // class com/ibm/wsdl/BindingFaultImpl
       3: dup
       4: invokespecial #53                 // Method com/ibm/wsdl/BindingFaultImpl."<init>":()V
       7: areturn

  public javax.wsdl.BindingInput createBindingInput();
    Code:
       0: new           #54                 // class com/ibm/wsdl/BindingInputImpl
       3: dup
       4: invokespecial #55                 // Method com/ibm/wsdl/BindingInputImpl."<init>":()V
       7: areturn

  public javax.wsdl.BindingOperation createBindingOperation();
    Code:
       0: new           #56                 // class com/ibm/wsdl/BindingOperationImpl
       3: dup
       4: invokespecial #57                 // Method com/ibm/wsdl/BindingOperationImpl."<init>":()V
       7: areturn

  public javax.wsdl.BindingOutput createBindingOutput();
    Code:
       0: new           #58                 // class com/ibm/wsdl/BindingOutputImpl
       3: dup
       4: invokespecial #59                 // Method com/ibm/wsdl/BindingOutputImpl."<init>":()V
       7: areturn

  public javax.wsdl.Fault createFault();
    Code:
       0: new           #60                 // class com/ibm/wsdl/FaultImpl
       3: dup
       4: invokespecial #61                 // Method com/ibm/wsdl/FaultImpl."<init>":()V
       7: areturn

  public javax.wsdl.Import createImport();
    Code:
       0: new           #62                 // class com/ibm/wsdl/ImportImpl
       3: dup
       4: invokespecial #63                 // Method com/ibm/wsdl/ImportImpl."<init>":()V
       7: areturn

  public javax.wsdl.Input createInput();
    Code:
       0: new           #64                 // class com/ibm/wsdl/InputImpl
       3: dup
       4: invokespecial #65                 // Method com/ibm/wsdl/InputImpl."<init>":()V
       7: areturn

  public javax.wsdl.Message createMessage();
    Code:
       0: new           #66                 // class com/ibm/wsdl/MessageImpl
       3: dup
       4: invokespecial #67                 // Method com/ibm/wsdl/MessageImpl."<init>":()V
       7: areturn

  public javax.wsdl.Operation createOperation();
    Code:
       0: new           #68                 // class com/ibm/wsdl/OperationImpl
       3: dup
       4: invokespecial #69                 // Method com/ibm/wsdl/OperationImpl."<init>":()V
       7: areturn

  public javax.wsdl.Output createOutput();
    Code:
       0: new           #70                 // class com/ibm/wsdl/OutputImpl
       3: dup
       4: invokespecial #71                 // Method com/ibm/wsdl/OutputImpl."<init>":()V
       7: areturn

  public javax.wsdl.Part createPart();
    Code:
       0: new           #72                 // class com/ibm/wsdl/PartImpl
       3: dup
       4: invokespecial #73                 // Method com/ibm/wsdl/PartImpl."<init>":()V
       7: areturn

  public javax.wsdl.Port createPort();
    Code:
       0: new           #74                 // class com/ibm/wsdl/PortImpl
       3: dup
       4: invokespecial #75                 // Method com/ibm/wsdl/PortImpl."<init>":()V
       7: areturn

  public javax.wsdl.PortType createPortType();
    Code:
       0: new           #76                 // class com/ibm/wsdl/PortTypeImpl
       3: dup
       4: invokespecial #77                 // Method com/ibm/wsdl/PortTypeImpl."<init>":()V
       7: areturn

  public javax.wsdl.Service createService();
    Code:
       0: new           #78                 // class com/ibm/wsdl/ServiceImpl
       3: dup
       4: invokespecial #79                 // Method com/ibm/wsdl/ServiceImpl."<init>":()V
       7: areturn

  public javax.wsdl.Types createTypes();
    Code:
       0: new           #80                 // class com/ibm/wsdl/TypesImpl
       3: dup
       4: invokespecial #81                 // Method com/ibm/wsdl/TypesImpl."<init>":()V
       7: areturn

  public void setExtensionRegistry(javax.wsdl.extensions.ExtensionRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field extReg:Ljavax/wsdl/extensions/ExtensionRegistry;
       5: return

  public javax.wsdl.extensions.ExtensionRegistry getExtensionRegistry();
    Code:
       0: aload_0
       1: getfield      #17                 // Field extReg:Ljavax/wsdl/extensions/ExtensionRegistry;
       4: areturn

  private java.lang.Object getFromImports(java.lang.String, javax.xml.namespace.QName);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: aload_2
       4: invokevirtual #82                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
       7: invokevirtual #83                 // Method getImports:(Ljava/lang/String;)Ljava/util/List;
      10: astore        4
      12: aload         4
      14: ifnull        145
      17: aload         4
      19: invokeinterface #84,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      24: astore        5
      26: aload         5
      28: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          145
      36: aload         5
      38: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #85                 // class javax/wsdl/Import
      46: astore        6
      48: aload         6
      50: ifnull        142
      53: aload         6
      55: invokeinterface #86,  1           // InterfaceMethod javax/wsdl/Import.getDefinition:()Ljavax/wsdl/Definition;
      60: astore        7
      62: aload         7
      64: ifnull        142
      67: aload_1
      68: ldc           #49                 // String service
      70: if_acmpne     85
      73: aload         7
      75: aload_2
      76: invokeinterface #87,  2           // InterfaceMethod javax/wsdl/Definition.getService:(Ljavax/xml/namespace/QName;)Ljavax/wsdl/Service;
      81: astore_3
      82: goto          136
      85: aload_1
      86: ldc           #39                 // String message
      88: if_acmpne     103
      91: aload         7
      93: aload_2
      94: invokeinterface #88,  2           // InterfaceMethod javax/wsdl/Definition.getMessage:(Ljavax/xml/namespace/QName;)Ljavax/wsdl/Message;
      99: astore_3
     100: goto          136
     103: aload_1
     104: ldc           #43                 // String binding
     106: if_acmpne     121
     109: aload         7
     111: aload_2
     112: invokeinterface #89,  2           // InterfaceMethod javax/wsdl/Definition.getBinding:(Ljavax/xml/namespace/QName;)Ljavax/wsdl/Binding;
     117: astore_3
     118: goto          136
     121: aload_1
     122: ldc           #46                 // String portType
     124: if_acmpne     136
     127: aload         7
     129: aload_2
     130: invokeinterface #90,  2           // InterfaceMethod javax/wsdl/Definition.getPortType:(Ljavax/xml/namespace/QName;)Ljavax/wsdl/PortType;
     135: astore_3
     136: aload_3
     137: ifnull        142
     140: aload_3
     141: areturn
     142: goto          26
     145: aload_3
     146: areturn

  public java.lang.String toString();
    Code:
       0: new           #91                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #92                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_1
       9: new           #93                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #95                 // String Definition: name=
      18: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: getfield      #3                  // Field name:Ljavax/xml/namespace/QName;
      25: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: ldc           #98                 // String  targetNamespace=
      30: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: getfield      #4                  // Field targetNamespace:Ljava/lang/String;
      37: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokevirtual #100                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      46: pop
      47: aload_0
      48: getfield      #8                  // Field imports:Ljava/util/Map;
      51: ifnull        110
      54: aload_0
      55: getfield      #8                  // Field imports:Ljava/util/Map;
      58: invokeinterface #101,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      63: invokeinterface #102,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      68: astore_2
      69: aload_2
      70: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      75: ifeq          110
      78: aload_1
      79: new           #93                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
      86: ldc           #103                // String \n
      88: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_2
      92: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      97: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     100: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: invokevirtual #100                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     106: pop
     107: goto          69
     110: aload_0
     111: getfield      #9                  // Field types:Ljavax/wsdl/Types;
     114: ifnull        144
     117: aload_1
     118: new           #93                 // class java/lang/StringBuilder
     121: dup
     122: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
     125: ldc           #103                // String \n
     127: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: aload_0
     131: getfield      #9                  // Field types:Ljavax/wsdl/Types;
     134: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     137: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: invokevirtual #100                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     143: pop
     144: aload_0
     145: getfield      #10                 // Field messages:Ljava/util/Map;
     148: ifnull        207
     151: aload_0
     152: getfield      #10                 // Field messages:Ljava/util/Map;
     155: invokeinterface #101,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     160: invokeinterface #102,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     165: astore_2
     166: aload_2
     167: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     172: ifeq          207
     175: aload_1
     176: new           #93                 // class java/lang/StringBuilder
     179: dup
     180: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
     183: ldc           #103                // String \n
     185: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     188: aload_2
     189: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     194: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     197: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     200: invokevirtual #100                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     203: pop
     204: goto          166
     207: aload_0
     208: getfield      #12                 // Field portTypes:Ljava/util/Map;
     211: ifnull        270
     214: aload_0
     215: getfield      #12                 // Field portTypes:Ljava/util/Map;
     218: invokeinterface #101,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     223: invokeinterface #102,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     228: astore_2
     229: aload_2
     230: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     235: ifeq          270
     238: aload_1
     239: new           #93                 // class java/lang/StringBuilder
     242: dup
     243: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
     246: ldc           #103                // String \n
     248: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     251: aload_2
     252: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     257: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     260: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     263: invokevirtual #100                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     266: pop
     267: goto          229
     270: aload_0
     271: getfield      #11                 // Field bindings:Ljava/util/Map;
     274: ifnull        333
     277: aload_0
     278: getfield      #11                 // Field bindings:Ljava/util/Map;
     281: invokeinterface #101,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     286: invokeinterface #102,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     291: astore_2
     292: aload_2
     293: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     298: ifeq          333
     301: aload_1
     302: new           #93                 // class java/lang/StringBuilder
     305: dup
     306: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
     309: ldc           #103                // String \n
     311: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     314: aload_2
     315: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     320: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     323: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     326: invokevirtual #100                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     329: pop
     330: goto          292
     333: aload_0
     334: getfield      #13                 // Field services:Ljava/util/Map;
     337: ifnull        396
     340: aload_0
     341: getfield      #13                 // Field services:Ljava/util/Map;
     344: invokeinterface #101,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     349: invokeinterface #102,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     354: astore_2
     355: aload_2
     356: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     361: ifeq          396
     364: aload_1
     365: new           #93                 // class java/lang/StringBuilder
     368: dup
     369: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
     372: ldc           #103                // String \n
     374: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     377: aload_2
     378: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     383: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     386: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     389: invokevirtual #100                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     392: pop
     393: goto          355
     396: aload_0
     397: invokespecial #104                // Method com/ibm/wsdl/AbstractWSDLElement.toString:()Ljava/lang/String;
     400: astore_2
     401: aload_2
     402: ldc           #18                 // String
     404: invokevirtual #30                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     407: ifne          423
     410: aload_1
     411: ldc           #103                // String \n
     413: invokevirtual #100                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     416: pop
     417: aload_1
     418: aload_2
     419: invokevirtual #100                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     422: pop
     423: aload_1
     424: invokevirtual #105                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     427: areturn

  public java.util.List getNativeAttributeNames();
    Code:
       0: aload_0
       1: getfield      #16                 // Field nativeAttributeNames:Ljava/util/List;
       4: areturn

  public java.util.Map getAllBindings();
    Code:
       0: new           #5                  // class java/util/HashMap
       3: dup
       4: aload_0
       5: invokevirtual #106                // Method getBindings:()Ljava/util/Map;
       8: invokespecial #107                // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      11: astore_1
      12: aload_0
      13: invokevirtual #108                // Method getImports:()Ljava/util/Map;
      16: astore_2
      17: aload_2
      18: invokeinterface #101,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      23: invokeinterface #102,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      28: astore_3
      29: aload_3
      30: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          111
      38: aload_3
      39: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #33                 // class java/util/Vector
      47: astore        4
      49: aload         4
      51: invokevirtual #109                // Method java/util/Vector.iterator:()Ljava/util/Iterator;
      54: astore        5
      56: aload         5
      58: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      63: ifeq          108
      66: aload         5
      68: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #85                 // class javax/wsdl/Import
      76: astore        6
      78: aload         6
      80: invokeinterface #86,  1           // InterfaceMethod javax/wsdl/Import.getDefinition:()Ljavax/wsdl/Definition;
      85: astore        7
      87: aload         7
      89: ifnull        105
      92: aload_1
      93: aload         7
      95: invokeinterface #110,  1          // InterfaceMethod javax/wsdl/Definition.getAllBindings:()Ljava/util/Map;
     100: invokeinterface #111,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     105: goto          56
     108: goto          29
     111: aload_1
     112: areturn

  public java.util.Map getAllPortTypes();
    Code:
       0: new           #5                  // class java/util/HashMap
       3: dup
       4: aload_0
       5: invokevirtual #112                // Method getPortTypes:()Ljava/util/Map;
       8: invokespecial #107                // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      11: astore_1
      12: aload_0
      13: invokevirtual #108                // Method getImports:()Ljava/util/Map;
      16: astore_2
      17: aload_2
      18: invokeinterface #101,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      23: invokeinterface #102,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      28: astore_3
      29: aload_3
      30: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          111
      38: aload_3
      39: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #33                 // class java/util/Vector
      47: astore        4
      49: aload         4
      51: invokevirtual #109                // Method java/util/Vector.iterator:()Ljava/util/Iterator;
      54: astore        5
      56: aload         5
      58: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      63: ifeq          108
      66: aload         5
      68: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #85                 // class javax/wsdl/Import
      76: astore        6
      78: aload         6
      80: invokeinterface #86,  1           // InterfaceMethod javax/wsdl/Import.getDefinition:()Ljavax/wsdl/Definition;
      85: astore        7
      87: aload         7
      89: ifnull        105
      92: aload_1
      93: aload         7
      95: invokeinterface #113,  1          // InterfaceMethod javax/wsdl/Definition.getAllPortTypes:()Ljava/util/Map;
     100: invokeinterface #111,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     105: goto          56
     108: goto          29
     111: aload_1
     112: areturn

  public java.util.Map getAllServices();
    Code:
       0: new           #5                  // class java/util/HashMap
       3: dup
       4: aload_0
       5: invokevirtual #114                // Method getServices:()Ljava/util/Map;
       8: invokespecial #107                // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      11: astore_1
      12: aload_0
      13: invokevirtual #108                // Method getImports:()Ljava/util/Map;
      16: astore_2
      17: aload_2
      18: invokeinterface #101,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      23: invokeinterface #102,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      28: astore_3
      29: aload_3
      30: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          111
      38: aload_3
      39: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #33                 // class java/util/Vector
      47: astore        4
      49: aload         4
      51: invokevirtual #109                // Method java/util/Vector.iterator:()Ljava/util/Iterator;
      54: astore        5
      56: aload         5
      58: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      63: ifeq          108
      66: aload         5
      68: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #85                 // class javax/wsdl/Import
      76: astore        6
      78: aload         6
      80: invokeinterface #86,  1           // InterfaceMethod javax/wsdl/Import.getDefinition:()Ljavax/wsdl/Definition;
      85: astore        7
      87: aload         7
      89: ifnull        105
      92: aload_1
      93: aload         7
      95: invokeinterface #115,  1          // InterfaceMethod javax/wsdl/Definition.getAllServices:()Ljava/util/Map;
     100: invokeinterface #111,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     105: goto          56
     108: goto          29
     111: aload_1
     112: areturn
}
