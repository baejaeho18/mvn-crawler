Compiled from "Parser.java"
public class ch.qos.cal10n.util.Parser {
  final java.io.Reader reader;

  final java.util.Map<java.lang.String, java.lang.String> map;

  java.util.List<ch.qos.cal10n.util.Token> tokenList;

  int pointer;

  ch.qos.cal10n.util.Parser(java.io.Reader, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field pointer:I
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field reader:Ljava/io/Reader;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field map:Ljava/util/Map;
      19: new           #5                  // class ch/qos/cal10n/util/TokenStream
      22: dup
      23: aload_0
      24: getfield      #3                  // Field reader:Ljava/io/Reader;
      27: invokespecial #6                  // Method ch/qos/cal10n/util/TokenStream."<init>":(Ljava/io/Reader;)V
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokevirtual #7                  // Method ch/qos/cal10n/util/TokenStream.tokenize:()Ljava/util/List;
      36: putfield      #8                  // Field tokenList:Ljava/util/List;
      39: return

  void parseAndPopulate();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method E:()V
       4: return

  private void E();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method getNextToken:()Lch/qos/cal10n/util/Token;
       4: astore_1
       5: aload_1
       6: ifnonnull     10
       9: return
      10: getstatic     #11                 // Field ch/qos/cal10n/util/Parser$1.$SwitchMap$ch$qos$cal10n$util$Token$TokenType:[I
      13: aload_1
      14: getfield      #12                 // Field ch/qos/cal10n/util/Token.tokenType:Lch/qos/cal10n/util/Token$TokenType;
      17: invokevirtual #13                 // Method ch/qos/cal10n/util/Token$TokenType.ordinal:()I
      20: iaload
      21: lookupswitch  { // 2
                     1: 48
                     2: 51
               default: 126
          }
      48: goto          126
      51: aload_1
      52: invokevirtual #14                 // Method ch/qos/cal10n/util/Token.getValue:()Ljava/lang/String;
      55: astore_2
      56: aload_0
      57: invokespecial #10                 // Method getNextToken:()Lch/qos/cal10n/util/Token;
      60: astore_1
      61: aload_1
      62: getfield      #12                 // Field ch/qos/cal10n/util/Token.tokenType:Lch/qos/cal10n/util/Token$TokenType;
      65: getstatic     #15                 // Field ch/qos/cal10n/util/Token$TokenType.SEPARATOR:Lch/qos/cal10n/util/Token$TokenType;
      68: if_acmpeq     98
      71: new           #16                 // class java/lang/IllegalStateException
      74: dup
      75: new           #17                 // class java/lang/StringBuilder
      78: dup
      79: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      82: ldc           #19                 // String Unexpected token
      84: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_1
      88: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      91: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: invokespecial #23                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: new           #17                 // class java/lang/StringBuilder
     101: dup
     102: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     105: astore_3
     106: aload_0
     107: aload_3
     108: invokespecial #24                 // Method V:(Ljava/lang/StringBuilder;)V
     111: aload_0
     112: getfield      #4                  // Field map:Ljava/util/Map;
     115: aload_2
     116: aload_3
     117: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     120: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     125: pop
     126: aload_0
     127: invokespecial #9                  // Method E:()V
     130: return

  private void V(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method getNextToken:()Lch/qos/cal10n/util/Token;
       4: astore_2
       5: aload_2
       6: getfield      #12                 // Field ch/qos/cal10n/util/Token.tokenType:Lch/qos/cal10n/util/Token$TokenType;
       9: getstatic     #26                 // Field ch/qos/cal10n/util/Token$TokenType.VALUE:Lch/qos/cal10n/util/Token$TokenType;
      12: if_acmpeq     42
      15: new           #16                 // class java/lang/IllegalStateException
      18: dup
      19: new           #17                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #19                 // String Unexpected token
      28: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_2
      32: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      35: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #23                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_1
      43: aload_2
      44: invokevirtual #14                 // Method ch/qos/cal10n/util/Token.getValue:()Ljava/lang/String;
      47: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: pop
      51: aload_0
      52: invokespecial #10                 // Method getNextToken:()Lch/qos/cal10n/util/Token;
      55: astore_2
      56: aload_2
      57: getfield      #12                 // Field ch/qos/cal10n/util/Token.tokenType:Lch/qos/cal10n/util/Token$TokenType;
      60: getstatic     #27                 // Field ch/qos/cal10n/util/Token$TokenType.EOL:Lch/qos/cal10n/util/Token$TokenType;
      63: if_acmpne     67
      66: return
      67: aload_2
      68: getfield      #12                 // Field ch/qos/cal10n/util/Token.tokenType:Lch/qos/cal10n/util/Token$TokenType;
      71: getstatic     #28                 // Field ch/qos/cal10n/util/Token$TokenType.TRAILING_BACKSLASH:Lch/qos/cal10n/util/Token$TokenType;
      74: if_acmpne     82
      77: aload_0
      78: aload_1
      79: invokespecial #29                 // Method Vopt:(Ljava/lang/StringBuilder;)V
      82: return

  private void Vopt(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method getNextToken:()Lch/qos/cal10n/util/Token;
       4: astore_2
       5: aload_2
       6: getfield      #12                 // Field ch/qos/cal10n/util/Token.tokenType:Lch/qos/cal10n/util/Token$TokenType;
       9: getstatic     #27                 // Field ch/qos/cal10n/util/Token$TokenType.EOL:Lch/qos/cal10n/util/Token$TokenType;
      12: if_acmpeq     42
      15: new           #16                 // class java/lang/IllegalStateException
      18: dup
      19: new           #17                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #19                 // String Unexpected token
      28: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_2
      32: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      35: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #23                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: aload_1
      44: invokespecial #24                 // Method V:(Ljava/lang/StringBuilder;)V
      47: return

  private ch.qos.cal10n.util.Token getNextToken();
    Code:
       0: aload_0
       1: getfield      #2                  // Field pointer:I
       4: aload_0
       5: getfield      #8                  // Field tokenList:Ljava/util/List;
       8: invokeinterface #30,  1           // InterfaceMethod java/util/List.size:()I
      13: if_icmpge     40
      16: aload_0
      17: getfield      #8                  // Field tokenList:Ljava/util/List;
      20: aload_0
      21: dup
      22: getfield      #2                  // Field pointer:I
      25: dup_x1
      26: iconst_1
      27: iadd
      28: putfield      #2                  // Field pointer:I
      31: invokeinterface #31,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      36: checkcast     #32                 // class ch/qos/cal10n/util/Token
      39: areturn
      40: aconst_null
      41: areturn
}
