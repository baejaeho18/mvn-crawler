Compiled from "DeferredFileOutputStream.java"
public class org.apache.commons.io.output.DeferredFileOutputStream extends org.apache.commons.io.output.ThresholdingOutputStream {
  private org.apache.commons.io.output.ByteArrayOutputStream memoryOutputStream;

  private java.io.OutputStream currentOutputStream;

  private java.io.File outputFile;

  private final java.lang.String prefix;

  private final java.lang.String suffix;

  private final java.io.File directory;

  private boolean closed;

  public org.apache.commons.io.output.DeferredFileOutputStream(int, java.io.File);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aconst_null
       4: aconst_null
       5: aconst_null
       6: invokespecial #1                  // Method "<init>":(ILjava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)V
       9: return

  public org.apache.commons.io.output.DeferredFileOutputStream(int, java.lang.String, java.lang.String, java.io.File);
    Code:
       0: aload_0
       1: iload_1
       2: aconst_null
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokespecial #1                  // Method "<init>":(ILjava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)V
      10: aload_2
      11: ifnonnull     24
      14: new           #2                  // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #3                  // String Temporary file prefix is missing
      20: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: return

  private org.apache.commons.io.output.DeferredFileOutputStream(int, java.io.File, java.lang.String, java.lang.String, java.io.File);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #5                  // Method org/apache/commons/io/output/ThresholdingOutputStream."<init>":(I)V
       5: aload_0
       6: iconst_0
       7: putfield      #6                  // Field closed:Z
      10: aload_0
      11: aload_2
      12: putfield      #7                  // Field outputFile:Ljava/io/File;
      15: aload_0
      16: new           #8                  // class org/apache/commons/io/output/ByteArrayOutputStream
      19: dup
      20: invokespecial #9                  // Method org/apache/commons/io/output/ByteArrayOutputStream."<init>":()V
      23: putfield      #10                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;
      26: aload_0
      27: aload_0
      28: getfield      #10                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;
      31: putfield      #11                 // Field currentOutputStream:Ljava/io/OutputStream;
      34: aload_0
      35: aload_3
      36: putfield      #12                 // Field prefix:Ljava/lang/String;
      39: aload_0
      40: aload         4
      42: putfield      #13                 // Field suffix:Ljava/lang/String;
      45: aload_0
      46: aload         5
      48: putfield      #14                 // Field directory:Ljava/io/File;
      51: return

  protected java.io.OutputStream getStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field currentOutputStream:Ljava/io/OutputStream;
       4: areturn

  protected void thresholdReached() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field prefix:Ljava/lang/String;
       4: ifnull        26
       7: aload_0
       8: aload_0
       9: getfield      #12                 // Field prefix:Ljava/lang/String;
      12: aload_0
      13: getfield      #13                 // Field suffix:Ljava/lang/String;
      16: aload_0
      17: getfield      #14                 // Field directory:Ljava/io/File;
      20: invokestatic  #15                 // Method java/io/File.createTempFile:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
      23: putfield      #7                  // Field outputFile:Ljava/io/File;
      26: new           #16                 // class java/io/FileOutputStream
      29: dup
      30: aload_0
      31: getfield      #7                  // Field outputFile:Ljava/io/File;
      34: invokespecial #17                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      37: astore_1
      38: aload_0
      39: getfield      #10                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;
      42: aload_1
      43: invokevirtual #18                 // Method org/apache/commons/io/output/ByteArrayOutputStream.writeTo:(Ljava/io/OutputStream;)V
      46: aload_0
      47: aload_1
      48: putfield      #11                 // Field currentOutputStream:Ljava/io/OutputStream;
      51: aload_0
      52: aconst_null
      53: putfield      #10                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;
      56: return

  public boolean isInMemory();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method isThresholdExceeded:()Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public byte[] getData();
    Code:
       0: aload_0
       1: getfield      #10                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;
       4: ifnull        15
       7: aload_0
       8: getfield      #10                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;
      11: invokevirtual #20                 // Method org/apache/commons/io/output/ByteArrayOutputStream.toByteArray:()[B
      14: areturn
      15: aconst_null
      16: areturn

  public java.io.File getFile();
    Code:
       0: aload_0
       1: getfield      #7                  // Field outputFile:Ljava/io/File;
       4: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #21                 // Method org/apache/commons/io/output/ThresholdingOutputStream.close:()V
       4: aload_0
       5: iconst_1
       6: putfield      #6                  // Field closed:Z
       9: return

  public void writeTo(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field closed:Z
       4: ifne          17
       7: new           #22                 // class java/io/IOException
      10: dup
      11: ldc           #23                 // String Stream not closed
      13: invokespecial #24                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #25                 // Method isInMemory:()Z
      21: ifeq          35
      24: aload_0
      25: getfield      #10                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;
      28: aload_1
      29: invokevirtual #18                 // Method org/apache/commons/io/output/ByteArrayOutputStream.writeTo:(Ljava/io/OutputStream;)V
      32: goto          67
      35: new           #26                 // class java/io/FileInputStream
      38: dup
      39: aload_0
      40: getfield      #7                  // Field outputFile:Ljava/io/File;
      43: invokespecial #27                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      46: astore_2
      47: aload_2
      48: aload_1
      49: invokestatic  #28                 // Method org/apache/commons/io/IOUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I
      52: pop
      53: aload_2
      54: invokestatic  #29                 // Method org/apache/commons/io/IOUtils.closeQuietly:(Ljava/io/InputStream;)V
      57: goto          67
      60: astore_3
      61: aload_2
      62: invokestatic  #29                 // Method org/apache/commons/io/IOUtils.closeQuietly:(Ljava/io/InputStream;)V
      65: aload_3
      66: athrow
      67: return
    Exception table:
       from    to  target type
          47    53    60   any
          60    61    60   any
}
