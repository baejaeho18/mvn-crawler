Compiled from "InputBufferEventSupport.java"
public class antlr.debug.InputBufferEventSupport {
  private java.lang.Object source;

  private java.util.Vector inputBufferListeners;

  private antlr.debug.InputBufferEvent inputBufferEvent;

  protected static final int CONSUME;

  protected static final int LA;

  protected static final int MARK;

  protected static final int REWIND;

  public antlr.debug.InputBufferEventSupport(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class antlr/debug/InputBufferEvent
       8: dup
       9: aload_1
      10: invokespecial #3                  // Method antlr/debug/InputBufferEvent."<init>":(Ljava/lang/Object;)V
      13: putfield      #4                  // Field inputBufferEvent:Lantlr/debug/InputBufferEvent;
      16: aload_0
      17: aload_1
      18: putfield      #5                  // Field source:Ljava/lang/Object;
      21: return

  public void addInputBufferListener(antlr.debug.InputBufferListener);
    Code:
       0: aload_0
       1: getfield      #6                  // Field inputBufferListeners:Ljava/util/Vector;
       4: ifnonnull     18
       7: aload_0
       8: new           #7                  // class java/util/Vector
      11: dup
      12: invokespecial #8                  // Method java/util/Vector."<init>":()V
      15: putfield      #6                  // Field inputBufferListeners:Ljava/util/Vector;
      18: aload_0
      19: getfield      #6                  // Field inputBufferListeners:Ljava/util/Vector;
      22: aload_1
      23: invokevirtual #9                  // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      26: return

  public void fireConsume(char);
    Code:
       0: aload_0
       1: getfield      #4                  // Field inputBufferEvent:Lantlr/debug/InputBufferEvent;
       4: iconst_0
       5: iload_1
       6: iconst_0
       7: invokevirtual #10                 // Method antlr/debug/InputBufferEvent.setValues:(ICI)V
      10: aload_0
      11: iconst_0
      12: aload_0
      13: getfield      #6                  // Field inputBufferListeners:Ljava/util/Vector;
      16: invokevirtual #11                 // Method fireEvents:(ILjava/util/Vector;)V
      19: return

  public void fireEvent(int, antlr.debug.ListenerBase);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 3
                     0: 32
                     1: 48
                     2: 64
                     3: 80
               default: 96
          }
      32: aload_2
      33: checkcast     #12                 // class antlr/debug/InputBufferListener
      36: aload_0
      37: getfield      #4                  // Field inputBufferEvent:Lantlr/debug/InputBufferEvent;
      40: invokeinterface #13,  2           // InterfaceMethod antlr/debug/InputBufferListener.inputBufferConsume:(Lantlr/debug/InputBufferEvent;)V
      45: goto          128
      48: aload_2
      49: checkcast     #12                 // class antlr/debug/InputBufferListener
      52: aload_0
      53: getfield      #4                  // Field inputBufferEvent:Lantlr/debug/InputBufferEvent;
      56: invokeinterface #14,  2           // InterfaceMethod antlr/debug/InputBufferListener.inputBufferLA:(Lantlr/debug/InputBufferEvent;)V
      61: goto          128
      64: aload_2
      65: checkcast     #12                 // class antlr/debug/InputBufferListener
      68: aload_0
      69: getfield      #4                  // Field inputBufferEvent:Lantlr/debug/InputBufferEvent;
      72: invokeinterface #15,  2           // InterfaceMethod antlr/debug/InputBufferListener.inputBufferMark:(Lantlr/debug/InputBufferEvent;)V
      77: goto          128
      80: aload_2
      81: checkcast     #12                 // class antlr/debug/InputBufferListener
      84: aload_0
      85: getfield      #4                  // Field inputBufferEvent:Lantlr/debug/InputBufferEvent;
      88: invokeinterface #16,  2           // InterfaceMethod antlr/debug/InputBufferListener.inputBufferRewind:(Lantlr/debug/InputBufferEvent;)V
      93: goto          128
      96: new           #17                 // class java/lang/IllegalArgumentException
      99: dup
     100: new           #18                 // class java/lang/StringBuffer
     103: dup
     104: invokespecial #19                 // Method java/lang/StringBuffer."<init>":()V
     107: ldc           #20                 // String bad type
     109: invokevirtual #21                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     112: iload_1
     113: invokevirtual #22                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
     116: ldc           #23                 // String  for fireEvent()
     118: invokevirtual #21                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     121: invokevirtual #24                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     124: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     127: athrow
     128: return

  public void fireEvents(int, java.util.Vector);
    Code:
       0: aconst_null
       1: astore_3
       2: aconst_null
       3: astore        4
       5: aload_0
       6: dup
       7: astore        5
       9: monitorenter
      10: aload_2
      11: ifnonnull     18
      14: aload         5
      16: monitorexit
      17: return
      18: aload_2
      19: invokevirtual #26                 // Method java/util/Vector.clone:()Ljava/lang/Object;
      22: checkcast     #7                  // class java/util/Vector
      25: astore_3
      26: aload         5
      28: monitorexit
      29: goto          40
      32: astore        6
      34: aload         5
      36: monitorexit
      37: aload         6
      39: athrow
      40: aload_3
      41: ifnull        80
      44: iconst_0
      45: istore        5
      47: iload         5
      49: aload_3
      50: invokevirtual #27                 // Method java/util/Vector.size:()I
      53: if_icmpge     80
      56: aload_3
      57: iload         5
      59: invokevirtual #28                 // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      62: checkcast     #29                 // class antlr/debug/ListenerBase
      65: astore        4
      67: aload_0
      68: iload_1
      69: aload         4
      71: invokevirtual #30                 // Method fireEvent:(ILantlr/debug/ListenerBase;)V
      74: iinc          5, 1
      77: goto          47
      80: return
    Exception table:
       from    to  target type
          10    17    32   any
          18    29    32   any
          32    37    32   any

  public void fireLA(char, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field inputBufferEvent:Lantlr/debug/InputBufferEvent;
       4: iconst_1
       5: iload_1
       6: iload_2
       7: invokevirtual #10                 // Method antlr/debug/InputBufferEvent.setValues:(ICI)V
      10: aload_0
      11: iconst_1
      12: aload_0
      13: getfield      #6                  // Field inputBufferListeners:Ljava/util/Vector;
      16: invokevirtual #11                 // Method fireEvents:(ILjava/util/Vector;)V
      19: return

  public void fireMark(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field inputBufferEvent:Lantlr/debug/InputBufferEvent;
       4: iconst_2
       5: bipush        32
       7: iload_1
       8: invokevirtual #10                 // Method antlr/debug/InputBufferEvent.setValues:(ICI)V
      11: aload_0
      12: iconst_2
      13: aload_0
      14: getfield      #6                  // Field inputBufferListeners:Ljava/util/Vector;
      17: invokevirtual #11                 // Method fireEvents:(ILjava/util/Vector;)V
      20: return

  public void fireRewind(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field inputBufferEvent:Lantlr/debug/InputBufferEvent;
       4: iconst_3
       5: bipush        32
       7: iload_1
       8: invokevirtual #10                 // Method antlr/debug/InputBufferEvent.setValues:(ICI)V
      11: aload_0
      12: iconst_3
      13: aload_0
      14: getfield      #6                  // Field inputBufferListeners:Ljava/util/Vector;
      17: invokevirtual #11                 // Method fireEvents:(ILjava/util/Vector;)V
      20: return

  public java.util.Vector getInputBufferListeners();
    Code:
       0: aload_0
       1: getfield      #6                  // Field inputBufferListeners:Ljava/util/Vector;
       4: areturn

  protected void refresh(java.util.Vector);
    Code:
       0: aload_1
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_1
       5: invokevirtual #26                 // Method java/util/Vector.clone:()Ljava/lang/Object;
       8: checkcast     #7                  // class java/util/Vector
      11: astore_2
      12: aload_3
      13: monitorexit
      14: goto          24
      17: astore        4
      19: aload_3
      20: monitorexit
      21: aload         4
      23: athrow
      24: aload_2
      25: ifnull        57
      28: iconst_0
      29: istore_3
      30: iload_3
      31: aload_2
      32: invokevirtual #27                 // Method java/util/Vector.size:()I
      35: if_icmpge     57
      38: aload_2
      39: iload_3
      40: invokevirtual #28                 // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      43: checkcast     #29                 // class antlr/debug/ListenerBase
      46: invokeinterface #31,  1           // InterfaceMethod antlr/debug/ListenerBase.refresh:()V
      51: iinc          3, 1
      54: goto          30
      57: return
    Exception table:
       from    to  target type
           4    14    17   any
          17    21    17   any

  public void refreshListeners();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field inputBufferListeners:Ljava/util/Vector;
       5: invokevirtual #32                 // Method refresh:(Ljava/util/Vector;)V
       8: return

  public void removeInputBufferListener(antlr.debug.InputBufferListener);
    Code:
       0: aload_0
       1: getfield      #6                  // Field inputBufferListeners:Ljava/util/Vector;
       4: ifnull        16
       7: aload_0
       8: getfield      #6                  // Field inputBufferListeners:Ljava/util/Vector;
      11: aload_1
      12: invokevirtual #33                 // Method java/util/Vector.removeElement:(Ljava/lang/Object;)Z
      15: pop
      16: return
}
