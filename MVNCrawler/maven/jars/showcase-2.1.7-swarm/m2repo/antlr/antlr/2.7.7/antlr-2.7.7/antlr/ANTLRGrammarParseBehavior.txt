Compiled from "ANTLRGrammarParseBehavior.java"
public interface antlr.ANTLRGrammarParseBehavior {
  public abstract void abortGrammar();

  public abstract void beginAlt(boolean);

  public abstract void beginChildList();

  public abstract void beginExceptionGroup();

  public abstract void beginExceptionSpec(antlr.Token);

  public abstract void beginSubRule(antlr.Token, antlr.Token, boolean);

  public abstract void beginTree(antlr.Token) throws antlr.SemanticException;

  public abstract void defineRuleName(antlr.Token, java.lang.String, boolean, java.lang.String) throws antlr.SemanticException;

  public abstract void defineToken(antlr.Token, antlr.Token);

  public abstract void endAlt();

  public abstract void endChildList();

  public abstract void endExceptionGroup();

  public abstract void endExceptionSpec();

  public abstract void endGrammar();

  public abstract void endOptions();

  public abstract void endRule(java.lang.String);

  public abstract void endSubRule();

  public abstract void endTree();

  public abstract void hasError();

  public abstract void noASTSubRule();

  public abstract void oneOrMoreSubRule();

  public abstract void optionalSubRule();

  public abstract void refAction(antlr.Token);

  public abstract void refArgAction(antlr.Token);

  public abstract void setUserExceptions(java.lang.String);

  public abstract void refCharLiteral(antlr.Token, antlr.Token, boolean, int, boolean);

  public abstract void refCharRange(antlr.Token, antlr.Token, antlr.Token, int, boolean);

  public abstract void refElementOption(antlr.Token, antlr.Token);

  public abstract void refTokensSpecElementOption(antlr.Token, antlr.Token, antlr.Token);

  public abstract void refExceptionHandler(antlr.Token, antlr.Token);

  public abstract void refHeaderAction(antlr.Token, antlr.Token);

  public abstract void refInitAction(antlr.Token);

  public abstract void refMemberAction(antlr.Token);

  public abstract void refPreambleAction(antlr.Token);

  public abstract void refReturnAction(antlr.Token);

  public abstract void refRule(antlr.Token, antlr.Token, antlr.Token, antlr.Token, int);

  public abstract void refSemPred(antlr.Token);

  public abstract void refStringLiteral(antlr.Token, antlr.Token, int, boolean);

  public abstract void refToken(antlr.Token, antlr.Token, antlr.Token, antlr.Token, boolean, int, boolean);

  public abstract void refTokenRange(antlr.Token, antlr.Token, antlr.Token, int, boolean);

  public abstract void refTreeSpecifier(antlr.Token);

  public abstract void refWildcard(antlr.Token, antlr.Token, int);

  public abstract void setArgOfRuleRef(antlr.Token);

  public abstract void setCharVocabulary(antlr.collections.impl.BitSet);

  public abstract void setFileOption(antlr.Token, antlr.Token, java.lang.String);

  public abstract void setGrammarOption(antlr.Token, antlr.Token);

  public abstract void setRuleOption(antlr.Token, antlr.Token);

  public abstract void setSubruleOption(antlr.Token, antlr.Token);

  public abstract void startLexer(java.lang.String, antlr.Token, java.lang.String, java.lang.String);

  public abstract void startParser(java.lang.String, antlr.Token, java.lang.String, java.lang.String);

  public abstract void startTreeWalker(java.lang.String, antlr.Token, java.lang.String, java.lang.String);

  public abstract void synPred();

  public abstract void zeroOrMoreSubRule();
}
