Compiled from "DebuggingInputBuffer.java"
public class antlr.debug.DebuggingInputBuffer extends antlr.InputBuffer {
  private antlr.InputBuffer buffer;

  private antlr.debug.InputBufferEventSupport inputBufferEventSupport;

  private boolean debugMode;

  public antlr.debug.DebuggingInputBuffer(antlr.InputBuffer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method antlr/InputBuffer."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field debugMode:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field buffer:Lantlr/InputBuffer;
      14: aload_0
      15: new           #4                  // class antlr/debug/InputBufferEventSupport
      18: dup
      19: aload_0
      20: invokespecial #5                  // Method antlr/debug/InputBufferEventSupport."<init>":(Ljava/lang/Object;)V
      23: putfield      #6                  // Field inputBufferEventSupport:Lantlr/debug/InputBufferEventSupport;
      26: return

  public void addInputBufferListener(antlr.debug.InputBufferListener);
    Code:
       0: aload_0
       1: getfield      #6                  // Field inputBufferEventSupport:Lantlr/debug/InputBufferEventSupport;
       4: aload_1
       5: invokevirtual #7                  // Method antlr/debug/InputBufferEventSupport.addInputBufferListener:(Lantlr/debug/InputBufferListener;)V
       8: return

  public void consume();
    Code:
       0: bipush        32
       2: istore_1
       3: aload_0
       4: getfield      #3                  // Field buffer:Lantlr/InputBuffer;
       7: iconst_1
       8: invokevirtual #8                  // Method antlr/InputBuffer.LA:(I)C
      11: istore_1
      12: goto          16
      15: astore_2
      16: aload_0
      17: getfield      #3                  // Field buffer:Lantlr/InputBuffer;
      20: invokevirtual #10                 // Method antlr/InputBuffer.consume:()V
      23: aload_0
      24: getfield      #2                  // Field debugMode:Z
      27: ifeq          38
      30: aload_0
      31: getfield      #6                  // Field inputBufferEventSupport:Lantlr/debug/InputBufferEventSupport;
      34: iload_1
      35: invokevirtual #11                 // Method antlr/debug/InputBufferEventSupport.fireConsume:(C)V
      38: return
    Exception table:
       from    to  target type
           3    12    15   Class antlr/CharStreamException

  public void fill(int) throws antlr.CharStreamException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field buffer:Lantlr/InputBuffer;
       4: iload_1
       5: invokevirtual #12                 // Method antlr/InputBuffer.fill:(I)V
       8: return

  public java.util.Vector getInputBufferListeners();
    Code:
       0: aload_0
       1: getfield      #6                  // Field inputBufferEventSupport:Lantlr/debug/InputBufferEventSupport;
       4: invokevirtual #13                 // Method antlr/debug/InputBufferEventSupport.getInputBufferListeners:()Ljava/util/Vector;
       7: areturn

  public boolean isDebugMode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field debugMode:Z
       4: ireturn

  public boolean isMarked();
    Code:
       0: aload_0
       1: getfield      #3                  // Field buffer:Lantlr/InputBuffer;
       4: invokevirtual #14                 // Method antlr/InputBuffer.isMarked:()Z
       7: ireturn

  public char LA(int) throws antlr.CharStreamException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field buffer:Lantlr/InputBuffer;
       4: iload_1
       5: invokevirtual #8                  // Method antlr/InputBuffer.LA:(I)C
       8: istore_2
       9: aload_0
      10: getfield      #2                  // Field debugMode:Z
      13: ifeq          25
      16: aload_0
      17: getfield      #6                  // Field inputBufferEventSupport:Lantlr/debug/InputBufferEventSupport;
      20: iload_2
      21: iload_1
      22: invokevirtual #15                 // Method antlr/debug/InputBufferEventSupport.fireLA:(CI)V
      25: iload_2
      26: ireturn

  public int mark();
    Code:
       0: aload_0
       1: getfield      #3                  // Field buffer:Lantlr/InputBuffer;
       4: invokevirtual #16                 // Method antlr/InputBuffer.mark:()I
       7: istore_1
       8: aload_0
       9: getfield      #6                  // Field inputBufferEventSupport:Lantlr/debug/InputBufferEventSupport;
      12: iload_1
      13: invokevirtual #17                 // Method antlr/debug/InputBufferEventSupport.fireMark:(I)V
      16: iload_1
      17: ireturn

  public void removeInputBufferListener(antlr.debug.InputBufferListener);
    Code:
       0: aload_0
       1: getfield      #6                  // Field inputBufferEventSupport:Lantlr/debug/InputBufferEventSupport;
       4: ifnull        15
       7: aload_0
       8: getfield      #6                  // Field inputBufferEventSupport:Lantlr/debug/InputBufferEventSupport;
      11: aload_1
      12: invokevirtual #18                 // Method antlr/debug/InputBufferEventSupport.removeInputBufferListener:(Lantlr/debug/InputBufferListener;)V
      15: return

  public void rewind(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field buffer:Lantlr/InputBuffer;
       4: iload_1
       5: invokevirtual #19                 // Method antlr/InputBuffer.rewind:(I)V
       8: aload_0
       9: getfield      #6                  // Field inputBufferEventSupport:Lantlr/debug/InputBufferEventSupport;
      12: iload_1
      13: invokevirtual #20                 // Method antlr/debug/InputBufferEventSupport.fireRewind:(I)V
      16: return

  public void setDebugMode(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field debugMode:Z
       5: return
}
