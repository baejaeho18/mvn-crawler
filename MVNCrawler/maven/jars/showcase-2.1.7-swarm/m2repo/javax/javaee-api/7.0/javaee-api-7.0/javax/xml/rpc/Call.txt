Compiled from "Call.java"
public interface javax.xml.rpc.Call {
  public static final java.lang.String USERNAME_PROPERTY;

  public static final java.lang.String PASSWORD_PROPERTY;

  public static final java.lang.String OPERATION_STYLE_PROPERTY;

  public static final java.lang.String SOAPACTION_USE_PROPERTY;

  public static final java.lang.String SOAPACTION_URI_PROPERTY;

  public static final java.lang.String ENCODINGSTYLE_URI_PROPERTY;

  public static final java.lang.String SESSION_MAINTAIN_PROPERTY;

  public abstract boolean isParameterAndReturnSpecRequired(javax.xml.namespace.QName);

  public abstract void addParameter(java.lang.String, javax.xml.namespace.QName, javax.xml.rpc.ParameterMode);

  public abstract void addParameter(java.lang.String, javax.xml.namespace.QName, java.lang.Class, javax.xml.rpc.ParameterMode);

  public abstract javax.xml.namespace.QName getParameterTypeByName(java.lang.String);

  public abstract void setReturnType(javax.xml.namespace.QName);

  public abstract void setReturnType(javax.xml.namespace.QName, java.lang.Class);

  public abstract javax.xml.namespace.QName getReturnType();

  public abstract void removeAllParameters();

  public abstract javax.xml.namespace.QName getOperationName();

  public abstract void setOperationName(javax.xml.namespace.QName);

  public abstract javax.xml.namespace.QName getPortTypeName();

  public abstract void setPortTypeName(javax.xml.namespace.QName);

  public abstract void setTargetEndpointAddress(java.lang.String);

  public abstract java.lang.String getTargetEndpointAddress();

  public abstract void setProperty(java.lang.String, java.lang.Object);

  public abstract java.lang.Object getProperty(java.lang.String);

  public abstract void removeProperty(java.lang.String);

  public abstract java.util.Iterator getPropertyNames();

  public abstract java.lang.Object invoke(java.lang.Object[]) throws java.rmi.RemoteException;

  public abstract java.lang.Object invoke(javax.xml.namespace.QName, java.lang.Object[]) throws java.rmi.RemoteException;

  public abstract void invokeOneWay(java.lang.Object[]);

  public abstract java.util.Map getOutputParams();

  public abstract java.util.List getOutputValues();
}
