Compiled from "JAXRException.java"
public class javax.xml.registry.JAXRException extends java.lang.Exception implements javax.xml.registry.JAXRResponse {
  protected java.lang.Throwable cause;

  public javax.xml.registry.JAXRException();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Exception."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field cause:Ljava/lang/Throwable;
       9: return

  public javax.xml.registry.JAXRException(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: aconst_null
       7: putfield      #2                  // Field cause:Ljava/lang/Throwable;
      10: return

  public javax.xml.registry.JAXRException(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: aload_2
       7: invokevirtual #4                  // Method initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      10: pop
      11: return

  public javax.xml.registry.JAXRException(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method java/lang/Throwable.toString:()Ljava/lang/String;
       5: invokespecial #3                  // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
       8: aload_0
       9: aload_1
      10: invokevirtual #4                  // Method initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      13: pop
      14: return

  public java.lang.String getMessage();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Exception.getMessage:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     24
       9: aload_0
      10: getfield      #2                  // Field cause:Ljava/lang/Throwable;
      13: ifnull        24
      16: aload_0
      17: getfield      #2                  // Field cause:Ljava/lang/Throwable;
      20: invokevirtual #7                  // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      23: areturn
      24: aload_1
      25: areturn

  public java.lang.Throwable getCause();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cause:Ljava/lang/Throwable;
       4: areturn

  public synchronized java.lang.Throwable initCause(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cause:Ljava/lang/Throwable;
       4: ifnull        17
       7: new           #8                  // class java/lang/IllegalStateException
      10: dup
      11: ldc           #9                  // String Can\'t override cause
      13: invokespecial #10                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: aload_0
      19: if_acmpne     32
      22: new           #11                 // class java/lang/IllegalArgumentException
      25: dup
      26: ldc           #12                 // String Self-causation not permitted
      28: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_0
      33: aload_1
      34: putfield      #2                  // Field cause:Ljava/lang/Throwable;
      37: aload_0
      38: areturn

  public java.lang.String getRequestId();
    Code:
       0: aconst_null
       1: areturn

  public int getStatus();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isAvailable() throws javax.xml.registry.JAXRException;
    Code:
       0: iconst_1
       1: ireturn
}
