Compiled from "From.java"
public interface javax.persistence.criteria.From<Z, X> extends javax.persistence.criteria.Path<X>, javax.persistence.criteria.FetchParent<Z, X> {
  public abstract java.util.Set<javax.persistence.criteria.Join<X, ?>> getJoins();

  public abstract boolean isCorrelated();

  public abstract javax.persistence.criteria.From<Z, X> getCorrelationParent();

  public abstract <Y> javax.persistence.criteria.Join<X, Y> join(javax.persistence.metamodel.SingularAttribute<? super X, Y>);

  public abstract <Y> javax.persistence.criteria.Join<X, Y> join(javax.persistence.metamodel.SingularAttribute<? super X, Y>, javax.persistence.criteria.JoinType);

  public abstract <Y> javax.persistence.criteria.CollectionJoin<X, Y> join(javax.persistence.metamodel.CollectionAttribute<? super X, Y>);

  public abstract <Y> javax.persistence.criteria.SetJoin<X, Y> join(javax.persistence.metamodel.SetAttribute<? super X, Y>);

  public abstract <Y> javax.persistence.criteria.ListJoin<X, Y> join(javax.persistence.metamodel.ListAttribute<? super X, Y>);

  public abstract <K, V> javax.persistence.criteria.MapJoin<X, K, V> join(javax.persistence.metamodel.MapAttribute<? super X, K, V>);

  public abstract <Y> javax.persistence.criteria.CollectionJoin<X, Y> join(javax.persistence.metamodel.CollectionAttribute<? super X, Y>, javax.persistence.criteria.JoinType);

  public abstract <Y> javax.persistence.criteria.SetJoin<X, Y> join(javax.persistence.metamodel.SetAttribute<? super X, Y>, javax.persistence.criteria.JoinType);

  public abstract <Y> javax.persistence.criteria.ListJoin<X, Y> join(javax.persistence.metamodel.ListAttribute<? super X, Y>, javax.persistence.criteria.JoinType);

  public abstract <K, V> javax.persistence.criteria.MapJoin<X, K, V> join(javax.persistence.metamodel.MapAttribute<? super X, K, V>, javax.persistence.criteria.JoinType);

  public abstract <X, Y> javax.persistence.criteria.Join<X, Y> join(java.lang.String);

  public abstract <X, Y> javax.persistence.criteria.CollectionJoin<X, Y> joinCollection(java.lang.String);

  public abstract <X, Y> javax.persistence.criteria.SetJoin<X, Y> joinSet(java.lang.String);

  public abstract <X, Y> javax.persistence.criteria.ListJoin<X, Y> joinList(java.lang.String);

  public abstract <X, K, V> javax.persistence.criteria.MapJoin<X, K, V> joinMap(java.lang.String);

  public abstract <X, Y> javax.persistence.criteria.Join<X, Y> join(java.lang.String, javax.persistence.criteria.JoinType);

  public abstract <X, Y> javax.persistence.criteria.CollectionJoin<X, Y> joinCollection(java.lang.String, javax.persistence.criteria.JoinType);

  public abstract <X, Y> javax.persistence.criteria.SetJoin<X, Y> joinSet(java.lang.String, javax.persistence.criteria.JoinType);

  public abstract <X, Y> javax.persistence.criteria.ListJoin<X, Y> joinList(java.lang.String, javax.persistence.criteria.JoinType);

  public abstract <X, K, V> javax.persistence.criteria.MapJoin<X, K, V> joinMap(java.lang.String, javax.persistence.criteria.JoinType);
}
