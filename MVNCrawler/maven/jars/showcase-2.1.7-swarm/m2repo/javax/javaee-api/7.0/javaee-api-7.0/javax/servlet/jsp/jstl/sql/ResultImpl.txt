Compiled from "ResultImpl.java"
class javax.servlet.jsp.jstl.sql.ResultImpl implements javax.servlet.jsp.jstl.sql.Result,java.io.Serializable {
  private java.util.List<java.util.SortedMap<java.lang.String, java.lang.Object>> rowMap;

  private java.util.List<java.lang.Object[]> rowByIndex;

  private java.lang.String[] columnNames;

  private boolean isLimited;

  public javax.servlet.jsp.jstl.sql.ResultImpl(java.sql.ResultSet, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field rowMap:Ljava/util/List;
      15: aload_0
      16: new           #2                  // class java/util/ArrayList
      19: dup
      20: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #5                  // Field rowByIndex:Ljava/util/List;
      26: aload_1
      27: invokeinterface #6,  1            // InterfaceMethod java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;
      32: astore        4
      34: aload         4
      36: invokeinterface #7,  1            // InterfaceMethod java/sql/ResultSetMetaData.getColumnCount:()I
      41: istore        5
      43: aload_0
      44: iload         5
      46: anewarray     #8                  // class java/lang/String
      49: putfield      #9                  // Field columnNames:[Ljava/lang/String;
      52: iconst_1
      53: istore        6
      55: iload         6
      57: iload         5
      59: if_icmpgt     86
      62: aload_0
      63: getfield      #9                  // Field columnNames:[Ljava/lang/String;
      66: iload         6
      68: iconst_1
      69: isub
      70: aload         4
      72: iload         6
      74: invokeinterface #10,  2           // InterfaceMethod java/sql/ResultSetMetaData.getColumnName:(I)Ljava/lang/String;
      79: aastore
      80: iinc          6, 1
      83: goto          55
      86: iconst_0
      87: istore        6
      89: iload         6
      91: iload_2
      92: if_icmpge     108
      95: aload_1
      96: invokeinterface #11,  1           // InterfaceMethod java/sql/ResultSet.next:()Z
     101: pop
     102: iinc          6, 1
     105: goto          89
     108: iconst_0
     109: istore        6
     111: aload_1
     112: invokeinterface #11,  1           // InterfaceMethod java/sql/ResultSet.next:()Z
     117: ifeq          254
     120: iload_3
     121: iconst_m1
     122: if_icmpeq     139
     125: iload         6
     127: iload_3
     128: if_icmpne     139
     131: aload_0
     132: iconst_1
     133: putfield      #12                 // Field isLimited:Z
     136: goto          254
     139: iload         5
     141: anewarray     #13                 // class java/lang/Object
     144: astore        7
     146: new           #14                 // class java/util/TreeMap
     149: dup
     150: getstatic     #15                 // Field java/lang/String.CASE_INSENSITIVE_ORDER:Ljava/util/Comparator;
     153: invokespecial #16                 // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
     156: astore        8
     158: iconst_1
     159: istore        9
     161: iload         9
     163: iload         5
     165: if_icmpgt     224
     168: aload_1
     169: iload         9
     171: invokeinterface #17,  2           // InterfaceMethod java/sql/ResultSet.getObject:(I)Ljava/lang/Object;
     176: astore        10
     178: aload_1
     179: invokeinterface #18,  1           // InterfaceMethod java/sql/ResultSet.wasNull:()Z
     184: ifeq          190
     187: aconst_null
     188: astore        10
     190: aload         7
     192: iload         9
     194: iconst_1
     195: isub
     196: aload         10
     198: aastore
     199: aload         8
     201: aload_0
     202: getfield      #9                  // Field columnNames:[Ljava/lang/String;
     205: iload         9
     207: iconst_1
     208: isub
     209: aaload
     210: aload         10
     212: invokeinterface #19,  3           // InterfaceMethod java/util/SortedMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     217: pop
     218: iinc          9, 1
     221: goto          161
     224: aload_0
     225: getfield      #4                  // Field rowMap:Ljava/util/List;
     228: aload         8
     230: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     235: pop
     236: aload_0
     237: getfield      #5                  // Field rowByIndex:Ljava/util/List;
     240: aload         7
     242: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     247: pop
     248: iinc          6, 1
     251: goto          111
     254: return

  public java.util.SortedMap[] getRows();
    Code:
       0: aload_0
       1: getfield      #4                  // Field rowMap:Ljava/util/List;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #4                  // Field rowMap:Ljava/util/List;
      13: iconst_0
      14: anewarray     #21                 // class java/util/SortedMap
      17: invokeinterface #22,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      22: checkcast     #23                 // class "[Ljava/util/SortedMap;"
      25: areturn

  public java.lang.Object[][] getRowsByIndex();
    Code:
       0: aload_0
       1: getfield      #5                  // Field rowByIndex:Ljava/util/List;
       4: ifnonnull     12
       7: aconst_null
       8: checkcast     #24                 // class "[[Ljava/lang/Object;"
      11: areturn
      12: aload_0
      13: getfield      #5                  // Field rowByIndex:Ljava/util/List;
      16: iconst_0
      17: iconst_0
      18: multianewarray #24,  2            // class "[[Ljava/lang/Object;"
      22: invokeinterface #22,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      27: checkcast     #24                 // class "[[Ljava/lang/Object;"
      30: checkcast     #24                 // class "[[Ljava/lang/Object;"
      33: areturn

  public java.lang.String[] getColumnNames();
    Code:
       0: aload_0
       1: getfield      #9                  // Field columnNames:[Ljava/lang/String;
       4: areturn

  public int getRowCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field rowMap:Ljava/util/List;
       4: ifnonnull     9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #4                  // Field rowMap:Ljava/util/List;
      13: invokeinterface #25,  1           // InterfaceMethod java/util/List.size:()I
      18: ireturn

  public boolean isLimitedByMaxRows();
    Code:
       0: aload_0
       1: getfield      #12                 // Field isLimited:Z
       4: ireturn
}
