Compiled from "FactoryFinder.java"
final class javax.faces.FactoryFinder$FactoryManagerCache {
  private java.util.concurrent.ConcurrentMap<javax.faces.FactoryFinder$FactoryManagerCacheKey, javax.faces.FactoryFinder$FactoryManager> applicationMap;

  private java.util.concurrent.atomic.AtomicBoolean logNullFacesContext;

  private java.util.concurrent.atomic.AtomicBoolean logNonNullFacesContext;

  private javax.faces.FactoryFinder$FactoryManagerCache();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #2                  // Field applicationMap:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: new           #8                  // class java/util/concurrent/atomic/AtomicBoolean
      19: dup
      20: iconst_0
      21: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      24: putfield      #10                 // Field logNullFacesContext:Ljava/util/concurrent/atomic/AtomicBoolean;
      27: aload_0
      28: new           #8                  // class java/util/concurrent/atomic/AtomicBoolean
      31: dup
      32: iconst_0
      33: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      36: putfield      #11                 // Field logNonNullFacesContext:Ljava/util/concurrent/atomic/AtomicBoolean;
      39: return

  private java.lang.Object getFallbackFactory(java.lang.ClassLoader, javax.faces.FactoryFinder$FactoryManager, java.lang.String);
    Code:
       0: aconst_null
       1: astore        4
       3: aload_0
       4: getfield      #2                  // Field applicationMap:Ljava/util/concurrent/ConcurrentMap;
       7: invokeinterface #12,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      12: invokeinterface #13,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      17: astore        5
      19: aload         5
      21: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          107
      29: aload         5
      31: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #16                 // class java/util/Map$Entry
      39: astore        6
      41: aload         6
      43: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      48: checkcast     #18                 // class javax/faces/FactoryFinder$FactoryManagerCacheKey
      51: invokevirtual #19                 // Method javax/faces/FactoryFinder$FactoryManagerCacheKey.getClassLoader:()Ljava/lang/ClassLoader;
      54: aload_1
      55: invokevirtual #20                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      58: ifeq          104
      61: aload         6
      63: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      68: checkcast     #22                 // class javax/faces/FactoryFinder$FactoryManager
      71: aload_2
      72: invokevirtual #20                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      75: ifne          104
      78: aload         6
      80: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      85: checkcast     #22                 // class javax/faces/FactoryFinder$FactoryManager
      88: aload_1
      89: aload_3
      90: invokevirtual #23                 // Method javax/faces/FactoryFinder$FactoryManager.getFactory:(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Object;
      93: astore        4
      95: aconst_null
      96: aload         4
      98: if_acmpeq     104
     101: goto          107
     104: goto          19
     107: aload         4
     109: areturn

  private javax.faces.FactoryFinder$FactoryManager getApplicationFactoryManager(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #24                 // Method getApplicationFactoryManager:(Ljava/lang/ClassLoader;Z)Ljavax/faces/FactoryFinder$FactoryManager;
       6: astore_2
       7: aload_2
       8: areturn

  private javax.faces.FactoryFinder$FactoryManager getApplicationFactoryManager(java.lang.ClassLoader, boolean);
    Code:
       0: invokestatic  #25                 // Method javax/faces/context/FacesContext.getCurrentInstance:()Ljavax/faces/context/FacesContext;
       3: astore_3
       4: aload_0
       5: aload_3
       6: invokespecial #26                 // Method detectSpecialInitializationCase:(Ljavax/faces/context/FacesContext;)Z
       9: istore        4
      11: new           #18                 // class javax/faces/FactoryFinder$FactoryManagerCacheKey
      14: dup
      15: aload_3
      16: aload_1
      17: aload_0
      18: getfield      #2                  // Field applicationMap:Ljava/util/concurrent/ConcurrentMap;
      21: invokespecial #27                 // Method javax/faces/FactoryFinder$FactoryManagerCacheKey."<init>":(Ljavax/faces/context/FacesContext;Ljava/lang/ClassLoader;Ljava/util/Map;)V
      24: astore        5
      26: aload_0
      27: getfield      #2                  // Field applicationMap:Ljava/util/concurrent/ConcurrentMap;
      30: aload         5
      32: invokeinterface #28,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #22                 // class javax/faces/FactoryFinder$FactoryManager
      40: astore        6
      42: aconst_null
      43: astore        7
      45: aload         6
      47: ifnonnull     299
      50: iload_2
      51: ifeq          299
      54: iconst_0
      55: istore        8
      57: iload         4
      59: ifeq          229
      62: iconst_0
      63: istore        10
      65: iconst_1
      66: istore        11
      68: aload_0
      69: getfield      #2                  // Field applicationMap:Ljava/util/concurrent/ConcurrentMap;
      72: invokeinterface #12,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
      77: invokeinterface #13,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      82: astore        12
      84: aload         12
      86: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      91: ifeq          203
      94: aload         12
      96: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     101: checkcast     #16                 // class java/util/Map$Entry
     104: astore        13
     106: aload         13
     108: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     113: checkcast     #18                 // class javax/faces/FactoryFinder$FactoryManagerCacheKey
     116: astore        9
     118: aload         9
     120: invokevirtual #19                 // Method javax/faces/FactoryFinder$FactoryManagerCacheKey.getClassLoader:()Ljava/lang/ClassLoader;
     123: aload_1
     124: invokevirtual #20                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     127: ifeq          200
     130: iconst_0
     131: istore        11
     133: aconst_null
     134: aload         5
     136: invokevirtual #29                 // Method javax/faces/FactoryFinder$FactoryManagerCacheKey.getContext:()Ljava/lang/Object;
     139: if_acmpeq     185
     142: aconst_null
     143: aload         9
     145: invokevirtual #29                 // Method javax/faces/FactoryFinder$FactoryManagerCacheKey.getContext:()Ljava/lang/Object;
     148: if_acmpeq     185
     151: aload         5
     153: invokevirtual #29                 // Method javax/faces/FactoryFinder$FactoryManagerCacheKey.getContext:()Ljava/lang/Object;
     156: aload         9
     158: invokevirtual #29                 // Method javax/faces/FactoryFinder$FactoryManagerCacheKey.getContext:()Ljava/lang/Object;
     161: invokevirtual #20                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     164: ifne          185
     167: iconst_1
     168: istore        10
     170: aload         13
     172: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     177: checkcast     #22                 // class javax/faces/FactoryFinder$FactoryManager
     180: astore        7
     182: goto          203
     185: aload         13
     187: invokeinterface #21,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     192: checkcast     #22                 // class javax/faces/FactoryFinder$FactoryManager
     195: astore        6
     197: goto          203
     200: goto          84
     203: iload         11
     205: ifne          219
     208: aconst_null
     209: aload         6
     211: if_acmpne     223
     214: iload         10
     216: ifeq          223
     219: iconst_1
     220: goto          224
     223: iconst_0
     224: istore        8
     226: goto          232
     229: iconst_1
     230: istore        8
     232: iload         8
     234: ifeq          299
     237: aconst_null
     238: aload         7
     240: if_acmpeq     257
     243: new           #22                 // class javax/faces/FactoryFinder$FactoryManager
     246: dup
     247: aload         7
     249: invokespecial #30                 // Method javax/faces/FactoryFinder$FactoryManager."<init>":(Ljavax/faces/FactoryFinder$FactoryManager;)V
     252: astore        9
     254: goto          266
     257: new           #22                 // class javax/faces/FactoryFinder$FactoryManager
     260: dup
     261: invokespecial #31                 // Method javax/faces/FactoryFinder$FactoryManager."<init>":()V
     264: astore        9
     266: aload_0
     267: getfield      #2                  // Field applicationMap:Ljava/util/concurrent/ConcurrentMap;
     270: aload         5
     272: aload         9
     274: invokeinterface #32,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     279: checkcast     #22                 // class javax/faces/FactoryFinder$FactoryManager
     282: astore        6
     284: aconst_null
     285: aload         6
     287: if_acmpeq     295
     290: aload         6
     292: goto          297
     295: aload         9
     297: astore        6
     299: aload         6
     301: areturn

  private boolean detectSpecialInitializationCase(javax.faces.context.FacesContext);
    Code:
       0: iconst_0
       1: istore_2
       2: aconst_null
       3: aload_1
       4: if_acmpne     20
       7: aload_0
       8: getfield      #10                 // Field logNullFacesContext:Ljava/util/concurrent/atomic/AtomicBoolean;
      11: iconst_0
      12: iconst_1
      13: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      16: pop
      17: goto          30
      20: aload_0
      21: getfield      #11                 // Field logNonNullFacesContext:Ljava/util/concurrent/atomic/AtomicBoolean;
      24: iconst_0
      25: iconst_1
      26: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      29: pop
      30: aload_0
      31: getfield      #10                 // Field logNullFacesContext:Ljava/util/concurrent/atomic/AtomicBoolean;
      34: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      37: ifeq          54
      40: aload_0
      41: getfield      #11                 // Field logNonNullFacesContext:Ljava/util/concurrent/atomic/AtomicBoolean;
      44: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      47: ifeq          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: istore_2
      56: iload_2
      57: ireturn

  public void removeApplicationFactoryManager(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #24                 // Method getApplicationFactoryManager:(Ljava/lang/ClassLoader;Z)Ljavax/faces/FactoryFinder$FactoryManager;
       6: astore_2
       7: aconst_null
       8: aload_2
       9: if_acmpeq     16
      12: aload_2
      13: invokevirtual #35                 // Method javax/faces/FactoryFinder$FactoryManager.clearInjectionProvider:()V
      16: invokestatic  #25                 // Method javax/faces/context/FacesContext.getCurrentInstance:()Ljavax/faces/context/FacesContext;
      19: astore_3
      20: aload_0
      21: aload_3
      22: invokespecial #26                 // Method detectSpecialInitializationCase:(Ljavax/faces/context/FacesContext;)Z
      25: istore        4
      27: new           #18                 // class javax/faces/FactoryFinder$FactoryManagerCacheKey
      30: dup
      31: aload_3
      32: aload_1
      33: aload_0
      34: getfield      #2                  // Field applicationMap:Ljava/util/concurrent/ConcurrentMap;
      37: invokespecial #27                 // Method javax/faces/FactoryFinder$FactoryManagerCacheKey."<init>":(Ljavax/faces/context/FacesContext;Ljava/lang/ClassLoader;Ljava/util/Map;)V
      40: astore        5
      42: aload_0
      43: getfield      #2                  // Field applicationMap:Ljava/util/concurrent/ConcurrentMap;
      46: aload         5
      48: invokeinterface #36,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: iload         4
      56: ifeq          75
      59: aload_0
      60: getfield      #10                 // Field logNullFacesContext:Ljava/util/concurrent/atomic/AtomicBoolean;
      63: iconst_0
      64: invokevirtual #37                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      67: aload_0
      68: getfield      #11                 // Field logNonNullFacesContext:Ljava/util/concurrent/atomic/AtomicBoolean;
      71: iconst_0
      72: invokevirtual #37                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      75: return

  public void resetSpecialInitializationCaseFlags();
    Code:
       0: aload_0
       1: getfield      #10                 // Field logNullFacesContext:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: invokevirtual #37                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: aload_0
       9: getfield      #11                 // Field logNonNullFacesContext:Ljava/util/concurrent/atomic/AtomicBoolean;
      12: iconst_0
      13: invokevirtual #37                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      16: return

  javax.faces.FactoryFinder$FactoryManagerCache(javax.faces.FactoryFinder$1);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method "<init>":()V
       4: return

  static javax.faces.FactoryFinder$FactoryManager access$100(javax.faces.FactoryFinder$FactoryManagerCache, java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method getApplicationFactoryManager:(Ljava/lang/ClassLoader;)Ljavax/faces/FactoryFinder$FactoryManager;
       5: areturn

  static java.util.concurrent.ConcurrentMap access$200(javax.faces.FactoryFinder$FactoryManagerCache);
    Code:
       0: aload_0
       1: getfield      #2                  // Field applicationMap:Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  static java.lang.Object access$700(javax.faces.FactoryFinder$FactoryManagerCache, java.lang.ClassLoader, javax.faces.FactoryFinder$FactoryManager, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method getFallbackFactory:(Ljava/lang/ClassLoader;Ljavax/faces/FactoryFinder$FactoryManager;Ljava/lang/String;)Ljava/lang/Object;
       7: areturn
}
