Compiled from "StoredProcedureQuery.java"
public interface javax.persistence.StoredProcedureQuery extends javax.persistence.Query {
  public abstract javax.persistence.StoredProcedureQuery setHint(java.lang.String, java.lang.Object);

  public abstract <T> javax.persistence.StoredProcedureQuery setParameter(javax.persistence.Parameter<T>, T);

  public abstract javax.persistence.StoredProcedureQuery setParameter(javax.persistence.Parameter<java.util.Calendar>, java.util.Calendar, javax.persistence.TemporalType);

  public abstract javax.persistence.StoredProcedureQuery setParameter(javax.persistence.Parameter<java.util.Date>, java.util.Date, javax.persistence.TemporalType);

  public abstract javax.persistence.StoredProcedureQuery setParameter(java.lang.String, java.lang.Object);

  public abstract javax.persistence.StoredProcedureQuery setParameter(java.lang.String, java.util.Calendar, javax.persistence.TemporalType);

  public abstract javax.persistence.StoredProcedureQuery setParameter(java.lang.String, java.util.Date, javax.persistence.TemporalType);

  public abstract javax.persistence.StoredProcedureQuery setParameter(int, java.lang.Object);

  public abstract javax.persistence.StoredProcedureQuery setParameter(int, java.util.Calendar, javax.persistence.TemporalType);

  public abstract javax.persistence.StoredProcedureQuery setParameter(int, java.util.Date, javax.persistence.TemporalType);

  public abstract javax.persistence.StoredProcedureQuery setFlushMode(javax.persistence.FlushModeType);

  public abstract javax.persistence.StoredProcedureQuery registerStoredProcedureParameter(int, java.lang.Class, javax.persistence.ParameterMode);

  public abstract javax.persistence.StoredProcedureQuery registerStoredProcedureParameter(java.lang.String, java.lang.Class, javax.persistence.ParameterMode);

  public abstract java.lang.Object getOutputParameterValue(int);

  public abstract java.lang.Object getOutputParameterValue(java.lang.String);

  public abstract boolean execute();

  public abstract int executeUpdate();

  public abstract java.util.List getResultList();

  public abstract java.lang.Object getSingleResult();

  public abstract boolean hasMoreResults();

  public abstract int getUpdateCount();
}
