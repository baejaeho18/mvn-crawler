Compiled from "Validation.java"
class javax.validation.Validation$GetValidationProviderListAction implements java.security.PrivilegedAction<java.util.List<javax.validation.spi.ValidationProvider<?>>> {
  private static final java.util.WeakHashMap<java.lang.ClassLoader, java.lang.ref.SoftReference<java.util.List<javax.validation.spi.ValidationProvider<?>>>> providersPerClassloader;

  private javax.validation.Validation$GetValidationProviderListAction();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.util.List<javax.validation.spi.ValidationProvider<?>> getValidationProviderList();
    Code:
       0: new           #2                  // class javax/validation/Validation$GetValidationProviderListAction
       3: dup
       4: invokespecial #3                  // Method "<init>":()V
       7: astore_0
       8: invokestatic  #4                  // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
      11: ifnull        22
      14: aload_0
      15: invokestatic  #5                  // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      18: checkcast     #6                  // class java/util/List
      21: areturn
      22: aload_0
      23: invokevirtual #7                  // Method run:()Ljava/util/List;
      26: areturn

  public java.util.List<javax.validation.spi.ValidationProvider<?>> run();
    Code:
       0: invokestatic  #8                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: invokevirtual #9                  // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
       6: astore_1
       7: aload_0
       8: aload_1
       9: invokespecial #10                 // Method getCachedValidationProviders:(Ljava/lang/ClassLoader;)Ljava/util/List;
      12: astore_2
      13: aload_2
      14: ifnull        19
      17: aload_2
      18: areturn
      19: aload_0
      20: aload_1
      21: invokespecial #11                 // Method loadProviders:(Ljava/lang/ClassLoader;)Ljava/util/List;
      24: astore_3
      25: aload_3
      26: invokeinterface #12,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      31: ifeq          62
      34: ldc_w         #13                 // class javax/validation/Validation$DefaultValidationProviderResolver
      37: invokevirtual #14                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      40: astore_1
      41: aload_0
      42: aload_1
      43: invokespecial #10                 // Method getCachedValidationProviders:(Ljava/lang/ClassLoader;)Ljava/util/List;
      46: astore        4
      48: aload         4
      50: ifnull        56
      53: aload         4
      55: areturn
      56: aload_0
      57: aload_1
      58: invokespecial #11                 // Method loadProviders:(Ljava/lang/ClassLoader;)Ljava/util/List;
      61: astore_3
      62: aload_0
      63: aload_1
      64: aload_3
      65: invokespecial #15                 // Method cacheValidationProviders:(Ljava/lang/ClassLoader;Ljava/util/List;)V
      68: aload_3
      69: areturn

  private java.util.List<javax.validation.spi.ValidationProvider<?>> loadProviders(java.lang.ClassLoader);
    Code:
       0: ldc_w         #16                 // class javax/validation/spi/ValidationProvider
       3: aload_1
       4: invokestatic  #17                 // Method java/util/ServiceLoader.load:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;
       7: astore_2
       8: aload_2
       9: invokevirtual #18                 // Method java/util/ServiceLoader.iterator:()Ljava/util/Iterator;
      12: astore_3
      13: new           #19                 // class java/util/ArrayList
      16: dup
      17: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
      20: astore        4
      22: aload_3
      23: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          53
      31: aload         4
      33: aload_3
      34: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      44: pop
      45: goto          22
      48: astore        5
      50: goto          22
      53: aload         4
      55: areturn
    Exception table:
       from    to  target type
          31    45    48   Class java/util/ServiceConfigurationError

  private synchronized java.util.List<javax.validation.spi.ValidationProvider<?>> getCachedValidationProviders(java.lang.ClassLoader);
    Code:
       0: getstatic     #25                 // Field providersPerClassloader:Ljava/util/WeakHashMap;
       3: aload_1
       4: invokevirtual #26                 // Method java/util/WeakHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #27                 // class java/lang/ref/SoftReference
      10: astore_2
      11: aload_2
      12: ifnull        25
      15: aload_2
      16: invokevirtual #28                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      19: checkcast     #6                  // class java/util/List
      22: goto          26
      25: aconst_null
      26: areturn

  private synchronized void cacheValidationProviders(java.lang.ClassLoader, java.util.List<javax.validation.spi.ValidationProvider<?>>);
    Code:
       0: getstatic     #25                 // Field providersPerClassloader:Ljava/util/WeakHashMap;
       3: aload_1
       4: new           #27                 // class java/lang/ref/SoftReference
       7: dup
       8: aload_2
       9: invokespecial #29                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      12: invokevirtual #30                 // Method java/util/WeakHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: return

  public java.lang.Object run();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method run:()Ljava/util/List;
       4: areturn

  static {};
    Code:
       0: new           #31                 // class java/util/WeakHashMap
       3: dup
       4: invokespecial #32                 // Method java/util/WeakHashMap."<init>":()V
       7: putstatic     #25                 // Field providersPerClassloader:Ljava/util/WeakHashMap;
      10: return
}
