Compiled from "ChannelOption.java"
public class io.netty.channel.ChannelOption<T> extends io.netty.util.UniqueName {
  private static final java.util.concurrent.ConcurrentMap<java.lang.String, io.netty.channel.ChannelOption> names;

  public static final io.netty.channel.ChannelOption<io.netty.buffer.ByteBufAllocator> ALLOCATOR;

  public static final io.netty.channel.ChannelOption<io.netty.channel.RecvByteBufAllocator> RCVBUF_ALLOCATOR;

  public static final io.netty.channel.ChannelOption<io.netty.channel.MessageSizeEstimator> MESSAGE_SIZE_ESTIMATOR;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> CONNECT_TIMEOUT_MILLIS;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> MAX_MESSAGES_PER_READ;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> WRITE_SPIN_COUNT;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> WRITE_BUFFER_HIGH_WATER_MARK;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> WRITE_BUFFER_LOW_WATER_MARK;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> ALLOW_HALF_CLOSURE;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> AUTO_READ;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> AUTO_CLOSE;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> SO_BROADCAST;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> SO_KEEPALIVE;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> SO_SNDBUF;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> SO_RCVBUF;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> SO_REUSEADDR;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> SO_LINGER;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> SO_BACKLOG;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> SO_TIMEOUT;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> IP_TOS;

  public static final io.netty.channel.ChannelOption<java.net.InetAddress> IP_MULTICAST_ADDR;

  public static final io.netty.channel.ChannelOption<java.net.NetworkInterface> IP_MULTICAST_IF;

  public static final io.netty.channel.ChannelOption<java.lang.Integer> IP_MULTICAST_TTL;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> IP_MULTICAST_LOOP_DISABLED;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> TCP_NODELAY;

  public static final io.netty.channel.ChannelOption<java.lang.Long> AIO_READ_TIMEOUT;

  public static final io.netty.channel.ChannelOption<java.lang.Long> AIO_WRITE_TIMEOUT;

  public static final io.netty.channel.ChannelOption<java.lang.Boolean> DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION;

  public static <T> io.netty.channel.ChannelOption<T> valueOf(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #1                  // String name
       3: invokestatic  #2                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: getstatic     #3                  // Field names:Ljava/util/concurrent/ConcurrentMap;
      10: aload_0
      11: invokeinterface #4,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #5                  // class io/netty/channel/ChannelOption
      19: astore_1
      20: aload_1
      21: ifnonnull     53
      24: new           #5                  // class io/netty/channel/ChannelOption
      27: dup
      28: aload_0
      29: invokespecial #6                  // Method "<init>":(Ljava/lang/String;)V
      32: astore_1
      33: getstatic     #3                  // Field names:Ljava/util/concurrent/ConcurrentMap;
      36: aload_0
      37: aload_1
      38: invokeinterface #7,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #5                  // class io/netty/channel/ChannelOption
      46: astore_2
      47: aload_2
      48: ifnull        53
      51: aload_2
      52: astore_1
      53: aload_1
      54: areturn

  public static boolean exists(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #1                  // String name
       3: invokestatic  #2                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: getstatic     #3                  // Field names:Ljava/util/concurrent/ConcurrentMap;
      10: aload_0
      11: invokeinterface #8,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      16: ireturn

  public static <T> io.netty.channel.ChannelOption<T> newInstance(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #1                  // String name
       3: invokestatic  #2                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #5                  // class io/netty/channel/ChannelOption
      10: dup
      11: aload_0
      12: invokespecial #6                  // Method "<init>":(Ljava/lang/String;)V
      15: astore_1
      16: getstatic     #3                  // Field names:Ljava/util/concurrent/ConcurrentMap;
      19: aload_0
      20: aload_1
      21: invokeinterface #7,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #5                  // class io/netty/channel/ChannelOption
      29: astore_2
      30: aload_2
      31: ifnull        55
      34: new           #9                  // class java/lang/IllegalArgumentException
      37: dup
      38: ldc           #10                 // String \'%s\' is already in use
      40: iconst_1
      41: anewarray     #11                 // class java/lang/Object
      44: dup
      45: iconst_0
      46: aload_0
      47: aastore
      48: invokestatic  #12                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      51: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_1
      56: areturn

  protected io.netty.channel.ChannelOption(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method io/netty/util/UniqueName."<init>":(Ljava/lang/String;)V
       5: return

  public void validate(T);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #15                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #16                 // String value
      10: invokespecial #17                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: return

  static {};
    Code:
       0: invokestatic  #18                 // Method io/netty/util/internal/PlatformDependent.newConcurrentHashMap:()Ljava/util/concurrent/ConcurrentMap;
       3: putstatic     #3                  // Field names:Ljava/util/concurrent/ConcurrentMap;
       6: ldc           #19                 // String ALLOCATOR
       8: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      11: putstatic     #21                 // Field ALLOCATOR:Lio/netty/channel/ChannelOption;
      14: ldc           #22                 // String RCVBUF_ALLOCATOR
      16: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      19: putstatic     #23                 // Field RCVBUF_ALLOCATOR:Lio/netty/channel/ChannelOption;
      22: ldc           #24                 // String MESSAGE_SIZE_ESTIMATOR
      24: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      27: putstatic     #25                 // Field MESSAGE_SIZE_ESTIMATOR:Lio/netty/channel/ChannelOption;
      30: ldc           #26                 // String CONNECT_TIMEOUT_MILLIS
      32: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      35: putstatic     #27                 // Field CONNECT_TIMEOUT_MILLIS:Lio/netty/channel/ChannelOption;
      38: ldc           #28                 // String MAX_MESSAGES_PER_READ
      40: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      43: putstatic     #29                 // Field MAX_MESSAGES_PER_READ:Lio/netty/channel/ChannelOption;
      46: ldc           #30                 // String WRITE_SPIN_COUNT
      48: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      51: putstatic     #31                 // Field WRITE_SPIN_COUNT:Lio/netty/channel/ChannelOption;
      54: ldc           #32                 // String WRITE_BUFFER_HIGH_WATER_MARK
      56: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      59: putstatic     #33                 // Field WRITE_BUFFER_HIGH_WATER_MARK:Lio/netty/channel/ChannelOption;
      62: ldc           #34                 // String WRITE_BUFFER_LOW_WATER_MARK
      64: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      67: putstatic     #35                 // Field WRITE_BUFFER_LOW_WATER_MARK:Lio/netty/channel/ChannelOption;
      70: ldc           #36                 // String ALLOW_HALF_CLOSURE
      72: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      75: putstatic     #37                 // Field ALLOW_HALF_CLOSURE:Lio/netty/channel/ChannelOption;
      78: ldc           #38                 // String AUTO_READ
      80: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      83: putstatic     #39                 // Field AUTO_READ:Lio/netty/channel/ChannelOption;
      86: ldc           #40                 // String AUTO_CLOSE
      88: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      91: putstatic     #41                 // Field AUTO_CLOSE:Lio/netty/channel/ChannelOption;
      94: ldc           #42                 // String SO_BROADCAST
      96: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
      99: putstatic     #43                 // Field SO_BROADCAST:Lio/netty/channel/ChannelOption;
     102: ldc           #44                 // String SO_KEEPALIVE
     104: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     107: putstatic     #45                 // Field SO_KEEPALIVE:Lio/netty/channel/ChannelOption;
     110: ldc           #46                 // String SO_SNDBUF
     112: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     115: putstatic     #47                 // Field SO_SNDBUF:Lio/netty/channel/ChannelOption;
     118: ldc           #48                 // String SO_RCVBUF
     120: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     123: putstatic     #49                 // Field SO_RCVBUF:Lio/netty/channel/ChannelOption;
     126: ldc           #50                 // String SO_REUSEADDR
     128: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     131: putstatic     #51                 // Field SO_REUSEADDR:Lio/netty/channel/ChannelOption;
     134: ldc           #52                 // String SO_LINGER
     136: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     139: putstatic     #53                 // Field SO_LINGER:Lio/netty/channel/ChannelOption;
     142: ldc           #54                 // String SO_BACKLOG
     144: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     147: putstatic     #55                 // Field SO_BACKLOG:Lio/netty/channel/ChannelOption;
     150: ldc           #56                 // String SO_TIMEOUT
     152: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     155: putstatic     #57                 // Field SO_TIMEOUT:Lio/netty/channel/ChannelOption;
     158: ldc           #58                 // String IP_TOS
     160: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     163: putstatic     #59                 // Field IP_TOS:Lio/netty/channel/ChannelOption;
     166: ldc           #60                 // String IP_MULTICAST_ADDR
     168: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     171: putstatic     #61                 // Field IP_MULTICAST_ADDR:Lio/netty/channel/ChannelOption;
     174: ldc           #62                 // String IP_MULTICAST_IF
     176: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     179: putstatic     #63                 // Field IP_MULTICAST_IF:Lio/netty/channel/ChannelOption;
     182: ldc           #64                 // String IP_MULTICAST_TTL
     184: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     187: putstatic     #65                 // Field IP_MULTICAST_TTL:Lio/netty/channel/ChannelOption;
     190: ldc           #66                 // String IP_MULTICAST_LOOP_DISABLED
     192: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     195: putstatic     #67                 // Field IP_MULTICAST_LOOP_DISABLED:Lio/netty/channel/ChannelOption;
     198: ldc           #68                 // String TCP_NODELAY
     200: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     203: putstatic     #69                 // Field TCP_NODELAY:Lio/netty/channel/ChannelOption;
     206: ldc           #70                 // String AIO_READ_TIMEOUT
     208: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     211: putstatic     #71                 // Field AIO_READ_TIMEOUT:Lio/netty/channel/ChannelOption;
     214: ldc           #72                 // String AIO_WRITE_TIMEOUT
     216: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     219: putstatic     #73                 // Field AIO_WRITE_TIMEOUT:Lio/netty/channel/ChannelOption;
     222: ldc           #74                 // String DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION
     224: invokestatic  #20                 // Method valueOf:(Ljava/lang/String;)Lio/netty/channel/ChannelOption;
     227: putstatic     #75                 // Field DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION:Lio/netty/channel/ChannelOption;
     230: return
}
