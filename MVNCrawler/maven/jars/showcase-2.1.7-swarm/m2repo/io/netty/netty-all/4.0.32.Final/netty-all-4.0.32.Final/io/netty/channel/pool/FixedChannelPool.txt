Compiled from "FixedChannelPool.java"
public final class io.netty.channel.pool.FixedChannelPool extends io.netty.channel.pool.SimpleChannelPool {
  private static final java.lang.IllegalStateException FULL_EXCEPTION;

  private static final java.util.concurrent.TimeoutException TIMEOUT_EXCEPTION;

  private final io.netty.util.concurrent.EventExecutor executor;

  private final long acquireTimeoutNanos;

  private final java.lang.Runnable timeoutTask;

  private final java.util.Queue<io.netty.channel.pool.FixedChannelPool$AcquireTask> pendingAcquireQueue;

  private final int maxConnections;

  private final int maxPendingAcquires;

  private int acquiredChannelCount;

  private int pendingAcquireCount;

  static final boolean $assertionsDisabled;

  public io.netty.channel.pool.FixedChannelPool(io.netty.bootstrap.Bootstrap, io.netty.channel.pool.ChannelPoolHandler, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: ldc           #12                 // int 2147483647
       6: invokespecial #13                 // Method "<init>":(Lio/netty/bootstrap/Bootstrap;Lio/netty/channel/pool/ChannelPoolHandler;II)V
       9: return

  public io.netty.channel.pool.FixedChannelPool(io.netty.bootstrap.Bootstrap, io.netty.channel.pool.ChannelPoolHandler, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #14                 // Field io/netty/channel/pool/ChannelHealthChecker.ACTIVE:Lio/netty/channel/pool/ChannelHealthChecker;
       6: aconst_null
       7: ldc2_w        #15                 // long -1l
      10: iload_3
      11: iload         4
      13: invokespecial #17                 // Method "<init>":(Lio/netty/bootstrap/Bootstrap;Lio/netty/channel/pool/ChannelPoolHandler;Lio/netty/channel/pool/ChannelHealthChecker;Lio/netty/channel/pool/FixedChannelPool$AcquireTimeoutAction;JII)V
      16: return

  public io.netty.channel.pool.FixedChannelPool(io.netty.bootstrap.Bootstrap, io.netty.channel.pool.ChannelPoolHandler, io.netty.channel.pool.ChannelHealthChecker, io.netty.channel.pool.FixedChannelPool$AcquireTimeoutAction, long, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: lload         5
       8: iload         7
      10: iload         8
      12: iconst_1
      13: invokespecial #18                 // Method "<init>":(Lio/netty/bootstrap/Bootstrap;Lio/netty/channel/pool/ChannelPoolHandler;Lio/netty/channel/pool/ChannelHealthChecker;Lio/netty/channel/pool/FixedChannelPool$AcquireTimeoutAction;JIIZ)V
      16: return

  public io.netty.channel.pool.FixedChannelPool(io.netty.bootstrap.Bootstrap, io.netty.channel.pool.ChannelPoolHandler, io.netty.channel.pool.ChannelHealthChecker, io.netty.channel.pool.FixedChannelPool$AcquireTimeoutAction, long, int, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         9
       6: invokespecial #19                 // Method io/netty/channel/pool/SimpleChannelPool."<init>":(Lio/netty/bootstrap/Bootstrap;Lio/netty/channel/pool/ChannelPoolHandler;Lio/netty/channel/pool/ChannelHealthChecker;Z)V
       9: aload_0
      10: new           #20                 // class java/util/ArrayDeque
      13: dup
      14: invokespecial #21                 // Method java/util/ArrayDeque."<init>":()V
      17: putfield      #5                  // Field pendingAcquireQueue:Ljava/util/Queue;
      20: iload         7
      22: iconst_1
      23: if_icmpge     59
      26: new           #22                 // class java/lang/IllegalArgumentException
      29: dup
      30: new           #23                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #25                 // String maxConnections:
      39: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: iload         7
      44: invokevirtual #27                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      47: ldc           #28                 // String  (expected: >= 1)
      49: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: iload         8
      61: iconst_1
      62: if_icmpge     98
      65: new           #22                 // class java/lang/IllegalArgumentException
      68: dup
      69: new           #23                 // class java/lang/StringBuilder
      72: dup
      73: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      76: ldc           #31                 // String maxPendingAcquires:
      78: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: iload         8
      83: invokevirtual #27                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      86: ldc           #28                 // String  (expected: >= 1)
      88: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: aload         4
     100: ifnonnull     127
     103: lload         5
     105: ldc2_w        #15                 // long -1l
     108: lcmp
     109: ifne          127
     112: aload_0
     113: aconst_null
     114: putfield      #32                 // Field timeoutTask:Ljava/lang/Runnable;
     117: aload_0
     118: ldc2_w        #15                 // long -1l
     121: putfield      #6                  // Field acquireTimeoutNanos:J
     124: goto          282
     127: aload         4
     129: ifnonnull     151
     132: lload         5
     134: ldc2_w        #15                 // long -1l
     137: lcmp
     138: ifeq          151
     141: new           #33                 // class java/lang/NullPointerException
     144: dup
     145: ldc           #34                 // String action
     147: invokespecial #35                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     150: athrow
     151: aload         4
     153: ifnull        196
     156: lload         5
     158: lconst_0
     159: lcmp
     160: ifge          196
     163: new           #22                 // class java/lang/IllegalArgumentException
     166: dup
     167: new           #23                 // class java/lang/StringBuilder
     170: dup
     171: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     174: ldc           #36                 // String acquireTimeoutMillis:
     176: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: lload         5
     181: invokevirtual #37                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     184: ldc           #28                 // String  (expected: >= 1)
     186: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     189: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     192: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     195: athrow
     196: aload_0
     197: getstatic     #38                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     200: lload         5
     202: invokevirtual #39                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     205: putfield      #6                  // Field acquireTimeoutNanos:J
     208: getstatic     #40                 // Field io/netty/channel/pool/FixedChannelPool$6.$SwitchMap$io$netty$channel$pool$FixedChannelPool$AcquireTimeoutAction:[I
     211: aload         4
     213: invokevirtual #41                 // Method io/netty/channel/pool/FixedChannelPool$AcquireTimeoutAction.ordinal:()I
     216: iaload
     217: lookupswitch  { // 2
                     1: 244
                     2: 259
               default: 274
          }
     244: aload_0
     245: new           #42                 // class io/netty/channel/pool/FixedChannelPool$1
     248: dup
     249: aload_0
     250: invokespecial #43                 // Method io/netty/channel/pool/FixedChannelPool$1."<init>":(Lio/netty/channel/pool/FixedChannelPool;)V
     253: putfield      #32                 // Field timeoutTask:Ljava/lang/Runnable;
     256: goto          282
     259: aload_0
     260: new           #44                 // class io/netty/channel/pool/FixedChannelPool$2
     263: dup
     264: aload_0
     265: invokespecial #45                 // Method io/netty/channel/pool/FixedChannelPool$2."<init>":(Lio/netty/channel/pool/FixedChannelPool;)V
     268: putfield      #32                 // Field timeoutTask:Ljava/lang/Runnable;
     271: goto          282
     274: new           #46                 // class java/lang/Error
     277: dup
     278: invokespecial #47                 // Method java/lang/Error."<init>":()V
     281: athrow
     282: aload_0
     283: aload_1
     284: invokevirtual #48                 // Method io/netty/bootstrap/Bootstrap.group:()Lio/netty/channel/EventLoopGroup;
     287: invokeinterface #49,  1           // InterfaceMethod io/netty/channel/EventLoopGroup.next:()Lio/netty/channel/EventLoop;
     292: putfield      #8                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
     295: aload_0
     296: iload         7
     298: putfield      #50                 // Field maxConnections:I
     301: aload_0
     302: iload         8
     304: putfield      #51                 // Field maxPendingAcquires:I
     307: return

  public io.netty.util.concurrent.Future<io.netty.channel.Channel> acquire(io.netty.util.concurrent.Promise<io.netty.channel.Channel>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
       4: invokeinterface #52,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
       9: ifeq          20
      12: aload_0
      13: aload_1
      14: invokespecial #9                  // Method acquire0:(Lio/netty/util/concurrent/Promise;)V
      17: goto          38
      20: aload_0
      21: getfield      #8                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
      24: new           #53                 // class io/netty/channel/pool/FixedChannelPool$3
      27: dup
      28: aload_0
      29: aload_1
      30: invokespecial #54                 // Method io/netty/channel/pool/FixedChannelPool$3."<init>":(Lio/netty/channel/pool/FixedChannelPool;Lio/netty/util/concurrent/Promise;)V
      33: invokeinterface #55,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      38: goto          50
      41: astore_2
      42: aload_1
      43: aload_2
      44: invokeinterface #57,  2           // InterfaceMethod io/netty/util/concurrent/Promise.setFailure:(Ljava/lang/Throwable;)Lio/netty/util/concurrent/Promise;
      49: pop
      50: aload_1
      51: areturn
    Exception table:
       from    to  target type
           0    38    41   Class java/lang/Throwable

  private void acquire0(io.netty.util.concurrent.Promise<io.netty.channel.Channel>);
    Code:
       0: getstatic     #58                 // Field $assertionsDisabled:Z
       3: ifne          26
       6: aload_0
       7: getfield      #8                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
      10: invokeinterface #52,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      15: ifne          26
      18: new           #59                 // class java/lang/AssertionError
      21: dup
      22: invokespecial #60                 // Method java/lang/AssertionError."<init>":()V
      25: athrow
      26: aload_0
      27: getfield      #2                  // Field acquiredChannelCount:I
      30: aload_0
      31: getfield      #50                 // Field maxConnections:I
      34: if_icmpge     99
      37: getstatic     #58                 // Field $assertionsDisabled:Z
      40: ifne          58
      43: aload_0
      44: getfield      #2                  // Field acquiredChannelCount:I
      47: ifge          58
      50: new           #59                 // class java/lang/AssertionError
      53: dup
      54: invokespecial #60                 // Method java/lang/AssertionError."<init>":()V
      57: athrow
      58: aload_0
      59: getfield      #8                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
      62: invokeinterface #61,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.newPromise:()Lio/netty/util/concurrent/Promise;
      67: astore_2
      68: new           #62                 // class io/netty/channel/pool/FixedChannelPool$AcquireListener
      71: dup
      72: aload_0
      73: aload_1
      74: invokespecial #63                 // Method io/netty/channel/pool/FixedChannelPool$AcquireListener."<init>":(Lio/netty/channel/pool/FixedChannelPool;Lio/netty/util/concurrent/Promise;)V
      77: astore_3
      78: aload_3
      79: invokevirtual #64                 // Method io/netty/channel/pool/FixedChannelPool$AcquireListener.acquired:()V
      82: aload_2
      83: aload_3
      84: invokeinterface #65,  2           // InterfaceMethod io/netty/util/concurrent/Promise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Promise;
      89: pop
      90: aload_0
      91: aload_2
      92: invokespecial #10                 // Method io/netty/channel/pool/SimpleChannelPool.acquire:(Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Future;
      95: pop
      96: goto          221
      99: aload_0
     100: getfield      #4                  // Field pendingAcquireCount:I
     103: aload_0
     104: getfield      #51                 // Field maxPendingAcquires:I
     107: if_icmplt     123
     110: aload_1
     111: getstatic     #66                 // Field FULL_EXCEPTION:Ljava/lang/IllegalStateException;
     114: invokeinterface #57,  2           // InterfaceMethod io/netty/util/concurrent/Promise.setFailure:(Ljava/lang/Throwable;)Lio/netty/util/concurrent/Promise;
     119: pop
     120: goto          200
     123: new           #67                 // class io/netty/channel/pool/FixedChannelPool$AcquireTask
     126: dup
     127: aload_0
     128: aload_1
     129: invokespecial #68                 // Method io/netty/channel/pool/FixedChannelPool$AcquireTask."<init>":(Lio/netty/channel/pool/FixedChannelPool;Lio/netty/util/concurrent/Promise;)V
     132: astore_2
     133: aload_0
     134: getfield      #5                  // Field pendingAcquireQueue:Ljava/util/Queue;
     137: aload_2
     138: invokeinterface #69,  2           // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
     143: ifeq          190
     146: aload_0
     147: dup
     148: getfield      #4                  // Field pendingAcquireCount:I
     151: iconst_1
     152: iadd
     153: putfield      #4                  // Field pendingAcquireCount:I
     156: aload_0
     157: getfield      #32                 // Field timeoutTask:Ljava/lang/Runnable;
     160: ifnull        200
     163: aload_2
     164: aload_0
     165: getfield      #8                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
     168: aload_0
     169: getfield      #32                 // Field timeoutTask:Ljava/lang/Runnable;
     172: aload_0
     173: getfield      #6                  // Field acquireTimeoutNanos:J
     176: getstatic     #70                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     179: invokeinterface #71,  5           // InterfaceMethod io/netty/util/concurrent/EventExecutor.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
     184: putfield      #72                 // Field io/netty/channel/pool/FixedChannelPool$AcquireTask.timeoutFuture:Ljava/util/concurrent/ScheduledFuture;
     187: goto          200
     190: aload_1
     191: getstatic     #66                 // Field FULL_EXCEPTION:Ljava/lang/IllegalStateException;
     194: invokeinterface #57,  2           // InterfaceMethod io/netty/util/concurrent/Promise.setFailure:(Ljava/lang/Throwable;)Lio/netty/util/concurrent/Promise;
     199: pop
     200: getstatic     #58                 // Field $assertionsDisabled:Z
     203: ifne          221
     206: aload_0
     207: getfield      #4                  // Field pendingAcquireCount:I
     210: ifgt          221
     213: new           #59                 // class java/lang/AssertionError
     216: dup
     217: invokespecial #60                 // Method java/lang/AssertionError."<init>":()V
     220: athrow
     221: return

  public io.netty.util.concurrent.Future<java.lang.Void> release(io.netty.channel.Channel, io.netty.util.concurrent.Promise<java.lang.Void>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
       4: invokeinterface #61,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.newPromise:()Lio/netty/util/concurrent/Promise;
       9: astore_3
      10: aload_0
      11: aload_1
      12: aload_3
      13: new           #73                 // class io/netty/channel/pool/FixedChannelPool$4
      16: dup
      17: aload_0
      18: aload_2
      19: invokespecial #74                 // Method io/netty/channel/pool/FixedChannelPool$4."<init>":(Lio/netty/channel/pool/FixedChannelPool;Lio/netty/util/concurrent/Promise;)V
      22: invokeinterface #65,  2           // InterfaceMethod io/netty/util/concurrent/Promise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Promise;
      27: invokespecial #75                 // Method io/netty/channel/pool/SimpleChannelPool.release:(Lio/netty/channel/Channel;Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Future;
      30: pop
      31: aload_3
      32: areturn

  private void decrementAndRunTaskQueue();
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field acquiredChannelCount:I
       5: iconst_1
       6: isub
       7: putfield      #2                  // Field acquiredChannelCount:I
      10: getstatic     #58                 // Field $assertionsDisabled:Z
      13: ifne          31
      16: aload_0
      17: getfield      #2                  // Field acquiredChannelCount:I
      20: ifge          31
      23: new           #59                 // class java/lang/AssertionError
      26: dup
      27: invokespecial #60                 // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: aload_0
      32: invokespecial #3                  // Method runTaskQueue:()V
      35: return

  private void runTaskQueue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field acquiredChannelCount:I
       4: aload_0
       5: getfield      #50                 // Field maxConnections:I
       8: if_icmpge     74
      11: aload_0
      12: getfield      #5                  // Field pendingAcquireQueue:Ljava/util/Queue;
      15: invokeinterface #76,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      20: checkcast     #67                 // class io/netty/channel/pool/FixedChannelPool$AcquireTask
      23: astore_1
      24: aload_1
      25: ifnonnull     31
      28: goto          74
      31: aload_1
      32: getfield      #72                 // Field io/netty/channel/pool/FixedChannelPool$AcquireTask.timeoutFuture:Ljava/util/concurrent/ScheduledFuture;
      35: astore_2
      36: aload_2
      37: ifnull        48
      40: aload_2
      41: iconst_0
      42: invokeinterface #77,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      47: pop
      48: aload_0
      49: dup
      50: getfield      #4                  // Field pendingAcquireCount:I
      53: iconst_1
      54: isub
      55: putfield      #4                  // Field pendingAcquireCount:I
      58: aload_1
      59: invokevirtual #78                 // Method io/netty/channel/pool/FixedChannelPool$AcquireTask.acquired:()V
      62: aload_0
      63: aload_1
      64: getfield      #79                 // Field io/netty/channel/pool/FixedChannelPool$AcquireTask.promise:Lio/netty/util/concurrent/Promise;
      67: invokespecial #10                 // Method io/netty/channel/pool/SimpleChannelPool.acquire:(Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Future;
      70: pop
      71: goto          0
      74: getstatic     #58                 // Field $assertionsDisabled:Z
      77: ifne          95
      80: aload_0
      81: getfield      #4                  // Field pendingAcquireCount:I
      84: ifge          95
      87: new           #59                 // class java/lang/AssertionError
      90: dup
      91: invokespecial #60                 // Method java/lang/AssertionError."<init>":()V
      94: athrow
      95: getstatic     #58                 // Field $assertionsDisabled:Z
      98: ifne          116
     101: aload_0
     102: getfield      #2                  // Field acquiredChannelCount:I
     105: ifge          116
     108: new           #59                 // class java/lang/AssertionError
     111: dup
     112: invokespecial #60                 // Method java/lang/AssertionError."<init>":()V
     115: athrow
     116: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #8                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
       4: new           #80                 // class io/netty/channel/pool/FixedChannelPool$5
       7: dup
       8: aload_0
       9: invokespecial #81                 // Method io/netty/channel/pool/FixedChannelPool$5."<init>":(Lio/netty/channel/pool/FixedChannelPool;)V
      12: invokeinterface #55,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      17: return

  static java.util.concurrent.TimeoutException access$100();
    Code:
       0: getstatic     #11                 // Field TIMEOUT_EXCEPTION:Ljava/util/concurrent/TimeoutException;
       3: areturn

  static io.netty.util.concurrent.Future access$201(io.netty.channel.pool.FixedChannelPool, io.netty.util.concurrent.Promise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method io/netty/channel/pool/SimpleChannelPool.acquire:(Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Future;
       5: areturn

  static void access$300(io.netty.channel.pool.FixedChannelPool, io.netty.util.concurrent.Promise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method acquire0:(Lio/netty/util/concurrent/Promise;)V
       5: return

  static io.netty.util.concurrent.EventExecutor access$400(io.netty.channel.pool.FixedChannelPool);
    Code:
       0: aload_0
       1: getfield      #8                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
       4: areturn

  static void access$500(io.netty.channel.pool.FixedChannelPool);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method decrementAndRunTaskQueue:()V
       4: return

  static long access$600(io.netty.channel.pool.FixedChannelPool);
    Code:
       0: aload_0
       1: getfield      #6                  // Field acquireTimeoutNanos:J
       4: lreturn

  static java.util.Queue access$700(io.netty.channel.pool.FixedChannelPool);
    Code:
       0: aload_0
       1: getfield      #5                  // Field pendingAcquireQueue:Ljava/util/Queue;
       4: areturn

  static int access$806(io.netty.channel.pool.FixedChannelPool);
    Code:
       0: aload_0
       1: dup
       2: getfield      #4                  // Field pendingAcquireCount:I
       5: iconst_1
       6: isub
       7: dup_x1
       8: putfield      #4                  // Field pendingAcquireCount:I
      11: ireturn

  static void access$900(io.netty.channel.pool.FixedChannelPool);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method runTaskQueue:()V
       4: return

  static int access$1008(io.netty.channel.pool.FixedChannelPool);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field acquiredChannelCount:I
       5: dup_x1
       6: iconst_1
       7: iadd
       8: putfield      #2                  // Field acquiredChannelCount:I
      11: ireturn

  static int access$1002(io.netty.channel.pool.FixedChannelPool, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #2                  // Field acquiredChannelCount:I
       6: ireturn

  static int access$802(io.netty.channel.pool.FixedChannelPool, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #4                  // Field pendingAcquireCount:I
       6: ireturn

  static void access$1101(io.netty.channel.pool.FixedChannelPool);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/netty/channel/pool/SimpleChannelPool.close:()V
       4: return

  static {};
    Code:
       0: ldc_w         #82                 // class io/netty/channel/pool/FixedChannelPool
       3: invokevirtual #83                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #58                 // Field $assertionsDisabled:Z
      17: new           #84                 // class java/lang/IllegalStateException
      20: dup
      21: ldc           #85                 // String Too many outstanding acquire operations
      23: invokespecial #86                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      26: putstatic     #66                 // Field FULL_EXCEPTION:Ljava/lang/IllegalStateException;
      29: new           #87                 // class java/util/concurrent/TimeoutException
      32: dup
      33: ldc           #88                 // String Acquire operation took longer then configured maximum time
      35: invokespecial #89                 // Method java/util/concurrent/TimeoutException."<init>":(Ljava/lang/String;)V
      38: putstatic     #11                 // Field TIMEOUT_EXCEPTION:Ljava/util/concurrent/TimeoutException;
      41: getstatic     #66                 // Field FULL_EXCEPTION:Ljava/lang/IllegalStateException;
      44: getstatic     #90                 // Field io/netty/util/internal/EmptyArrays.EMPTY_STACK_TRACE:[Ljava/lang/StackTraceElement;
      47: invokevirtual #91                 // Method java/lang/IllegalStateException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      50: getstatic     #11                 // Field TIMEOUT_EXCEPTION:Ljava/util/concurrent/TimeoutException;
      53: getstatic     #90                 // Field io/netty/util/internal/EmptyArrays.EMPTY_STACK_TRACE:[Ljava/lang/StackTraceElement;
      56: invokevirtual #92                 // Method java/util/concurrent/TimeoutException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      59: return
}
