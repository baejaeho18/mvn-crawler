Compiled from "Recycler.java"
final class io.netty.util.Recycler$Stack<T> {
  final io.netty.util.Recycler<T> parent;

  final java.lang.Thread thread;

  private io.netty.util.Recycler$DefaultHandle[] elements;

  private final int maxCapacity;

  private int size;

  private volatile io.netty.util.Recycler$WeakOrderQueue head;

  private io.netty.util.Recycler$WeakOrderQueue cursor;

  private io.netty.util.Recycler$WeakOrderQueue prev;

  io.netty.util.Recycler$Stack(io.netty.util.Recycler<T>, java.lang.Thread, int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field parent:Lio/netty/util/Recycler;
       9: aload_0
      10: aload_2
      11: putfield      #6                  // Field thread:Ljava/lang/Thread;
      14: aload_0
      15: iload_3
      16: putfield      #7                  // Field maxCapacity:I
      19: aload_0
      20: invokestatic  #8                  // Method io/netty/util/Recycler.access$1400:()I
      23: iload_3
      24: invokestatic  #9                  // Method java/lang/Math.min:(II)I
      27: anewarray     #10                 // class io/netty/util/Recycler$DefaultHandle
      30: putfield      #3                  // Field elements:[Lio/netty/util/Recycler$DefaultHandle;
      33: return

  int increaseCapacity(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field elements:[Lio/netty/util/Recycler$DefaultHandle;
       4: arraylength
       5: istore_2
       6: aload_0
       7: getfield      #7                  // Field maxCapacity:I
      10: istore_3
      11: iload_2
      12: iconst_1
      13: ishl
      14: istore_2
      15: iload_2
      16: iload_1
      17: if_icmpge     25
      20: iload_2
      21: iload_3
      22: if_icmplt     11
      25: iload_2
      26: iload_3
      27: invokestatic  #9                  // Method java/lang/Math.min:(II)I
      30: istore_2
      31: iload_2
      32: aload_0
      33: getfield      #3                  // Field elements:[Lio/netty/util/Recycler$DefaultHandle;
      36: arraylength
      37: if_icmpeq     55
      40: aload_0
      41: aload_0
      42: getfield      #3                  // Field elements:[Lio/netty/util/Recycler$DefaultHandle;
      45: iload_2
      46: invokestatic  #11                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      49: checkcast     #12                 // class "[Lio/netty/util/Recycler$DefaultHandle;"
      52: putfield      #3                  // Field elements:[Lio/netty/util/Recycler$DefaultHandle;
      55: iload_2
      56: ireturn

  io.netty.util.Recycler$DefaultHandle pop();
    Code:
       0: aload_0
       1: getfield      #2                  // Field size:I
       4: istore_1
       5: iload_1
       6: ifne          23
       9: aload_0
      10: invokevirtual #13                 // Method scavenge:()Z
      13: ifne          18
      16: aconst_null
      17: areturn
      18: aload_0
      19: getfield      #2                  // Field size:I
      22: istore_1
      23: iinc          1, -1
      26: aload_0
      27: getfield      #3                  // Field elements:[Lio/netty/util/Recycler$DefaultHandle;
      30: iload_1
      31: aaload
      32: astore_2
      33: aload_2
      34: invokestatic  #14                 // Method io/netty/util/Recycler$DefaultHandle.access$900:(Lio/netty/util/Recycler$DefaultHandle;)I
      37: aload_2
      38: invokestatic  #15                 // Method io/netty/util/Recycler$DefaultHandle.access$1300:(Lio/netty/util/Recycler$DefaultHandle;)I
      41: if_icmpeq     54
      44: new           #16                 // class java/lang/IllegalStateException
      47: dup
      48: ldc           #17                 // String recycled multiple times
      50: invokespecial #18                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_2
      55: iconst_0
      56: invokestatic  #19                 // Method io/netty/util/Recycler$DefaultHandle.access$1302:(Lio/netty/util/Recycler$DefaultHandle;I)I
      59: pop
      60: aload_2
      61: iconst_0
      62: invokestatic  #20                 // Method io/netty/util/Recycler$DefaultHandle.access$902:(Lio/netty/util/Recycler$DefaultHandle;I)I
      65: pop
      66: aload_0
      67: iload_1
      68: putfield      #2                  // Field size:I
      71: aload_2
      72: areturn

  boolean scavenge();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method scavengeSome:()Z
       4: ifeq          9
       7: iconst_1
       8: ireturn
       9: aload_0
      10: aconst_null
      11: putfield      #22                 // Field prev:Lio/netty/util/Recycler$WeakOrderQueue;
      14: aload_0
      15: aload_0
      16: getfield      #1                  // Field head:Lio/netty/util/Recycler$WeakOrderQueue;
      19: putfield      #23                 // Field cursor:Lio/netty/util/Recycler$WeakOrderQueue;
      22: iconst_0
      23: ireturn

  boolean scavengeSome();
    Code:
       0: aload_0
       1: getfield      #23                 // Field cursor:Lio/netty/util/Recycler$WeakOrderQueue;
       4: astore_1
       5: aload_1
       6: ifnonnull     20
       9: aload_0
      10: getfield      #1                  // Field head:Lio/netty/util/Recycler$WeakOrderQueue;
      13: astore_1
      14: aload_1
      15: ifnonnull     20
      18: iconst_0
      19: ireturn
      20: iconst_0
      21: istore_2
      22: aload_0
      23: getfield      #22                 // Field prev:Lio/netty/util/Recycler$WeakOrderQueue;
      26: astore_3
      27: aload_1
      28: aload_0
      29: invokevirtual #24                 // Method io/netty/util/Recycler$WeakOrderQueue.transfer:(Lio/netty/util/Recycler$Stack;)Z
      32: ifeq          40
      35: iconst_1
      36: istore_2
      37: goto          103
      40: aload_1
      41: invokestatic  #25                 // Method io/netty/util/Recycler$WeakOrderQueue.access$1500:(Lio/netty/util/Recycler$WeakOrderQueue;)Lio/netty/util/Recycler$WeakOrderQueue;
      44: astore        4
      46: aload_1
      47: invokestatic  #26                 // Method io/netty/util/Recycler$WeakOrderQueue.access$1600:(Lio/netty/util/Recycler$WeakOrderQueue;)Ljava/lang/ref/WeakReference;
      50: invokevirtual #27                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      53: ifnonnull     90
      56: aload_1
      57: invokevirtual #28                 // Method io/netty/util/Recycler$WeakOrderQueue.hasFinalData:()Z
      60: ifeq          76
      63: aload_1
      64: aload_0
      65: invokevirtual #24                 // Method io/netty/util/Recycler$WeakOrderQueue.transfer:(Lio/netty/util/Recycler$Stack;)Z
      68: ifeq          76
      71: iconst_1
      72: istore_2
      73: goto          63
      76: aload_3
      77: ifnull        92
      80: aload_3
      81: aload         4
      83: invokestatic  #29                 // Method io/netty/util/Recycler$WeakOrderQueue.access$1502:(Lio/netty/util/Recycler$WeakOrderQueue;Lio/netty/util/Recycler$WeakOrderQueue;)Lio/netty/util/Recycler$WeakOrderQueue;
      86: pop
      87: goto          92
      90: aload_1
      91: astore_3
      92: aload         4
      94: astore_1
      95: aload_1
      96: ifnull        103
      99: iload_2
     100: ifeq          27
     103: aload_0
     104: aload_3
     105: putfield      #22                 // Field prev:Lio/netty/util/Recycler$WeakOrderQueue;
     108: aload_0
     109: aload_1
     110: putfield      #23                 // Field cursor:Lio/netty/util/Recycler$WeakOrderQueue;
     113: iload_2
     114: ireturn

  void push(io.netty.util.Recycler$DefaultHandle);
    Code:
       0: aload_1
       1: invokestatic  #15                 // Method io/netty/util/Recycler$DefaultHandle.access$1300:(Lio/netty/util/Recycler$DefaultHandle;)I
       4: aload_1
       5: invokestatic  #14                 // Method io/netty/util/Recycler$DefaultHandle.access$900:(Lio/netty/util/Recycler$DefaultHandle;)I
       8: ior
       9: ifeq          22
      12: new           #16                 // class java/lang/IllegalStateException
      15: dup
      16: ldc           #30                 // String recycled already
      18: invokespecial #18                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_1
      23: aload_1
      24: invokestatic  #31                 // Method io/netty/util/Recycler.access$1700:()I
      27: invokestatic  #20                 // Method io/netty/util/Recycler$DefaultHandle.access$902:(Lio/netty/util/Recycler$DefaultHandle;I)I
      30: invokestatic  #19                 // Method io/netty/util/Recycler$DefaultHandle.access$1302:(Lio/netty/util/Recycler$DefaultHandle;I)I
      33: pop
      34: aload_0
      35: getfield      #2                  // Field size:I
      38: istore_2
      39: iload_2
      40: aload_0
      41: getfield      #7                  // Field maxCapacity:I
      44: if_icmplt     48
      47: return
      48: iload_2
      49: aload_0
      50: getfield      #3                  // Field elements:[Lio/netty/util/Recycler$DefaultHandle;
      53: arraylength
      54: if_icmpne     81
      57: aload_0
      58: aload_0
      59: getfield      #3                  // Field elements:[Lio/netty/util/Recycler$DefaultHandle;
      62: iload_2
      63: iconst_1
      64: ishl
      65: aload_0
      66: getfield      #7                  // Field maxCapacity:I
      69: invokestatic  #9                  // Method java/lang/Math.min:(II)I
      72: invokestatic  #11                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      75: checkcast     #12                 // class "[Lio/netty/util/Recycler$DefaultHandle;"
      78: putfield      #3                  // Field elements:[Lio/netty/util/Recycler$DefaultHandle;
      81: aload_0
      82: getfield      #3                  // Field elements:[Lio/netty/util/Recycler$DefaultHandle;
      85: iload_2
      86: aload_1
      87: aastore
      88: aload_0
      89: iload_2
      90: iconst_1
      91: iadd
      92: putfield      #2                  // Field size:I
      95: return

  io.netty.util.Recycler$DefaultHandle newHandle();
    Code:
       0: new           #10                 // class io/netty/util/Recycler$DefaultHandle
       3: dup
       4: aload_0
       5: invokespecial #32                 // Method io/netty/util/Recycler$DefaultHandle."<init>":(Lio/netty/util/Recycler$Stack;)V
       8: areturn

  static io.netty.util.Recycler$DefaultHandle[] access$300(io.netty.util.Recycler$Stack);
    Code:
       0: aload_0
       1: getfield      #3                  // Field elements:[Lio/netty/util/Recycler$DefaultHandle;
       4: areturn

  static int access$400(io.netty.util.Recycler$Stack);
    Code:
       0: aload_0
       1: getfield      #2                  // Field size:I
       4: ireturn

  static io.netty.util.Recycler$WeakOrderQueue access$800(io.netty.util.Recycler$Stack);
    Code:
       0: aload_0
       1: getfield      #1                  // Field head:Lio/netty/util/Recycler$WeakOrderQueue;
       4: areturn

  static io.netty.util.Recycler$WeakOrderQueue access$802(io.netty.util.Recycler$Stack, io.netty.util.Recycler$WeakOrderQueue);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field head:Lio/netty/util/Recycler$WeakOrderQueue;
       6: areturn

  static int access$402(io.netty.util.Recycler$Stack, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #2                  // Field size:I
       6: ireturn
}
