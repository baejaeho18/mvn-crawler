Compiled from "PoolArena.java"
final class io.netty.buffer.PoolArena$DirectArena extends io.netty.buffer.PoolArena<java.nio.ByteBuffer> {
  private static final boolean HAS_UNSAFE;

  io.netty.buffer.PoolArena$DirectArena(io.netty.buffer.PooledByteBufAllocator, int, int, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: invokespecial #1                  // Method io/netty/buffer/PoolArena."<init>":(Lio/netty/buffer/PooledByteBufAllocator;IIII)V
      11: return

  boolean isDirect();
    Code:
       0: iconst_1
       1: ireturn

  protected io.netty.buffer.PoolChunk<java.nio.ByteBuffer> newChunk(int, int, int, int);
    Code:
       0: new           #2                  // class io/netty/buffer/PoolChunk
       3: dup
       4: aload_0
       5: iload         4
       7: invokestatic  #3                  // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      10: iload_1
      11: iload_2
      12: iload_3
      13: iload         4
      15: invokespecial #4                  // Method io/netty/buffer/PoolChunk."<init>":(Lio/netty/buffer/PoolArena;Ljava/lang/Object;IIII)V
      18: areturn

  protected io.netty.buffer.PoolChunk<java.nio.ByteBuffer> newUnpooledChunk(int);
    Code:
       0: new           #2                  // class io/netty/buffer/PoolChunk
       3: dup
       4: aload_0
       5: iload_1
       6: invokestatic  #3                  // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
       9: iload_1
      10: invokespecial #5                  // Method io/netty/buffer/PoolChunk."<init>":(Lio/netty/buffer/PoolArena;Ljava/lang/Object;I)V
      13: areturn

  protected void destroyChunk(io.netty.buffer.PoolChunk<java.nio.ByteBuffer>);
    Code:
       0: aload_1
       1: getfield      #6                  // Field io/netty/buffer/PoolChunk.memory:Ljava/lang/Object;
       4: checkcast     #7                  // class java/nio/ByteBuffer
       7: invokestatic  #8                  // Method io/netty/util/internal/PlatformDependent.freeDirectBuffer:(Ljava/nio/ByteBuffer;)V
      10: return

  protected io.netty.buffer.PooledByteBuf<java.nio.ByteBuffer> newByteBuf(int);
    Code:
       0: getstatic     #9                  // Field HAS_UNSAFE:Z
       3: ifeq          11
       6: iload_1
       7: invokestatic  #10                 // Method io/netty/buffer/PooledUnsafeDirectByteBuf.newInstance:(I)Lio/netty/buffer/PooledUnsafeDirectByteBuf;
      10: areturn
      11: iload_1
      12: invokestatic  #11                 // Method io/netty/buffer/PooledDirectByteBuf.newInstance:(I)Lio/netty/buffer/PooledDirectByteBuf;
      15: areturn

  protected void memoryCopy(java.nio.ByteBuffer, int, java.nio.ByteBuffer, int, int);
    Code:
       0: iload         5
       2: ifne          6
       5: return
       6: getstatic     #9                  // Field HAS_UNSAFE:Z
       9: ifeq          36
      12: aload_1
      13: invokestatic  #12                 // Method io/netty/util/internal/PlatformDependent.directBufferAddress:(Ljava/nio/ByteBuffer;)J
      16: iload_2
      17: i2l
      18: ladd
      19: aload_3
      20: invokestatic  #12                 // Method io/netty/util/internal/PlatformDependent.directBufferAddress:(Ljava/nio/ByteBuffer;)J
      23: iload         4
      25: i2l
      26: ladd
      27: iload         5
      29: i2l
      30: invokestatic  #13                 // Method io/netty/util/internal/PlatformDependent.copyMemory:(JJJ)V
      33: goto          72
      36: aload_1
      37: invokevirtual #14                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      40: astore_1
      41: aload_3
      42: invokevirtual #14                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      45: astore_3
      46: aload_1
      47: iload_2
      48: invokevirtual #15                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      51: iload_2
      52: iload         5
      54: iadd
      55: invokevirtual #16                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      58: pop
      59: aload_3
      60: iload         4
      62: invokevirtual #15                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      65: pop
      66: aload_3
      67: aload_1
      68: invokevirtual #17                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      71: pop
      72: return

  protected void memoryCopy(java.lang.Object, int, java.lang.Object, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class java/nio/ByteBuffer
       5: iload_2
       6: aload_3
       7: checkcast     #7                  // class java/nio/ByteBuffer
      10: iload         4
      12: iload         5
      14: invokevirtual #18                 // Method memoryCopy:(Ljava/nio/ByteBuffer;ILjava/nio/ByteBuffer;II)V
      17: return

  static {};
    Code:
       0: invokestatic  #19                 // Method io/netty/util/internal/PlatformDependent.hasUnsafe:()Z
       3: putstatic     #9                  // Field HAS_UNSAFE:Z
       6: return
}
