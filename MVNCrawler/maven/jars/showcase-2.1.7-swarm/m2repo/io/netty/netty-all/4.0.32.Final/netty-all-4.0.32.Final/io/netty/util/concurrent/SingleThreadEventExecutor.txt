Compiled from "SingleThreadEventExecutor.java"
public abstract class io.netty.util.concurrent.SingleThreadEventExecutor extends io.netty.util.concurrent.AbstractScheduledEventExecutor {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final int ST_NOT_STARTED;

  private static final int ST_STARTED;

  private static final int ST_SHUTTING_DOWN;

  private static final int ST_SHUTDOWN;

  private static final int ST_TERMINATED;

  private static final java.lang.Runnable WAKEUP_TASK;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.netty.util.concurrent.SingleThreadEventExecutor> STATE_UPDATER;

  private final io.netty.util.concurrent.EventExecutorGroup parent;

  private final java.util.Queue<java.lang.Runnable> taskQueue;

  private final java.lang.Thread thread;

  private final io.netty.util.concurrent.ThreadProperties threadProperties;

  private final java.util.concurrent.Semaphore threadLock;

  private final java.util.Set<java.lang.Runnable> shutdownHooks;

  private final boolean addTaskWakesUp;

  private long lastExecutionTime;

  private volatile int state;

  private volatile long gracefulShutdownQuietPeriod;

  private volatile long gracefulShutdownTimeout;

  private long gracefulShutdownStartTime;

  private final io.netty.util.concurrent.Promise<?> terminationFuture;

  private static final long SCHEDULE_PURGE_INTERVAL;

  static final boolean $assertionsDisabled;

  protected io.netty.util.concurrent.SingleThreadEventExecutor(io.netty.util.concurrent.EventExecutorGroup, java.util.concurrent.ThreadFactory, boolean);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method io/netty/util/concurrent/AbstractScheduledEventExecutor."<init>":()V
       4: aload_0
       5: new           #9                  // class java/util/concurrent/Semaphore
       8: dup
       9: iconst_0
      10: invokespecial #10                 // Method java/util/concurrent/Semaphore."<init>":(I)V
      13: putfield      #4                  // Field threadLock:Ljava/util/concurrent/Semaphore;
      16: aload_0
      17: new           #11                 // class java/util/LinkedHashSet
      20: dup
      21: invokespecial #12                 // Method java/util/LinkedHashSet."<init>":()V
      24: putfield      #1                  // Field shutdownHooks:Ljava/util/Set;
      27: aload_0
      28: iconst_1
      29: putfield      #13                 // Field state:I
      32: aload_0
      33: new           #14                 // class io/netty/util/concurrent/DefaultPromise
      36: dup
      37: getstatic     #15                 // Field io/netty/util/concurrent/GlobalEventExecutor.INSTANCE:Lio/netty/util/concurrent/GlobalEventExecutor;
      40: invokespecial #16                 // Method io/netty/util/concurrent/DefaultPromise."<init>":(Lio/netty/util/concurrent/EventExecutor;)V
      43: putfield      #2                  // Field terminationFuture:Lio/netty/util/concurrent/Promise;
      46: aload_2
      47: ifnonnull     60
      50: new           #17                 // class java/lang/NullPointerException
      53: dup
      54: ldc           #18                 // String threadFactory
      56: invokespecial #19                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: aload_0
      61: aload_1
      62: putfield      #20                 // Field parent:Lio/netty/util/concurrent/EventExecutorGroup;
      65: aload_0
      66: iload_3
      67: putfield      #21                 // Field addTaskWakesUp:Z
      70: aload_0
      71: aload_2
      72: new           #22                 // class io/netty/util/concurrent/SingleThreadEventExecutor$2
      75: dup
      76: aload_0
      77: invokespecial #23                 // Method io/netty/util/concurrent/SingleThreadEventExecutor$2."<init>":(Lio/netty/util/concurrent/SingleThreadEventExecutor;)V
      80: invokeinterface #24,  2           // InterfaceMethod java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
      85: putfield      #25                 // Field thread:Ljava/lang/Thread;
      88: aload_0
      89: new           #26                 // class io/netty/util/concurrent/SingleThreadEventExecutor$DefaultThreadProperties
      92: dup
      93: aload_0
      94: getfield      #25                 // Field thread:Ljava/lang/Thread;
      97: invokespecial #27                 // Method io/netty/util/concurrent/SingleThreadEventExecutor$DefaultThreadProperties."<init>":(Ljava/lang/Thread;)V
     100: putfield      #28                 // Field threadProperties:Lio/netty/util/concurrent/ThreadProperties;
     103: aload_0
     104: aload_0
     105: invokevirtual #29                 // Method newTaskQueue:()Ljava/util/Queue;
     108: putfield      #3                  // Field taskQueue:Ljava/util/Queue;
     111: return

  protected java.util.Queue<java.lang.Runnable> newTaskQueue();
    Code:
       0: new           #30                 // class java/util/concurrent/LinkedBlockingQueue
       3: dup
       4: invokespecial #31                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
       7: areturn

  public io.netty.util.concurrent.EventExecutorGroup parent();
    Code:
       0: aload_0
       1: getfield      #20                 // Field parent:Lio/netty/util/concurrent/EventExecutorGroup;
       4: areturn

  protected void interruptThread();
    Code:
       0: aload_0
       1: getfield      #25                 // Field thread:Ljava/lang/Thread;
       4: invokevirtual #32                 // Method java/lang/Thread.interrupt:()V
       7: return

  protected java.lang.Runnable pollTask();
    Code:
       0: getstatic     #33                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #34                 // Method inEventLoop:()Z
      10: ifne          21
      13: new           #35                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #36                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #3                  // Field taskQueue:Ljava/util/Queue;
      25: invokeinterface #37,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      30: checkcast     #38                 // class java/lang/Runnable
      33: astore_1
      34: aload_1
      35: getstatic     #39                 // Field WAKEUP_TASK:Ljava/lang/Runnable;
      38: if_acmpne     44
      41: goto          21
      44: aload_1
      45: areturn

  protected java.lang.Runnable takeTask();
    Code:
       0: getstatic     #33                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #34                 // Method inEventLoop:()Z
      10: ifne          21
      13: new           #35                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #36                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #3                  // Field taskQueue:Ljava/util/Queue;
      25: instanceof    #40                 // class java/util/concurrent/BlockingQueue
      28: ifne          39
      31: new           #41                 // class java/lang/UnsupportedOperationException
      34: dup
      35: invokespecial #42                 // Method java/lang/UnsupportedOperationException."<init>":()V
      38: athrow
      39: aload_0
      40: getfield      #3                  // Field taskQueue:Ljava/util/Queue;
      43: checkcast     #40                 // class java/util/concurrent/BlockingQueue
      46: astore_1
      47: aload_0
      48: invokevirtual #43                 // Method peekScheduledTask:()Lio/netty/util/concurrent/ScheduledFutureTask;
      51: astore_2
      52: aload_2
      53: ifnonnull     84
      56: aconst_null
      57: astore_3
      58: aload_1
      59: invokeinterface #44,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.take:()Ljava/lang/Object;
      64: checkcast     #38                 // class java/lang/Runnable
      67: astore_3
      68: aload_3
      69: getstatic     #39                 // Field WAKEUP_TASK:Ljava/lang/Runnable;
      72: if_acmpne     77
      75: aconst_null
      76: astore_3
      77: goto          82
      80: astore        4
      82: aload_3
      83: areturn
      84: aload_2
      85: invokevirtual #46                 // Method io/netty/util/concurrent/ScheduledFutureTask.delayNanos:()J
      88: lstore_3
      89: aconst_null
      90: astore        5
      92: lload_3
      93: lconst_0
      94: lcmp
      95: ifle          120
      98: aload_1
      99: lload_3
     100: getstatic     #47                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     103: invokeinterface #48,  4           // InterfaceMethod java/util/concurrent/BlockingQueue.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
     108: checkcast     #38                 // class java/lang/Runnable
     111: astore        5
     113: goto          120
     116: astore        6
     118: aconst_null
     119: areturn
     120: aload         5
     122: ifnonnull     140
     125: aload_0
     126: invokespecial #49                 // Method fetchFromScheduledTaskQueue:()V
     129: aload_1
     130: invokeinterface #50,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.poll:()Ljava/lang/Object;
     135: checkcast     #38                 // class java/lang/Runnable
     138: astore        5
     140: aload         5
     142: ifnull        148
     145: aload         5
     147: areturn
     148: goto          47
    Exception table:
       from    to  target type
          58    77    80   Class java/lang/InterruptedException
          98   113   116   Class java/lang/InterruptedException

  private void fetchFromScheduledTaskQueue();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method hasScheduledTasks:()Z
       4: ifeq          38
       7: invokestatic  #52                 // Method io/netty/util/concurrent/AbstractScheduledEventExecutor.nanoTime:()J
      10: lstore_1
      11: aload_0
      12: lload_1
      13: invokevirtual #53                 // Method pollScheduledTask:(J)Ljava/lang/Runnable;
      16: astore_3
      17: aload_3
      18: ifnonnull     24
      21: goto          38
      24: aload_0
      25: getfield      #3                  // Field taskQueue:Ljava/util/Queue;
      28: aload_3
      29: invokeinterface #54,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      34: pop
      35: goto          11
      38: return

  protected java.lang.Runnable peekTask();
    Code:
       0: getstatic     #33                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #34                 // Method inEventLoop:()Z
      10: ifne          21
      13: new           #35                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #36                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #3                  // Field taskQueue:Ljava/util/Queue;
      25: invokeinterface #55,  1           // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
      30: checkcast     #38                 // class java/lang/Runnable
      33: areturn

  protected boolean hasTasks();
    Code:
       0: getstatic     #33                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #34                 // Method inEventLoop:()Z
      10: ifne          21
      13: new           #35                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #36                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #3                  // Field taskQueue:Ljava/util/Queue;
      25: invokeinterface #56,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      30: ifne          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public final int pendingTasks();
    Code:
       0: aload_0
       1: getfield      #3                  // Field taskQueue:Ljava/util/Queue;
       4: invokeinterface #57,  1           // InterfaceMethod java/util/Queue.size:()I
       9: ireturn

  protected void addTask(java.lang.Runnable);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #17                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #58                 // String task
      10: invokespecial #19                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #59                 // Method isShutdown:()Z
      18: ifeq          24
      21: invokestatic  #60                 // Method reject:()V
      24: aload_0
      25: getfield      #3                  // Field taskQueue:Ljava/util/Queue;
      28: aload_1
      29: invokeinterface #54,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      34: pop
      35: return

  protected boolean removeTask(java.lang.Runnable);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #17                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #58                 // String task
      10: invokespecial #19                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #3                  // Field taskQueue:Ljava/util/Queue;
      18: aload_1
      19: invokeinterface #61,  2           // InterfaceMethod java/util/Queue.remove:(Ljava/lang/Object;)Z
      24: ireturn

  protected boolean runAllTasks();
    Code:
       0: aload_0
       1: invokespecial #49                 // Method fetchFromScheduledTaskQueue:()V
       4: aload_0
       5: invokevirtual #62                 // Method pollTask:()Ljava/lang/Runnable;
       8: astore_1
       9: aload_1
      10: ifnonnull     15
      13: iconst_0
      14: ireturn
      15: aload_1
      16: invokeinterface #63,  1           // InterfaceMethod java/lang/Runnable.run:()V
      21: goto          36
      24: astore_2
      25: getstatic     #7                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      28: ldc           #65                 // String A task raised an exception.
      30: aload_2
      31: invokeinterface #66,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      36: aload_0
      37: invokevirtual #62                 // Method pollTask:()Ljava/lang/Runnable;
      40: astore_1
      41: aload_1
      42: ifnonnull     15
      45: aload_0
      46: invokestatic  #67                 // Method io/netty/util/concurrent/ScheduledFutureTask.nanoTime:()J
      49: putfield      #68                 // Field lastExecutionTime:J
      52: iconst_1
      53: ireturn
    Exception table:
       from    to  target type
          15    21    24   Class java/lang/Throwable

  protected boolean runAllTasks(long);
    Code:
       0: aload_0
       1: invokespecial #49                 // Method fetchFromScheduledTaskQueue:()V
       4: aload_0
       5: invokevirtual #62                 // Method pollTask:()Ljava/lang/Runnable;
       8: astore_3
       9: aload_3
      10: ifnonnull     15
      13: iconst_0
      14: ireturn
      15: invokestatic  #67                 // Method io/netty/util/concurrent/ScheduledFutureTask.nanoTime:()J
      18: lload_1
      19: ladd
      20: lstore        4
      22: lconst_0
      23: lstore        6
      25: aload_3
      26: invokeinterface #63,  1           // InterfaceMethod java/lang/Runnable.run:()V
      31: goto          48
      34: astore        10
      36: getstatic     #7                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      39: ldc           #65                 // String A task raised an exception.
      41: aload         10
      43: invokeinterface #66,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      48: lload         6
      50: lconst_1
      51: ladd
      52: lstore        6
      54: lload         6
      56: ldc2_w        #69                 // long 63l
      59: land
      60: lconst_0
      61: lcmp
      62: ifne          81
      65: invokestatic  #67                 // Method io/netty/util/concurrent/ScheduledFutureTask.nanoTime:()J
      68: lstore        8
      70: lload         8
      72: lload         4
      74: lcmp
      75: iflt          81
      78: goto          98
      81: aload_0
      82: invokevirtual #62                 // Method pollTask:()Ljava/lang/Runnable;
      85: astore_3
      86: aload_3
      87: ifnonnull     25
      90: invokestatic  #67                 // Method io/netty/util/concurrent/ScheduledFutureTask.nanoTime:()J
      93: lstore        8
      95: goto          98
      98: aload_0
      99: lload         8
     101: putfield      #68                 // Field lastExecutionTime:J
     104: iconst_1
     105: ireturn
    Exception table:
       from    to  target type
          25    31    34   Class java/lang/Throwable

  protected long delayNanos(long);
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method peekScheduledTask:()Lio/netty/util/concurrent/ScheduledFutureTask;
       4: astore_3
       5: aload_3
       6: ifnonnull     13
       9: getstatic     #71                 // Field SCHEDULE_PURGE_INTERVAL:J
      12: lreturn
      13: aload_3
      14: lload_1
      15: invokevirtual #72                 // Method io/netty/util/concurrent/ScheduledFutureTask.delayNanos:(J)J
      18: lreturn

  protected void updateLastExecutionTime();
    Code:
       0: aload_0
       1: invokestatic  #67                 // Method io/netty/util/concurrent/ScheduledFutureTask.nanoTime:()J
       4: putfield      #68                 // Field lastExecutionTime:J
       7: return

  protected abstract void run();

  protected void cleanup();
    Code:
       0: return

  protected void wakeup(boolean);
    Code:
       0: iload_1
       1: ifeq          15
       4: getstatic     #6                  // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: aload_0
       8: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
      11: iconst_3
      12: if_icmpne     28
      15: aload_0
      16: getfield      #3                  // Field taskQueue:Ljava/util/Queue;
      19: getstatic     #39                 // Field WAKEUP_TASK:Ljava/lang/Runnable;
      22: invokeinterface #54,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      27: pop
      28: return

  public boolean inEventLoop(java.lang.Thread);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #25                 // Field thread:Ljava/lang/Thread;
       5: if_acmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public void addShutdownHook(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method inEventLoop:()Z
       4: ifeq          21
       7: aload_0
       8: getfield      #1                  // Field shutdownHooks:Ljava/util/Set;
      11: aload_1
      12: invokeinterface #74,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      17: pop
      18: goto          34
      21: aload_0
      22: new           #75                 // class io/netty/util/concurrent/SingleThreadEventExecutor$3
      25: dup
      26: aload_0
      27: aload_1
      28: invokespecial #76                 // Method io/netty/util/concurrent/SingleThreadEventExecutor$3."<init>":(Lio/netty/util/concurrent/SingleThreadEventExecutor;Ljava/lang/Runnable;)V
      31: invokevirtual #77                 // Method execute:(Ljava/lang/Runnable;)V
      34: return

  public void removeShutdownHook(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method inEventLoop:()Z
       4: ifeq          21
       7: aload_0
       8: getfield      #1                  // Field shutdownHooks:Ljava/util/Set;
      11: aload_1
      12: invokeinterface #78,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      17: pop
      18: goto          34
      21: aload_0
      22: new           #79                 // class io/netty/util/concurrent/SingleThreadEventExecutor$4
      25: dup
      26: aload_0
      27: aload_1
      28: invokespecial #80                 // Method io/netty/util/concurrent/SingleThreadEventExecutor$4."<init>":(Lio/netty/util/concurrent/SingleThreadEventExecutor;Ljava/lang/Runnable;)V
      31: invokevirtual #77                 // Method execute:(Ljava/lang/Runnable;)V
      34: return

  private boolean runShutdownHooks();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #1                  // Field shutdownHooks:Ljava/util/Set;
       6: invokeinterface #81,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      11: ifne          106
      14: new           #82                 // class java/util/ArrayList
      17: dup
      18: aload_0
      19: getfield      #1                  // Field shutdownHooks:Ljava/util/Set;
      22: invokespecial #83                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      25: astore_2
      26: aload_0
      27: getfield      #1                  // Field shutdownHooks:Ljava/util/Set;
      30: invokeinterface #84,  1           // InterfaceMethod java/util/Set.clear:()V
      35: aload_2
      36: invokeinterface #85,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      41: astore_3
      42: aload_3
      43: invokeinterface #86,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          103
      51: aload_3
      52: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #38                 // class java/lang/Runnable
      60: astore        4
      62: aload         4
      64: invokeinterface #63,  1           // InterfaceMethod java/lang/Runnable.run:()V
      69: iconst_1
      70: istore_1
      71: goto          100
      74: astore        5
      76: getstatic     #7                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      79: ldc           #88                 // String Shutdown hook raised an exception.
      81: aload         5
      83: invokeinterface #66,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      88: iconst_1
      89: istore_1
      90: goto          100
      93: astore        6
      95: iconst_1
      96: istore_1
      97: aload         6
      99: athrow
     100: goto          42
     103: goto          2
     106: iload_1
     107: ifeq          117
     110: aload_0
     111: invokestatic  #67                 // Method io/netty/util/concurrent/ScheduledFutureTask.nanoTime:()J
     114: putfield      #68                 // Field lastExecutionTime:J
     117: iload_1
     118: ireturn
    Exception table:
       from    to  target type
          62    69    74   Class java/lang/Throwable
          62    69    93   any
          74    88    93   any
          93    95    93   any

  public io.netty.util.concurrent.Future<?> shutdownGracefully(long, long, java.util.concurrent.TimeUnit);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          38
       6: new           #89                 // class java/lang/IllegalArgumentException
       9: dup
      10: new           #90                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #92                 // String quietPeriod:
      19: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: lload_1
      23: invokevirtual #94                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      26: ldc           #95                 // String  (expected >= 0)
      28: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #97                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: lload_3
      39: lload_1
      40: lcmp
      41: ifge          85
      44: new           #89                 // class java/lang/IllegalArgumentException
      47: dup
      48: new           #90                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #91                 // Method java/lang/StringBuilder."<init>":()V
      55: ldc           #98                 // String timeout:
      57: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: lload_3
      61: invokevirtual #94                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      64: ldc           #99                 // String  (expected >= quietPeriod (
      66: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: lload_1
      70: invokevirtual #94                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      73: ldc           #100                // String ))
      75: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokespecial #97                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: aload         5
      87: ifnonnull     100
      90: new           #17                 // class java/lang/NullPointerException
      93: dup
      94: ldc           #101                // String unit
      96: invokespecial #19                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      99: athrow
     100: aload_0
     101: invokevirtual #102                // Method isShuttingDown:()Z
     104: ifeq          112
     107: aload_0
     108: invokevirtual #103                // Method terminationFuture:()Lio/netty/util/concurrent/Future;
     111: areturn
     112: aload_0
     113: invokevirtual #34                 // Method inEventLoop:()Z
     116: istore        6
     118: aload_0
     119: invokevirtual #102                // Method isShuttingDown:()Z
     122: ifeq          130
     125: aload_0
     126: invokevirtual #103                // Method terminationFuture:()Lio/netty/util/concurrent/Future;
     129: areturn
     130: iconst_1
     131: istore        7
     133: getstatic     #6                  // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     136: aload_0
     137: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
     140: istore        8
     142: iload         6
     144: ifeq          153
     147: iconst_3
     148: istore        9
     150: goto          193
     153: iload         8
     155: lookupswitch  { // 2
                     1: 180
                     2: 180
               default: 186
          }
     180: iconst_3
     181: istore        9
     183: goto          193
     186: iload         8
     188: istore        9
     190: iconst_0
     191: istore        7
     193: getstatic     #6                  // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     196: aload_0
     197: iload         8
     199: iload         9
     201: invokevirtual #104                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
     204: ifeq          210
     207: goto          213
     210: goto          118
     213: aload_0
     214: aload         5
     216: lload_1
     217: invokevirtual #105                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     220: putfield      #106                // Field gracefulShutdownQuietPeriod:J
     223: aload_0
     224: aload         5
     226: lload_3
     227: invokevirtual #105                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     230: putfield      #107                // Field gracefulShutdownTimeout:J
     233: iload         8
     235: iconst_1
     236: if_icmpne     246
     239: aload_0
     240: getfield      #25                 // Field thread:Ljava/lang/Thread;
     243: invokevirtual #108                // Method java/lang/Thread.start:()V
     246: iload         7
     248: ifeq          257
     251: aload_0
     252: iload         6
     254: invokevirtual #109                // Method wakeup:(Z)V
     257: aload_0
     258: invokevirtual #103                // Method terminationFuture:()Lio/netty/util/concurrent/Future;
     261: areturn

  public io.netty.util.concurrent.Future<?> terminationFuture();
    Code:
       0: aload_0
       1: getfield      #2                  // Field terminationFuture:Lio/netty/util/concurrent/Promise;
       4: areturn

  public void shutdown();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method isShutdown:()Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokevirtual #34                 // Method inEventLoop:()Z
      12: istore_1
      13: aload_0
      14: invokevirtual #102                // Method isShuttingDown:()Z
      17: ifeq          21
      20: return
      21: iconst_1
      22: istore_2
      23: getstatic     #6                  // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      26: aload_0
      27: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
      30: istore_3
      31: iload_1
      32: ifeq          41
      35: iconst_4
      36: istore        4
      38: goto          79
      41: iload_3
      42: tableswitch   { // 1 to 3
                     1: 68
                     2: 68
                     3: 68
               default: 74
          }
      68: iconst_4
      69: istore        4
      71: goto          79
      74: iload_3
      75: istore        4
      77: iconst_0
      78: istore_2
      79: getstatic     #6                  // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      82: aload_0
      83: iload_3
      84: iload         4
      86: invokevirtual #104                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      89: ifeq          95
      92: goto          98
      95: goto          13
      98: iload_3
      99: iconst_1
     100: if_icmpne     110
     103: aload_0
     104: getfield      #25                 // Field thread:Ljava/lang/Thread;
     107: invokevirtual #108                // Method java/lang/Thread.start:()V
     110: iload_2
     111: ifeq          119
     114: aload_0
     115: iload_1
     116: invokevirtual #109                // Method wakeup:(Z)V
     119: return

  public boolean isShuttingDown();
    Code:
       0: getstatic     #6                  // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
       7: iconst_3
       8: if_icmplt     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean isShutdown();
    Code:
       0: getstatic     #6                  // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
       7: iconst_4
       8: if_icmplt     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean isTerminated();
    Code:
       0: getstatic     #6                  // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
       7: iconst_5
       8: if_icmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  protected boolean confirmShutdown();
    Code:
       0: aload_0
       1: invokevirtual #102                // Method isShuttingDown:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokevirtual #34                 // Method inEventLoop:()Z
      13: ifne          26
      16: new           #110                // class java/lang/IllegalStateException
      19: dup
      20: ldc           #111                // String must be invoked from an event loop
      22: invokespecial #112                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: invokevirtual #113                // Method cancelScheduledTasks:()V
      30: aload_0
      31: getfield      #5                  // Field gracefulShutdownStartTime:J
      34: lconst_0
      35: lcmp
      36: ifne          46
      39: aload_0
      40: invokestatic  #67                 // Method io/netty/util/concurrent/ScheduledFutureTask.nanoTime:()J
      43: putfield      #5                  // Field gracefulShutdownStartTime:J
      46: aload_0
      47: invokevirtual #114                // Method runAllTasks:()Z
      50: ifne          60
      53: aload_0
      54: invokespecial #115                // Method runShutdownHooks:()Z
      57: ifeq          76
      60: aload_0
      61: invokevirtual #59                 // Method isShutdown:()Z
      64: ifeq          69
      67: iconst_1
      68: ireturn
      69: aload_0
      70: iconst_1
      71: invokevirtual #109                // Method wakeup:(Z)V
      74: iconst_0
      75: ireturn
      76: invokestatic  #67                 // Method io/netty/util/concurrent/ScheduledFutureTask.nanoTime:()J
      79: lstore_1
      80: aload_0
      81: invokevirtual #59                 // Method isShutdown:()Z
      84: ifne          101
      87: lload_1
      88: aload_0
      89: getfield      #5                  // Field gracefulShutdownStartTime:J
      92: lsub
      93: aload_0
      94: getfield      #107                // Field gracefulShutdownTimeout:J
      97: lcmp
      98: ifle          103
     101: iconst_1
     102: ireturn
     103: lload_1
     104: aload_0
     105: getfield      #68                 // Field lastExecutionTime:J
     108: lsub
     109: aload_0
     110: getfield      #106                // Field gracefulShutdownQuietPeriod:J
     113: lcmp
     114: ifgt          134
     117: aload_0
     118: iconst_1
     119: invokevirtual #109                // Method wakeup:(Z)V
     122: ldc2_w        #116                // long 100l
     125: invokestatic  #118                // Method java/lang/Thread.sleep:(J)V
     128: goto          132
     131: astore_3
     132: iconst_0
     133: ireturn
     134: iconst_1
     135: ireturn
    Exception table:
       from    to  target type
         122   128   131   Class java/lang/InterruptedException

  public boolean awaitTermination(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_3
       1: ifnonnull     14
       4: new           #17                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #101                // String unit
      10: invokespecial #19                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #34                 // Method inEventLoop:()Z
      18: ifeq          31
      21: new           #110                // class java/lang/IllegalStateException
      24: dup
      25: ldc           #119                // String cannot await termination of the current thread
      27: invokespecial #112                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: getfield      #4                  // Field threadLock:Ljava/util/concurrent/Semaphore;
      35: lload_1
      36: aload_3
      37: invokevirtual #120                // Method java/util/concurrent/Semaphore.tryAcquire:(JLjava/util/concurrent/TimeUnit;)Z
      40: ifeq          50
      43: aload_0
      44: getfield      #4                  // Field threadLock:Ljava/util/concurrent/Semaphore;
      47: invokevirtual #121                // Method java/util/concurrent/Semaphore.release:()V
      50: aload_0
      51: invokevirtual #122                // Method isTerminated:()Z
      54: ireturn

  public void execute(java.lang.Runnable);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #17                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #58                 // String task
      10: invokespecial #19                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #34                 // Method inEventLoop:()Z
      18: istore_2
      19: iload_2
      20: ifeq          31
      23: aload_0
      24: aload_1
      25: invokevirtual #123                // Method addTask:(Ljava/lang/Runnable;)V
      28: goto          58
      31: aload_0
      32: invokespecial #124                // Method startThread:()V
      35: aload_0
      36: aload_1
      37: invokevirtual #123                // Method addTask:(Ljava/lang/Runnable;)V
      40: aload_0
      41: invokevirtual #59                 // Method isShutdown:()Z
      44: ifeq          58
      47: aload_0
      48: aload_1
      49: invokevirtual #125                // Method removeTask:(Ljava/lang/Runnable;)Z
      52: ifeq          58
      55: invokestatic  #60                 // Method reject:()V
      58: aload_0
      59: getfield      #21                 // Field addTaskWakesUp:Z
      62: ifne          78
      65: aload_0
      66: aload_1
      67: invokevirtual #126                // Method wakesUpForTask:(Ljava/lang/Runnable;)Z
      70: ifeq          78
      73: aload_0
      74: iload_2
      75: invokevirtual #109                // Method wakeup:(Z)V
      78: return

  public final io.netty.util.concurrent.ThreadProperties threadProperties();
    Code:
       0: aload_0
       1: getfield      #28                 // Field threadProperties:Lio/netty/util/concurrent/ThreadProperties;
       4: areturn

  protected boolean wakesUpForTask(java.lang.Runnable);
    Code:
       0: iconst_1
       1: ireturn

  protected static void reject();
    Code:
       0: new           #127                // class java/util/concurrent/RejectedExecutionException
       3: dup
       4: ldc           #128                // String event executor terminated
       6: invokespecial #129                // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
       9: athrow

  private void startThread();
    Code:
       0: getstatic     #6                  // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
       7: iconst_1
       8: if_icmpne     30
      11: getstatic     #6                  // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      14: aload_0
      15: iconst_1
      16: iconst_2
      17: invokevirtual #104                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      20: ifeq          30
      23: aload_0
      24: getfield      #25                 // Field thread:Ljava/lang/Thread;
      27: invokevirtual #108                // Method java/lang/Thread.start:()V
      30: return

  static io.netty.util.internal.logging.InternalLogger access$000();
    Code:
       0: getstatic     #7                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: areturn

  static java.util.concurrent.atomic.AtomicIntegerFieldUpdater access$100();
    Code:
       0: getstatic     #6                  // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: areturn

  static long access$200(io.netty.util.concurrent.SingleThreadEventExecutor);
    Code:
       0: aload_0
       1: getfield      #5                  // Field gracefulShutdownStartTime:J
       4: lreturn

  static java.util.concurrent.Semaphore access$300(io.netty.util.concurrent.SingleThreadEventExecutor);
    Code:
       0: aload_0
       1: getfield      #4                  // Field threadLock:Ljava/util/concurrent/Semaphore;
       4: areturn

  static java.util.Queue access$400(io.netty.util.concurrent.SingleThreadEventExecutor);
    Code:
       0: aload_0
       1: getfield      #3                  // Field taskQueue:Ljava/util/Queue;
       4: areturn

  static io.netty.util.concurrent.Promise access$500(io.netty.util.concurrent.SingleThreadEventExecutor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field terminationFuture:Lio/netty/util/concurrent/Promise;
       4: areturn

  static java.util.Set access$600(io.netty.util.concurrent.SingleThreadEventExecutor);
    Code:
       0: aload_0
       1: getfield      #1                  // Field shutdownHooks:Ljava/util/Set;
       4: areturn

  static {};
    Code:
       0: ldc_w         #130                // class io/netty/util/concurrent/SingleThreadEventExecutor
       3: invokevirtual #131                // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #33                 // Field $assertionsDisabled:Z
      17: ldc_w         #130                // class io/netty/util/concurrent/SingleThreadEventExecutor
      20: invokestatic  #132                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      23: putstatic     #7                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      26: new           #133                // class io/netty/util/concurrent/SingleThreadEventExecutor$1
      29: dup
      30: invokespecial #134                // Method io/netty/util/concurrent/SingleThreadEventExecutor$1."<init>":()V
      33: putstatic     #39                 // Field WAKEUP_TASK:Ljava/lang/Runnable;
      36: ldc_w         #130                // class io/netty/util/concurrent/SingleThreadEventExecutor
      39: ldc           #135                // String state
      41: invokestatic  #136                // Method io/netty/util/internal/PlatformDependent.newAtomicIntegerFieldUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      44: astore_0
      45: aload_0
      46: ifnonnull     58
      49: ldc_w         #130                // class io/netty/util/concurrent/SingleThreadEventExecutor
      52: ldc           #135                // String state
      54: invokestatic  #137                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      57: astore_0
      58: aload_0
      59: putstatic     #6                  // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      62: getstatic     #138                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      65: lconst_1
      66: invokevirtual #105                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      69: putstatic     #71                 // Field SCHEDULE_PURGE_INTERVAL:J
      72: return
}
