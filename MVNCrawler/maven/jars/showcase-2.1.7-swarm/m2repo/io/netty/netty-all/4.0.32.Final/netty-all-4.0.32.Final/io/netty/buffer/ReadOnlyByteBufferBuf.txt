Compiled from "ReadOnlyByteBufferBuf.java"
class io.netty.buffer.ReadOnlyByteBufferBuf extends io.netty.buffer.AbstractReferenceCountedByteBuf {
  protected final java.nio.ByteBuffer buffer;

  private final io.netty.buffer.ByteBufAllocator allocator;

  private java.nio.ByteBuffer tmpNioBuf;

  io.netty.buffer.ReadOnlyByteBufferBuf(io.netty.buffer.ByteBufAllocator, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #1                  // Method java/nio/ByteBuffer.remaining:()I
       5: invokespecial #2                  // Method io/netty/buffer/AbstractReferenceCountedByteBuf."<init>":(I)V
       8: aload_2
       9: invokevirtual #3                  // Method java/nio/ByteBuffer.isReadOnly:()Z
      12: ifne          45
      15: new           #4                  // class java/lang/IllegalArgumentException
      18: dup
      19: new           #5                  // class java/lang/StringBuilder
      22: dup
      23: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #7                  // String must be a readonly buffer:
      28: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_2
      32: invokestatic  #9                  // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Object;)Ljava/lang/String;
      35: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: aload_1
      47: putfield      #12                 // Field allocator:Lio/netty/buffer/ByteBufAllocator;
      50: aload_0
      51: aload_2
      52: invokevirtual #13                 // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
      55: getstatic     #14                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
      58: invokevirtual #15                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      61: putfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
      64: aload_0
      65: aload_0
      66: getfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
      69: invokevirtual #17                 // Method java/nio/ByteBuffer.limit:()I
      72: invokevirtual #18                 // Method writerIndex:(I)Lio/netty/buffer/ByteBuf;
      75: pop
      76: return

  protected void deallocate();
    Code:
       0: return

  public byte getByte(int);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #20                 // Method _getByte:(I)B
       9: ireturn

  protected byte _getByte(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: invokevirtual #21                 // Method java/nio/ByteBuffer.get:(I)B
       8: ireturn

  public short getShort(int);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #22                 // Method _getShort:(I)S
       9: ireturn

  protected short _getShort(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: invokevirtual #23                 // Method java/nio/ByteBuffer.getShort:(I)S
       8: ireturn

  public int getUnsignedMedium(int);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #24                 // Method _getUnsignedMedium:(I)I
       9: ireturn

  protected int _getUnsignedMedium(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #25                 // Method getByte:(I)B
       5: sipush        255
       8: iand
       9: bipush        16
      11: ishl
      12: aload_0
      13: iload_1
      14: iconst_1
      15: iadd
      16: invokevirtual #25                 // Method getByte:(I)B
      19: sipush        255
      22: iand
      23: bipush        8
      25: ishl
      26: ior
      27: aload_0
      28: iload_1
      29: iconst_2
      30: iadd
      31: invokevirtual #25                 // Method getByte:(I)B
      34: sipush        255
      37: iand
      38: ior
      39: ireturn

  public int getInt(int);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #26                 // Method _getInt:(I)I
       9: ireturn

  protected int _getInt(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: invokevirtual #27                 // Method java/nio/ByteBuffer.getInt:(I)I
       8: ireturn

  public long getLong(int);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #28                 // Method _getLong:(I)J
       9: lreturn

  protected long _getLong(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: invokevirtual #29                 // Method java/nio/ByteBuffer.getLong:(I)J
       8: lreturn

  public io.netty.buffer.ByteBuf getBytes(int, io.netty.buffer.ByteBuf, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload         4
       4: iload_3
       5: aload_2
       6: invokevirtual #30                 // Method io/netty/buffer/ByteBuf.capacity:()I
       9: invokevirtual #31                 // Method checkDstIndex:(IIII)V
      12: aload_2
      13: invokevirtual #32                 // Method io/netty/buffer/ByteBuf.hasArray:()Z
      16: ifeq          40
      19: aload_0
      20: iload_1
      21: aload_2
      22: invokevirtual #33                 // Method io/netty/buffer/ByteBuf.array:()[B
      25: aload_2
      26: invokevirtual #34                 // Method io/netty/buffer/ByteBuf.arrayOffset:()I
      29: iload_3
      30: iadd
      31: iload         4
      33: invokevirtual #35                 // Method getBytes:(I[BII)Lio/netty/buffer/ByteBuf;
      36: pop
      37: goto          117
      40: aload_2
      41: invokevirtual #36                 // Method io/netty/buffer/ByteBuf.nioBufferCount:()I
      44: ifle          107
      47: aload_2
      48: iload_3
      49: iload         4
      51: invokevirtual #37                 // Method io/netty/buffer/ByteBuf.nioBuffers:(II)[Ljava/nio/ByteBuffer;
      54: astore        5
      56: aload         5
      58: arraylength
      59: istore        6
      61: iconst_0
      62: istore        7
      64: iload         7
      66: iload         6
      68: if_icmpge     104
      71: aload         5
      73: iload         7
      75: aaload
      76: astore        8
      78: aload         8
      80: invokevirtual #1                  // Method java/nio/ByteBuffer.remaining:()I
      83: istore        9
      85: aload_0
      86: iload_1
      87: aload         8
      89: invokevirtual #38                 // Method getBytes:(ILjava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf;
      92: pop
      93: iload_1
      94: iload         9
      96: iadd
      97: istore_1
      98: iinc          7, 1
     101: goto          64
     104: goto          117
     107: aload_2
     108: iload_3
     109: aload_0
     110: iload_1
     111: iload         4
     113: invokevirtual #39                 // Method io/netty/buffer/ByteBuf.setBytes:(ILio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf;
     116: pop
     117: aload_0
     118: areturn

  public io.netty.buffer.ByteBuf getBytes(int, byte[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload         4
       4: iload_3
       5: aload_2
       6: arraylength
       7: invokevirtual #31                 // Method checkDstIndex:(IIII)V
      10: iload_3
      11: iflt          23
      14: iload_3
      15: aload_2
      16: arraylength
      17: iload         4
      19: isub
      20: if_icmple     63
      23: new           #40                 // class java/lang/IndexOutOfBoundsException
      26: dup
      27: ldc           #41                 // String dstIndex: %d, length: %d (expected: range(0, %d))
      29: iconst_3
      30: anewarray     #42                 // class java/lang/Object
      33: dup
      34: iconst_0
      35: iload_3
      36: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: aastore
      40: dup
      41: iconst_1
      42: iload         4
      44: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      47: aastore
      48: dup
      49: iconst_2
      50: aload_2
      51: arraylength
      52: invokestatic  #43                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      55: aastore
      56: invokestatic  #44                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      59: invokespecial #45                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: aload_0
      64: invokevirtual #46                 // Method internalNioBuffer:()Ljava/nio/ByteBuffer;
      67: astore        5
      69: aload         5
      71: invokevirtual #47                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      74: iload_1
      75: invokevirtual #48                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      78: iload_1
      79: iload         4
      81: iadd
      82: invokevirtual #49                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      85: pop
      86: aload         5
      88: aload_2
      89: iload_3
      90: iload         4
      92: invokevirtual #50                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      95: pop
      96: aload_0
      97: areturn

  public io.netty.buffer.ByteBuf getBytes(int, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #51                 // Method checkIndex:(I)V
       5: aload_2
       6: ifnonnull     19
       9: new           #52                 // class java/lang/NullPointerException
      12: dup
      13: ldc           #53                 // String dst
      15: invokespecial #54                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: invokevirtual #55                 // Method capacity:()I
      23: iload_1
      24: isub
      25: aload_2
      26: invokevirtual #1                  // Method java/nio/ByteBuffer.remaining:()I
      29: invokestatic  #56                 // Method java/lang/Math.min:(II)I
      32: istore_3
      33: aload_0
      34: invokevirtual #46                 // Method internalNioBuffer:()Ljava/nio/ByteBuffer;
      37: astore        4
      39: aload         4
      41: invokevirtual #47                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      44: iload_1
      45: invokevirtual #48                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      48: iload_1
      49: iload_3
      50: iadd
      51: invokevirtual #49                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      54: pop
      55: aload_2
      56: aload         4
      58: invokevirtual #57                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      61: pop
      62: aload_0
      63: areturn

  protected void _setByte(int, int);
    Code:
       0: new           #58                 // class java/nio/ReadOnlyBufferException
       3: dup
       4: invokespecial #59                 // Method java/nio/ReadOnlyBufferException."<init>":()V
       7: athrow

  protected void _setShort(int, int);
    Code:
       0: new           #58                 // class java/nio/ReadOnlyBufferException
       3: dup
       4: invokespecial #59                 // Method java/nio/ReadOnlyBufferException."<init>":()V
       7: athrow

  protected void _setMedium(int, int);
    Code:
       0: new           #58                 // class java/nio/ReadOnlyBufferException
       3: dup
       4: invokespecial #59                 // Method java/nio/ReadOnlyBufferException."<init>":()V
       7: athrow

  protected void _setInt(int, int);
    Code:
       0: new           #58                 // class java/nio/ReadOnlyBufferException
       3: dup
       4: invokespecial #59                 // Method java/nio/ReadOnlyBufferException."<init>":()V
       7: athrow

  protected void _setLong(int, long);
    Code:
       0: new           #58                 // class java/nio/ReadOnlyBufferException
       3: dup
       4: invokespecial #59                 // Method java/nio/ReadOnlyBufferException."<init>":()V
       7: athrow

  public int capacity();
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method maxCapacity:()I
       4: ireturn

  public io.netty.buffer.ByteBuf capacity(int);
    Code:
       0: new           #58                 // class java/nio/ReadOnlyBufferException
       3: dup
       4: invokespecial #59                 // Method java/nio/ReadOnlyBufferException."<init>":()V
       7: athrow

  public io.netty.buffer.ByteBufAllocator alloc();
    Code:
       0: aload_0
       1: getfield      #12                 // Field allocator:Lio/netty/buffer/ByteBufAllocator;
       4: areturn

  public java.nio.ByteOrder order();
    Code:
       0: getstatic     #14                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
       3: areturn

  public io.netty.buffer.ByteBuf unwrap();
    Code:
       0: aconst_null
       1: areturn

  public boolean isDirect();
    Code:
       0: aload_0
       1: getfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #61                 // Method java/nio/ByteBuffer.isDirect:()Z
       7: ireturn

  public io.netty.buffer.ByteBuf getBytes(int, java.io.OutputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: iload_3
       5: ifne          10
       8: aload_0
       9: areturn
      10: aload_0
      11: getfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
      14: invokevirtual #62                 // Method java/nio/ByteBuffer.hasArray:()Z
      17: ifeq          44
      20: aload_2
      21: aload_0
      22: getfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
      25: invokevirtual #63                 // Method java/nio/ByteBuffer.array:()[B
      28: iload_1
      29: aload_0
      30: getfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
      33: invokevirtual #64                 // Method java/nio/ByteBuffer.arrayOffset:()I
      36: iadd
      37: iload_3
      38: invokevirtual #65                 // Method java/io/OutputStream.write:([BII)V
      41: goto          79
      44: iload_3
      45: newarray       byte
      47: astore        4
      49: aload_0
      50: invokevirtual #46                 // Method internalNioBuffer:()Ljava/nio/ByteBuffer;
      53: astore        5
      55: aload         5
      57: invokevirtual #47                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      60: iload_1
      61: invokevirtual #48                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      64: pop
      65: aload         5
      67: aload         4
      69: invokevirtual #66                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      72: pop
      73: aload_2
      74: aload         4
      76: invokevirtual #67                 // Method java/io/OutputStream.write:([B)V
      79: aload_0
      80: areturn

  public int getBytes(int, java.nio.channels.GatheringByteChannel, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: iload_3
       5: ifne          10
       8: iconst_0
       9: ireturn
      10: aload_0
      11: invokevirtual #46                 // Method internalNioBuffer:()Ljava/nio/ByteBuffer;
      14: astore        4
      16: aload         4
      18: invokevirtual #47                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      21: iload_1
      22: invokevirtual #48                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      25: iload_1
      26: iload_3
      27: iadd
      28: invokevirtual #49                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      31: pop
      32: aload_2
      33: aload         4
      35: invokeinterface #68,  2           // InterfaceMethod java/nio/channels/GatheringByteChannel.write:(Ljava/nio/ByteBuffer;)I
      40: ireturn

  public io.netty.buffer.ByteBuf setBytes(int, io.netty.buffer.ByteBuf, int, int);
    Code:
       0: new           #58                 // class java/nio/ReadOnlyBufferException
       3: dup
       4: invokespecial #59                 // Method java/nio/ReadOnlyBufferException."<init>":()V
       7: athrow

  public io.netty.buffer.ByteBuf setBytes(int, byte[], int, int);
    Code:
       0: new           #58                 // class java/nio/ReadOnlyBufferException
       3: dup
       4: invokespecial #59                 // Method java/nio/ReadOnlyBufferException."<init>":()V
       7: athrow

  public io.netty.buffer.ByteBuf setBytes(int, java.nio.ByteBuffer);
    Code:
       0: new           #58                 // class java/nio/ReadOnlyBufferException
       3: dup
       4: invokespecial #59                 // Method java/nio/ReadOnlyBufferException."<init>":()V
       7: athrow

  public int setBytes(int, java.io.InputStream, int) throws java.io.IOException;
    Code:
       0: new           #58                 // class java/nio/ReadOnlyBufferException
       3: dup
       4: invokespecial #59                 // Method java/nio/ReadOnlyBufferException."<init>":()V
       7: athrow

  public int setBytes(int, java.nio.channels.ScatteringByteChannel, int) throws java.io.IOException;
    Code:
       0: new           #58                 // class java/nio/ReadOnlyBufferException
       3: dup
       4: invokespecial #59                 // Method java/nio/ReadOnlyBufferException."<init>":()V
       7: athrow

  protected final java.nio.ByteBuffer internalNioBuffer();
    Code:
       0: aload_0
       1: getfield      #69                 // Field tmpNioBuf:Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_1
       6: ifnonnull     22
       9: aload_0
      10: aload_0
      11: getfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
      14: invokevirtual #70                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      17: dup
      18: astore_1
      19: putfield      #69                 // Field tmpNioBuf:Ljava/nio/ByteBuffer;
      22: aload_1
      23: areturn

  public io.netty.buffer.ByteBuf copy(int, int);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_0
       5: invokevirtual #46                 // Method internalNioBuffer:()Ljava/nio/ByteBuffer;
       8: invokevirtual #47                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      11: iload_1
      12: invokevirtual #48                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      15: iload_1
      16: iload_2
      17: iadd
      18: invokevirtual #49                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      21: checkcast     #71                 // class java/nio/ByteBuffer
      24: astore_3
      25: goto          59
      28: astore        4
      30: new           #40                 // class java/lang/IndexOutOfBoundsException
      33: dup
      34: new           #5                  // class java/lang/StringBuilder
      37: dup
      38: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #72                 // String Too many bytes to read - Need
      43: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: iload_1
      47: iload_2
      48: iadd
      49: invokevirtual #73                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      52: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokespecial #45                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: iload_2
      60: invokestatic  #74                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      63: astore        4
      65: aload         4
      67: aload_3
      68: invokevirtual #57                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      71: pop
      72: aload         4
      74: aload_0
      75: invokevirtual #75                 // Method order:()Ljava/nio/ByteOrder;
      78: invokevirtual #15                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      81: pop
      82: aload         4
      84: invokevirtual #47                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      87: pop
      88: new           #76                 // class io/netty/buffer/UnpooledDirectByteBuf
      91: dup
      92: aload_0
      93: invokevirtual #77                 // Method alloc:()Lio/netty/buffer/ByteBufAllocator;
      96: aload         4
      98: aload_0
      99: invokevirtual #60                 // Method maxCapacity:()I
     102: invokespecial #78                 // Method io/netty/buffer/UnpooledDirectByteBuf."<init>":(Lio/netty/buffer/ByteBufAllocator;Ljava/nio/ByteBuffer;I)V
     105: areturn
    Exception table:
       from    to  target type
           4    25    28   Class java/lang/IllegalArgumentException

  public int nioBufferCount();
    Code:
       0: iconst_1
       1: ireturn

  public java.nio.ByteBuffer[] nioBuffers(int, int);
    Code:
       0: iconst_1
       1: anewarray     #71                 // class java/nio/ByteBuffer
       4: dup
       5: iconst_0
       6: aload_0
       7: iload_1
       8: iload_2
       9: invokevirtual #79                 // Method nioBuffer:(II)Ljava/nio/ByteBuffer;
      12: aastore
      13: areturn

  public java.nio.ByteBuffer nioBuffer(int, int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #70                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
       7: iload_1
       8: invokevirtual #80                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      11: iload_1
      12: iload_2
      13: iadd
      14: invokevirtual #49                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      17: checkcast     #71                 // class java/nio/ByteBuffer
      20: areturn

  public java.nio.ByteBuffer internalNioBuffer(int, int);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_0
       5: invokevirtual #46                 // Method internalNioBuffer:()Ljava/nio/ByteBuffer;
       8: invokevirtual #47                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      11: iload_1
      12: invokevirtual #48                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      15: iload_1
      16: iload_2
      17: iadd
      18: invokevirtual #49                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      21: checkcast     #71                 // class java/nio/ByteBuffer
      24: areturn

  public boolean hasArray();
    Code:
       0: aload_0
       1: getfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #62                 // Method java/nio/ByteBuffer.hasArray:()Z
       7: ireturn

  public byte[] array();
    Code:
       0: aload_0
       1: getfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #63                 // Method java/nio/ByteBuffer.array:()[B
       7: areturn

  public int arrayOffset();
    Code:
       0: aload_0
       1: getfield      #16                 // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #64                 // Method java/nio/ByteBuffer.arrayOffset:()I
       7: ireturn

  public boolean hasMemoryAddress();
    Code:
       0: iconst_0
       1: ireturn

  public long memoryAddress();
    Code:
       0: new           #81                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #82                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow
}
