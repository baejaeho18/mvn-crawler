Compiled from "RxtxChannel.java"
final class io.netty.channel.rxtx.RxtxChannel$RxtxUnsafe extends io.netty.channel.AbstractChannel$AbstractUnsafe {
  final io.netty.channel.rxtx.RxtxChannel this$0;

  private io.netty.channel.rxtx.RxtxChannel$RxtxUnsafe(io.netty.channel.rxtx.RxtxChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field this$0:Lio/netty/channel/rxtx/RxtxChannel;
       5: aload_0
       6: aload_1
       7: invokespecial #6                  // Method io/netty/channel/AbstractChannel$AbstractUnsafe."<init>":(Lio/netty/channel/AbstractChannel;)V
      10: return

  public void connect(java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_3
       1: invokeinterface #7,  1            // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifeq          17
       9: aload_0
      10: aload_3
      11: invokevirtual #8                  // Method ensureOpen:(Lio/netty/channel/ChannelPromise;)Z
      14: ifne          18
      17: return
      18: aload_0
      19: getfield      #5                  // Field this$0:Lio/netty/channel/rxtx/RxtxChannel;
      22: invokevirtual #9                  // Method io/netty/channel/rxtx/RxtxChannel.isActive:()Z
      25: istore        4
      27: aload_0
      28: getfield      #5                  // Field this$0:Lio/netty/channel/rxtx/RxtxChannel;
      31: aload_1
      32: aload_2
      33: invokevirtual #10                 // Method io/netty/channel/rxtx/RxtxChannel.doConnect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;)V
      36: aload_0
      37: getfield      #5                  // Field this$0:Lio/netty/channel/rxtx/RxtxChannel;
      40: invokevirtual #11                 // Method io/netty/channel/rxtx/RxtxChannel.config:()Lio/netty/channel/rxtx/RxtxChannelConfig;
      43: getstatic     #12                 // Field io/netty/channel/rxtx/RxtxChannelOption.WAIT_TIME:Lio/netty/channel/rxtx/RxtxChannelOption;
      46: invokeinterface #13,  2           // InterfaceMethod io/netty/channel/rxtx/RxtxChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
      51: checkcast     #14                 // class java/lang/Integer
      54: invokevirtual #15                 // Method java/lang/Integer.intValue:()I
      57: istore        5
      59: iload         5
      61: ifle          97
      64: aload_0
      65: getfield      #5                  // Field this$0:Lio/netty/channel/rxtx/RxtxChannel;
      68: invokevirtual #16                 // Method io/netty/channel/rxtx/RxtxChannel.eventLoop:()Lio/netty/channel/EventLoop;
      71: new           #17                 // class io/netty/channel/rxtx/RxtxChannel$RxtxUnsafe$1
      74: dup
      75: aload_0
      76: aload_3
      77: iload         4
      79: invokespecial #18                 // Method io/netty/channel/rxtx/RxtxChannel$RxtxUnsafe$1."<init>":(Lio/netty/channel/rxtx/RxtxChannel$RxtxUnsafe;Lio/netty/channel/ChannelPromise;Z)V
      82: iload         5
      84: i2l
      85: getstatic     #19                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      88: invokeinterface #20,  5           // InterfaceMethod io/netty/channel/EventLoop.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
      93: pop
      94: goto          137
      97: aload_0
      98: getfield      #5                  // Field this$0:Lio/netty/channel/rxtx/RxtxChannel;
     101: invokevirtual #21                 // Method io/netty/channel/rxtx/RxtxChannel.doInit:()V
     104: aload_0
     105: aload_3
     106: invokevirtual #3                  // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
     109: iload         4
     111: ifne          137
     114: aload_0
     115: getfield      #5                  // Field this$0:Lio/netty/channel/rxtx/RxtxChannel;
     118: invokevirtual #9                  // Method io/netty/channel/rxtx/RxtxChannel.isActive:()Z
     121: ifeq          137
     124: aload_0
     125: getfield      #5                  // Field this$0:Lio/netty/channel/rxtx/RxtxChannel;
     128: invokevirtual #22                 // Method io/netty/channel/rxtx/RxtxChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
     131: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelActive:()Lio/netty/channel/ChannelPipeline;
     136: pop
     137: goto          153
     140: astore        4
     142: aload_0
     143: aload_3
     144: aload         4
     146: invokevirtual #2                  // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
     149: aload_0
     150: invokevirtual #1                  // Method closeIfClosed:()V
     153: return
    Exception table:
       from    to  target type
          18   137   140   Class java/lang/Throwable

  io.netty.channel.rxtx.RxtxChannel$RxtxUnsafe(io.netty.channel.rxtx.RxtxChannel, io.netty.channel.rxtx.RxtxChannel$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method "<init>":(Lio/netty/channel/rxtx/RxtxChannel;)V
       5: return

  static void access$100(io.netty.channel.rxtx.RxtxChannel$RxtxUnsafe, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
       5: return

  static void access$200(io.netty.channel.rxtx.RxtxChannel$RxtxUnsafe, io.netty.channel.ChannelPromise, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #2                  // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
       6: return

  static void access$300(io.netty.channel.rxtx.RxtxChannel$RxtxUnsafe);
    Code:
       0: aload_0
       1: invokevirtual #1                  // Method closeIfClosed:()V
       4: return
}
