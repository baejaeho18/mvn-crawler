Compiled from "AbstractNioMessageChannel.java"
final class io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe extends io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe {
  private final java.util.List<java.lang.Object> readBuf;

  static final boolean $assertionsDisabled;

  final io.netty.channel.nio.AbstractNioMessageChannel this$0;

  private io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe(io.netty.channel.nio.AbstractNioMessageChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/netty/channel/nio/AbstractNioMessageChannel;
       5: aload_0
       6: aload_1
       7: invokespecial #3                  // Method io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe."<init>":(Lio/netty/channel/nio/AbstractNioChannel;)V
      10: aload_0
      11: new           #4                  // class java/util/ArrayList
      14: dup
      15: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      18: putfield      #6                  // Field readBuf:Ljava/util/List;
      21: return

  public void read();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          27
       6: aload_0
       7: getfield      #2                  // Field this$0:Lio/netty/channel/nio/AbstractNioMessageChannel;
      10: invokevirtual #8                  // Method io/netty/channel/nio/AbstractNioMessageChannel.eventLoop:()Lio/netty/channel/nio/NioEventLoop;
      13: invokevirtual #9                  // Method io/netty/channel/nio/NioEventLoop.inEventLoop:()Z
      16: ifne          27
      19: new           #10                 // class java/lang/AssertionError
      22: dup
      23: invokespecial #11                 // Method java/lang/AssertionError."<init>":()V
      26: athrow
      27: aload_0
      28: getfield      #2                  // Field this$0:Lio/netty/channel/nio/AbstractNioMessageChannel;
      31: invokevirtual #12                 // Method io/netty/channel/nio/AbstractNioMessageChannel.config:()Lio/netty/channel/ChannelConfig;
      34: astore_1
      35: aload_1
      36: invokeinterface #13,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
      41: ifne          59
      44: aload_0
      45: getfield      #2                  // Field this$0:Lio/netty/channel/nio/AbstractNioMessageChannel;
      48: invokevirtual #14                 // Method io/netty/channel/nio/AbstractNioMessageChannel.isReadPending:()Z
      51: ifne          59
      54: aload_0
      55: invokevirtual #15                 // Method removeReadOp:()V
      58: return
      59: aload_1
      60: invokeinterface #16,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getMaxMessagesPerRead:()I
      65: istore_2
      66: aload_0
      67: getfield      #2                  // Field this$0:Lio/netty/channel/nio/AbstractNioMessageChannel;
      70: invokevirtual #17                 // Method io/netty/channel/nio/AbstractNioMessageChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      73: astore_3
      74: iconst_0
      75: istore        4
      77: aconst_null
      78: astore        5
      80: aload_0
      81: getfield      #2                  // Field this$0:Lio/netty/channel/nio/AbstractNioMessageChannel;
      84: aload_0
      85: getfield      #6                  // Field readBuf:Ljava/util/List;
      88: invokevirtual #18                 // Method io/netty/channel/nio/AbstractNioMessageChannel.doReadMessages:(Ljava/util/List;)I
      91: istore        6
      93: iload         6
      95: ifne          101
      98: goto          143
     101: iload         6
     103: ifge          112
     106: iconst_1
     107: istore        4
     109: goto          143
     112: aload_1
     113: invokeinterface #13,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     118: ifne          124
     121: goto          143
     124: aload_0
     125: getfield      #6                  // Field readBuf:Ljava/util/List;
     128: invokeinterface #19,  1           // InterfaceMethod java/util/List.size:()I
     133: iload_2
     134: if_icmplt     140
     137: goto          143
     140: goto          80
     143: goto          152
     146: astore        6
     148: aload         6
     150: astore        5
     152: aload_0
     153: getfield      #2                  // Field this$0:Lio/netty/channel/nio/AbstractNioMessageChannel;
     156: iconst_0
     157: invokevirtual #21                 // Method io/netty/channel/nio/AbstractNioMessageChannel.setReadPending:(Z)V
     160: aload_0
     161: getfield      #6                  // Field readBuf:Ljava/util/List;
     164: invokeinterface #19,  1           // InterfaceMethod java/util/List.size:()I
     169: istore        6
     171: iconst_0
     172: istore        7
     174: iload         7
     176: iload         6
     178: if_icmpge     205
     181: aload_3
     182: aload_0
     183: getfield      #6                  // Field readBuf:Ljava/util/List;
     186: iload         7
     188: invokeinterface #22,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     193: invokeinterface #23,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
     198: pop
     199: iinc          7, 1
     202: goto          174
     205: aload_0
     206: getfield      #6                  // Field readBuf:Ljava/util/List;
     209: invokeinterface #24,  1           // InterfaceMethod java/util/List.clear:()V
     214: aload_3
     215: invokeinterface #25,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
     220: pop
     221: aload         5
     223: ifnull        268
     226: aload         5
     228: instanceof    #26                 // class java/io/IOException
     231: ifeq          259
     234: aload         5
     236: instanceof    #27                 // class java/net/PortUnreachableException
     239: ifne          259
     242: aload_0
     243: getfield      #2                  // Field this$0:Lio/netty/channel/nio/AbstractNioMessageChannel;
     246: instanceof    #28                 // class io/netty/channel/ServerChannel
     249: ifne          256
     252: iconst_1
     253: goto          257
     256: iconst_0
     257: istore        4
     259: aload_3
     260: aload         5
     262: invokeinterface #29,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
     267: pop
     268: iload         4
     270: ifeq          291
     273: aload_0
     274: getfield      #2                  // Field this$0:Lio/netty/channel/nio/AbstractNioMessageChannel;
     277: invokevirtual #30                 // Method io/netty/channel/nio/AbstractNioMessageChannel.isOpen:()Z
     280: ifeq          291
     283: aload_0
     284: aload_0
     285: invokevirtual #31                 // Method voidPromise:()Lio/netty/channel/ChannelPromise;
     288: invokevirtual #32                 // Method close:(Lio/netty/channel/ChannelPromise;)V
     291: aload_1
     292: invokeinterface #13,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     297: ifne          345
     300: aload_0
     301: getfield      #2                  // Field this$0:Lio/netty/channel/nio/AbstractNioMessageChannel;
     304: invokevirtual #14                 // Method io/netty/channel/nio/AbstractNioMessageChannel.isReadPending:()Z
     307: ifne          345
     310: aload_0
     311: invokevirtual #15                 // Method removeReadOp:()V
     314: goto          345
     317: astore        8
     319: aload_1
     320: invokeinterface #13,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     325: ifne          342
     328: aload_0
     329: getfield      #2                  // Field this$0:Lio/netty/channel/nio/AbstractNioMessageChannel;
     332: invokevirtual #14                 // Method io/netty/channel/nio/AbstractNioMessageChannel.isReadPending:()Z
     335: ifne          342
     338: aload_0
     339: invokevirtual #15                 // Method removeReadOp:()V
     342: aload         8
     344: athrow
     345: return
    Exception table:
       from    to  target type
          80   143   146   Class java/lang/Throwable
          80   291   317   any
         317   319   317   any

  io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe(io.netty.channel.nio.AbstractNioMessageChannel, io.netty.channel.nio.AbstractNioMessageChannel$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lio/netty/channel/nio/AbstractNioMessageChannel;)V
       5: return

  static {};
    Code:
       0: ldc_w         #33                 // class io/netty/channel/nio/AbstractNioMessageChannel
       3: invokevirtual #34                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #7                  // Field $assertionsDisabled:Z
      17: return
}
