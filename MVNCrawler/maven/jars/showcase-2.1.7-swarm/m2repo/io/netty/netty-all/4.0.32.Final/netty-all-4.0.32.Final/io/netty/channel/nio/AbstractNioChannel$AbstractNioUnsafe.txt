Compiled from "AbstractNioChannel.java"
public abstract class io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe extends io.netty.channel.AbstractChannel$AbstractUnsafe implements io.netty.channel.nio.AbstractNioChannel$NioUnsafe {
  static final boolean $assertionsDisabled;

  final io.netty.channel.nio.AbstractNioChannel this$0;

  protected io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe(io.netty.channel.nio.AbstractNioChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
       5: aload_0
       6: aload_1
       7: invokespecial #2                  // Method io/netty/channel/AbstractChannel$AbstractUnsafe."<init>":(Lio/netty/channel/AbstractChannel;)V
      10: return

  protected final void removeReadOp();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
       4: invokevirtual #3                  // Method io/netty/channel/nio/AbstractNioChannel.selectionKey:()Ljava/nio/channels/SelectionKey;
       7: astore_1
       8: aload_1
       9: invokevirtual #4                  // Method java/nio/channels/SelectionKey.isValid:()Z
      12: ifne          16
      15: return
      16: aload_1
      17: invokevirtual #5                  // Method java/nio/channels/SelectionKey.interestOps:()I
      20: istore_2
      21: iload_2
      22: aload_0
      23: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
      26: getfield      #6                  // Field io/netty/channel/nio/AbstractNioChannel.readInterestOp:I
      29: iand
      30: ifeq          49
      33: aload_1
      34: iload_2
      35: aload_0
      36: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
      39: getfield      #6                  // Field io/netty/channel/nio/AbstractNioChannel.readInterestOp:I
      42: iconst_m1
      43: ixor
      44: iand
      45: invokevirtual #7                  // Method java/nio/channels/SelectionKey.interestOps:(I)Ljava/nio/channels/SelectionKey;
      48: pop
      49: return

  public final java.nio.channels.SelectableChannel ch();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
       4: invokevirtual #8                  // Method io/netty/channel/nio/AbstractNioChannel.javaChannel:()Ljava/nio/channels/SelectableChannel;
       7: areturn

  public final void connect(java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_3
       1: invokeinterface #9,  1            // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifeq          17
       9: aload_0
      10: aload_3
      11: invokevirtual #10                 // Method ensureOpen:(Lio/netty/channel/ChannelPromise;)Z
      14: ifne          18
      17: return
      18: aload_0
      19: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
      22: invokestatic  #11                 // Method io/netty/channel/nio/AbstractNioChannel.access$000:(Lio/netty/channel/nio/AbstractNioChannel;)Lio/netty/channel/ChannelPromise;
      25: ifnull        38
      28: new           #12                 // class java/lang/IllegalStateException
      31: dup
      32: ldc           #13                 // String connection attempt already made
      34: invokespecial #14                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
      42: invokevirtual #15                 // Method io/netty/channel/nio/AbstractNioChannel.isActive:()Z
      45: istore        4
      47: aload_0
      48: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
      51: aload_1
      52: aload_2
      53: invokevirtual #16                 // Method io/netty/channel/nio/AbstractNioChannel.doConnect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;)Z
      56: ifeq          69
      59: aload_0
      60: aload_3
      61: iload         4
      63: invokespecial #17                 // Method fulfillConnectPromise:(Lio/netty/channel/ChannelPromise;Z)V
      66: goto          154
      69: aload_0
      70: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
      73: aload_3
      74: invokestatic  #18                 // Method io/netty/channel/nio/AbstractNioChannel.access$002:(Lio/netty/channel/nio/AbstractNioChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
      77: pop
      78: aload_0
      79: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
      82: aload_1
      83: invokestatic  #19                 // Method io/netty/channel/nio/AbstractNioChannel.access$102:(Lio/netty/channel/nio/AbstractNioChannel;Ljava/net/SocketAddress;)Ljava/net/SocketAddress;
      86: pop
      87: aload_0
      88: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
      91: invokevirtual #20                 // Method io/netty/channel/nio/AbstractNioChannel.config:()Lio/netty/channel/ChannelConfig;
      94: invokeinterface #21,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getConnectTimeoutMillis:()I
      99: istore        5
     101: iload         5
     103: ifle          139
     106: aload_0
     107: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
     110: aload_0
     111: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
     114: invokevirtual #22                 // Method io/netty/channel/nio/AbstractNioChannel.eventLoop:()Lio/netty/channel/nio/NioEventLoop;
     117: new           #23                 // class io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe$1
     120: dup
     121: aload_0
     122: aload_1
     123: invokespecial #24                 // Method io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe$1."<init>":(Lio/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe;Ljava/net/SocketAddress;)V
     126: iload         5
     128: i2l
     129: getstatic     #25                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     132: invokevirtual #26                 // Method io/netty/channel/nio/NioEventLoop.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
     135: invokestatic  #27                 // Method io/netty/channel/nio/AbstractNioChannel.access$202:(Lio/netty/channel/nio/AbstractNioChannel;Ljava/util/concurrent/ScheduledFuture;)Ljava/util/concurrent/ScheduledFuture;
     138: pop
     139: aload_3
     140: new           #28                 // class io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe$2
     143: dup
     144: aload_0
     145: invokespecial #29                 // Method io/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe$2."<init>":(Lio/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe;)V
     148: invokeinterface #30,  2           // InterfaceMethod io/netty/channel/ChannelPromise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelPromise;
     153: pop
     154: goto          177
     157: astore        4
     159: aload_3
     160: aload_0
     161: aload         4
     163: aload_1
     164: invokevirtual #32                 // Method annotateConnectException:(Ljava/lang/Throwable;Ljava/net/SocketAddress;)Ljava/lang/Throwable;
     167: invokeinterface #33,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
     172: pop
     173: aload_0
     174: invokevirtual #34                 // Method closeIfClosed:()V
     177: return
    Exception table:
       from    to  target type
          18   154   157   Class java/lang/Throwable

  private void fulfillConnectPromise(io.netty.channel.ChannelPromise, boolean);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: invokeinterface #35,  1           // InterfaceMethod io/netty/channel/ChannelPromise.trySuccess:()Z
      11: istore_3
      12: iload_2
      13: ifne          39
      16: aload_0
      17: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
      20: invokevirtual #15                 // Method io/netty/channel/nio/AbstractNioChannel.isActive:()Z
      23: ifeq          39
      26: aload_0
      27: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
      30: invokevirtual #36                 // Method io/netty/channel/nio/AbstractNioChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      33: invokeinterface #37,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelActive:()Lio/netty/channel/ChannelPipeline;
      38: pop
      39: iload_3
      40: ifne          51
      43: aload_0
      44: aload_0
      45: invokevirtual #38                 // Method voidPromise:()Lio/netty/channel/ChannelPromise;
      48: invokevirtual #39                 // Method close:(Lio/netty/channel/ChannelPromise;)V
      51: return

  private void fulfillConnectPromise(io.netty.channel.ChannelPromise, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: aload_2
       7: invokeinterface #33,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      12: pop
      13: aload_0
      14: invokevirtual #34                 // Method closeIfClosed:()V
      17: return

  public final void finishConnect();
    Code:
       0: getstatic     #40                 // Field $assertionsDisabled:Z
       3: ifne          27
       6: aload_0
       7: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
      10: invokevirtual #22                 // Method io/netty/channel/nio/AbstractNioChannel.eventLoop:()Lio/netty/channel/nio/NioEventLoop;
      13: invokevirtual #41                 // Method io/netty/channel/nio/NioEventLoop.inEventLoop:()Z
      16: ifne          27
      19: new           #42                 // class java/lang/AssertionError
      22: dup
      23: invokespecial #43                 // Method java/lang/AssertionError."<init>":()V
      26: athrow
      27: aload_0
      28: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
      31: invokevirtual #15                 // Method io/netty/channel/nio/AbstractNioChannel.isActive:()Z
      34: istore_1
      35: aload_0
      36: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
      39: invokevirtual #44                 // Method io/netty/channel/nio/AbstractNioChannel.doFinishConnect:()V
      42: aload_0
      43: aload_0
      44: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
      47: invokestatic  #11                 // Method io/netty/channel/nio/AbstractNioChannel.access$000:(Lio/netty/channel/nio/AbstractNioChannel;)Lio/netty/channel/ChannelPromise;
      50: iload_1
      51: invokespecial #17                 // Method fulfillConnectPromise:(Lio/netty/channel/ChannelPromise;Z)V
      54: aload_0
      55: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
      58: invokestatic  #45                 // Method io/netty/channel/nio/AbstractNioChannel.access$200:(Lio/netty/channel/nio/AbstractNioChannel;)Ljava/util/concurrent/ScheduledFuture;
      61: ifnull        78
      64: aload_0
      65: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
      68: invokestatic  #45                 // Method io/netty/channel/nio/AbstractNioChannel.access$200:(Lio/netty/channel/nio/AbstractNioChannel;)Ljava/util/concurrent/ScheduledFuture;
      71: iconst_0
      72: invokeinterface #46,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      77: pop
      78: aload_0
      79: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
      82: aconst_null
      83: invokestatic  #18                 // Method io/netty/channel/nio/AbstractNioChannel.access$002:(Lio/netty/channel/nio/AbstractNioChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
      86: pop
      87: goto          186
      90: astore_1
      91: aload_0
      92: aload_0
      93: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
      96: invokestatic  #11                 // Method io/netty/channel/nio/AbstractNioChannel.access$000:(Lio/netty/channel/nio/AbstractNioChannel;)Lio/netty/channel/ChannelPromise;
      99: aload_0
     100: aload_1
     101: aload_0
     102: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
     105: invokestatic  #47                 // Method io/netty/channel/nio/AbstractNioChannel.access$100:(Lio/netty/channel/nio/AbstractNioChannel;)Ljava/net/SocketAddress;
     108: invokevirtual #32                 // Method annotateConnectException:(Ljava/lang/Throwable;Ljava/net/SocketAddress;)Ljava/lang/Throwable;
     111: invokespecial #48                 // Method fulfillConnectPromise:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
     114: aload_0
     115: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
     118: invokestatic  #45                 // Method io/netty/channel/nio/AbstractNioChannel.access$200:(Lio/netty/channel/nio/AbstractNioChannel;)Ljava/util/concurrent/ScheduledFuture;
     121: ifnull        138
     124: aload_0
     125: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
     128: invokestatic  #45                 // Method io/netty/channel/nio/AbstractNioChannel.access$200:(Lio/netty/channel/nio/AbstractNioChannel;)Ljava/util/concurrent/ScheduledFuture;
     131: iconst_0
     132: invokeinterface #46,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
     137: pop
     138: aload_0
     139: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
     142: aconst_null
     143: invokestatic  #18                 // Method io/netty/channel/nio/AbstractNioChannel.access$002:(Lio/netty/channel/nio/AbstractNioChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
     146: pop
     147: goto          186
     150: astore_2
     151: aload_0
     152: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
     155: invokestatic  #45                 // Method io/netty/channel/nio/AbstractNioChannel.access$200:(Lio/netty/channel/nio/AbstractNioChannel;)Ljava/util/concurrent/ScheduledFuture;
     158: ifnull        175
     161: aload_0
     162: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
     165: invokestatic  #45                 // Method io/netty/channel/nio/AbstractNioChannel.access$200:(Lio/netty/channel/nio/AbstractNioChannel;)Ljava/util/concurrent/ScheduledFuture;
     168: iconst_0
     169: invokeinterface #46,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
     174: pop
     175: aload_0
     176: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
     179: aconst_null
     180: invokestatic  #18                 // Method io/netty/channel/nio/AbstractNioChannel.access$002:(Lio/netty/channel/nio/AbstractNioChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
     183: pop
     184: aload_2
     185: athrow
     186: return
    Exception table:
       from    to  target type
          27    54    90   Class java/lang/Throwable
          27    54   150   any
          90   114   150   any
         150   151   150   any

  protected final void flush0();
    Code:
       0: aload_0
       1: invokespecial #49                 // Method isFlushPending:()Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokespecial #50                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe.flush0:()V
      12: return

  public final void forceFlush();
    Code:
       0: aload_0
       1: invokespecial #50                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe.flush0:()V
       4: return

  private boolean isFlushPending();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/nio/AbstractNioChannel;
       4: invokevirtual #3                  // Method io/netty/channel/nio/AbstractNioChannel.selectionKey:()Ljava/nio/channels/SelectionKey;
       7: astore_1
       8: aload_1
       9: invokevirtual #4                  // Method java/nio/channels/SelectionKey.isValid:()Z
      12: ifeq          28
      15: aload_1
      16: invokevirtual #5                  // Method java/nio/channels/SelectionKey.interestOps:()I
      19: iconst_4
      20: iand
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  static {};
    Code:
       0: ldc_w         #51                 // class io/netty/channel/nio/AbstractNioChannel
       3: invokevirtual #52                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #40                 // Field $assertionsDisabled:Z
      17: return
}
