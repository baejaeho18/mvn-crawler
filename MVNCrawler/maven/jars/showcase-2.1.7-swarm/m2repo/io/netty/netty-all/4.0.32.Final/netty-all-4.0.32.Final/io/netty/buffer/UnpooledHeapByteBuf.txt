Compiled from "UnpooledHeapByteBuf.java"
public class io.netty.buffer.UnpooledHeapByteBuf extends io.netty.buffer.AbstractReferenceCountedByteBuf {
  private final io.netty.buffer.ByteBufAllocator alloc;

  private byte[] array;

  private java.nio.ByteBuffer tmpNioBuf;

  protected io.netty.buffer.UnpooledHeapByteBuf(io.netty.buffer.ByteBufAllocator, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: newarray       byte
       5: iconst_0
       6: iconst_0
       7: iload_3
       8: invokespecial #1                  // Method "<init>":(Lio/netty/buffer/ByteBufAllocator;[BIII)V
      11: return

  protected io.netty.buffer.UnpooledHeapByteBuf(io.netty.buffer.ByteBufAllocator, byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: aload_2
       5: arraylength
       6: iload_3
       7: invokespecial #1                  // Method "<init>":(Lio/netty/buffer/ByteBufAllocator;[BIII)V
      10: return

  private io.netty.buffer.UnpooledHeapByteBuf(io.netty.buffer.ByteBufAllocator, byte[], int, int, int);
    Code:
       0: aload_0
       1: iload         5
       3: invokespecial #2                  // Method io/netty/buffer/AbstractReferenceCountedByteBuf."<init>":(I)V
       6: aload_1
       7: ifnonnull     20
      10: new           #3                  // class java/lang/NullPointerException
      13: dup
      14: ldc           #4                  // String alloc
      16: invokespecial #5                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_2
      21: ifnonnull     34
      24: new           #3                  // class java/lang/NullPointerException
      27: dup
      28: ldc           #6                  // String initialArray
      30: invokespecial #5                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_2
      35: arraylength
      36: iload         5
      38: if_icmple     74
      41: new           #7                  // class java/lang/IllegalArgumentException
      44: dup
      45: ldc           #8                  // String initialCapacity(%d) > maxCapacity(%d)
      47: iconst_2
      48: anewarray     #9                  // class java/lang/Object
      51: dup
      52: iconst_0
      53: aload_2
      54: arraylength
      55: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      58: aastore
      59: dup
      60: iconst_1
      61: iload         5
      63: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      66: aastore
      67: invokestatic  #11                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      70: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_0
      75: aload_1
      76: putfield      #13                 // Field alloc:Lio/netty/buffer/ByteBufAllocator;
      79: aload_0
      80: aload_2
      81: invokespecial #14                 // Method setArray:([B)V
      84: aload_0
      85: iload_3
      86: iload         4
      88: invokevirtual #15                 // Method setIndex:(II)Lio/netty/buffer/ByteBuf;
      91: pop
      92: return

  private void setArray(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field array:[B
       5: aload_0
       6: aconst_null
       7: putfield      #17                 // Field tmpNioBuf:Ljava/nio/ByteBuffer;
      10: return

  public io.netty.buffer.ByteBufAllocator alloc();
    Code:
       0: aload_0
       1: getfield      #13                 // Field alloc:Lio/netty/buffer/ByteBufAllocator;
       4: areturn

  public java.nio.ByteOrder order();
    Code:
       0: getstatic     #18                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
       3: areturn

  public boolean isDirect();
    Code:
       0: iconst_0
       1: ireturn

  public int capacity();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_0
       5: getfield      #16                 // Field array:[B
       8: arraylength
       9: ireturn

  public io.netty.buffer.ByteBuf capacity(int);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: iload_1
       5: iflt          16
       8: iload_1
       9: aload_0
      10: invokevirtual #20                 // Method maxCapacity:()I
      13: if_icmple     43
      16: new           #7                  // class java/lang/IllegalArgumentException
      19: dup
      20: new           #21                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #23                 // String newCapacity:
      29: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: iload_1
      33: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: getfield      #16                 // Field array:[B
      47: arraylength
      48: istore_2
      49: iload_1
      50: iload_2
      51: if_icmple     81
      54: iload_1
      55: newarray       byte
      57: astore_3
      58: aload_0
      59: getfield      #16                 // Field array:[B
      62: iconst_0
      63: aload_3
      64: iconst_0
      65: aload_0
      66: getfield      #16                 // Field array:[B
      69: arraylength
      70: invokestatic  #27                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      73: aload_0
      74: aload_3
      75: invokespecial #14                 // Method setArray:([B)V
      78: goto          155
      81: iload_1
      82: iload_2
      83: if_icmpge     155
      86: iload_1
      87: newarray       byte
      89: astore_3
      90: aload_0
      91: invokevirtual #28                 // Method readerIndex:()I
      94: istore        4
      96: iload         4
      98: iload_1
      99: if_icmpge     143
     102: aload_0
     103: invokevirtual #29                 // Method writerIndex:()I
     106: istore        5
     108: iload         5
     110: iload_1
     111: if_icmple     123
     114: aload_0
     115: iload_1
     116: dup
     117: istore        5
     119: invokevirtual #30                 // Method writerIndex:(I)Lio/netty/buffer/ByteBuf;
     122: pop
     123: aload_0
     124: getfield      #16                 // Field array:[B
     127: iload         4
     129: aload_3
     130: iload         4
     132: iload         5
     134: iload         4
     136: isub
     137: invokestatic  #27                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     140: goto          150
     143: aload_0
     144: iload_1
     145: iload_1
     146: invokevirtual #15                 // Method setIndex:(II)Lio/netty/buffer/ByteBuf;
     149: pop
     150: aload_0
     151: aload_3
     152: invokespecial #14                 // Method setArray:([B)V
     155: aload_0
     156: areturn

  public boolean hasArray();
    Code:
       0: iconst_1
       1: ireturn

  public byte[] array();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_0
       5: getfield      #16                 // Field array:[B
       8: areturn

  public int arrayOffset();
    Code:
       0: iconst_0
       1: ireturn

  public boolean hasMemoryAddress();
    Code:
       0: iconst_0
       1: ireturn

  public long memoryAddress();
    Code:
       0: new           #31                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #32                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public io.netty.buffer.ByteBuf getBytes(int, io.netty.buffer.ByteBuf, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload         4
       4: iload_3
       5: aload_2
       6: invokevirtual #33                 // Method io/netty/buffer/ByteBuf.capacity:()I
       9: invokevirtual #34                 // Method checkDstIndex:(IIII)V
      12: aload_2
      13: invokevirtual #35                 // Method io/netty/buffer/ByteBuf.hasMemoryAddress:()Z
      16: ifeq          40
      19: aload_0
      20: getfield      #16                 // Field array:[B
      23: iload_1
      24: aload_2
      25: invokevirtual #36                 // Method io/netty/buffer/ByteBuf.memoryAddress:()J
      28: iload_3
      29: i2l
      30: ladd
      31: iload         4
      33: i2l
      34: invokestatic  #37                 // Method io/netty/util/internal/PlatformDependent.copyMemory:([BIJJ)V
      37: goto          81
      40: aload_2
      41: invokevirtual #38                 // Method io/netty/buffer/ByteBuf.hasArray:()Z
      44: ifeq          68
      47: aload_0
      48: iload_1
      49: aload_2
      50: invokevirtual #39                 // Method io/netty/buffer/ByteBuf.array:()[B
      53: aload_2
      54: invokevirtual #40                 // Method io/netty/buffer/ByteBuf.arrayOffset:()I
      57: iload_3
      58: iadd
      59: iload         4
      61: invokevirtual #41                 // Method getBytes:(I[BII)Lio/netty/buffer/ByteBuf;
      64: pop
      65: goto          81
      68: aload_2
      69: iload_3
      70: aload_0
      71: getfield      #16                 // Field array:[B
      74: iload_1
      75: iload         4
      77: invokevirtual #42                 // Method io/netty/buffer/ByteBuf.setBytes:(I[BII)Lio/netty/buffer/ByteBuf;
      80: pop
      81: aload_0
      82: areturn

  public io.netty.buffer.ByteBuf getBytes(int, byte[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload         4
       4: iload_3
       5: aload_2
       6: arraylength
       7: invokevirtual #34                 // Method checkDstIndex:(IIII)V
      10: aload_0
      11: getfield      #16                 // Field array:[B
      14: iload_1
      15: aload_2
      16: iload_3
      17: iload         4
      19: invokestatic  #27                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      22: aload_0
      23: areturn

  public io.netty.buffer.ByteBuf getBytes(int, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_2
       5: aload_0
       6: getfield      #16                 // Field array:[B
       9: iload_1
      10: aload_0
      11: invokevirtual #43                 // Method capacity:()I
      14: iload_1
      15: isub
      16: aload_2
      17: invokevirtual #44                 // Method java/nio/ByteBuffer.remaining:()I
      20: invokestatic  #45                 // Method java/lang/Math.min:(II)I
      23: invokevirtual #46                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      26: pop
      27: aload_0
      28: areturn

  public io.netty.buffer.ByteBuf getBytes(int, java.io.OutputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_2
       5: aload_0
       6: getfield      #16                 // Field array:[B
       9: iload_1
      10: iload_3
      11: invokevirtual #47                 // Method java/io/OutputStream.write:([BII)V
      14: aload_0
      15: areturn

  public int getBytes(int, java.nio.channels.GatheringByteChannel, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: aload_2
       7: iload_3
       8: iconst_0
       9: invokespecial #48                 // Method getBytes:(ILjava/nio/channels/GatheringByteChannel;IZ)I
      12: ireturn

  private int getBytes(int, java.nio.channels.GatheringByteChannel, int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: iload         4
       6: ifeq          18
       9: aload_0
      10: invokespecial #49                 // Method internalNioBuffer:()Ljava/nio/ByteBuffer;
      13: astore        5
      15: goto          27
      18: aload_0
      19: getfield      #16                 // Field array:[B
      22: invokestatic  #50                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      25: astore        5
      27: aload_2
      28: aload         5
      30: invokevirtual #51                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      33: iload_1
      34: invokevirtual #52                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      37: iload_1
      38: iload_3
      39: iadd
      40: invokevirtual #53                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      43: checkcast     #54                 // class java/nio/ByteBuffer
      46: invokeinterface #55,  2           // InterfaceMethod java/nio/channels/GatheringByteChannel.write:(Ljava/nio/ByteBuffer;)I
      51: ireturn

  public int readBytes(java.nio.channels.GatheringByteChannel, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_2
       2: invokevirtual #56                 // Method checkReadableBytes:(I)V
       5: aload_0
       6: aload_0
       7: getfield      #57                 // Field readerIndex:I
      10: aload_1
      11: iload_2
      12: iconst_1
      13: invokespecial #48                 // Method getBytes:(ILjava/nio/channels/GatheringByteChannel;IZ)I
      16: istore_3
      17: aload_0
      18: dup
      19: getfield      #57                 // Field readerIndex:I
      22: iload_3
      23: iadd
      24: putfield      #57                 // Field readerIndex:I
      27: iload_3
      28: ireturn

  public io.netty.buffer.ByteBuf setBytes(int, io.netty.buffer.ByteBuf, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload         4
       4: iload_3
       5: aload_2
       6: invokevirtual #33                 // Method io/netty/buffer/ByteBuf.capacity:()I
       9: invokevirtual #58                 // Method checkSrcIndex:(IIII)V
      12: aload_2
      13: invokevirtual #35                 // Method io/netty/buffer/ByteBuf.hasMemoryAddress:()Z
      16: ifeq          40
      19: aload_2
      20: invokevirtual #36                 // Method io/netty/buffer/ByteBuf.memoryAddress:()J
      23: iload_3
      24: i2l
      25: ladd
      26: aload_0
      27: getfield      #16                 // Field array:[B
      30: iload_1
      31: iload         4
      33: i2l
      34: invokestatic  #59                 // Method io/netty/util/internal/PlatformDependent.copyMemory:(J[BIJ)V
      37: goto          81
      40: aload_2
      41: invokevirtual #38                 // Method io/netty/buffer/ByteBuf.hasArray:()Z
      44: ifeq          68
      47: aload_0
      48: iload_1
      49: aload_2
      50: invokevirtual #39                 // Method io/netty/buffer/ByteBuf.array:()[B
      53: aload_2
      54: invokevirtual #40                 // Method io/netty/buffer/ByteBuf.arrayOffset:()I
      57: iload_3
      58: iadd
      59: iload         4
      61: invokevirtual #60                 // Method setBytes:(I[BII)Lio/netty/buffer/ByteBuf;
      64: pop
      65: goto          81
      68: aload_2
      69: iload_3
      70: aload_0
      71: getfield      #16                 // Field array:[B
      74: iload_1
      75: iload         4
      77: invokevirtual #61                 // Method io/netty/buffer/ByteBuf.getBytes:(I[BII)Lio/netty/buffer/ByteBuf;
      80: pop
      81: aload_0
      82: areturn

  public io.netty.buffer.ByteBuf setBytes(int, byte[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload         4
       4: iload_3
       5: aload_2
       6: arraylength
       7: invokevirtual #58                 // Method checkSrcIndex:(IIII)V
      10: aload_2
      11: iload_3
      12: aload_0
      13: getfield      #16                 // Field array:[B
      16: iload_1
      17: iload         4
      19: invokestatic  #27                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      22: aload_0
      23: areturn

  public io.netty.buffer.ByteBuf setBytes(int, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_2
       5: aload_0
       6: getfield      #16                 // Field array:[B
       9: iload_1
      10: aload_2
      11: invokevirtual #44                 // Method java/nio/ByteBuffer.remaining:()I
      14: invokevirtual #62                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      17: pop
      18: aload_0
      19: areturn

  public int setBytes(int, java.io.InputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_2
       5: aload_0
       6: getfield      #16                 // Field array:[B
       9: iload_1
      10: iload_3
      11: invokevirtual #63                 // Method java/io/InputStream.read:([BII)I
      14: ireturn

  public int setBytes(int, java.nio.channels.ScatteringByteChannel, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_2
       5: aload_0
       6: invokespecial #49                 // Method internalNioBuffer:()Ljava/nio/ByteBuffer;
       9: invokevirtual #51                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      12: iload_1
      13: invokevirtual #52                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      16: iload_1
      17: iload_3
      18: iadd
      19: invokevirtual #53                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      22: checkcast     #54                 // class java/nio/ByteBuffer
      25: invokeinterface #64,  2           // InterfaceMethod java/nio/channels/ScatteringByteChannel.read:(Ljava/nio/ByteBuffer;)I
      30: ireturn
      31: astore        4
      33: iconst_m1
      34: ireturn
    Exception table:
       from    to  target type
           4    30    31   Class java/nio/channels/ClosedChannelException

  public int nioBufferCount();
    Code:
       0: iconst_1
       1: ireturn

  public java.nio.ByteBuffer nioBuffer(int, int);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_0
       5: getfield      #16                 // Field array:[B
       8: iload_1
       9: iload_2
      10: invokestatic  #66                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      13: invokevirtual #67                 // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
      16: areturn

  public java.nio.ByteBuffer[] nioBuffers(int, int);
    Code:
       0: iconst_1
       1: anewarray     #54                 // class java/nio/ByteBuffer
       4: dup
       5: iconst_0
       6: aload_0
       7: iload_1
       8: iload_2
       9: invokevirtual #68                 // Method nioBuffer:(II)Ljava/nio/ByteBuffer;
      12: aastore
      13: areturn

  public java.nio.ByteBuffer internalNioBuffer(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #69                 // Method checkIndex:(II)V
       6: aload_0
       7: invokespecial #49                 // Method internalNioBuffer:()Ljava/nio/ByteBuffer;
      10: invokevirtual #51                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      13: iload_1
      14: invokevirtual #52                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      17: iload_1
      18: iload_2
      19: iadd
      20: invokevirtual #53                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      23: checkcast     #54                 // class java/nio/ByteBuffer
      26: areturn

  public byte getByte(int);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #70                 // Method _getByte:(I)B
       9: ireturn

  protected byte _getByte(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field array:[B
       4: iload_1
       5: baload
       6: ireturn

  public short getShort(int);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #71                 // Method _getShort:(I)S
       9: ireturn

  protected short _getShort(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field array:[B
       4: iload_1
       5: baload
       6: bipush        8
       8: ishl
       9: aload_0
      10: getfield      #16                 // Field array:[B
      13: iload_1
      14: iconst_1
      15: iadd
      16: baload
      17: sipush        255
      20: iand
      21: ior
      22: i2s
      23: ireturn

  public int getUnsignedMedium(int);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #72                 // Method _getUnsignedMedium:(I)I
       9: ireturn

  protected int _getUnsignedMedium(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field array:[B
       4: iload_1
       5: baload
       6: sipush        255
       9: iand
      10: bipush        16
      12: ishl
      13: aload_0
      14: getfield      #16                 // Field array:[B
      17: iload_1
      18: iconst_1
      19: iadd
      20: baload
      21: sipush        255
      24: iand
      25: bipush        8
      27: ishl
      28: ior
      29: aload_0
      30: getfield      #16                 // Field array:[B
      33: iload_1
      34: iconst_2
      35: iadd
      36: baload
      37: sipush        255
      40: iand
      41: ior
      42: ireturn

  public int getInt(int);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #73                 // Method _getInt:(I)I
       9: ireturn

  protected int _getInt(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field array:[B
       4: iload_1
       5: baload
       6: sipush        255
       9: iand
      10: bipush        24
      12: ishl
      13: aload_0
      14: getfield      #16                 // Field array:[B
      17: iload_1
      18: iconst_1
      19: iadd
      20: baload
      21: sipush        255
      24: iand
      25: bipush        16
      27: ishl
      28: ior
      29: aload_0
      30: getfield      #16                 // Field array:[B
      33: iload_1
      34: iconst_2
      35: iadd
      36: baload
      37: sipush        255
      40: iand
      41: bipush        8
      43: ishl
      44: ior
      45: aload_0
      46: getfield      #16                 // Field array:[B
      49: iload_1
      50: iconst_3
      51: iadd
      52: baload
      53: sipush        255
      56: iand
      57: ior
      58: ireturn

  public long getLong(int);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #74                 // Method _getLong:(I)J
       9: lreturn

  protected long _getLong(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field array:[B
       4: iload_1
       5: baload
       6: i2l
       7: ldc2_w        #75                 // long 255l
      10: land
      11: bipush        56
      13: lshl
      14: aload_0
      15: getfield      #16                 // Field array:[B
      18: iload_1
      19: iconst_1
      20: iadd
      21: baload
      22: i2l
      23: ldc2_w        #75                 // long 255l
      26: land
      27: bipush        48
      29: lshl
      30: lor
      31: aload_0
      32: getfield      #16                 // Field array:[B
      35: iload_1
      36: iconst_2
      37: iadd
      38: baload
      39: i2l
      40: ldc2_w        #75                 // long 255l
      43: land
      44: bipush        40
      46: lshl
      47: lor
      48: aload_0
      49: getfield      #16                 // Field array:[B
      52: iload_1
      53: iconst_3
      54: iadd
      55: baload
      56: i2l
      57: ldc2_w        #75                 // long 255l
      60: land
      61: bipush        32
      63: lshl
      64: lor
      65: aload_0
      66: getfield      #16                 // Field array:[B
      69: iload_1
      70: iconst_4
      71: iadd
      72: baload
      73: i2l
      74: ldc2_w        #75                 // long 255l
      77: land
      78: bipush        24
      80: lshl
      81: lor
      82: aload_0
      83: getfield      #16                 // Field array:[B
      86: iload_1
      87: iconst_5
      88: iadd
      89: baload
      90: i2l
      91: ldc2_w        #75                 // long 255l
      94: land
      95: bipush        16
      97: lshl
      98: lor
      99: aload_0
     100: getfield      #16                 // Field array:[B
     103: iload_1
     104: bipush        6
     106: iadd
     107: baload
     108: i2l
     109: ldc2_w        #75                 // long 255l
     112: land
     113: bipush        8
     115: lshl
     116: lor
     117: aload_0
     118: getfield      #16                 // Field array:[B
     121: iload_1
     122: bipush        7
     124: iadd
     125: baload
     126: i2l
     127: ldc2_w        #75                 // long 255l
     130: land
     131: lor
     132: lreturn

  public io.netty.buffer.ByteBuf setByte(int, int);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokevirtual #77                 // Method _setByte:(II)V
      10: aload_0
      11: areturn

  protected void _setByte(int, int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field array:[B
       4: iload_1
       5: iload_2
       6: i2b
       7: bastore
       8: return

  public io.netty.buffer.ByteBuf setShort(int, int);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokevirtual #78                 // Method _setShort:(II)V
      10: aload_0
      11: areturn

  protected void _setShort(int, int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field array:[B
       4: iload_1
       5: iload_2
       6: bipush        8
       8: iushr
       9: i2b
      10: bastore
      11: aload_0
      12: getfield      #16                 // Field array:[B
      15: iload_1
      16: iconst_1
      17: iadd
      18: iload_2
      19: i2b
      20: bastore
      21: return

  public io.netty.buffer.ByteBuf setMedium(int, int);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokevirtual #79                 // Method _setMedium:(II)V
      10: aload_0
      11: areturn

  protected void _setMedium(int, int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field array:[B
       4: iload_1
       5: iload_2
       6: bipush        16
       8: iushr
       9: i2b
      10: bastore
      11: aload_0
      12: getfield      #16                 // Field array:[B
      15: iload_1
      16: iconst_1
      17: iadd
      18: iload_2
      19: bipush        8
      21: iushr
      22: i2b
      23: bastore
      24: aload_0
      25: getfield      #16                 // Field array:[B
      28: iload_1
      29: iconst_2
      30: iadd
      31: iload_2
      32: i2b
      33: bastore
      34: return

  public io.netty.buffer.ByteBuf setInt(int, int);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokevirtual #80                 // Method _setInt:(II)V
      10: aload_0
      11: areturn

  protected void _setInt(int, int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field array:[B
       4: iload_1
       5: iload_2
       6: bipush        24
       8: iushr
       9: i2b
      10: bastore
      11: aload_0
      12: getfield      #16                 // Field array:[B
      15: iload_1
      16: iconst_1
      17: iadd
      18: iload_2
      19: bipush        16
      21: iushr
      22: i2b
      23: bastore
      24: aload_0
      25: getfield      #16                 // Field array:[B
      28: iload_1
      29: iconst_2
      30: iadd
      31: iload_2
      32: bipush        8
      34: iushr
      35: i2b
      36: bastore
      37: aload_0
      38: getfield      #16                 // Field array:[B
      41: iload_1
      42: iconst_3
      43: iadd
      44: iload_2
      45: i2b
      46: bastore
      47: return

  public io.netty.buffer.ByteBuf setLong(int, long);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method ensureAccessible:()V
       4: aload_0
       5: iload_1
       6: lload_2
       7: invokevirtual #81                 // Method _setLong:(IJ)V
      10: aload_0
      11: areturn

  protected void _setLong(int, long);
    Code:
       0: aload_0
       1: getfield      #16                 // Field array:[B
       4: iload_1
       5: lload_2
       6: bipush        56
       8: lushr
       9: l2i
      10: i2b
      11: bastore
      12: aload_0
      13: getfield      #16                 // Field array:[B
      16: iload_1
      17: iconst_1
      18: iadd
      19: lload_2
      20: bipush        48
      22: lushr
      23: l2i
      24: i2b
      25: bastore
      26: aload_0
      27: getfield      #16                 // Field array:[B
      30: iload_1
      31: iconst_2
      32: iadd
      33: lload_2
      34: bipush        40
      36: lushr
      37: l2i
      38: i2b
      39: bastore
      40: aload_0
      41: getfield      #16                 // Field array:[B
      44: iload_1
      45: iconst_3
      46: iadd
      47: lload_2
      48: bipush        32
      50: lushr
      51: l2i
      52: i2b
      53: bastore
      54: aload_0
      55: getfield      #16                 // Field array:[B
      58: iload_1
      59: iconst_4
      60: iadd
      61: lload_2
      62: bipush        24
      64: lushr
      65: l2i
      66: i2b
      67: bastore
      68: aload_0
      69: getfield      #16                 // Field array:[B
      72: iload_1
      73: iconst_5
      74: iadd
      75: lload_2
      76: bipush        16
      78: lushr
      79: l2i
      80: i2b
      81: bastore
      82: aload_0
      83: getfield      #16                 // Field array:[B
      86: iload_1
      87: bipush        6
      89: iadd
      90: lload_2
      91: bipush        8
      93: lushr
      94: l2i
      95: i2b
      96: bastore
      97: aload_0
      98: getfield      #16                 // Field array:[B
     101: iload_1
     102: bipush        7
     104: iadd
     105: lload_2
     106: l2i
     107: i2b
     108: bastore
     109: return

  public io.netty.buffer.ByteBuf copy(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #69                 // Method checkIndex:(II)V
       6: iload_2
       7: newarray       byte
       9: astore_3
      10: aload_0
      11: getfield      #16                 // Field array:[B
      14: iload_1
      15: aload_3
      16: iconst_0
      17: iload_2
      18: invokestatic  #27                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      21: new           #82                 // class io/netty/buffer/UnpooledHeapByteBuf
      24: dup
      25: aload_0
      26: invokevirtual #83                 // Method alloc:()Lio/netty/buffer/ByteBufAllocator;
      29: aload_3
      30: aload_0
      31: invokevirtual #20                 // Method maxCapacity:()I
      34: invokespecial #84                 // Method "<init>":(Lio/netty/buffer/ByteBufAllocator;[BI)V
      37: areturn

  private java.nio.ByteBuffer internalNioBuffer();
    Code:
       0: aload_0
       1: getfield      #17                 // Field tmpNioBuf:Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_1
       6: ifnonnull     22
       9: aload_0
      10: aload_0
      11: getfield      #16                 // Field array:[B
      14: invokestatic  #50                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      17: dup
      18: astore_1
      19: putfield      #17                 // Field tmpNioBuf:Ljava/nio/ByteBuffer;
      22: aload_1
      23: areturn

  protected void deallocate();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #16                 // Field array:[B
       5: return

  public io.netty.buffer.ByteBuf unwrap();
    Code:
       0: aconst_null
       1: areturn
}
