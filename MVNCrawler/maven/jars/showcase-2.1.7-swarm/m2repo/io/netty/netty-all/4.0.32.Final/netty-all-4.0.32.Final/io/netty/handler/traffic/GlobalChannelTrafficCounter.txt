Compiled from "GlobalChannelTrafficCounter.java"
public class io.netty.handler.traffic.GlobalChannelTrafficCounter extends io.netty.handler.traffic.TrafficCounter {
  public io.netty.handler.traffic.GlobalChannelTrafficCounter(io.netty.handler.traffic.GlobalChannelTrafficShapingHandler, java.util.concurrent.ScheduledExecutorService, java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: lload         4
       6: invokespecial #1                  // Method io/netty/handler/traffic/TrafficCounter."<init>":(Lio/netty/handler/traffic/AbstractTrafficShapingHandler;Ljava/util/concurrent/ScheduledExecutorService;Ljava/lang/String;J)V
       9: aload_2
      10: ifnonnull     23
      13: new           #2                  // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #3                  // String Executor must not be null
      19: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: return

  public synchronized void start();
    Code:
       0: aload_0
       1: getfield      #5                  // Field monitorActive:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #6                  // Field lastTime:Ljava/util/concurrent/atomic/AtomicLong;
      12: invokestatic  #7                  // Method milliSecondFromNano:()J
      15: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      18: aload_0
      19: getfield      #9                  // Field checkInterval:Ljava/util/concurrent/atomic/AtomicLong;
      22: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      25: lstore_1
      26: lload_1
      27: lconst_0
      28: lcmp
      29: ifle          77
      32: aload_0
      33: iconst_1
      34: putfield      #5                  // Field monitorActive:Z
      37: aload_0
      38: new           #11                 // class io/netty/handler/traffic/GlobalChannelTrafficCounter$MixedTrafficMonitoringTask
      41: dup
      42: aload_0
      43: getfield      #12                 // Field trafficShapingHandler:Lio/netty/handler/traffic/AbstractTrafficShapingHandler;
      46: checkcast     #13                 // class io/netty/handler/traffic/GlobalChannelTrafficShapingHandler
      49: aload_0
      50: invokespecial #14                 // Method io/netty/handler/traffic/GlobalChannelTrafficCounter$MixedTrafficMonitoringTask."<init>":(Lio/netty/handler/traffic/GlobalChannelTrafficShapingHandler;Lio/netty/handler/traffic/TrafficCounter;)V
      53: putfield      #15                 // Field monitor:Ljava/lang/Runnable;
      56: aload_0
      57: aload_0
      58: getfield      #16                 // Field executor:Ljava/util/concurrent/ScheduledExecutorService;
      61: aload_0
      62: getfield      #15                 // Field monitor:Ljava/lang/Runnable;
      65: lload_1
      66: getstatic     #17                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      69: invokeinterface #18,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      74: putfield      #19                 // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      77: return

  public synchronized void stop();
    Code:
       0: aload_0
       1: getfield      #5                  // Field monitorActive:Z
       4: ifne          8
       7: return
       8: aload_0
       9: iconst_0
      10: putfield      #5                  // Field monitorActive:Z
      13: aload_0
      14: invokestatic  #7                  // Method milliSecondFromNano:()J
      17: invokevirtual #20                 // Method resetAccounting:(J)V
      20: aload_0
      21: getfield      #12                 // Field trafficShapingHandler:Lio/netty/handler/traffic/AbstractTrafficShapingHandler;
      24: aload_0
      25: invokevirtual #21                 // Method io/netty/handler/traffic/AbstractTrafficShapingHandler.doAccounting:(Lio/netty/handler/traffic/TrafficCounter;)V
      28: aload_0
      29: getfield      #19                 // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      32: ifnull        46
      35: aload_0
      36: getfield      #19                 // Field scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      39: iconst_1
      40: invokeinterface #22,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      45: pop
      46: return

  public void resetCumulativeTime();
    Code:
       0: aload_0
       1: getfield      #12                 // Field trafficShapingHandler:Lio/netty/handler/traffic/AbstractTrafficShapingHandler;
       4: checkcast     #13                 // class io/netty/handler/traffic/GlobalChannelTrafficShapingHandler
       7: getfield      #23                 // Field io/netty/handler/traffic/GlobalChannelTrafficShapingHandler.channelQueues:Ljava/util/concurrent/ConcurrentMap;
      10: invokeinterface #24,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      15: invokeinterface #25,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      20: astore_1
      21: aload_1
      22: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          50
      30: aload_1
      31: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #28                 // class io/netty/handler/traffic/GlobalChannelTrafficShapingHandler$PerChannel
      39: astore_2
      40: aload_2
      41: getfield      #29                 // Field io/netty/handler/traffic/GlobalChannelTrafficShapingHandler$PerChannel.channelTrafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      44: invokevirtual #30                 // Method io/netty/handler/traffic/TrafficCounter.resetCumulativeTime:()V
      47: goto          21
      50: aload_0
      51: invokespecial #30                 // Method io/netty/handler/traffic/TrafficCounter.resetCumulativeTime:()V
      54: return
}
