Compiled from "SnappyFramedEncoder.java"
public class io.netty.handler.codec.compression.SnappyFramedEncoder extends io.netty.handler.codec.MessageToByteEncoder<io.netty.buffer.ByteBuf> {
  private static final int MIN_COMPRESSIBLE_LENGTH;

  private static final byte[] STREAM_START;

  private final io.netty.handler.codec.compression.Snappy snappy;

  private boolean started;

  public io.netty.handler.codec.compression.SnappyFramedEncoder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/netty/handler/codec/MessageToByteEncoder."<init>":()V
       4: aload_0
       5: new           #2                  // class io/netty/handler/codec/compression/Snappy
       8: dup
       9: invokespecial #3                  // Method io/netty/handler/codec/compression/Snappy."<init>":()V
      12: putfield      #4                  // Field snappy:Lio/netty/handler/codec/compression/Snappy;
      15: return

  protected void encode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #5                  // Method io/netty/buffer/ByteBuf.isReadable:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: getfield      #6                  // Field started:Z
      12: ifne          28
      15: aload_0
      16: iconst_1
      17: putfield      #6                  // Field started:Z
      20: aload_3
      21: getstatic     #7                  // Field STREAM_START:[B
      24: invokevirtual #8                  // Method io/netty/buffer/ByteBuf.writeBytes:([B)Lio/netty/buffer/ByteBuf;
      27: pop
      28: aload_2
      29: invokevirtual #9                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
      32: istore        4
      34: iload         4
      36: bipush        18
      38: if_icmple     170
      41: aload_3
      42: invokevirtual #10                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
      45: iconst_1
      46: iadd
      47: istore        5
      49: iload         4
      51: bipush        18
      53: if_icmpge     75
      56: aload_2
      57: iload         4
      59: invokevirtual #11                 // Method io/netty/buffer/ByteBuf.readSlice:(I)Lio/netty/buffer/ByteBuf;
      62: astore        6
      64: aload         6
      66: aload_3
      67: iload         4
      69: invokestatic  #12                 // Method writeUnencodedChunk:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;I)V
      72: goto          177
      75: aload_3
      76: iconst_0
      77: invokevirtual #13                 // Method io/netty/buffer/ByteBuf.writeInt:(I)Lio/netty/buffer/ByteBuf;
      80: pop
      81: iload         4
      83: sipush        32767
      86: if_icmple     132
      89: aload_2
      90: sipush        32767
      93: invokevirtual #11                 // Method io/netty/buffer/ByteBuf.readSlice:(I)Lio/netty/buffer/ByteBuf;
      96: astore        6
      98: aload         6
     100: aload_3
     101: invokestatic  #14                 // Method calculateAndWriteChecksum:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V
     104: aload_0
     105: getfield      #4                  // Field snappy:Lio/netty/handler/codec/compression/Snappy;
     108: aload         6
     110: aload_3
     111: sipush        32767
     114: invokevirtual #15                 // Method io/netty/handler/codec/compression/Snappy.encode:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;I)V
     117: aload_3
     118: iload         5
     120: invokestatic  #16                 // Method setChunkLength:(Lio/netty/buffer/ByteBuf;I)V
     123: iinc_w        4, -32767
     129: goto          167
     132: aload_2
     133: iload         4
     135: invokevirtual #11                 // Method io/netty/buffer/ByteBuf.readSlice:(I)Lio/netty/buffer/ByteBuf;
     138: astore        6
     140: aload         6
     142: aload_3
     143: invokestatic  #14                 // Method calculateAndWriteChecksum:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V
     146: aload_0
     147: getfield      #4                  // Field snappy:Lio/netty/handler/codec/compression/Snappy;
     150: aload         6
     152: aload_3
     153: iload         4
     155: invokevirtual #15                 // Method io/netty/handler/codec/compression/Snappy.encode:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;I)V
     158: aload_3
     159: iload         5
     161: invokestatic  #16                 // Method setChunkLength:(Lio/netty/buffer/ByteBuf;I)V
     164: goto          177
     167: goto          41
     170: aload_2
     171: aload_3
     172: iload         4
     174: invokestatic  #12                 // Method writeUnencodedChunk:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;I)V
     177: return

  private static void writeUnencodedChunk(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, int);
    Code:
       0: aload_1
       1: iconst_1
       2: invokevirtual #17                 // Method io/netty/buffer/ByteBuf.writeByte:(I)Lio/netty/buffer/ByteBuf;
       5: pop
       6: aload_1
       7: iload_2
       8: iconst_4
       9: iadd
      10: invokestatic  #18                 // Method writeChunkLength:(Lio/netty/buffer/ByteBuf;I)V
      13: aload_0
      14: aload_1
      15: invokestatic  #14                 // Method calculateAndWriteChecksum:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V
      18: aload_1
      19: aload_0
      20: iload_2
      21: invokevirtual #19                 // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;
      24: pop
      25: return

  private static void setChunkLength(io.netty.buffer.ByteBuf, int);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
       4: iload_1
       5: isub
       6: iconst_3
       7: isub
       8: istore_2
       9: iload_2
      10: bipush        24
      12: iushr
      13: ifeq          43
      16: new           #20                 // class io/netty/handler/codec/compression/CompressionException
      19: dup
      20: new           #21                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #23                 // String compressed data too large:
      29: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: iload_2
      33: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #27                 // Method io/netty/handler/codec/compression/CompressionException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: iload_1
      45: iload_2
      46: invokestatic  #28                 // Method io/netty/buffer/ByteBufUtil.swapMedium:(I)I
      49: invokevirtual #29                 // Method io/netty/buffer/ByteBuf.setMedium:(II)Lio/netty/buffer/ByteBuf;
      52: pop
      53: return

  private static void writeChunkLength(io.netty.buffer.ByteBuf, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #28                 // Method io/netty/buffer/ByteBufUtil.swapMedium:(I)I
       5: invokevirtual #30                 // Method io/netty/buffer/ByteBuf.writeMedium:(I)Lio/netty/buffer/ByteBuf;
       8: pop
       9: return

  private static void calculateAndWriteChecksum(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf);
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #31                 // Method io/netty/handler/codec/compression/Snappy.calculateChecksum:(Lio/netty/buffer/ByteBuf;)I
       5: invokestatic  #32                 // Method io/netty/buffer/ByteBufUtil.swapInt:(I)I
       8: invokevirtual #13                 // Method io/netty/buffer/ByteBuf.writeInt:(I)Lio/netty/buffer/ByteBuf;
      11: pop
      12: return

  protected void encode(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.buffer.ByteBuf) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #33                 // class io/netty/buffer/ByteBuf
       6: aload_3
       7: invokevirtual #34                 // Method encode:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V
      10: return

  static {};
    Code:
       0: bipush        10
       2: newarray       byte
       4: dup
       5: iconst_0
       6: iconst_m1
       7: bastore
       8: dup
       9: iconst_1
      10: bipush        6
      12: bastore
      13: dup
      14: iconst_2
      15: iconst_0
      16: bastore
      17: dup
      18: iconst_3
      19: iconst_0
      20: bastore
      21: dup
      22: iconst_4
      23: bipush        115
      25: bastore
      26: dup
      27: iconst_5
      28: bipush        78
      30: bastore
      31: dup
      32: bipush        6
      34: bipush        97
      36: bastore
      37: dup
      38: bipush        7
      40: bipush        80
      42: bastore
      43: dup
      44: bipush        8
      46: bipush        112
      48: bastore
      49: dup
      50: bipush        9
      52: bipush        89
      54: bastore
      55: putstatic     #7                  // Field STREAM_START:[B
      58: return
}
