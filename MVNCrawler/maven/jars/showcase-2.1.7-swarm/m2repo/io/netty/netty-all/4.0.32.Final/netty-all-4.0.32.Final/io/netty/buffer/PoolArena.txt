Compiled from "PoolArena.java"
abstract class io.netty.buffer.PoolArena<T> implements io.netty.buffer.PoolArenaMetric {
  static final int numTinySubpagePools;

  final io.netty.buffer.PooledByteBufAllocator parent;

  private final int maxOrder;

  final int pageSize;

  final int pageShifts;

  final int chunkSize;

  final int subpageOverflowMask;

  final int numSmallSubpagePools;

  private final io.netty.buffer.PoolSubpage<T>[] tinySubpagePools;

  private final io.netty.buffer.PoolSubpage<T>[] smallSubpagePools;

  private final io.netty.buffer.PoolChunkList<T> q050;

  private final io.netty.buffer.PoolChunkList<T> q025;

  private final io.netty.buffer.PoolChunkList<T> q000;

  private final io.netty.buffer.PoolChunkList<T> qInit;

  private final io.netty.buffer.PoolChunkList<T> q075;

  private final io.netty.buffer.PoolChunkList<T> q100;

  private final java.util.List<io.netty.buffer.PoolChunkListMetric> chunkListMetrics;

  private long allocationsTiny;

  private long allocationsSmall;

  private long allocationsNormal;

  private final io.netty.util.internal.LongCounter allocationsHuge;

  private long deallocationsTiny;

  private long deallocationsSmall;

  private long deallocationsNormal;

  private final io.netty.util.internal.LongCounter deallocationsHuge;

  static final boolean $assertionsDisabled;

  protected io.netty.buffer.PoolArena(io.netty.buffer.PooledByteBufAllocator, int, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method io/netty/util/internal/PlatformDependent.newLongCounter:()Lio/netty/util/internal/LongCounter;
       8: putfield      #3                  // Field allocationsHuge:Lio/netty/util/internal/LongCounter;
      11: aload_0
      12: invokestatic  #2                  // Method io/netty/util/internal/PlatformDependent.newLongCounter:()Lio/netty/util/internal/LongCounter;
      15: putfield      #4                  // Field deallocationsHuge:Lio/netty/util/internal/LongCounter;
      18: aload_0
      19: aload_1
      20: putfield      #5                  // Field parent:Lio/netty/buffer/PooledByteBufAllocator;
      23: aload_0
      24: iload_2
      25: putfield      #6                  // Field pageSize:I
      28: aload_0
      29: iload_3
      30: putfield      #7                  // Field maxOrder:I
      33: aload_0
      34: iload         4
      36: putfield      #8                  // Field pageShifts:I
      39: aload_0
      40: iload         5
      42: putfield      #9                  // Field chunkSize:I
      45: aload_0
      46: iload_2
      47: iconst_1
      48: isub
      49: iconst_m1
      50: ixor
      51: putfield      #10                 // Field subpageOverflowMask:I
      54: aload_0
      55: aload_0
      56: bipush        32
      58: invokespecial #11                 // Method newSubpagePoolArray:(I)[Lio/netty/buffer/PoolSubpage;
      61: putfield      #12                 // Field tinySubpagePools:[Lio/netty/buffer/PoolSubpage;
      64: iconst_0
      65: istore        6
      67: iload         6
      69: aload_0
      70: getfield      #12                 // Field tinySubpagePools:[Lio/netty/buffer/PoolSubpage;
      73: arraylength
      74: if_icmpge     95
      77: aload_0
      78: getfield      #12                 // Field tinySubpagePools:[Lio/netty/buffer/PoolSubpage;
      81: iload         6
      83: aload_0
      84: iload_2
      85: invokespecial #13                 // Method newSubpagePoolHead:(I)Lio/netty/buffer/PoolSubpage;
      88: aastore
      89: iinc          6, 1
      92: goto          67
      95: aload_0
      96: iload         4
      98: bipush        9
     100: isub
     101: putfield      #14                 // Field numSmallSubpagePools:I
     104: aload_0
     105: aload_0
     106: aload_0
     107: getfield      #14                 // Field numSmallSubpagePools:I
     110: invokespecial #11                 // Method newSubpagePoolArray:(I)[Lio/netty/buffer/PoolSubpage;
     113: putfield      #15                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
     116: iconst_0
     117: istore        6
     119: iload         6
     121: aload_0
     122: getfield      #15                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
     125: arraylength
     126: if_icmpge     147
     129: aload_0
     130: getfield      #15                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
     133: iload         6
     135: aload_0
     136: iload_2
     137: invokespecial #13                 // Method newSubpagePoolHead:(I)Lio/netty/buffer/PoolSubpage;
     140: aastore
     141: iinc          6, 1
     144: goto          119
     147: aload_0
     148: new           #16                 // class io/netty/buffer/PoolChunkList
     151: dup
     152: aconst_null
     153: bipush        100
     155: ldc           #17                 // int 2147483647
     157: invokespecial #18                 // Method io/netty/buffer/PoolChunkList."<init>":(Lio/netty/buffer/PoolChunkList;II)V
     160: putfield      #19                 // Field q100:Lio/netty/buffer/PoolChunkList;
     163: aload_0
     164: new           #16                 // class io/netty/buffer/PoolChunkList
     167: dup
     168: aload_0
     169: getfield      #19                 // Field q100:Lio/netty/buffer/PoolChunkList;
     172: bipush        75
     174: bipush        100
     176: invokespecial #18                 // Method io/netty/buffer/PoolChunkList."<init>":(Lio/netty/buffer/PoolChunkList;II)V
     179: putfield      #20                 // Field q075:Lio/netty/buffer/PoolChunkList;
     182: aload_0
     183: new           #16                 // class io/netty/buffer/PoolChunkList
     186: dup
     187: aload_0
     188: getfield      #20                 // Field q075:Lio/netty/buffer/PoolChunkList;
     191: bipush        50
     193: bipush        100
     195: invokespecial #18                 // Method io/netty/buffer/PoolChunkList."<init>":(Lio/netty/buffer/PoolChunkList;II)V
     198: putfield      #21                 // Field q050:Lio/netty/buffer/PoolChunkList;
     201: aload_0
     202: new           #16                 // class io/netty/buffer/PoolChunkList
     205: dup
     206: aload_0
     207: getfield      #21                 // Field q050:Lio/netty/buffer/PoolChunkList;
     210: bipush        25
     212: bipush        75
     214: invokespecial #18                 // Method io/netty/buffer/PoolChunkList."<init>":(Lio/netty/buffer/PoolChunkList;II)V
     217: putfield      #22                 // Field q025:Lio/netty/buffer/PoolChunkList;
     220: aload_0
     221: new           #16                 // class io/netty/buffer/PoolChunkList
     224: dup
     225: aload_0
     226: getfield      #22                 // Field q025:Lio/netty/buffer/PoolChunkList;
     229: iconst_1
     230: bipush        50
     232: invokespecial #18                 // Method io/netty/buffer/PoolChunkList."<init>":(Lio/netty/buffer/PoolChunkList;II)V
     235: putfield      #23                 // Field q000:Lio/netty/buffer/PoolChunkList;
     238: aload_0
     239: new           #16                 // class io/netty/buffer/PoolChunkList
     242: dup
     243: aload_0
     244: getfield      #23                 // Field q000:Lio/netty/buffer/PoolChunkList;
     247: ldc           #24                 // int -2147483648
     249: bipush        25
     251: invokespecial #18                 // Method io/netty/buffer/PoolChunkList."<init>":(Lio/netty/buffer/PoolChunkList;II)V
     254: putfield      #25                 // Field qInit:Lio/netty/buffer/PoolChunkList;
     257: aload_0
     258: getfield      #19                 // Field q100:Lio/netty/buffer/PoolChunkList;
     261: aload_0
     262: getfield      #20                 // Field q075:Lio/netty/buffer/PoolChunkList;
     265: invokevirtual #26                 // Method io/netty/buffer/PoolChunkList.prevList:(Lio/netty/buffer/PoolChunkList;)V
     268: aload_0
     269: getfield      #20                 // Field q075:Lio/netty/buffer/PoolChunkList;
     272: aload_0
     273: getfield      #21                 // Field q050:Lio/netty/buffer/PoolChunkList;
     276: invokevirtual #26                 // Method io/netty/buffer/PoolChunkList.prevList:(Lio/netty/buffer/PoolChunkList;)V
     279: aload_0
     280: getfield      #21                 // Field q050:Lio/netty/buffer/PoolChunkList;
     283: aload_0
     284: getfield      #22                 // Field q025:Lio/netty/buffer/PoolChunkList;
     287: invokevirtual #26                 // Method io/netty/buffer/PoolChunkList.prevList:(Lio/netty/buffer/PoolChunkList;)V
     290: aload_0
     291: getfield      #22                 // Field q025:Lio/netty/buffer/PoolChunkList;
     294: aload_0
     295: getfield      #23                 // Field q000:Lio/netty/buffer/PoolChunkList;
     298: invokevirtual #26                 // Method io/netty/buffer/PoolChunkList.prevList:(Lio/netty/buffer/PoolChunkList;)V
     301: aload_0
     302: getfield      #23                 // Field q000:Lio/netty/buffer/PoolChunkList;
     305: aconst_null
     306: invokevirtual #26                 // Method io/netty/buffer/PoolChunkList.prevList:(Lio/netty/buffer/PoolChunkList;)V
     309: aload_0
     310: getfield      #25                 // Field qInit:Lio/netty/buffer/PoolChunkList;
     313: aload_0
     314: getfield      #25                 // Field qInit:Lio/netty/buffer/PoolChunkList;
     317: invokevirtual #26                 // Method io/netty/buffer/PoolChunkList.prevList:(Lio/netty/buffer/PoolChunkList;)V
     320: new           #27                 // class java/util/ArrayList
     323: dup
     324: bipush        6
     326: invokespecial #28                 // Method java/util/ArrayList."<init>":(I)V
     329: astore        6
     331: aload         6
     333: aload_0
     334: getfield      #25                 // Field qInit:Lio/netty/buffer/PoolChunkList;
     337: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     342: pop
     343: aload         6
     345: aload_0
     346: getfield      #23                 // Field q000:Lio/netty/buffer/PoolChunkList;
     349: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     354: pop
     355: aload         6
     357: aload_0
     358: getfield      #22                 // Field q025:Lio/netty/buffer/PoolChunkList;
     361: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     366: pop
     367: aload         6
     369: aload_0
     370: getfield      #21                 // Field q050:Lio/netty/buffer/PoolChunkList;
     373: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     378: pop
     379: aload         6
     381: aload_0
     382: getfield      #20                 // Field q075:Lio/netty/buffer/PoolChunkList;
     385: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     390: pop
     391: aload         6
     393: aload_0
     394: getfield      #19                 // Field q100:Lio/netty/buffer/PoolChunkList;
     397: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     402: pop
     403: aload_0
     404: aload         6
     406: invokestatic  #30                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
     409: putfield      #31                 // Field chunkListMetrics:Ljava/util/List;
     412: return

  private io.netty.buffer.PoolSubpage<T> newSubpagePoolHead(int);
    Code:
       0: new           #32                 // class io/netty/buffer/PoolSubpage
       3: dup
       4: iload_1
       5: invokespecial #33                 // Method io/netty/buffer/PoolSubpage."<init>":(I)V
       8: astore_2
       9: aload_2
      10: aload_2
      11: putfield      #34                 // Field io/netty/buffer/PoolSubpage.prev:Lio/netty/buffer/PoolSubpage;
      14: aload_2
      15: aload_2
      16: putfield      #35                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
      19: aload_2
      20: areturn

  private io.netty.buffer.PoolSubpage<T>[] newSubpagePoolArray(int);
    Code:
       0: iload_1
       1: anewarray     #32                 // class io/netty/buffer/PoolSubpage
       4: areturn

  abstract boolean isDirect();

  io.netty.buffer.PooledByteBuf<T> allocate(io.netty.buffer.PoolThreadCache, int, int);
    Code:
       0: aload_0
       1: iload_3
       2: invokevirtual #36                 // Method newByteBuf:(I)Lio/netty/buffer/PooledByteBuf;
       5: astore        4
       7: aload_0
       8: aload_1
       9: aload         4
      11: iload_2
      12: invokespecial #37                 // Method allocate:(Lio/netty/buffer/PoolThreadCache;Lio/netty/buffer/PooledByteBuf;I)V
      15: aload         4
      17: areturn

  static int tinyIdx(int);
    Code:
       0: iload_0
       1: iconst_4
       2: iushr
       3: ireturn

  static int smallIdx(int);
    Code:
       0: iconst_0
       1: istore_1
       2: iload_0
       3: bipush        10
       5: iushr
       6: istore_2
       7: iload_2
       8: ifeq          21
      11: iload_2
      12: iconst_1
      13: iushr
      14: istore_2
      15: iinc          1, 1
      18: goto          7
      21: iload_1
      22: ireturn

  boolean isTinyOrSmall(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #10                 // Field subpageOverflowMask:I
       5: iand
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  static boolean isTiny(int);
    Code:
       0: iload_0
       1: sipush        -512
       4: iand
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  private void allocate(io.netty.buffer.PoolThreadCache, io.netty.buffer.PooledByteBuf<T>, int);
    Code:
       0: aload_0
       1: iload_3
       2: invokevirtual #38                 // Method normalizeCapacity:(I)I
       5: istore        4
       7: aload_0
       8: iload         4
      10: invokevirtual #39                 // Method isTinyOrSmall:(I)Z
      13: ifeq          237
      16: iload         4
      18: invokestatic  #40                 // Method isTiny:(I)Z
      21: istore        7
      23: iload         7
      25: ifeq          57
      28: aload_1
      29: aload_0
      30: aload_2
      31: iload_3
      32: iload         4
      34: invokevirtual #41                 // Method io/netty/buffer/PoolThreadCache.allocateTiny:(Lio/netty/buffer/PoolArena;Lio/netty/buffer/PooledByteBuf;II)Z
      37: ifeq          41
      40: return
      41: iload         4
      43: invokestatic  #42                 // Method tinyIdx:(I)I
      46: istore        5
      48: aload_0
      49: getfield      #12                 // Field tinySubpagePools:[Lio/netty/buffer/PoolSubpage;
      52: astore        6
      54: goto          83
      57: aload_1
      58: aload_0
      59: aload_2
      60: iload_3
      61: iload         4
      63: invokevirtual #43                 // Method io/netty/buffer/PoolThreadCache.allocateSmall:(Lio/netty/buffer/PoolArena;Lio/netty/buffer/PooledByteBuf;II)Z
      66: ifeq          70
      69: return
      70: iload         4
      72: invokestatic  #44                 // Method smallIdx:(I)I
      75: istore        5
      77: aload_0
      78: getfield      #15                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
      81: astore        6
      83: aload         6
      85: iload         5
      87: aaload
      88: astore        8
      90: aload         8
      92: dup
      93: astore        9
      95: monitorenter
      96: aload         8
      98: getfield      #35                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
     101: astore        10
     103: aload         10
     105: aload         8
     107: if_acmpeq     214
     110: getstatic     #45                 // Field $assertionsDisabled:Z
     113: ifne          142
     116: aload         10
     118: getfield      #46                 // Field io/netty/buffer/PoolSubpage.doNotDestroy:Z
     121: ifeq          134
     124: aload         10
     126: getfield      #47                 // Field io/netty/buffer/PoolSubpage.elemSize:I
     129: iload         4
     131: if_icmpeq     142
     134: new           #48                 // class java/lang/AssertionError
     137: dup
     138: invokespecial #49                 // Method java/lang/AssertionError."<init>":()V
     141: athrow
     142: aload         10
     144: invokevirtual #50                 // Method io/netty/buffer/PoolSubpage.allocate:()J
     147: lstore        11
     149: getstatic     #45                 // Field $assertionsDisabled:Z
     152: ifne          170
     155: lload         11
     157: lconst_0
     158: lcmp
     159: ifge          170
     162: new           #48                 // class java/lang/AssertionError
     165: dup
     166: invokespecial #49                 // Method java/lang/AssertionError."<init>":()V
     169: athrow
     170: aload         10
     172: getfield      #51                 // Field io/netty/buffer/PoolSubpage.chunk:Lio/netty/buffer/PoolChunk;
     175: aload_2
     176: lload         11
     178: iload_3
     179: invokevirtual #52                 // Method io/netty/buffer/PoolChunk.initBufWithSubpage:(Lio/netty/buffer/PooledByteBuf;JI)V
     182: iload         7
     184: ifeq          200
     187: aload_0
     188: dup
     189: getfield      #53                 // Field allocationsTiny:J
     192: lconst_1
     193: ladd
     194: putfield      #53                 // Field allocationsTiny:J
     197: goto          210
     200: aload_0
     201: dup
     202: getfield      #54                 // Field allocationsSmall:J
     205: lconst_1
     206: ladd
     207: putfield      #54                 // Field allocationsSmall:J
     210: aload         9
     212: monitorexit
     213: return
     214: aload         9
     216: monitorexit
     217: goto          228
     220: astore        13
     222: aload         9
     224: monitorexit
     225: aload         13
     227: athrow
     228: aload_0
     229: aload_2
     230: iload_3
     231: iload         4
     233: invokespecial #55                 // Method allocateNormal:(Lio/netty/buffer/PooledByteBuf;II)V
     236: return
     237: iload         4
     239: aload_0
     240: getfield      #9                  // Field chunkSize:I
     243: if_icmpgt     270
     246: aload_1
     247: aload_0
     248: aload_2
     249: iload_3
     250: iload         4
     252: invokevirtual #56                 // Method io/netty/buffer/PoolThreadCache.allocateNormal:(Lio/netty/buffer/PoolArena;Lio/netty/buffer/PooledByteBuf;II)Z
     255: ifeq          259
     258: return
     259: aload_0
     260: aload_2
     261: iload_3
     262: iload         4
     264: invokespecial #55                 // Method allocateNormal:(Lio/netty/buffer/PooledByteBuf;II)V
     267: goto          276
     270: aload_0
     271: aload_2
     272: iload_3
     273: invokespecial #57                 // Method allocateHuge:(Lio/netty/buffer/PooledByteBuf;I)V
     276: return
    Exception table:
       from    to  target type
          96   213   220   any
         214   217   220   any
         220   225   220   any

  private synchronized void allocateNormal(io.netty.buffer.PooledByteBuf<T>, int, int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #58                 // Field allocationsNormal:J
       5: lconst_1
       6: ladd
       7: putfield      #58                 // Field allocationsNormal:J
      10: aload_0
      11: getfield      #21                 // Field q050:Lio/netty/buffer/PoolChunkList;
      14: aload_1
      15: iload_2
      16: iload_3
      17: invokevirtual #59                 // Method io/netty/buffer/PoolChunkList.allocate:(Lio/netty/buffer/PooledByteBuf;II)Z
      20: ifne          88
      23: aload_0
      24: getfield      #22                 // Field q025:Lio/netty/buffer/PoolChunkList;
      27: aload_1
      28: iload_2
      29: iload_3
      30: invokevirtual #59                 // Method io/netty/buffer/PoolChunkList.allocate:(Lio/netty/buffer/PooledByteBuf;II)Z
      33: ifne          88
      36: aload_0
      37: getfield      #23                 // Field q000:Lio/netty/buffer/PoolChunkList;
      40: aload_1
      41: iload_2
      42: iload_3
      43: invokevirtual #59                 // Method io/netty/buffer/PoolChunkList.allocate:(Lio/netty/buffer/PooledByteBuf;II)Z
      46: ifne          88
      49: aload_0
      50: getfield      #25                 // Field qInit:Lio/netty/buffer/PoolChunkList;
      53: aload_1
      54: iload_2
      55: iload_3
      56: invokevirtual #59                 // Method io/netty/buffer/PoolChunkList.allocate:(Lio/netty/buffer/PooledByteBuf;II)Z
      59: ifne          88
      62: aload_0
      63: getfield      #20                 // Field q075:Lio/netty/buffer/PoolChunkList;
      66: aload_1
      67: iload_2
      68: iload_3
      69: invokevirtual #59                 // Method io/netty/buffer/PoolChunkList.allocate:(Lio/netty/buffer/PooledByteBuf;II)Z
      72: ifne          88
      75: aload_0
      76: getfield      #19                 // Field q100:Lio/netty/buffer/PoolChunkList;
      79: aload_1
      80: iload_2
      81: iload_3
      82: invokevirtual #59                 // Method io/netty/buffer/PoolChunkList.allocate:(Lio/netty/buffer/PooledByteBuf;II)Z
      85: ifeq          89
      88: return
      89: aload_0
      90: aload_0
      91: getfield      #6                  // Field pageSize:I
      94: aload_0
      95: getfield      #7                  // Field maxOrder:I
      98: aload_0
      99: getfield      #8                  // Field pageShifts:I
     102: aload_0
     103: getfield      #9                  // Field chunkSize:I
     106: invokevirtual #60                 // Method newChunk:(IIII)Lio/netty/buffer/PoolChunk;
     109: astore        4
     111: aload         4
     113: iload_3
     114: invokevirtual #61                 // Method io/netty/buffer/PoolChunk.allocate:(I)J
     117: lstore        5
     119: getstatic     #45                 // Field $assertionsDisabled:Z
     122: ifne          140
     125: lload         5
     127: lconst_0
     128: lcmp
     129: ifgt          140
     132: new           #48                 // class java/lang/AssertionError
     135: dup
     136: invokespecial #49                 // Method java/lang/AssertionError."<init>":()V
     139: athrow
     140: aload         4
     142: aload_1
     143: lload         5
     145: iload_2
     146: invokevirtual #62                 // Method io/netty/buffer/PoolChunk.initBuf:(Lio/netty/buffer/PooledByteBuf;JI)V
     149: aload_0
     150: getfield      #25                 // Field qInit:Lio/netty/buffer/PoolChunkList;
     153: aload         4
     155: invokevirtual #63                 // Method io/netty/buffer/PoolChunkList.add:(Lio/netty/buffer/PoolChunk;)V
     158: return

  private void allocateHuge(io.netty.buffer.PooledByteBuf<T>, int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field allocationsHuge:Lio/netty/util/internal/LongCounter;
       4: invokeinterface #64,  1           // InterfaceMethod io/netty/util/internal/LongCounter.increment:()V
       9: aload_1
      10: aload_0
      11: iload_2
      12: invokevirtual #65                 // Method newUnpooledChunk:(I)Lio/netty/buffer/PoolChunk;
      15: iload_2
      16: invokevirtual #66                 // Method io/netty/buffer/PooledByteBuf.initUnpooled:(Lio/netty/buffer/PoolChunk;I)V
      19: return

  void free(io.netty.buffer.PoolChunk<T>, long, int, io.netty.buffer.PoolThreadCache);
    Code:
       0: aload_1
       1: getfield      #67                 // Field io/netty/buffer/PoolChunk.unpooled:Z
       4: ifeq          24
       7: aload_0
       8: getfield      #3                  // Field allocationsHuge:Lio/netty/util/internal/LongCounter;
      11: invokeinterface #68,  1           // InterfaceMethod io/netty/util/internal/LongCounter.decrement:()V
      16: aload_0
      17: aload_1
      18: invokevirtual #69                 // Method destroyChunk:(Lio/netty/buffer/PoolChunk;)V
      21: goto          61
      24: aload_0
      25: iload         4
      27: invokespecial #70                 // Method sizeClass:(I)Lio/netty/buffer/PoolArena$SizeClass;
      30: astore        6
      32: aload         5
      34: ifnull        53
      37: aload         5
      39: aload_0
      40: aload_1
      41: lload_2
      42: iload         4
      44: aload         6
      46: invokevirtual #71                 // Method io/netty/buffer/PoolThreadCache.add:(Lio/netty/buffer/PoolArena;Lio/netty/buffer/PoolChunk;JILio/netty/buffer/PoolArena$SizeClass;)Z
      49: ifeq          53
      52: return
      53: aload_0
      54: aload_1
      55: lload_2
      56: aload         6
      58: invokevirtual #72                 // Method freeChunk:(Lio/netty/buffer/PoolChunk;JLio/netty/buffer/PoolArena$SizeClass;)V
      61: return

  private io.netty.buffer.PoolArena$SizeClass sizeClass(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #39                 // Method isTinyOrSmall:(I)Z
       5: ifne          12
       8: getstatic     #73                 // Field io/netty/buffer/PoolArena$SizeClass.Normal:Lio/netty/buffer/PoolArena$SizeClass;
      11: areturn
      12: iload_1
      13: invokestatic  #40                 // Method isTiny:(I)Z
      16: ifeq          25
      19: getstatic     #74                 // Field io/netty/buffer/PoolArena$SizeClass.Tiny:Lio/netty/buffer/PoolArena$SizeClass;
      22: goto          28
      25: getstatic     #75                 // Field io/netty/buffer/PoolArena$SizeClass.Small:Lio/netty/buffer/PoolArena$SizeClass;
      28: areturn

  void freeChunk(io.netty.buffer.PoolChunk<T>, long, io.netty.buffer.PoolArena$SizeClass);
    Code:
       0: aload_0
       1: dup
       2: astore        6
       4: monitorenter
       5: getstatic     #76                 // Field io/netty/buffer/PoolArena$1.$SwitchMap$io$netty$buffer$PoolArena$SizeClass:[I
       8: aload         4
      10: invokevirtual #77                 // Method io/netty/buffer/PoolArena$SizeClass.ordinal:()I
      13: iaload
      14: tableswitch   { // 1 to 3
                     1: 40
                     2: 53
                     3: 66
               default: 79
          }
      40: aload_0
      41: dup
      42: getfield      #78                 // Field deallocationsNormal:J
      45: lconst_1
      46: ladd
      47: putfield      #78                 // Field deallocationsNormal:J
      50: goto          87
      53: aload_0
      54: dup
      55: getfield      #79                 // Field deallocationsSmall:J
      58: lconst_1
      59: ladd
      60: putfield      #79                 // Field deallocationsSmall:J
      63: goto          87
      66: aload_0
      67: dup
      68: getfield      #80                 // Field deallocationsTiny:J
      71: lconst_1
      72: ladd
      73: putfield      #80                 // Field deallocationsTiny:J
      76: goto          87
      79: new           #81                 // class java/lang/Error
      82: dup
      83: invokespecial #82                 // Method java/lang/Error."<init>":()V
      86: athrow
      87: aload_1
      88: getfield      #83                 // Field io/netty/buffer/PoolChunk.parent:Lio/netty/buffer/PoolChunkList;
      91: aload_1
      92: lload_2
      93: invokevirtual #84                 // Method io/netty/buffer/PoolChunkList.free:(Lio/netty/buffer/PoolChunk;J)Z
      96: ifne          103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: istore        5
     106: aload         6
     108: monitorexit
     109: goto          120
     112: astore        7
     114: aload         6
     116: monitorexit
     117: aload         7
     119: athrow
     120: iload         5
     122: ifeq          130
     125: aload_0
     126: aload_1
     127: invokevirtual #69                 // Method destroyChunk:(Lio/netty/buffer/PoolChunk;)V
     130: return
    Exception table:
       from    to  target type
           5   109   112   any
         112   117   112   any

  io.netty.buffer.PoolSubpage<T> findSubpagePoolHead(int);
    Code:
       0: iload_1
       1: invokestatic  #40                 // Method isTiny:(I)Z
       4: ifeq          19
       7: iload_1
       8: iconst_4
       9: iushr
      10: istore_2
      11: aload_0
      12: getfield      #12                 // Field tinySubpagePools:[Lio/netty/buffer/PoolSubpage;
      15: astore_3
      16: goto          45
      19: iconst_0
      20: istore_2
      21: iload_1
      22: bipush        10
      24: iushr
      25: istore_1
      26: iload_1
      27: ifeq          40
      30: iload_1
      31: iconst_1
      32: iushr
      33: istore_1
      34: iinc          2, 1
      37: goto          26
      40: aload_0
      41: getfield      #15                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
      44: astore_3
      45: aload_3
      46: iload_2
      47: aaload
      48: areturn

  int normalizeCapacity(int);
    Code:
       0: iload_1
       1: ifge          36
       4: new           #85                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #86                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #88                 // String capacity:
      17: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_1
      21: invokevirtual #90                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: ldc           #91                 // String  (expected: 0+)
      26: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #92                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #93                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: iload_1
      37: aload_0
      38: getfield      #9                  // Field chunkSize:I
      41: if_icmplt     46
      44: iload_1
      45: ireturn
      46: iload_1
      47: invokestatic  #40                 // Method isTiny:(I)Z
      50: ifne          103
      53: iload_1
      54: istore_2
      55: iinc          2, -1
      58: iload_2
      59: iload_2
      60: iconst_1
      61: iushr
      62: ior
      63: istore_2
      64: iload_2
      65: iload_2
      66: iconst_2
      67: iushr
      68: ior
      69: istore_2
      70: iload_2
      71: iload_2
      72: iconst_4
      73: iushr
      74: ior
      75: istore_2
      76: iload_2
      77: iload_2
      78: bipush        8
      80: iushr
      81: ior
      82: istore_2
      83: iload_2
      84: iload_2
      85: bipush        16
      87: iushr
      88: ior
      89: istore_2
      90: iinc          2, 1
      93: iload_2
      94: ifge          101
      97: iload_2
      98: iconst_1
      99: iushr
     100: istore_2
     101: iload_2
     102: ireturn
     103: iload_1
     104: bipush        15
     106: iand
     107: ifne          112
     110: iload_1
     111: ireturn
     112: iload_1
     113: bipush        -16
     115: iand
     116: bipush        16
     118: iadd
     119: ireturn

  void reallocate(io.netty.buffer.PooledByteBuf<T>, int, boolean);
    Code:
       0: iload_2
       1: iflt          12
       4: iload_2
       5: aload_1
       6: invokevirtual #94                 // Method io/netty/buffer/PooledByteBuf.maxCapacity:()I
       9: if_icmple     39
      12: new           #85                 // class java/lang/IllegalArgumentException
      15: dup
      16: new           #86                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #95                 // String newCapacity:
      25: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: iload_2
      29: invokevirtual #90                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      32: invokevirtual #92                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #93                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_1
      40: getfield      #96                 // Field io/netty/buffer/PooledByteBuf.length:I
      43: istore        4
      45: iload         4
      47: iload_2
      48: if_icmpne     52
      51: return
      52: aload_1
      53: getfield      #97                 // Field io/netty/buffer/PooledByteBuf.chunk:Lio/netty/buffer/PoolChunk;
      56: astore        5
      58: aload_1
      59: getfield      #98                 // Field io/netty/buffer/PooledByteBuf.handle:J
      62: lstore        6
      64: aload_1
      65: getfield      #99                 // Field io/netty/buffer/PooledByteBuf.memory:Ljava/lang/Object;
      68: astore        8
      70: aload_1
      71: getfield      #100                // Field io/netty/buffer/PooledByteBuf.offset:I
      74: istore        9
      76: aload_1
      77: getfield      #101                // Field io/netty/buffer/PooledByteBuf.maxLength:I
      80: istore        10
      82: aload_1
      83: invokevirtual #102                // Method io/netty/buffer/PooledByteBuf.readerIndex:()I
      86: istore        11
      88: aload_1
      89: invokevirtual #103                // Method io/netty/buffer/PooledByteBuf.writerIndex:()I
      92: istore        12
      94: aload_0
      95: aload_0
      96: getfield      #5                  // Field parent:Lio/netty/buffer/PooledByteBufAllocator;
      99: invokevirtual #104                // Method io/netty/buffer/PooledByteBufAllocator.threadCache:()Lio/netty/buffer/PoolThreadCache;
     102: aload_1
     103: iload_2
     104: invokespecial #37                 // Method allocate:(Lio/netty/buffer/PoolThreadCache;Lio/netty/buffer/PooledByteBuf;I)V
     107: iload_2
     108: iload         4
     110: if_icmple     134
     113: aload_0
     114: aload         8
     116: iload         9
     118: aload_1
     119: getfield      #99                 // Field io/netty/buffer/PooledByteBuf.memory:Ljava/lang/Object;
     122: aload_1
     123: getfield      #100                // Field io/netty/buffer/PooledByteBuf.offset:I
     126: iload         4
     128: invokevirtual #105                // Method memoryCopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     131: goto          191
     134: iload_2
     135: iload         4
     137: if_icmpge     191
     140: iload         11
     142: iload_2
     143: if_icmpge     185
     146: iload         12
     148: iload_2
     149: if_icmple     155
     152: iload_2
     153: istore        12
     155: aload_0
     156: aload         8
     158: iload         9
     160: iload         11
     162: iadd
     163: aload_1
     164: getfield      #99                 // Field io/netty/buffer/PooledByteBuf.memory:Ljava/lang/Object;
     167: aload_1
     168: getfield      #100                // Field io/netty/buffer/PooledByteBuf.offset:I
     171: iload         11
     173: iadd
     174: iload         12
     176: iload         11
     178: isub
     179: invokevirtual #105                // Method memoryCopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     182: goto          191
     185: iload_2
     186: dup
     187: istore        12
     189: istore        11
     191: aload_1
     192: iload         11
     194: iload         12
     196: invokevirtual #106                // Method io/netty/buffer/PooledByteBuf.setIndex:(II)Lio/netty/buffer/ByteBuf;
     199: pop
     200: iload_3
     201: ifeq          218
     204: aload_0
     205: aload         5
     207: lload         6
     209: iload         10
     211: aload_1
     212: getfield      #107                // Field io/netty/buffer/PooledByteBuf.cache:Lio/netty/buffer/PoolThreadCache;
     215: invokevirtual #108                // Method free:(Lio/netty/buffer/PoolChunk;JILio/netty/buffer/PoolThreadCache;)V
     218: return

  public int numTinySubpages();
    Code:
       0: aload_0
       1: getfield      #12                 // Field tinySubpagePools:[Lio/netty/buffer/PoolSubpage;
       4: arraylength
       5: ireturn

  public int numSmallSubpages();
    Code:
       0: aload_0
       1: getfield      #15                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
       4: arraylength
       5: ireturn

  public int numChunkLists();
    Code:
       0: aload_0
       1: getfield      #31                 // Field chunkListMetrics:Ljava/util/List;
       4: invokeinterface #109,  1          // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public java.util.List<io.netty.buffer.PoolSubpageMetric> tinySubpages();
    Code:
       0: aload_0
       1: getfield      #12                 // Field tinySubpagePools:[Lio/netty/buffer/PoolSubpage;
       4: invokestatic  #110                // Method subPageMetricList:([Lio/netty/buffer/PoolSubpage;)Ljava/util/List;
       7: areturn

  public java.util.List<io.netty.buffer.PoolSubpageMetric> smallSubpages();
    Code:
       0: aload_0
       1: getfield      #15                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
       4: invokestatic  #110                // Method subPageMetricList:([Lio/netty/buffer/PoolSubpage;)Ljava/util/List;
       7: areturn

  public java.util.List<io.netty.buffer.PoolChunkListMetric> chunkLists();
    Code:
       0: aload_0
       1: getfield      #31                 // Field chunkListMetrics:Ljava/util/List;
       4: areturn

  private static java.util.List<io.netty.buffer.PoolSubpageMetric> subPageMetricList(io.netty.buffer.PoolSubpage<?>[]);
    Code:
       0: new           #27                 // class java/util/ArrayList
       3: dup
       4: invokespecial #111                // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: iconst_1
       9: istore_2
      10: iload_2
      11: aload_0
      12: arraylength
      13: if_icmpge     68
      16: aload_0
      17: iload_2
      18: aaload
      19: astore_3
      20: aload_3
      21: getfield      #35                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
      24: aload_3
      25: if_acmpne     31
      28: goto          62
      31: aload_3
      32: getfield      #35                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
      35: astore        4
      37: aload_1
      38: aload         4
      40: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      45: pop
      46: aload         4
      48: getfield      #35                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
      51: astore        4
      53: aload         4
      55: aload_3
      56: if_acmpne     37
      59: goto          62
      62: iinc          2, 1
      65: goto          10
      68: aload_1
      69: areturn

  public long numAllocations();
    Code:
       0: aload_0
       1: getfield      #53                 // Field allocationsTiny:J
       4: aload_0
       5: getfield      #54                 // Field allocationsSmall:J
       8: ladd
       9: aload_0
      10: getfield      #58                 // Field allocationsNormal:J
      13: ladd
      14: aload_0
      15: getfield      #3                  // Field allocationsHuge:Lio/netty/util/internal/LongCounter;
      18: invokeinterface #112,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
      23: ladd
      24: lreturn

  public long numTinyAllocations();
    Code:
       0: aload_0
       1: getfield      #53                 // Field allocationsTiny:J
       4: lreturn

  public long numSmallAllocations();
    Code:
       0: aload_0
       1: getfield      #54                 // Field allocationsSmall:J
       4: lreturn

  public long numNormalAllocations();
    Code:
       0: aload_0
       1: getfield      #58                 // Field allocationsNormal:J
       4: lreturn

  public long numDeallocations();
    Code:
       0: aload_0
       1: getfield      #80                 // Field deallocationsTiny:J
       4: aload_0
       5: getfield      #79                 // Field deallocationsSmall:J
       8: ladd
       9: aload_0
      10: getfield      #58                 // Field allocationsNormal:J
      13: ladd
      14: aload_0
      15: getfield      #4                  // Field deallocationsHuge:Lio/netty/util/internal/LongCounter;
      18: invokeinterface #112,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
      23: ladd
      24: lreturn

  public long numTinyDeallocations();
    Code:
       0: aload_0
       1: getfield      #80                 // Field deallocationsTiny:J
       4: lreturn

  public long numSmallDeallocations();
    Code:
       0: aload_0
       1: getfield      #79                 // Field deallocationsSmall:J
       4: lreturn

  public long numNormalDeallocations();
    Code:
       0: aload_0
       1: getfield      #78                 // Field deallocationsNormal:J
       4: lreturn

  public long numHugeAllocations();
    Code:
       0: aload_0
       1: getfield      #3                  // Field allocationsHuge:Lio/netty/util/internal/LongCounter;
       4: invokeinterface #112,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
       9: lreturn

  public long numHugeDeallocations();
    Code:
       0: aload_0
       1: getfield      #4                  // Field deallocationsHuge:Lio/netty/util/internal/LongCounter;
       4: invokeinterface #112,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
       9: lreturn

  public long numActiveAllocations();
    Code:
       0: aload_0
       1: invokevirtual #113                // Method numAllocations:()J
       4: aload_0
       5: invokevirtual #114                // Method numDeallocations:()J
       8: lsub
       9: lstore_1
      10: lload_1
      11: lconst_0
      12: lcmp
      13: iflt          20
      16: lload_1
      17: goto          21
      20: lconst_0
      21: lreturn

  public long numActiveTinyAllocations();
    Code:
       0: aload_0
       1: invokevirtual #115                // Method numTinyAllocations:()J
       4: aload_0
       5: invokevirtual #116                // Method numTinyDeallocations:()J
       8: lsub
       9: lstore_1
      10: lload_1
      11: lconst_0
      12: lcmp
      13: iflt          20
      16: lload_1
      17: goto          21
      20: lconst_0
      21: lreturn

  public long numActiveSmallAllocations();
    Code:
       0: aload_0
       1: invokevirtual #117                // Method numSmallAllocations:()J
       4: aload_0
       5: invokevirtual #118                // Method numSmallDeallocations:()J
       8: lsub
       9: lstore_1
      10: lload_1
      11: lconst_0
      12: lcmp
      13: iflt          20
      16: lload_1
      17: goto          21
      20: lconst_0
      21: lreturn

  public long numActiveNormalAllocations();
    Code:
       0: aload_0
       1: invokevirtual #119                // Method numNormalAllocations:()J
       4: aload_0
       5: invokevirtual #120                // Method numNormalDeallocations:()J
       8: lsub
       9: lstore_1
      10: lload_1
      11: lconst_0
      12: lcmp
      13: iflt          20
      16: lload_1
      17: goto          21
      20: lconst_0
      21: lreturn

  public long numActiveHugeAllocations();
    Code:
       0: aload_0
       1: invokevirtual #121                // Method numHugeAllocations:()J
       4: aload_0
       5: invokevirtual #122                // Method numHugeDeallocations:()J
       8: lsub
       9: lstore_1
      10: lload_1
      11: lconst_0
      12: lcmp
      13: iflt          20
      16: lload_1
      17: goto          21
      20: lconst_0
      21: lreturn

  protected abstract io.netty.buffer.PoolChunk<T> newChunk(int, int, int, int);

  protected abstract io.netty.buffer.PoolChunk<T> newUnpooledChunk(int);

  protected abstract io.netty.buffer.PooledByteBuf<T> newByteBuf(int);

  protected abstract void memoryCopy(T, int, T, int, int);

  protected abstract void destroyChunk(io.netty.buffer.PoolChunk<T>);

  public synchronized java.lang.String toString();
    Code:
       0: new           #86                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #123                // String Chunk(s) at 0~25%:
       9: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: getstatic     #124                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      15: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: aload_0
      19: getfield      #25                 // Field qInit:Lio/netty/buffer/PoolChunkList;
      22: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: getstatic     #124                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      28: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #126                // String Chunk(s) at 0~50%:
      33: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: getstatic     #124                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      39: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_0
      43: getfield      #23                 // Field q000:Lio/netty/buffer/PoolChunkList;
      46: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: getstatic     #124                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      52: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #127                // String Chunk(s) at 25~75%:
      57: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: getstatic     #124                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      63: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_0
      67: getfield      #22                 // Field q025:Lio/netty/buffer/PoolChunkList;
      70: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      73: getstatic     #124                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      76: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: ldc           #128                // String Chunk(s) at 50~100%:
      81: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: getstatic     #124                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      87: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_0
      91: getfield      #21                 // Field q050:Lio/netty/buffer/PoolChunkList;
      94: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      97: getstatic     #124                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     100: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: ldc           #129                // String Chunk(s) at 75~100%:
     105: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: getstatic     #124                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     111: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_0
     115: getfield      #20                 // Field q075:Lio/netty/buffer/PoolChunkList;
     118: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     121: getstatic     #124                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     124: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: ldc           #130                // String Chunk(s) at 100%:
     129: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: getstatic     #124                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     135: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload_0
     139: getfield      #19                 // Field q100:Lio/netty/buffer/PoolChunkList;
     142: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     145: getstatic     #124                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     148: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: ldc           #131                // String tiny subpages:
     153: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: astore_1
     157: iconst_1
     158: istore_2
     159: iload_2
     160: aload_0
     161: getfield      #12                 // Field tinySubpagePools:[Lio/netty/buffer/PoolSubpage;
     164: arraylength
     165: if_icmpge     238
     168: aload_0
     169: getfield      #12                 // Field tinySubpagePools:[Lio/netty/buffer/PoolSubpage;
     172: iload_2
     173: aaload
     174: astore_3
     175: aload_3
     176: getfield      #35                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
     179: aload_3
     180: if_acmpne     186
     183: goto          232
     186: aload_1
     187: getstatic     #124                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     190: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     193: iload_2
     194: invokevirtual #90                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     197: ldc           #132                // String :
     199: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     202: pop
     203: aload_3
     204: getfield      #35                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
     207: astore        4
     209: aload_1
     210: aload         4
     212: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     215: pop
     216: aload         4
     218: getfield      #35                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
     221: astore        4
     223: aload         4
     225: aload_3
     226: if_acmpne     209
     229: goto          232
     232: iinc          2, 1
     235: goto          159
     238: aload_1
     239: getstatic     #124                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     242: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     245: ldc           #133                // String small subpages:
     247: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     250: pop
     251: iconst_1
     252: istore_2
     253: iload_2
     254: aload_0
     255: getfield      #15                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
     258: arraylength
     259: if_icmpge     332
     262: aload_0
     263: getfield      #15                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
     266: iload_2
     267: aaload
     268: astore_3
     269: aload_3
     270: getfield      #35                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
     273: aload_3
     274: if_acmpne     280
     277: goto          326
     280: aload_1
     281: getstatic     #124                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     284: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     287: iload_2
     288: invokevirtual #90                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     291: ldc           #132                // String :
     293: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     296: pop
     297: aload_3
     298: getfield      #35                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
     301: astore        4
     303: aload_1
     304: aload         4
     306: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     309: pop
     310: aload         4
     312: getfield      #35                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
     315: astore        4
     317: aload         4
     319: aload_3
     320: if_acmpne     303
     323: goto          326
     326: iinc          2, 1
     329: goto          253
     332: aload_1
     333: getstatic     #124                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     336: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     339: pop
     340: aload_1
     341: invokevirtual #92                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     344: areturn

  static {};
    Code:
       0: ldc_w         #134                // class io/netty/buffer/PoolArena
       3: invokevirtual #135                // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #45                 // Field $assertionsDisabled:Z
      17: return
}
