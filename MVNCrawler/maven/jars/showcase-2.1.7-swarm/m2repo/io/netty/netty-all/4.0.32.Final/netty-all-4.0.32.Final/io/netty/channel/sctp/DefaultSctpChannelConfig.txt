Compiled from "DefaultSctpChannelConfig.java"
public class io.netty.channel.sctp.DefaultSctpChannelConfig extends io.netty.channel.DefaultChannelConfig implements io.netty.channel.sctp.SctpChannelConfig {
  private final com.sun.nio.sctp.SctpChannel javaChannel;

  public io.netty.channel.sctp.DefaultSctpChannelConfig(io.netty.channel.sctp.SctpChannel, com.sun.nio.sctp.SctpChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/netty/channel/DefaultChannelConfig."<init>":(Lio/netty/channel/Channel;)V
       5: aload_2
       6: ifnonnull     19
       9: new           #2                  // class java/lang/NullPointerException
      12: dup
      13: ldc           #3                  // String javaChannel
      15: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field javaChannel:Lcom/sun/nio/sctp/SctpChannel;
      24: invokestatic  #6                  // Method io/netty/util/internal/PlatformDependent.canEnableTcpNoDelayByDefault:()Z
      27: ifeq          40
      30: aload_0
      31: iconst_1
      32: invokevirtual #7                  // Method setSctpNoDelay:(Z)Lio/netty/channel/sctp/SctpChannelConfig;
      35: pop
      36: goto          40
      39: astore_3
      40: return
    Exception table:
       from    to  target type
          30    36    39   Class java/lang/Exception

  public java.util.Map<io.netty.channel.ChannelOption<?>, java.lang.Object> getOptions();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #9                  // Method io/netty/channel/DefaultChannelConfig.getOptions:()Ljava/util/Map;
       5: iconst_4
       6: anewarray     #10                 // class io/netty/channel/ChannelOption
       9: dup
      10: iconst_0
      11: getstatic     #11                 // Field io/netty/channel/sctp/SctpChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
      14: aastore
      15: dup
      16: iconst_1
      17: getstatic     #12                 // Field io/netty/channel/sctp/SctpChannelOption.SO_SNDBUF:Lio/netty/channel/ChannelOption;
      20: aastore
      21: dup
      22: iconst_2
      23: getstatic     #13                 // Field io/netty/channel/sctp/SctpChannelOption.SCTP_NODELAY:Lio/netty/channel/sctp/SctpChannelOption;
      26: aastore
      27: dup
      28: iconst_3
      29: getstatic     #14                 // Field io/netty/channel/sctp/SctpChannelOption.SCTP_INIT_MAXSTREAMS:Lio/netty/channel/sctp/SctpChannelOption;
      32: aastore
      33: invokevirtual #15                 // Method getOptions:(Ljava/util/Map;[Lio/netty/channel/ChannelOption;)Ljava/util/Map;
      36: areturn

  public <T> T getOption(io.netty.channel.ChannelOption<T>);
    Code:
       0: aload_1
       1: getstatic     #11                 // Field io/netty/channel/sctp/SctpChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
       4: if_acmpne     15
       7: aload_0
       8: invokevirtual #16                 // Method getReceiveBufferSize:()I
      11: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: areturn
      15: aload_1
      16: getstatic     #12                 // Field io/netty/channel/sctp/SctpChannelOption.SO_SNDBUF:Lio/netty/channel/ChannelOption;
      19: if_acmpne     30
      22: aload_0
      23: invokevirtual #18                 // Method getSendBufferSize:()I
      26: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: areturn
      30: aload_1
      31: getstatic     #13                 // Field io/netty/channel/sctp/SctpChannelOption.SCTP_NODELAY:Lio/netty/channel/sctp/SctpChannelOption;
      34: if_acmpne     45
      37: aload_0
      38: invokevirtual #19                 // Method isSctpNoDelay:()Z
      41: invokestatic  #20                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      44: areturn
      45: aload_0
      46: aload_1
      47: invokespecial #21                 // Method io/netty/channel/DefaultChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
      50: areturn

  public <T> boolean setOption(io.netty.channel.ChannelOption<T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #22                 // Method validate:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)V
       6: aload_1
       7: getstatic     #11                 // Field io/netty/channel/sctp/SctpChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
      10: if_acmpne     28
      13: aload_0
      14: aload_2
      15: checkcast     #23                 // class java/lang/Integer
      18: invokevirtual #24                 // Method java/lang/Integer.intValue:()I
      21: invokevirtual #25                 // Method setReceiveBufferSize:(I)Lio/netty/channel/sctp/SctpChannelConfig;
      24: pop
      25: goto          98
      28: aload_1
      29: getstatic     #12                 // Field io/netty/channel/sctp/SctpChannelOption.SO_SNDBUF:Lio/netty/channel/ChannelOption;
      32: if_acmpne     50
      35: aload_0
      36: aload_2
      37: checkcast     #23                 // class java/lang/Integer
      40: invokevirtual #24                 // Method java/lang/Integer.intValue:()I
      43: invokevirtual #26                 // Method setSendBufferSize:(I)Lio/netty/channel/sctp/SctpChannelConfig;
      46: pop
      47: goto          98
      50: aload_1
      51: getstatic     #13                 // Field io/netty/channel/sctp/SctpChannelOption.SCTP_NODELAY:Lio/netty/channel/sctp/SctpChannelOption;
      54: if_acmpne     72
      57: aload_0
      58: aload_2
      59: checkcast     #27                 // class java/lang/Boolean
      62: invokevirtual #28                 // Method java/lang/Boolean.booleanValue:()Z
      65: invokevirtual #7                  // Method setSctpNoDelay:(Z)Lio/netty/channel/sctp/SctpChannelConfig;
      68: pop
      69: goto          98
      72: aload_1
      73: getstatic     #14                 // Field io/netty/channel/sctp/SctpChannelOption.SCTP_INIT_MAXSTREAMS:Lio/netty/channel/sctp/SctpChannelOption;
      76: if_acmpne     91
      79: aload_0
      80: aload_2
      81: checkcast     #29                 // class com/sun/nio/sctp/SctpStandardSocketOptions$InitMaxStreams
      84: invokevirtual #30                 // Method setInitMaxStreams:(Lcom/sun/nio/sctp/SctpStandardSocketOptions$InitMaxStreams;)Lio/netty/channel/sctp/SctpChannelConfig;
      87: pop
      88: goto          98
      91: aload_0
      92: aload_1
      93: aload_2
      94: invokespecial #31                 // Method io/netty/channel/DefaultChannelConfig.setOption:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Z
      97: ireturn
      98: iconst_1
      99: ireturn

  public boolean isSctpNoDelay();
    Code:
       0: aload_0
       1: getfield      #5                  // Field javaChannel:Lcom/sun/nio/sctp/SctpChannel;
       4: getstatic     #32                 // Field com/sun/nio/sctp/SctpStandardSocketOptions.SCTP_NODELAY:Lcom/sun/nio/sctp/SctpSocketOption;
       7: invokevirtual #33                 // Method com/sun/nio/sctp/SctpChannel.getOption:(Lcom/sun/nio/sctp/SctpSocketOption;)Ljava/lang/Object;
      10: checkcast     #27                 // class java/lang/Boolean
      13: invokevirtual #28                 // Method java/lang/Boolean.booleanValue:()Z
      16: ireturn
      17: astore_1
      18: new           #35                 // class io/netty/channel/ChannelException
      21: dup
      22: aload_1
      23: invokespecial #36                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      26: athrow
    Exception table:
       from    to  target type
           0    16    17   Class java/io/IOException

  public io.netty.channel.sctp.SctpChannelConfig setSctpNoDelay(boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field javaChannel:Lcom/sun/nio/sctp/SctpChannel;
       4: getstatic     #32                 // Field com/sun/nio/sctp/SctpStandardSocketOptions.SCTP_NODELAY:Lcom/sun/nio/sctp/SctpSocketOption;
       7: iload_1
       8: invokestatic  #20                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      11: invokevirtual #37                 // Method com/sun/nio/sctp/SctpChannel.setOption:(Lcom/sun/nio/sctp/SctpSocketOption;Ljava/lang/Object;)Lcom/sun/nio/sctp/SctpChannel;
      14: pop
      15: goto          28
      18: astore_2
      19: new           #35                 // class io/netty/channel/ChannelException
      22: dup
      23: aload_2
      24: invokespecial #36                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      27: athrow
      28: aload_0
      29: areturn
    Exception table:
       from    to  target type
           0    15    18   Class java/io/IOException

  public int getSendBufferSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field javaChannel:Lcom/sun/nio/sctp/SctpChannel;
       4: getstatic     #38                 // Field com/sun/nio/sctp/SctpStandardSocketOptions.SO_SNDBUF:Lcom/sun/nio/sctp/SctpSocketOption;
       7: invokevirtual #33                 // Method com/sun/nio/sctp/SctpChannel.getOption:(Lcom/sun/nio/sctp/SctpSocketOption;)Ljava/lang/Object;
      10: checkcast     #23                 // class java/lang/Integer
      13: invokevirtual #24                 // Method java/lang/Integer.intValue:()I
      16: ireturn
      17: astore_1
      18: new           #35                 // class io/netty/channel/ChannelException
      21: dup
      22: aload_1
      23: invokespecial #36                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      26: athrow
    Exception table:
       from    to  target type
           0    16    17   Class java/io/IOException

  public io.netty.channel.sctp.SctpChannelConfig setSendBufferSize(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field javaChannel:Lcom/sun/nio/sctp/SctpChannel;
       4: getstatic     #38                 // Field com/sun/nio/sctp/SctpStandardSocketOptions.SO_SNDBUF:Lcom/sun/nio/sctp/SctpSocketOption;
       7: iload_1
       8: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: invokevirtual #37                 // Method com/sun/nio/sctp/SctpChannel.setOption:(Lcom/sun/nio/sctp/SctpSocketOption;Ljava/lang/Object;)Lcom/sun/nio/sctp/SctpChannel;
      14: pop
      15: goto          28
      18: astore_2
      19: new           #35                 // class io/netty/channel/ChannelException
      22: dup
      23: aload_2
      24: invokespecial #36                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      27: athrow
      28: aload_0
      29: areturn
    Exception table:
       from    to  target type
           0    15    18   Class java/io/IOException

  public int getReceiveBufferSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field javaChannel:Lcom/sun/nio/sctp/SctpChannel;
       4: getstatic     #39                 // Field com/sun/nio/sctp/SctpStandardSocketOptions.SO_RCVBUF:Lcom/sun/nio/sctp/SctpSocketOption;
       7: invokevirtual #33                 // Method com/sun/nio/sctp/SctpChannel.getOption:(Lcom/sun/nio/sctp/SctpSocketOption;)Ljava/lang/Object;
      10: checkcast     #23                 // class java/lang/Integer
      13: invokevirtual #24                 // Method java/lang/Integer.intValue:()I
      16: ireturn
      17: astore_1
      18: new           #35                 // class io/netty/channel/ChannelException
      21: dup
      22: aload_1
      23: invokespecial #36                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      26: athrow
    Exception table:
       from    to  target type
           0    16    17   Class java/io/IOException

  public io.netty.channel.sctp.SctpChannelConfig setReceiveBufferSize(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field javaChannel:Lcom/sun/nio/sctp/SctpChannel;
       4: getstatic     #39                 // Field com/sun/nio/sctp/SctpStandardSocketOptions.SO_RCVBUF:Lcom/sun/nio/sctp/SctpSocketOption;
       7: iload_1
       8: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: invokevirtual #37                 // Method com/sun/nio/sctp/SctpChannel.setOption:(Lcom/sun/nio/sctp/SctpSocketOption;Ljava/lang/Object;)Lcom/sun/nio/sctp/SctpChannel;
      14: pop
      15: goto          28
      18: astore_2
      19: new           #35                 // class io/netty/channel/ChannelException
      22: dup
      23: aload_2
      24: invokespecial #36                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      27: athrow
      28: aload_0
      29: areturn
    Exception table:
       from    to  target type
           0    15    18   Class java/io/IOException

  public com.sun.nio.sctp.SctpStandardSocketOptions$InitMaxStreams getInitMaxStreams();
    Code:
       0: aload_0
       1: getfield      #5                  // Field javaChannel:Lcom/sun/nio/sctp/SctpChannel;
       4: getstatic     #40                 // Field com/sun/nio/sctp/SctpStandardSocketOptions.SCTP_INIT_MAXSTREAMS:Lcom/sun/nio/sctp/SctpSocketOption;
       7: invokevirtual #33                 // Method com/sun/nio/sctp/SctpChannel.getOption:(Lcom/sun/nio/sctp/SctpSocketOption;)Ljava/lang/Object;
      10: checkcast     #29                 // class com/sun/nio/sctp/SctpStandardSocketOptions$InitMaxStreams
      13: areturn
      14: astore_1
      15: new           #35                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #36                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public io.netty.channel.sctp.SctpChannelConfig setInitMaxStreams(com.sun.nio.sctp.SctpStandardSocketOptions$InitMaxStreams);
    Code:
       0: aload_0
       1: getfield      #5                  // Field javaChannel:Lcom/sun/nio/sctp/SctpChannel;
       4: getstatic     #40                 // Field com/sun/nio/sctp/SctpStandardSocketOptions.SCTP_INIT_MAXSTREAMS:Lcom/sun/nio/sctp/SctpSocketOption;
       7: aload_1
       8: invokevirtual #37                 // Method com/sun/nio/sctp/SctpChannel.setOption:(Lcom/sun/nio/sctp/SctpSocketOption;Ljava/lang/Object;)Lcom/sun/nio/sctp/SctpChannel;
      11: pop
      12: goto          25
      15: astore_2
      16: new           #35                 // class io/netty/channel/ChannelException
      19: dup
      20: aload_2
      21: invokespecial #36                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      24: athrow
      25: aload_0
      26: areturn
    Exception table:
       from    to  target type
           0    12    15   Class java/io/IOException

  public io.netty.channel.sctp.SctpChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #41                 // Method io/netty/channel/DefaultChannelConfig.setConnectTimeoutMillis:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.sctp.SctpChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #42                 // Method io/netty/channel/DefaultChannelConfig.setMaxMessagesPerRead:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.sctp.SctpChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #43                 // Method io/netty/channel/DefaultChannelConfig.setWriteSpinCount:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.sctp.SctpChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #44                 // Method io/netty/channel/DefaultChannelConfig.setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.sctp.SctpChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #45                 // Method io/netty/channel/DefaultChannelConfig.setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.sctp.SctpChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #46                 // Method io/netty/channel/DefaultChannelConfig.setAutoRead:(Z)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.sctp.SctpChannelConfig setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #47                 // Method io/netty/channel/DefaultChannelConfig.setAutoClose:(Z)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.sctp.SctpChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #48                 // Method io/netty/channel/DefaultChannelConfig.setWriteBufferHighWaterMark:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.sctp.SctpChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #49                 // Method io/netty/channel/DefaultChannelConfig.setWriteBufferLowWaterMark:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.sctp.SctpChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #50                 // Method io/netty/channel/DefaultChannelConfig.setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #51                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/sctp/SctpChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #52                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/sctp/SctpChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #53                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/sctp/SctpChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #54                 // Method setAutoClose:(Z)Lio/netty/channel/sctp/SctpChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #55                 // Method setAutoRead:(Z)Lio/netty/channel/sctp/SctpChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/sctp/SctpChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #57                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/sctp/SctpChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #58                 // Method setWriteSpinCount:(I)Lio/netty/channel/sctp/SctpChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #59                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/sctp/SctpChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #60                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/sctp/SctpChannelConfig;
       5: areturn
}
