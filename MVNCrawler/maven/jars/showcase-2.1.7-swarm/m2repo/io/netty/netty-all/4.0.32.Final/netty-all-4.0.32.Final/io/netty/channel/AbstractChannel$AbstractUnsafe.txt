Compiled from "AbstractChannel.java"
public abstract class io.netty.channel.AbstractChannel$AbstractUnsafe implements io.netty.channel.Channel$Unsafe {
  private io.netty.channel.ChannelOutboundBuffer outboundBuffer;

  private boolean inFlush0;

  private boolean neverRegistered;

  final io.netty.channel.AbstractChannel this$0;

  protected io.netty.channel.AbstractChannel$AbstractUnsafe(io.netty.channel.AbstractChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
       5: aload_0
       6: invokespecial #6                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #7                  // class io/netty/channel/ChannelOutboundBuffer
      13: dup
      14: aload_0
      15: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      18: invokespecial #8                  // Method io/netty/channel/ChannelOutboundBuffer."<init>":(Lio/netty/channel/AbstractChannel;)V
      21: putfield      #9                  // Field outboundBuffer:Lio/netty/channel/ChannelOutboundBuffer;
      24: aload_0
      25: iconst_1
      26: putfield      #10                 // Field neverRegistered:Z
      29: return

  public final io.netty.channel.ChannelOutboundBuffer outboundBuffer();
    Code:
       0: aload_0
       1: getfield      #9                  // Field outboundBuffer:Lio/netty/channel/ChannelOutboundBuffer;
       4: areturn

  public final java.net.SocketAddress localAddress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
       4: invokevirtual #11                 // Method io/netty/channel/AbstractChannel.localAddress0:()Ljava/net/SocketAddress;
       7: areturn

  public final java.net.SocketAddress remoteAddress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
       4: invokevirtual #12                 // Method io/netty/channel/AbstractChannel.remoteAddress0:()Ljava/net/SocketAddress;
       7: areturn

  public final void register(io.netty.channel.EventLoop, io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #13                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #14                 // String eventLoop
      10: invokespecial #15                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      18: invokevirtual #16                 // Method io/netty/channel/AbstractChannel.isRegistered:()Z
      21: ifeq          41
      24: aload_2
      25: new           #17                 // class java/lang/IllegalStateException
      28: dup
      29: ldc           #18                 // String registered to an event loop already
      31: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      34: invokeinterface #20,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      39: pop
      40: return
      41: aload_0
      42: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      45: aload_1
      46: invokevirtual #21                 // Method io/netty/channel/AbstractChannel.isCompatible:(Lio/netty/channel/EventLoop;)Z
      49: ifne          92
      52: aload_2
      53: new           #17                 // class java/lang/IllegalStateException
      56: dup
      57: new           #22                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #24                 // String incompatible event loop type:
      66: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_1
      70: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      73: invokevirtual #27                 // Method java/lang/Class.getName:()Ljava/lang/String;
      76: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      85: invokeinterface #20,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      90: pop
      91: return
      92: aload_0
      93: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      96: aload_1
      97: invokestatic  #29                 // Method io/netty/channel/AbstractChannel.access$002:(Lio/netty/channel/AbstractChannel;Lio/netty/channel/EventLoop;)Lio/netty/channel/EventLoop;
     100: pop
     101: aload_1
     102: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
     107: ifeq          118
     110: aload_0
     111: aload_2
     112: invokespecial #4                  // Method register0:(Lio/netty/channel/ChannelPromise;)V
     115: goto          173
     118: aload_1
     119: new           #31                 // class io/netty/channel/AbstractChannel$AbstractUnsafe$1
     122: dup
     123: aload_0
     124: aload_2
     125: invokespecial #32                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe$1."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;Lio/netty/channel/ChannelPromise;)V
     128: invokeinterface #33,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
     133: goto          173
     136: astore_3
     137: invokestatic  #35                 // Method io/netty/channel/AbstractChannel.access$200:()Lio/netty/util/internal/logging/InternalLogger;
     140: ldc           #36                 // String Force-closing a channel whose registration task was not accepted by an event loop: {}
     142: aload_0
     143: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
     146: aload_3
     147: invokeinterface #37,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     152: aload_0
     153: invokevirtual #38                 // Method closeForcibly:()V
     156: aload_0
     157: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
     160: invokestatic  #39                 // Method io/netty/channel/AbstractChannel.access$300:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/AbstractChannel$CloseFuture;
     163: invokevirtual #40                 // Method io/netty/channel/AbstractChannel$CloseFuture.setClosed:()Z
     166: pop
     167: aload_0
     168: aload_2
     169: aload_3
     170: invokevirtual #41                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
     173: return
    Exception table:
       from    to  target type
         118   133   136   Class java/lang/Throwable

  private void register0(io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: invokeinterface #42,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifeq          17
       9: aload_0
      10: aload_1
      11: invokevirtual #43                 // Method ensureOpen:(Lio/netty/channel/ChannelPromise;)Z
      14: ifne          18
      17: return
      18: aload_0
      19: getfield      #10                 // Field neverRegistered:Z
      22: istore_2
      23: aload_0
      24: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      27: invokevirtual #44                 // Method io/netty/channel/AbstractChannel.doRegister:()V
      30: aload_0
      31: iconst_0
      32: putfield      #10                 // Field neverRegistered:Z
      35: aload_0
      36: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      39: iconst_1
      40: invokestatic  #45                 // Method io/netty/channel/AbstractChannel.access$402:(Lio/netty/channel/AbstractChannel;Z)Z
      43: pop
      44: aload_0
      45: aload_1
      46: invokevirtual #46                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
      49: aload_0
      50: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      53: invokestatic  #47                 // Method io/netty/channel/AbstractChannel.access$500:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/DefaultChannelPipeline;
      56: invokevirtual #48                 // Method io/netty/channel/DefaultChannelPipeline.fireChannelRegistered:()Lio/netty/channel/ChannelPipeline;
      59: pop
      60: iload_2
      61: ifeq          85
      64: aload_0
      65: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      68: invokevirtual #49                 // Method io/netty/channel/AbstractChannel.isActive:()Z
      71: ifeq          85
      74: aload_0
      75: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      78: invokestatic  #47                 // Method io/netty/channel/AbstractChannel.access$500:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/DefaultChannelPipeline;
      81: invokevirtual #50                 // Method io/netty/channel/DefaultChannelPipeline.fireChannelActive:()Lio/netty/channel/ChannelPipeline;
      84: pop
      85: goto          110
      88: astore_2
      89: aload_0
      90: invokevirtual #38                 // Method closeForcibly:()V
      93: aload_0
      94: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      97: invokestatic  #39                 // Method io/netty/channel/AbstractChannel.access$300:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/AbstractChannel$CloseFuture;
     100: invokevirtual #40                 // Method io/netty/channel/AbstractChannel$CloseFuture.setClosed:()Z
     103: pop
     104: aload_0
     105: aload_1
     106: aload_2
     107: invokevirtual #41                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
     110: return
    Exception table:
       from    to  target type
           0    17    88   Class java/lang/Throwable
          18    85    88   Class java/lang/Throwable

  public final void bind(java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_2
       1: invokeinterface #42,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifeq          17
       9: aload_0
      10: aload_2
      11: invokevirtual #43                 // Method ensureOpen:(Lio/netty/channel/ChannelPromise;)Z
      14: ifne          18
      17: return
      18: getstatic     #51                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      21: aload_0
      22: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      25: invokevirtual #52                 // Method io/netty/channel/AbstractChannel.config:()Lio/netty/channel/ChannelConfig;
      28: getstatic     #53                 // Field io/netty/channel/ChannelOption.SO_BROADCAST:Lio/netty/channel/ChannelOption;
      31: invokeinterface #54,  2           // InterfaceMethod io/netty/channel/ChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
      36: invokevirtual #55                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      39: ifeq          106
      42: aload_1
      43: instanceof    #56                 // class java/net/InetSocketAddress
      46: ifeq          106
      49: aload_1
      50: checkcast     #56                 // class java/net/InetSocketAddress
      53: invokevirtual #57                 // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
      56: invokevirtual #58                 // Method java/net/InetAddress.isAnyLocalAddress:()Z
      59: ifne          106
      62: invokestatic  #59                 // Method io/netty/util/internal/PlatformDependent.isWindows:()Z
      65: ifne          106
      68: invokestatic  #60                 // Method io/netty/util/internal/PlatformDependent.isRoot:()Z
      71: ifne          106
      74: invokestatic  #35                 // Method io/netty/channel/AbstractChannel.access$200:()Lio/netty/util/internal/logging/InternalLogger;
      77: new           #22                 // class java/lang/StringBuilder
      80: dup
      81: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      84: ldc           #61                 // String A non-root user can\'t receive a broadcast packet if the socket is not bound to a wildcard address; binding to a non-wildcard address (
      86: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_1
      90: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      93: ldc           #63                 // String ) anyway as requested.
      95: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokeinterface #64,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;)V
     106: aload_0
     107: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
     110: invokevirtual #49                 // Method io/netty/channel/AbstractChannel.isActive:()Z
     113: istore_3
     114: aload_0
     115: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
     118: aload_1
     119: invokevirtual #65                 // Method io/netty/channel/AbstractChannel.doBind:(Ljava/net/SocketAddress;)V
     122: goto          139
     125: astore        4
     127: aload_0
     128: aload_2
     129: aload         4
     131: invokevirtual #41                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
     134: aload_0
     135: invokevirtual #66                 // Method closeIfClosed:()V
     138: return
     139: iload_3
     140: ifne          165
     143: aload_0
     144: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
     147: invokevirtual #49                 // Method io/netty/channel/AbstractChannel.isActive:()Z
     150: ifeq          165
     153: aload_0
     154: new           #67                 // class io/netty/channel/AbstractChannel$AbstractUnsafe$2
     157: dup
     158: aload_0
     159: invokespecial #68                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe$2."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;)V
     162: invokespecial #1                  // Method invokeLater:(Ljava/lang/Runnable;)V
     165: aload_0
     166: aload_2
     167: invokevirtual #46                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
     170: return
    Exception table:
       from    to  target type
         114   122   125   Class java/lang/Throwable

  public final void disconnect(io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: invokeinterface #42,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifne          10
       9: return
      10: aload_0
      11: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      14: invokevirtual #49                 // Method io/netty/channel/AbstractChannel.isActive:()Z
      17: istore_2
      18: aload_0
      19: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      22: invokevirtual #69                 // Method io/netty/channel/AbstractChannel.doDisconnect:()V
      25: goto          40
      28: astore_3
      29: aload_0
      30: aload_1
      31: aload_3
      32: invokevirtual #41                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      35: aload_0
      36: invokevirtual #66                 // Method closeIfClosed:()V
      39: return
      40: iload_2
      41: ifeq          66
      44: aload_0
      45: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      48: invokevirtual #49                 // Method io/netty/channel/AbstractChannel.isActive:()Z
      51: ifne          66
      54: aload_0
      55: new           #70                 // class io/netty/channel/AbstractChannel$AbstractUnsafe$3
      58: dup
      59: aload_0
      60: invokespecial #71                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe$3."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;)V
      63: invokespecial #1                  // Method invokeLater:(Ljava/lang/Runnable;)V
      66: aload_0
      67: aload_1
      68: invokevirtual #46                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
      71: aload_0
      72: invokevirtual #66                 // Method closeIfClosed:()V
      75: return
    Exception table:
       from    to  target type
          18    25    28   Class java/lang/Throwable

  public final void close(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #72                 // Field io/netty/channel/AbstractChannel.CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
       5: iconst_0
       6: invokespecial #73                 // Method close:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;Z)V
       9: return

  private void close(io.netty.channel.ChannelPromise, java.lang.Throwable, boolean);
    Code:
       0: aload_1
       1: invokeinterface #42,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifne          10
       9: return
      10: aload_0
      11: getfield      #9                  // Field outboundBuffer:Lio/netty/channel/ChannelOutboundBuffer;
      14: astore        4
      16: aload         4
      18: ifnonnull     49
      21: aload_1
      22: instanceof    #74                 // class io/netty/channel/VoidChannelPromise
      25: ifne          48
      28: aload_0
      29: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      32: invokestatic  #39                 // Method io/netty/channel/AbstractChannel.access$300:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/AbstractChannel$CloseFuture;
      35: new           #75                 // class io/netty/channel/AbstractChannel$AbstractUnsafe$4
      38: dup
      39: aload_0
      40: aload_1
      41: invokespecial #76                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe$4."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;Lio/netty/channel/ChannelPromise;)V
      44: invokevirtual #77                 // Method io/netty/channel/AbstractChannel$CloseFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelPromise;
      47: pop
      48: return
      49: aload_0
      50: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      53: invokestatic  #39                 // Method io/netty/channel/AbstractChannel.access$300:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/AbstractChannel$CloseFuture;
      56: invokevirtual #78                 // Method io/netty/channel/AbstractChannel$CloseFuture.isDone:()Z
      59: ifeq          68
      62: aload_0
      63: aload_1
      64: invokevirtual #46                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
      67: return
      68: aload_0
      69: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      72: invokevirtual #49                 // Method io/netty/channel/AbstractChannel.isActive:()Z
      75: istore        5
      77: aload_0
      78: aconst_null
      79: putfield      #9                  // Field outboundBuffer:Lio/netty/channel/ChannelOutboundBuffer;
      82: aload_0
      83: invokevirtual #79                 // Method closeExecutor:()Ljava/util/concurrent/Executor;
      86: astore        6
      88: aload         6
      90: ifnull        118
      93: aload         6
      95: new           #80                 // class io/netty/channel/AbstractChannel$AbstractUnsafe$5
      98: dup
      99: aload_0
     100: aload_1
     101: aload         4
     103: aload_2
     104: iload_3
     105: iload         5
     107: invokespecial #81                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe$5."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;Lio/netty/channel/ChannelPromise;Lio/netty/channel/ChannelOutboundBuffer;Ljava/lang/Throwable;ZZ)V
     110: invokeinterface #82,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     115: goto          191
     118: aload_0
     119: aload_1
     120: invokespecial #3                  // Method doClose0:(Lio/netty/channel/ChannelPromise;)V
     123: aload         4
     125: aload_2
     126: iload_3
     127: invokevirtual #83                 // Method io/netty/channel/ChannelOutboundBuffer.failFlushed:(Ljava/lang/Throwable;Z)V
     130: aload         4
     132: getstatic     #72                 // Field io/netty/channel/AbstractChannel.CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
     135: invokevirtual #84                 // Method io/netty/channel/ChannelOutboundBuffer.close:(Ljava/nio/channels/ClosedChannelException;)V
     138: goto          161
     141: astore        7
     143: aload         4
     145: aload_2
     146: iload_3
     147: invokevirtual #83                 // Method io/netty/channel/ChannelOutboundBuffer.failFlushed:(Ljava/lang/Throwable;Z)V
     150: aload         4
     152: getstatic     #72                 // Field io/netty/channel/AbstractChannel.CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
     155: invokevirtual #84                 // Method io/netty/channel/ChannelOutboundBuffer.close:(Ljava/nio/channels/ClosedChannelException;)V
     158: aload         7
     160: athrow
     161: aload_0
     162: getfield      #85                 // Field inFlush0:Z
     165: ifeq          185
     168: aload_0
     169: new           #86                 // class io/netty/channel/AbstractChannel$AbstractUnsafe$6
     172: dup
     173: aload_0
     174: iload         5
     176: invokespecial #87                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe$6."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;Z)V
     179: invokespecial #1                  // Method invokeLater:(Ljava/lang/Runnable;)V
     182: goto          191
     185: aload_0
     186: iload         5
     188: invokespecial #2                  // Method fireChannelInactiveAndDeregister:(Z)V
     191: return
    Exception table:
       from    to  target type
         118   123   141   any
         141   143   141   any

  private void doClose0(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
       4: invokevirtual #88                 // Method io/netty/channel/AbstractChannel.doClose:()V
       7: aload_0
       8: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      11: invokestatic  #39                 // Method io/netty/channel/AbstractChannel.access$300:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/AbstractChannel$CloseFuture;
      14: invokevirtual #40                 // Method io/netty/channel/AbstractChannel$CloseFuture.setClosed:()Z
      17: pop
      18: aload_0
      19: aload_1
      20: invokevirtual #46                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
      23: goto          44
      26: astore_2
      27: aload_0
      28: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      31: invokestatic  #39                 // Method io/netty/channel/AbstractChannel.access$300:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/AbstractChannel$CloseFuture;
      34: invokevirtual #40                 // Method io/netty/channel/AbstractChannel$CloseFuture.setClosed:()Z
      37: pop
      38: aload_0
      39: aload_1
      40: aload_2
      41: invokevirtual #41                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      44: return
    Exception table:
       from    to  target type
           0    23    26   Class java/lang/Throwable

  private void fireChannelInactiveAndDeregister(boolean);
    Code:
       0: iload_1
       1: ifeq          26
       4: aload_0
       5: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
       8: invokevirtual #49                 // Method io/netty/channel/AbstractChannel.isActive:()Z
      11: ifne          26
      14: aload_0
      15: new           #89                 // class io/netty/channel/AbstractChannel$AbstractUnsafe$7
      18: dup
      19: aload_0
      20: invokespecial #90                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe$7."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;)V
      23: invokespecial #1                  // Method invokeLater:(Ljava/lang/Runnable;)V
      26: aload_0
      27: aload_0
      28: invokevirtual #91                 // Method voidPromise:()Lio/netty/channel/ChannelPromise;
      31: invokevirtual #92                 // Method deregister:(Lio/netty/channel/ChannelPromise;)V
      34: return

  public final void closeForcibly();
    Code:
       0: aload_0
       1: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
       4: invokevirtual #88                 // Method io/netty/channel/AbstractChannel.doClose:()V
       7: goto          22
      10: astore_1
      11: invokestatic  #35                 // Method io/netty/channel/AbstractChannel.access$200:()Lio/netty/util/internal/logging/InternalLogger;
      14: ldc           #94                 // String Failed to close a channel.
      16: aload_1
      17: invokeinterface #95,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      22: return
    Exception table:
       from    to  target type
           0     7    10   Class java/lang/Exception

  public final void deregister(io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: invokeinterface #42,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifne          10
       9: return
      10: aload_0
      11: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      14: invokestatic  #96                 // Method io/netty/channel/AbstractChannel.access$400:(Lio/netty/channel/AbstractChannel;)Z
      17: ifne          26
      20: aload_0
      21: aload_1
      22: invokevirtual #46                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
      25: return
      26: aload_0
      27: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      30: invokevirtual #97                 // Method io/netty/channel/AbstractChannel.doDeregister:()V
      33: aload_0
      34: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      37: invokestatic  #96                 // Method io/netty/channel/AbstractChannel.access$400:(Lio/netty/channel/AbstractChannel;)Z
      40: ifeq          72
      43: aload_0
      44: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      47: iconst_0
      48: invokestatic  #45                 // Method io/netty/channel/AbstractChannel.access$402:(Lio/netty/channel/AbstractChannel;Z)Z
      51: pop
      52: aload_0
      53: new           #98                 // class io/netty/channel/AbstractChannel$AbstractUnsafe$8
      56: dup
      57: aload_0
      58: invokespecial #99                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe$8."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;)V
      61: invokespecial #1                  // Method invokeLater:(Ljava/lang/Runnable;)V
      64: aload_0
      65: aload_1
      66: invokevirtual #46                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
      69: goto          186
      72: aload_0
      73: aload_1
      74: invokevirtual #46                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
      77: goto          186
      80: astore_2
      81: invokestatic  #35                 // Method io/netty/channel/AbstractChannel.access$200:()Lio/netty/util/internal/logging/InternalLogger;
      84: ldc           #100                // String Unexpected exception occurred while deregistering a channel.
      86: aload_2
      87: invokeinterface #95,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      92: aload_0
      93: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      96: invokestatic  #96                 // Method io/netty/channel/AbstractChannel.access$400:(Lio/netty/channel/AbstractChannel;)Z
      99: ifeq          131
     102: aload_0
     103: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
     106: iconst_0
     107: invokestatic  #45                 // Method io/netty/channel/AbstractChannel.access$402:(Lio/netty/channel/AbstractChannel;Z)Z
     110: pop
     111: aload_0
     112: new           #98                 // class io/netty/channel/AbstractChannel$AbstractUnsafe$8
     115: dup
     116: aload_0
     117: invokespecial #99                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe$8."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;)V
     120: invokespecial #1                  // Method invokeLater:(Ljava/lang/Runnable;)V
     123: aload_0
     124: aload_1
     125: invokevirtual #46                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
     128: goto          186
     131: aload_0
     132: aload_1
     133: invokevirtual #46                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
     136: goto          186
     139: astore_3
     140: aload_0
     141: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
     144: invokestatic  #96                 // Method io/netty/channel/AbstractChannel.access$400:(Lio/netty/channel/AbstractChannel;)Z
     147: ifeq          179
     150: aload_0
     151: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
     154: iconst_0
     155: invokestatic  #45                 // Method io/netty/channel/AbstractChannel.access$402:(Lio/netty/channel/AbstractChannel;Z)Z
     158: pop
     159: aload_0
     160: new           #98                 // class io/netty/channel/AbstractChannel$AbstractUnsafe$8
     163: dup
     164: aload_0
     165: invokespecial #99                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe$8."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;)V
     168: invokespecial #1                  // Method invokeLater:(Ljava/lang/Runnable;)V
     171: aload_0
     172: aload_1
     173: invokevirtual #46                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
     176: goto          184
     179: aload_0
     180: aload_1
     181: invokevirtual #46                 // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
     184: aload_3
     185: athrow
     186: return
    Exception table:
       from    to  target type
          26    33    80   Class java/lang/Throwable
          26    33   139   any
          80    92   139   any
         139   140   139   any

  public final void beginRead();
    Code:
       0: aload_0
       1: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
       4: invokevirtual #49                 // Method io/netty/channel/AbstractChannel.isActive:()Z
       7: ifne          11
      10: return
      11: aload_0
      12: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      15: invokevirtual #101                // Method io/netty/channel/AbstractChannel.doBeginRead:()V
      18: goto          43
      21: astore_1
      22: aload_0
      23: new           #102                // class io/netty/channel/AbstractChannel$AbstractUnsafe$9
      26: dup
      27: aload_0
      28: aload_1
      29: invokespecial #103                // Method io/netty/channel/AbstractChannel$AbstractUnsafe$9."<init>":(Lio/netty/channel/AbstractChannel$AbstractUnsafe;Ljava/lang/Exception;)V
      32: invokespecial #1                  // Method invokeLater:(Ljava/lang/Runnable;)V
      35: aload_0
      36: aload_0
      37: invokevirtual #91                 // Method voidPromise:()Lio/netty/channel/ChannelPromise;
      40: invokevirtual #104                // Method close:(Lio/netty/channel/ChannelPromise;)V
      43: return
    Exception table:
       from    to  target type
          11    18    21   Class java/lang/Exception

  public final void write(java.lang.Object, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #9                  // Field outboundBuffer:Lio/netty/channel/ChannelOutboundBuffer;
       4: astore_3
       5: aload_3
       6: ifnonnull     23
       9: aload_0
      10: aload_2
      11: getstatic     #72                 // Field io/netty/channel/AbstractChannel.CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      14: invokevirtual #41                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      17: aload_1
      18: invokestatic  #105                // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      21: pop
      22: return
      23: aload_0
      24: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      27: aload_1
      28: invokevirtual #106                // Method io/netty/channel/AbstractChannel.filterOutboundMessage:(Ljava/lang/Object;)Ljava/lang/Object;
      31: astore_1
      32: aload_0
      33: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      36: invokevirtual #107                // Method io/netty/channel/AbstractChannel.estimatorHandle:()Lio/netty/channel/MessageSizeEstimator$Handle;
      39: aload_1
      40: invokeinterface #108,  2          // InterfaceMethod io/netty/channel/MessageSizeEstimator$Handle.size:(Ljava/lang/Object;)I
      45: istore        4
      47: iload         4
      49: ifge          55
      52: iconst_0
      53: istore        4
      55: goto          73
      58: astore        5
      60: aload_0
      61: aload_2
      62: aload         5
      64: invokevirtual #41                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      67: aload_1
      68: invokestatic  #105                // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      71: pop
      72: return
      73: aload_3
      74: aload_1
      75: iload         4
      77: aload_2
      78: invokevirtual #109                // Method io/netty/channel/ChannelOutboundBuffer.addMessage:(Ljava/lang/Object;ILio/netty/channel/ChannelPromise;)V
      81: return
    Exception table:
       from    to  target type
          23    55    58   Class java/lang/Throwable

  public final void flush();
    Code:
       0: aload_0
       1: getfield      #9                  // Field outboundBuffer:Lio/netty/channel/ChannelOutboundBuffer;
       4: astore_1
       5: aload_1
       6: ifnonnull     10
       9: return
      10: aload_1
      11: invokevirtual #110                // Method io/netty/channel/ChannelOutboundBuffer.addFlush:()V
      14: aload_0
      15: invokevirtual #111                // Method flush0:()V
      18: return

  protected void flush0();
    Code:
       0: aload_0
       1: getfield      #85                 // Field inFlush0:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #9                  // Field outboundBuffer:Lio/netty/channel/ChannelOutboundBuffer;
      12: astore_1
      13: aload_1
      14: ifnull        24
      17: aload_1
      18: invokevirtual #112                // Method io/netty/channel/ChannelOutboundBuffer.isEmpty:()Z
      21: ifeq          25
      24: return
      25: aload_0
      26: iconst_1
      27: putfield      #85                 // Field inFlush0:Z
      30: aload_0
      31: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      34: invokevirtual #49                 // Method io/netty/channel/AbstractChannel.isActive:()Z
      37: ifne          86
      40: aload_0
      41: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      44: invokevirtual #113                // Method io/netty/channel/AbstractChannel.isOpen:()Z
      47: ifeq          61
      50: aload_1
      51: getstatic     #114                // Field io/netty/channel/AbstractChannel.NOT_YET_CONNECTED_EXCEPTION:Ljava/nio/channels/NotYetConnectedException;
      54: iconst_1
      55: invokevirtual #83                 // Method io/netty/channel/ChannelOutboundBuffer.failFlushed:(Ljava/lang/Throwable;Z)V
      58: goto          69
      61: aload_1
      62: getstatic     #72                 // Field io/netty/channel/AbstractChannel.CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      65: iconst_0
      66: invokevirtual #83                 // Method io/netty/channel/ChannelOutboundBuffer.failFlushed:(Ljava/lang/Throwable;Z)V
      69: aload_0
      70: iconst_0
      71: putfield      #85                 // Field inFlush0:Z
      74: goto          85
      77: astore_2
      78: aload_0
      79: iconst_0
      80: putfield      #85                 // Field inFlush0:Z
      83: aload_2
      84: athrow
      85: return
      86: aload_0
      87: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
      90: aload_1
      91: invokevirtual #115                // Method io/netty/channel/AbstractChannel.doWrite:(Lio/netty/channel/ChannelOutboundBuffer;)V
      94: aload_0
      95: iconst_0
      96: putfield      #85                 // Field inFlush0:Z
      99: goto          160
     102: astore_2
     103: aload_2
     104: instanceof    #116                // class java/io/IOException
     107: ifeq          138
     110: aload_0
     111: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
     114: invokevirtual #52                 // Method io/netty/channel/AbstractChannel.config:()Lio/netty/channel/ChannelConfig;
     117: invokeinterface #117,  1          // InterfaceMethod io/netty/channel/ChannelConfig.isAutoClose:()Z
     122: ifeq          138
     125: aload_0
     126: aload_0
     127: invokevirtual #91                 // Method voidPromise:()Lio/netty/channel/ChannelPromise;
     130: aload_2
     131: iconst_0
     132: invokespecial #73                 // Method close:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;Z)V
     135: goto          144
     138: aload_1
     139: aload_2
     140: iconst_1
     141: invokevirtual #83                 // Method io/netty/channel/ChannelOutboundBuffer.failFlushed:(Ljava/lang/Throwable;Z)V
     144: aload_0
     145: iconst_0
     146: putfield      #85                 // Field inFlush0:Z
     149: goto          160
     152: astore_3
     153: aload_0
     154: iconst_0
     155: putfield      #85                 // Field inFlush0:Z
     158: aload_3
     159: athrow
     160: return
    Exception table:
       from    to  target type
          40    69    77   any
          77    78    77   any
          86    94   102   Class java/lang/Throwable
          86    94   152   any
         102   144   152   any
         152   153   152   any

  public final io.netty.channel.ChannelPromise voidPromise();
    Code:
       0: aload_0
       1: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
       4: invokestatic  #118                // Method io/netty/channel/AbstractChannel.access$900:(Lio/netty/channel/AbstractChannel;)Lio/netty/channel/VoidChannelPromise;
       7: areturn

  protected final boolean ensureOpen(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
       4: invokevirtual #113                // Method io/netty/channel/AbstractChannel.isOpen:()Z
       7: ifeq          12
      10: iconst_1
      11: ireturn
      12: aload_0
      13: aload_1
      14: getstatic     #72                 // Field io/netty/channel/AbstractChannel.CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      17: invokevirtual #41                 // Method safeSetFailure:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      20: iconst_0
      21: ireturn

  protected final void safeSetSuccess(io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: instanceof    #74                 // class io/netty/channel/VoidChannelPromise
       4: ifne          27
       7: aload_1
       8: invokeinterface #119,  1          // InterfaceMethod io/netty/channel/ChannelPromise.trySuccess:()Z
      13: ifne          27
      16: invokestatic  #35                 // Method io/netty/channel/AbstractChannel.access$200:()Lio/netty/util/internal/logging/InternalLogger;
      19: ldc           #120                // String Failed to mark a promise as success because it is done already: {}
      21: aload_1
      22: invokeinterface #121,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      27: return

  protected final void safeSetFailure(io.netty.channel.ChannelPromise, java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #74                 // class io/netty/channel/VoidChannelPromise
       4: ifne          29
       7: aload_1
       8: aload_2
       9: invokeinterface #122,  2          // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      14: ifne          29
      17: invokestatic  #35                 // Method io/netty/channel/AbstractChannel.access$200:()Lio/netty/util/internal/logging/InternalLogger;
      20: ldc           #123                // String Failed to mark a promise as failure because it\'s done already: {}
      22: aload_1
      23: aload_2
      24: invokeinterface #37,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      29: return

  protected final void closeIfClosed();
    Code:
       0: aload_0
       1: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
       4: invokevirtual #113                // Method io/netty/channel/AbstractChannel.isOpen:()Z
       7: ifeq          11
      10: return
      11: aload_0
      12: aload_0
      13: invokevirtual #91                 // Method voidPromise:()Lio/netty/channel/ChannelPromise;
      16: invokevirtual #104                // Method close:(Lio/netty/channel/ChannelPromise;)V
      19: return

  private void invokeLater(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field this$0:Lio/netty/channel/AbstractChannel;
       4: invokevirtual #124                // Method io/netty/channel/AbstractChannel.eventLoop:()Lio/netty/channel/EventLoop;
       7: aload_1
       8: invokeinterface #33,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      13: goto          28
      16: astore_2
      17: invokestatic  #35                 // Method io/netty/channel/AbstractChannel.access$200:()Lio/netty/util/internal/logging/InternalLogger;
      20: ldc           #126                // String Can\'t invoke task later as EventLoop rejected it
      22: aload_2
      23: invokeinterface #95,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      28: return
    Exception table:
       from    to  target type
           0    13    16   Class java/util/concurrent/RejectedExecutionException

  protected final java.lang.Throwable annotateConnectException(java.lang.Throwable, java.net.SocketAddress);
    Code:
       0: aload_1
       1: instanceof    #127                // class java/net/ConnectException
       4: ifeq          54
       7: new           #127                // class java/net/ConnectException
      10: dup
      11: new           #22                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      18: aload_1
      19: invokevirtual #128                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      22: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #129                // String :
      27: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_2
      31: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #130                // Method java/net/ConnectException."<init>":(Ljava/lang/String;)V
      40: astore_3
      41: aload_3
      42: aload_1
      43: invokevirtual #131                // Method java/lang/Throwable.getStackTrace:()[Ljava/lang/StackTraceElement;
      46: invokevirtual #132                // Method java/lang/Throwable.setStackTrace:([Ljava/lang/StackTraceElement;)V
      49: aload_3
      50: astore_1
      51: goto          159
      54: aload_1
      55: instanceof    #133                // class java/net/NoRouteToHostException
      58: ifeq          108
      61: new           #133                // class java/net/NoRouteToHostException
      64: dup
      65: new           #22                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      72: aload_1
      73: invokevirtual #128                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      76: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: ldc           #129                // String :
      81: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_2
      85: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      88: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: invokespecial #134                // Method java/net/NoRouteToHostException."<init>":(Ljava/lang/String;)V
      94: astore_3
      95: aload_3
      96: aload_1
      97: invokevirtual #131                // Method java/lang/Throwable.getStackTrace:()[Ljava/lang/StackTraceElement;
     100: invokevirtual #132                // Method java/lang/Throwable.setStackTrace:([Ljava/lang/StackTraceElement;)V
     103: aload_3
     104: astore_1
     105: goto          159
     108: aload_1
     109: instanceof    #135                // class java/net/SocketException
     112: ifeq          159
     115: new           #135                // class java/net/SocketException
     118: dup
     119: new           #22                 // class java/lang/StringBuilder
     122: dup
     123: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     126: aload_1
     127: invokevirtual #128                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     130: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: ldc           #129                // String :
     135: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload_2
     139: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     142: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     145: invokespecial #136                // Method java/net/SocketException."<init>":(Ljava/lang/String;)V
     148: astore_3
     149: aload_3
     150: aload_1
     151: invokevirtual #131                // Method java/lang/Throwable.getStackTrace:()[Ljava/lang/StackTraceElement;
     154: invokevirtual #132                // Method java/lang/Throwable.setStackTrace:([Ljava/lang/StackTraceElement;)V
     157: aload_3
     158: astore_1
     159: aload_1
     160: areturn

  protected java.util.concurrent.Executor closeExecutor();
    Code:
       0: aconst_null
       1: areturn

  static void access$100(io.netty.channel.AbstractChannel$AbstractUnsafe, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method register0:(Lio/netty/channel/ChannelPromise;)V
       5: return

  static void access$600(io.netty.channel.AbstractChannel$AbstractUnsafe, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method doClose0:(Lio/netty/channel/ChannelPromise;)V
       5: return

  static void access$700(io.netty.channel.AbstractChannel$AbstractUnsafe, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #2                  // Method fireChannelInactiveAndDeregister:(Z)V
       5: return

  static void access$800(io.netty.channel.AbstractChannel$AbstractUnsafe, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method invokeLater:(Ljava/lang/Runnable;)V
       5: return
}
