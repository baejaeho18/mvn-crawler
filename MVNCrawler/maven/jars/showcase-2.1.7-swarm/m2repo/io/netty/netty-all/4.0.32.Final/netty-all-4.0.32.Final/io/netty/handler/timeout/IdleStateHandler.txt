Compiled from "IdleStateHandler.java"
public class io.netty.handler.timeout.IdleStateHandler extends io.netty.channel.ChannelDuplexHandler {
  private static final long MIN_TIMEOUT_NANOS;

  private final io.netty.channel.ChannelFutureListener writeListener;

  private final long readerIdleTimeNanos;

  private final long writerIdleTimeNanos;

  private final long allIdleTimeNanos;

  volatile java.util.concurrent.ScheduledFuture<?> readerIdleTimeout;

  volatile long lastReadTime;

  private boolean firstReaderIdleEvent;

  volatile java.util.concurrent.ScheduledFuture<?> writerIdleTimeout;

  volatile long lastWriteTime;

  private boolean firstWriterIdleEvent;

  volatile java.util.concurrent.ScheduledFuture<?> allIdleTimeout;

  private boolean firstAllIdleEvent;

  private volatile int state;

  private volatile boolean reading;

  public io.netty.handler.timeout.IdleStateHandler(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: i2l
       3: iload_2
       4: i2l
       5: iload_3
       6: i2l
       7: getstatic     #8                  // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      10: invokespecial #9                  // Method "<init>":(JJJLjava/util/concurrent/TimeUnit;)V
      13: return

  public io.netty.handler.timeout.IdleStateHandler(long, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method io/netty/channel/ChannelDuplexHandler."<init>":()V
       4: aload_0
       5: new           #11                 // class io/netty/handler/timeout/IdleStateHandler$1
       8: dup
       9: aload_0
      10: invokespecial #12                 // Method io/netty/handler/timeout/IdleStateHandler$1."<init>":(Lio/netty/handler/timeout/IdleStateHandler;)V
      13: putfield      #13                 // Field writeListener:Lio/netty/channel/ChannelFutureListener;
      16: aload_0
      17: iconst_1
      18: putfield      #3                  // Field firstReaderIdleEvent:Z
      21: aload_0
      22: iconst_1
      23: putfield      #7                  // Field firstWriterIdleEvent:Z
      26: aload_0
      27: iconst_1
      28: putfield      #6                  // Field firstAllIdleEvent:Z
      31: aload         7
      33: ifnonnull     46
      36: new           #14                 // class java/lang/NullPointerException
      39: dup
      40: ldc           #15                 // String unit
      42: invokespecial #16                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: lload_1
      47: lconst_0
      48: lcmp
      49: ifgt          60
      52: aload_0
      53: lconst_0
      54: putfield      #5                  // Field readerIdleTimeNanos:J
      57: goto          76
      60: aload_0
      61: aload         7
      63: lload_1
      64: invokevirtual #17                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      67: getstatic     #18                 // Field MIN_TIMEOUT_NANOS:J
      70: invokestatic  #19                 // Method java/lang/Math.max:(JJ)J
      73: putfield      #5                  // Field readerIdleTimeNanos:J
      76: lload_3
      77: lconst_0
      78: lcmp
      79: ifgt          90
      82: aload_0
      83: lconst_0
      84: putfield      #2                  // Field writerIdleTimeNanos:J
      87: goto          106
      90: aload_0
      91: aload         7
      93: lload_3
      94: invokevirtual #17                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      97: getstatic     #18                 // Field MIN_TIMEOUT_NANOS:J
     100: invokestatic  #19                 // Method java/lang/Math.max:(JJ)J
     103: putfield      #2                  // Field writerIdleTimeNanos:J
     106: lload         5
     108: lconst_0
     109: lcmp
     110: ifgt          121
     113: aload_0
     114: lconst_0
     115: putfield      #1                  // Field allIdleTimeNanos:J
     118: goto          138
     121: aload_0
     122: aload         7
     124: lload         5
     126: invokevirtual #17                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     129: getstatic     #18                 // Field MIN_TIMEOUT_NANOS:J
     132: invokestatic  #19                 // Method java/lang/Math.max:(JJ)J
     135: putfield      #1                  // Field allIdleTimeNanos:J
     138: return

  public long getReaderIdleTimeInMillis();
    Code:
       0: getstatic     #20                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       3: aload_0
       4: getfield      #5                  // Field readerIdleTimeNanos:J
       7: invokevirtual #21                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      10: lreturn

  public long getWriterIdleTimeInMillis();
    Code:
       0: getstatic     #20                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       3: aload_0
       4: getfield      #2                  // Field writerIdleTimeNanos:J
       7: invokevirtual #21                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      10: lreturn

  public long getAllIdleTimeInMillis();
    Code:
       0: getstatic     #20                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       3: aload_0
       4: getfield      #1                  // Field allIdleTimeNanos:J
       7: invokevirtual #21                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      10: lreturn

  public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #22,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      11: ifeq          33
      14: aload_1
      15: invokeinterface #22,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      20: invokeinterface #24,  1           // InterfaceMethod io/netty/channel/Channel.isRegistered:()Z
      25: ifeq          33
      28: aload_0
      29: aload_1
      30: invokespecial #25                 // Method initialize:(Lio/netty/channel/ChannelHandlerContext;)V
      33: return

  public void handlerRemoved(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #26                 // Method destroy:()V
       4: return

  public void channelRegistered(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #22,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      11: ifeq          19
      14: aload_0
      15: aload_1
      16: invokespecial #25                 // Method initialize:(Lio/netty/channel/ChannelHandlerContext;)V
      19: aload_0
      20: aload_1
      21: invokespecial #27                 // Method io/netty/channel/ChannelDuplexHandler.channelRegistered:(Lio/netty/channel/ChannelHandlerContext;)V
      24: return

  public void channelActive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method initialize:(Lio/netty/channel/ChannelHandlerContext;)V
       5: aload_0
       6: aload_1
       7: invokespecial #28                 // Method io/netty/channel/ChannelDuplexHandler.channelActive:(Lio/netty/channel/ChannelHandlerContext;)V
      10: return

  public void channelInactive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #26                 // Method destroy:()V
       4: aload_0
       5: aload_1
       6: invokespecial #29                 // Method io/netty/channel/ChannelDuplexHandler.channelInactive:(Lio/netty/channel/ChannelHandlerContext;)V
       9: return

  public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #5                  // Field readerIdleTimeNanos:J
       4: lconst_0
       5: lcmp
       6: ifgt          18
       9: aload_0
      10: getfield      #1                  // Field allIdleTimeNanos:J
      13: lconst_0
      14: lcmp
      15: ifle          33
      18: aload_0
      19: iconst_1
      20: putfield      #4                  // Field reading:Z
      23: aload_0
      24: aload_0
      25: iconst_1
      26: dup_x1
      27: putfield      #6                  // Field firstAllIdleEvent:Z
      30: putfield      #3                  // Field firstReaderIdleEvent:Z
      33: aload_1
      34: aload_2
      35: invokeinterface #30,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      40: pop
      41: return

  public void channelReadComplete(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #5                  // Field readerIdleTimeNanos:J
       4: lconst_0
       5: lcmp
       6: ifgt          18
       9: aload_0
      10: getfield      #1                  // Field allIdleTimeNanos:J
      13: lconst_0
      14: lcmp
      15: ifle          30
      18: aload_0
      19: invokestatic  #31                 // Method java/lang/System.nanoTime:()J
      22: putfield      #32                 // Field lastReadTime:J
      25: aload_0
      26: iconst_0
      27: putfield      #4                  // Field reading:Z
      30: aload_1
      31: invokeinterface #33,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelReadComplete:()Lio/netty/channel/ChannelHandlerContext;
      36: pop
      37: return

  public void write(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field writerIdleTimeNanos:J
       4: lconst_0
       5: lcmp
       6: ifgt          18
       9: aload_0
      10: getfield      #1                  // Field allIdleTimeNanos:J
      13: lconst_0
      14: lcmp
      15: ifle          29
      18: aload_3
      19: aload_0
      20: getfield      #13                 // Field writeListener:Lio/netty/channel/ChannelFutureListener;
      23: invokeinterface #34,  2           // InterfaceMethod io/netty/channel/ChannelPromise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelPromise;
      28: pop
      29: aload_1
      30: aload_2
      31: aload_3
      32: invokeinterface #35,  3           // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      37: pop
      38: return

  private void initialize(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: getfield      #36                 // Field state:I
       4: lookupswitch  { // 2
                     1: 32
                     2: 32
               default: 33
          }
      32: return
      33: aload_0
      34: iconst_1
      35: putfield      #36                 // Field state:I
      38: aload_1
      39: invokeinterface #37,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      44: astore_2
      45: aload_0
      46: aload_0
      47: invokestatic  #31                 // Method java/lang/System.nanoTime:()J
      50: dup2_x1
      51: putfield      #38                 // Field lastWriteTime:J
      54: putfield      #32                 // Field lastReadTime:J
      57: aload_0
      58: getfield      #5                  // Field readerIdleTimeNanos:J
      61: lconst_0
      62: lcmp
      63: ifle          92
      66: aload_0
      67: aload_2
      68: new           #39                 // class io/netty/handler/timeout/IdleStateHandler$ReaderIdleTimeoutTask
      71: dup
      72: aload_0
      73: aload_1
      74: invokespecial #40                 // Method io/netty/handler/timeout/IdleStateHandler$ReaderIdleTimeoutTask."<init>":(Lio/netty/handler/timeout/IdleStateHandler;Lio/netty/channel/ChannelHandlerContext;)V
      77: aload_0
      78: getfield      #5                  // Field readerIdleTimeNanos:J
      81: getstatic     #20                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      84: invokeinterface #41,  5           // InterfaceMethod io/netty/util/concurrent/EventExecutor.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
      89: putfield      #42                 // Field readerIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
      92: aload_0
      93: getfield      #2                  // Field writerIdleTimeNanos:J
      96: lconst_0
      97: lcmp
      98: ifle          127
     101: aload_0
     102: aload_2
     103: new           #43                 // class io/netty/handler/timeout/IdleStateHandler$WriterIdleTimeoutTask
     106: dup
     107: aload_0
     108: aload_1
     109: invokespecial #44                 // Method io/netty/handler/timeout/IdleStateHandler$WriterIdleTimeoutTask."<init>":(Lio/netty/handler/timeout/IdleStateHandler;Lio/netty/channel/ChannelHandlerContext;)V
     112: aload_0
     113: getfield      #2                  // Field writerIdleTimeNanos:J
     116: getstatic     #20                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     119: invokeinterface #41,  5           // InterfaceMethod io/netty/util/concurrent/EventExecutor.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
     124: putfield      #45                 // Field writerIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
     127: aload_0
     128: getfield      #1                  // Field allIdleTimeNanos:J
     131: lconst_0
     132: lcmp
     133: ifle          162
     136: aload_0
     137: aload_2
     138: new           #46                 // class io/netty/handler/timeout/IdleStateHandler$AllIdleTimeoutTask
     141: dup
     142: aload_0
     143: aload_1
     144: invokespecial #47                 // Method io/netty/handler/timeout/IdleStateHandler$AllIdleTimeoutTask."<init>":(Lio/netty/handler/timeout/IdleStateHandler;Lio/netty/channel/ChannelHandlerContext;)V
     147: aload_0
     148: getfield      #1                  // Field allIdleTimeNanos:J
     151: getstatic     #20                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     154: invokeinterface #41,  5           // InterfaceMethod io/netty/util/concurrent/EventExecutor.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
     159: putfield      #48                 // Field allIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
     162: return

  private void destroy();
    Code:
       0: aload_0
       1: iconst_2
       2: putfield      #36                 // Field state:I
       5: aload_0
       6: getfield      #42                 // Field readerIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
       9: ifnull        28
      12: aload_0
      13: getfield      #42                 // Field readerIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
      16: iconst_0
      17: invokeinterface #49,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      22: pop
      23: aload_0
      24: aconst_null
      25: putfield      #42                 // Field readerIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
      28: aload_0
      29: getfield      #45                 // Field writerIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
      32: ifnull        51
      35: aload_0
      36: getfield      #45                 // Field writerIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
      39: iconst_0
      40: invokeinterface #49,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      45: pop
      46: aload_0
      47: aconst_null
      48: putfield      #45                 // Field writerIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
      51: aload_0
      52: getfield      #48                 // Field allIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
      55: ifnull        74
      58: aload_0
      59: getfield      #48                 // Field allIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
      62: iconst_0
      63: invokeinterface #49,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      68: pop
      69: aload_0
      70: aconst_null
      71: putfield      #48                 // Field allIdleTimeout:Ljava/util/concurrent/ScheduledFuture;
      74: return

  protected void channelIdle(io.netty.channel.ChannelHandlerContext, io.netty.handler.timeout.IdleStateEvent) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #50,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
       7: pop
       8: return

  static boolean access$002(io.netty.handler.timeout.IdleStateHandler, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #7                  // Field firstWriterIdleEvent:Z
       6: ireturn

  static boolean access$102(io.netty.handler.timeout.IdleStateHandler, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #6                  // Field firstAllIdleEvent:Z
       6: ireturn

  static long access$200(io.netty.handler.timeout.IdleStateHandler);
    Code:
       0: aload_0
       1: getfield      #5                  // Field readerIdleTimeNanos:J
       4: lreturn

  static boolean access$300(io.netty.handler.timeout.IdleStateHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field reading:Z
       4: ireturn

  static boolean access$400(io.netty.handler.timeout.IdleStateHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field firstReaderIdleEvent:Z
       4: ireturn

  static boolean access$402(io.netty.handler.timeout.IdleStateHandler, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #3                  // Field firstReaderIdleEvent:Z
       6: ireturn

  static long access$500(io.netty.handler.timeout.IdleStateHandler);
    Code:
       0: aload_0
       1: getfield      #2                  // Field writerIdleTimeNanos:J
       4: lreturn

  static boolean access$000(io.netty.handler.timeout.IdleStateHandler);
    Code:
       0: aload_0
       1: getfield      #7                  // Field firstWriterIdleEvent:Z
       4: ireturn

  static long access$600(io.netty.handler.timeout.IdleStateHandler);
    Code:
       0: aload_0
       1: getfield      #1                  // Field allIdleTimeNanos:J
       4: lreturn

  static boolean access$100(io.netty.handler.timeout.IdleStateHandler);
    Code:
       0: aload_0
       1: getfield      #6                  // Field firstAllIdleEvent:Z
       4: ireturn

  static {};
    Code:
       0: getstatic     #51                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       3: lconst_1
       4: invokevirtual #17                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       7: putstatic     #18                 // Field MIN_TIMEOUT_NANOS:J
      10: return
}
