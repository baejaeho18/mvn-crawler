Compiled from "PendingWrite.java"
public final class io.netty.util.internal.PendingWrite {
  private static final io.netty.util.Recycler<io.netty.util.internal.PendingWrite> RECYCLER;

  private final io.netty.util.Recycler$Handle handle;

  private java.lang.Object msg;

  private io.netty.util.concurrent.Promise<java.lang.Void> promise;

  public static io.netty.util.internal.PendingWrite newInstance(java.lang.Object, io.netty.util.concurrent.Promise<java.lang.Void>);
    Code:
       0: getstatic     #2                  // Field RECYCLER:Lio/netty/util/Recycler;
       3: invokevirtual #3                  // Method io/netty/util/Recycler.get:()Ljava/lang/Object;
       6: checkcast     #4                  // class io/netty/util/internal/PendingWrite
       9: astore_2
      10: aload_2
      11: aload_0
      12: putfield      #5                  // Field msg:Ljava/lang/Object;
      15: aload_2
      16: aload_1
      17: putfield      #6                  // Field promise:Lio/netty/util/concurrent/Promise;
      20: aload_2
      21: areturn

  private io.netty.util.internal.PendingWrite(io.netty.util.Recycler$Handle);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #8                  // Field handle:Lio/netty/util/Recycler$Handle;
       9: return

  public boolean recycle();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #5                  // Field msg:Ljava/lang/Object;
       5: aload_0
       6: aconst_null
       7: putfield      #6                  // Field promise:Lio/netty/util/concurrent/Promise;
      10: getstatic     #2                  // Field RECYCLER:Lio/netty/util/Recycler;
      13: aload_0
      14: aload_0
      15: getfield      #8                  // Field handle:Lio/netty/util/Recycler$Handle;
      18: invokevirtual #9                  // Method io/netty/util/Recycler.recycle:(Ljava/lang/Object;Lio/netty/util/Recycler$Handle;)Z
      21: ireturn

  public boolean failAndRecycle(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field msg:Ljava/lang/Object;
       4: invokestatic  #10                 // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
       7: pop
       8: aload_0
       9: getfield      #6                  // Field promise:Lio/netty/util/concurrent/Promise;
      12: ifnull        26
      15: aload_0
      16: getfield      #6                  // Field promise:Lio/netty/util/concurrent/Promise;
      19: aload_1
      20: invokeinterface #11,  2           // InterfaceMethod io/netty/util/concurrent/Promise.setFailure:(Ljava/lang/Throwable;)Lio/netty/util/concurrent/Promise;
      25: pop
      26: aload_0
      27: invokevirtual #12                 // Method recycle:()Z
      30: ireturn

  public boolean successAndRecycle();
    Code:
       0: aload_0
       1: getfield      #6                  // Field promise:Lio/netty/util/concurrent/Promise;
       4: ifnull        18
       7: aload_0
       8: getfield      #6                  // Field promise:Lio/netty/util/concurrent/Promise;
      11: aconst_null
      12: invokeinterface #13,  2           // InterfaceMethod io/netty/util/concurrent/Promise.setSuccess:(Ljava/lang/Object;)Lio/netty/util/concurrent/Promise;
      17: pop
      18: aload_0
      19: invokevirtual #12                 // Method recycle:()Z
      22: ireturn

  public java.lang.Object msg();
    Code:
       0: aload_0
       1: getfield      #5                  // Field msg:Ljava/lang/Object;
       4: areturn

  public io.netty.util.concurrent.Promise<java.lang.Void> promise();
    Code:
       0: aload_0
       1: getfield      #6                  // Field promise:Lio/netty/util/concurrent/Promise;
       4: areturn

  public io.netty.util.concurrent.Promise<java.lang.Void> recycleAndGet();
    Code:
       0: aload_0
       1: getfield      #6                  // Field promise:Lio/netty/util/concurrent/Promise;
       4: astore_1
       5: aload_0
       6: invokevirtual #12                 // Method recycle:()Z
       9: pop
      10: aload_1
      11: areturn

  io.netty.util.internal.PendingWrite(io.netty.util.Recycler$Handle, io.netty.util.internal.PendingWrite$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lio/netty/util/Recycler$Handle;)V
       5: return

  static {};
    Code:
       0: new           #14                 // class io/netty/util/internal/PendingWrite$1
       3: dup
       4: invokespecial #15                 // Method io/netty/util/internal/PendingWrite$1."<init>":()V
       7: putstatic     #2                  // Field RECYCLER:Lio/netty/util/Recycler;
      10: return
}
