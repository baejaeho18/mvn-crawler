Compiled from "ConcurrentHashMapV8.java"
class io.netty.util.internal.chmv8.ConcurrentHashMapV8$Node<K, V> implements java.util.Map$Entry<K, V> {
  final int hash;

  final K key;

  volatile V val;

  volatile io.netty.util.internal.chmv8.ConcurrentHashMapV8$Node<K, V> next;

  io.netty.util.internal.chmv8.ConcurrentHashMapV8$Node(int, K, V, io.netty.util.internal.chmv8.ConcurrentHashMapV8$Node<K, V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field hash:I
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field key:Ljava/lang/Object;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field val:Ljava/lang/Object;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field next:Lio/netty/util/internal/chmv8/ConcurrentHashMapV8$Node;
      25: return

  public final K getKey();
    Code:
       0: aload_0
       1: getfield      #3                  // Field key:Ljava/lang/Object;
       4: areturn

  public final V getValue();
    Code:
       0: aload_0
       1: getfield      #4                  // Field val:Ljava/lang/Object;
       4: areturn

  public final int hashCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field key:Ljava/lang/Object;
       4: invokevirtual #6                  // Method java/lang/Object.hashCode:()I
       7: aload_0
       8: getfield      #4                  // Field val:Ljava/lang/Object;
      11: invokevirtual #6                  // Method java/lang/Object.hashCode:()I
      14: ixor
      15: ireturn

  public final java.lang.String toString();
    Code:
       0: new           #7                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #3                  // Field key:Ljava/lang/Object;
      11: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      14: ldc           #10                 // String =
      16: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #4                  // Field val:Ljava/lang/Object;
      23: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      26: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  public final V setValue(V);
    Code:
       0: new           #13                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #14                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #15                 // class java/util/Map$Entry
       4: ifeq          79
       7: aload_1
       8: checkcast     #15                 // class java/util/Map$Entry
      11: dup
      12: astore        5
      14: invokeinterface #16,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      19: dup
      20: astore_2
      21: ifnull        79
      24: aload         5
      26: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      31: dup
      32: astore_3
      33: ifnull        79
      36: aload_2
      37: aload_0
      38: getfield      #3                  // Field key:Ljava/lang/Object;
      41: if_acmpeq     55
      44: aload_2
      45: aload_0
      46: getfield      #3                  // Field key:Ljava/lang/Object;
      49: invokevirtual #18                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      52: ifeq          79
      55: aload_3
      56: aload_0
      57: getfield      #4                  // Field val:Ljava/lang/Object;
      60: dup
      61: astore        4
      63: if_acmpeq     75
      66: aload_3
      67: aload         4
      69: invokevirtual #18                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      72: ifeq          79
      75: iconst_1
      76: goto          80
      79: iconst_0
      80: ireturn

  io.netty.util.internal.chmv8.ConcurrentHashMapV8$Node<K, V> find(int, java.lang.Object);
    Code:
       0: aload_0
       1: astore_3
       2: aload_2
       3: ifnull        50
       6: aload_3
       7: getfield      #2                  // Field hash:I
      10: iload_1
      11: if_icmpne     41
      14: aload_3
      15: getfield      #3                  // Field key:Ljava/lang/Object;
      18: dup
      19: astore        4
      21: aload_2
      22: if_acmpeq     39
      25: aload         4
      27: ifnull        41
      30: aload_2
      31: aload         4
      33: invokevirtual #18                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      36: ifeq          41
      39: aload_3
      40: areturn
      41: aload_3
      42: getfield      #5                  // Field next:Lio/netty/util/internal/chmv8/ConcurrentHashMapV8$Node;
      45: dup
      46: astore_3
      47: ifnonnull     6
      50: aconst_null
      51: areturn
}
