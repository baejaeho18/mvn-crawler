Compiled from "DefaultRxtxChannelConfig.java"
final class io.netty.channel.rxtx.DefaultRxtxChannelConfig extends io.netty.channel.DefaultChannelConfig implements io.netty.channel.rxtx.RxtxChannelConfig {
  private volatile int baudrate;

  private volatile boolean dtr;

  private volatile boolean rts;

  private volatile io.netty.channel.rxtx.RxtxChannelConfig$Stopbits stopbits;

  private volatile io.netty.channel.rxtx.RxtxChannelConfig$Databits databits;

  private volatile io.netty.channel.rxtx.RxtxChannelConfig$Paritybit paritybit;

  private volatile int waitTime;

  private volatile int readTimeout;

  io.netty.channel.rxtx.DefaultRxtxChannelConfig(io.netty.channel.rxtx.RxtxChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/netty/channel/DefaultChannelConfig."<init>":(Lio/netty/channel/Channel;)V
       5: aload_0
       6: ldc           #2                  // int 115200
       8: putfield      #3                  // Field baudrate:I
      11: aload_0
      12: getstatic     #4                  // Field io/netty/channel/rxtx/RxtxChannelConfig$Stopbits.STOPBITS_1:Lio/netty/channel/rxtx/RxtxChannelConfig$Stopbits;
      15: putfield      #5                  // Field stopbits:Lio/netty/channel/rxtx/RxtxChannelConfig$Stopbits;
      18: aload_0
      19: getstatic     #6                  // Field io/netty/channel/rxtx/RxtxChannelConfig$Databits.DATABITS_8:Lio/netty/channel/rxtx/RxtxChannelConfig$Databits;
      22: putfield      #7                  // Field databits:Lio/netty/channel/rxtx/RxtxChannelConfig$Databits;
      25: aload_0
      26: getstatic     #8                  // Field io/netty/channel/rxtx/RxtxChannelConfig$Paritybit.NONE:Lio/netty/channel/rxtx/RxtxChannelConfig$Paritybit;
      29: putfield      #9                  // Field paritybit:Lio/netty/channel/rxtx/RxtxChannelConfig$Paritybit;
      32: aload_0
      33: sipush        1000
      36: putfield      #10                 // Field readTimeout:I
      39: return

  public java.util.Map<io.netty.channel.ChannelOption<?>, java.lang.Object> getOptions();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #11                 // Method io/netty/channel/DefaultChannelConfig.getOptions:()Ljava/util/Map;
       5: bipush        7
       7: anewarray     #12                 // class io/netty/channel/ChannelOption
      10: dup
      11: iconst_0
      12: getstatic     #13                 // Field io/netty/channel/rxtx/RxtxChannelOption.BAUD_RATE:Lio/netty/channel/rxtx/RxtxChannelOption;
      15: aastore
      16: dup
      17: iconst_1
      18: getstatic     #14                 // Field io/netty/channel/rxtx/RxtxChannelOption.DTR:Lio/netty/channel/rxtx/RxtxChannelOption;
      21: aastore
      22: dup
      23: iconst_2
      24: getstatic     #15                 // Field io/netty/channel/rxtx/RxtxChannelOption.RTS:Lio/netty/channel/rxtx/RxtxChannelOption;
      27: aastore
      28: dup
      29: iconst_3
      30: getstatic     #16                 // Field io/netty/channel/rxtx/RxtxChannelOption.STOP_BITS:Lio/netty/channel/rxtx/RxtxChannelOption;
      33: aastore
      34: dup
      35: iconst_4
      36: getstatic     #17                 // Field io/netty/channel/rxtx/RxtxChannelOption.DATA_BITS:Lio/netty/channel/rxtx/RxtxChannelOption;
      39: aastore
      40: dup
      41: iconst_5
      42: getstatic     #18                 // Field io/netty/channel/rxtx/RxtxChannelOption.PARITY_BIT:Lio/netty/channel/rxtx/RxtxChannelOption;
      45: aastore
      46: dup
      47: bipush        6
      49: getstatic     #19                 // Field io/netty/channel/rxtx/RxtxChannelOption.WAIT_TIME:Lio/netty/channel/rxtx/RxtxChannelOption;
      52: aastore
      53: invokevirtual #20                 // Method getOptions:(Ljava/util/Map;[Lio/netty/channel/ChannelOption;)Ljava/util/Map;
      56: areturn

  public <T> T getOption(io.netty.channel.ChannelOption<T>);
    Code:
       0: aload_1
       1: getstatic     #13                 // Field io/netty/channel/rxtx/RxtxChannelOption.BAUD_RATE:Lio/netty/channel/rxtx/RxtxChannelOption;
       4: if_acmpne     15
       7: aload_0
       8: invokevirtual #21                 // Method getBaudrate:()I
      11: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: areturn
      15: aload_1
      16: getstatic     #14                 // Field io/netty/channel/rxtx/RxtxChannelOption.DTR:Lio/netty/channel/rxtx/RxtxChannelOption;
      19: if_acmpne     30
      22: aload_0
      23: invokevirtual #23                 // Method isDtr:()Z
      26: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      29: areturn
      30: aload_1
      31: getstatic     #15                 // Field io/netty/channel/rxtx/RxtxChannelOption.RTS:Lio/netty/channel/rxtx/RxtxChannelOption;
      34: if_acmpne     45
      37: aload_0
      38: invokevirtual #25                 // Method isRts:()Z
      41: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      44: areturn
      45: aload_1
      46: getstatic     #16                 // Field io/netty/channel/rxtx/RxtxChannelOption.STOP_BITS:Lio/netty/channel/rxtx/RxtxChannelOption;
      49: if_acmpne     57
      52: aload_0
      53: invokevirtual #26                 // Method getStopbits:()Lio/netty/channel/rxtx/RxtxChannelConfig$Stopbits;
      56: areturn
      57: aload_1
      58: getstatic     #17                 // Field io/netty/channel/rxtx/RxtxChannelOption.DATA_BITS:Lio/netty/channel/rxtx/RxtxChannelOption;
      61: if_acmpne     69
      64: aload_0
      65: invokevirtual #27                 // Method getDatabits:()Lio/netty/channel/rxtx/RxtxChannelConfig$Databits;
      68: areturn
      69: aload_1
      70: getstatic     #18                 // Field io/netty/channel/rxtx/RxtxChannelOption.PARITY_BIT:Lio/netty/channel/rxtx/RxtxChannelOption;
      73: if_acmpne     81
      76: aload_0
      77: invokevirtual #28                 // Method getParitybit:()Lio/netty/channel/rxtx/RxtxChannelConfig$Paritybit;
      80: areturn
      81: aload_1
      82: getstatic     #19                 // Field io/netty/channel/rxtx/RxtxChannelOption.WAIT_TIME:Lio/netty/channel/rxtx/RxtxChannelOption;
      85: if_acmpne     96
      88: aload_0
      89: invokevirtual #29                 // Method getWaitTimeMillis:()I
      92: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      95: areturn
      96: aload_1
      97: getstatic     #30                 // Field io/netty/channel/rxtx/RxtxChannelOption.READ_TIMEOUT:Lio/netty/channel/rxtx/RxtxChannelOption;
     100: if_acmpne     111
     103: aload_0
     104: invokevirtual #31                 // Method getReadTimeout:()I
     107: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     110: areturn
     111: aload_0
     112: aload_1
     113: invokespecial #32                 // Method io/netty/channel/DefaultChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
     116: areturn

  public <T> boolean setOption(io.netty.channel.ChannelOption<T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #33                 // Method validate:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)V
       6: aload_1
       7: getstatic     #13                 // Field io/netty/channel/rxtx/RxtxChannelOption.BAUD_RATE:Lio/netty/channel/rxtx/RxtxChannelOption;
      10: if_acmpne     28
      13: aload_0
      14: aload_2
      15: checkcast     #34                 // class java/lang/Integer
      18: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
      21: invokevirtual #36                 // Method setBaudrate:(I)Lio/netty/channel/rxtx/RxtxChannelConfig;
      24: pop
      25: goto          180
      28: aload_1
      29: getstatic     #14                 // Field io/netty/channel/rxtx/RxtxChannelOption.DTR:Lio/netty/channel/rxtx/RxtxChannelOption;
      32: if_acmpne     50
      35: aload_0
      36: aload_2
      37: checkcast     #37                 // class java/lang/Boolean
      40: invokevirtual #38                 // Method java/lang/Boolean.booleanValue:()Z
      43: invokevirtual #39                 // Method setDtr:(Z)Lio/netty/channel/rxtx/RxtxChannelConfig;
      46: pop
      47: goto          180
      50: aload_1
      51: getstatic     #15                 // Field io/netty/channel/rxtx/RxtxChannelOption.RTS:Lio/netty/channel/rxtx/RxtxChannelOption;
      54: if_acmpne     72
      57: aload_0
      58: aload_2
      59: checkcast     #37                 // class java/lang/Boolean
      62: invokevirtual #38                 // Method java/lang/Boolean.booleanValue:()Z
      65: invokevirtual #40                 // Method setRts:(Z)Lio/netty/channel/rxtx/RxtxChannelConfig;
      68: pop
      69: goto          180
      72: aload_1
      73: getstatic     #16                 // Field io/netty/channel/rxtx/RxtxChannelOption.STOP_BITS:Lio/netty/channel/rxtx/RxtxChannelOption;
      76: if_acmpne     91
      79: aload_0
      80: aload_2
      81: checkcast     #41                 // class io/netty/channel/rxtx/RxtxChannelConfig$Stopbits
      84: invokevirtual #42                 // Method setStopbits:(Lio/netty/channel/rxtx/RxtxChannelConfig$Stopbits;)Lio/netty/channel/rxtx/RxtxChannelConfig;
      87: pop
      88: goto          180
      91: aload_1
      92: getstatic     #17                 // Field io/netty/channel/rxtx/RxtxChannelOption.DATA_BITS:Lio/netty/channel/rxtx/RxtxChannelOption;
      95: if_acmpne     110
      98: aload_0
      99: aload_2
     100: checkcast     #43                 // class io/netty/channel/rxtx/RxtxChannelConfig$Databits
     103: invokevirtual #44                 // Method setDatabits:(Lio/netty/channel/rxtx/RxtxChannelConfig$Databits;)Lio/netty/channel/rxtx/RxtxChannelConfig;
     106: pop
     107: goto          180
     110: aload_1
     111: getstatic     #18                 // Field io/netty/channel/rxtx/RxtxChannelOption.PARITY_BIT:Lio/netty/channel/rxtx/RxtxChannelOption;
     114: if_acmpne     129
     117: aload_0
     118: aload_2
     119: checkcast     #45                 // class io/netty/channel/rxtx/RxtxChannelConfig$Paritybit
     122: invokevirtual #46                 // Method setParitybit:(Lio/netty/channel/rxtx/RxtxChannelConfig$Paritybit;)Lio/netty/channel/rxtx/RxtxChannelConfig;
     125: pop
     126: goto          180
     129: aload_1
     130: getstatic     #19                 // Field io/netty/channel/rxtx/RxtxChannelOption.WAIT_TIME:Lio/netty/channel/rxtx/RxtxChannelOption;
     133: if_acmpne     151
     136: aload_0
     137: aload_2
     138: checkcast     #34                 // class java/lang/Integer
     141: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     144: invokevirtual #47                 // Method setWaitTimeMillis:(I)Lio/netty/channel/rxtx/RxtxChannelConfig;
     147: pop
     148: goto          180
     151: aload_1
     152: getstatic     #30                 // Field io/netty/channel/rxtx/RxtxChannelOption.READ_TIMEOUT:Lio/netty/channel/rxtx/RxtxChannelOption;
     155: if_acmpne     173
     158: aload_0
     159: aload_2
     160: checkcast     #34                 // class java/lang/Integer
     163: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     166: invokevirtual #48                 // Method setReadTimeout:(I)Lio/netty/channel/rxtx/RxtxChannelConfig;
     169: pop
     170: goto          180
     173: aload_0
     174: aload_1
     175: aload_2
     176: invokespecial #49                 // Method io/netty/channel/DefaultChannelConfig.setOption:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Z
     179: ireturn
     180: iconst_1
     181: ireturn

  public io.netty.channel.rxtx.RxtxChannelConfig setBaudrate(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field baudrate:I
       5: aload_0
       6: areturn

  public io.netty.channel.rxtx.RxtxChannelConfig setStopbits(io.netty.channel.rxtx.RxtxChannelConfig$Stopbits);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field stopbits:Lio/netty/channel/rxtx/RxtxChannelConfig$Stopbits;
       5: aload_0
       6: areturn

  public io.netty.channel.rxtx.RxtxChannelConfig setDatabits(io.netty.channel.rxtx.RxtxChannelConfig$Databits);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field databits:Lio/netty/channel/rxtx/RxtxChannelConfig$Databits;
       5: aload_0
       6: areturn

  public io.netty.channel.rxtx.RxtxChannelConfig setParitybit(io.netty.channel.rxtx.RxtxChannelConfig$Paritybit);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field paritybit:Lio/netty/channel/rxtx/RxtxChannelConfig$Paritybit;
       5: aload_0
       6: areturn

  public int getBaudrate();
    Code:
       0: aload_0
       1: getfield      #3                  // Field baudrate:I
       4: ireturn

  public io.netty.channel.rxtx.RxtxChannelConfig$Stopbits getStopbits();
    Code:
       0: aload_0
       1: getfield      #5                  // Field stopbits:Lio/netty/channel/rxtx/RxtxChannelConfig$Stopbits;
       4: areturn

  public io.netty.channel.rxtx.RxtxChannelConfig$Databits getDatabits();
    Code:
       0: aload_0
       1: getfield      #7                  // Field databits:Lio/netty/channel/rxtx/RxtxChannelConfig$Databits;
       4: areturn

  public io.netty.channel.rxtx.RxtxChannelConfig$Paritybit getParitybit();
    Code:
       0: aload_0
       1: getfield      #9                  // Field paritybit:Lio/netty/channel/rxtx/RxtxChannelConfig$Paritybit;
       4: areturn

  public boolean isDtr();
    Code:
       0: aload_0
       1: getfield      #50                 // Field dtr:Z
       4: ireturn

  public io.netty.channel.rxtx.RxtxChannelConfig setDtr(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #50                 // Field dtr:Z
       5: aload_0
       6: areturn

  public boolean isRts();
    Code:
       0: aload_0
       1: getfield      #51                 // Field rts:Z
       4: ireturn

  public io.netty.channel.rxtx.RxtxChannelConfig setRts(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #51                 // Field rts:Z
       5: aload_0
       6: areturn

  public int getWaitTimeMillis();
    Code:
       0: aload_0
       1: getfield      #52                 // Field waitTime:I
       4: ireturn

  public io.netty.channel.rxtx.RxtxChannelConfig setWaitTimeMillis(int);
    Code:
       0: iload_1
       1: ifge          14
       4: new           #53                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #54                 // String Wait time must be >= 0
      10: invokespecial #55                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: iload_1
      16: putfield      #52                 // Field waitTime:I
      19: aload_0
      20: areturn

  public io.netty.channel.rxtx.RxtxChannelConfig setReadTimeout(int);
    Code:
       0: iload_1
       1: ifge          14
       4: new           #53                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #56                 // String readTime must be >= 0
      10: invokespecial #55                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: iload_1
      16: putfield      #10                 // Field readTimeout:I
      19: aload_0
      20: areturn

  public int getReadTimeout();
    Code:
       0: aload_0
       1: getfield      #10                 // Field readTimeout:I
       4: ireturn

  public io.netty.channel.rxtx.RxtxChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #57                 // Method io/netty/channel/DefaultChannelConfig.setConnectTimeoutMillis:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.rxtx.RxtxChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #58                 // Method io/netty/channel/DefaultChannelConfig.setMaxMessagesPerRead:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.rxtx.RxtxChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #59                 // Method io/netty/channel/DefaultChannelConfig.setWriteSpinCount:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.rxtx.RxtxChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #60                 // Method io/netty/channel/DefaultChannelConfig.setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.rxtx.RxtxChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #61                 // Method io/netty/channel/DefaultChannelConfig.setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.rxtx.RxtxChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #62                 // Method io/netty/channel/DefaultChannelConfig.setAutoRead:(Z)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.rxtx.RxtxChannelConfig setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #63                 // Method io/netty/channel/DefaultChannelConfig.setAutoClose:(Z)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.rxtx.RxtxChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #64                 // Method io/netty/channel/DefaultChannelConfig.setWriteBufferHighWaterMark:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.rxtx.RxtxChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #65                 // Method io/netty/channel/DefaultChannelConfig.setWriteBufferLowWaterMark:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.rxtx.RxtxChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #66                 // Method io/netty/channel/DefaultChannelConfig.setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #67                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/rxtx/RxtxChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #68                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/rxtx/RxtxChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #69                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/rxtx/RxtxChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #70                 // Method setAutoClose:(Z)Lio/netty/channel/rxtx/RxtxChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #71                 // Method setAutoRead:(Z)Lio/netty/channel/rxtx/RxtxChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #72                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/rxtx/RxtxChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #73                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/rxtx/RxtxChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #74                 // Method setWriteSpinCount:(I)Lio/netty/channel/rxtx/RxtxChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #75                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/rxtx/RxtxChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #76                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/rxtx/RxtxChannelConfig;
       5: areturn
}
