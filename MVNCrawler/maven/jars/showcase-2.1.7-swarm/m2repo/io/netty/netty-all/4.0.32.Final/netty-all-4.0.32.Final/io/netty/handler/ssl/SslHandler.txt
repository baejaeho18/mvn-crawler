Compiled from "SslHandler.java"
public class io.netty.handler.ssl.SslHandler extends io.netty.handler.codec.ByteToMessageDecoder implements io.netty.channel.ChannelOutboundHandler {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final java.util.regex.Pattern IGNORABLE_CLASS_IN_STACK;

  private static final java.util.regex.Pattern IGNORABLE_ERROR_MESSAGE;

  private static final javax.net.ssl.SSLException SSLENGINE_CLOSED;

  private static final javax.net.ssl.SSLException HANDSHAKE_TIMED_OUT;

  private static final java.nio.channels.ClosedChannelException CHANNEL_CLOSED;

  private volatile io.netty.channel.ChannelHandlerContext ctx;

  private final javax.net.ssl.SSLEngine engine;

  private final int maxPacketBufferSize;

  private final java.util.concurrent.Executor delegatedTaskExecutor;

  private final java.nio.ByteBuffer[] singleBuffer;

  private final boolean wantsDirectBuffer;

  private final boolean wantsLargeOutboundNetworkBuffer;

  private boolean wantsInboundHeapBuffer;

  private final boolean startTls;

  private boolean sentFirstMessage;

  private boolean flushedBeforeHandshake;

  private boolean readDuringHandshake;

  private io.netty.channel.PendingWriteQueue pendingUnencryptedWrites;

  private io.netty.util.concurrent.Promise<io.netty.channel.Channel> handshakePromise;

  private final io.netty.handler.ssl.SslHandler$LazyChannelPromise sslCloseFuture;

  private boolean needsFlush;

  private boolean outboundClosed;

  private int packetLength;

  private boolean firedChannelRead;

  private volatile long handshakeTimeoutMillis;

  private volatile long closeNotifyTimeoutMillis;

  static final boolean $assertionsDisabled;

  public io.netty.handler.ssl.SslHandler(javax.net.ssl.SSLEngine);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #8                  // Method "<init>":(Ljavax/net/ssl/SSLEngine;Z)V
       6: return

  public io.netty.handler.ssl.SslHandler(javax.net.ssl.SSLEngine, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: getstatic     #9                  // Field io/netty/util/concurrent/ImmediateExecutor.INSTANCE:Lio/netty/util/concurrent/ImmediateExecutor;
       6: invokespecial #10                 // Method "<init>":(Ljavax/net/ssl/SSLEngine;ZLjava/util/concurrent/Executor;)V
       9: return

  public io.netty.handler.ssl.SslHandler(javax.net.ssl.SSLEngine, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: invokespecial #10                 // Method "<init>":(Ljavax/net/ssl/SSLEngine;ZLjava/util/concurrent/Executor;)V
       7: return

  public io.netty.handler.ssl.SslHandler(javax.net.ssl.SSLEngine, boolean, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method io/netty/handler/codec/ByteToMessageDecoder."<init>":()V
       4: aload_0
       5: iconst_1
       6: anewarray     #12                 // class java/nio/ByteBuffer
       9: putfield      #13                 // Field singleBuffer:[Ljava/nio/ByteBuffer;
      12: aload_0
      13: new           #14                 // class io/netty/handler/ssl/SslHandler$LazyChannelPromise
      16: dup
      17: aload_0
      18: aconst_null
      19: invokespecial #15                 // Method io/netty/handler/ssl/SslHandler$LazyChannelPromise."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/handler/ssl/SslHandler$1;)V
      22: putfield      #16                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
      25: aload_0
      26: new           #14                 // class io/netty/handler/ssl/SslHandler$LazyChannelPromise
      29: dup
      30: aload_0
      31: aconst_null
      32: invokespecial #15                 // Method io/netty/handler/ssl/SslHandler$LazyChannelPromise."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/handler/ssl/SslHandler$1;)V
      35: putfield      #17                 // Field sslCloseFuture:Lio/netty/handler/ssl/SslHandler$LazyChannelPromise;
      38: aload_0
      39: ldc2_w        #18                 // long 10000l
      42: putfield      #20                 // Field handshakeTimeoutMillis:J
      45: aload_0
      46: ldc2_w        #21                 // long 3000l
      49: putfield      #23                 // Field closeNotifyTimeoutMillis:J
      52: aload_1
      53: ifnonnull     66
      56: new           #24                 // class java/lang/NullPointerException
      59: dup
      60: ldc           #25                 // String engine
      62: invokespecial #26                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload_3
      67: ifnonnull     80
      70: new           #24                 // class java/lang/NullPointerException
      73: dup
      74: ldc           #27                 // String delegatedTaskExecutor
      76: invokespecial #26                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: aload_0
      81: aload_1
      82: putfield      #6                  // Field engine:Ljavax/net/ssl/SSLEngine;
      85: aload_0
      86: aload_3
      87: putfield      #28                 // Field delegatedTaskExecutor:Ljava/util/concurrent/Executor;
      90: aload_0
      91: iload_2
      92: putfield      #29                 // Field startTls:Z
      95: aload_0
      96: aload_1
      97: invokevirtual #30                 // Method javax/net/ssl/SSLEngine.getSession:()Ljavax/net/ssl/SSLSession;
     100: invokeinterface #31,  1           // InterfaceMethod javax/net/ssl/SSLSession.getPacketBufferSize:()I
     105: putfield      #32                 // Field maxPacketBufferSize:I
     108: aload_1
     109: instanceof    #33                 // class io/netty/handler/ssl/OpenSslEngine
     112: istore        4
     114: aload_0
     115: iload         4
     117: putfield      #34                 // Field wantsDirectBuffer:Z
     120: aload_0
     121: iload         4
     123: ifne          130
     126: iconst_1
     127: goto          131
     130: iconst_0
     131: putfield      #35                 // Field wantsLargeOutboundNetworkBuffer:Z
     134: aload_0
     135: iload         4
     137: ifeq          146
     140: getstatic     #36                 // Field COMPOSITE_CUMULATOR:Lio/netty/handler/codec/ByteToMessageDecoder$Cumulator;
     143: goto          149
     146: getstatic     #37                 // Field MERGE_CUMULATOR:Lio/netty/handler/codec/ByteToMessageDecoder$Cumulator;
     149: invokevirtual #38                 // Method setCumulator:(Lio/netty/handler/codec/ByteToMessageDecoder$Cumulator;)V
     152: return

  public long getHandshakeTimeoutMillis();
    Code:
       0: aload_0
       1: getfield      #20                 // Field handshakeTimeoutMillis:J
       4: lreturn

  public void setHandshakeTimeout(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_3
       1: ifnonnull     14
       4: new           #24                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #39                 // String unit
      10: invokespecial #26                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_3
      16: lload_1
      17: invokevirtual #40                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      20: invokevirtual #41                 // Method setHandshakeTimeoutMillis:(J)V
      23: return

  public void setHandshakeTimeoutMillis(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          38
       6: new           #42                 // class java/lang/IllegalArgumentException
       9: dup
      10: new           #43                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #45                 // String handshakeTimeoutMillis:
      19: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: lload_1
      23: invokevirtual #47                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      26: ldc           #48                 // String  (expected: >= 0)
      28: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #50                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: lload_1
      40: putfield      #20                 // Field handshakeTimeoutMillis:J
      43: return

  public long getCloseNotifyTimeoutMillis();
    Code:
       0: aload_0
       1: getfield      #23                 // Field closeNotifyTimeoutMillis:J
       4: lreturn

  public void setCloseNotifyTimeout(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_3
       1: ifnonnull     14
       4: new           #24                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #39                 // String unit
      10: invokespecial #26                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_3
      16: lload_1
      17: invokevirtual #40                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      20: invokevirtual #51                 // Method setCloseNotifyTimeoutMillis:(J)V
      23: return

  public void setCloseNotifyTimeoutMillis(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          38
       6: new           #42                 // class java/lang/IllegalArgumentException
       9: dup
      10: new           #43                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #52                 // String closeNotifyTimeoutMillis:
      19: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: lload_1
      23: invokevirtual #47                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      26: ldc           #48                 // String  (expected: >= 0)
      28: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #50                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: lload_1
      40: putfield      #23                 // Field closeNotifyTimeoutMillis:J
      43: return

  public javax.net.ssl.SSLEngine engine();
    Code:
       0: aload_0
       1: getfield      #6                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: areturn

  public java.lang.String applicationProtocol();
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method engine:()Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #30                 // Method javax/net/ssl/SSLEngine.getSession:()Ljavax/net/ssl/SSLSession;
       7: astore_1
       8: aload_1
       9: instanceof    #54                 // class io/netty/handler/ssl/ApplicationProtocolAccessor
      12: ifne          17
      15: aconst_null
      16: areturn
      17: aload_1
      18: checkcast     #54                 // class io/netty/handler/ssl/ApplicationProtocolAccessor
      21: invokeinterface #55,  1           // InterfaceMethod io/netty/handler/ssl/ApplicationProtocolAccessor.getApplicationProtocol:()Ljava/lang/String;
      26: areturn

  public io.netty.util.concurrent.Future<io.netty.channel.Channel> handshakeFuture();
    Code:
       0: aload_0
       1: getfield      #16                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
       4: areturn

  public io.netty.channel.ChannelFuture close();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       5: invokeinterface #56,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      10: invokevirtual #57                 // Method close:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      13: areturn

  public io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: astore_2
       5: aload_2
       6: invokeinterface #58,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      11: new           #59                 // class io/netty/handler/ssl/SslHandler$1
      14: dup
      15: aload_0
      16: aload_2
      17: aload_1
      18: invokespecial #60                 // Method io/netty/handler/ssl/SslHandler$1."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      21: invokeinterface #61,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      26: aload_1
      27: areturn

  public io.netty.util.concurrent.Future<io.netty.channel.Channel> sslCloseFuture();
    Code:
       0: aload_0
       1: getfield      #17                 // Field sslCloseFuture:Lio/netty/handler/ssl/SslHandler$LazyChannelPromise;
       4: areturn

  public void handlerRemoved0(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #62                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
       4: invokevirtual #63                 // Method io/netty/channel/PendingWriteQueue.isEmpty:()Z
       7: ifne          26
      10: aload_0
      11: getfield      #62                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
      14: new           #64                 // class io/netty/channel/ChannelException
      17: dup
      18: ldc           #65                 // String Pending write on removal of SslHandler
      20: invokespecial #66                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/String;)V
      23: invokevirtual #67                 // Method io/netty/channel/PendingWriteQueue.removeAndFailAll:(Ljava/lang/Throwable;)V
      26: return

  public void bind(io.netty.channel.ChannelHandlerContext, java.net.SocketAddress, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokeinterface #68,  3           // InterfaceMethod io/netty/channel/ChannelHandlerContext.bind:(Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: pop
       9: return

  public void connect(io.netty.channel.ChannelHandlerContext, java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: aload         4
       5: invokeinterface #69,  4           // InterfaceMethod io/netty/channel/ChannelHandlerContext.connect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      10: pop
      11: return

  public void deregister(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #70,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.deregister:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       7: pop
       8: return

  public void disconnect(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #71                 // Method closeOutboundAndChannel:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;Z)V
       7: return

  public void close(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokespecial #71                 // Method closeOutboundAndChannel:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;Z)V
       7: return

  public void read(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #16                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
       4: invokeinterface #72,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
       9: ifne          17
      12: aload_0
      13: iconst_1
      14: putfield      #73                 // Field readDuringHandshake:Z
      17: aload_1
      18: invokeinterface #74,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.read:()Lio/netty/channel/ChannelHandlerContext;
      23: pop
      24: return

  public void write(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_2
       1: instanceof    #75                 // class io/netty/buffer/ByteBuf
       4: ifne          33
       7: aload_3
       8: new           #76                 // class io/netty/handler/codec/UnsupportedMessageTypeException
      11: dup
      12: aload_2
      13: iconst_1
      14: anewarray     #77                 // class java/lang/Class
      17: dup
      18: iconst_0
      19: ldc_w         #75                 // class io/netty/buffer/ByteBuf
      22: aastore
      23: invokespecial #78                 // Method io/netty/handler/codec/UnsupportedMessageTypeException."<init>":(Ljava/lang/Object;[Ljava/lang/Class;)V
      26: invokeinterface #79,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      31: pop
      32: return
      33: aload_0
      34: getfield      #62                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
      37: aload_2
      38: aload_3
      39: invokevirtual #80                 // Method io/netty/channel/PendingWriteQueue.add:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V
      42: return

  public void flush(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #29                 // Field startTls:Z
       4: ifeq          35
       7: aload_0
       8: getfield      #81                 // Field sentFirstMessage:Z
      11: ifne          35
      14: aload_0
      15: iconst_1
      16: putfield      #81                 // Field sentFirstMessage:Z
      19: aload_0
      20: getfield      #62                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
      23: invokevirtual #82                 // Method io/netty/channel/PendingWriteQueue.removeAndWriteAll:()Lio/netty/channel/ChannelFuture;
      26: pop
      27: aload_1
      28: invokeinterface #83,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
      33: pop
      34: return
      35: aload_0
      36: getfield      #62                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
      39: invokevirtual #63                 // Method io/netty/channel/PendingWriteQueue.isEmpty:()Z
      42: ifeq          61
      45: aload_0
      46: getfield      #62                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
      49: getstatic     #84                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
      52: aload_1
      53: invokeinterface #56,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      58: invokevirtual #80                 // Method io/netty/channel/PendingWriteQueue.add:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V
      61: aload_0
      62: getfield      #16                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
      65: invokeinterface #72,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
      70: ifne          78
      73: aload_0
      74: iconst_1
      75: putfield      #85                 // Field flushedBeforeHandshake:Z
      78: aload_0
      79: aload_1
      80: iconst_0
      81: invokespecial #86                 // Method wrap:(Lio/netty/channel/ChannelHandlerContext;Z)V
      84: aload_1
      85: invokeinterface #83,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
      90: pop
      91: return

  private void wrap(io.netty.channel.ChannelHandlerContext, boolean) throws javax.net.ssl.SSLException;
    Code:
       0: aconst_null
       1: astore_3
       2: aconst_null
       3: astore        4
       5: aload_1
       6: invokeinterface #87,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
      11: astore        5
      13: aload_0
      14: getfield      #62                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
      17: invokevirtual #88                 // Method io/netty/channel/PendingWriteQueue.current:()Ljava/lang/Object;
      20: astore        6
      22: aload         6
      24: ifnonnull     30
      27: goto          245
      30: aload         6
      32: checkcast     #75                 // class io/netty/buffer/ByteBuf
      35: astore        7
      37: aload_3
      38: ifnonnull     52
      41: aload_0
      42: aload_1
      43: aload         7
      45: invokevirtual #89                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      48: invokespecial #90                 // Method allocateOutNetBuf:(Lio/netty/channel/ChannelHandlerContext;I)Lio/netty/buffer/ByteBuf;
      51: astore_3
      52: aload_0
      53: aload         5
      55: aload_0
      56: getfield      #6                  // Field engine:Ljavax/net/ssl/SSLEngine;
      59: aload         7
      61: aload_3
      62: invokespecial #91                 // Method wrap:(Lio/netty/buffer/ByteBufAllocator;Ljavax/net/ssl/SSLEngine;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)Ljavax/net/ssl/SSLEngineResult;
      65: astore        8
      67: aload         7
      69: invokevirtual #92                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
      72: ifne          87
      75: aload_0
      76: getfield      #62                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
      79: invokevirtual #93                 // Method io/netty/channel/PendingWriteQueue.remove:()Lio/netty/channel/ChannelPromise;
      82: astore        4
      84: goto          90
      87: aconst_null
      88: astore        4
      90: aload         8
      92: invokevirtual #94                 // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
      95: getstatic     #95                 // Field javax/net/ssl/SSLEngineResult$Status.CLOSED:Ljavax/net/ssl/SSLEngineResult$Status;
      98: if_acmpne     121
     101: aload_0
     102: getfield      #62                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
     105: getstatic     #96                 // Field SSLENGINE_CLOSED:Ljavax/net/ssl/SSLException;
     108: invokevirtual #67                 // Method io/netty/channel/PendingWriteQueue.removeAndFailAll:(Ljava/lang/Throwable;)V
     111: aload_0
     112: aload_1
     113: aload_3
     114: aload         4
     116: iload_2
     117: invokespecial #97                 // Method finishWrap:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/channel/ChannelPromise;Z)V
     120: return
     121: getstatic     #98                 // Field io/netty/handler/ssl/SslHandler$9.$SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus:[I
     124: aload         8
     126: invokevirtual #99                 // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     129: invokevirtual #100                // Method javax/net/ssl/SSLEngineResult$HandshakeStatus.ordinal:()I
     132: iaload
     133: tableswitch   { // 1 to 5
                     1: 168
                     2: 175
                     3: 179
                     4: 184
                     5: 201
               default: 211
          }
     168: aload_0
     169: invokespecial #101                // Method runDelegatedTasks:()V
     172: goto          242
     175: aload_0
     176: invokespecial #102                // Method setHandshakeSuccess:()V
     179: aload_0
     180: invokespecial #103                // Method setHandshakeSuccessIfStillHandshaking:()Z
     183: pop
     184: aload_0
     185: aload_1
     186: aload_3
     187: aload         4
     189: iload_2
     190: invokespecial #97                 // Method finishWrap:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/channel/ChannelPromise;Z)V
     193: aconst_null
     194: astore        4
     196: aconst_null
     197: astore_3
     198: goto          242
     201: aload_0
     202: aload_1
     203: aload_3
     204: aload         4
     206: iload_2
     207: invokespecial #97                 // Method finishWrap:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/channel/ChannelPromise;Z)V
     210: return
     211: new           #104                // class java/lang/IllegalStateException
     214: dup
     215: new           #43                 // class java/lang/StringBuilder
     218: dup
     219: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     222: ldc           #105                // String Unknown handshake status:
     224: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     227: aload         8
     229: invokevirtual #99                 // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     232: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     235: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     238: invokespecial #107                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     241: athrow
     242: goto          13
     245: aload_0
     246: aload_1
     247: aload_3
     248: aload         4
     250: iload_2
     251: invokespecial #97                 // Method finishWrap:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/channel/ChannelPromise;Z)V
     254: goto          283
     257: astore        6
     259: aload_0
     260: aload_1
     261: aload         6
     263: invokespecial #109                // Method setHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
     266: aload         6
     268: athrow
     269: astore        9
     271: aload_0
     272: aload_1
     273: aload_3
     274: aload         4
     276: iload_2
     277: invokespecial #97                 // Method finishWrap:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/channel/ChannelPromise;Z)V
     280: aload         9
     282: athrow
     283: return
    Exception table:
       from    to  target type
          13   111   257   Class javax/net/ssl/SSLException
         121   201   257   Class javax/net/ssl/SSLException
         211   245   257   Class javax/net/ssl/SSLException
          13   111   269   any
         121   201   269   any
         211   245   269   any
         257   271   269   any

  private void finishWrap(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.channel.ChannelPromise, boolean);
    Code:
       0: aload_2
       1: ifnonnull     11
       4: getstatic     #84                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
       7: astore_2
       8: goto          27
      11: aload_2
      12: invokevirtual #92                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
      15: ifne          27
      18: aload_2
      19: invokevirtual #110                // Method io/netty/buffer/ByteBuf.release:()Z
      22: pop
      23: getstatic     #84                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
      26: astore_2
      27: aload_3
      28: ifnull        43
      31: aload_1
      32: aload_2
      33: aload_3
      34: invokeinterface #111,  3          // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      39: pop
      40: goto          51
      43: aload_1
      44: aload_2
      45: invokeinterface #112,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      50: pop
      51: iload         4
      53: ifeq          61
      56: aload_0
      57: iconst_1
      58: putfield      #113                // Field needsFlush:Z
      61: return

  private void wrapNonAppData(io.netty.channel.ChannelHandlerContext, boolean) throws javax.net.ssl.SSLException;
    Code:
       0: aconst_null
       1: astore_3
       2: aload_1
       3: invokeinterface #87,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
       8: astore        4
      10: aload_3
      11: ifnonnull     21
      14: aload_0
      15: aload_1
      16: iconst_0
      17: invokespecial #90                 // Method allocateOutNetBuf:(Lio/netty/channel/ChannelHandlerContext;I)Lio/netty/buffer/ByteBuf;
      20: astore_3
      21: aload_0
      22: aload         4
      24: aload_0
      25: getfield      #6                  // Field engine:Ljavax/net/ssl/SSLEngine;
      28: getstatic     #84                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
      31: aload_3
      32: invokespecial #91                 // Method wrap:(Lio/netty/buffer/ByteBufAllocator;Ljavax/net/ssl/SSLEngine;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)Ljavax/net/ssl/SSLEngineResult;
      35: astore        5
      37: aload         5
      39: invokevirtual #114                // Method javax/net/ssl/SSLEngineResult.bytesProduced:()I
      42: ifle          64
      45: aload_1
      46: aload_3
      47: invokeinterface #112,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      52: pop
      53: iload_2
      54: ifeq          62
      57: aload_0
      58: iconst_1
      59: putfield      #113                // Field needsFlush:Z
      62: aconst_null
      63: astore_3
      64: getstatic     #98                 // Field io/netty/handler/ssl/SslHandler$9.$SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus:[I
      67: aload         5
      69: invokevirtual #99                 // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
      72: invokevirtual #100                // Method javax/net/ssl/SSLEngineResult$HandshakeStatus.ordinal:()I
      75: iaload
      76: tableswitch   { // 1 to 5
                     1: 119
                     2: 112
                     3: 141
                     4: 138
                     5: 126
               default: 158
          }
     112: aload_0
     113: invokespecial #102                // Method setHandshakeSuccess:()V
     116: goto          189
     119: aload_0
     120: invokespecial #101                // Method runDelegatedTasks:()V
     123: goto          189
     126: iload_2
     127: ifne          189
     130: aload_0
     131: aload_1
     132: invokespecial #115                // Method unwrapNonAppData:(Lio/netty/channel/ChannelHandlerContext;)V
     135: goto          189
     138: goto          189
     141: aload_0
     142: invokespecial #103                // Method setHandshakeSuccessIfStillHandshaking:()Z
     145: pop
     146: iload_2
     147: ifne          189
     150: aload_0
     151: aload_1
     152: invokespecial #115                // Method unwrapNonAppData:(Lio/netty/channel/ChannelHandlerContext;)V
     155: goto          189
     158: new           #104                // class java/lang/IllegalStateException
     161: dup
     162: new           #43                 // class java/lang/StringBuilder
     165: dup
     166: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     169: ldc           #105                // String Unknown handshake status:
     171: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: aload         5
     176: invokevirtual #99                 // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     179: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     182: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     185: invokespecial #107                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     188: athrow
     189: aload         5
     191: invokevirtual #114                // Method javax/net/ssl/SSLEngineResult.bytesProduced:()I
     194: ifne          200
     197: goto          225
     200: aload         5
     202: invokevirtual #116                // Method javax/net/ssl/SSLEngineResult.bytesConsumed:()I
     205: ifne          222
     208: aload         5
     210: invokevirtual #99                 // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     213: getstatic     #117                // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.NOT_HANDSHAKING:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     216: if_acmpne     222
     219: goto          225
     222: goto          10
     225: aload_3
     226: ifnull        263
     229: aload_3
     230: invokevirtual #110                // Method io/netty/buffer/ByteBuf.release:()Z
     233: pop
     234: goto          263
     237: astore        5
     239: aload_0
     240: aload_1
     241: aload         5
     243: invokespecial #109                // Method setHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
     246: aload         5
     248: athrow
     249: astore        6
     251: aload_3
     252: ifnull        260
     255: aload_3
     256: invokevirtual #110                // Method io/netty/buffer/ByteBuf.release:()Z
     259: pop
     260: aload         6
     262: athrow
     263: return
    Exception table:
       from    to  target type
          10   225   237   Class javax/net/ssl/SSLException
          10   225   249   any
         237   251   249   any

  private javax.net.ssl.SSLEngineResult wrap(io.netty.buffer.ByteBufAllocator, javax.net.ssl.SSLEngine, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf) throws javax.net.ssl.SSLException;
    Code:
       0: aconst_null
       1: astore        5
       3: aload_3
       4: invokevirtual #118                // Method io/netty/buffer/ByteBuf.readerIndex:()I
       7: istore        6
       9: aload_3
      10: invokevirtual #89                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      13: istore        7
      15: aload_3
      16: invokevirtual #119                // Method io/netty/buffer/ByteBuf.isDirect:()Z
      19: ifne          29
      22: aload_0
      23: getfield      #34                 // Field wantsDirectBuffer:Z
      26: ifne          74
      29: aload_3
      30: instanceof    #120                // class io/netty/buffer/CompositeByteBuf
      33: ifne          65
      36: aload_3
      37: invokevirtual #121                // Method io/netty/buffer/ByteBuf.nioBufferCount:()I
      40: iconst_1
      41: if_icmpne     65
      44: aload_0
      45: getfield      #13                 // Field singleBuffer:[Ljava/nio/ByteBuffer;
      48: astore        8
      50: aload         8
      52: iconst_0
      53: aload_3
      54: iload         6
      56: iload         7
      58: invokevirtual #122                // Method io/netty/buffer/ByteBuf.internalNioBuffer:(II)Ljava/nio/ByteBuffer;
      61: aastore
      62: goto          113
      65: aload_3
      66: invokevirtual #123                // Method io/netty/buffer/ByteBuf.nioBuffers:()[Ljava/nio/ByteBuffer;
      69: astore        8
      71: goto          113
      74: aload_1
      75: iload         7
      77: invokeinterface #124,  2          // InterfaceMethod io/netty/buffer/ByteBufAllocator.directBuffer:(I)Lio/netty/buffer/ByteBuf;
      82: astore        5
      84: aload         5
      86: aload_3
      87: iload         6
      89: iload         7
      91: invokevirtual #125                // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf;
      94: pop
      95: aload_0
      96: getfield      #13                 // Field singleBuffer:[Ljava/nio/ByteBuffer;
      99: astore        8
     101: aload         8
     103: iconst_0
     104: aload         5
     106: iconst_0
     107: iload         7
     109: invokevirtual #122                // Method io/netty/buffer/ByteBuf.internalNioBuffer:(II)Ljava/nio/ByteBuffer;
     112: aastore
     113: aload         4
     115: aload         4
     117: invokevirtual #126                // Method io/netty/buffer/ByteBuf.writerIndex:()I
     120: aload         4
     122: invokevirtual #127                // Method io/netty/buffer/ByteBuf.writableBytes:()I
     125: invokevirtual #128                // Method io/netty/buffer/ByteBuf.nioBuffer:(II)Ljava/nio/ByteBuffer;
     128: astore        9
     130: aload_2
     131: aload         8
     133: aload         9
     135: invokevirtual #129                // Method javax/net/ssl/SSLEngine.wrap:([Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
     138: astore        10
     140: aload_3
     141: aload         10
     143: invokevirtual #116                // Method javax/net/ssl/SSLEngineResult.bytesConsumed:()I
     146: invokevirtual #130                // Method io/netty/buffer/ByteBuf.skipBytes:(I)Lio/netty/buffer/ByteBuf;
     149: pop
     150: aload         4
     152: aload         4
     154: invokevirtual #126                // Method io/netty/buffer/ByteBuf.writerIndex:()I
     157: aload         10
     159: invokevirtual #114                // Method javax/net/ssl/SSLEngineResult.bytesProduced:()I
     162: iadd
     163: invokevirtual #131                // Method io/netty/buffer/ByteBuf.writerIndex:(I)Lio/netty/buffer/ByteBuf;
     166: pop
     167: getstatic     #132                // Field io/netty/handler/ssl/SslHandler$9.$SwitchMap$javax$net$ssl$SSLEngineResult$Status:[I
     170: aload         10
     172: invokevirtual #94                 // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     175: invokevirtual #133                // Method javax/net/ssl/SSLEngineResult$Status.ordinal:()I
     178: iaload
     179: lookupswitch  { // 1
                     1: 196
               default: 209
          }
     196: aload         4
     198: aload_0
     199: getfield      #32                 // Field maxPacketBufferSize:I
     202: invokevirtual #134                // Method io/netty/buffer/ByteBuf.ensureWritable:(I)Lio/netty/buffer/ByteBuf;
     205: pop
     206: goto          234
     209: aload         10
     211: astore        11
     213: aload_0
     214: getfield      #13                 // Field singleBuffer:[Ljava/nio/ByteBuffer;
     217: iconst_0
     218: aconst_null
     219: aastore
     220: aload         5
     222: ifnull        231
     225: aload         5
     227: invokevirtual #110                // Method io/netty/buffer/ByteBuf.release:()Z
     230: pop
     231: aload         11
     233: areturn
     234: goto          113
     237: astore        12
     239: aload_0
     240: getfield      #13                 // Field singleBuffer:[Ljava/nio/ByteBuffer;
     243: iconst_0
     244: aconst_null
     245: aastore
     246: aload         5
     248: ifnull        257
     251: aload         5
     253: invokevirtual #110                // Method io/netty/buffer/ByteBuf.release:()Z
     256: pop
     257: aload         12
     259: athrow
    Exception table:
       from    to  target type
           3   213   237   any
         234   239   237   any

  public void channelInactive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #135                // Field CHANNEL_CLOSED:Ljava/nio/channels/ClosedChannelException;
       5: aload_0
       6: getfield      #7                  // Field outboundClosed:Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: invokespecial #136                // Method setHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;Z)V
      20: aload_0
      21: aload_1
      22: invokespecial #137                // Method io/netty/handler/codec/ByteToMessageDecoder.channelInactive:(Lio/netty/channel/ChannelHandlerContext;)V
      25: return

  public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #138                // Method ignoreException:(Ljava/lang/Throwable;)Z
       5: ifeq          60
       8: getstatic     #5                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      11: invokeinterface #139,  1          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      16: ifeq          36
      19: getstatic     #5                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      22: ldc           #140                // String {} Swallowing a harmless \'connection reset by peer / broken pipe\' error that occurred while writing close_notify in response to the peer\'s close_notify
      24: aload_1
      25: invokeinterface #141,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      30: aload_2
      31: invokeinterface #142,  4          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      36: aload_1
      37: invokeinterface #141,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      42: invokeinterface #143,  1          // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      47: ifeq          68
      50: aload_1
      51: invokeinterface #144,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
      56: pop
      57: goto          68
      60: aload_1
      61: aload_2
      62: invokeinterface #145,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelHandlerContext;
      67: pop
      68: return

  private boolean ignoreException(java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #108                // class javax/net/ssl/SSLException
       4: ifne          211
       7: aload_1
       8: instanceof    #146                // class java/io/IOException
      11: ifeq          211
      14: aload_0
      15: getfield      #17                 // Field sslCloseFuture:Lio/netty/handler/ssl/SslHandler$LazyChannelPromise;
      18: invokevirtual #147                // Method io/netty/handler/ssl/SslHandler$LazyChannelPromise.isDone:()Z
      21: ifeq          211
      24: aload_1
      25: invokevirtual #148                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      28: invokestatic  #149                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      31: invokevirtual #150                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      34: astore_2
      35: getstatic     #151                // Field IGNORABLE_ERROR_MESSAGE:Ljava/util/regex/Pattern;
      38: aload_2
      39: invokevirtual #152                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      42: invokevirtual #153                // Method java/util/regex/Matcher.matches:()Z
      45: ifeq          50
      48: iconst_1
      49: ireturn
      50: aload_1
      51: invokevirtual #154                // Method java/lang/Throwable.getStackTrace:()[Ljava/lang/StackTraceElement;
      54: astore_3
      55: aload_3
      56: astore        4
      58: aload         4
      60: arraylength
      61: istore        5
      63: iconst_0
      64: istore        6
      66: iload         6
      68: iload         5
      70: if_icmpge     211
      73: aload         4
      75: iload         6
      77: aaload
      78: astore        7
      80: aload         7
      82: invokevirtual #155                // Method java/lang/StackTraceElement.getClassName:()Ljava/lang/String;
      85: astore        8
      87: aload         7
      89: invokevirtual #156                // Method java/lang/StackTraceElement.getMethodName:()Ljava/lang/String;
      92: astore        9
      94: aload         8
      96: ldc           #157                // String io.netty.
      98: invokevirtual #158                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     101: ifeq          107
     104: goto          205
     107: ldc           #159                // String read
     109: aload         9
     111: invokevirtual #160                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     114: ifne          120
     117: goto          205
     120: getstatic     #161                // Field IGNORABLE_CLASS_IN_STACK:Ljava/util/regex/Pattern;
     123: aload         8
     125: invokevirtual #152                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
     128: invokevirtual #153                // Method java/util/regex/Matcher.matches:()Z
     131: ifeq          136
     134: iconst_1
     135: ireturn
     136: aload_0
     137: invokevirtual #162                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     140: invokestatic  #163                // Method io/netty/util/internal/PlatformDependent.getClassLoader:(Ljava/lang/Class;)Ljava/lang/ClassLoader;
     143: aload         8
     145: invokevirtual #164                // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
     148: astore        10
     150: ldc_w         #165                // class java/nio/channels/SocketChannel
     153: aload         10
     155: invokevirtual #166                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     158: ifne          172
     161: ldc_w         #167                // class java/nio/channels/DatagramChannel
     164: aload         10
     166: invokevirtual #166                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     169: ifeq          174
     172: iconst_1
     173: ireturn
     174: invokestatic  #168                // Method io/netty/util/internal/PlatformDependent.javaVersion:()I
     177: bipush        7
     179: if_icmplt     200
     182: ldc           #169                // String com.sun.nio.sctp.SctpChannel
     184: aload         10
     186: invokevirtual #170                // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
     189: invokevirtual #171                // Method java/lang/Class.getName:()Ljava/lang/String;
     192: invokevirtual #160                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     195: ifeq          200
     198: iconst_1
     199: ireturn
     200: goto          205
     203: astore        10
     205: iinc          6, 1
     208: goto          66
     211: iconst_0
     212: ireturn
    Exception table:
       from    to  target type
         136   173   203   Class java/lang/ClassNotFoundException
         174   199   203   Class java/lang/ClassNotFoundException

  public static boolean isEncrypted(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: invokevirtual #89                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       4: iconst_5
       5: if_icmpge     18
       8: new           #42                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #173                // String buffer must have at least 5 readable bytes
      14: invokespecial #50                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_0
      20: invokevirtual #118                // Method io/netty/buffer/ByteBuf.readerIndex:()I
      23: invokestatic  #174                // Method getEncryptedPacketLength:(Lio/netty/buffer/ByteBuf;I)I
      26: iconst_m1
      27: if_icmpeq     34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  private static int getEncryptedPacketLength(io.netty.buffer.ByteBuf, int);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: iload_1
       4: invokevirtual #175                // Method io/netty/buffer/ByteBuf.getUnsignedByte:(I)S
       7: tableswitch   { // 20 to 23
                    20: 36
                    21: 36
                    22: 36
                    23: 36
               default: 41
          }
      36: iconst_1
      37: istore_3
      38: goto          43
      41: iconst_0
      42: istore_3
      43: iload_3
      44: ifeq          84
      47: aload_0
      48: iload_1
      49: iconst_1
      50: iadd
      51: invokevirtual #175                // Method io/netty/buffer/ByteBuf.getUnsignedByte:(I)S
      54: istore        4
      56: iload         4
      58: iconst_3
      59: if_icmpne     82
      62: aload_0
      63: iload_1
      64: iconst_3
      65: iadd
      66: invokevirtual #176                // Method io/netty/buffer/ByteBuf.getUnsignedShort:(I)I
      69: iconst_5
      70: iadd
      71: istore_2
      72: iload_2
      73: iconst_5
      74: if_icmpgt     84
      77: iconst_0
      78: istore_3
      79: goto          84
      82: iconst_0
      83: istore_3
      84: iload_3
      85: ifne          189
      88: iconst_1
      89: istore        4
      91: aload_0
      92: iload_1
      93: invokevirtual #175                // Method io/netty/buffer/ByteBuf.getUnsignedByte:(I)S
      96: sipush        128
      99: iand
     100: ifeq          107
     103: iconst_2
     104: goto          108
     107: iconst_3
     108: istore        5
     110: aload_0
     111: iload_1
     112: iload         5
     114: iadd
     115: iconst_1
     116: iadd
     117: invokevirtual #175                // Method io/netty/buffer/ByteBuf.getUnsignedByte:(I)S
     120: istore        6
     122: iload         6
     124: iconst_2
     125: if_icmpeq     134
     128: iload         6
     130: iconst_3
     131: if_icmpne     179
     134: iload         5
     136: iconst_2
     137: if_icmpne     155
     140: aload_0
     141: iload_1
     142: invokevirtual #177                // Method io/netty/buffer/ByteBuf.getShort:(I)S
     145: sipush        32767
     148: iand
     149: iconst_2
     150: iadd
     151: istore_2
     152: goto          167
     155: aload_0
     156: iload_1
     157: invokevirtual #177                // Method io/netty/buffer/ByteBuf.getShort:(I)S
     160: sipush        16383
     163: iand
     164: iconst_3
     165: iadd
     166: istore_2
     167: iload_2
     168: iload         5
     170: if_icmpgt     182
     173: iconst_0
     174: istore        4
     176: goto          182
     179: iconst_0
     180: istore        4
     182: iload         4
     184: ifne          189
     187: iconst_m1
     188: ireturn
     189: iload_2
     190: ireturn

  protected void decode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List<java.lang.Object>) throws javax.net.ssl.SSLException;
    Code:
       0: aload_2
       1: invokevirtual #118                // Method io/netty/buffer/ByteBuf.readerIndex:()I
       4: istore        4
       6: aload_2
       7: invokevirtual #126                // Method io/netty/buffer/ByteBuf.writerIndex:()I
      10: istore        5
      12: iload         4
      14: istore        6
      16: iconst_0
      17: istore        7
      19: aload_0
      20: getfield      #178                // Field packetLength:I
      23: ifle          59
      26: iload         5
      28: iload         4
      30: isub
      31: aload_0
      32: getfield      #178                // Field packetLength:I
      35: if_icmpge     39
      38: return
      39: iload         6
      41: aload_0
      42: getfield      #178                // Field packetLength:I
      45: iadd
      46: istore        6
      48: aload_0
      49: getfield      #178                // Field packetLength:I
      52: istore        7
      54: aload_0
      55: iconst_0
      56: putfield      #178                // Field packetLength:I
      59: iconst_0
      60: istore        8
      62: iload         7
      64: sipush        18713
      67: if_icmpge     173
      70: iload         5
      72: iload         6
      74: isub
      75: istore        9
      77: iload         9
      79: iconst_5
      80: if_icmpge     86
      83: goto          173
      86: aload_2
      87: iload         6
      89: invokestatic  #174                // Method getEncryptedPacketLength:(Lio/netty/buffer/ByteBuf;I)I
      92: istore        10
      94: iload         10
      96: iconst_m1
      97: if_icmpne     106
     100: iconst_1
     101: istore        8
     103: goto          173
     106: getstatic     #179                // Field $assertionsDisabled:Z
     109: ifne          125
     112: iload         10
     114: ifgt          125
     117: new           #180                // class java/lang/AssertionError
     120: dup
     121: invokespecial #181                // Method java/lang/AssertionError."<init>":()V
     124: athrow
     125: iload         10
     127: iload         9
     129: if_icmple     141
     132: aload_0
     133: iload         10
     135: putfield      #178                // Field packetLength:I
     138: goto          173
     141: iload         7
     143: iload         10
     145: iadd
     146: istore        11
     148: iload         11
     150: sipush        18713
     153: if_icmple     159
     156: goto          173
     159: iload         6
     161: iload         10
     163: iadd
     164: istore        6
     166: iload         11
     168: istore        7
     170: goto          62
     173: iload         7
     175: ifle          288
     178: iconst_0
     179: istore        9
     181: aload_2
     182: iload         7
     184: invokevirtual #130                // Method io/netty/buffer/ByteBuf.skipBytes:(I)Lio/netty/buffer/ByteBuf;
     187: pop
     188: aload_2
     189: invokevirtual #119                // Method io/netty/buffer/ByteBuf.isDirect:()Z
     192: ifeq          263
     195: aload_0
     196: getfield      #182                // Field wantsInboundHeapBuffer:Z
     199: ifeq          263
     202: aload_1
     203: invokeinterface #87,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
     208: iload         7
     210: invokeinterface #183,  2          // InterfaceMethod io/netty/buffer/ByteBufAllocator.heapBuffer:(I)Lio/netty/buffer/ByteBuf;
     215: astore        10
     217: aload         10
     219: aload_2
     220: iload         4
     222: iload         7
     224: invokevirtual #125                // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf;
     227: pop
     228: aload_0
     229: aload_1
     230: aload         10
     232: iconst_0
     233: iload         7
     235: invokespecial #184                // Method unwrap:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;II)Z
     238: istore        9
     240: aload         10
     242: invokevirtual #110                // Method io/netty/buffer/ByteBuf.release:()Z
     245: pop
     246: goto          260
     249: astore        12
     251: aload         10
     253: invokevirtual #110                // Method io/netty/buffer/ByteBuf.release:()Z
     256: pop
     257: aload         12
     259: athrow
     260: goto          275
     263: aload_0
     264: aload_1
     265: aload_2
     266: iload         4
     268: iload         7
     270: invokespecial #184                // Method unwrap:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;II)Z
     273: istore        9
     275: aload_0
     276: getfield      #185                // Field firedChannelRead:Z
     279: ifne          288
     282: aload_0
     283: iload         9
     285: putfield      #185                // Field firedChannelRead:Z
     288: iload         8
     290: ifeq          349
     293: new           #186                // class io/netty/handler/ssl/NotSslRecordException
     296: dup
     297: new           #43                 // class java/lang/StringBuilder
     300: dup
     301: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     304: ldc           #187                // String not an SSL/TLS record:
     306: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     309: aload_2
     310: invokestatic  #188                // Method io/netty/buffer/ByteBufUtil.hexDump:(Lio/netty/buffer/ByteBuf;)Ljava/lang/String;
     313: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     316: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     319: invokespecial #189                // Method io/netty/handler/ssl/NotSslRecordException."<init>":(Ljava/lang/String;)V
     322: astore        9
     324: aload_2
     325: aload_2
     326: invokevirtual #89                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
     329: invokevirtual #130                // Method io/netty/buffer/ByteBuf.skipBytes:(I)Lio/netty/buffer/ByteBuf;
     332: pop
     333: aload_1
     334: aload         9
     336: invokeinterface #145,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelHandlerContext;
     341: pop
     342: aload_0
     343: aload_1
     344: aload         9
     346: invokespecial #109                // Method setHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
     349: return
    Exception table:
       from    to  target type
         217   240   249   any
         249   251   249   any

  public void channelReadComplete(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #190                // Method discardSomeReadBytes:()V
       4: aload_0
       5: getfield      #113                // Field needsFlush:Z
       8: ifeq          23
      11: aload_0
      12: iconst_0
      13: putfield      #113                // Field needsFlush:Z
      16: aload_1
      17: invokeinterface #83,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
      22: pop
      23: aload_1
      24: invokeinterface #141,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      29: invokeinterface #191,  1          // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      34: invokeinterface #192,  1          // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
      39: ifne          68
      42: aload_0
      43: getfield      #185                // Field firedChannelRead:Z
      46: ifeq          61
      49: aload_0
      50: getfield      #16                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
      53: invokeinterface #72,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
      58: ifne          68
      61: aload_1
      62: invokeinterface #74,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.read:()Lio/netty/channel/ChannelHandlerContext;
      67: pop
      68: aload_0
      69: iconst_0
      70: putfield      #185                // Field firedChannelRead:Z
      73: aload_1
      74: invokeinterface #193,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelReadComplete:()Lio/netty/channel/ChannelHandlerContext;
      79: pop
      80: return

  private void unwrapNonAppData(io.netty.channel.ChannelHandlerContext) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #84                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
       5: iconst_0
       6: iconst_0
       7: invokespecial #184                // Method unwrap:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;II)Z
      10: pop
      11: return

  private boolean unwrap(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, int, int) throws javax.net.ssl.SSLException;
    Code:
       0: iconst_0
       1: istore        5
       3: iconst_0
       4: istore        6
       6: iconst_0
       7: istore        7
       9: aload_0
      10: aload_1
      11: iload         4
      13: invokespecial #194                // Method allocate:(Lio/netty/channel/ChannelHandlerContext;I)Lio/netty/buffer/ByteBuf;
      16: astore        8
      18: aload_0
      19: aload_0
      20: getfield      #6                  // Field engine:Ljavax/net/ssl/SSLEngine;
      23: aload_2
      24: iload_3
      25: iload         4
      27: aload         8
      29: invokespecial #195                // Method unwrap:(Ljavax/net/ssl/SSLEngine;Lio/netty/buffer/ByteBuf;IILio/netty/buffer/ByteBuf;)Ljavax/net/ssl/SSLEngineResult;
      32: astore        9
      34: aload         9
      36: invokevirtual #94                 // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
      39: astore        10
      41: aload         9
      43: invokevirtual #99                 // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
      46: astore        11
      48: aload         9
      50: invokevirtual #114                // Method javax/net/ssl/SSLEngineResult.bytesProduced:()I
      53: istore        12
      55: aload         9
      57: invokevirtual #116                // Method javax/net/ssl/SSLEngineResult.bytesConsumed:()I
      60: istore        13
      62: iload_3
      63: iload         13
      65: iadd
      66: istore_3
      67: iload         4
      69: iload         13
      71: isub
      72: istore        4
      74: getstatic     #132                // Field io/netty/handler/ssl/SslHandler$9.$SwitchMap$javax$net$ssl$SSLEngineResult$Status:[I
      77: aload         10
      79: invokevirtual #133                // Method javax/net/ssl/SSLEngineResult$Status.ordinal:()I
      82: iaload
      83: lookupswitch  { // 2
                     1: 108
                     2: 166
               default: 172
          }
     108: aload         8
     110: invokevirtual #89                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
     113: istore        14
     115: iload         14
     117: ifle          135
     120: iconst_1
     121: istore        5
     123: aload_1
     124: aload         8
     126: invokeinterface #196,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
     131: pop
     132: goto          141
     135: aload         8
     137: invokevirtual #110                // Method io/netty/buffer/ByteBuf.release:()Z
     140: pop
     141: aload_0
     142: aload_1
     143: aload_0
     144: getfield      #6                  // Field engine:Ljavax/net/ssl/SSLEngine;
     147: invokevirtual #30                 // Method javax/net/ssl/SSLEngine.getSession:()Ljavax/net/ssl/SSLSession;
     150: invokeinterface #197,  1          // InterfaceMethod javax/net/ssl/SSLSession.getApplicationBufferSize:()I
     155: iload         14
     157: isub
     158: invokespecial #194                // Method allocate:(Lio/netty/channel/ChannelHandlerContext;I)Lio/netty/buffer/ByteBuf;
     161: astore        8
     163: goto          18
     166: iconst_1
     167: istore        7
     169: goto          172
     172: getstatic     #98                 // Field io/netty/handler/ssl/SslHandler$9.$SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus:[I
     175: aload         11
     177: invokevirtual #100                // Method javax/net/ssl/SSLEngineResult$HandshakeStatus.ordinal:()I
     180: iaload
     181: tableswitch   { // 1 to 5
                     1: 228
                     2: 235
                     3: 245
                     4: 219
                     5: 216
               default: 276
          }
     216: goto          304
     219: aload_0
     220: aload_1
     221: iconst_1
     222: invokespecial #198                // Method wrapNonAppData:(Lio/netty/channel/ChannelHandlerContext;Z)V
     225: goto          304
     228: aload_0
     229: invokespecial #101                // Method runDelegatedTasks:()V
     232: goto          304
     235: aload_0
     236: invokespecial #102                // Method setHandshakeSuccess:()V
     239: iconst_1
     240: istore        6
     242: goto          18
     245: aload_0
     246: invokespecial #103                // Method setHandshakeSuccessIfStillHandshaking:()Z
     249: ifeq          258
     252: iconst_1
     253: istore        6
     255: goto          18
     258: aload_0
     259: getfield      #85                 // Field flushedBeforeHandshake:Z
     262: ifeq          304
     265: aload_0
     266: iconst_0
     267: putfield      #85                 // Field flushedBeforeHandshake:Z
     270: iconst_1
     271: istore        6
     273: goto          304
     276: new           #104                // class java/lang/IllegalStateException
     279: dup
     280: new           #43                 // class java/lang/StringBuilder
     283: dup
     284: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
     287: ldc           #199                // String unknown handshake status:
     289: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     292: aload         11
     294: invokevirtual #106                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     297: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     300: invokespecial #107                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     303: athrow
     304: aload         10
     306: getstatic     #200                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_UNDERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
     309: if_acmpeq     328
     312: iload         13
     314: ifne          325
     317: iload         12
     319: ifne          325
     322: goto          328
     325: goto          18
     328: iload         6
     330: ifeq          339
     333: aload_0
     334: aload_1
     335: iconst_1
     336: invokespecial #86                 // Method wrap:(Lio/netty/channel/ChannelHandlerContext;Z)V
     339: iload         7
     341: ifeq          358
     344: aload_0
     345: getfield      #17                 // Field sslCloseFuture:Lio/netty/handler/ssl/SslHandler$LazyChannelPromise;
     348: aload_1
     349: invokeinterface #141,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
     354: invokevirtual #201                // Method io/netty/handler/ssl/SslHandler$LazyChannelPromise.trySuccess:(Ljava/lang/Object;)Z
     357: pop
     358: aload         8
     360: invokevirtual #92                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
     363: ifeq          381
     366: iconst_1
     367: istore        5
     369: aload_1
     370: aload         8
     372: invokeinterface #196,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
     377: pop
     378: goto          436
     381: aload         8
     383: invokevirtual #110                // Method io/netty/buffer/ByteBuf.release:()Z
     386: pop
     387: goto          436
     390: astore        9
     392: aload_0
     393: aload_1
     394: aload         9
     396: invokespecial #109                // Method setHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
     399: aload         9
     401: athrow
     402: astore        15
     404: aload         8
     406: invokevirtual #92                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
     409: ifeq          427
     412: iconst_1
     413: istore        5
     415: aload_1
     416: aload         8
     418: invokeinterface #196,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
     423: pop
     424: goto          433
     427: aload         8
     429: invokevirtual #110                // Method io/netty/buffer/ByteBuf.release:()Z
     432: pop
     433: aload         15
     435: athrow
     436: iload         5
     438: ireturn
    Exception table:
       from    to  target type
          18   358   390   Class javax/net/ssl/SSLException
          18   358   402   any
         390   404   402   any

  private javax.net.ssl.SSLEngineResult unwrap(javax.net.ssl.SSLEngine, io.netty.buffer.ByteBuf, int, int, io.netty.buffer.ByteBuf) throws javax.net.ssl.SSLException;
    Code:
       0: aload_2
       1: invokevirtual #121                // Method io/netty/buffer/ByteBuf.nioBufferCount:()I
       4: istore        6
       6: aload         5
       8: invokevirtual #126                // Method io/netty/buffer/ByteBuf.writerIndex:()I
      11: istore        7
      13: aload_1
      14: instanceof    #33                 // class io/netty/handler/ssl/OpenSslEngine
      17: ifeq          107
      20: iload         6
      22: iconst_1
      23: if_icmple     107
      26: aload_1
      27: checkcast     #33                 // class io/netty/handler/ssl/OpenSslEngine
      30: astore        9
      32: aload_0
      33: getfield      #13                 // Field singleBuffer:[Ljava/nio/ByteBuffer;
      36: iconst_0
      37: aload         5
      39: iload         7
      41: aload         5
      43: invokevirtual #127                // Method io/netty/buffer/ByteBuf.writableBytes:()I
      46: invokestatic  #202                // Method toByteBuffer:(Lio/netty/buffer/ByteBuf;II)Ljava/nio/ByteBuffer;
      49: aastore
      50: aload         9
      52: aload_2
      53: iload_3
      54: iload         4
      56: invokevirtual #203                // Method io/netty/buffer/ByteBuf.nioBuffers:(II)[Ljava/nio/ByteBuffer;
      59: aload_0
      60: getfield      #13                 // Field singleBuffer:[Ljava/nio/ByteBuffer;
      63: invokevirtual #204                // Method io/netty/handler/ssl/OpenSslEngine.unwrap:([Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
      66: astore        8
      68: aload         5
      70: iload         7
      72: aload         8
      74: invokevirtual #114                // Method javax/net/ssl/SSLEngineResult.bytesProduced:()I
      77: iadd
      78: invokevirtual #131                // Method io/netty/buffer/ByteBuf.writerIndex:(I)Lio/netty/buffer/ByteBuf;
      81: pop
      82: aload_0
      83: getfield      #13                 // Field singleBuffer:[Ljava/nio/ByteBuffer;
      86: iconst_0
      87: aconst_null
      88: aastore
      89: goto          104
      92: astore        10
      94: aload_0
      95: getfield      #13                 // Field singleBuffer:[Ljava/nio/ByteBuffer;
      98: iconst_0
      99: aconst_null
     100: aastore
     101: aload         10
     103: athrow
     104: goto          132
     107: aload_1
     108: aload_2
     109: iload_3
     110: iload         4
     112: invokestatic  #202                // Method toByteBuffer:(Lio/netty/buffer/ByteBuf;II)Ljava/nio/ByteBuffer;
     115: aload         5
     117: iload         7
     119: aload         5
     121: invokevirtual #127                // Method io/netty/buffer/ByteBuf.writableBytes:()I
     124: invokestatic  #202                // Method toByteBuffer:(Lio/netty/buffer/ByteBuf;II)Ljava/nio/ByteBuffer;
     127: invokevirtual #205                // Method javax/net/ssl/SSLEngine.unwrap:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
     130: astore        8
     132: aload         5
     134: iload         7
     136: aload         8
     138: invokevirtual #114                // Method javax/net/ssl/SSLEngineResult.bytesProduced:()I
     141: iadd
     142: invokevirtual #131                // Method io/netty/buffer/ByteBuf.writerIndex:(I)Lio/netty/buffer/ByteBuf;
     145: pop
     146: aload         8
     148: areturn
    Exception table:
       from    to  target type
          32    82    92   any
          92    94    92   any

  private static java.nio.ByteBuffer toByteBuffer(io.netty.buffer.ByteBuf, int, int);
    Code:
       0: aload_0
       1: invokevirtual #121                // Method io/netty/buffer/ByteBuf.nioBufferCount:()I
       4: iconst_1
       5: if_icmpne     17
       8: aload_0
       9: iload_1
      10: iload_2
      11: invokevirtual #122                // Method io/netty/buffer/ByteBuf.internalNioBuffer:(II)Ljava/nio/ByteBuffer;
      14: goto          23
      17: aload_0
      18: iload_1
      19: iload_2
      20: invokevirtual #128                // Method io/netty/buffer/ByteBuf.nioBuffer:(II)Ljava/nio/ByteBuffer;
      23: areturn

  private void runDelegatedTasks();
    Code:
       0: aload_0
       1: getfield      #28                 // Field delegatedTaskExecutor:Ljava/util/concurrent/Executor;
       4: getstatic     #9                  // Field io/netty/util/concurrent/ImmediateExecutor.INSTANCE:Lio/netty/util/concurrent/ImmediateExecutor;
       7: if_acmpne     34
      10: aload_0
      11: getfield      #6                  // Field engine:Ljavax/net/ssl/SSLEngine;
      14: invokevirtual #206                // Method javax/net/ssl/SSLEngine.getDelegatedTask:()Ljava/lang/Runnable;
      17: astore_1
      18: aload_1
      19: ifnonnull     25
      22: goto          142
      25: aload_1
      26: invokeinterface #207,  1          // InterfaceMethod java/lang/Runnable.run:()V
      31: goto          10
      34: new           #208                // class java/util/ArrayList
      37: dup
      38: iconst_2
      39: invokespecial #209                // Method java/util/ArrayList."<init>":(I)V
      42: astore_1
      43: aload_0
      44: getfield      #6                  // Field engine:Ljavax/net/ssl/SSLEngine;
      47: invokevirtual #206                // Method javax/net/ssl/SSLEngine.getDelegatedTask:()Ljava/lang/Runnable;
      50: astore_2
      51: aload_2
      52: ifnonnull     58
      55: goto          69
      58: aload_1
      59: aload_2
      60: invokeinterface #210,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      65: pop
      66: goto          43
      69: aload_1
      70: invokeinterface #211,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      75: ifeq          79
      78: return
      79: new           #212                // class java/util/concurrent/CountDownLatch
      82: dup
      83: iconst_1
      84: invokespecial #213                // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      87: astore_2
      88: aload_0
      89: getfield      #28                 // Field delegatedTaskExecutor:Ljava/util/concurrent/Executor;
      92: new           #214                // class io/netty/handler/ssl/SslHandler$2
      95: dup
      96: aload_0
      97: aload_1
      98: aload_2
      99: invokespecial #215                // Method io/netty/handler/ssl/SslHandler$2."<init>":(Lio/netty/handler/ssl/SslHandler;Ljava/util/List;Ljava/util/concurrent/CountDownLatch;)V
     102: invokeinterface #216,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     107: iconst_0
     108: istore_3
     109: aload_2
     110: invokevirtual #217                // Method java/util/concurrent/CountDownLatch.getCount:()J
     113: lconst_0
     114: lcmp
     115: ifeq          132
     118: aload_2
     119: invokevirtual #218                // Method java/util/concurrent/CountDownLatch.await:()V
     122: goto          109
     125: astore        4
     127: iconst_1
     128: istore_3
     129: goto          109
     132: iload_3
     133: ifeq          142
     136: invokestatic  #220                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     139: invokevirtual #221                // Method java/lang/Thread.interrupt:()V
     142: return
    Exception table:
       from    to  target type
         118   122   125   Class java/lang/InterruptedException

  private boolean setHandshakeSuccessIfStillHandshaking();
    Code:
       0: aload_0
       1: getfield      #16                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
       4: invokeinterface #72,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
       9: ifne          18
      12: aload_0
      13: invokespecial #102                // Method setHandshakeSuccess:()V
      16: iconst_1
      17: ireturn
      18: iconst_0
      19: ireturn

  private void setHandshakeSuccess();
    Code:
       0: aload_0
       1: getfield      #6                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #30                 // Method javax/net/ssl/SSLEngine.getSession:()Ljavax/net/ssl/SSLSession;
       7: invokeinterface #222,  1          // InterfaceMethod javax/net/ssl/SSLSession.getCipherSuite:()Ljava/lang/String;
      12: invokestatic  #149                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      15: astore_1
      16: aload_0
      17: getfield      #34                 // Field wantsDirectBuffer:Z
      20: ifne          46
      23: aload_1
      24: ldc           #223                // String _GCM_
      26: invokevirtual #224                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      29: ifne          41
      32: aload_1
      33: ldc           #225                // String -GCM-
      35: invokevirtual #224                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      38: ifeq          46
      41: aload_0
      42: iconst_1
      43: putfield      #182                // Field wantsInboundHeapBuffer:Z
      46: aload_0
      47: getfield      #16                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
      50: aload_0
      51: getfield      #4                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      54: invokeinterface #141,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      59: invokeinterface #226,  2          // InterfaceMethod io/netty/util/concurrent/Promise.trySuccess:(Ljava/lang/Object;)Z
      64: pop
      65: getstatic     #5                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      68: invokeinterface #139,  1          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      73: ifeq          107
      76: getstatic     #5                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      79: ldc           #227                // String {} HANDSHAKEN: {}
      81: aload_0
      82: getfield      #4                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      85: invokeinterface #141,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      90: aload_0
      91: getfield      #6                  // Field engine:Ljavax/net/ssl/SSLEngine;
      94: invokevirtual #30                 // Method javax/net/ssl/SSLEngine.getSession:()Ljavax/net/ssl/SSLSession;
      97: invokeinterface #222,  1          // InterfaceMethod javax/net/ssl/SSLSession.getCipherSuite:()Ljava/lang/String;
     102: invokeinterface #142,  4          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     107: aload_0
     108: getfield      #4                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
     111: getstatic     #228                // Field io/netty/handler/ssl/SslHandshakeCompletionEvent.SUCCESS:Lio/netty/handler/ssl/SslHandshakeCompletionEvent;
     114: invokeinterface #229,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
     119: pop
     120: aload_0
     121: getfield      #73                 // Field readDuringHandshake:Z
     124: ifeq          164
     127: aload_0
     128: getfield      #4                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
     131: invokeinterface #141,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
     136: invokeinterface #191,  1          // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
     141: invokeinterface #192,  1          // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     146: ifne          164
     149: aload_0
     150: iconst_0
     151: putfield      #73                 // Field readDuringHandshake:Z
     154: aload_0
     155: getfield      #4                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
     158: invokeinterface #74,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.read:()Lio/netty/channel/ChannelHandlerContext;
     163: pop
     164: return

  private void setHandshakeFailure(io.netty.channel.ChannelHandlerContext, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #136                // Method setHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;Z)V
       7: return

  private void setHandshakeFailure(io.netty.channel.ChannelHandlerContext, java.lang.Throwable, boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #230                // Method javax/net/ssl/SSLEngine.closeOutbound:()V
       7: iload_3
       8: ifeq          63
      11: aload_0
      12: getfield      #6                  // Field engine:Ljavax/net/ssl/SSLEngine;
      15: invokevirtual #231                // Method javax/net/ssl/SSLEngine.closeInbound:()V
      18: goto          63
      21: astore        4
      23: aload         4
      25: invokevirtual #232                // Method javax/net/ssl/SSLException.getMessage:()Ljava/lang/String;
      28: astore        5
      30: aload         5
      32: ifnull        45
      35: aload         5
      37: ldc           #233                // String possible truncation attack
      39: invokevirtual #224                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      42: ifne          63
      45: getstatic     #5                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      48: ldc           #234                // String {} SSLEngine.closeInbound() raised an exception.
      50: aload_1
      51: invokeinterface #141,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      56: aload         4
      58: invokeinterface #142,  4          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      63: aload_0
      64: aload_2
      65: invokespecial #1                  // Method notifyHandshakeFailure:(Ljava/lang/Throwable;)V
      68: aload_0
      69: getfield      #62                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
      72: aload_2
      73: invokevirtual #67                 // Method io/netty/channel/PendingWriteQueue.removeAndFailAll:(Ljava/lang/Throwable;)V
      76: return
    Exception table:
       from    to  target type
          11    18    21   Class javax/net/ssl/SSLException

  private void notifyHandshakeFailure(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #16                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
       4: aload_1
       5: invokeinterface #235,  2          // InterfaceMethod io/netty/util/concurrent/Promise.tryFailure:(Ljava/lang/Throwable;)Z
      10: ifeq          41
      13: aload_0
      14: getfield      #4                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      17: new           #236                // class io/netty/handler/ssl/SslHandshakeCompletionEvent
      20: dup
      21: aload_1
      22: invokespecial #237                // Method io/netty/handler/ssl/SslHandshakeCompletionEvent."<init>":(Ljava/lang/Throwable;)V
      25: invokeinterface #229,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      30: pop
      31: aload_0
      32: getfield      #4                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      35: invokeinterface #144,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
      40: pop
      41: return

  private void closeOutboundAndChannel(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise, boolean) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #141,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: invokeinterface #143,  1          // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      11: ifne          38
      14: iload_3
      15: ifeq          29
      18: aload_1
      19: aload_2
      20: invokeinterface #238,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.disconnect:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      25: pop
      26: goto          37
      29: aload_1
      30: aload_2
      31: invokeinterface #239,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      36: pop
      37: return
      38: aload_0
      39: iconst_1
      40: putfield      #7                  // Field outboundClosed:Z
      43: aload_0
      44: getfield      #6                  // Field engine:Ljavax/net/ssl/SSLEngine;
      47: invokevirtual #230                // Method javax/net/ssl/SSLEngine.closeOutbound:()V
      50: aload_1
      51: invokeinterface #56,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      56: astore        4
      58: aload_0
      59: aload_1
      60: getstatic     #84                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
      63: aload         4
      65: invokevirtual #240                // Method write:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V
      68: aload_0
      69: aload_1
      70: invokevirtual #241                // Method flush:(Lio/netty/channel/ChannelHandlerContext;)V
      73: aload_0
      74: aload_1
      75: aload         4
      77: aload_2
      78: invokespecial #242                // Method safeClose:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
      81: return

  public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       5: aload_0
       6: new           #243                // class io/netty/channel/PendingWriteQueue
       9: dup
      10: aload_1
      11: invokespecial #244                // Method io/netty/channel/PendingWriteQueue."<init>":(Lio/netty/channel/ChannelHandlerContext;)V
      14: putfield      #62                 // Field pendingUnencryptedWrites:Lio/netty/channel/PendingWriteQueue;
      17: aload_1
      18: invokeinterface #141,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      23: invokeinterface #143,  1          // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      28: ifeq          46
      31: aload_0
      32: getfield      #6                  // Field engine:Ljavax/net/ssl/SSLEngine;
      35: invokevirtual #245                // Method javax/net/ssl/SSLEngine.getUseClientMode:()Z
      38: ifeq          46
      41: aload_0
      42: aconst_null
      43: invokespecial #3                  // Method handshake:(Lio/netty/util/concurrent/Promise;)V
      46: return

  public io.netty.util.concurrent.Future<io.netty.channel.Channel> renegotiate();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: astore_1
       5: aload_1
       6: ifnonnull     17
       9: new           #104                // class java/lang/IllegalStateException
      12: dup
      13: invokespecial #246                // Method java/lang/IllegalStateException."<init>":()V
      16: athrow
      17: aload_0
      18: aload_1
      19: invokeinterface #58,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      24: invokeinterface #247,  1          // InterfaceMethod io/netty/util/concurrent/EventExecutor.newPromise:()Lio/netty/util/concurrent/Promise;
      29: invokevirtual #248                // Method renegotiate:(Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Future;
      32: areturn

  public io.netty.util.concurrent.Future<io.netty.channel.Channel> renegotiate(io.netty.util.concurrent.Promise<io.netty.channel.Channel>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #24                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #249                // String promise
      10: invokespecial #26                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #4                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      18: astore_2
      19: aload_2
      20: ifnonnull     31
      23: new           #104                // class java/lang/IllegalStateException
      26: dup
      27: invokespecial #246                // Method java/lang/IllegalStateException."<init>":()V
      30: athrow
      31: aload_2
      32: invokeinterface #58,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      37: astore_3
      38: aload_3
      39: invokeinterface #250,  1          // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      44: ifne          64
      47: aload_3
      48: new           #251                // class io/netty/handler/ssl/SslHandler$3
      51: dup
      52: aload_0
      53: aload_1
      54: invokespecial #252                // Method io/netty/handler/ssl/SslHandler$3."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/util/concurrent/Promise;)V
      57: invokeinterface #61,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      62: aload_1
      63: areturn
      64: aload_0
      65: aload_1
      66: invokespecial #3                  // Method handshake:(Lio/netty/util/concurrent/Promise;)V
      69: aload_1
      70: areturn

  private void handshake(io.netty.util.concurrent.Promise<io.netty.channel.Channel>);
    Code:
       0: aload_1
       1: ifnull        45
       4: aload_0
       5: getfield      #16                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
       8: astore_3
       9: aload_3
      10: invokeinterface #72,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
      15: ifne          35
      18: aload_3
      19: new           #253                // class io/netty/handler/ssl/SslHandler$4
      22: dup
      23: aload_0
      24: aload_1
      25: invokespecial #254                // Method io/netty/handler/ssl/SslHandler$4."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/util/concurrent/Promise;)V
      28: invokeinterface #255,  2          // InterfaceMethod io/netty/util/concurrent/Promise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Promise;
      33: pop
      34: return
      35: aload_0
      36: aload_1
      37: dup
      38: astore_2
      39: putfield      #16                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
      42: goto          73
      45: aload_0
      46: getfield      #16                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
      49: astore_2
      50: getstatic     #179                // Field $assertionsDisabled:Z
      53: ifne          73
      56: aload_2
      57: invokeinterface #72,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
      62: ifeq          73
      65: new           #180                // class java/lang/AssertionError
      68: dup
      69: invokespecial #181                // Method java/lang/AssertionError."<init>":()V
      72: athrow
      73: aload_0
      74: getfield      #4                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      77: astore_3
      78: aload_0
      79: getfield      #6                  // Field engine:Ljavax/net/ssl/SSLEngine;
      82: invokevirtual #256                // Method javax/net/ssl/SSLEngine.beginHandshake:()V
      85: aload_0
      86: aload_3
      87: iconst_0
      88: invokespecial #198                // Method wrapNonAppData:(Lio/netty/channel/ChannelHandlerContext;Z)V
      91: aload_3
      92: invokeinterface #83,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
      97: pop
      98: goto          109
     101: astore        4
     103: aload_0
     104: aload         4
     106: invokespecial #1                  // Method notifyHandshakeFailure:(Ljava/lang/Throwable;)V
     109: aload_0
     110: getfield      #20                 // Field handshakeTimeoutMillis:J
     113: lstore        4
     115: lload         4
     117: lconst_0
     118: lcmp
     119: ifle          131
     122: aload_2
     123: invokeinterface #72,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
     128: ifeq          132
     131: return
     132: aload_3
     133: invokeinterface #58,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
     138: new           #258                // class io/netty/handler/ssl/SslHandler$5
     141: dup
     142: aload_0
     143: aload_2
     144: invokespecial #259                // Method io/netty/handler/ssl/SslHandler$5."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/util/concurrent/Promise;)V
     147: lload         4
     149: getstatic     #260                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     152: invokeinterface #261,  5          // InterfaceMethod io/netty/util/concurrent/EventExecutor.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
     157: astore        6
     159: aload_2
     160: new           #262                // class io/netty/handler/ssl/SslHandler$6
     163: dup
     164: aload_0
     165: aload         6
     167: invokespecial #263                // Method io/netty/handler/ssl/SslHandler$6."<init>":(Lio/netty/handler/ssl/SslHandler;Ljava/util/concurrent/ScheduledFuture;)V
     170: invokeinterface #255,  2          // InterfaceMethod io/netty/util/concurrent/Promise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Promise;
     175: pop
     176: return
    Exception table:
       from    to  target type
          78    98   101   Class java/lang/Exception

  public void channelActive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #29                 // Field startTls:Z
       4: ifne          22
       7: aload_0
       8: getfield      #6                  // Field engine:Ljavax/net/ssl/SSLEngine;
      11: invokevirtual #245                // Method javax/net/ssl/SSLEngine.getUseClientMode:()Z
      14: ifeq          22
      17: aload_0
      18: aconst_null
      19: invokespecial #3                  // Method handshake:(Lio/netty/util/concurrent/Promise;)V
      22: aload_1
      23: invokeinterface #264,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelActive:()Lio/netty/channel/ChannelHandlerContext;
      28: pop
      29: return

  private void safeClose(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelFuture, io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: invokeinterface #141,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: invokeinterface #143,  1          // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      11: ifne          23
      14: aload_1
      15: aload_3
      16: invokeinterface #239,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      21: pop
      22: return
      23: aload_0
      24: getfield      #23                 // Field closeNotifyTimeoutMillis:J
      27: lconst_0
      28: lcmp
      29: ifle          65
      32: aload_1
      33: invokeinterface #58,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      38: new           #265                // class io/netty/handler/ssl/SslHandler$7
      41: dup
      42: aload_0
      43: aload_1
      44: aload_3
      45: invokespecial #266                // Method io/netty/handler/ssl/SslHandler$7."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      48: aload_0
      49: getfield      #23                 // Field closeNotifyTimeoutMillis:J
      52: getstatic     #260                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      55: invokeinterface #261,  5          // InterfaceMethod io/netty/util/concurrent/EventExecutor.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
      60: astore        4
      62: goto          68
      65: aconst_null
      66: astore        4
      68: aload_2
      69: new           #267                // class io/netty/handler/ssl/SslHandler$8
      72: dup
      73: aload_0
      74: aload         4
      76: aload_1
      77: aload_3
      78: invokespecial #268                // Method io/netty/handler/ssl/SslHandler$8."<init>":(Lio/netty/handler/ssl/SslHandler;Ljava/util/concurrent/ScheduledFuture;Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      81: invokeinterface #269,  2          // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      86: pop
      87: return

  private io.netty.buffer.ByteBuf allocate(io.netty.channel.ChannelHandlerContext, int);
    Code:
       0: aload_1
       1: invokeinterface #87,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
       6: astore_3
       7: aload_0
       8: getfield      #34                 // Field wantsDirectBuffer:Z
      11: ifeq          22
      14: aload_3
      15: iload_2
      16: invokeinterface #124,  2          // InterfaceMethod io/netty/buffer/ByteBufAllocator.directBuffer:(I)Lio/netty/buffer/ByteBuf;
      21: areturn
      22: aload_3
      23: iload_2
      24: invokeinterface #270,  2          // InterfaceMethod io/netty/buffer/ByteBufAllocator.buffer:(I)Lio/netty/buffer/ByteBuf;
      29: areturn

  private io.netty.buffer.ByteBuf allocateOutNetBuf(io.netty.channel.ChannelHandlerContext, int);
    Code:
       0: aload_0
       1: getfield      #35                 // Field wantsLargeOutboundNetworkBuffer:Z
       4: ifeq          17
       7: aload_0
       8: aload_1
       9: aload_0
      10: getfield      #32                 // Field maxPacketBufferSize:I
      13: invokespecial #194                // Method allocate:(Lio/netty/channel/ChannelHandlerContext;I)Lio/netty/buffer/ByteBuf;
      16: areturn
      17: aload_0
      18: aload_1
      19: iload_2
      20: sipush        2329
      23: iadd
      24: aload_0
      25: getfield      #32                 // Field maxPacketBufferSize:I
      28: invokestatic  #271                // Method java/lang/Math.min:(II)I
      31: invokespecial #194                // Method allocate:(Lio/netty/channel/ChannelHandlerContext;I)Lio/netty/buffer/ByteBuf;
      34: areturn

  static boolean access$102(io.netty.handler.ssl.SslHandler, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #7                  // Field outboundClosed:Z
       6: ireturn

  static javax.net.ssl.SSLEngine access$200(io.netty.handler.ssl.SslHandler);
    Code:
       0: aload_0
       1: getfield      #6                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: areturn

  static io.netty.util.internal.logging.InternalLogger access$300();
    Code:
       0: getstatic     #5                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: areturn

  static io.netty.channel.ChannelHandlerContext access$400(io.netty.handler.ssl.SslHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  static void access$500(io.netty.handler.ssl.SslHandler, io.netty.util.concurrent.Promise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method handshake:(Lio/netty/util/concurrent/Promise;)V
       5: return

  static javax.net.ssl.SSLException access$600();
    Code:
       0: getstatic     #2                  // Field HANDSHAKE_TIMED_OUT:Ljavax/net/ssl/SSLException;
       3: areturn

  static void access$700(io.netty.handler.ssl.SslHandler, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method notifyHandshakeFailure:(Ljava/lang/Throwable;)V
       5: return

  static {};
    Code:
       0: ldc_w         #272                // class io/netty/handler/ssl/SslHandler
       3: invokevirtual #273                // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #179                // Field $assertionsDisabled:Z
      17: ldc_w         #272                // class io/netty/handler/ssl/SslHandler
      20: invokestatic  #274                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      23: putstatic     #5                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      26: ldc_w         #275                // String ^.*(?:Socket|Datagram|Sctp|Udt)Channel.*$
      29: invokestatic  #276                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      32: putstatic     #161                // Field IGNORABLE_CLASS_IN_STACK:Ljava/util/regex/Pattern;
      35: ldc_w         #277                // String ^.*(?:connection.*(?:reset|closed|abort|broken)|broken.*pipe).*$
      38: iconst_2
      39: invokestatic  #278                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;
      42: putstatic     #151                // Field IGNORABLE_ERROR_MESSAGE:Ljava/util/regex/Pattern;
      45: new           #108                // class javax/net/ssl/SSLException
      48: dup
      49: ldc_w         #279                // String SSLEngine closed already
      52: invokespecial #280                // Method javax/net/ssl/SSLException."<init>":(Ljava/lang/String;)V
      55: putstatic     #96                 // Field SSLENGINE_CLOSED:Ljavax/net/ssl/SSLException;
      58: new           #108                // class javax/net/ssl/SSLException
      61: dup
      62: ldc_w         #281                // String handshake timed out
      65: invokespecial #280                // Method javax/net/ssl/SSLException."<init>":(Ljava/lang/String;)V
      68: putstatic     #2                  // Field HANDSHAKE_TIMED_OUT:Ljavax/net/ssl/SSLException;
      71: new           #282                // class java/nio/channels/ClosedChannelException
      74: dup
      75: invokespecial #283                // Method java/nio/channels/ClosedChannelException."<init>":()V
      78: putstatic     #135                // Field CHANNEL_CLOSED:Ljava/nio/channels/ClosedChannelException;
      81: getstatic     #96                 // Field SSLENGINE_CLOSED:Ljavax/net/ssl/SSLException;
      84: getstatic     #284                // Field io/netty/util/internal/EmptyArrays.EMPTY_STACK_TRACE:[Ljava/lang/StackTraceElement;
      87: invokevirtual #285                // Method javax/net/ssl/SSLException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      90: getstatic     #2                  // Field HANDSHAKE_TIMED_OUT:Ljavax/net/ssl/SSLException;
      93: getstatic     #284                // Field io/netty/util/internal/EmptyArrays.EMPTY_STACK_TRACE:[Ljava/lang/StackTraceElement;
      96: invokevirtual #285                // Method javax/net/ssl/SSLException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      99: getstatic     #135                // Field CHANNEL_CLOSED:Ljava/nio/channels/ClosedChannelException;
     102: getstatic     #284                // Field io/netty/util/internal/EmptyArrays.EMPTY_STACK_TRACE:[Ljava/lang/StackTraceElement;
     105: invokevirtual #286                // Method java/nio/channels/ClosedChannelException.setStackTrace:([Ljava/lang/StackTraceElement;)V
     108: return
}
