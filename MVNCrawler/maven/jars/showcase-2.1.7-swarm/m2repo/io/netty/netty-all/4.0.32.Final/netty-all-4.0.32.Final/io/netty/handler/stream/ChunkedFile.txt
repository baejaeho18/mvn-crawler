Compiled from "ChunkedFile.java"
public class io.netty.handler.stream.ChunkedFile implements io.netty.handler.stream.ChunkedInput<io.netty.buffer.ByteBuf> {
  private final java.io.RandomAccessFile file;

  private final long startOffset;

  private final long endOffset;

  private final int chunkSize;

  private long offset;

  public io.netty.handler.stream.ChunkedFile(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        8192
       5: invokespecial #1                  // Method "<init>":(Ljava/io/File;I)V
       8: return

  public io.netty.handler.stream.ChunkedFile(java.io.File, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #2                  // class java/io/RandomAccessFile
       4: dup
       5: aload_1
       6: ldc           #3                  // String r
       8: invokespecial #4                  // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
      11: iload_2
      12: invokespecial #5                  // Method "<init>":(Ljava/io/RandomAccessFile;I)V
      15: return

  public io.netty.handler.stream.ChunkedFile(java.io.RandomAccessFile) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        8192
       5: invokespecial #5                  // Method "<init>":(Ljava/io/RandomAccessFile;I)V
       8: return

  public io.netty.handler.stream.ChunkedFile(java.io.RandomAccessFile, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: lconst_0
       3: aload_1
       4: invokevirtual #6                  // Method java/io/RandomAccessFile.length:()J
       7: iload_2
       8: invokespecial #7                  // Method "<init>":(Ljava/io/RandomAccessFile;JJI)V
      11: return

  public io.netty.handler.stream.ChunkedFile(java.io.RandomAccessFile, long, long, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #9                  // class java/lang/NullPointerException
      11: dup
      12: ldc           #10                 // String file
      14: invokespecial #11                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: lload_2
      19: lconst_0
      20: lcmp
      21: ifge          56
      24: new           #12                 // class java/lang/IllegalArgumentException
      27: dup
      28: new           #13                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #15                 // String offset:
      37: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: lload_2
      41: invokevirtual #17                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      44: ldc           #18                 // String  (expected: 0 or greater)
      46: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: lload         4
      58: lconst_0
      59: lcmp
      60: ifge          96
      63: new           #12                 // class java/lang/IllegalArgumentException
      66: dup
      67: new           #13                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #21                 // String length:
      76: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: lload         4
      81: invokevirtual #17                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      84: ldc           #18                 // String  (expected: 0 or greater)
      86: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      95: athrow
      96: iload         6
      98: ifgt          134
     101: new           #12                 // class java/lang/IllegalArgumentException
     104: dup
     105: new           #13                 // class java/lang/StringBuilder
     108: dup
     109: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     112: ldc           #22                 // String chunkSize:
     114: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: iload         6
     119: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     122: ldc           #24                 // String  (expected: a positive integer)
     124: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     130: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     133: athrow
     134: aload_0
     135: aload_1
     136: putfield      #25                 // Field file:Ljava/io/RandomAccessFile;
     139: aload_0
     140: aload_0
     141: lload_2
     142: dup2_x1
     143: putfield      #26                 // Field startOffset:J
     146: putfield      #27                 // Field offset:J
     149: aload_0
     150: lload_2
     151: lload         4
     153: ladd
     154: putfield      #28                 // Field endOffset:J
     157: aload_0
     158: iload         6
     160: putfield      #29                 // Field chunkSize:I
     163: aload_1
     164: lload_2
     165: invokevirtual #30                 // Method java/io/RandomAccessFile.seek:(J)V
     168: return

  public long startOffset();
    Code:
       0: aload_0
       1: getfield      #26                 // Field startOffset:J
       4: lreturn

  public long endOffset();
    Code:
       0: aload_0
       1: getfield      #28                 // Field endOffset:J
       4: lreturn

  public long currentOffset();
    Code:
       0: aload_0
       1: getfield      #27                 // Field offset:J
       4: lreturn

  public boolean isEndOfInput() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #27                 // Field offset:J
       4: aload_0
       5: getfield      #28                 // Field endOffset:J
       8: lcmp
       9: ifge          25
      12: aload_0
      13: getfield      #25                 // Field file:Ljava/io/RandomAccessFile;
      16: invokevirtual #31                 // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
      19: invokevirtual #32                 // Method java/nio/channels/FileChannel.isOpen:()Z
      22: ifne          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public void close() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #25                 // Field file:Ljava/io/RandomAccessFile;
       4: invokevirtual #33                 // Method java/io/RandomAccessFile.close:()V
       7: return

  public io.netty.buffer.ByteBuf readChunk(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #27                 // Field offset:J
       4: lstore_2
       5: lload_2
       6: aload_0
       7: getfield      #28                 // Field endOffset:J
      10: lcmp
      11: iflt          16
      14: aconst_null
      15: areturn
      16: aload_0
      17: getfield      #29                 // Field chunkSize:I
      20: i2l
      21: aload_0
      22: getfield      #28                 // Field endOffset:J
      25: lload_2
      26: lsub
      27: invokestatic  #34                 // Method java/lang/Math.min:(JJ)J
      30: l2i
      31: istore        4
      33: aload_1
      34: invokeinterface #35,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
      39: iload         4
      41: invokeinterface #36,  2           // InterfaceMethod io/netty/buffer/ByteBufAllocator.heapBuffer:(I)Lio/netty/buffer/ByteBuf;
      46: astore        5
      48: iconst_1
      49: istore        6
      51: aload_0
      52: getfield      #25                 // Field file:Ljava/io/RandomAccessFile;
      55: aload         5
      57: invokevirtual #37                 // Method io/netty/buffer/ByteBuf.array:()[B
      60: aload         5
      62: invokevirtual #38                 // Method io/netty/buffer/ByteBuf.arrayOffset:()I
      65: iload         4
      67: invokevirtual #39                 // Method java/io/RandomAccessFile.readFully:([BII)V
      70: aload         5
      72: iload         4
      74: invokevirtual #40                 // Method io/netty/buffer/ByteBuf.writerIndex:(I)Lio/netty/buffer/ByteBuf;
      77: pop
      78: aload_0
      79: lload_2
      80: iload         4
      82: i2l
      83: ladd
      84: putfield      #27                 // Field offset:J
      87: iconst_0
      88: istore        6
      90: aload         5
      92: astore        7
      94: iload         6
      96: ifeq          105
      99: aload         5
     101: invokevirtual #41                 // Method io/netty/buffer/ByteBuf.release:()Z
     104: pop
     105: aload         7
     107: areturn
     108: astore        8
     110: iload         6
     112: ifeq          121
     115: aload         5
     117: invokevirtual #41                 // Method io/netty/buffer/ByteBuf.release:()Z
     120: pop
     121: aload         8
     123: athrow
    Exception table:
       from    to  target type
          51    94   108   any
         108   110   108   any

  public java.lang.Object readChunk(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #42                 // Method readChunk:(Lio/netty/channel/ChannelHandlerContext;)Lio/netty/buffer/ByteBuf;
       5: areturn
}
