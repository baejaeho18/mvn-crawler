Compiled from "PoolChunkList.java"
final class io.netty.buffer.PoolChunkList<T> implements io.netty.buffer.PoolChunkListMetric {
  private static final java.util.Iterator<io.netty.buffer.PoolChunkMetric> EMPTY_METRICS;

  private final io.netty.buffer.PoolChunkList<T> nextList;

  private final int minUsage;

  private final int maxUsage;

  private io.netty.buffer.PoolChunk<T> head;

  private io.netty.buffer.PoolChunkList<T> prevList;

  static final boolean $assertionsDisabled;

  io.netty.buffer.PoolChunkList(io.netty.buffer.PoolChunkList<T>, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field nextList:Lio/netty/buffer/PoolChunkList;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field minUsage:I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field maxUsage:I
      19: return

  void prevList(io.netty.buffer.PoolChunkList<T>);
    Code:
       0: getstatic     #5                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #6                  // Field prevList:Lio/netty/buffer/PoolChunkList;
      10: ifnull        21
      13: new           #7                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #8                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_1
      23: putfield      #6                  // Field prevList:Lio/netty/buffer/PoolChunkList;
      26: return

  boolean allocate(io.netty.buffer.PooledByteBuf<T>, int, int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field head:Lio/netty/buffer/PoolChunk;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #9                  // Field head:Lio/netty/buffer/PoolChunk;
      13: astore        4
      15: aload         4
      17: iload_3
      18: invokevirtual #10                 // Method io/netty/buffer/PoolChunk.allocate:(I)J
      21: lstore        5
      23: lload         5
      25: lconst_0
      26: lcmp
      27: ifge          44
      30: aload         4
      32: getfield      #11                 // Field io/netty/buffer/PoolChunk.next:Lio/netty/buffer/PoolChunk;
      35: astore        4
      37: aload         4
      39: ifnonnull     82
      42: iconst_0
      43: ireturn
      44: aload         4
      46: aload_1
      47: lload         5
      49: iload_2
      50: invokevirtual #12                 // Method io/netty/buffer/PoolChunk.initBuf:(Lio/netty/buffer/PooledByteBuf;JI)V
      53: aload         4
      55: invokevirtual #13                 // Method io/netty/buffer/PoolChunk.usage:()I
      58: aload_0
      59: getfield      #4                  // Field maxUsage:I
      62: if_icmplt     80
      65: aload_0
      66: aload         4
      68: invokespecial #14                 // Method remove:(Lio/netty/buffer/PoolChunk;)V
      71: aload_0
      72: getfield      #2                  // Field nextList:Lio/netty/buffer/PoolChunkList;
      75: aload         4
      77: invokevirtual #15                 // Method add:(Lio/netty/buffer/PoolChunk;)V
      80: iconst_1
      81: ireturn
      82: goto          15

  boolean free(io.netty.buffer.PoolChunk<T>, long);
    Code:
       0: aload_1
       1: lload_2
       2: invokevirtual #16                 // Method io/netty/buffer/PoolChunk.free:(J)V
       5: aload_1
       6: invokevirtual #13                 // Method io/netty/buffer/PoolChunk.usage:()I
       9: aload_0
      10: getfield      #3                  // Field minUsage:I
      13: if_icmpge     61
      16: aload_0
      17: aload_1
      18: invokespecial #14                 // Method remove:(Lio/netty/buffer/PoolChunk;)V
      21: aload_0
      22: getfield      #6                  // Field prevList:Lio/netty/buffer/PoolChunkList;
      25: ifnonnull     51
      28: getstatic     #5                  // Field $assertionsDisabled:Z
      31: ifne          49
      34: aload_1
      35: invokevirtual #13                 // Method io/netty/buffer/PoolChunk.usage:()I
      38: ifeq          49
      41: new           #7                  // class java/lang/AssertionError
      44: dup
      45: invokespecial #8                  // Method java/lang/AssertionError."<init>":()V
      48: athrow
      49: iconst_0
      50: ireturn
      51: aload_0
      52: getfield      #6                  // Field prevList:Lio/netty/buffer/PoolChunkList;
      55: aload_1
      56: invokevirtual #15                 // Method add:(Lio/netty/buffer/PoolChunk;)V
      59: iconst_1
      60: ireturn
      61: iconst_1
      62: ireturn

  void add(io.netty.buffer.PoolChunk<T>);
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method io/netty/buffer/PoolChunk.usage:()I
       4: aload_0
       5: getfield      #4                  // Field maxUsage:I
       8: if_icmplt     20
      11: aload_0
      12: getfield      #2                  // Field nextList:Lio/netty/buffer/PoolChunkList;
      15: aload_1
      16: invokevirtual #15                 // Method add:(Lio/netty/buffer/PoolChunk;)V
      19: return
      20: aload_1
      21: aload_0
      22: putfield      #17                 // Field io/netty/buffer/PoolChunk.parent:Lio/netty/buffer/PoolChunkList;
      25: aload_0
      26: getfield      #9                  // Field head:Lio/netty/buffer/PoolChunk;
      29: ifnonnull     50
      32: aload_0
      33: aload_1
      34: putfield      #9                  // Field head:Lio/netty/buffer/PoolChunk;
      37: aload_1
      38: aconst_null
      39: putfield      #18                 // Field io/netty/buffer/PoolChunk.prev:Lio/netty/buffer/PoolChunk;
      42: aload_1
      43: aconst_null
      44: putfield      #11                 // Field io/netty/buffer/PoolChunk.next:Lio/netty/buffer/PoolChunk;
      47: goto          76
      50: aload_1
      51: aconst_null
      52: putfield      #18                 // Field io/netty/buffer/PoolChunk.prev:Lio/netty/buffer/PoolChunk;
      55: aload_1
      56: aload_0
      57: getfield      #9                  // Field head:Lio/netty/buffer/PoolChunk;
      60: putfield      #11                 // Field io/netty/buffer/PoolChunk.next:Lio/netty/buffer/PoolChunk;
      63: aload_0
      64: getfield      #9                  // Field head:Lio/netty/buffer/PoolChunk;
      67: aload_1
      68: putfield      #18                 // Field io/netty/buffer/PoolChunk.prev:Lio/netty/buffer/PoolChunk;
      71: aload_0
      72: aload_1
      73: putfield      #9                  // Field head:Lio/netty/buffer/PoolChunk;
      76: return

  private void remove(io.netty.buffer.PoolChunk<T>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #9                  // Field head:Lio/netty/buffer/PoolChunk;
       5: if_acmpne     34
       8: aload_0
       9: aload_1
      10: getfield      #11                 // Field io/netty/buffer/PoolChunk.next:Lio/netty/buffer/PoolChunk;
      13: putfield      #9                  // Field head:Lio/netty/buffer/PoolChunk;
      16: aload_0
      17: getfield      #9                  // Field head:Lio/netty/buffer/PoolChunk;
      20: ifnull        59
      23: aload_0
      24: getfield      #9                  // Field head:Lio/netty/buffer/PoolChunk;
      27: aconst_null
      28: putfield      #18                 // Field io/netty/buffer/PoolChunk.prev:Lio/netty/buffer/PoolChunk;
      31: goto          59
      34: aload_1
      35: getfield      #11                 // Field io/netty/buffer/PoolChunk.next:Lio/netty/buffer/PoolChunk;
      38: astore_2
      39: aload_1
      40: getfield      #18                 // Field io/netty/buffer/PoolChunk.prev:Lio/netty/buffer/PoolChunk;
      43: aload_2
      44: putfield      #11                 // Field io/netty/buffer/PoolChunk.next:Lio/netty/buffer/PoolChunk;
      47: aload_2
      48: ifnull        59
      51: aload_2
      52: aload_1
      53: getfield      #18                 // Field io/netty/buffer/PoolChunk.prev:Lio/netty/buffer/PoolChunk;
      56: putfield      #18                 // Field io/netty/buffer/PoolChunk.prev:Lio/netty/buffer/PoolChunk;
      59: return

  public int minUsage();
    Code:
       0: aload_0
       1: getfield      #3                  // Field minUsage:I
       4: ireturn

  public int maxUsage();
    Code:
       0: aload_0
       1: getfield      #4                  // Field maxUsage:I
       4: ireturn

  public java.util.Iterator<io.netty.buffer.PoolChunkMetric> iterator();
    Code:
       0: aload_0
       1: getfield      #9                  // Field head:Lio/netty/buffer/PoolChunk;
       4: ifnonnull     11
       7: getstatic     #19                 // Field EMPTY_METRICS:Ljava/util/Iterator;
      10: areturn
      11: new           #20                 // class java/util/ArrayList
      14: dup
      15: invokespecial #21                 // Method java/util/ArrayList."<init>":()V
      18: astore_1
      19: aload_0
      20: getfield      #9                  // Field head:Lio/netty/buffer/PoolChunk;
      23: astore_2
      24: aload_1
      25: aload_2
      26: invokeinterface #22,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      31: pop
      32: aload_2
      33: getfield      #11                 // Field io/netty/buffer/PoolChunk.next:Lio/netty/buffer/PoolChunk;
      36: astore_2
      37: aload_2
      38: ifnonnull     24
      41: goto          44
      44: aload_1
      45: invokeinterface #23,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      50: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #9                  // Field head:Lio/netty/buffer/PoolChunk;
       4: ifnonnull     10
       7: ldc           #24                 // String none
       9: areturn
      10: new           #25                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      17: astore_1
      18: aload_0
      19: getfield      #9                  // Field head:Lio/netty/buffer/PoolChunk;
      22: astore_2
      23: aload_1
      24: aload_2
      25: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      28: pop
      29: aload_2
      30: getfield      #11                 // Field io/netty/buffer/PoolChunk.next:Lio/netty/buffer/PoolChunk;
      33: astore_2
      34: aload_2
      35: ifnonnull     41
      38: goto          52
      41: aload_1
      42: getstatic     #28                 // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      45: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: pop
      49: goto          23
      52: aload_1
      53: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: areturn

  static {};
    Code:
       0: ldc_w         #31                 // class io/netty/buffer/PoolChunkList
       3: invokevirtual #32                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #5                  // Field $assertionsDisabled:Z
      17: invokestatic  #33                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      20: invokeinterface #23,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      25: putstatic     #19                 // Field EMPTY_METRICS:Ljava/util/Iterator;
      28: return
}
