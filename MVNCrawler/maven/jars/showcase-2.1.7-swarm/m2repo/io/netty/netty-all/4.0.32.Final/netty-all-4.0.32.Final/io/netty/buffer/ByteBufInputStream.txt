Compiled from "ByteBufInputStream.java"
public class io.netty.buffer.ByteBufInputStream extends java.io.InputStream implements java.io.DataInput {
  private final io.netty.buffer.ByteBuf buffer;

  private final int startIndex;

  private final int endIndex;

  private final java.lang.StringBuilder lineBuf;

  public io.netty.buffer.ByteBufInputStream(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #1                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
       6: invokespecial #2                  // Method "<init>":(Lio/netty/buffer/ByteBuf;I)V
       9: return

  public io.netty.buffer.ByteBufInputStream(io.netty.buffer.ByteBuf, int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: new           #4                  // class java/lang/StringBuilder
       8: dup
       9: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      12: putfield      #6                  // Field lineBuf:Ljava/lang/StringBuilder;
      15: aload_1
      16: ifnonnull     29
      19: new           #7                  // class java/lang/NullPointerException
      22: dup
      23: ldc           #8                  // String buffer
      25: invokespecial #9                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: iload_2
      30: ifge          60
      33: new           #10                 // class java/lang/IllegalArgumentException
      36: dup
      37: new           #4                  // class java/lang/StringBuilder
      40: dup
      41: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #11                 // String length:
      46: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: iload_2
      50: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: iload_2
      61: aload_1
      62: invokevirtual #1                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
      65: if_icmple     107
      68: new           #16                 // class java/lang/IndexOutOfBoundsException
      71: dup
      72: new           #4                  // class java/lang/StringBuilder
      75: dup
      76: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      79: ldc           #17                 // String Too many bytes to be read - Needs
      81: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: iload_2
      85: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      88: ldc           #18                 // String , maximum is
      90: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload_1
      94: invokevirtual #1                  // Method io/netty/buffer/ByteBuf.readableBytes:()I
      97: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     100: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: invokespecial #19                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
     106: athrow
     107: aload_0
     108: aload_1
     109: putfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
     112: aload_0
     113: aload_1
     114: invokevirtual #21                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
     117: putfield      #22                 // Field startIndex:I
     120: aload_0
     121: aload_0
     122: getfield      #22                 // Field startIndex:I
     125: iload_2
     126: iadd
     127: putfield      #23                 // Field endIndex:I
     130: aload_1
     131: invokevirtual #24                 // Method io/netty/buffer/ByteBuf.markReaderIndex:()Lio/netty/buffer/ByteBuf;
     134: pop
     135: return

  public int readBytes();
    Code:
       0: aload_0
       1: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
       4: invokevirtual #21                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
       7: aload_0
       8: getfield      #22                 // Field startIndex:I
      11: isub
      12: ireturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field endIndex:I
       4: aload_0
       5: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
       8: invokevirtual #21                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
      11: isub
      12: ireturn

  public void mark(int);
    Code:
       0: aload_0
       1: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
       4: invokevirtual #24                 // Method io/netty/buffer/ByteBuf.markReaderIndex:()Lio/netty/buffer/ByteBuf;
       7: pop
       8: return

  public boolean markSupported();
    Code:
       0: iconst_1
       1: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
       4: invokevirtual #25                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
       7: ifne          12
      10: iconst_m1
      11: ireturn
      12: aload_0
      13: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
      16: invokevirtual #26                 // Method io/netty/buffer/ByteBuf.readByte:()B
      19: sipush        255
      22: iand
      23: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method available:()I
       4: istore        4
       6: iload         4
       8: ifne          13
      11: iconst_m1
      12: ireturn
      13: iload         4
      15: iload_3
      16: invokestatic  #28                 // Method java/lang/Math.min:(II)I
      19: istore_3
      20: aload_0
      21: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
      24: aload_1
      25: iload_2
      26: iload_3
      27: invokevirtual #29                 // Method io/netty/buffer/ByteBuf.readBytes:([BII)Lio/netty/buffer/ByteBuf;
      30: pop
      31: iload_3
      32: ireturn

  public void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
       4: invokevirtual #30                 // Method io/netty/buffer/ByteBuf.resetReaderIndex:()Lio/netty/buffer/ByteBuf;
       7: pop
       8: return

  public long skip(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: ldc2_w        #31                 // long 2147483647l
       4: lcmp
       5: ifle          16
       8: aload_0
       9: ldc           #33                 // int 2147483647
      11: invokevirtual #34                 // Method skipBytes:(I)I
      14: i2l
      15: lreturn
      16: aload_0
      17: lload_1
      18: l2i
      19: invokevirtual #34                 // Method skipBytes:(I)I
      22: i2l
      23: lreturn

  public boolean readBoolean() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #35                 // Method checkAvailable:(I)V
       5: aload_0
       6: invokevirtual #36                 // Method read:()I
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public byte readByte() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
       4: invokevirtual #25                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
       7: ifne          18
      10: new           #37                 // class java/io/EOFException
      13: dup
      14: invokespecial #38                 // Method java/io/EOFException."<init>":()V
      17: athrow
      18: aload_0
      19: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
      22: invokevirtual #26                 // Method io/netty/buffer/ByteBuf.readByte:()B
      25: ireturn

  public char readChar() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method readShort:()S
       4: i2c
       5: ireturn

  public double readDouble() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method readLong:()J
       4: invokestatic  #41                 // Method java/lang/Double.longBitsToDouble:(J)D
       7: dreturn

  public float readFloat() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method readInt:()I
       4: invokestatic  #43                 // Method java/lang/Float.intBitsToFloat:(I)F
       7: freturn

  public void readFully(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #44                 // Method readFully:([BII)V
       8: return

  public void readFully(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_3
       2: invokespecial #35                 // Method checkAvailable:(I)V
       5: aload_0
       6: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
       9: aload_1
      10: iload_2
      11: iload_3
      12: invokevirtual #29                 // Method io/netty/buffer/ByteBuf.readBytes:([BII)Lio/netty/buffer/ByteBuf;
      15: pop
      16: return

  public int readInt() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_4
       2: invokespecial #35                 // Method checkAvailable:(I)V
       5: aload_0
       6: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
       9: invokevirtual #45                 // Method io/netty/buffer/ByteBuf.readInt:()I
      12: ireturn

  public java.lang.String readLine() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field lineBuf:Ljava/lang/StringBuilder;
       4: iconst_0
       5: invokevirtual #46                 // Method java/lang/StringBuilder.setLength:(I)V
       8: aload_0
       9: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
      12: invokevirtual #25                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
      15: ifne          40
      18: aload_0
      19: getfield      #6                  // Field lineBuf:Ljava/lang/StringBuilder;
      22: invokevirtual #47                 // Method java/lang/StringBuilder.length:()I
      25: ifle          38
      28: aload_0
      29: getfield      #6                  // Field lineBuf:Ljava/lang/StringBuilder;
      32: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: goto          39
      38: aconst_null
      39: areturn
      40: aload_0
      41: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
      44: invokevirtual #48                 // Method io/netty/buffer/ByteBuf.readUnsignedByte:()S
      47: istore_1
      48: iload_1
      49: lookupswitch  { // 2
                    10: 76
                    13: 79
               default: 121
          }
      76: goto          134
      79: aload_0
      80: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
      83: invokevirtual #25                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
      86: ifeq          134
      89: aload_0
      90: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
      93: aload_0
      94: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
      97: invokevirtual #21                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
     100: invokevirtual #49                 // Method io/netty/buffer/ByteBuf.getUnsignedByte:(I)S
     103: i2c
     104: bipush        10
     106: if_icmpne     134
     109: aload_0
     110: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
     113: iconst_1
     114: invokevirtual #50                 // Method io/netty/buffer/ByteBuf.skipBytes:(I)Lio/netty/buffer/ByteBuf;
     117: pop
     118: goto          134
     121: aload_0
     122: getfield      #6                  // Field lineBuf:Ljava/lang/StringBuilder;
     125: iload_1
     126: i2c
     127: invokevirtual #51                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     130: pop
     131: goto          8
     134: aload_0
     135: getfield      #6                  // Field lineBuf:Ljava/lang/StringBuilder;
     138: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: areturn

  public long readLong() throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        8
       3: invokespecial #35                 // Method checkAvailable:(I)V
       6: aload_0
       7: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
      10: invokevirtual #52                 // Method io/netty/buffer/ByteBuf.readLong:()J
      13: lreturn

  public short readShort() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_2
       2: invokespecial #35                 // Method checkAvailable:(I)V
       5: aload_0
       6: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
       9: invokevirtual #53                 // Method io/netty/buffer/ByteBuf.readShort:()S
      12: ireturn

  public java.lang.String readUTF() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #54                 // Method java/io/DataInputStream.readUTF:(Ljava/io/DataInput;)Ljava/lang/String;
       4: areturn

  public int readUnsignedByte() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method readByte:()B
       4: sipush        255
       7: iand
       8: ireturn

  public int readUnsignedShort() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method readShort:()S
       4: ldc           #56                 // int 65535
       6: iand
       7: ireturn

  public int skipBytes(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method available:()I
       4: iload_1
       5: invokestatic  #28                 // Method java/lang/Math.min:(II)I
       8: istore_2
       9: aload_0
      10: getfield      #20                 // Field buffer:Lio/netty/buffer/ByteBuf;
      13: iload_2
      14: invokevirtual #50                 // Method io/netty/buffer/ByteBuf.skipBytes:(I)Lio/netty/buffer/ByteBuf;
      17: pop
      18: iload_2
      19: ireturn

  private void checkAvailable(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifge          14
       4: new           #16                 // class java/lang/IndexOutOfBoundsException
       7: dup
       8: ldc           #57                 // String fieldSize cannot be a negative number
      10: invokespecial #19                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_1
      15: aload_0
      16: invokevirtual #27                 // Method available:()I
      19: if_icmple     61
      22: new           #37                 // class java/io/EOFException
      25: dup
      26: new           #4                  // class java/lang/StringBuilder
      29: dup
      30: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #58                 // String fieldSize is too long! Length is
      35: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: iload_1
      39: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      42: ldc           #59                 // String , but maximum is
      44: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_0
      48: invokevirtual #27                 // Method available:()I
      51: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      54: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokespecial #60                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: return
}
