Compiled from "PoolSubpage.java"
final class io.netty.buffer.PoolSubpage<T> implements io.netty.buffer.PoolSubpageMetric {
  final io.netty.buffer.PoolChunk<T> chunk;

  private final int memoryMapIdx;

  private final int runOffset;

  private final int pageSize;

  private final long[] bitmap;

  io.netty.buffer.PoolSubpage<T> prev;

  io.netty.buffer.PoolSubpage<T> next;

  boolean doNotDestroy;

  int elemSize;

  private int maxNumElems;

  private int bitmapLength;

  private int nextAvail;

  private int numAvail;

  static final boolean $assertionsDisabled;

  io.netty.buffer.PoolSubpage(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field chunk:Lio/netty/buffer/PoolChunk;
       9: aload_0
      10: iconst_m1
      11: putfield      #3                  // Field memoryMapIdx:I
      14: aload_0
      15: iconst_m1
      16: putfield      #4                  // Field runOffset:I
      19: aload_0
      20: iconst_m1
      21: putfield      #5                  // Field elemSize:I
      24: aload_0
      25: iload_1
      26: putfield      #6                  // Field pageSize:I
      29: aload_0
      30: aconst_null
      31: putfield      #7                  // Field bitmap:[J
      34: return

  io.netty.buffer.PoolSubpage(io.netty.buffer.PoolChunk<T>, int, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field chunk:Lio/netty/buffer/PoolChunk;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field memoryMapIdx:I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field runOffset:I
      19: aload_0
      20: iload         4
      22: putfield      #6                  // Field pageSize:I
      25: aload_0
      26: iload         4
      28: bipush        10
      30: iushr
      31: newarray       long
      33: putfield      #7                  // Field bitmap:[J
      36: aload_0
      37: iload         5
      39: invokevirtual #8                  // Method init:(I)V
      42: return

  void init(int);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #9                  // Field doNotDestroy:Z
       5: aload_0
       6: iload_1
       7: putfield      #5                  // Field elemSize:I
      10: iload_1
      11: ifeq          88
      14: aload_0
      15: aload_0
      16: aload_0
      17: getfield      #6                  // Field pageSize:I
      20: iload_1
      21: idiv
      22: dup_x1
      23: putfield      #10                 // Field numAvail:I
      26: putfield      #11                 // Field maxNumElems:I
      29: aload_0
      30: iconst_0
      31: putfield      #12                 // Field nextAvail:I
      34: aload_0
      35: aload_0
      36: getfield      #11                 // Field maxNumElems:I
      39: bipush        6
      41: iushr
      42: putfield      #13                 // Field bitmapLength:I
      45: aload_0
      46: getfield      #11                 // Field maxNumElems:I
      49: bipush        63
      51: iand
      52: ifeq          65
      55: aload_0
      56: dup
      57: getfield      #13                 // Field bitmapLength:I
      60: iconst_1
      61: iadd
      62: putfield      #13                 // Field bitmapLength:I
      65: iconst_0
      66: istore_2
      67: iload_2
      68: aload_0
      69: getfield      #13                 // Field bitmapLength:I
      72: if_icmpge     88
      75: aload_0
      76: getfield      #7                  // Field bitmap:[J
      79: iload_2
      80: lconst_0
      81: lastore
      82: iinc          2, 1
      85: goto          67
      88: aload_0
      89: getfield      #2                  // Field chunk:Lio/netty/buffer/PoolChunk;
      92: getfield      #14                 // Field io/netty/buffer/PoolChunk.arena:Lio/netty/buffer/PoolArena;
      95: iload_1
      96: invokevirtual #15                 // Method io/netty/buffer/PoolArena.findSubpagePoolHead:(I)Lio/netty/buffer/PoolSubpage;
      99: astore_2
     100: aload_2
     101: dup
     102: astore_3
     103: monitorenter
     104: aload_0
     105: aload_2
     106: invokespecial #16                 // Method addToPool:(Lio/netty/buffer/PoolSubpage;)V
     109: aload_3
     110: monitorexit
     111: goto          121
     114: astore        4
     116: aload_3
     117: monitorexit
     118: aload         4
     120: athrow
     121: return
    Exception table:
       from    to  target type
         104   111   114   any
         114   118   114   any

  long allocate();
    Code:
       0: aload_0
       1: getfield      #5                  // Field elemSize:I
       4: ifne          13
       7: aload_0
       8: iconst_0
       9: invokespecial #17                 // Method toHandle:(I)J
      12: lreturn
      13: aload_0
      14: getfield      #2                  // Field chunk:Lio/netty/buffer/PoolChunk;
      17: getfield      #14                 // Field io/netty/buffer/PoolChunk.arena:Lio/netty/buffer/PoolArena;
      20: aload_0
      21: getfield      #5                  // Field elemSize:I
      24: invokevirtual #15                 // Method io/netty/buffer/PoolArena.findSubpagePoolHead:(I)Lio/netty/buffer/PoolSubpage;
      27: astore_1
      28: aload_1
      29: dup
      30: astore_2
      31: monitorenter
      32: aload_0
      33: getfield      #10                 // Field numAvail:I
      36: ifeq          46
      39: aload_0
      40: getfield      #9                  // Field doNotDestroy:Z
      43: ifne          52
      46: ldc2_w        #18                 // long -1l
      49: aload_2
      50: monitorexit
      51: lreturn
      52: aload_0
      53: invokespecial #20                 // Method getNextAvail:()I
      56: istore_3
      57: iload_3
      58: bipush        6
      60: iushr
      61: istore        4
      63: iload_3
      64: bipush        63
      66: iand
      67: istore        5
      69: getstatic     #21                 // Field $assertionsDisabled:Z
      72: ifne          100
      75: aload_0
      76: getfield      #7                  // Field bitmap:[J
      79: iload         4
      81: laload
      82: iload         5
      84: lushr
      85: lconst_1
      86: land
      87: lconst_0
      88: lcmp
      89: ifeq          100
      92: new           #22                 // class java/lang/AssertionError
      95: dup
      96: invokespecial #23                 // Method java/lang/AssertionError."<init>":()V
      99: athrow
     100: aload_0
     101: getfield      #7                  // Field bitmap:[J
     104: iload         4
     106: dup2
     107: laload
     108: lconst_1
     109: iload         5
     111: lshl
     112: lor
     113: lastore
     114: aload_0
     115: dup
     116: getfield      #10                 // Field numAvail:I
     119: iconst_1
     120: isub
     121: dup_x1
     122: putfield      #10                 // Field numAvail:I
     125: ifne          132
     128: aload_0
     129: invokespecial #24                 // Method removeFromPool:()V
     132: aload_0
     133: iload_3
     134: invokespecial #17                 // Method toHandle:(I)J
     137: aload_2
     138: monitorexit
     139: lreturn
     140: astore        6
     142: aload_2
     143: monitorexit
     144: aload         6
     146: athrow
    Exception table:
       from    to  target type
          32    51   140   any
          52   139   140   any
         140   144   140   any

  boolean free(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field elemSize:I
       4: ifne          9
       7: iconst_1
       8: ireturn
       9: aload_0
      10: getfield      #2                  // Field chunk:Lio/netty/buffer/PoolChunk;
      13: getfield      #14                 // Field io/netty/buffer/PoolChunk.arena:Lio/netty/buffer/PoolArena;
      16: aload_0
      17: getfield      #5                  // Field elemSize:I
      20: invokevirtual #15                 // Method io/netty/buffer/PoolArena.findSubpagePoolHead:(I)Lio/netty/buffer/PoolSubpage;
      23: astore_2
      24: aload_2
      25: dup
      26: astore_3
      27: monitorenter
      28: iload_1
      29: bipush        6
      31: iushr
      32: istore        4
      34: iload_1
      35: bipush        63
      37: iand
      38: istore        5
      40: getstatic     #21                 // Field $assertionsDisabled:Z
      43: ifne          71
      46: aload_0
      47: getfield      #7                  // Field bitmap:[J
      50: iload         4
      52: laload
      53: iload         5
      55: lushr
      56: lconst_1
      57: land
      58: lconst_0
      59: lcmp
      60: ifne          71
      63: new           #22                 // class java/lang/AssertionError
      66: dup
      67: invokespecial #23                 // Method java/lang/AssertionError."<init>":()V
      70: athrow
      71: aload_0
      72: getfield      #7                  // Field bitmap:[J
      75: iload         4
      77: dup2
      78: laload
      79: lconst_1
      80: iload         5
      82: lshl
      83: lxor
      84: lastore
      85: aload_0
      86: iload_1
      87: invokespecial #25                 // Method setNextAvail:(I)V
      90: aload_0
      91: dup
      92: getfield      #10                 // Field numAvail:I
      95: dup_x1
      96: iconst_1
      97: iadd
      98: putfield      #10                 // Field numAvail:I
     101: ifne          113
     104: aload_0
     105: aload_2
     106: invokespecial #16                 // Method addToPool:(Lio/netty/buffer/PoolSubpage;)V
     109: iconst_1
     110: aload_3
     111: monitorexit
     112: ireturn
     113: aload_0
     114: getfield      #10                 // Field numAvail:I
     117: aload_0
     118: getfield      #11                 // Field maxNumElems:I
     121: if_icmpeq     128
     124: iconst_1
     125: aload_3
     126: monitorexit
     127: ireturn
     128: aload_0
     129: getfield      #26                 // Field prev:Lio/netty/buffer/PoolSubpage;
     132: aload_0
     133: getfield      #27                 // Field next:Lio/netty/buffer/PoolSubpage;
     136: if_acmpne     143
     139: iconst_1
     140: aload_3
     141: monitorexit
     142: ireturn
     143: aload_0
     144: iconst_0
     145: putfield      #9                  // Field doNotDestroy:Z
     148: aload_0
     149: invokespecial #24                 // Method removeFromPool:()V
     152: iconst_0
     153: aload_3
     154: monitorexit
     155: ireturn
     156: astore        6
     158: aload_3
     159: monitorexit
     160: aload         6
     162: athrow
    Exception table:
       from    to  target type
          28   112   156   any
         113   127   156   any
         128   142   156   any
         143   155   156   any
         156   160   156   any

  private void addToPool(io.netty.buffer.PoolSubpage<T>);
    Code:
       0: getstatic     #21                 // Field $assertionsDisabled:Z
       3: ifne          28
       6: aload_0
       7: getfield      #26                 // Field prev:Lio/netty/buffer/PoolSubpage;
      10: ifnonnull     20
      13: aload_0
      14: getfield      #27                 // Field next:Lio/netty/buffer/PoolSubpage;
      17: ifnull        28
      20: new           #22                 // class java/lang/AssertionError
      23: dup
      24: invokespecial #23                 // Method java/lang/AssertionError."<init>":()V
      27: athrow
      28: aload_0
      29: aload_1
      30: putfield      #26                 // Field prev:Lio/netty/buffer/PoolSubpage;
      33: aload_0
      34: aload_1
      35: getfield      #27                 // Field next:Lio/netty/buffer/PoolSubpage;
      38: putfield      #27                 // Field next:Lio/netty/buffer/PoolSubpage;
      41: aload_0
      42: getfield      #27                 // Field next:Lio/netty/buffer/PoolSubpage;
      45: aload_0
      46: putfield      #26                 // Field prev:Lio/netty/buffer/PoolSubpage;
      49: aload_1
      50: aload_0
      51: putfield      #27                 // Field next:Lio/netty/buffer/PoolSubpage;
      54: return

  private void removeFromPool();
    Code:
       0: getstatic     #21                 // Field $assertionsDisabled:Z
       3: ifne          28
       6: aload_0
       7: getfield      #26                 // Field prev:Lio/netty/buffer/PoolSubpage;
      10: ifnull        20
      13: aload_0
      14: getfield      #27                 // Field next:Lio/netty/buffer/PoolSubpage;
      17: ifnonnull     28
      20: new           #22                 // class java/lang/AssertionError
      23: dup
      24: invokespecial #23                 // Method java/lang/AssertionError."<init>":()V
      27: athrow
      28: aload_0
      29: getfield      #26                 // Field prev:Lio/netty/buffer/PoolSubpage;
      32: aload_0
      33: getfield      #27                 // Field next:Lio/netty/buffer/PoolSubpage;
      36: putfield      #27                 // Field next:Lio/netty/buffer/PoolSubpage;
      39: aload_0
      40: getfield      #27                 // Field next:Lio/netty/buffer/PoolSubpage;
      43: aload_0
      44: getfield      #26                 // Field prev:Lio/netty/buffer/PoolSubpage;
      47: putfield      #26                 // Field prev:Lio/netty/buffer/PoolSubpage;
      50: aload_0
      51: aconst_null
      52: putfield      #27                 // Field next:Lio/netty/buffer/PoolSubpage;
      55: aload_0
      56: aconst_null
      57: putfield      #26                 // Field prev:Lio/netty/buffer/PoolSubpage;
      60: return

  private void setNextAvail(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field nextAvail:I
       5: return

  private int getNextAvail();
    Code:
       0: aload_0
       1: getfield      #12                 // Field nextAvail:I
       4: istore_1
       5: iload_1
       6: iflt          16
       9: aload_0
      10: iconst_m1
      11: putfield      #12                 // Field nextAvail:I
      14: iload_1
      15: ireturn
      16: aload_0
      17: invokespecial #28                 // Method findNextAvail:()I
      20: ireturn

  private int findNextAvail();
    Code:
       0: aload_0
       1: getfield      #7                  // Field bitmap:[J
       4: astore_1
       5: aload_0
       6: getfield      #13                 // Field bitmapLength:I
       9: istore_2
      10: iconst_0
      11: istore_3
      12: iload_3
      13: iload_2
      14: if_icmpge     47
      17: aload_1
      18: iload_3
      19: laload
      20: lstore        4
      22: lload         4
      24: ldc2_w        #18                 // long -1l
      27: lxor
      28: lconst_0
      29: lcmp
      30: ifeq          41
      33: aload_0
      34: iload_3
      35: lload         4
      37: invokespecial #29                 // Method findNextAvail0:(IJ)I
      40: ireturn
      41: iinc          3, 1
      44: goto          12
      47: iconst_m1
      48: ireturn

  private int findNextAvail0(int, long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field maxNumElems:I
       4: istore        4
       6: iload_1
       7: bipush        6
       9: ishl
      10: istore        5
      12: iconst_0
      13: istore        6
      15: iload         6
      17: bipush        64
      19: if_icmpge     57
      22: lload_2
      23: lconst_1
      24: land
      25: lconst_0
      26: lcmp
      27: ifne          47
      30: iload         5
      32: iload         6
      34: ior
      35: istore        7
      37: iload         7
      39: iload         4
      41: if_icmpge     57
      44: iload         7
      46: ireturn
      47: lload_2
      48: iconst_1
      49: lushr
      50: lstore_2
      51: iinc          6, 1
      54: goto          15
      57: iconst_m1
      58: ireturn

  private long toHandle(int);
    Code:
       0: ldc2_w        #30                 // long 4611686018427387904l
       3: iload_1
       4: i2l
       5: bipush        32
       7: lshl
       8: lor
       9: aload_0
      10: getfield      #3                  // Field memoryMapIdx:I
      13: i2l
      14: lor
      15: lreturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #9                  // Field doNotDestroy:Z
       4: ifne          35
       7: new           #32                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      14: ldc           #34                 // String (
      16: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #3                  // Field memoryMapIdx:I
      23: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: ldc           #37                 // String : not in use)
      28: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn
      35: new           #32                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      42: bipush        40
      44: invokestatic  #39                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;
      47: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_0
      51: getfield      #3                  // Field memoryMapIdx:I
      54: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      57: ldc           #40                 // String :
      59: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: getfield      #11                 // Field maxNumElems:I
      66: aload_0
      67: getfield      #10                 // Field numAvail:I
      70: isub
      71: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      74: bipush        47
      76: invokevirtual #41                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      79: aload_0
      80: getfield      #11                 // Field maxNumElems:I
      83: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      86: ldc           #42                 // String , offset:
      88: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_0
      92: getfield      #4                  // Field runOffset:I
      95: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      98: ldc           #43                 // String , length:
     100: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload_0
     104: getfield      #6                  // Field pageSize:I
     107: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     110: ldc           #44                 // String , elemSize:
     112: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: aload_0
     116: getfield      #5                  // Field elemSize:I
     119: invokevirtual #36                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     122: bipush        41
     124: invokevirtual #41                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     127: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     130: areturn

  public int maxNumElements();
    Code:
       0: aload_0
       1: getfield      #11                 // Field maxNumElems:I
       4: ireturn

  public int numAvailable();
    Code:
       0: aload_0
       1: getfield      #10                 // Field numAvail:I
       4: ireturn

  public int elementSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field elemSize:I
       4: ireturn

  public int pageSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field pageSize:I
       4: ireturn

  static {};
    Code:
       0: ldc_w         #45                 // class io/netty/buffer/PoolSubpage
       3: invokevirtual #46                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #21                 // Field $assertionsDisabled:Z
      17: return
}
