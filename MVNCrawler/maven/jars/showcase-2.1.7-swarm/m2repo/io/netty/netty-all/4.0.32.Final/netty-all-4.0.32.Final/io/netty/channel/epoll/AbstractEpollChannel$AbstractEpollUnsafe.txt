Compiled from "AbstractEpollChannel.java"
public abstract class io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe extends io.netty.channel.AbstractChannel$AbstractUnsafe {
  protected boolean readPending;

  static final boolean $assertionsDisabled;

  final io.netty.channel.epoll.AbstractEpollChannel this$0;

  protected io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe(io.netty.channel.epoll.AbstractEpollChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollChannel;
       5: aload_0
       6: aload_1
       7: invokespecial #2                  // Method io/netty/channel/AbstractChannel$AbstractUnsafe."<init>":(Lio/netty/channel/AbstractChannel;)V
      10: return

  abstract void epollInReady();

  final void epollRdHupReady();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollChannel;
       4: invokevirtual #3                  // Method io/netty/channel/epoll/AbstractEpollChannel.isActive:()Z
       7: ifeq          18
      10: aload_0
      11: invokevirtual #4                  // Method epollInReady:()V
      14: aload_0
      15: invokespecial #5                  // Method clearEpollRdHup:()V
      18: aload_0
      19: invokevirtual #6                  // Method shutdownInput:()V
      22: return

  private void clearEpollRdHup();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollChannel;
       4: getstatic     #7                  // Field io/netty/channel/epoll/Native.EPOLLRDHUP:I
       7: invokevirtual #8                  // Method io/netty/channel/epoll/AbstractEpollChannel.clearFlag:(I)V
      10: goto          36
      13: astore_1
      14: aload_0
      15: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollChannel;
      18: invokevirtual #10                 // Method io/netty/channel/epoll/AbstractEpollChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      21: aload_1
      22: invokeinterface #11,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
      27: pop
      28: aload_0
      29: aload_0
      30: invokevirtual #12                 // Method voidPromise:()Lio/netty/channel/ChannelPromise;
      33: invokevirtual #13                 // Method close:(Lio/netty/channel/ChannelPromise;)V
      36: return
    Exception table:
       from    to  target type
           0    10    13   Class java/io/IOException

  void shutdownInput();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollChannel;
       4: invokestatic  #14                 // Method io/netty/channel/epoll/AbstractEpollChannel.access$000:(Lio/netty/channel/epoll/AbstractEpollChannel;)Z
       7: ifne          82
      10: aload_0
      11: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollChannel;
      14: iconst_1
      15: invokestatic  #15                 // Method io/netty/channel/epoll/AbstractEpollChannel.access$002:(Lio/netty/channel/epoll/AbstractEpollChannel;Z)Z
      18: pop
      19: aload_0
      20: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollChannel;
      23: invokevirtual #16                 // Method io/netty/channel/epoll/AbstractEpollChannel.isOpen:()Z
      26: ifeq          82
      29: getstatic     #17                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      32: aload_0
      33: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollChannel;
      36: invokevirtual #18                 // Method io/netty/channel/epoll/AbstractEpollChannel.config:()Lio/netty/channel/epoll/EpollChannelConfig;
      39: getstatic     #19                 // Field io/netty/channel/ChannelOption.ALLOW_HALF_CLOSURE:Lio/netty/channel/ChannelOption;
      42: invokevirtual #20                 // Method io/netty/channel/epoll/EpollChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
      45: invokevirtual #21                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      48: ifeq          74
      51: aload_0
      52: invokevirtual #22                 // Method clearEpollIn0:()V
      55: aload_0
      56: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollChannel;
      59: invokevirtual #10                 // Method io/netty/channel/epoll/AbstractEpollChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      62: getstatic     #23                 // Field io/netty/channel/socket/ChannelInputShutdownEvent.INSTANCE:Lio/netty/channel/socket/ChannelInputShutdownEvent;
      65: invokeinterface #24,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      70: pop
      71: goto          82
      74: aload_0
      75: aload_0
      76: invokevirtual #12                 // Method voidPromise:()Lio/netty/channel/ChannelPromise;
      79: invokevirtual #13                 // Method close:(Lio/netty/channel/ChannelPromise;)V
      82: return

  protected void flush0();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollChannel;
       4: getstatic     #25                 // Field io/netty/channel/epoll/Native.EPOLLOUT:I
       7: invokevirtual #26                 // Method io/netty/channel/epoll/AbstractEpollChannel.isFlagSet:(I)Z
      10: ifeq          14
      13: return
      14: aload_0
      15: invokespecial #27                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe.flush0:()V
      18: return

  void epollOutReady();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe.flush0:()V
       4: return

  protected final void clearEpollIn0();
    Code:
       0: getstatic     #28                 // Field $assertionsDisabled:Z
       3: ifne          29
       6: aload_0
       7: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollChannel;
      10: invokevirtual #29                 // Method io/netty/channel/epoll/AbstractEpollChannel.eventLoop:()Lio/netty/channel/EventLoop;
      13: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      18: ifne          29
      21: new           #31                 // class java/lang/AssertionError
      24: dup
      25: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      28: athrow
      29: aload_0
      30: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollChannel;
      33: aload_0
      34: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollChannel;
      37: invokestatic  #33                 // Method io/netty/channel/epoll/AbstractEpollChannel.access$100:(Lio/netty/channel/epoll/AbstractEpollChannel;)I
      40: invokevirtual #8                  // Method io/netty/channel/epoll/AbstractEpollChannel.clearFlag:(I)V
      43: goto          85
      46: astore_1
      47: aload_0
      48: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollChannel;
      51: invokevirtual #10                 // Method io/netty/channel/epoll/AbstractEpollChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      54: aload_1
      55: invokeinterface #11,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
      60: pop
      61: aload_0
      62: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollChannel;
      65: invokevirtual #34                 // Method io/netty/channel/epoll/AbstractEpollChannel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      68: aload_0
      69: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollChannel;
      72: invokevirtual #34                 // Method io/netty/channel/epoll/AbstractEpollChannel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      75: invokeinterface #35,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.voidPromise:()Lio/netty/channel/ChannelPromise;
      80: invokeinterface #36,  2           // InterfaceMethod io/netty/channel/Channel$Unsafe.close:(Lio/netty/channel/ChannelPromise;)V
      85: return
    Exception table:
       from    to  target type
          29    43    46   Class java/io/IOException

  static {};
    Code:
       0: ldc_w         #37                 // class io/netty/channel/epoll/AbstractEpollChannel
       3: invokevirtual #38                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #28                 // Field $assertionsDisabled:Z
      17: return
}
