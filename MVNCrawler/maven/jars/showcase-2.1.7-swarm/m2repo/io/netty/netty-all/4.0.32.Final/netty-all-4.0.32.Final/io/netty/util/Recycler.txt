Compiled from "Recycler.java"
public abstract class io.netty.util.Recycler<T> {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final io.netty.util.Recycler$Handle NOOP_HANDLE;

  private static final java.util.concurrent.atomic.AtomicInteger ID_GENERATOR;

  private static final int OWN_THREAD_ID;

  private static final int DEFAULT_INITIAL_MAX_CAPACITY;

  private static final int DEFAULT_MAX_CAPACITY;

  private static final int INITIAL_CAPACITY;

  private final int maxCapacity;

  private final io.netty.util.concurrent.FastThreadLocal<io.netty.util.Recycler$Stack<T>> threadLocal;

  private static final io.netty.util.concurrent.FastThreadLocal<java.util.Map<io.netty.util.Recycler$Stack<?>, io.netty.util.Recycler$WeakOrderQueue>> DELAYED_RECYCLED;

  protected io.netty.util.Recycler();
    Code:
       0: aload_0
       1: getstatic     #6                  // Field DEFAULT_MAX_CAPACITY:I
       4: invokespecial #7                  // Method "<init>":(I)V
       7: return

  protected io.netty.util.Recycler(int);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #9                  // class io/netty/util/Recycler$2
       8: dup
       9: aload_0
      10: invokespecial #10                 // Method io/netty/util/Recycler$2."<init>":(Lio/netty/util/Recycler;)V
      13: putfield      #11                 // Field threadLocal:Lio/netty/util/concurrent/FastThreadLocal;
      16: aload_0
      17: iconst_0
      18: iload_1
      19: invokestatic  #12                 // Method java/lang/Math.max:(II)I
      22: putfield      #5                  // Field maxCapacity:I
      25: return

  public final T get();
    Code:
       0: aload_0
       1: getfield      #5                  // Field maxCapacity:I
       4: ifne          15
       7: aload_0
       8: getstatic     #13                 // Field NOOP_HANDLE:Lio/netty/util/Recycler$Handle;
      11: invokevirtual #14                 // Method newObject:(Lio/netty/util/Recycler$Handle;)Ljava/lang/Object;
      14: areturn
      15: aload_0
      16: getfield      #11                 // Field threadLocal:Lio/netty/util/concurrent/FastThreadLocal;
      19: invokevirtual #15                 // Method io/netty/util/concurrent/FastThreadLocal.get:()Ljava/lang/Object;
      22: checkcast     #16                 // class io/netty/util/Recycler$Stack
      25: astore_1
      26: aload_1
      27: invokevirtual #17                 // Method io/netty/util/Recycler$Stack.pop:()Lio/netty/util/Recycler$DefaultHandle;
      30: astore_2
      31: aload_2
      32: ifnonnull     50
      35: aload_1
      36: invokevirtual #18                 // Method io/netty/util/Recycler$Stack.newHandle:()Lio/netty/util/Recycler$DefaultHandle;
      39: astore_2
      40: aload_2
      41: aload_0
      42: aload_2
      43: invokevirtual #14                 // Method newObject:(Lio/netty/util/Recycler$Handle;)Ljava/lang/Object;
      46: invokestatic  #19                 // Method io/netty/util/Recycler$DefaultHandle.access$102:(Lio/netty/util/Recycler$DefaultHandle;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: aload_2
      51: invokestatic  #20                 // Method io/netty/util/Recycler$DefaultHandle.access$100:(Lio/netty/util/Recycler$DefaultHandle;)Ljava/lang/Object;
      54: areturn

  public final boolean recycle(T, io.netty.util.Recycler$Handle);
    Code:
       0: aload_2
       1: getstatic     #13                 // Field NOOP_HANDLE:Lio/netty/util/Recycler$Handle;
       4: if_acmpne     9
       7: iconst_0
       8: ireturn
       9: aload_2
      10: checkcast     #21                 // class io/netty/util/Recycler$DefaultHandle
      13: astore_3
      14: aload_3
      15: invokestatic  #22                 // Method io/netty/util/Recycler$DefaultHandle.access$200:(Lio/netty/util/Recycler$DefaultHandle;)Lio/netty/util/Recycler$Stack;
      18: getfield      #23                 // Field io/netty/util/Recycler$Stack.parent:Lio/netty/util/Recycler;
      21: aload_0
      22: if_acmpeq     27
      25: iconst_0
      26: ireturn
      27: aload_1
      28: aload_3
      29: invokestatic  #20                 // Method io/netty/util/Recycler$DefaultHandle.access$100:(Lio/netty/util/Recycler$DefaultHandle;)Ljava/lang/Object;
      32: if_acmpeq     45
      35: new           #24                 // class java/lang/IllegalArgumentException
      38: dup
      39: ldc           #25                 // String o does not belong to handle
      41: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_3
      46: invokevirtual #27                 // Method io/netty/util/Recycler$DefaultHandle.recycle:()V
      49: iconst_1
      50: ireturn

  protected abstract T newObject(io.netty.util.Recycler$Handle);

  final int threadLocalCapacity();
    Code:
       0: aload_0
       1: getfield      #11                 // Field threadLocal:Lio/netty/util/concurrent/FastThreadLocal;
       4: invokevirtual #15                 // Method io/netty/util/concurrent/FastThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #16                 // class io/netty/util/Recycler$Stack
      10: invokestatic  #28                 // Method io/netty/util/Recycler$Stack.access$300:(Lio/netty/util/Recycler$Stack;)[Lio/netty/util/Recycler$DefaultHandle;
      13: arraylength
      14: ireturn

  final int threadLocalSize();
    Code:
       0: aload_0
       1: getfield      #11                 // Field threadLocal:Lio/netty/util/concurrent/FastThreadLocal;
       4: invokevirtual #15                 // Method io/netty/util/concurrent/FastThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #16                 // class io/netty/util/Recycler$Stack
      10: invokestatic  #29                 // Method io/netty/util/Recycler$Stack.access$400:(Lio/netty/util/Recycler$Stack;)I
      13: ireturn

  static int access$000(io.netty.util.Recycler);
    Code:
       0: aload_0
       1: getfield      #5                  // Field maxCapacity:I
       4: ireturn

  static io.netty.util.concurrent.FastThreadLocal access$500();
    Code:
       0: getstatic     #4                  // Field DELAYED_RECYCLED:Lio/netty/util/concurrent/FastThreadLocal;
       3: areturn

  static java.util.concurrent.atomic.AtomicInteger access$600();
    Code:
       0: getstatic     #3                  // Field ID_GENERATOR:Ljava/util/concurrent/atomic/AtomicInteger;
       3: areturn

  static int access$1400();
    Code:
       0: getstatic     #2                  // Field INITIAL_CAPACITY:I
       3: ireturn

  static int access$1700();
    Code:
       0: getstatic     #1                  // Field OWN_THREAD_ID:I
       3: ireturn

  static {};
    Code:
       0: ldc_w         #30                 // class io/netty/util/Recycler
       3: invokestatic  #31                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       6: putstatic     #32                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       9: new           #33                 // class io/netty/util/Recycler$1
      12: dup
      13: invokespecial #34                 // Method io/netty/util/Recycler$1."<init>":()V
      16: putstatic     #13                 // Field NOOP_HANDLE:Lio/netty/util/Recycler$Handle;
      19: new           #35                 // class java/util/concurrent/atomic/AtomicInteger
      22: dup
      23: ldc           #36                 // int -2147483648
      25: invokespecial #37                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      28: putstatic     #3                  // Field ID_GENERATOR:Ljava/util/concurrent/atomic/AtomicInteger;
      31: getstatic     #3                  // Field ID_GENERATOR:Ljava/util/concurrent/atomic/AtomicInteger;
      34: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      37: putstatic     #1                  // Field OWN_THREAD_ID:I
      40: ldc           #39                 // String io.netty.recycler.maxCapacity.default
      42: ldc           #40                 // int 262144
      44: invokestatic  #41                 // Method io/netty/util/internal/SystemPropertyUtil.getInt:(Ljava/lang/String;I)I
      47: istore_0
      48: iload_0
      49: ifge          55
      52: ldc           #40                 // int 262144
      54: istore_0
      55: iload_0
      56: putstatic     #6                  // Field DEFAULT_MAX_CAPACITY:I
      59: getstatic     #32                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      62: invokeinterface #42,  1           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      67: ifeq          105
      70: getstatic     #6                  // Field DEFAULT_MAX_CAPACITY:I
      73: ifne          89
      76: getstatic     #32                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      79: ldc           #43                 // String -Dio.netty.recycler.maxCapacity.default: disabled
      81: invokeinterface #44,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;)V
      86: goto          105
      89: getstatic     #32                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      92: ldc           #45                 // String -Dio.netty.recycler.maxCapacity.default: {}
      94: getstatic     #6                  // Field DEFAULT_MAX_CAPACITY:I
      97: invokestatic  #46                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     100: invokeinterface #47,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     105: getstatic     #6                  // Field DEFAULT_MAX_CAPACITY:I
     108: sipush        256
     111: invokestatic  #48                 // Method java/lang/Math.min:(II)I
     114: putstatic     #2                  // Field INITIAL_CAPACITY:I
     117: new           #49                 // class io/netty/util/Recycler$3
     120: dup
     121: invokespecial #50                 // Method io/netty/util/Recycler$3."<init>":()V
     124: putstatic     #4                  // Field DELAYED_RECYCLED:Lio/netty/util/concurrent/FastThreadLocal;
     127: return
}
