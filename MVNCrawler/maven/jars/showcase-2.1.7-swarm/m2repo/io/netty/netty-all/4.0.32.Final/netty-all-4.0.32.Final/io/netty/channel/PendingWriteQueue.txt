Compiled from "PendingWriteQueue.java"
public final class io.netty.channel.PendingWriteQueue {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private final io.netty.channel.ChannelHandlerContext ctx;

  private final io.netty.channel.ChannelOutboundBuffer buffer;

  private final io.netty.channel.MessageSizeEstimator$Handle estimatorHandle;

  private io.netty.channel.PendingWriteQueue$PendingWrite head;

  private io.netty.channel.PendingWriteQueue$PendingWrite tail;

  private int size;

  static final boolean $assertionsDisabled;

  public io.netty.channel.PendingWriteQueue(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/NullPointerException
      11: dup
      12: ldc           #3                  // String ctx
      14: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      23: aload_0
      24: aload_1
      25: invokeinterface #6,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      30: invokeinterface #7,  1            // InterfaceMethod io/netty/channel/Channel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      35: invokeinterface #8,  1            // InterfaceMethod io/netty/channel/Channel$Unsafe.outboundBuffer:()Lio/netty/channel/ChannelOutboundBuffer;
      40: putfield      #9                  // Field buffer:Lio/netty/channel/ChannelOutboundBuffer;
      43: aload_0
      44: aload_1
      45: invokeinterface #6,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      50: invokeinterface #10,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      55: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getMessageSizeEstimator:()Lio/netty/channel/MessageSizeEstimator;
      60: invokeinterface #12,  1           // InterfaceMethod io/netty/channel/MessageSizeEstimator.newHandle:()Lio/netty/channel/MessageSizeEstimator$Handle;
      65: putfield      #13                 // Field estimatorHandle:Lio/netty/channel/MessageSizeEstimator$Handle;
      68: return

  public boolean isEmpty();
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          31
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      15: invokeinterface #16,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      20: ifne          31
      23: new           #17                 // class java/lang/AssertionError
      26: dup
      27: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: aload_0
      32: getfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      35: ifnonnull     42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ireturn

  public int size();
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          31
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      15: invokeinterface #16,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      20: ifne          31
      23: new           #17                 // class java/lang/AssertionError
      26: dup
      27: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: aload_0
      32: getfield      #20                 // Field size:I
      35: ireturn

  public void add(java.lang.Object, io.netty.channel.ChannelPromise);
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          31
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      15: invokeinterface #16,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      20: ifne          31
      23: new           #17                 // class java/lang/AssertionError
      26: dup
      27: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: aload_1
      32: ifnonnull     45
      35: new           #2                  // class java/lang/NullPointerException
      38: dup
      39: ldc           #21                 // String msg
      41: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_2
      46: ifnonnull     59
      49: new           #2                  // class java/lang/NullPointerException
      52: dup
      53: ldc           #22                 // String promise
      55: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: aload_0
      60: getfield      #13                 // Field estimatorHandle:Lio/netty/channel/MessageSizeEstimator$Handle;
      63: aload_1
      64: invokeinterface #23,  2           // InterfaceMethod io/netty/channel/MessageSizeEstimator$Handle.size:(Ljava/lang/Object;)I
      69: istore_3
      70: iload_3
      71: ifge          76
      74: iconst_0
      75: istore_3
      76: aload_1
      77: iload_3
      78: aload_2
      79: invokestatic  #24                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.newInstance:(Ljava/lang/Object;ILio/netty/channel/ChannelPromise;)Lio/netty/channel/PendingWriteQueue$PendingWrite;
      82: astore        4
      84: aload_0
      85: getfield      #25                 // Field tail:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      88: astore        5
      90: aload         5
      92: ifnonnull     109
      95: aload_0
      96: aload_0
      97: aload         4
      99: dup_x1
     100: putfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
     103: putfield      #25                 // Field tail:Lio/netty/channel/PendingWriteQueue$PendingWrite;
     106: goto          123
     109: aload         5
     111: aload         4
     113: invokestatic  #26                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$002:(Lio/netty/channel/PendingWriteQueue$PendingWrite;Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/PendingWriteQueue$PendingWrite;
     116: pop
     117: aload_0
     118: aload         4
     120: putfield      #25                 // Field tail:Lio/netty/channel/PendingWriteQueue$PendingWrite;
     123: aload_0
     124: dup
     125: getfield      #20                 // Field size:I
     128: iconst_1
     129: iadd
     130: putfield      #20                 // Field size:I
     133: aload_0
     134: getfield      #9                  // Field buffer:Lio/netty/channel/ChannelOutboundBuffer;
     137: ifnull        152
     140: aload_0
     141: getfield      #9                  // Field buffer:Lio/netty/channel/ChannelOutboundBuffer;
     144: aload         4
     146: invokestatic  #27                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$100:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)J
     149: invokevirtual #28                 // Method io/netty/channel/ChannelOutboundBuffer.incrementPendingOutboundBytes:(J)V
     152: return

  public void removeAndFailAll(java.lang.Throwable);
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          31
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      15: invokeinterface #16,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      20: ifne          31
      23: new           #17                 // class java/lang/AssertionError
      26: dup
      27: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: aload_1
      32: ifnonnull     45
      35: new           #2                  // class java/lang/NullPointerException
      38: dup
      39: ldc           #29                 // String cause
      41: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: getfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      49: astore_2
      50: aload_0
      51: aload_0
      52: aconst_null
      53: dup_x1
      54: putfield      #25                 // Field tail:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      57: putfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      60: aload_0
      61: iconst_0
      62: putfield      #20                 // Field size:I
      65: aload_2
      66: ifnull        104
      69: aload_2
      70: invokestatic  #30                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$000:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/PendingWriteQueue$PendingWrite;
      73: astore_3
      74: aload_2
      75: invokestatic  #31                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$200:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Ljava/lang/Object;
      78: invokestatic  #32                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      81: aload_2
      82: invokestatic  #33                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$300:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/ChannelPromise;
      85: astore        4
      87: aload_0
      88: aload_2
      89: iconst_0
      90: invokespecial #34                 // Method recycle:(Lio/netty/channel/PendingWriteQueue$PendingWrite;Z)V
      93: aload         4
      95: aload_1
      96: invokestatic  #35                 // Method safeFail:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      99: aload_3
     100: astore_2
     101: goto          65
     104: aload_0
     105: invokespecial #36                 // Method assertEmpty:()V
     108: return

  public void removeAndFail(java.lang.Throwable);
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          31
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      15: invokeinterface #16,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      20: ifne          31
      23: new           #17                 // class java/lang/AssertionError
      26: dup
      27: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: aload_1
      32: ifnonnull     45
      35: new           #2                  // class java/lang/NullPointerException
      38: dup
      39: ldc           #29                 // String cause
      41: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: getfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      49: astore_2
      50: aload_2
      51: ifnonnull     55
      54: return
      55: aload_2
      56: invokestatic  #31                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$200:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Ljava/lang/Object;
      59: invokestatic  #32                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      62: aload_2
      63: invokestatic  #33                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$300:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/ChannelPromise;
      66: astore_3
      67: aload_3
      68: aload_1
      69: invokestatic  #35                 // Method safeFail:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      72: aload_0
      73: aload_2
      74: iconst_1
      75: invokespecial #34                 // Method recycle:(Lio/netty/channel/PendingWriteQueue$PendingWrite;Z)V
      78: return

  public io.netty.channel.ChannelFuture removeAndWriteAll();
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          31
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      15: invokeinterface #16,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      20: ifne          31
      23: new           #17                 // class java/lang/AssertionError
      26: dup
      27: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: aload_0
      32: getfield      #20                 // Field size:I
      35: iconst_1
      36: if_icmpne     44
      39: aload_0
      40: invokevirtual #37                 // Method removeAndWrite:()Lio/netty/channel/ChannelFuture;
      43: areturn
      44: aload_0
      45: getfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      48: astore_1
      49: aload_1
      50: ifnonnull     55
      53: aconst_null
      54: areturn
      55: aload_0
      56: aload_0
      57: aconst_null
      58: dup_x1
      59: putfield      #25                 // Field tail:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      62: putfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      65: aload_0
      66: iconst_0
      67: putfield      #20                 // Field size:I
      70: aload_0
      71: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      74: invokeinterface #38,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      79: astore_2
      80: new           #39                 // class io/netty/channel/ChannelPromiseAggregator
      83: dup
      84: aload_2
      85: invokespecial #40                 // Method io/netty/channel/ChannelPromiseAggregator."<init>":(Lio/netty/channel/ChannelPromise;)V
      88: astore_3
      89: aload_1
      90: ifnull        151
      93: aload_1
      94: invokestatic  #30                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$000:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/PendingWriteQueue$PendingWrite;
      97: astore        4
      99: aload_1
     100: invokestatic  #31                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$200:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Ljava/lang/Object;
     103: astore        5
     105: aload_1
     106: invokestatic  #33                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$300:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/ChannelPromise;
     109: astore        6
     111: aload_0
     112: aload_1
     113: iconst_0
     114: invokespecial #34                 // Method recycle:(Lio/netty/channel/PendingWriteQueue$PendingWrite;Z)V
     117: aload_0
     118: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
     121: aload         5
     123: aload         6
     125: invokeinterface #41,  3           // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
     130: pop
     131: aload_3
     132: iconst_1
     133: anewarray     #42                 // class io/netty/util/concurrent/Promise
     136: dup
     137: iconst_0
     138: aload         6
     140: aastore
     141: invokevirtual #43                 // Method io/netty/channel/ChannelPromiseAggregator.add:([Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/PromiseAggregator;
     144: pop
     145: aload         4
     147: astore_1
     148: goto          89
     151: aload_0
     152: invokespecial #36                 // Method assertEmpty:()V
     155: aload_2
     156: areturn

  private void assertEmpty();
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          35
       6: aload_0
       7: getfield      #25                 // Field tail:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      10: ifnonnull     27
      13: aload_0
      14: getfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      17: ifnonnull     27
      20: aload_0
      21: getfield      #20                 // Field size:I
      24: ifeq          35
      27: new           #17                 // class java/lang/AssertionError
      30: dup
      31: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      34: athrow
      35: return

  public io.netty.channel.ChannelFuture removeAndWrite();
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          31
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      15: invokeinterface #16,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      20: ifne          31
      23: new           #17                 // class java/lang/AssertionError
      26: dup
      27: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: aload_0
      32: getfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      35: astore_1
      36: aload_1
      37: ifnonnull     42
      40: aconst_null
      41: areturn
      42: aload_1
      43: invokestatic  #31                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$200:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Ljava/lang/Object;
      46: astore_2
      47: aload_1
      48: invokestatic  #33                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$300:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/ChannelPromise;
      51: astore_3
      52: aload_0
      53: aload_1
      54: iconst_1
      55: invokespecial #34                 // Method recycle:(Lio/netty/channel/PendingWriteQueue$PendingWrite;Z)V
      58: aload_0
      59: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      62: aload_2
      63: aload_3
      64: invokeinterface #41,  3           // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      69: areturn

  public io.netty.channel.ChannelPromise remove();
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          31
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      15: invokeinterface #16,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      20: ifne          31
      23: new           #17                 // class java/lang/AssertionError
      26: dup
      27: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: aload_0
      32: getfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      35: astore_1
      36: aload_1
      37: ifnonnull     42
      40: aconst_null
      41: areturn
      42: aload_1
      43: invokestatic  #33                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$300:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/ChannelPromise;
      46: astore_2
      47: aload_1
      48: invokestatic  #31                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$200:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Ljava/lang/Object;
      51: invokestatic  #32                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      54: aload_0
      55: aload_1
      56: iconst_1
      57: invokespecial #34                 // Method recycle:(Lio/netty/channel/PendingWriteQueue$PendingWrite;Z)V
      60: aload_2
      61: areturn

  public java.lang.Object current();
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          31
       6: aload_0
       7: getfield      #5                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      10: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      15: invokeinterface #16,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      20: ifne          31
      23: new           #17                 // class java/lang/AssertionError
      26: dup
      27: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      30: athrow
      31: aload_0
      32: getfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      35: astore_1
      36: aload_1
      37: ifnonnull     42
      40: aconst_null
      41: areturn
      42: aload_1
      43: invokestatic  #31                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$200:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Ljava/lang/Object;
      46: areturn

  private void recycle(io.netty.channel.PendingWriteQueue$PendingWrite, boolean);
    Code:
       0: aload_1
       1: invokestatic  #30                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$000:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)Lio/netty/channel/PendingWriteQueue$PendingWrite;
       4: astore_3
       5: aload_1
       6: invokestatic  #27                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$100:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)J
       9: lstore        4
      11: iload_2
      12: ifeq          73
      15: aload_3
      16: ifnonnull     37
      19: aload_0
      20: aload_0
      21: aconst_null
      22: dup_x1
      23: putfield      #25                 // Field tail:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      26: putfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      29: aload_0
      30: iconst_0
      31: putfield      #20                 // Field size:I
      34: goto          73
      37: aload_0
      38: aload_3
      39: putfield      #19                 // Field head:Lio/netty/channel/PendingWriteQueue$PendingWrite;
      42: aload_0
      43: dup
      44: getfield      #20                 // Field size:I
      47: iconst_1
      48: isub
      49: putfield      #20                 // Field size:I
      52: getstatic     #14                 // Field $assertionsDisabled:Z
      55: ifne          73
      58: aload_0
      59: getfield      #20                 // Field size:I
      62: ifgt          73
      65: new           #17                 // class java/lang/AssertionError
      68: dup
      69: invokespecial #18                 // Method java/lang/AssertionError."<init>":()V
      72: athrow
      73: aload_1
      74: invokestatic  #44                 // Method io/netty/channel/PendingWriteQueue$PendingWrite.access$400:(Lio/netty/channel/PendingWriteQueue$PendingWrite;)V
      77: aload_0
      78: getfield      #9                  // Field buffer:Lio/netty/channel/ChannelOutboundBuffer;
      81: ifnull        93
      84: aload_0
      85: getfield      #9                  // Field buffer:Lio/netty/channel/ChannelOutboundBuffer;
      88: lload         4
      90: invokevirtual #45                 // Method io/netty/channel/ChannelOutboundBuffer.decrementPendingOutboundBytes:(J)V
      93: return

  private static void safeFail(io.netty.channel.ChannelPromise, java.lang.Throwable);
    Code:
       0: aload_0
       1: instanceof    #46                 // class io/netty/channel/VoidChannelPromise
       4: ifne          29
       7: aload_0
       8: aload_1
       9: invokeinterface #47,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      14: ifne          29
      17: getstatic     #48                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      20: ldc           #49                 // String Failed to mark a promise as failure because it\'s done already: {}
      22: aload_0
      23: aload_1
      24: invokeinterface #50,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      29: return

  static {};
    Code:
       0: ldc_w         #51                 // class io/netty/channel/PendingWriteQueue
       3: invokevirtual #52                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #14                 // Field $assertionsDisabled:Z
      17: ldc_w         #51                 // class io/netty/channel/PendingWriteQueue
      20: invokestatic  #53                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      23: putstatic     #48                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      26: return
}
