Compiled from "UniqueName.java"
public class io.netty.util.UniqueName implements java.lang.Comparable<io.netty.util.UniqueName> {
  private static final java.util.concurrent.atomic.AtomicInteger nextId;

  private final int id;

  private final java.lang.String name;

  public io.netty.util.UniqueName(java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.Boolean>, java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String map
       7: invokestatic  #3                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: aload_3
      12: ifnull        25
      15: aload_3
      16: arraylength
      17: ifle          25
      20: aload_0
      21: aload_3
      22: invokevirtual #4                  // Method validateArgs:([Ljava/lang/Object;)V
      25: aload_1
      26: aload_2
      27: getstatic     #5                  // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      30: invokeinterface #6,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: ifnull        59
      38: new           #7                  // class java/lang/IllegalArgumentException
      41: dup
      42: ldc           #8                  // String \'%s\' is already in use
      44: iconst_1
      45: anewarray     #9                  // class java/lang/Object
      48: dup
      49: iconst_0
      50: aload_2
      51: aastore
      52: invokestatic  #10                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      55: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: aload_0
      60: aload_2
      61: ldc           #12                 // String name
      63: invokestatic  #3                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      66: checkcast     #13                 // class java/lang/String
      69: putfield      #14                 // Field name:Ljava/lang/String;
      72: aload_0
      73: getstatic     #15                 // Field nextId:Ljava/util/concurrent/atomic/AtomicInteger;
      76: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      79: putfield      #17                 // Field id:I
      82: return

  protected io.netty.util.UniqueName(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #12                 // String name
       8: invokestatic  #3                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #13                 // class java/lang/String
      14: putfield      #14                 // Field name:Ljava/lang/String;
      17: aload_0
      18: getstatic     #15                 // Field nextId:Ljava/util/concurrent/atomic/AtomicInteger;
      21: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      24: putfield      #17                 // Field id:I
      27: return

  protected void validateArgs(java.lang.Object...);
    Code:
       0: return

  public final java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #14                 // Field name:Ljava/lang/String;
       4: areturn

  public final int id();
    Code:
       0: aload_0
       1: getfield      #17                 // Field id:I
       4: ireturn

  public final int hashCode();
    Code:
       0: aload_0
       1: invokespecial #18                 // Method java/lang/Object.hashCode:()I
       4: ireturn

  public final boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       5: ireturn

  public int compareTo(io.netty.util.UniqueName);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_0
       8: getfield      #14                 // Field name:Ljava/lang/String;
      11: aload_1
      12: getfield      #14                 // Field name:Ljava/lang/String;
      15: invokevirtual #20                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      18: istore_2
      19: iload_2
      20: ifeq          25
      23: iload_2
      24: ireturn
      25: aload_0
      26: getfield      #17                 // Field id:I
      29: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: aload_1
      33: getfield      #17                 // Field id:I
      36: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: invokevirtual #22                 // Method java/lang/Integer.compareTo:(Ljava/lang/Integer;)I
      42: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method name:()Ljava/lang/String;
       4: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #24                 // class io/netty/util/UniqueName
       5: invokevirtual #25                 // Method compareTo:(Lio/netty/util/UniqueName;)I
       8: ireturn

  static {};
    Code:
       0: new           #26                 // class java/util/concurrent/atomic/AtomicInteger
       3: dup
       4: invokespecial #27                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       7: putstatic     #15                 // Field nextId:Ljava/util/concurrent/atomic/AtomicInteger;
      10: return
}
