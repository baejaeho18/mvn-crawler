Compiled from "SpdySession.java"
final class io.netty.handler.codec.spdy.SpdySession {
  private final java.util.concurrent.atomic.AtomicInteger activeLocalStreams;

  private final java.util.concurrent.atomic.AtomicInteger activeRemoteStreams;

  private final java.util.Map<java.lang.Integer, io.netty.handler.codec.spdy.SpdySession$StreamState> activeStreams;

  private final io.netty.handler.codec.spdy.SpdySession$StreamComparator streamComparator;

  private final java.util.concurrent.atomic.AtomicInteger sendWindowSize;

  private final java.util.concurrent.atomic.AtomicInteger receiveWindowSize;

  io.netty.handler.codec.spdy.SpdySession(int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      12: putfield      #5                  // Field activeLocalStreams:Ljava/util/concurrent/atomic/AtomicInteger;
      15: aload_0
      16: new           #3                  // class java/util/concurrent/atomic/AtomicInteger
      19: dup
      20: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      23: putfield      #6                  // Field activeRemoteStreams:Ljava/util/concurrent/atomic/AtomicInteger;
      26: aload_0
      27: invokestatic  #7                  // Method io/netty/util/internal/PlatformDependent.newConcurrentHashMap:()Ljava/util/concurrent/ConcurrentMap;
      30: putfield      #1                  // Field activeStreams:Ljava/util/Map;
      33: aload_0
      34: new           #8                  // class io/netty/handler/codec/spdy/SpdySession$StreamComparator
      37: dup
      38: aload_0
      39: invokespecial #9                  // Method io/netty/handler/codec/spdy/SpdySession$StreamComparator."<init>":(Lio/netty/handler/codec/spdy/SpdySession;)V
      42: putfield      #10                 // Field streamComparator:Lio/netty/handler/codec/spdy/SpdySession$StreamComparator;
      45: aload_0
      46: new           #3                  // class java/util/concurrent/atomic/AtomicInteger
      49: dup
      50: iload_1
      51: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      54: putfield      #12                 // Field sendWindowSize:Ljava/util/concurrent/atomic/AtomicInteger;
      57: aload_0
      58: new           #3                  // class java/util/concurrent/atomic/AtomicInteger
      61: dup
      62: iload_2
      63: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      66: putfield      #13                 // Field receiveWindowSize:Ljava/util/concurrent/atomic/AtomicInteger;
      69: return

  int numActiveStreams(boolean);
    Code:
       0: iload_1
       1: ifeq          12
       4: aload_0
       5: getfield      #6                  // Field activeRemoteStreams:Ljava/util/concurrent/atomic/AtomicInteger;
       8: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      11: ireturn
      12: aload_0
      13: getfield      #5                  // Field activeLocalStreams:Ljava/util/concurrent/atomic/AtomicInteger;
      16: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      19: ireturn

  boolean noActiveStreams();
    Code:
       0: aload_0
       1: getfield      #1                  // Field activeStreams:Ljava/util/Map;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  boolean isActiveStream(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field activeStreams:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #17,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      13: ireturn

  java.util.Map<java.lang.Integer, io.netty.handler.codec.spdy.SpdySession$StreamState> activeStreams();
    Code:
       0: new           #18                 // class java/util/TreeMap
       3: dup
       4: aload_0
       5: getfield      #10                 // Field streamComparator:Lio/netty/handler/codec/spdy/SpdySession$StreamComparator;
       8: invokespecial #19                 // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
      11: astore_1
      12: aload_1
      13: aload_0
      14: getfield      #1                  // Field activeStreams:Ljava/util/Map;
      17: invokeinterface #20,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      22: aload_1
      23: areturn

  void acceptStream(int, byte, boolean, boolean, int, int, boolean);
    Code:
       0: iload_3
       1: ifeq          9
       4: iload         4
       6: ifne          71
       9: aload_0
      10: getfield      #1                  // Field activeStreams:Ljava/util/Map;
      13: iload_1
      14: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      17: new           #21                 // class io/netty/handler/codec/spdy/SpdySession$StreamState
      20: dup
      21: iload_2
      22: iload_3
      23: iload         4
      25: iload         5
      27: iload         6
      29: invokespecial #22                 // Method io/netty/handler/codec/spdy/SpdySession$StreamState."<init>":(BZZII)V
      32: invokeinterface #23,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #21                 // class io/netty/handler/codec/spdy/SpdySession$StreamState
      40: astore        8
      42: aload         8
      44: ifnonnull     71
      47: iload         7
      49: ifeq          63
      52: aload_0
      53: getfield      #6                  // Field activeRemoteStreams:Ljava/util/concurrent/atomic/AtomicInteger;
      56: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      59: pop
      60: goto          71
      63: aload_0
      64: getfield      #5                  // Field activeLocalStreams:Ljava/util/concurrent/atomic/AtomicInteger;
      67: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      70: pop
      71: return

  private io.netty.handler.codec.spdy.SpdySession$StreamState removeActiveStream(int, boolean);
    Code:
       0: aload_0
       1: getfield      #1                  // Field activeStreams:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #25,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #21                 // class io/netty/handler/codec/spdy/SpdySession$StreamState
      16: astore_3
      17: aload_3
      18: ifnull        44
      21: iload_2
      22: ifeq          36
      25: aload_0
      26: getfield      #6                  // Field activeRemoteStreams:Ljava/util/concurrent/atomic/AtomicInteger;
      29: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      32: pop
      33: goto          44
      36: aload_0
      37: getfield      #5                  // Field activeLocalStreams:Ljava/util/concurrent/atomic/AtomicInteger;
      40: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      43: pop
      44: aload_3
      45: areturn

  void removeStream(int, java.lang.Throwable, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_3
       3: invokespecial #27                 // Method removeActiveStream:(IZ)Lio/netty/handler/codec/spdy/SpdySession$StreamState;
       6: astore        4
       8: aload         4
      10: ifnull        19
      13: aload         4
      15: aload_2
      16: invokevirtual #28                 // Method io/netty/handler/codec/spdy/SpdySession$StreamState.clearPendingWrites:(Ljava/lang/Throwable;)V
      19: return

  boolean isRemoteSideClosed(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field activeStreams:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #21                 // class io/netty/handler/codec/spdy/SpdySession$StreamState
      16: astore_2
      17: aload_2
      18: ifnull        28
      21: aload_2
      22: invokevirtual #30                 // Method io/netty/handler/codec/spdy/SpdySession$StreamState.isRemoteSideClosed:()Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  void closeRemoteSide(int, boolean);
    Code:
       0: aload_0
       1: getfield      #1                  // Field activeStreams:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #21                 // class io/netty/handler/codec/spdy/SpdySession$StreamState
      16: astore_3
      17: aload_3
      18: ifnull        39
      21: aload_3
      22: invokevirtual #31                 // Method io/netty/handler/codec/spdy/SpdySession$StreamState.closeRemoteSide:()V
      25: aload_3
      26: invokevirtual #32                 // Method io/netty/handler/codec/spdy/SpdySession$StreamState.isLocalSideClosed:()Z
      29: ifeq          39
      32: aload_0
      33: iload_1
      34: iload_2
      35: invokespecial #27                 // Method removeActiveStream:(IZ)Lio/netty/handler/codec/spdy/SpdySession$StreamState;
      38: pop
      39: return

  boolean isLocalSideClosed(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field activeStreams:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #21                 // class io/netty/handler/codec/spdy/SpdySession$StreamState
      16: astore_2
      17: aload_2
      18: ifnull        28
      21: aload_2
      22: invokevirtual #32                 // Method io/netty/handler/codec/spdy/SpdySession$StreamState.isLocalSideClosed:()Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  void closeLocalSide(int, boolean);
    Code:
       0: aload_0
       1: getfield      #1                  // Field activeStreams:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #21                 // class io/netty/handler/codec/spdy/SpdySession$StreamState
      16: astore_3
      17: aload_3
      18: ifnull        39
      21: aload_3
      22: invokevirtual #33                 // Method io/netty/handler/codec/spdy/SpdySession$StreamState.closeLocalSide:()V
      25: aload_3
      26: invokevirtual #30                 // Method io/netty/handler/codec/spdy/SpdySession$StreamState.isRemoteSideClosed:()Z
      29: ifeq          39
      32: aload_0
      33: iload_1
      34: iload_2
      35: invokespecial #27                 // Method removeActiveStream:(IZ)Lio/netty/handler/codec/spdy/SpdySession$StreamState;
      38: pop
      39: return

  boolean hasReceivedReply(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field activeStreams:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #21                 // class io/netty/handler/codec/spdy/SpdySession$StreamState
      16: astore_2
      17: aload_2
      18: ifnull        32
      21: aload_2
      22: invokevirtual #34                 // Method io/netty/handler/codec/spdy/SpdySession$StreamState.hasReceivedReply:()Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  void receivedReply(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field activeStreams:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #21                 // class io/netty/handler/codec/spdy/SpdySession$StreamState
      16: astore_2
      17: aload_2
      18: ifnull        25
      21: aload_2
      22: invokevirtual #35                 // Method io/netty/handler/codec/spdy/SpdySession$StreamState.receivedReply:()V
      25: return

  int getSendWindowSize(int);
    Code:
       0: iload_1
       1: ifne          12
       4: aload_0
       5: getfield      #12                 // Field sendWindowSize:Ljava/util/concurrent/atomic/AtomicInteger;
       8: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      11: ireturn
      12: aload_0
      13: getfield      #1                  // Field activeStreams:Ljava/util/Map;
      16: iload_1
      17: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #21                 // class io/netty/handler/codec/spdy/SpdySession$StreamState
      28: astore_2
      29: aload_2
      30: ifnull        40
      33: aload_2
      34: invokevirtual #36                 // Method io/netty/handler/codec/spdy/SpdySession$StreamState.getSendWindowSize:()I
      37: goto          41
      40: iconst_m1
      41: ireturn

  int updateSendWindowSize(int, int);
    Code:
       0: iload_1
       1: ifne          13
       4: aload_0
       5: getfield      #12                 // Field sendWindowSize:Ljava/util/concurrent/atomic/AtomicInteger;
       8: iload_2
       9: invokevirtual #37                 // Method java/util/concurrent/atomic/AtomicInteger.addAndGet:(I)I
      12: ireturn
      13: aload_0
      14: getfield      #1                  // Field activeStreams:Ljava/util/Map;
      17: iload_1
      18: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      21: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #21                 // class io/netty/handler/codec/spdy/SpdySession$StreamState
      29: astore_3
      30: aload_3
      31: ifnull        42
      34: aload_3
      35: iload_2
      36: invokevirtual #38                 // Method io/netty/handler/codec/spdy/SpdySession$StreamState.updateSendWindowSize:(I)I
      39: goto          43
      42: iconst_m1
      43: ireturn

  int updateReceiveWindowSize(int, int);
    Code:
       0: iload_1
       1: ifne          13
       4: aload_0
       5: getfield      #13                 // Field receiveWindowSize:Ljava/util/concurrent/atomic/AtomicInteger;
       8: iload_2
       9: invokevirtual #37                 // Method java/util/concurrent/atomic/AtomicInteger.addAndGet:(I)I
      12: ireturn
      13: aload_0
      14: getfield      #1                  // Field activeStreams:Ljava/util/Map;
      17: iload_1
      18: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      21: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #21                 // class io/netty/handler/codec/spdy/SpdySession$StreamState
      29: astore_3
      30: aload_3
      31: ifnonnull     36
      34: iconst_m1
      35: ireturn
      36: iload_2
      37: ifle          45
      40: aload_3
      41: iconst_0
      42: invokevirtual #39                 // Method io/netty/handler/codec/spdy/SpdySession$StreamState.setReceiveWindowSizeLowerBound:(I)V
      45: aload_3
      46: iload_2
      47: invokevirtual #40                 // Method io/netty/handler/codec/spdy/SpdySession$StreamState.updateReceiveWindowSize:(I)I
      50: ireturn

  int getReceiveWindowSizeLowerBound(int);
    Code:
       0: iload_1
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: getfield      #1                  // Field activeStreams:Ljava/util/Map;
      10: iload_1
      11: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #21                 // class io/netty/handler/codec/spdy/SpdySession$StreamState
      22: astore_2
      23: aload_2
      24: ifnull        34
      27: aload_2
      28: invokevirtual #41                 // Method io/netty/handler/codec/spdy/SpdySession$StreamState.getReceiveWindowSizeLowerBound:()I
      31: goto          35
      34: iconst_0
      35: ireturn

  void updateAllSendWindowSizes(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field activeStreams:Ljava/util/Map;
       4: invokeinterface #42,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #43,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          43
      24: aload_2
      25: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #21                 // class io/netty/handler/codec/spdy/SpdySession$StreamState
      33: astore_3
      34: aload_3
      35: iload_1
      36: invokevirtual #38                 // Method io/netty/handler/codec/spdy/SpdySession$StreamState.updateSendWindowSize:(I)I
      39: pop
      40: goto          15
      43: return

  void updateAllReceiveWindowSizes(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field activeStreams:Ljava/util/Map;
       4: invokeinterface #42,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #43,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          52
      24: aload_2
      25: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #21                 // class io/netty/handler/codec/spdy/SpdySession$StreamState
      33: astore_3
      34: aload_3
      35: iload_1
      36: invokevirtual #40                 // Method io/netty/handler/codec/spdy/SpdySession$StreamState.updateReceiveWindowSize:(I)I
      39: pop
      40: iload_1
      41: ifge          49
      44: aload_3
      45: iload_1
      46: invokevirtual #39                 // Method io/netty/handler/codec/spdy/SpdySession$StreamState.setReceiveWindowSizeLowerBound:(I)V
      49: goto          15
      52: return

  boolean putPendingWrite(int, io.netty.handler.codec.spdy.SpdySession$PendingWrite);
    Code:
       0: aload_0
       1: getfield      #1                  // Field activeStreams:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #21                 // class io/netty/handler/codec/spdy/SpdySession$StreamState
      16: astore_3
      17: aload_3
      18: ifnull        33
      21: aload_3
      22: aload_2
      23: invokevirtual #46                 // Method io/netty/handler/codec/spdy/SpdySession$StreamState.putPendingWrite:(Lio/netty/handler/codec/spdy/SpdySession$PendingWrite;)Z
      26: ifeq          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  io.netty.handler.codec.spdy.SpdySession$PendingWrite getPendingWrite(int);
    Code:
       0: iload_1
       1: ifne          77
       4: aload_0
       5: invokevirtual #47                 // Method activeStreams:()Ljava/util/Map;
       8: invokeinterface #48,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      13: invokeinterface #49,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          75
      28: aload_2
      29: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #50                 // class java/util/Map$Entry
      37: astore_3
      38: aload_3
      39: invokeinterface #51,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      44: checkcast     #21                 // class io/netty/handler/codec/spdy/SpdySession$StreamState
      47: astore        4
      49: aload         4
      51: invokevirtual #36                 // Method io/netty/handler/codec/spdy/SpdySession$StreamState.getSendWindowSize:()I
      54: ifle          72
      57: aload         4
      59: invokevirtual #52                 // Method io/netty/handler/codec/spdy/SpdySession$StreamState.getPendingWrite:()Lio/netty/handler/codec/spdy/SpdySession$PendingWrite;
      62: astore        5
      64: aload         5
      66: ifnull        72
      69: aload         5
      71: areturn
      72: goto          19
      75: aconst_null
      76: areturn
      77: aload_0
      78: getfield      #1                  // Field activeStreams:Ljava/util/Map;
      81: iload_1
      82: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      85: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      90: checkcast     #21                 // class io/netty/handler/codec/spdy/SpdySession$StreamState
      93: astore_2
      94: aload_2
      95: ifnull        105
      98: aload_2
      99: invokevirtual #52                 // Method io/netty/handler/codec/spdy/SpdySession$StreamState.getPendingWrite:()Lio/netty/handler/codec/spdy/SpdySession$PendingWrite;
     102: goto          106
     105: aconst_null
     106: areturn

  io.netty.handler.codec.spdy.SpdySession$PendingWrite removePendingWrite(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field activeStreams:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #21                 // class io/netty/handler/codec/spdy/SpdySession$StreamState
      16: astore_2
      17: aload_2
      18: ifnull        28
      21: aload_2
      22: invokevirtual #53                 // Method io/netty/handler/codec/spdy/SpdySession$StreamState.removePendingWrite:()Lio/netty/handler/codec/spdy/SpdySession$PendingWrite;
      25: goto          29
      28: aconst_null
      29: areturn

  static java.util.Map access$000(io.netty.handler.codec.spdy.SpdySession);
    Code:
       0: aload_0
       1: getfield      #1                  // Field activeStreams:Ljava/util/Map;
       4: areturn
}
