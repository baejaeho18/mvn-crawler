Compiled from "AbstractEpollChannel.java"
abstract class io.netty.channel.epoll.AbstractEpollChannel extends io.netty.channel.AbstractChannel implements io.netty.channel.unix.UnixChannel {
  private static final io.netty.channel.ChannelMetadata DATA;

  private final int readFlag;

  private final io.netty.channel.unix.FileDescriptor fileDescriptor;

  protected int flags;

  protected volatile boolean active;

  private volatile boolean inputShutdown;

  io.netty.channel.epoll.AbstractEpollChannel(int, int);
    Code:
       0: aload_0
       1: aconst_null
       2: iload_1
       3: iload_2
       4: iconst_0
       5: invokespecial #3                  // Method "<init>":(Lio/netty/channel/Channel;IIZ)V
       8: return

  io.netty.channel.epoll.AbstractEpollChannel(io.netty.channel.Channel, int, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: new           #4                  // class io/netty/channel/unix/FileDescriptor
       5: dup
       6: iload_2
       7: invokespecial #5                  // Method io/netty/channel/unix/FileDescriptor."<init>":(I)V
      10: iload_3
      11: iload         4
      13: invokespecial #6                  // Method "<init>":(Lio/netty/channel/Channel;Lio/netty/channel/unix/FileDescriptor;IZ)V
      16: return

  io.netty.channel.epoll.AbstractEpollChannel(io.netty.channel.Channel, io.netty.channel.unix.FileDescriptor, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method io/netty/channel/AbstractChannel."<init>":(Lio/netty/channel/Channel;)V
       5: aload_0
       6: getstatic     #8                  // Field io/netty/channel/epoll/Native.EPOLLET:I
       9: putfield      #9                  // Field flags:I
      12: aload_2
      13: ifnonnull     26
      16: new           #10                 // class java/lang/NullPointerException
      19: dup
      20: ldc           #11                 // String fd
      22: invokespecial #12                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: iload_3
      28: putfield      #1                  // Field readFlag:I
      31: aload_0
      32: dup
      33: getfield      #9                  // Field flags:I
      36: iload_3
      37: ior
      38: putfield      #9                  // Field flags:I
      41: aload_0
      42: iload         4
      44: putfield      #13                 // Field active:Z
      47: aload_0
      48: aload_2
      49: putfield      #14                 // Field fileDescriptor:Lio/netty/channel/unix/FileDescriptor;
      52: return

  void setFlag(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #15                 // Method isFlagSet:(I)Z
       5: ifne          22
       8: aload_0
       9: dup
      10: getfield      #9                  // Field flags:I
      13: iload_1
      14: ior
      15: putfield      #9                  // Field flags:I
      18: aload_0
      19: invokespecial #16                 // Method modifyEvents:()V
      22: return

  void clearFlag(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #15                 // Method isFlagSet:(I)Z
       5: ifeq          24
       8: aload_0
       9: dup
      10: getfield      #9                  // Field flags:I
      13: iload_1
      14: iconst_m1
      15: ixor
      16: iand
      17: putfield      #9                  // Field flags:I
      20: aload_0
      21: invokespecial #16                 // Method modifyEvents:()V
      24: return

  boolean isFlagSet(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field flags:I
       4: iload_1
       5: iand
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public final io.netty.channel.unix.FileDescriptor fd();
    Code:
       0: aload_0
       1: getfield      #14                 // Field fileDescriptor:Lio/netty/channel/unix/FileDescriptor;
       4: areturn

  public abstract io.netty.channel.epoll.EpollChannelConfig config();

  public boolean isActive();
    Code:
       0: aload_0
       1: getfield      #13                 // Field active:Z
       4: ireturn

  public io.netty.channel.ChannelMetadata metadata();
    Code:
       0: getstatic     #17                 // Field DATA:Lio/netty/channel/ChannelMetadata;
       3: areturn

  protected void doClose() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #13                 // Field active:Z
       4: istore_1
       5: aload_0
       6: iconst_0
       7: putfield      #13                 // Field active:Z
      10: aload_0
      11: getfield      #14                 // Field fileDescriptor:Lio/netty/channel/unix/FileDescriptor;
      14: astore_2
      15: aload_0
      16: invokevirtual #18                 // Method doDeregister:()V
      19: iload_1
      20: ifeq          31
      23: aload_0
      24: aload_2
      25: invokevirtual #19                 // Method io/netty/channel/unix/FileDescriptor.intValue:()I
      28: invokevirtual #20                 // Method shutdown:(I)V
      31: aload_2
      32: invokevirtual #21                 // Method io/netty/channel/unix/FileDescriptor.close:()V
      35: goto          45
      38: astore_3
      39: aload_2
      40: invokevirtual #21                 // Method io/netty/channel/unix/FileDescriptor.close:()V
      43: aload_3
      44: athrow
      45: return
    Exception table:
       from    to  target type
          15    31    38   any
          38    39    38   any

  protected void shutdown(int) throws java.io.IOException;
    Code:
       0: return

  protected void doDisconnect() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method doClose:()V
       4: return

  protected boolean isCompatible(io.netty.channel.EventLoop);
    Code:
       0: aload_1
       1: instanceof    #23                 // class io/netty/channel/epoll/EpollEventLoop
       4: ireturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #14                 // Field fileDescriptor:Lio/netty/channel/unix/FileDescriptor;
       4: invokevirtual #24                 // Method io/netty/channel/unix/FileDescriptor.isOpen:()Z
       7: ireturn

  protected void doDeregister() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method eventLoop:()Lio/netty/channel/EventLoop;
       4: checkcast     #23                 // class io/netty/channel/epoll/EpollEventLoop
       7: aload_0
       8: invokevirtual #26                 // Method io/netty/channel/epoll/EpollEventLoop.remove:(Lio/netty/channel/epoll/AbstractEpollChannel;)V
      11: return

  protected void doBeginRead() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method unsafe:()Lio/netty/channel/Channel$Unsafe;
       4: checkcast     #28                 // class io/netty/channel/epoll/AbstractEpollChannel$AbstractEpollUnsafe
       7: iconst_1
       8: putfield      #29                 // Field io/netty/channel/epoll/AbstractEpollChannel$AbstractEpollUnsafe.readPending:Z
      11: aload_0
      12: aload_0
      13: getfield      #1                  // Field readFlag:I
      16: invokevirtual #30                 // Method setFlag:(I)V
      19: return

  final void clearEpollIn();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method isRegistered:()Z
       4: ifeq          54
       7: aload_0
       8: invokevirtual #25                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      11: astore_1
      12: aload_0
      13: invokevirtual #27                 // Method unsafe:()Lio/netty/channel/Channel$Unsafe;
      16: checkcast     #28                 // class io/netty/channel/epoll/AbstractEpollChannel$AbstractEpollUnsafe
      19: astore_2
      20: aload_1
      21: invokeinterface #32,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      26: ifeq          36
      29: aload_2
      30: invokevirtual #33                 // Method io/netty/channel/epoll/AbstractEpollChannel$AbstractEpollUnsafe.clearEpollIn0:()V
      33: goto          51
      36: aload_1
      37: new           #34                 // class io/netty/channel/epoll/AbstractEpollChannel$1
      40: dup
      41: aload_0
      42: aload_2
      43: invokespecial #35                 // Method io/netty/channel/epoll/AbstractEpollChannel$1."<init>":(Lio/netty/channel/epoll/AbstractEpollChannel;Lio/netty/channel/epoll/AbstractEpollChannel$AbstractEpollUnsafe;)V
      46: invokeinterface #36,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      51: goto          69
      54: aload_0
      55: dup
      56: getfield      #9                  // Field flags:I
      59: aload_0
      60: getfield      #1                  // Field readFlag:I
      63: iconst_m1
      64: ixor
      65: iand
      66: putfield      #9                  // Field flags:I
      69: return

  private void modifyEvents() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method isOpen:()Z
       4: ifeq          25
       7: aload_0
       8: invokevirtual #31                 // Method isRegistered:()Z
      11: ifeq          25
      14: aload_0
      15: invokevirtual #25                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      18: checkcast     #23                 // class io/netty/channel/epoll/EpollEventLoop
      21: aload_0
      22: invokevirtual #38                 // Method io/netty/channel/epoll/EpollEventLoop.modify:(Lio/netty/channel/epoll/AbstractEpollChannel;)V
      25: return

  protected void doRegister() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method eventLoop:()Lio/netty/channel/EventLoop;
       4: checkcast     #23                 // class io/netty/channel/epoll/EpollEventLoop
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #39                 // Method io/netty/channel/epoll/EpollEventLoop.add:(Lio/netty/channel/epoll/AbstractEpollChannel;)V
      13: return

  protected final boolean isInputShutdown0();
    Code:
       0: aload_0
       1: getfield      #2                  // Field inputShutdown:Z
       4: ireturn

  protected abstract io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe newUnsafe();

  protected final io.netty.buffer.ByteBuf newDirectBuffer(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #40                 // Method newDirectBuffer:(Ljava/lang/Object;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
       6: areturn

  protected final io.netty.buffer.ByteBuf newDirectBuffer(java.lang.Object, io.netty.buffer.ByteBuf);
    Code:
       0: aload_2
       1: invokevirtual #41                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       4: istore_3
       5: iload_3
       6: ifne          17
       9: aload_1
      10: invokestatic  #42                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      13: getstatic     #43                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
      16: areturn
      17: aload_0
      18: invokevirtual #44                 // Method alloc:()Lio/netty/buffer/ByteBufAllocator;
      21: astore        4
      23: aload         4
      25: invokeinterface #45,  1           // InterfaceMethod io/netty/buffer/ByteBufAllocator.isDirectBufferPooled:()Z
      30: ifeq          42
      33: aload_1
      34: aload_2
      35: aload         4
      37: iload_3
      38: invokestatic  #46                 // Method newDirectBuffer0:(Ljava/lang/Object;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBufAllocator;I)Lio/netty/buffer/ByteBuf;
      41: areturn
      42: invokestatic  #47                 // Method io/netty/buffer/ByteBufUtil.threadLocalDirectBuffer:()Lio/netty/buffer/ByteBuf;
      45: astore        5
      47: aload         5
      49: ifnonnull     61
      52: aload_1
      53: aload_2
      54: aload         4
      56: iload_3
      57: invokestatic  #46                 // Method newDirectBuffer0:(Ljava/lang/Object;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBufAllocator;I)Lio/netty/buffer/ByteBuf;
      60: areturn
      61: aload         5
      63: aload_2
      64: aload_2
      65: invokevirtual #48                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
      68: iload_3
      69: invokevirtual #49                 // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf;
      72: pop
      73: aload_1
      74: invokestatic  #42                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      77: aload         5
      79: areturn

  private static io.netty.buffer.ByteBuf newDirectBuffer0(java.lang.Object, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBufAllocator, int);
    Code:
       0: aload_2
       1: iload_3
       2: invokeinterface #50,  2           // InterfaceMethod io/netty/buffer/ByteBufAllocator.directBuffer:(I)Lio/netty/buffer/ByteBuf;
       7: astore        4
       9: aload         4
      11: aload_1
      12: aload_1
      13: invokevirtual #48                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
      16: iload_3
      17: invokevirtual #49                 // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf;
      20: pop
      21: aload_0
      22: invokestatic  #42                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      25: aload         4
      27: areturn

  protected static void checkResolvable(java.net.InetSocketAddress);
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method java/net/InetSocketAddress.isUnresolved:()Z
       4: ifeq          15
       7: new           #52                 // class java/nio/channels/UnresolvedAddressException
      10: dup
      11: invokespecial #53                 // Method java/nio/channels/UnresolvedAddressException."<init>":()V
      14: athrow
      15: return

  protected final int doReadBytes(io.netty.buffer.ByteBuf) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #54                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
       4: istore_2
       5: aload_1
       6: invokevirtual #55                 // Method io/netty/buffer/ByteBuf.hasMemoryAddress:()Z
       9: ifeq          35
      12: aload_0
      13: getfield      #14                 // Field fileDescriptor:Lio/netty/channel/unix/FileDescriptor;
      16: invokevirtual #19                 // Method io/netty/channel/unix/FileDescriptor.intValue:()I
      19: aload_1
      20: invokevirtual #56                 // Method io/netty/buffer/ByteBuf.memoryAddress:()J
      23: iload_2
      24: aload_1
      25: invokevirtual #57                 // Method io/netty/buffer/ByteBuf.capacity:()I
      28: invokestatic  #58                 // Method io/netty/channel/epoll/Native.readAddress:(IJII)I
      31: istore_3
      32: goto          69
      35: aload_1
      36: iload_2
      37: aload_1
      38: invokevirtual #59                 // Method io/netty/buffer/ByteBuf.writableBytes:()I
      41: invokevirtual #60                 // Method io/netty/buffer/ByteBuf.internalNioBuffer:(II)Ljava/nio/ByteBuffer;
      44: astore        4
      46: aload_0
      47: getfield      #14                 // Field fileDescriptor:Lio/netty/channel/unix/FileDescriptor;
      50: invokevirtual #19                 // Method io/netty/channel/unix/FileDescriptor.intValue:()I
      53: aload         4
      55: aload         4
      57: invokevirtual #61                 // Method java/nio/ByteBuffer.position:()I
      60: aload         4
      62: invokevirtual #62                 // Method java/nio/ByteBuffer.limit:()I
      65: invokestatic  #63                 // Method io/netty/channel/epoll/Native.read:(ILjava/nio/ByteBuffer;II)I
      68: istore_3
      69: iload_3
      70: ifle          81
      73: aload_1
      74: iload_2
      75: iload_3
      76: iadd
      77: invokevirtual #64                 // Method io/netty/buffer/ByteBuf.writerIndex:(I)Lio/netty/buffer/ByteBuf;
      80: pop
      81: iload_3
      82: ireturn

  protected final int doWriteBytes(io.netty.buffer.ByteBuf, int) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #41                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       4: istore_3
       5: iconst_0
       6: istore        4
       8: aload_1
       9: invokevirtual #55                 // Method io/netty/buffer/ByteBuf.hasMemoryAddress:()Z
      12: ifeq          98
      15: aload_1
      16: invokevirtual #56                 // Method io/netty/buffer/ByteBuf.memoryAddress:()J
      19: lstore        5
      21: aload_1
      22: invokevirtual #48                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
      25: istore        7
      27: aload_1
      28: invokevirtual #54                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
      31: istore        8
      33: iload_2
      34: iconst_1
      35: isub
      36: istore        9
      38: iload         9
      40: iflt          95
      43: aload_0
      44: getfield      #14                 // Field fileDescriptor:Lio/netty/channel/unix/FileDescriptor;
      47: invokevirtual #19                 // Method io/netty/channel/unix/FileDescriptor.intValue:()I
      50: lload         5
      52: iload         7
      54: iload         8
      56: invokestatic  #65                 // Method io/netty/channel/epoll/Native.writeAddress:(IJII)I
      59: istore        10
      61: iload         10
      63: ifle          95
      66: iload         4
      68: iload         10
      70: iadd
      71: istore        4
      73: iload         4
      75: iload_3
      76: if_icmpne     82
      79: iload         4
      81: ireturn
      82: iload         7
      84: iload         10
      86: iadd
      87: istore        7
      89: iinc          9, -1
      92: goto          38
      95: goto          209
      98: aload_1
      99: invokevirtual #66                 // Method io/netty/buffer/ByteBuf.nioBufferCount:()I
     102: iconst_1
     103: if_icmpne     123
     106: aload_1
     107: aload_1
     108: invokevirtual #48                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
     111: aload_1
     112: invokevirtual #41                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
     115: invokevirtual #60                 // Method io/netty/buffer/ByteBuf.internalNioBuffer:(II)Ljava/nio/ByteBuffer;
     118: astore        5
     120: goto          129
     123: aload_1
     124: invokevirtual #67                 // Method io/netty/buffer/ByteBuf.nioBuffer:()Ljava/nio/ByteBuffer;
     127: astore        5
     129: iload_2
     130: iconst_1
     131: isub
     132: istore        6
     134: iload         6
     136: iflt          209
     139: aload         5
     141: invokevirtual #61                 // Method java/nio/ByteBuffer.position:()I
     144: istore        7
     146: aload         5
     148: invokevirtual #62                 // Method java/nio/ByteBuffer.limit:()I
     151: istore        8
     153: aload_0
     154: getfield      #14                 // Field fileDescriptor:Lio/netty/channel/unix/FileDescriptor;
     157: invokevirtual #19                 // Method io/netty/channel/unix/FileDescriptor.intValue:()I
     160: aload         5
     162: iload         7
     164: iload         8
     166: invokestatic  #68                 // Method io/netty/channel/epoll/Native.write:(ILjava/nio/ByteBuffer;II)I
     169: istore        9
     171: iload         9
     173: ifle          209
     176: aload         5
     178: iload         7
     180: iload         9
     182: iadd
     183: invokevirtual #69                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     186: pop
     187: iload         4
     189: iload         9
     191: iadd
     192: istore        4
     194: iload         4
     196: iload_3
     197: if_icmpne     203
     200: iload         4
     202: ireturn
     203: iinc          6, -1
     206: goto          134
     209: iload         4
     211: iload_3
     212: if_icmpge     222
     215: aload_0
     216: getstatic     #70                 // Field io/netty/channel/epoll/Native.EPOLLOUT:I
     219: invokevirtual #30                 // Method setFlag:(I)V
     222: iload         4
     224: ireturn

  protected io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method newUnsafe:()Lio/netty/channel/epoll/AbstractEpollChannel$AbstractEpollUnsafe;
       4: areturn

  public io.netty.channel.ChannelConfig config();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method config:()Lio/netty/channel/epoll/EpollChannelConfig;
       4: areturn

  static boolean access$000(io.netty.channel.epoll.AbstractEpollChannel);
    Code:
       0: aload_0
       1: getfield      #2                  // Field inputShutdown:Z
       4: ireturn

  static boolean access$002(io.netty.channel.epoll.AbstractEpollChannel, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #2                  // Field inputShutdown:Z
       6: ireturn

  static int access$100(io.netty.channel.epoll.AbstractEpollChannel);
    Code:
       0: aload_0
       1: getfield      #1                  // Field readFlag:I
       4: ireturn

  static {};
    Code:
       0: new           #73                 // class io/netty/channel/ChannelMetadata
       3: dup
       4: iconst_0
       5: invokespecial #74                 // Method io/netty/channel/ChannelMetadata."<init>":(Z)V
       8: putstatic     #17                 // Field DATA:Lio/netty/channel/ChannelMetadata;
      11: return
}
