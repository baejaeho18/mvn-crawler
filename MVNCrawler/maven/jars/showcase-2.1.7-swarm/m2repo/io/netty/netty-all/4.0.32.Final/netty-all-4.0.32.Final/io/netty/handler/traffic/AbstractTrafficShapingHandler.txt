Compiled from "AbstractTrafficShapingHandler.java"
public abstract class io.netty.handler.traffic.AbstractTrafficShapingHandler extends io.netty.channel.ChannelDuplexHandler {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  public static final long DEFAULT_CHECK_INTERVAL;

  public static final long DEFAULT_MAX_TIME;

  static final long DEFAULT_MAX_SIZE;

  static final long MINIMAL_WAIT;

  protected io.netty.handler.traffic.TrafficCounter trafficCounter;

  private volatile long writeLimit;

  private volatile long readLimit;

  protected volatile long maxTime;

  protected volatile long checkInterval;

  static final io.netty.util.AttributeKey<java.lang.Boolean> READ_SUSPENDED;

  static final io.netty.util.AttributeKey<java.lang.Runnable> REOPEN_TASK;

  volatile long maxWriteDelay;

  volatile long maxWriteSize;

  final int userDefinedWritabilityIndex;

  static final int CHANNEL_DEFAULT_USER_DEFINED_WRITABILITY_INDEX;

  static final int GLOBAL_DEFAULT_USER_DEFINED_WRITABILITY_INDEX;

  static final int GLOBALCHANNEL_DEFAULT_USER_DEFINED_WRITABILITY_INDEX;

  void setTrafficCounter(io.netty.handler.traffic.TrafficCounter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
       5: return

  int userDefinedWritabilityIndex();
    Code:
       0: aload_0
       1: instanceof    #3                  // class io/netty/handler/traffic/GlobalChannelTrafficShapingHandler
       4: ifeq          9
       7: iconst_3
       8: ireturn
       9: aload_0
      10: instanceof    #4                  // class io/netty/handler/traffic/GlobalTrafficShapingHandler
      13: ifeq          18
      16: iconst_2
      17: ireturn
      18: iconst_1
      19: ireturn

  protected io.netty.handler.traffic.AbstractTrafficShapingHandler(long, long, long, long);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method io/netty/channel/ChannelDuplexHandler."<init>":()V
       4: aload_0
       5: ldc2_w        #6                  // long 15000l
       8: putfield      #8                  // Field maxTime:J
      11: aload_0
      12: ldc2_w        #9                  // long 1000l
      15: putfield      #11                 // Field checkInterval:J
      18: aload_0
      19: ldc2_w        #12                 // long 4000l
      22: putfield      #14                 // Field maxWriteDelay:J
      25: aload_0
      26: ldc2_w        #15                 // long 4194304l
      29: putfield      #17                 // Field maxWriteSize:J
      32: lload         7
      34: lconst_0
      35: lcmp
      36: ifgt          49
      39: new           #18                 // class java/lang/IllegalArgumentException
      42: dup
      43: ldc           #19                 // String maxTime must be positive
      45: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: aload_0
      51: invokevirtual #21                 // Method userDefinedWritabilityIndex:()I
      54: putfield      #22                 // Field userDefinedWritabilityIndex:I
      57: aload_0
      58: lload_1
      59: putfield      #23                 // Field writeLimit:J
      62: aload_0
      63: lload_3
      64: putfield      #24                 // Field readLimit:J
      67: aload_0
      68: lload         5
      70: putfield      #11                 // Field checkInterval:J
      73: aload_0
      74: lload         7
      76: putfield      #8                  // Field maxTime:J
      79: return

  protected io.netty.handler.traffic.AbstractTrafficShapingHandler(long, long, long);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: lload         5
       5: ldc2_w        #6                  // long 15000l
       8: invokespecial #25                 // Method "<init>":(JJJJ)V
      11: return

  protected io.netty.handler.traffic.AbstractTrafficShapingHandler(long, long);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: ldc2_w        #9                  // long 1000l
       6: ldc2_w        #6                  // long 15000l
       9: invokespecial #25                 // Method "<init>":(JJJJ)V
      12: return

  protected io.netty.handler.traffic.AbstractTrafficShapingHandler();
    Code:
       0: aload_0
       1: lconst_0
       2: lconst_0
       3: ldc2_w        #9                  // long 1000l
       6: ldc2_w        #6                  // long 15000l
       9: invokespecial #25                 // Method "<init>":(JJJJ)V
      12: return

  protected io.netty.handler.traffic.AbstractTrafficShapingHandler(long);
    Code:
       0: aload_0
       1: lconst_0
       2: lconst_0
       3: lload_1
       4: ldc2_w        #6                  // long 15000l
       7: invokespecial #25                 // Method "<init>":(JJJJ)V
      10: return

  public void configure(long, long, long);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokevirtual #26                 // Method configure:(JJ)V
       6: aload_0
       7: lload         5
       9: invokevirtual #27                 // Method configure:(J)V
      12: return

  public void configure(long, long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #23                 // Field writeLimit:J
       5: aload_0
       6: lload_3
       7: putfield      #24                 // Field readLimit:J
      10: aload_0
      11: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      14: ifnull        27
      17: aload_0
      18: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      21: invokestatic  #28                 // Method io/netty/handler/traffic/TrafficCounter.milliSecondFromNano:()J
      24: invokevirtual #29                 // Method io/netty/handler/traffic/TrafficCounter.resetAccounting:(J)V
      27: return

  public void configure(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #11                 // Field checkInterval:J
       5: aload_0
       6: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
       9: ifnull        23
      12: aload_0
      13: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      16: aload_0
      17: getfield      #11                 // Field checkInterval:J
      20: invokevirtual #30                 // Method io/netty/handler/traffic/TrafficCounter.configure:(J)V
      23: return

  public long getWriteLimit();
    Code:
       0: aload_0
       1: getfield      #23                 // Field writeLimit:J
       4: lreturn

  public void setWriteLimit(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #23                 // Field writeLimit:J
       5: aload_0
       6: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
       9: ifnull        22
      12: aload_0
      13: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      16: invokestatic  #28                 // Method io/netty/handler/traffic/TrafficCounter.milliSecondFromNano:()J
      19: invokevirtual #29                 // Method io/netty/handler/traffic/TrafficCounter.resetAccounting:(J)V
      22: return

  public long getReadLimit();
    Code:
       0: aload_0
       1: getfield      #24                 // Field readLimit:J
       4: lreturn

  public void setReadLimit(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #24                 // Field readLimit:J
       5: aload_0
       6: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
       9: ifnull        22
      12: aload_0
      13: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      16: invokestatic  #28                 // Method io/netty/handler/traffic/TrafficCounter.milliSecondFromNano:()J
      19: invokevirtual #29                 // Method io/netty/handler/traffic/TrafficCounter.resetAccounting:(J)V
      22: return

  public long getCheckInterval();
    Code:
       0: aload_0
       1: getfield      #11                 // Field checkInterval:J
       4: lreturn

  public void setCheckInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #11                 // Field checkInterval:J
       5: aload_0
       6: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
       9: ifnull        20
      12: aload_0
      13: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      16: lload_1
      17: invokevirtual #30                 // Method io/netty/handler/traffic/TrafficCounter.configure:(J)V
      20: return

  public void setMaxTimeWait(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifgt          16
       6: new           #18                 // class java/lang/IllegalArgumentException
       9: dup
      10: ldc           #19                 // String maxTime must be positive
      12: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: lload_1
      18: putfield      #8                  // Field maxTime:J
      21: return

  public long getMaxTimeWait();
    Code:
       0: aload_0
       1: getfield      #8                  // Field maxTime:J
       4: lreturn

  public long getMaxWriteDelay();
    Code:
       0: aload_0
       1: getfield      #14                 // Field maxWriteDelay:J
       4: lreturn

  public void setMaxWriteDelay(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifgt          16
       6: new           #18                 // class java/lang/IllegalArgumentException
       9: dup
      10: ldc           #31                 // String maxWriteDelay must be positive
      12: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: lload_1
      18: putfield      #14                 // Field maxWriteDelay:J
      21: return

  public long getMaxWriteSize();
    Code:
       0: aload_0
       1: getfield      #17                 // Field maxWriteSize:J
       4: lreturn

  public void setMaxWriteSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #17                 // Field maxWriteSize:J
       5: return

  protected void doAccounting(io.netty.handler.traffic.TrafficCounter);
    Code:
       0: return

  void releaseReadSuspended(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: getstatic     #32                 // Field READ_SUSPENDED:Lio/netty/util/AttributeKey;
       4: invokeinterface #33,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
       9: iconst_0
      10: invokestatic  #34                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: invokeinterface #35,  2           // InterfaceMethod io/netty/util/Attribute.set:(Ljava/lang/Object;)V
      18: aload_1
      19: invokeinterface #36,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      24: invokeinterface #37,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      29: iconst_1
      30: invokeinterface #38,  2           // InterfaceMethod io/netty/channel/ChannelConfig.setAutoRead:(Z)Lio/netty/channel/ChannelConfig;
      35: pop
      36: return

  public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #39                 // Method calculateSize:(Ljava/lang/Object;)J
       5: lstore_3
       6: invokestatic  #28                 // Method io/netty/handler/traffic/TrafficCounter.milliSecondFromNano:()J
       9: lstore        5
      11: lload_3
      12: lconst_0
      13: lcmp
      14: ifle          312
      17: aload_0
      18: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      21: lload_3
      22: aload_0
      23: getfield      #24                 // Field readLimit:J
      26: aload_0
      27: getfield      #8                  // Field maxTime:J
      30: lload         5
      32: invokevirtual #40                 // Method io/netty/handler/traffic/TrafficCounter.readTimeToWait:(JJJJ)J
      35: lstore        7
      37: aload_0
      38: aload_1
      39: lload         7
      41: lload         5
      43: invokevirtual #41                 // Method checkWaitReadTime:(Lio/netty/channel/ChannelHandlerContext;JJ)J
      46: lstore        7
      48: lload         7
      50: ldc2_w        #42                 // long 10l
      53: lcmp
      54: iflt          312
      57: aload_1
      58: invokeinterface #36,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      63: invokeinterface #37,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      68: astore        9
      70: getstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      73: invokeinterface #44,  1           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      78: ifeq          136
      81: getstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      84: new           #45                 // class java/lang/StringBuilder
      87: dup
      88: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      91: ldc           #47                 // String Read suspend:
      93: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: lload         7
      98: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     101: bipush        58
     103: invokevirtual #50                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     106: aload         9
     108: invokeinterface #51,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     113: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     116: bipush        58
     118: invokevirtual #50                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     121: aload_1
     122: invokestatic  #53                 // Method isHandlerActive:(Lio/netty/channel/ChannelHandlerContext;)Z
     125: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     128: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     131: invokeinterface #55,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;)V
     136: aload         9
     138: invokeinterface #51,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     143: ifeq          312
     146: aload_1
     147: invokestatic  #53                 // Method isHandlerActive:(Lio/netty/channel/ChannelHandlerContext;)Z
     150: ifeq          312
     153: aload         9
     155: iconst_0
     156: invokeinterface #38,  2           // InterfaceMethod io/netty/channel/ChannelConfig.setAutoRead:(Z)Lio/netty/channel/ChannelConfig;
     161: pop
     162: aload_1
     163: getstatic     #32                 // Field READ_SUSPENDED:Lio/netty/util/AttributeKey;
     166: invokeinterface #33,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
     171: iconst_1
     172: invokestatic  #34                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     175: invokeinterface #35,  2           // InterfaceMethod io/netty/util/Attribute.set:(Ljava/lang/Object;)V
     180: aload_1
     181: getstatic     #56                 // Field REOPEN_TASK:Lio/netty/util/AttributeKey;
     184: invokeinterface #33,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
     189: astore        10
     191: aload         10
     193: invokeinterface #57,  1           // InterfaceMethod io/netty/util/Attribute.get:()Ljava/lang/Object;
     198: checkcast     #58                 // class java/lang/Runnable
     201: astore        11
     203: aload         11
     205: ifnonnull     227
     208: new           #59                 // class io/netty/handler/traffic/AbstractTrafficShapingHandler$ReopenReadTimerTask
     211: dup
     212: aload_1
     213: invokespecial #60                 // Method io/netty/handler/traffic/AbstractTrafficShapingHandler$ReopenReadTimerTask."<init>":(Lio/netty/channel/ChannelHandlerContext;)V
     216: astore        11
     218: aload         10
     220: aload         11
     222: invokeinterface #35,  2           // InterfaceMethod io/netty/util/Attribute.set:(Ljava/lang/Object;)V
     227: aload_1
     228: invokeinterface #61,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
     233: aload         11
     235: lload         7
     237: getstatic     #62                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     240: invokeinterface #63,  5           // InterfaceMethod io/netty/util/concurrent/EventExecutor.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
     245: pop
     246: getstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     249: invokeinterface #44,  1           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
     254: ifeq          312
     257: getstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     260: new           #45                 // class java/lang/StringBuilder
     263: dup
     264: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     267: ldc           #64                 // String Suspend final status =>
     269: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     272: aload         9
     274: invokeinterface #51,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     279: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     282: bipush        58
     284: invokevirtual #50                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     287: aload_1
     288: invokestatic  #53                 // Method isHandlerActive:(Lio/netty/channel/ChannelHandlerContext;)Z
     291: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     294: ldc           #65                 // String  will reopened at:
     296: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     299: lload         7
     301: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     304: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     307: invokeinterface #55,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;)V
     312: aload_0
     313: aload_1
     314: lload         5
     316: invokevirtual #66                 // Method informReadOperation:(Lio/netty/channel/ChannelHandlerContext;J)V
     319: aload_1
     320: aload_2
     321: invokeinterface #67,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
     326: pop
     327: return

  long checkWaitReadTime(io.netty.channel.ChannelHandlerContext, long, long);
    Code:
       0: lload_2
       1: lreturn

  void informReadOperation(io.netty.channel.ChannelHandlerContext, long);
    Code:
       0: return

  protected static boolean isHandlerActive(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: getstatic     #32                 // Field READ_SUSPENDED:Lio/netty/util/AttributeKey;
       4: invokeinterface #33,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
       9: invokeinterface #57,  1           // InterfaceMethod io/netty/util/Attribute.get:()Ljava/lang/Object;
      14: checkcast     #68                 // class java/lang/Boolean
      17: astore_1
      18: aload_1
      19: ifnull        32
      22: getstatic     #69                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      25: aload_1
      26: invokevirtual #70                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      29: ifeq          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  public void read(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: invokestatic  #53                 // Method isHandlerActive:(Lio/netty/channel/ChannelHandlerContext;)Z
       4: ifeq          14
       7: aload_1
       8: invokeinterface #71,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.read:()Lio/netty/channel/ChannelHandlerContext;
      13: pop
      14: return

  public void write(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #39                 // Method calculateSize:(Ljava/lang/Object;)J
       5: lstore        4
       7: invokestatic  #28                 // Method io/netty/handler/traffic/TrafficCounter.milliSecondFromNano:()J
      10: lstore        6
      12: lload         4
      14: lconst_0
      15: lcmp
      16: ifle          138
      19: aload_0
      20: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      23: lload         4
      25: aload_0
      26: getfield      #23                 // Field writeLimit:J
      29: aload_0
      30: getfield      #8                  // Field maxTime:J
      33: lload         6
      35: invokevirtual #72                 // Method io/netty/handler/traffic/TrafficCounter.writeTimeToWait:(JJJJ)J
      38: lstore        8
      40: lload         8
      42: ldc2_w        #42                 // long 10l
      45: lcmp
      46: iflt          138
      49: getstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      52: invokeinterface #44,  1           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      57: ifeq          124
      60: getstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      63: new           #45                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #73                 // String Write suspend:
      72: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: lload         8
      77: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      80: bipush        58
      82: invokevirtual #50                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      85: aload_1
      86: invokeinterface #36,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      91: invokeinterface #37,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      96: invokeinterface #51,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     101: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     104: bipush        58
     106: invokevirtual #50                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     109: aload_1
     110: invokestatic  #53                 // Method isHandlerActive:(Lio/netty/channel/ChannelHandlerContext;)Z
     113: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     116: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: invokeinterface #55,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;)V
     124: aload_0
     125: aload_1
     126: aload_2
     127: lload         4
     129: lload         8
     131: lload         6
     133: aload_3
     134: invokevirtual #74                 // Method submitWrite:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;JJJLio/netty/channel/ChannelPromise;)V
     137: return
     138: aload_0
     139: aload_1
     140: aload_2
     141: lload         4
     143: lconst_0
     144: lload         6
     146: aload_3
     147: invokevirtual #74                 // Method submitWrite:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;JJJLio/netty/channel/ChannelPromise;)V
     150: return

  protected void submitWrite(io.netty.channel.ChannelHandlerContext, java.lang.Object, long, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: aload_2
       5: invokevirtual #39                 // Method calculateSize:(Ljava/lang/Object;)J
       8: lload_3
       9: invokestatic  #28                 // Method io/netty/handler/traffic/TrafficCounter.milliSecondFromNano:()J
      12: aload         5
      14: invokevirtual #74                 // Method submitWrite:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;JJJLio/netty/channel/ChannelPromise;)V
      17: return

  abstract void submitWrite(io.netty.channel.ChannelHandlerContext, java.lang.Object, long, long, long, io.netty.channel.ChannelPromise);

  public void channelRegistered(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #75                 // Method setUserDefinedWritability:(Lio/netty/channel/ChannelHandlerContext;Z)V
       6: aload_0
       7: aload_1
       8: invokespecial #76                 // Method io/netty/channel/ChannelDuplexHandler.channelRegistered:(Lio/netty/channel/ChannelHandlerContext;)V
      11: return

  void setUserDefinedWritability(io.netty.channel.ChannelHandlerContext, boolean);
    Code:
       0: aload_1
       1: invokeinterface #36,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: invokeinterface #77,  1           // InterfaceMethod io/netty/channel/Channel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      11: invokeinterface #78,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.outboundBuffer:()Lio/netty/channel/ChannelOutboundBuffer;
      16: astore_3
      17: aload_3
      18: ifnull        30
      21: aload_3
      22: aload_0
      23: getfield      #22                 // Field userDefinedWritabilityIndex:I
      26: iload_2
      27: invokevirtual #79                 // Method io/netty/channel/ChannelOutboundBuffer.setUserDefinedWritability:(IZ)V
      30: return

  void checkWriteSuspend(io.netty.channel.ChannelHandlerContext, long, long);
    Code:
       0: lload         4
       2: aload_0
       3: getfield      #17                 // Field maxWriteSize:J
       6: lcmp
       7: ifgt          19
      10: lload_2
      11: aload_0
      12: getfield      #14                 // Field maxWriteDelay:J
      15: lcmp
      16: ifle          25
      19: aload_0
      20: aload_1
      21: iconst_0
      22: invokevirtual #75                 // Method setUserDefinedWritability:(Lio/netty/channel/ChannelHandlerContext;Z)V
      25: return

  void releaseWriteSuspended(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #75                 // Method setUserDefinedWritability:(Lio/netty/channel/ChannelHandlerContext;Z)V
       6: return

  public io.netty.handler.traffic.TrafficCounter trafficCounter();
    Code:
       0: aload_0
       1: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #45                 // class java/lang/StringBuilder
       3: dup
       4: sipush        290
       7: invokespecial #80                 // Method java/lang/StringBuilder."<init>":(I)V
      10: ldc           #81                 // String TrafficShaping with Write Limit:
      12: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_0
      16: getfield      #23                 // Field writeLimit:J
      19: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      22: ldc           #82                 // String  Read Limit:
      24: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: getfield      #24                 // Field readLimit:J
      31: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      34: ldc           #83                 // String  CheckInterval:
      36: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: getfield      #11                 // Field checkInterval:J
      43: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      46: ldc           #84                 // String  maxDelay:
      48: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_0
      52: getfield      #14                 // Field maxWriteDelay:J
      55: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      58: ldc           #85                 // String  maxSize:
      60: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_0
      64: getfield      #17                 // Field maxWriteSize:J
      67: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      70: ldc           #86                 // String  and Counter:
      72: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: astore_1
      76: aload_0
      77: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      80: ifnull        95
      83: aload_1
      84: aload_0
      85: getfield      #2                  // Field trafficCounter:Lio/netty/handler/traffic/TrafficCounter;
      88: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      91: pop
      92: goto          102
      95: aload_1
      96: ldc           #88                 // String none
      98: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: pop
     102: aload_1
     103: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: areturn

  protected long calculateSize(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #89                 // class io/netty/buffer/ByteBuf
       4: ifeq          16
       7: aload_1
       8: checkcast     #89                 // class io/netty/buffer/ByteBuf
      11: invokevirtual #90                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      14: i2l
      15: lreturn
      16: aload_1
      17: instanceof    #91                 // class io/netty/buffer/ByteBufHolder
      20: ifeq          37
      23: aload_1
      24: checkcast     #91                 // class io/netty/buffer/ByteBufHolder
      27: invokeinterface #92,  1           // InterfaceMethod io/netty/buffer/ByteBufHolder.content:()Lio/netty/buffer/ByteBuf;
      32: invokevirtual #90                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      35: i2l
      36: lreturn
      37: ldc2_w        #93                 // long -1l
      40: lreturn

  static io.netty.util.internal.logging.InternalLogger access$000();
    Code:
       0: getstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: areturn

  static {};
    Code:
       0: ldc_w         #95                 // class io/netty/handler/traffic/AbstractTrafficShapingHandler
       3: invokestatic  #96                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       6: putstatic     #1                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       9: new           #45                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc_w         #95                 // class io/netty/handler/traffic/AbstractTrafficShapingHandler
      19: invokevirtual #97                 // Method java/lang/Class.getName:()Ljava/lang/String;
      22: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #98                 // String .READ_SUSPENDED
      27: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokestatic  #99                 // Method io/netty/util/AttributeKey.valueOf:(Ljava/lang/String;)Lio/netty/util/AttributeKey;
      36: putstatic     #32                 // Field READ_SUSPENDED:Lio/netty/util/AttributeKey;
      39: new           #45                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc_w         #95                 // class io/netty/handler/traffic/AbstractTrafficShapingHandler
      49: invokevirtual #97                 // Method java/lang/Class.getName:()Ljava/lang/String;
      52: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #100                // String .REOPEN_TASK
      57: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokestatic  #99                 // Method io/netty/util/AttributeKey.valueOf:(Ljava/lang/String;)Lio/netty/util/AttributeKey;
      66: putstatic     #56                 // Field REOPEN_TASK:Lio/netty/util/AttributeKey;
      69: return
}
