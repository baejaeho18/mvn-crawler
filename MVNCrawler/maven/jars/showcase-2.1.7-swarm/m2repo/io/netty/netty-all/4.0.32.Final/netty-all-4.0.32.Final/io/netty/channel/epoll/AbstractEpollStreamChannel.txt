Compiled from "AbstractEpollStreamChannel.java"
public abstract class io.netty.channel.epoll.AbstractEpollStreamChannel extends io.netty.channel.epoll.AbstractEpollChannel {
  private static final java.lang.String EXPECTED_TYPES;

  private static final io.netty.util.internal.logging.InternalLogger logger;

  static final java.nio.channels.ClosedChannelException CLOSED_CHANNEL_EXCEPTION;

  private io.netty.channel.ChannelPromise connectPromise;

  private java.util.concurrent.ScheduledFuture<?> connectTimeoutFuture;

  private java.net.SocketAddress requestedRemoteAddress;

  private final java.util.Queue<io.netty.channel.epoll.AbstractEpollStreamChannel$SpliceInTask> spliceQueue;

  private volatile boolean outputShutdown;

  private int pipeIn;

  private int pipeOut;

  static final boolean $assertionsDisabled;

  protected io.netty.channel.epoll.AbstractEpollStreamChannel(io.netty.channel.Channel, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: getstatic     #9                  // Field io/netty/channel/epoll/Native.EPOLLIN:I
       6: iconst_1
       7: invokespecial #10                 // Method io/netty/channel/epoll/AbstractEpollChannel."<init>":(Lio/netty/channel/Channel;IIZ)V
      10: aload_0
      11: invokestatic  #11                 // Method io/netty/util/internal/PlatformDependent.newMpscQueue:()Ljava/util/Queue;
      14: putfield      #4                  // Field spliceQueue:Ljava/util/Queue;
      17: aload_0
      18: iconst_m1
      19: putfield      #2                  // Field pipeIn:I
      22: aload_0
      23: iconst_m1
      24: putfield      #3                  // Field pipeOut:I
      27: aload_0
      28: dup
      29: getfield      #12                 // Field flags:I
      32: getstatic     #13                 // Field io/netty/channel/epoll/Native.EPOLLRDHUP:I
      35: ior
      36: putfield      #12                 // Field flags:I
      39: return

  protected io.netty.channel.epoll.AbstractEpollStreamChannel(int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #9                  // Field io/netty/channel/epoll/Native.EPOLLIN:I
       5: invokespecial #14                 // Method io/netty/channel/epoll/AbstractEpollChannel."<init>":(II)V
       8: aload_0
       9: invokestatic  #11                 // Method io/netty/util/internal/PlatformDependent.newMpscQueue:()Ljava/util/Queue;
      12: putfield      #4                  // Field spliceQueue:Ljava/util/Queue;
      15: aload_0
      16: iconst_m1
      17: putfield      #2                  // Field pipeIn:I
      20: aload_0
      21: iconst_m1
      22: putfield      #3                  // Field pipeOut:I
      25: aload_0
      26: dup
      27: getfield      #12                 // Field flags:I
      30: getstatic     #13                 // Field io/netty/channel/epoll/Native.EPOLLRDHUP:I
      33: ior
      34: putfield      #12                 // Field flags:I
      37: return

  protected io.netty.channel.epoll.AbstractEpollStreamChannel(io.netty.channel.unix.FileDescriptor);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: getstatic     #9                  // Field io/netty/channel/epoll/Native.EPOLLIN:I
       6: aload_1
       7: invokevirtual #15                 // Method io/netty/channel/unix/FileDescriptor.intValue:()I
      10: invokestatic  #16                 // Method io/netty/channel/epoll/Native.getSoError:(I)I
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: invokespecial #17                 // Method io/netty/channel/epoll/AbstractEpollChannel."<init>":(Lio/netty/channel/Channel;Lio/netty/channel/unix/FileDescriptor;IZ)V
      24: aload_0
      25: invokestatic  #11                 // Method io/netty/util/internal/PlatformDependent.newMpscQueue:()Ljava/util/Queue;
      28: putfield      #4                  // Field spliceQueue:Ljava/util/Queue;
      31: aload_0
      32: iconst_m1
      33: putfield      #2                  // Field pipeIn:I
      36: aload_0
      37: iconst_m1
      38: putfield      #3                  // Field pipeOut:I
      41: aload_0
      42: dup
      43: getfield      #12                 // Field flags:I
      46: getstatic     #13                 // Field io/netty/channel/epoll/Native.EPOLLRDHUP:I
      49: ior
      50: putfield      #12                 // Field flags:I
      53: return

  protected void shutdown(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: iconst_1
       2: iconst_1
       3: invokestatic  #18                 // Method io/netty/channel/epoll/Native.shutdown:(IZZ)V
       6: return

  protected io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe newUnsafe();
    Code:
       0: new           #19                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe
       3: dup
       4: aload_0
       5: invokespecial #20                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)V
       8: areturn

  public final io.netty.channel.ChannelFuture spliceTo(io.netty.channel.epoll.AbstractEpollStreamChannel, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_0
       4: invokevirtual #21                 // Method newPromise:()Lio/netty/channel/ChannelPromise;
       7: invokevirtual #22                 // Method spliceTo:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;ILio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      10: areturn

  public final io.netty.channel.ChannelFuture spliceTo(io.netty.channel.epoll.AbstractEpollStreamChannel, int, io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: invokevirtual #23                 // Method eventLoop:()Lio/netty/channel/EventLoop;
       4: aload_0
       5: invokevirtual #23                 // Method eventLoop:()Lio/netty/channel/EventLoop;
       8: if_acmpeq     21
      11: new           #24                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #25                 // String EventLoops are not the same.
      17: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: iload_2
      22: ifge          57
      25: new           #24                 // class java/lang/IllegalArgumentException
      28: dup
      29: new           #27                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #29                 // String len:
      38: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: iload_2
      42: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      45: ldc           #32                 // String  (expected: >= 0)
      47: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_1
      58: invokevirtual #34                 // Method config:()Lio/netty/channel/epoll/EpollChannelConfig;
      61: invokevirtual #35                 // Method io/netty/channel/epoll/EpollChannelConfig.getEpollMode:()Lio/netty/channel/epoll/EpollMode;
      64: getstatic     #36                 // Field io/netty/channel/epoll/EpollMode.LEVEL_TRIGGERED:Lio/netty/channel/epoll/EpollMode;
      67: if_acmpne     83
      70: aload_0
      71: invokevirtual #34                 // Method config:()Lio/netty/channel/epoll/EpollChannelConfig;
      74: invokevirtual #35                 // Method io/netty/channel/epoll/EpollChannelConfig.getEpollMode:()Lio/netty/channel/epoll/EpollMode;
      77: getstatic     #36                 // Field io/netty/channel/epoll/EpollMode.LEVEL_TRIGGERED:Lio/netty/channel/epoll/EpollMode;
      80: if_acmpeq     112
      83: new           #37                 // class java/lang/IllegalStateException
      86: dup
      87: new           #27                 // class java/lang/StringBuilder
      90: dup
      91: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      94: ldc           #38                 // String spliceTo() supported only when using
      96: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: getstatic     #36                 // Field io/netty/channel/epoll/EpollMode.LEVEL_TRIGGERED:Lio/netty/channel/epoll/EpollMode;
     102: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     105: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     108: invokespecial #40                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     111: athrow
     112: aload_3
     113: ldc           #41                 // String promise
     115: invokestatic  #42                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     118: pop
     119: aload_0
     120: invokevirtual #43                 // Method isOpen:()Z
     123: ifne          139
     126: aload_3
     127: getstatic     #44                 // Field CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
     130: invokeinterface #45,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
     135: pop
     136: goto          177
     139: new           #46                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInChannelTask
     142: dup
     143: aload_0
     144: aload_1
     145: iload_2
     146: aload_3
     147: ldc           #41                 // String promise
     149: invokestatic  #42                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     152: checkcast     #47                 // class io/netty/channel/ChannelPromise
     155: invokespecial #48                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInChannelTask."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/epoll/AbstractEpollStreamChannel;ILio/netty/channel/ChannelPromise;)V
     158: astore        4
     160: aload_0
     161: getfield      #4                  // Field spliceQueue:Ljava/util/Queue;
     164: aload         4
     166: invokeinterface #49,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
     171: pop
     172: aload_0
     173: aload_3
     174: invokespecial #50                 // Method failSpliceIfClosed:(Lio/netty/channel/ChannelPromise;)V
     177: aload_3
     178: areturn

  public final io.netty.channel.ChannelFuture spliceTo(io.netty.channel.unix.FileDescriptor, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload_0
       5: invokevirtual #21                 // Method newPromise:()Lio/netty/channel/ChannelPromise;
       8: invokevirtual #51                 // Method spliceTo:(Lio/netty/channel/unix/FileDescriptor;IILio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      11: areturn

  public final io.netty.channel.ChannelFuture spliceTo(io.netty.channel.unix.FileDescriptor, int, int, io.netty.channel.ChannelPromise);
    Code:
       0: iload_3
       1: ifge          36
       4: new           #24                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #27                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #29                 // String len:
      17: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_3
      21: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: ldc           #32                 // String  (expected: >= 0)
      26: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: iload_2
      37: ifge          67
      40: new           #24                 // class java/lang/IllegalArgumentException
      43: dup
      44: new           #27                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #52                 // String offset must be >= 0 but was
      53: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: iload_2
      57: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      60: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_0
      68: invokevirtual #34                 // Method config:()Lio/netty/channel/epoll/EpollChannelConfig;
      71: invokevirtual #35                 // Method io/netty/channel/epoll/EpollChannelConfig.getEpollMode:()Lio/netty/channel/epoll/EpollMode;
      74: getstatic     #36                 // Field io/netty/channel/epoll/EpollMode.LEVEL_TRIGGERED:Lio/netty/channel/epoll/EpollMode;
      77: if_acmpeq     109
      80: new           #37                 // class java/lang/IllegalStateException
      83: dup
      84: new           #27                 // class java/lang/StringBuilder
      87: dup
      88: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      91: ldc           #38                 // String spliceTo() supported only when using
      93: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: getstatic     #36                 // Field io/netty/channel/epoll/EpollMode.LEVEL_TRIGGERED:Lio/netty/channel/epoll/EpollMode;
      99: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     102: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: invokespecial #40                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     108: athrow
     109: aload         4
     111: ldc           #41                 // String promise
     113: invokestatic  #42                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     116: pop
     117: aload_0
     118: invokevirtual #43                 // Method isOpen:()Z
     121: ifne          138
     124: aload         4
     126: getstatic     #44                 // Field CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
     129: invokeinterface #45,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
     134: pop
     135: goto          179
     138: new           #53                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceFdTask
     141: dup
     142: aload_0
     143: aload_1
     144: iload_2
     145: iload_3
     146: aload         4
     148: ldc           #41                 // String promise
     150: invokestatic  #42                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     153: checkcast     #47                 // class io/netty/channel/ChannelPromise
     156: invokespecial #54                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceFdTask."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/unix/FileDescriptor;IILio/netty/channel/ChannelPromise;)V
     159: astore        5
     161: aload_0
     162: getfield      #4                  // Field spliceQueue:Ljava/util/Queue;
     165: aload         5
     167: invokeinterface #49,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
     172: pop
     173: aload_0
     174: aload         4
     176: invokespecial #50                 // Method failSpliceIfClosed:(Lio/netty/channel/ChannelPromise;)V
     179: aload         4
     181: areturn

  private void failSpliceIfClosed(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method isOpen:()Z
       4: ifne          36
       7: aload_1
       8: getstatic     #44                 // Field CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      11: invokeinterface #45,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      16: ifeq          36
      19: aload_0
      20: invokevirtual #23                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      23: new           #55                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$1
      26: dup
      27: aload_0
      28: invokespecial #56                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$1."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)V
      31: invokeinterface #57,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      36: return

  private boolean writeBytes(io.netty.channel.ChannelOutboundBuffer, io.netty.buffer.ByteBuf, int) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #58                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       4: istore        4
       6: iload         4
       8: ifne          18
      11: aload_1
      12: invokevirtual #59                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
      15: pop
      16: iconst_1
      17: ireturn
      18: aload_2
      19: invokevirtual #60                 // Method io/netty/buffer/ByteBuf.hasMemoryAddress:()Z
      22: ifne          33
      25: aload_2
      26: invokevirtual #61                 // Method io/netty/buffer/ByteBuf.nioBufferCount:()I
      29: iconst_1
      30: if_icmpne     61
      33: aload_0
      34: aload_2
      35: iload_3
      36: invokevirtual #62                 // Method doWriteBytes:(Lio/netty/buffer/ByteBuf;I)I
      39: istore        5
      41: aload_1
      42: iload         5
      44: i2l
      45: invokevirtual #63                 // Method io/netty/channel/ChannelOutboundBuffer.removeBytes:(J)V
      48: iload         5
      50: iload         4
      52: if_icmpne     59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn
      61: aload_2
      62: invokevirtual #64                 // Method io/netty/buffer/ByteBuf.nioBuffers:()[Ljava/nio/ByteBuffer;
      65: astore        5
      67: aload_0
      68: aload_1
      69: aload         5
      71: aload         5
      73: arraylength
      74: iload         4
      76: i2l
      77: iload_3
      78: invokespecial #65                 // Method writeBytesMultiple:(Lio/netty/channel/ChannelOutboundBuffer;[Ljava/nio/ByteBuffer;IJI)Z
      81: ireturn

  private boolean writeBytesMultiple(io.netty.channel.ChannelOutboundBuffer, io.netty.channel.epoll.IovArray, int) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #66                 // Method io/netty/channel/epoll/IovArray.size:()J
       4: lstore        4
       6: lload         4
       8: lstore        6
      10: aload_2
      11: invokevirtual #67                 // Method io/netty/channel/epoll/IovArray.count:()I
      14: istore        8
      16: getstatic     #68                 // Field $assertionsDisabled:Z
      19: ifne          37
      22: lload         4
      24: lconst_0
      25: lcmp
      26: ifne          37
      29: new           #69                 // class java/lang/AssertionError
      32: dup
      33: invokespecial #70                 // Method java/lang/AssertionError."<init>":()V
      36: athrow
      37: getstatic     #68                 // Field $assertionsDisabled:Z
      40: ifne          56
      43: iload         8
      45: ifne          56
      48: new           #69                 // class java/lang/AssertionError
      51: dup
      52: invokespecial #70                 // Method java/lang/AssertionError."<init>":()V
      55: athrow
      56: iconst_0
      57: istore        9
      59: iconst_0
      60: istore        10
      62: iload         10
      64: iload         8
      66: iadd
      67: istore        11
      69: iload_3
      70: iconst_1
      71: isub
      72: istore        12
      74: iload         12
      76: iflt          184
      79: aload_0
      80: invokevirtual #71                 // Method fd:()Lio/netty/channel/unix/FileDescriptor;
      83: invokevirtual #15                 // Method io/netty/channel/unix/FileDescriptor.intValue:()I
      86: aload_2
      87: iload         10
      89: invokevirtual #72                 // Method io/netty/channel/epoll/IovArray.memoryAddress:(I)J
      92: iload         8
      94: invokestatic  #73                 // Method io/netty/channel/epoll/Native.writevAddresses:(IJI)J
      97: lstore        13
      99: lload         13
     101: lconst_0
     102: lcmp
     103: ifne          109
     106: goto          184
     109: lload         4
     111: lload         13
     113: lsub
     114: lstore        4
     116: lload         4
     118: lconst_0
     119: lcmp
     120: ifne          129
     123: iconst_1
     124: istore        9
     126: goto          184
     129: aload_2
     130: iload         10
     132: lload         13
     134: invokevirtual #74                 // Method io/netty/channel/epoll/IovArray.processWritten:(IJ)J
     137: lstore        15
     139: lload         15
     141: ldc2_w        #75                 // long -1l
     144: lcmp
     145: ifne          151
     148: goto          178
     151: iinc          10, 1
     154: iinc          8, -1
     157: lload         13
     159: lload         15
     161: lsub
     162: lstore        13
     164: iload         10
     166: iload         11
     168: if_icmpge     178
     171: lload         13
     173: lconst_0
     174: lcmp
     175: ifgt          129
     178: iinc          12, -1
     181: goto          74
     184: aload_1
     185: lload         6
     187: lload         4
     189: lsub
     190: invokevirtual #63                 // Method io/netty/channel/ChannelOutboundBuffer.removeBytes:(J)V
     193: iload         9
     195: ireturn

  private boolean writeBytesMultiple(io.netty.channel.ChannelOutboundBuffer, java.nio.ByteBuffer[], int, long, int) throws java.io.IOException;
    Code:
       0: getstatic     #68                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: lload         4
       8: lconst_0
       9: lcmp
      10: ifne          21
      13: new           #69                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #70                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: lload         4
      23: lstore        7
      25: iconst_0
      26: istore        9
      28: iconst_0
      29: istore        10
      31: iload         10
      33: iload_3
      34: iadd
      35: istore        11
      37: iload         6
      39: iconst_1
      40: isub
      41: istore        12
      43: iload         12
      45: iflt          175
      48: aload_0
      49: invokevirtual #71                 // Method fd:()Lio/netty/channel/unix/FileDescriptor;
      52: invokevirtual #15                 // Method io/netty/channel/unix/FileDescriptor.intValue:()I
      55: aload_2
      56: iload         10
      58: iload_3
      59: invokestatic  #77                 // Method io/netty/channel/epoll/Native.writev:(I[Ljava/nio/ByteBuffer;II)J
      62: lstore        13
      64: lload         13
      66: lconst_0
      67: lcmp
      68: ifne          74
      71: goto          175
      74: lload         4
      76: lload         13
      78: lsub
      79: lstore        4
      81: lload         4
      83: lconst_0
      84: lcmp
      85: ifne          94
      88: iconst_1
      89: istore        9
      91: goto          175
      94: aload_2
      95: iload         10
      97: aaload
      98: astore        15
     100: aload         15
     102: invokevirtual #78                 // Method java/nio/ByteBuffer.position:()I
     105: istore        16
     107: aload         15
     109: invokevirtual #79                 // Method java/nio/ByteBuffer.limit:()I
     112: iload         16
     114: isub
     115: istore        17
     117: iload         17
     119: i2l
     120: lload         13
     122: lcmp
     123: ifle          141
     126: aload         15
     128: iload         16
     130: lload         13
     132: l2i
     133: iadd
     134: invokevirtual #80                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     137: pop
     138: goto          169
     141: iinc          10, 1
     144: iinc          3, -1
     147: lload         13
     149: iload         17
     151: i2l
     152: lsub
     153: lstore        13
     155: iload         10
     157: iload         11
     159: if_icmpge     169
     162: lload         13
     164: lconst_0
     165: lcmp
     166: ifgt          94
     169: iinc          12, -1
     172: goto          43
     175: aload_1
     176: lload         7
     178: lload         4
     180: lsub
     181: invokevirtual #63                 // Method io/netty/channel/ChannelOutboundBuffer.removeBytes:(J)V
     184: iload         9
     186: ireturn

  private boolean writeFileRegion(io.netty.channel.ChannelOutboundBuffer, io.netty.channel.DefaultFileRegion, int) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #81                 // Method io/netty/channel/DefaultFileRegion.count:()J
       4: lstore        4
       6: aload_2
       7: invokevirtual #82                 // Method io/netty/channel/DefaultFileRegion.transfered:()J
      10: lload         4
      12: lcmp
      13: iflt          23
      16: aload_1
      17: invokevirtual #59                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
      20: pop
      21: iconst_1
      22: ireturn
      23: aload_2
      24: invokevirtual #83                 // Method io/netty/channel/DefaultFileRegion.position:()J
      27: lstore        6
      29: iconst_0
      30: istore        8
      32: lconst_0
      33: lstore        9
      35: iload_3
      36: iconst_1
      37: isub
      38: istore        11
      40: iload         11
      42: iflt          112
      45: aload_2
      46: invokevirtual #82                 // Method io/netty/channel/DefaultFileRegion.transfered:()J
      49: lstore        12
      51: aload_0
      52: invokevirtual #71                 // Method fd:()Lio/netty/channel/unix/FileDescriptor;
      55: invokevirtual #15                 // Method io/netty/channel/unix/FileDescriptor.intValue:()I
      58: aload_2
      59: lload         6
      61: lload         12
      63: lload         4
      65: lload         12
      67: lsub
      68: invokestatic  #84                 // Method io/netty/channel/epoll/Native.sendfile:(ILio/netty/channel/DefaultFileRegion;JJJ)J
      71: lstore        14
      73: lload         14
      75: lconst_0
      76: lcmp
      77: ifne          83
      80: goto          112
      83: lload         9
      85: lload         14
      87: ladd
      88: lstore        9
      90: aload_2
      91: invokevirtual #82                 // Method io/netty/channel/DefaultFileRegion.transfered:()J
      94: lload         4
      96: lcmp
      97: iflt          106
     100: iconst_1
     101: istore        8
     103: goto          112
     106: iinc          11, -1
     109: goto          40
     112: lload         9
     114: lconst_0
     115: lcmp
     116: ifle          125
     119: aload_1
     120: lload         9
     122: invokevirtual #85                 // Method io/netty/channel/ChannelOutboundBuffer.progress:(J)V
     125: iload         8
     127: ifeq          135
     130: aload_1
     131: invokevirtual #59                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
     134: pop
     135: iload         8
     137: ireturn

  protected void doWrite(io.netty.channel.ChannelOutboundBuffer) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method config:()Lio/netty/channel/epoll/EpollChannelConfig;
       4: invokevirtual #86                 // Method io/netty/channel/epoll/EpollChannelConfig.getWriteSpinCount:()I
       7: istore_2
       8: aload_1
       9: invokevirtual #87                 // Method io/netty/channel/ChannelOutboundBuffer.size:()I
      12: istore_3
      13: iload_3
      14: ifne          25
      17: aload_0
      18: getstatic     #88                 // Field io/netty/channel/epoll/Native.EPOLLOUT:I
      21: invokevirtual #89                 // Method clearFlag:(I)V
      24: return
      25: iload_3
      26: iconst_1
      27: if_icmple     52
      30: aload_1
      31: invokevirtual #90                 // Method io/netty/channel/ChannelOutboundBuffer.current:()Ljava/lang/Object;
      34: instanceof    #91                 // class io/netty/buffer/ByteBuf
      37: ifeq          52
      40: aload_0
      41: aload_1
      42: iload_2
      43: invokespecial #92                 // Method doWriteMultiple:(Lio/netty/channel/ChannelOutboundBuffer;I)Z
      46: ifne          64
      49: goto          67
      52: aload_0
      53: aload_1
      54: iload_2
      55: invokevirtual #93                 // Method doWriteSingle:(Lio/netty/channel/ChannelOutboundBuffer;I)Z
      58: ifne          64
      61: goto          67
      64: goto          8
      67: aload_0
      68: getstatic     #88                 // Field io/netty/channel/epoll/Native.EPOLLOUT:I
      71: invokevirtual #94                 // Method setFlag:(I)V
      74: return

  protected boolean doWriteSingle(io.netty.channel.ChannelOutboundBuffer, int) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #90                 // Method io/netty/channel/ChannelOutboundBuffer.current:()Ljava/lang/Object;
       4: astore_3
       5: aload_3
       6: instanceof    #91                 // class io/netty/buffer/ByteBuf
       9: ifeq          34
      12: aload_3
      13: checkcast     #91                 // class io/netty/buffer/ByteBuf
      16: astore        4
      18: aload_0
      19: aload_1
      20: aload         4
      22: iload_2
      23: invokespecial #95                 // Method writeBytes:(Lio/netty/channel/ChannelOutboundBuffer;Lio/netty/buffer/ByteBuf;I)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: goto          98
      34: aload_3
      35: instanceof    #96                 // class io/netty/channel/DefaultFileRegion
      38: ifeq          63
      41: aload_3
      42: checkcast     #96                 // class io/netty/channel/DefaultFileRegion
      45: astore        4
      47: aload_0
      48: aload_1
      49: aload         4
      51: iload_2
      52: invokespecial #97                 // Method writeFileRegion:(Lio/netty/channel/ChannelOutboundBuffer;Lio/netty/channel/DefaultFileRegion;I)Z
      55: ifne          60
      58: iconst_0
      59: ireturn
      60: goto          98
      63: aload_3
      64: instanceof    #98                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceOutTask
      67: ifeq          90
      70: aload_3
      71: checkcast     #98                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceOutTask
      74: invokevirtual #99                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceOutTask.spliceOut:()Z
      77: ifne          82
      80: iconst_0
      81: ireturn
      82: aload_1
      83: invokevirtual #59                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
      86: pop
      87: goto          98
      90: new           #100                // class java/lang/Error
      93: dup
      94: invokespecial #101                // Method java/lang/Error."<init>":()V
      97: athrow
      98: iconst_1
      99: ireturn

  private boolean doWriteMultiple(io.netty.channel.ChannelOutboundBuffer, int) throws java.lang.Exception;
    Code:
       0: invokestatic  #102                // Method io/netty/util/internal/PlatformDependent.hasUnsafe:()Z
       3: ifeq          43
       6: aload_1
       7: invokestatic  #103                // Method io/netty/channel/epoll/IovArrayThreadLocal.get:(Lio/netty/channel/ChannelOutboundBuffer;)Lio/netty/channel/epoll/IovArray;
      10: astore_3
      11: aload_3
      12: invokevirtual #67                 // Method io/netty/channel/epoll/IovArray.count:()I
      15: istore        4
      17: iload         4
      19: iconst_1
      20: if_icmplt     35
      23: aload_0
      24: aload_1
      25: aload_3
      26: iload_2
      27: invokespecial #104                // Method writeBytesMultiple:(Lio/netty/channel/ChannelOutboundBuffer;Lio/netty/channel/epoll/IovArray;I)Z
      30: ifne          40
      33: iconst_0
      34: ireturn
      35: aload_1
      36: lconst_0
      37: invokevirtual #63                 // Method io/netty/channel/ChannelOutboundBuffer.removeBytes:(J)V
      40: goto          83
      43: aload_1
      44: invokevirtual #105                // Method io/netty/channel/ChannelOutboundBuffer.nioBuffers:()[Ljava/nio/ByteBuffer;
      47: astore_3
      48: aload_1
      49: invokevirtual #106                // Method io/netty/channel/ChannelOutboundBuffer.nioBufferCount:()I
      52: istore        4
      54: iload         4
      56: iconst_1
      57: if_icmplt     78
      60: aload_0
      61: aload_1
      62: aload_3
      63: iload         4
      65: aload_1
      66: invokevirtual #107                // Method io/netty/channel/ChannelOutboundBuffer.nioBufferSize:()J
      69: iload_2
      70: invokespecial #65                 // Method writeBytesMultiple:(Lio/netty/channel/ChannelOutboundBuffer;[Ljava/nio/ByteBuffer;IJI)Z
      73: ifne          83
      76: iconst_0
      77: ireturn
      78: aload_1
      79: lconst_0
      80: invokevirtual #63                 // Method io/netty/channel/ChannelOutboundBuffer.removeBytes:(J)V
      83: iconst_1
      84: ireturn

  protected java.lang.Object filterOutboundMessage(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #91                 // class io/netty/buffer/ByteBuf
       4: ifeq          120
       7: aload_1
       8: checkcast     #91                 // class io/netty/buffer/ByteBuf
      11: astore_2
      12: aload_2
      13: invokevirtual #60                 // Method io/netty/buffer/ByteBuf.hasMemoryAddress:()Z
      16: ifne          118
      19: invokestatic  #102                // Method io/netty/util/internal/PlatformDependent.hasUnsafe:()Z
      22: ifne          32
      25: aload_2
      26: invokevirtual #108                // Method io/netty/buffer/ByteBuf.isDirect:()Z
      29: ifne          118
      32: aload_2
      33: instanceof    #109                // class io/netty/buffer/CompositeByteBuf
      36: ifeq          91
      39: aload_2
      40: checkcast     #109                // class io/netty/buffer/CompositeByteBuf
      43: astore_3
      44: aload_3
      45: invokevirtual #110                // Method io/netty/buffer/CompositeByteBuf.isDirect:()Z
      48: ifeq          61
      51: aload_3
      52: invokevirtual #111                // Method io/netty/buffer/CompositeByteBuf.nioBufferCount:()I
      55: getstatic     #112                // Field io/netty/channel/epoll/Native.IOV_MAX:I
      58: if_icmple     88
      61: aload_0
      62: aload_2
      63: invokevirtual #113                // Method newDirectBuffer:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
      66: astore_2
      67: getstatic     #68                 // Field $assertionsDisabled:Z
      70: ifne          88
      73: aload_2
      74: invokevirtual #60                 // Method io/netty/buffer/ByteBuf.hasMemoryAddress:()Z
      77: ifne          88
      80: new           #69                 // class java/lang/AssertionError
      83: dup
      84: invokespecial #70                 // Method java/lang/AssertionError."<init>":()V
      87: athrow
      88: goto          118
      91: aload_0
      92: aload_2
      93: invokevirtual #113                // Method newDirectBuffer:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
      96: astore_2
      97: getstatic     #68                 // Field $assertionsDisabled:Z
     100: ifne          118
     103: aload_2
     104: invokevirtual #60                 // Method io/netty/buffer/ByteBuf.hasMemoryAddress:()Z
     107: ifne          118
     110: new           #69                 // class java/lang/AssertionError
     113: dup
     114: invokespecial #70                 // Method java/lang/AssertionError."<init>":()V
     117: athrow
     118: aload_2
     119: areturn
     120: aload_1
     121: instanceof    #96                 // class io/netty/channel/DefaultFileRegion
     124: ifne          134
     127: aload_1
     128: instanceof    #98                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceOutTask
     131: ifeq          136
     134: aload_1
     135: areturn
     136: new           #114                // class java/lang/UnsupportedOperationException
     139: dup
     140: new           #27                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #115                // String unsupported message type:
     149: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: aload_1
     153: invokestatic  #116                // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Object;)Ljava/lang/String;
     156: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: getstatic     #117                // Field EXPECTED_TYPES:Ljava/lang/String;
     162: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     168: invokespecial #118                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
     171: athrow

  protected boolean isOutputShutdown0();
    Code:
       0: aload_0
       1: getfield      #119                // Field outputShutdown:Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #120                // Method isActive:()Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  protected void shutdownOutput0(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method fd:()Lio/netty/channel/unix/FileDescriptor;
       4: invokevirtual #15                 // Method io/netty/channel/unix/FileDescriptor.intValue:()I
       7: iconst_0
       8: iconst_1
       9: invokestatic  #18                 // Method io/netty/channel/epoll/Native.shutdown:(IZZ)V
      12: aload_0
      13: iconst_1
      14: putfield      #119                // Field outputShutdown:Z
      17: aload_1
      18: invokeinterface #121,  1          // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
      23: pop
      24: goto          36
      27: astore_2
      28: aload_1
      29: aload_2
      30: invokeinterface #123,  2          // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      35: pop
      36: return
    Exception table:
       from    to  target type
           0    24    27   Class java/lang/Throwable

  protected void doClose() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #7                  // Field connectPromise:Lio/netty/channel/ChannelPromise;
       4: astore_1
       5: aload_1
       6: ifnull        24
       9: aload_1
      10: getstatic     #44                 // Field CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      13: invokeinterface #45,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      18: pop
      19: aload_0
      20: aconst_null
      21: putfield      #7                  // Field connectPromise:Lio/netty/channel/ChannelPromise;
      24: aload_0
      25: getfield      #5                  // Field connectTimeoutFuture:Ljava/util/concurrent/ScheduledFuture;
      28: astore_2
      29: aload_2
      30: ifnull        46
      33: aload_2
      34: iconst_0
      35: invokeinterface #124,  2          // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      40: pop
      41: aload_0
      42: aconst_null
      43: putfield      #5                  // Field connectTimeoutFuture:Ljava/util/concurrent/ScheduledFuture;
      46: aload_0
      47: invokespecial #125                // Method io/netty/channel/epoll/AbstractEpollChannel.doClose:()V
      50: aload_0
      51: aload_0
      52: getfield      #2                  // Field pipeIn:I
      55: invokespecial #1                  // Method safeClosePipe:(I)V
      58: aload_0
      59: aload_0
      60: getfield      #3                  // Field pipeOut:I
      63: invokespecial #1                  // Method safeClosePipe:(I)V
      66: aload_0
      67: invokespecial #8                  // Method clearSpliceQueue:()V
      70: goto          96
      73: astore_3
      74: aload_0
      75: aload_0
      76: getfield      #2                  // Field pipeIn:I
      79: invokespecial #1                  // Method safeClosePipe:(I)V
      82: aload_0
      83: aload_0
      84: getfield      #3                  // Field pipeOut:I
      87: invokespecial #1                  // Method safeClosePipe:(I)V
      90: aload_0
      91: invokespecial #8                  // Method clearSpliceQueue:()V
      94: aload_3
      95: athrow
      96: return
    Exception table:
       from    to  target type
           0    50    73   any
          73    74    73   any

  private void clearSpliceQueue();
    Code:
       0: aload_0
       1: getfield      #4                  // Field spliceQueue:Ljava/util/Queue;
       4: invokeinterface #126,  1          // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
       9: checkcast     #127                // class io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInTask
      12: astore_1
      13: aload_1
      14: ifnonnull     20
      17: goto          36
      20: aload_1
      21: getfield      #128                // Field io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInTask.promise:Lio/netty/channel/ChannelPromise;
      24: getstatic     #44                 // Field CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      27: invokeinterface #45,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      32: pop
      33: goto          0
      36: return

  protected boolean doConnect(java.net.SocketAddress, java.net.SocketAddress) throws java.lang.Exception;
    Code:
       0: aload_2
       1: ifnull        15
       4: aload_0
       5: invokevirtual #71                 // Method fd:()Lio/netty/channel/unix/FileDescriptor;
       8: invokevirtual #15                 // Method io/netty/channel/unix/FileDescriptor.intValue:()I
      11: aload_2
      12: invokestatic  #129                // Method io/netty/channel/epoll/Native.bind:(ILjava/net/SocketAddress;)V
      15: iconst_0
      16: istore_3
      17: aload_0
      18: invokevirtual #71                 // Method fd:()Lio/netty/channel/unix/FileDescriptor;
      21: invokevirtual #15                 // Method io/netty/channel/unix/FileDescriptor.intValue:()I
      24: aload_1
      25: invokestatic  #130                // Method io/netty/channel/epoll/Native.connect:(ILjava/net/SocketAddress;)Z
      28: istore        4
      30: iload         4
      32: ifne          42
      35: aload_0
      36: getstatic     #88                 // Field io/netty/channel/epoll/Native.EPOLLOUT:I
      39: invokevirtual #94                 // Method setFlag:(I)V
      42: iconst_1
      43: istore_3
      44: iload         4
      46: istore        5
      48: iload_3
      49: ifne          56
      52: aload_0
      53: invokevirtual #131                // Method doClose:()V
      56: iload         5
      58: ireturn
      59: astore        6
      61: iload_3
      62: ifne          69
      65: aload_0
      66: invokevirtual #131                // Method doClose:()V
      69: aload         6
      71: athrow
    Exception table:
       from    to  target type
          17    48    59   any
          59    61    59   any

  private void safeClosePipe(int);
    Code:
       0: iload_1
       1: iconst_m1
       2: if_icmpeq     35
       5: iload_1
       6: invokestatic  #132                // Method io/netty/channel/epoll/Native.close:(I)V
       9: goto          35
      12: astore_2
      13: getstatic     #134                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      16: invokeinterface #135,  1          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isWarnEnabled:()Z
      21: ifeq          35
      24: getstatic     #134                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      27: ldc           #136                // String Error while closing a pipe
      29: aload_2
      30: invokeinterface #137,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      35: return
    Exception table:
       from    to  target type
           5     9    12   Class java/io/IOException

  public boolean isOpen();
    Code:
       0: aload_0
       1: invokespecial #138                // Method io/netty/channel/epoll/AbstractEpollChannel.isOpen:()Z
       4: ireturn

  public io.netty.channel.ChannelMetadata metadata();
    Code:
       0: aload_0
       1: invokespecial #139                // Method io/netty/channel/epoll/AbstractEpollChannel.metadata:()Lio/netty/channel/ChannelMetadata;
       4: areturn

  public boolean isActive();
    Code:
       0: aload_0
       1: invokespecial #140                // Method io/netty/channel/epoll/AbstractEpollChannel.isActive:()Z
       4: ireturn

  protected io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe();
    Code:
       0: aload_0
       1: invokevirtual #141                // Method newUnsafe:()Lio/netty/channel/epoll/AbstractEpollChannel$AbstractEpollUnsafe;
       4: areturn

  static void access$000(io.netty.channel.epoll.AbstractEpollStreamChannel);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method clearSpliceQueue:()V
       4: return

  static io.netty.channel.ChannelPromise access$100(io.netty.channel.epoll.AbstractEpollStreamChannel);
    Code:
       0: aload_0
       1: getfield      #7                  // Field connectPromise:Lio/netty/channel/ChannelPromise;
       4: areturn

  static io.netty.channel.ChannelPromise access$102(io.netty.channel.epoll.AbstractEpollStreamChannel, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #7                  // Field connectPromise:Lio/netty/channel/ChannelPromise;
       6: areturn

  static java.net.SocketAddress access$202(io.netty.channel.epoll.AbstractEpollStreamChannel, java.net.SocketAddress);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #6                  // Field requestedRemoteAddress:Ljava/net/SocketAddress;
       6: areturn

  static java.util.concurrent.ScheduledFuture access$302(io.netty.channel.epoll.AbstractEpollStreamChannel, java.util.concurrent.ScheduledFuture);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #5                  // Field connectTimeoutFuture:Ljava/util/concurrent/ScheduledFuture;
       6: areturn

  static java.util.concurrent.ScheduledFuture access$300(io.netty.channel.epoll.AbstractEpollStreamChannel);
    Code:
       0: aload_0
       1: getfield      #5                  // Field connectTimeoutFuture:Ljava/util/concurrent/ScheduledFuture;
       4: areturn

  static java.net.SocketAddress access$200(io.netty.channel.epoll.AbstractEpollStreamChannel);
    Code:
       0: aload_0
       1: getfield      #6                  // Field requestedRemoteAddress:Ljava/net/SocketAddress;
       4: areturn

  static java.util.Queue access$400(io.netty.channel.epoll.AbstractEpollStreamChannel);
    Code:
       0: aload_0
       1: getfield      #4                  // Field spliceQueue:Ljava/util/Queue;
       4: areturn

  static int access$500(io.netty.channel.epoll.AbstractEpollStreamChannel);
    Code:
       0: aload_0
       1: getfield      #3                  // Field pipeOut:I
       4: ireturn

  static int access$602(io.netty.channel.epoll.AbstractEpollStreamChannel, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #2                  // Field pipeIn:I
       6: ireturn

  static int access$502(io.netty.channel.epoll.AbstractEpollStreamChannel, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #3                  // Field pipeOut:I
       6: ireturn

  static int access$600(io.netty.channel.epoll.AbstractEpollStreamChannel);
    Code:
       0: aload_0
       1: getfield      #2                  // Field pipeIn:I
       4: ireturn

  static void access$700(io.netty.channel.epoll.AbstractEpollStreamChannel, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method safeClosePipe:(I)V
       5: return

  static {};
    Code:
       0: ldc_w         #142                // class io/netty/channel/epoll/AbstractEpollStreamChannel
       3: invokevirtual #143                // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #68                 // Field $assertionsDisabled:Z
      17: new           #27                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #144                // String  (expected:
      26: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc_w         #91                 // class io/netty/buffer/ByteBuf
      32: invokestatic  #145                // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Class;)Ljava/lang/String;
      35: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #146                // String ,
      40: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc_w         #96                 // class io/netty/channel/DefaultFileRegion
      46: invokestatic  #145                // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Class;)Ljava/lang/String;
      49: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: bipush        41
      54: invokevirtual #147                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      57: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: putstatic     #117                // Field EXPECTED_TYPES:Ljava/lang/String;
      63: ldc_w         #142                // class io/netty/channel/epoll/AbstractEpollStreamChannel
      66: invokestatic  #148                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      69: putstatic     #134                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      72: new           #149                // class java/nio/channels/ClosedChannelException
      75: dup
      76: invokespecial #150                // Method java/nio/channels/ClosedChannelException."<init>":()V
      79: putstatic     #44                 // Field CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      82: getstatic     #44                 // Field CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      85: getstatic     #151                // Field io/netty/util/internal/EmptyArrays.EMPTY_STACK_TRACE:[Ljava/lang/StackTraceElement;
      88: invokevirtual #152                // Method java/nio/channels/ClosedChannelException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      91: return
}
