Compiled from "LocalServerChannel.java"
public class io.netty.channel.local.LocalServerChannel extends io.netty.channel.AbstractServerChannel {
  private final io.netty.channel.ChannelConfig config;

  private final java.util.Queue<java.lang.Object> inboundBuffer;

  private final java.lang.Runnable shutdownHook;

  private volatile int state;

  private volatile io.netty.channel.local.LocalAddress localAddress;

  private volatile boolean acceptInProgress;

  public io.netty.channel.local.LocalServerChannel();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method io/netty/channel/AbstractServerChannel."<init>":()V
       4: aload_0
       5: new           #3                  // class io/netty/channel/DefaultChannelConfig
       8: dup
       9: aload_0
      10: invokespecial #4                  // Method io/netty/channel/DefaultChannelConfig."<init>":(Lio/netty/channel/Channel;)V
      13: putfield      #5                  // Field config:Lio/netty/channel/ChannelConfig;
      16: aload_0
      17: new           #6                  // class java/util/ArrayDeque
      20: dup
      21: invokespecial #7                  // Method java/util/ArrayDeque."<init>":()V
      24: putfield      #8                  // Field inboundBuffer:Ljava/util/Queue;
      27: aload_0
      28: new           #9                  // class io/netty/channel/local/LocalServerChannel$1
      31: dup
      32: aload_0
      33: invokespecial #10                 // Method io/netty/channel/local/LocalServerChannel$1."<init>":(Lio/netty/channel/local/LocalServerChannel;)V
      36: putfield      #11                 // Field shutdownHook:Ljava/lang/Runnable;
      39: return

  public io.netty.channel.ChannelConfig config();
    Code:
       0: aload_0
       1: getfield      #5                  // Field config:Lio/netty/channel/ChannelConfig;
       4: areturn

  public io.netty.channel.local.LocalAddress localAddress();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method io/netty/channel/AbstractServerChannel.localAddress:()Ljava/net/SocketAddress;
       4: checkcast     #13                 // class io/netty/channel/local/LocalAddress
       7: areturn

  public io.netty.channel.local.LocalAddress remoteAddress();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method io/netty/channel/AbstractServerChannel.remoteAddress:()Ljava/net/SocketAddress;
       4: checkcast     #13                 // class io/netty/channel/local/LocalAddress
       7: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #15                 // Field state:I
       4: iconst_2
       5: if_icmpge     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isActive();
    Code:
       0: aload_0
       1: getfield      #15                 // Field state:I
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  protected boolean isCompatible(io.netty.channel.EventLoop);
    Code:
       0: aload_1
       1: instanceof    #16                 // class io/netty/channel/SingleThreadEventLoop
       4: ireturn

  protected java.net.SocketAddress localAddress0();
    Code:
       0: aload_0
       1: getfield      #17                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
       4: areturn

  protected void doRegister() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method eventLoop:()Lio/netty/channel/EventLoop;
       4: checkcast     #19                 // class io/netty/util/concurrent/SingleThreadEventExecutor
       7: aload_0
       8: getfield      #11                 // Field shutdownHook:Ljava/lang/Runnable;
      11: invokevirtual #20                 // Method io/netty/util/concurrent/SingleThreadEventExecutor.addShutdownHook:(Ljava/lang/Runnable;)V
      14: return

  protected void doBind(java.net.SocketAddress) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #17                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
       6: aload_1
       7: invokestatic  #21                 // Method io/netty/channel/local/LocalChannelRegistry.register:(Lio/netty/channel/Channel;Lio/netty/channel/local/LocalAddress;Ljava/net/SocketAddress;)Lio/netty/channel/local/LocalAddress;
      10: putfield      #17                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
      13: aload_0
      14: iconst_1
      15: putfield      #15                 // Field state:I
      18: return

  protected void doClose() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #15                 // Field state:I
       4: iconst_1
       5: if_icmpgt     32
       8: aload_0
       9: getfield      #17                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
      12: ifnull        27
      15: aload_0
      16: getfield      #17                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
      19: invokestatic  #22                 // Method io/netty/channel/local/LocalChannelRegistry.unregister:(Lio/netty/channel/local/LocalAddress;)V
      22: aload_0
      23: aconst_null
      24: putfield      #17                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
      27: aload_0
      28: iconst_2
      29: putfield      #15                 // Field state:I
      32: return

  protected void doDeregister() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method eventLoop:()Lio/netty/channel/EventLoop;
       4: checkcast     #19                 // class io/netty/util/concurrent/SingleThreadEventExecutor
       7: aload_0
       8: getfield      #11                 // Field shutdownHook:Ljava/lang/Runnable;
      11: invokevirtual #23                 // Method io/netty/util/concurrent/SingleThreadEventExecutor.removeShutdownHook:(Ljava/lang/Runnable;)V
      14: return

  protected void doBeginRead() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #24                 // Field acceptInProgress:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #8                  // Field inboundBuffer:Ljava/util/Queue;
      12: astore_1
      13: aload_1
      14: invokeinterface #25,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      19: ifeq          28
      22: aload_0
      23: iconst_1
      24: putfield      #24                 // Field acceptInProgress:Z
      27: return
      28: aload_0
      29: invokevirtual #26                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
      32: astore_2
      33: aload_1
      34: invokeinterface #27,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      39: astore_3
      40: aload_3
      41: ifnonnull     47
      44: goto          58
      47: aload_2
      48: aload_3
      49: invokeinterface #28,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      54: pop
      55: goto          33
      58: aload_2
      59: invokeinterface #29,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
      64: pop
      65: return

  io.netty.channel.local.LocalChannel serve(io.netty.channel.local.LocalChannel);
    Code:
       0: new           #30                 // class io/netty/channel/local/LocalChannel
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #31                 // Method io/netty/channel/local/LocalChannel."<init>":(Lio/netty/channel/local/LocalServerChannel;Lio/netty/channel/local/LocalChannel;)V
       9: astore_2
      10: aload_0
      11: invokevirtual #18                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      14: invokeinterface #32,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      19: ifeq          30
      22: aload_0
      23: aload_2
      24: invokespecial #1                  // Method serve0:(Lio/netty/channel/local/LocalChannel;)V
      27: goto          48
      30: aload_0
      31: invokevirtual #18                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      34: new           #33                 // class io/netty/channel/local/LocalServerChannel$2
      37: dup
      38: aload_0
      39: aload_2
      40: invokespecial #34                 // Method io/netty/channel/local/LocalServerChannel$2."<init>":(Lio/netty/channel/local/LocalServerChannel;Lio/netty/channel/local/LocalChannel;)V
      43: invokeinterface #35,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      48: aload_2
      49: areturn

  private void serve0(io.netty.channel.local.LocalChannel);
    Code:
       0: aload_0
       1: getfield      #8                  // Field inboundBuffer:Ljava/util/Queue;
       4: aload_1
       5: invokeinterface #36,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #24                 // Field acceptInProgress:Z
      15: ifeq          63
      18: aload_0
      19: iconst_0
      20: putfield      #24                 // Field acceptInProgress:Z
      23: aload_0
      24: invokevirtual #26                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
      27: astore_2
      28: aload_0
      29: getfield      #8                  // Field inboundBuffer:Ljava/util/Queue;
      32: invokeinterface #27,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      37: astore_3
      38: aload_3
      39: ifnonnull     45
      42: goto          56
      45: aload_2
      46: aload_3
      47: invokeinterface #28,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      52: pop
      53: goto          28
      56: aload_2
      57: invokeinterface #29,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
      62: pop
      63: return

  public java.net.SocketAddress remoteAddress();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method remoteAddress:()Lio/netty/channel/local/LocalAddress;
       4: areturn

  public java.net.SocketAddress localAddress();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method localAddress:()Lio/netty/channel/local/LocalAddress;
       4: areturn

  static void access$000(io.netty.channel.local.LocalServerChannel, io.netty.channel.local.LocalChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method serve0:(Lio/netty/channel/local/LocalChannel;)V
       5: return
}
