Compiled from "ChannelOutboundBuffer.java"
public final class io.netty.channel.ChannelOutboundBuffer {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final io.netty.util.concurrent.FastThreadLocal<java.nio.ByteBuffer[]> NIO_BUFFERS;

  private final io.netty.channel.Channel channel;

  private io.netty.channel.ChannelOutboundBuffer$Entry flushedEntry;

  private io.netty.channel.ChannelOutboundBuffer$Entry unflushedEntry;

  private io.netty.channel.ChannelOutboundBuffer$Entry tailEntry;

  private int flushed;

  private int nioBufferCount;

  private long nioBufferSize;

  private boolean inFail;

  private static final java.util.concurrent.atomic.AtomicLongFieldUpdater<io.netty.channel.ChannelOutboundBuffer> TOTAL_PENDING_SIZE_UPDATER;

  private volatile long totalPendingSize;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.netty.channel.ChannelOutboundBuffer> UNWRITABLE_UPDATER;

  private volatile int unwritable;

  private volatile java.lang.Runnable fireChannelWritabilityChangedTask;

  static final boolean $assertionsDisabled;

  io.netty.channel.ChannelOutboundBuffer(io.netty.channel.AbstractChannel);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field channel:Lio/netty/channel/Channel;
       9: return

  public void addMessage(java.lang.Object, int, io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: iload_2
       2: aload_1
       3: invokestatic  #3                  // Method total:(Ljava/lang/Object;)J
       6: aload_3
       7: invokestatic  #4                  // Method io/netty/channel/ChannelOutboundBuffer$Entry.newInstance:(Ljava/lang/Object;IJLio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelOutboundBuffer$Entry;
      10: astore        4
      12: aload_0
      13: getfield      #5                  // Field tailEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      16: ifnonnull     33
      19: aload_0
      20: aconst_null
      21: putfield      #6                  // Field flushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      24: aload_0
      25: aload         4
      27: putfield      #5                  // Field tailEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      30: goto          52
      33: aload_0
      34: getfield      #5                  // Field tailEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      37: astore        5
      39: aload         5
      41: aload         4
      43: putfield      #7                  // Field io/netty/channel/ChannelOutboundBuffer$Entry.next:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      46: aload_0
      47: aload         4
      49: putfield      #5                  // Field tailEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      52: aload_0
      53: getfield      #8                  // Field unflushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      56: ifnonnull     65
      59: aload_0
      60: aload         4
      62: putfield      #8                  // Field unflushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      65: aload_0
      66: iload_2
      67: i2l
      68: iconst_0
      69: invokespecial #9                  // Method incrementPendingOutboundBytes:(JZ)V
      72: return

  public void addFlush();
    Code:
       0: aload_0
       1: getfield      #8                  // Field unflushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
       4: astore_1
       5: aload_1
       6: ifnull        70
       9: aload_0
      10: getfield      #6                  // Field flushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      13: ifnonnull     21
      16: aload_0
      17: aload_1
      18: putfield      #6                  // Field flushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      21: aload_0
      22: dup
      23: getfield      #10                 // Field flushed:I
      26: iconst_1
      27: iadd
      28: putfield      #10                 // Field flushed:I
      31: aload_1
      32: getfield      #11                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.promise:Lio/netty/channel/ChannelPromise;
      35: invokeinterface #12,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
      40: ifne          56
      43: aload_1
      44: invokevirtual #13                 // Method io/netty/channel/ChannelOutboundBuffer$Entry.cancel:()I
      47: istore_2
      48: aload_0
      49: iload_2
      50: i2l
      51: iconst_0
      52: iconst_1
      53: invokespecial #14                 // Method decrementPendingOutboundBytes:(JZZ)V
      56: aload_1
      57: getfield      #7                  // Field io/netty/channel/ChannelOutboundBuffer$Entry.next:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      60: astore_1
      61: aload_1
      62: ifnonnull     21
      65: aload_0
      66: aconst_null
      67: putfield      #8                  // Field unflushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      70: return

  void incrementPendingOutboundBytes(long);
    Code:
       0: aload_0
       1: lload_1
       2: iconst_1
       3: invokespecial #9                  // Method incrementPendingOutboundBytes:(JZ)V
       6: return

  private void incrementPendingOutboundBytes(long, boolean);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifne          7
       6: return
       7: getstatic     #15                 // Field TOTAL_PENDING_SIZE_UPDATER:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: aload_0
      11: lload_1
      12: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.addAndGet:(Ljava/lang/Object;J)J
      15: lstore        4
      17: lload         4
      19: aload_0
      20: getfield      #2                  // Field channel:Lio/netty/channel/Channel;
      23: invokeinterface #17,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      28: invokeinterface #18,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getWriteBufferHighWaterMark:()I
      33: i2l
      34: lcmp
      35: iflt          43
      38: aload_0
      39: iload_3
      40: invokespecial #19                 // Method setUnwritable:(Z)V
      43: return

  void decrementPendingOutboundBytes(long);
    Code:
       0: aload_0
       1: lload_1
       2: iconst_1
       3: iconst_1
       4: invokespecial #14                 // Method decrementPendingOutboundBytes:(JZZ)V
       7: return

  private void decrementPendingOutboundBytes(long, boolean, boolean);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifne          7
       6: return
       7: getstatic     #15                 // Field TOTAL_PENDING_SIZE_UPDATER:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: aload_0
      11: lload_1
      12: lneg
      13: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.addAndGet:(Ljava/lang/Object;J)J
      16: lstore        5
      18: iload         4
      20: ifeq          56
      23: lload         5
      25: lconst_0
      26: lcmp
      27: ifeq          51
      30: lload         5
      32: aload_0
      33: getfield      #2                  // Field channel:Lio/netty/channel/Channel;
      36: invokeinterface #17,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      41: invokeinterface #20,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getWriteBufferLowWaterMark:()I
      46: i2l
      47: lcmp
      48: ifgt          56
      51: aload_0
      52: iload_3
      53: invokespecial #21                 // Method setWritable:(Z)V
      56: return

  private static long total(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #22                 // class io/netty/buffer/ByteBuf
       4: ifeq          16
       7: aload_0
       8: checkcast     #22                 // class io/netty/buffer/ByteBuf
      11: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      14: i2l
      15: lreturn
      16: aload_0
      17: instanceof    #24                 // class io/netty/channel/FileRegion
      20: ifeq          33
      23: aload_0
      24: checkcast     #24                 // class io/netty/channel/FileRegion
      27: invokeinterface #25,  1           // InterfaceMethod io/netty/channel/FileRegion.count:()J
      32: lreturn
      33: aload_0
      34: instanceof    #26                 // class io/netty/buffer/ByteBufHolder
      37: ifeq          54
      40: aload_0
      41: checkcast     #26                 // class io/netty/buffer/ByteBufHolder
      44: invokeinterface #27,  1           // InterfaceMethod io/netty/buffer/ByteBufHolder.content:()Lio/netty/buffer/ByteBuf;
      49: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      52: i2l
      53: lreturn
      54: ldc2_w        #28                 // long -1l
      57: lreturn

  public java.lang.Object current();
    Code:
       0: aload_0
       1: getfield      #6                  // Field flushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: aload_1
      12: getfield      #30                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.msg:Ljava/lang/Object;
      15: areturn

  public void progress(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field flushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
       4: astore_3
       5: getstatic     #31                 // Field $assertionsDisabled:Z
       8: ifne          23
      11: aload_3
      12: ifnonnull     23
      15: new           #32                 // class java/lang/AssertionError
      18: dup
      19: invokespecial #33                 // Method java/lang/AssertionError."<init>":()V
      22: athrow
      23: aload_3
      24: getfield      #11                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.promise:Lio/netty/channel/ChannelPromise;
      27: astore        4
      29: aload         4
      31: instanceof    #34                 // class io/netty/channel/ChannelProgressivePromise
      34: ifeq          68
      37: aload_3
      38: getfield      #35                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.progress:J
      41: lload_1
      42: ladd
      43: lstore        5
      45: aload_3
      46: lload         5
      48: putfield      #35                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.progress:J
      51: aload         4
      53: checkcast     #34                 // class io/netty/channel/ChannelProgressivePromise
      56: lload         5
      58: aload_3
      59: getfield      #36                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.total:J
      62: invokeinterface #37,  5           // InterfaceMethod io/netty/channel/ChannelProgressivePromise.tryProgress:(JJ)Z
      67: pop
      68: return

  public boolean remove();
    Code:
       0: aload_0
       1: getfield      #6                  // Field flushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
       4: astore_1
       5: aload_1
       6: ifnonnull     15
       9: aload_0
      10: invokespecial #38                 // Method clearNioBuffers:()V
      13: iconst_0
      14: ireturn
      15: aload_1
      16: getfield      #30                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.msg:Ljava/lang/Object;
      19: astore_2
      20: aload_1
      21: getfield      #11                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.promise:Lio/netty/channel/ChannelPromise;
      24: astore_3
      25: aload_1
      26: getfield      #39                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.pendingSize:I
      29: istore        4
      31: aload_0
      32: aload_1
      33: invokespecial #40                 // Method removeEntry:(Lio/netty/channel/ChannelOutboundBuffer$Entry;)V
      36: aload_1
      37: getfield      #41                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.cancelled:Z
      40: ifne          60
      43: aload_2
      44: invokestatic  #42                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      47: aload_3
      48: invokestatic  #43                 // Method safeSuccess:(Lio/netty/channel/ChannelPromise;)V
      51: aload_0
      52: iload         4
      54: i2l
      55: iconst_0
      56: iconst_1
      57: invokespecial #14                 // Method decrementPendingOutboundBytes:(JZZ)V
      60: aload_1
      61: invokevirtual #44                 // Method io/netty/channel/ChannelOutboundBuffer$Entry.recycle:()V
      64: iconst_1
      65: ireturn

  public boolean remove(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #45                 // Method remove0:(Ljava/lang/Throwable;Z)Z
       6: ireturn

  private boolean remove0(java.lang.Throwable, boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field flushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
       4: astore_3
       5: aload_3
       6: ifnonnull     15
       9: aload_0
      10: invokespecial #38                 // Method clearNioBuffers:()V
      13: iconst_0
      14: ireturn
      15: aload_3
      16: getfield      #30                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.msg:Ljava/lang/Object;
      19: astore        4
      21: aload_3
      22: getfield      #11                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.promise:Lio/netty/channel/ChannelPromise;
      25: astore        5
      27: aload_3
      28: getfield      #39                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.pendingSize:I
      31: istore        6
      33: aload_0
      34: aload_3
      35: invokespecial #40                 // Method removeEntry:(Lio/netty/channel/ChannelOutboundBuffer$Entry;)V
      38: aload_3
      39: getfield      #41                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.cancelled:Z
      42: ifne          65
      45: aload         4
      47: invokestatic  #42                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      50: aload         5
      52: aload_1
      53: invokestatic  #46                 // Method safeFail:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
      56: aload_0
      57: iload         6
      59: i2l
      60: iconst_0
      61: iload_2
      62: invokespecial #14                 // Method decrementPendingOutboundBytes:(JZZ)V
      65: aload_3
      66: invokevirtual #44                 // Method io/netty/channel/ChannelOutboundBuffer$Entry.recycle:()V
      69: iconst_1
      70: ireturn

  private void removeEntry(io.netty.channel.ChannelOutboundBuffer$Entry);
    Code:
       0: aload_0
       1: dup
       2: getfield      #10                 // Field flushed:I
       5: iconst_1
       6: isub
       7: dup_x1
       8: putfield      #10                 // Field flushed:I
      11: ifne          40
      14: aload_0
      15: aconst_null
      16: putfield      #6                  // Field flushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      19: aload_1
      20: aload_0
      21: getfield      #5                  // Field tailEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      24: if_acmpne     48
      27: aload_0
      28: aconst_null
      29: putfield      #5                  // Field tailEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      32: aload_0
      33: aconst_null
      34: putfield      #8                  // Field unflushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      37: goto          48
      40: aload_0
      41: aload_1
      42: getfield      #7                  // Field io/netty/channel/ChannelOutboundBuffer$Entry.next:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      45: putfield      #6                  // Field flushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      48: return

  public void removeBytes(long);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method current:()Ljava/lang/Object;
       4: astore_3
       5: aload_3
       6: instanceof    #22                 // class io/netty/buffer/ByteBuf
       9: ifne          32
      12: getstatic     #31                 // Field $assertionsDisabled:Z
      15: ifne          118
      18: lload_1
      19: lconst_0
      20: lcmp
      21: ifeq          118
      24: new           #32                 // class java/lang/AssertionError
      27: dup
      28: invokespecial #33                 // Method java/lang/AssertionError."<init>":()V
      31: athrow
      32: aload_3
      33: checkcast     #22                 // class io/netty/buffer/ByteBuf
      36: astore        4
      38: aload         4
      40: invokevirtual #48                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
      43: istore        5
      45: aload         4
      47: invokevirtual #49                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
      50: iload         5
      52: isub
      53: istore        6
      55: iload         6
      57: i2l
      58: lload_1
      59: lcmp
      60: ifgt          90
      63: lload_1
      64: lconst_0
      65: lcmp
      66: ifeq          82
      69: aload_0
      70: iload         6
      72: i2l
      73: invokevirtual #50                 // Method progress:(J)V
      76: lload_1
      77: iload         6
      79: i2l
      80: lsub
      81: lstore_1
      82: aload_0
      83: invokevirtual #51                 // Method remove:()Z
      86: pop
      87: goto          115
      90: lload_1
      91: lconst_0
      92: lcmp
      93: ifeq          118
      96: aload         4
      98: iload         5
     100: lload_1
     101: l2i
     102: iadd
     103: invokevirtual #52                 // Method io/netty/buffer/ByteBuf.readerIndex:(I)Lio/netty/buffer/ByteBuf;
     106: pop
     107: aload_0
     108: lload_1
     109: invokevirtual #50                 // Method progress:(J)V
     112: goto          118
     115: goto          0
     118: aload_0
     119: invokespecial #38                 // Method clearNioBuffers:()V
     122: return

  private void clearNioBuffers();
    Code:
       0: aload_0
       1: getfield      #53                 // Field nioBufferCount:I
       4: istore_1
       5: iload_1
       6: ifle          29
       9: aload_0
      10: iconst_0
      11: putfield      #53                 // Field nioBufferCount:I
      14: getstatic     #54                 // Field NIO_BUFFERS:Lio/netty/util/concurrent/FastThreadLocal;
      17: invokevirtual #55                 // Method io/netty/util/concurrent/FastThreadLocal.get:()Ljava/lang/Object;
      20: checkcast     #56                 // class "[Ljava/lang/Object;"
      23: iconst_0
      24: iload_1
      25: aconst_null
      26: invokestatic  #57                 // Method java/util/Arrays.fill:([Ljava/lang/Object;IILjava/lang/Object;)V
      29: return

  public java.nio.ByteBuffer[] nioBuffers();
    Code:
       0: lconst_0
       1: lstore_1
       2: iconst_0
       3: istore_3
       4: invokestatic  #58                 // Method io/netty/util/internal/InternalThreadLocalMap.get:()Lio/netty/util/internal/InternalThreadLocalMap;
       7: astore        4
       9: getstatic     #54                 // Field NIO_BUFFERS:Lio/netty/util/concurrent/FastThreadLocal;
      12: aload         4
      14: invokevirtual #59                 // Method io/netty/util/concurrent/FastThreadLocal.get:(Lio/netty/util/internal/InternalThreadLocalMap;)Ljava/lang/Object;
      17: checkcast     #60                 // class "[Ljava/nio/ByteBuffer;"
      20: astore        5
      22: aload_0
      23: getfield      #6                  // Field flushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      26: astore        6
      28: aload_0
      29: aload         6
      31: invokespecial #61                 // Method isFlushedEntry:(Lio/netty/channel/ChannelOutboundBuffer$Entry;)Z
      34: ifeq          259
      37: aload         6
      39: getfield      #30                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.msg:Ljava/lang/Object;
      42: instanceof    #22                 // class io/netty/buffer/ByteBuf
      45: ifeq          259
      48: aload         6
      50: getfield      #41                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.cancelled:Z
      53: ifne          249
      56: aload         6
      58: getfield      #30                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.msg:Ljava/lang/Object;
      61: checkcast     #22                 // class io/netty/buffer/ByteBuf
      64: astore        7
      66: aload         7
      68: invokevirtual #48                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
      71: istore        8
      73: aload         7
      75: invokevirtual #49                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
      78: iload         8
      80: isub
      81: istore        9
      83: iload         9
      85: ifle          249
      88: ldc           #62                 // int 2147483647
      90: iload         9
      92: isub
      93: i2l
      94: lload_1
      95: lcmp
      96: ifge          102
      99: goto          259
     102: lload_1
     103: iload         9
     105: i2l
     106: ladd
     107: lstore_1
     108: aload         6
     110: getfield      #63                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.count:I
     113: istore        10
     115: iload         10
     117: iconst_m1
     118: if_icmpne     134
     121: aload         6
     123: aload         7
     125: invokevirtual #64                 // Method io/netty/buffer/ByteBuf.nioBufferCount:()I
     128: dup
     129: istore        10
     131: putfield      #63                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.count:I
     134: iload_3
     135: iload         10
     137: iadd
     138: istore        11
     140: iload         11
     142: aload         5
     144: arraylength
     145: if_icmple     168
     148: aload         5
     150: iload         11
     152: iload_3
     153: invokestatic  #65                 // Method expandNioBufferArray:([Ljava/nio/ByteBuffer;II)[Ljava/nio/ByteBuffer;
     156: astore        5
     158: getstatic     #54                 // Field NIO_BUFFERS:Lio/netty/util/concurrent/FastThreadLocal;
     161: aload         4
     163: aload         5
     165: invokevirtual #66                 // Method io/netty/util/concurrent/FastThreadLocal.set:(Lio/netty/util/internal/InternalThreadLocalMap;Ljava/lang/Object;)V
     168: iload         10
     170: iconst_1
     171: if_icmpne     215
     174: aload         6
     176: getfield      #67                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.buf:Ljava/nio/ByteBuffer;
     179: astore        12
     181: aload         12
     183: ifnonnull     203
     186: aload         6
     188: aload         7
     190: iload         8
     192: iload         9
     194: invokevirtual #68                 // Method io/netty/buffer/ByteBuf.internalNioBuffer:(II)Ljava/nio/ByteBuffer;
     197: dup
     198: astore        12
     200: putfield      #67                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.buf:Ljava/nio/ByteBuffer;
     203: aload         5
     205: iload_3
     206: iinc          3, 1
     209: aload         12
     211: aastore
     212: goto          249
     215: aload         6
     217: getfield      #69                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.bufs:[Ljava/nio/ByteBuffer;
     220: astore        12
     222: aload         12
     224: ifnonnull     240
     227: aload         6
     229: aload         7
     231: invokevirtual #70                 // Method io/netty/buffer/ByteBuf.nioBuffers:()[Ljava/nio/ByteBuffer;
     234: dup
     235: astore        12
     237: putfield      #69                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.bufs:[Ljava/nio/ByteBuffer;
     240: aload         12
     242: aload         5
     244: iload_3
     245: invokestatic  #71                 // Method fillBufferArray:([Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;I)I
     248: istore_3
     249: aload         6
     251: getfield      #7                  // Field io/netty/channel/ChannelOutboundBuffer$Entry.next:Lio/netty/channel/ChannelOutboundBuffer$Entry;
     254: astore        6
     256: goto          28
     259: aload_0
     260: iload_3
     261: putfield      #53                 // Field nioBufferCount:I
     264: aload_0
     265: lload_1
     266: putfield      #72                 // Field nioBufferSize:J
     269: aload         5
     271: areturn

  private static int fillBufferArray(java.nio.ByteBuffer[], java.nio.ByteBuffer[], int);
    Code:
       0: aload_0
       1: astore_3
       2: aload_3
       3: arraylength
       4: istore        4
       6: iconst_0
       7: istore        5
       9: iload         5
      11: iload         4
      13: if_icmpge     44
      16: aload_3
      17: iload         5
      19: aaload
      20: astore        6
      22: aload         6
      24: ifnonnull     30
      27: goto          44
      30: aload_1
      31: iload_2
      32: iinc          2, 1
      35: aload         6
      37: aastore
      38: iinc          5, 1
      41: goto          9
      44: iload_2
      45: ireturn

  private static java.nio.ByteBuffer[] expandNioBufferArray(java.nio.ByteBuffer[], int, int);
    Code:
       0: aload_0
       1: arraylength
       2: istore_3
       3: iload_3
       4: iconst_1
       5: ishl
       6: istore_3
       7: iload_3
       8: ifge          19
      11: new           #73                 // class java/lang/IllegalStateException
      14: dup
      15: invokespecial #74                 // Method java/lang/IllegalStateException."<init>":()V
      18: athrow
      19: iload_1
      20: iload_3
      21: if_icmpgt     3
      24: iload_3
      25: anewarray     #75                 // class java/nio/ByteBuffer
      28: astore        4
      30: aload_0
      31: iconst_0
      32: aload         4
      34: iconst_0
      35: iload_2
      36: invokestatic  #76                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      39: aload         4
      41: areturn

  public int nioBufferCount();
    Code:
       0: aload_0
       1: getfield      #53                 // Field nioBufferCount:I
       4: ireturn

  public long nioBufferSize();
    Code:
       0: aload_0
       1: getfield      #72                 // Field nioBufferSize:J
       4: lreturn

  public boolean isWritable();
    Code:
       0: aload_0
       1: getfield      #77                 // Field unwritable:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean getUserDefinedWritability(int);
    Code:
       0: aload_0
       1: getfield      #77                 // Field unwritable:I
       4: iload_1
       5: invokestatic  #78                 // Method writabilityMask:(I)I
       8: iand
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public void setUserDefinedWritability(int, boolean);
    Code:
       0: iload_2
       1: ifeq          12
       4: aload_0
       5: iload_1
       6: invokespecial #79                 // Method setUserDefinedWritability:(I)V
       9: goto          17
      12: aload_0
      13: iload_1
      14: invokespecial #80                 // Method clearUserDefinedWritability:(I)V
      17: return

  private void setUserDefinedWritability(int);
    Code:
       0: iload_1
       1: invokestatic  #78                 // Method writabilityMask:(I)I
       4: iconst_m1
       5: ixor
       6: istore_2
       7: aload_0
       8: getfield      #77                 // Field unwritable:I
      11: istore_3
      12: iload_3
      13: iload_2
      14: iand
      15: istore        4
      17: getstatic     #81                 // Field UNWRITABLE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      20: aload_0
      21: iload_3
      22: iload         4
      24: invokevirtual #82                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      27: ifeq          47
      30: iload_3
      31: ifeq          50
      34: iload         4
      36: ifne          50
      39: aload_0
      40: iconst_1
      41: invokespecial #83                 // Method fireChannelWritabilityChanged:(Z)V
      44: goto          50
      47: goto          7
      50: return

  private void clearUserDefinedWritability(int);
    Code:
       0: iload_1
       1: invokestatic  #78                 // Method writabilityMask:(I)I
       4: istore_2
       5: aload_0
       6: getfield      #77                 // Field unwritable:I
       9: istore_3
      10: iload_3
      11: iload_2
      12: ior
      13: istore        4
      15: getstatic     #81                 // Field UNWRITABLE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      18: aload_0
      19: iload_3
      20: iload         4
      22: invokevirtual #82                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      25: ifeq          45
      28: iload_3
      29: ifne          48
      32: iload         4
      34: ifeq          48
      37: aload_0
      38: iconst_1
      39: invokespecial #83                 // Method fireChannelWritabilityChanged:(Z)V
      42: goto          48
      45: goto          5
      48: return

  private static int writabilityMask(int);
    Code:
       0: iload_0
       1: iconst_1
       2: if_icmplt     11
       5: iload_0
       6: bipush        31
       8: if_icmple     43
      11: new           #84                 // class java/lang/IllegalArgumentException
      14: dup
      15: new           #85                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #86                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #87                 // String index:
      24: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: iload_0
      28: invokevirtual #89                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #90                 // String  (expected: 1~31)
      33: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #92                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: iconst_1
      44: iload_0
      45: ishl
      46: ireturn

  private void setWritable(boolean);
    Code:
       0: aload_0
       1: getfield      #77                 // Field unwritable:I
       4: istore_2
       5: iload_2
       6: bipush        -2
       8: iand
       9: istore_3
      10: getstatic     #81                 // Field UNWRITABLE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      13: aload_0
      14: iload_2
      15: iload_3
      16: invokevirtual #82                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      19: ifeq          38
      22: iload_2
      23: ifeq          41
      26: iload_3
      27: ifne          41
      30: aload_0
      31: iload_1
      32: invokespecial #83                 // Method fireChannelWritabilityChanged:(Z)V
      35: goto          41
      38: goto          0
      41: return

  private void setUnwritable(boolean);
    Code:
       0: aload_0
       1: getfield      #77                 // Field unwritable:I
       4: istore_2
       5: iload_2
       6: iconst_1
       7: ior
       8: istore_3
       9: getstatic     #81                 // Field UNWRITABLE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      12: aload_0
      13: iload_2
      14: iload_3
      15: invokevirtual #82                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      18: ifeq          37
      21: iload_2
      22: ifne          40
      25: iload_3
      26: ifeq          40
      29: aload_0
      30: iload_1
      31: invokespecial #83                 // Method fireChannelWritabilityChanged:(Z)V
      34: goto          40
      37: goto          0
      40: return

  private void fireChannelWritabilityChanged(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Lio/netty/channel/Channel;
       4: invokeinterface #93,  1           // InterfaceMethod io/netty/channel/Channel.pipeline:()Lio/netty/channel/ChannelPipeline;
       9: astore_2
      10: iload_1
      11: ifeq          56
      14: aload_0
      15: getfield      #94                 // Field fireChannelWritabilityChangedTask:Ljava/lang/Runnable;
      18: astore_3
      19: aload_3
      20: ifnonnull     38
      23: aload_0
      24: new           #95                 // class io/netty/channel/ChannelOutboundBuffer$2
      27: dup
      28: aload_0
      29: aload_2
      30: invokespecial #96                 // Method io/netty/channel/ChannelOutboundBuffer$2."<init>":(Lio/netty/channel/ChannelOutboundBuffer;Lio/netty/channel/ChannelPipeline;)V
      33: dup
      34: astore_3
      35: putfield      #94                 // Field fireChannelWritabilityChangedTask:Ljava/lang/Runnable;
      38: aload_0
      39: getfield      #2                  // Field channel:Lio/netty/channel/Channel;
      42: invokeinterface #97,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      47: aload_3
      48: invokeinterface #98,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      53: goto          63
      56: aload_2
      57: invokeinterface #99,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelWritabilityChanged:()Lio/netty/channel/ChannelPipeline;
      62: pop
      63: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #10                 // Field flushed:I
       4: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #10                 // Field flushed:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  void failFlushed(java.lang.Throwable, boolean);
    Code:
       0: aload_0
       1: getfield      #100                // Field inFail:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #100                // Field inFail:Z
      13: aload_0
      14: aload_1
      15: iload_2
      16: invokespecial #45                 // Method remove0:(Ljava/lang/Throwable;Z)Z
      19: ifne          13
      22: goto          25
      25: aload_0
      26: iconst_0
      27: putfield      #100                // Field inFail:Z
      30: goto          41
      33: astore_3
      34: aload_0
      35: iconst_0
      36: putfield      #100                // Field inFail:Z
      39: aload_3
      40: athrow
      41: return
    Exception table:
       from    to  target type
           8    25    33   any
          33    34    33   any

  void close(java.nio.channels.ClosedChannelException);
    Code:
       0: aload_0
       1: getfield      #100                // Field inFail:Z
       4: ifeq          31
       7: aload_0
       8: getfield      #2                  // Field channel:Lio/netty/channel/Channel;
      11: invokeinterface #97,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      16: new           #101                // class io/netty/channel/ChannelOutboundBuffer$3
      19: dup
      20: aload_0
      21: aload_1
      22: invokespecial #102                // Method io/netty/channel/ChannelOutboundBuffer$3."<init>":(Lio/netty/channel/ChannelOutboundBuffer;Ljava/nio/channels/ClosedChannelException;)V
      25: invokeinterface #98,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      30: return
      31: aload_0
      32: iconst_1
      33: putfield      #100                // Field inFail:Z
      36: aload_0
      37: getfield      #2                  // Field channel:Lio/netty/channel/Channel;
      40: invokeinterface #103,  1          // InterfaceMethod io/netty/channel/Channel.isOpen:()Z
      45: ifeq          58
      48: new           #73                 // class java/lang/IllegalStateException
      51: dup
      52: ldc           #104                // String close() must be invoked after the channel is closed.
      54: invokespecial #105                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aload_0
      59: invokevirtual #106                // Method isEmpty:()Z
      62: ifne          75
      65: new           #73                 // class java/lang/IllegalStateException
      68: dup
      69: ldc           #107                // String close() must be invoked after all flushed writes are handled.
      71: invokespecial #105                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      74: athrow
      75: aload_0
      76: getfield      #8                  // Field unflushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      79: astore_2
      80: aload_2
      81: ifnull        130
      84: aload_2
      85: getfield      #39                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.pendingSize:I
      88: istore_3
      89: getstatic     #15                 // Field TOTAL_PENDING_SIZE_UPDATER:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      92: aload_0
      93: iload_3
      94: ineg
      95: i2l
      96: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.addAndGet:(Ljava/lang/Object;J)J
      99: pop2
     100: aload_2
     101: getfield      #41                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.cancelled:Z
     104: ifne          122
     107: aload_2
     108: getfield      #30                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.msg:Ljava/lang/Object;
     111: invokestatic  #42                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
     114: aload_2
     115: getfield      #11                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.promise:Lio/netty/channel/ChannelPromise;
     118: aload_1
     119: invokestatic  #46                 // Method safeFail:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
     122: aload_2
     123: invokevirtual #108                // Method io/netty/channel/ChannelOutboundBuffer$Entry.recycleAndGetNext:()Lio/netty/channel/ChannelOutboundBuffer$Entry;
     126: astore_2
     127: goto          80
     130: aload_0
     131: iconst_0
     132: putfield      #100                // Field inFail:Z
     135: goto          148
     138: astore        4
     140: aload_0
     141: iconst_0
     142: putfield      #100                // Field inFail:Z
     145: aload         4
     147: athrow
     148: aload_0
     149: invokespecial #38                 // Method clearNioBuffers:()V
     152: return
    Exception table:
       from    to  target type
          75   130   138   any
         138   140   138   any

  private static void safeSuccess(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: instanceof    #109                // class io/netty/channel/VoidChannelPromise
       4: ifne          27
       7: aload_0
       8: invokeinterface #110,  1          // InterfaceMethod io/netty/channel/ChannelPromise.trySuccess:()Z
      13: ifne          27
      16: getstatic     #111                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      19: ldc           #112                // String Failed to mark a promise as success because it is done already: {}
      21: aload_0
      22: invokeinterface #113,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      27: return

  private static void safeFail(io.netty.channel.ChannelPromise, java.lang.Throwable);
    Code:
       0: aload_0
       1: instanceof    #109                // class io/netty/channel/VoidChannelPromise
       4: ifne          29
       7: aload_0
       8: aload_1
       9: invokeinterface #114,  2          // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      14: ifne          29
      17: getstatic     #111                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      20: ldc           #115                // String Failed to mark a promise as failure because it\'s done already: {}
      22: aload_0
      23: aload_1
      24: invokeinterface #116,  4          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      29: return

  public void recycle();
    Code:
       0: return

  public long totalPendingWriteBytes();
    Code:
       0: aload_0
       1: getfield      #117                // Field totalPendingSize:J
       4: lreturn

  public long bytesBeforeUnwritable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Lio/netty/channel/Channel;
       4: invokeinterface #17,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
       9: invokeinterface #18,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getWriteBufferHighWaterMark:()I
      14: i2l
      15: aload_0
      16: getfield      #117                // Field totalPendingSize:J
      19: lsub
      20: lstore_1
      21: lload_1
      22: lconst_0
      23: lcmp
      24: ifle          40
      27: aload_0
      28: invokevirtual #118                // Method isWritable:()Z
      31: ifeq          38
      34: lload_1
      35: goto          39
      38: lconst_0
      39: lreturn
      40: lconst_0
      41: lreturn

  public long bytesBeforeWritable();
    Code:
       0: aload_0
       1: getfield      #117                // Field totalPendingSize:J
       4: aload_0
       5: getfield      #2                  // Field channel:Lio/netty/channel/Channel;
       8: invokeinterface #17,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      13: invokeinterface #20,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getWriteBufferLowWaterMark:()I
      18: i2l
      19: lsub
      20: lstore_1
      21: lload_1
      22: lconst_0
      23: lcmp
      24: ifle          40
      27: aload_0
      28: invokevirtual #118                // Method isWritable:()Z
      31: ifeq          38
      34: lconst_0
      35: goto          39
      38: lload_1
      39: lreturn
      40: lconst_0
      41: lreturn

  public void forEachFlushedMessage(io.netty.channel.ChannelOutboundBuffer$MessageProcessor) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #119                // class java/lang/NullPointerException
       7: dup
       8: ldc           #120                // String processor
      10: invokespecial #121                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #6                  // Field flushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      18: astore_2
      19: aload_2
      20: ifnonnull     24
      23: return
      24: aload_2
      25: getfield      #41                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.cancelled:Z
      28: ifne          45
      31: aload_1
      32: aload_2
      33: getfield      #30                 // Field io/netty/channel/ChannelOutboundBuffer$Entry.msg:Ljava/lang/Object;
      36: invokeinterface #122,  2          // InterfaceMethod io/netty/channel/ChannelOutboundBuffer$MessageProcessor.processMessage:(Ljava/lang/Object;)Z
      41: ifne          45
      44: return
      45: aload_2
      46: getfield      #7                  // Field io/netty/channel/ChannelOutboundBuffer$Entry.next:Lio/netty/channel/ChannelOutboundBuffer$Entry;
      49: astore_2
      50: aload_0
      51: aload_2
      52: invokespecial #61                 // Method isFlushedEntry:(Lio/netty/channel/ChannelOutboundBuffer$Entry;)Z
      55: ifne          24
      58: return

  private boolean isFlushedEntry(io.netty.channel.ChannelOutboundBuffer$Entry);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_1
       5: aload_0
       6: getfield      #8                  // Field unflushedEntry:Lio/netty/channel/ChannelOutboundBuffer$Entry;
       9: if_acmpeq     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  static {};
    Code:
       0: ldc_w         #123                // class io/netty/channel/ChannelOutboundBuffer
       3: invokevirtual #124                // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #31                 // Field $assertionsDisabled:Z
      17: ldc_w         #123                // class io/netty/channel/ChannelOutboundBuffer
      20: invokestatic  #125                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      23: putstatic     #111                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      26: new           #126                // class io/netty/channel/ChannelOutboundBuffer$1
      29: dup
      30: invokespecial #127                // Method io/netty/channel/ChannelOutboundBuffer$1."<init>":()V
      33: putstatic     #54                 // Field NIO_BUFFERS:Lio/netty/util/concurrent/FastThreadLocal;
      36: ldc_w         #123                // class io/netty/channel/ChannelOutboundBuffer
      39: ldc           #128                // String unwritable
      41: invokestatic  #129                // Method io/netty/util/internal/PlatformDependent.newAtomicIntegerFieldUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      44: astore_0
      45: aload_0
      46: ifnonnull     58
      49: ldc_w         #123                // class io/netty/channel/ChannelOutboundBuffer
      52: ldc           #128                // String unwritable
      54: invokestatic  #130                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      57: astore_0
      58: aload_0
      59: putstatic     #81                 // Field UNWRITABLE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      62: ldc_w         #123                // class io/netty/channel/ChannelOutboundBuffer
      65: ldc           #131                // String totalPendingSize
      67: invokestatic  #132                // Method io/netty/util/internal/PlatformDependent.newAtomicLongFieldUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      70: astore_1
      71: aload_1
      72: ifnonnull     84
      75: ldc_w         #123                // class io/netty/channel/ChannelOutboundBuffer
      78: ldc           #131                // String totalPendingSize
      80: invokestatic  #133                // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      83: astore_1
      84: aload_1
      85: putstatic     #15                 // Field TOTAL_PENDING_SIZE_UPDATER:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      88: return
}
