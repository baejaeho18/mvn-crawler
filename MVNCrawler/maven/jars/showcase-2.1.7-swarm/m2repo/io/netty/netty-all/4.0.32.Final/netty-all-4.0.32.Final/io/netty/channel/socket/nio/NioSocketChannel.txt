Compiled from "NioSocketChannel.java"
public class io.netty.channel.socket.nio.NioSocketChannel extends io.netty.channel.nio.AbstractNioByteChannel implements io.netty.channel.socket.SocketChannel {
  private static final io.netty.channel.ChannelMetadata METADATA;

  private static final java.nio.channels.spi.SelectorProvider DEFAULT_SELECTOR_PROVIDER;

  private final io.netty.channel.socket.SocketChannelConfig config;

  private static java.nio.channels.SocketChannel newSocket(java.nio.channels.spi.SelectorProvider);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method java/nio/channels/spi/SelectorProvider.openSocketChannel:()Ljava/nio/channels/SocketChannel;
       4: areturn
       5: astore_1
       6: new           #5                  // class io/netty/channel/ChannelException
       9: dup
      10: ldc           #6                  // String Failed to open a socket.
      12: aload_1
      13: invokespecial #7                  // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      16: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/io/IOException

  public io.netty.channel.socket.nio.NioSocketChannel();
    Code:
       0: aload_0
       1: getstatic     #8                  // Field DEFAULT_SELECTOR_PROVIDER:Ljava/nio/channels/spi/SelectorProvider;
       4: invokestatic  #9                  // Method newSocket:(Ljava/nio/channels/spi/SelectorProvider;)Ljava/nio/channels/SocketChannel;
       7: invokespecial #10                 // Method "<init>":(Ljava/nio/channels/SocketChannel;)V
      10: return

  public io.netty.channel.socket.nio.NioSocketChannel(java.nio.channels.spi.SelectorProvider);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #9                  // Method newSocket:(Ljava/nio/channels/spi/SelectorProvider;)Ljava/nio/channels/SocketChannel;
       5: invokespecial #10                 // Method "<init>":(Ljava/nio/channels/SocketChannel;)V
       8: return

  public io.netty.channel.socket.nio.NioSocketChannel(java.nio.channels.SocketChannel);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokespecial #11                 // Method "<init>":(Lio/netty/channel/Channel;Ljava/nio/channels/SocketChannel;)V
       6: return

  public io.netty.channel.socket.nio.NioSocketChannel(io.netty.channel.Channel, java.nio.channels.SocketChannel);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #12                 // Method io/netty/channel/nio/AbstractNioByteChannel."<init>":(Lio/netty/channel/Channel;Ljava/nio/channels/SelectableChannel;)V
       6: aload_0
       7: new           #13                 // class io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelConfig
      10: dup
      11: aload_0
      12: aload_0
      13: aload_2
      14: invokevirtual #14                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      17: aconst_null
      18: invokespecial #15                 // Method io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelConfig."<init>":(Lio/netty/channel/socket/nio/NioSocketChannel;Lio/netty/channel/socket/nio/NioSocketChannel;Ljava/net/Socket;Lio/netty/channel/socket/nio/NioSocketChannel$1;)V
      21: putfield      #16                 // Field config:Lio/netty/channel/socket/SocketChannelConfig;
      24: return

  public io.netty.channel.socket.ServerSocketChannel parent();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method io/netty/channel/nio/AbstractNioByteChannel.parent:()Lio/netty/channel/Channel;
       4: checkcast     #18                 // class io/netty/channel/socket/ServerSocketChannel
       7: areturn

  public io.netty.channel.ChannelMetadata metadata();
    Code:
       0: getstatic     #19                 // Field METADATA:Lio/netty/channel/ChannelMetadata;
       3: areturn

  public io.netty.channel.socket.SocketChannelConfig config();
    Code:
       0: aload_0
       1: getfield      #16                 // Field config:Lio/netty/channel/socket/SocketChannelConfig;
       4: areturn

  protected java.nio.channels.SocketChannel javaChannel();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method io/netty/channel/nio/AbstractNioByteChannel.javaChannel:()Ljava/nio/channels/SelectableChannel;
       4: checkcast     #21                 // class java/nio/channels/SocketChannel
       7: areturn

  public boolean isActive();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: astore_1
       5: aload_1
       6: invokevirtual #23                 // Method java/nio/channels/SocketChannel.isOpen:()Z
       9: ifeq          23
      12: aload_1
      13: invokevirtual #24                 // Method java/nio/channels/SocketChannel.isConnected:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public boolean isInputShutdown();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method io/netty/channel/nio/AbstractNioByteChannel.isInputShutdown:()Z
       4: ireturn

  public java.net.InetSocketAddress localAddress();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method io/netty/channel/nio/AbstractNioByteChannel.localAddress:()Ljava/net/SocketAddress;
       4: checkcast     #27                 // class java/net/InetSocketAddress
       7: areturn

  public java.net.InetSocketAddress remoteAddress();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method io/netty/channel/nio/AbstractNioByteChannel.remoteAddress:()Ljava/net/SocketAddress;
       4: checkcast     #27                 // class java/net/InetSocketAddress
       7: areturn

  public boolean isOutputShutdown();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #14                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
       7: invokevirtual #29                 // Method java/net/Socket.isOutputShutdown:()Z
      10: ifne          20
      13: aload_0
      14: invokevirtual #30                 // Method isActive:()Z
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public io.netty.channel.ChannelFuture shutdownOutput();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #31                 // Method newPromise:()Lio/netty/channel/ChannelPromise;
       5: invokevirtual #32                 // Method shutdownOutput:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public io.netty.channel.ChannelFuture shutdownOutput(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method unsafe:()Lio/netty/channel/nio/AbstractNioChannel$NioUnsafe;
       4: checkcast     #34                 // class io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelUnsafe
       7: invokevirtual #35                 // Method io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelUnsafe.closeExecutor:()Ljava/util/concurrent/Executor;
      10: astore_2
      11: aload_2
      12: ifnull        33
      15: aload_2
      16: new           #36                 // class io/netty/channel/socket/nio/NioSocketChannel$1
      19: dup
      20: aload_0
      21: aload_1
      22: invokespecial #37                 // Method io/netty/channel/socket/nio/NioSocketChannel$1."<init>":(Lio/netty/channel/socket/nio/NioSocketChannel;Lio/netty/channel/ChannelPromise;)V
      25: invokeinterface #38,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      30: goto          70
      33: aload_0
      34: invokevirtual #39                 // Method eventLoop:()Lio/netty/channel/nio/NioEventLoop;
      37: astore_3
      38: aload_3
      39: invokeinterface #40,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      44: ifeq          55
      47: aload_0
      48: aload_1
      49: invokespecial #2                  // Method shutdownOutput0:(Lio/netty/channel/ChannelPromise;)V
      52: goto          70
      55: aload_3
      56: new           #41                 // class io/netty/channel/socket/nio/NioSocketChannel$2
      59: dup
      60: aload_0
      61: aload_1
      62: invokespecial #42                 // Method io/netty/channel/socket/nio/NioSocketChannel$2."<init>":(Lio/netty/channel/socket/nio/NioSocketChannel;Lio/netty/channel/ChannelPromise;)V
      65: invokeinterface #43,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      70: aload_1
      71: areturn

  private void shutdownOutput0(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #14                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
       7: invokevirtual #44                 // Method java/net/Socket.shutdownOutput:()V
      10: aload_1
      11: invokeinterface #45,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
      16: pop
      17: goto          29
      20: astore_2
      21: aload_1
      22: aload_2
      23: invokeinterface #47,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      28: pop
      29: return
    Exception table:
       from    to  target type
           0    17    20   Class java/lang/Throwable

  protected java.net.SocketAddress localAddress0();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #14                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
       7: invokevirtual #48                 // Method java/net/Socket.getLocalSocketAddress:()Ljava/net/SocketAddress;
      10: areturn

  protected java.net.SocketAddress remoteAddress0();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #14                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
       7: invokevirtual #49                 // Method java/net/Socket.getRemoteSocketAddress:()Ljava/net/SocketAddress;
      10: areturn

  protected void doBind(java.net.SocketAddress) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #14                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
       7: aload_1
       8: invokevirtual #50                 // Method java/net/Socket.bind:(Ljava/net/SocketAddress;)V
      11: return

  protected boolean doConnect(java.net.SocketAddress, java.net.SocketAddress) throws java.lang.Exception;
    Code:
       0: aload_2
       1: ifnull        15
       4: aload_0
       5: invokevirtual #22                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       8: invokevirtual #14                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      11: aload_2
      12: invokevirtual #50                 // Method java/net/Socket.bind:(Ljava/net/SocketAddress;)V
      15: iconst_0
      16: istore_3
      17: aload_0
      18: invokevirtual #22                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      21: aload_1
      22: invokevirtual #51                 // Method java/nio/channels/SocketChannel.connect:(Ljava/net/SocketAddress;)Z
      25: istore        4
      27: iload         4
      29: ifne          42
      32: aload_0
      33: invokevirtual #52                 // Method selectionKey:()Ljava/nio/channels/SelectionKey;
      36: bipush        8
      38: invokevirtual #53                 // Method java/nio/channels/SelectionKey.interestOps:(I)Ljava/nio/channels/SelectionKey;
      41: pop
      42: iconst_1
      43: istore_3
      44: iload         4
      46: istore        5
      48: iload_3
      49: ifne          56
      52: aload_0
      53: invokevirtual #54                 // Method doClose:()V
      56: iload         5
      58: ireturn
      59: astore        6
      61: iload_3
      62: ifne          69
      65: aload_0
      66: invokevirtual #54                 // Method doClose:()V
      69: aload         6
      71: athrow
    Exception table:
       from    to  target type
          17    48    59   any
          59    61    59   any

  protected void doFinishConnect() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: invokevirtual #55                 // Method java/nio/channels/SocketChannel.finishConnect:()Z
       7: ifne          18
      10: new           #56                 // class java/lang/Error
      13: dup
      14: invokespecial #57                 // Method java/lang/Error."<init>":()V
      17: athrow
      18: return

  protected void doDisconnect() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method doClose:()V
       4: return

  protected void doClose() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #58                 // Method io/netty/channel/nio/AbstractNioByteChannel.doClose:()V
       4: aload_0
       5: invokevirtual #22                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       8: invokevirtual #59                 // Method java/nio/channels/SocketChannel.close:()V
      11: return

  protected int doReadBytes(io.netty.buffer.ByteBuf) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #22                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       5: aload_1
       6: invokevirtual #60                 // Method io/netty/buffer/ByteBuf.writableBytes:()I
       9: invokevirtual #61                 // Method io/netty/buffer/ByteBuf.writeBytes:(Ljava/nio/channels/ScatteringByteChannel;I)I
      12: ireturn

  protected int doWriteBytes(io.netty.buffer.ByteBuf) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #62                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       4: istore_2
       5: aload_1
       6: aload_0
       7: invokevirtual #22                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      10: iload_2
      11: invokevirtual #63                 // Method io/netty/buffer/ByteBuf.readBytes:(Ljava/nio/channels/GatheringByteChannel;I)I
      14: ireturn

  protected long doWriteFileRegion(io.netty.channel.FileRegion) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #64,  1           // InterfaceMethod io/netty/channel/FileRegion.transfered:()J
       6: lstore_2
       7: aload_1
       8: aload_0
       9: invokevirtual #22                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      12: lload_2
      13: invokeinterface #65,  4           // InterfaceMethod io/netty/channel/FileRegion.transferTo:(Ljava/nio/channels/WritableByteChannel;J)J
      18: lreturn

  protected void doWrite(io.netty.channel.ChannelOutboundBuffer) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #66                 // Method io/netty/channel/ChannelOutboundBuffer.size:()I
       4: istore_2
       5: iload_2
       6: ifne          16
       9: aload_0
      10: invokevirtual #67                 // Method clearOpWrite:()V
      13: goto          258
      16: lconst_0
      17: lstore_3
      18: iconst_0
      19: istore        5
      21: iconst_0
      22: istore        6
      24: aload_1
      25: invokevirtual #68                 // Method io/netty/channel/ChannelOutboundBuffer.nioBuffers:()[Ljava/nio/ByteBuffer;
      28: astore        7
      30: aload_1
      31: invokevirtual #69                 // Method io/netty/channel/ChannelOutboundBuffer.nioBufferCount:()I
      34: istore        8
      36: aload_1
      37: invokevirtual #70                 // Method io/netty/channel/ChannelOutboundBuffer.nioBufferSize:()J
      40: lstore        9
      42: aload_0
      43: invokevirtual #22                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
      46: astore        11
      48: iload         8
      50: lookupswitch  { // 2
                     0: 76
                     1: 82
               default: 162
          }
      76: aload_0
      77: aload_1
      78: invokespecial #71                 // Method io/netty/channel/nio/AbstractNioByteChannel.doWrite:(Lio/netty/channel/ChannelOutboundBuffer;)V
      81: return
      82: aload         7
      84: iconst_0
      85: aaload
      86: astore        12
      88: aload_0
      89: invokevirtual #72                 // Method config:()Lio/netty/channel/socket/SocketChannelConfig;
      92: invokeinterface #73,  1           // InterfaceMethod io/netty/channel/socket/SocketChannelConfig.getWriteSpinCount:()I
      97: iconst_1
      98: isub
      99: istore        13
     101: iload         13
     103: iflt          159
     106: aload         11
     108: aload         12
     110: invokevirtual #74                 // Method java/nio/channels/SocketChannel.write:(Ljava/nio/ByteBuffer;)I
     113: istore        14
     115: iload         14
     117: ifne          126
     120: iconst_1
     121: istore        6
     123: goto          159
     126: lload         9
     128: iload         14
     130: i2l
     131: lsub
     132: lstore        9
     134: lload_3
     135: iload         14
     137: i2l
     138: ladd
     139: lstore_3
     140: lload         9
     142: lconst_0
     143: lcmp
     144: ifne          153
     147: iconst_1
     148: istore        5
     150: goto          159
     153: iinc          13, -1
     156: goto          101
     159: goto          236
     162: aload_0
     163: invokevirtual #72                 // Method config:()Lio/netty/channel/socket/SocketChannelConfig;
     166: invokeinterface #73,  1           // InterfaceMethod io/netty/channel/socket/SocketChannelConfig.getWriteSpinCount:()I
     171: iconst_1
     172: isub
     173: istore        13
     175: iload         13
     177: iflt          236
     180: aload         11
     182: aload         7
     184: iconst_0
     185: iload         8
     187: invokevirtual #75                 // Method java/nio/channels/SocketChannel.write:([Ljava/nio/ByteBuffer;II)J
     190: lstore        14
     192: lload         14
     194: lconst_0
     195: lcmp
     196: ifne          205
     199: iconst_1
     200: istore        6
     202: goto          236
     205: lload         9
     207: lload         14
     209: lsub
     210: lstore        9
     212: lload_3
     213: lload         14
     215: ladd
     216: lstore_3
     217: lload         9
     219: lconst_0
     220: lcmp
     221: ifne          230
     224: iconst_1
     225: istore        5
     227: goto          236
     230: iinc          13, -1
     233: goto          175
     236: aload_1
     237: lload_3
     238: invokevirtual #76                 // Method io/netty/channel/ChannelOutboundBuffer.removeBytes:(J)V
     241: iload         5
     243: ifne          255
     246: aload_0
     247: iload         6
     249: invokevirtual #77                 // Method incompleteWrite:(Z)V
     252: goto          258
     255: goto          0
     258: return

  protected io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe newUnsafe();
    Code:
       0: new           #34                 // class io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelUnsafe
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #78                 // Method io/netty/channel/socket/nio/NioSocketChannel$NioSocketChannelUnsafe."<init>":(Lio/netty/channel/socket/nio/NioSocketChannel;Lio/netty/channel/socket/nio/NioSocketChannel$1;)V
       9: areturn

  protected java.nio.channels.SelectableChannel javaChannel();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method javaChannel:()Ljava/nio/channels/SocketChannel;
       4: areturn

  protected io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe();
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method newUnsafe:()Lio/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe;
       4: areturn

  public java.net.SocketAddress remoteAddress();
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method remoteAddress:()Ljava/net/InetSocketAddress;
       4: areturn

  public java.net.SocketAddress localAddress();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method localAddress:()Ljava/net/InetSocketAddress;
       4: areturn

  public io.netty.channel.Channel parent();
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method parent:()Lio/netty/channel/socket/ServerSocketChannel;
       4: areturn

  public io.netty.channel.ChannelConfig config();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method config:()Lio/netty/channel/socket/SocketChannelConfig;
       4: areturn

  static void access$100(io.netty.channel.socket.nio.NioSocketChannel, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method shutdownOutput0:(Lio/netty/channel/ChannelPromise;)V
       5: return

  static void access$300(io.netty.channel.socket.nio.NioSocketChannel, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1                  // Method setReadPending:(Z)V
       5: return

  static {};
    Code:
       0: new           #83                 // class io/netty/channel/ChannelMetadata
       3: dup
       4: iconst_0
       5: invokespecial #84                 // Method io/netty/channel/ChannelMetadata."<init>":(Z)V
       8: putstatic     #19                 // Field METADATA:Lio/netty/channel/ChannelMetadata;
      11: invokestatic  #85                 // Method java/nio/channels/spi/SelectorProvider.provider:()Ljava/nio/channels/spi/SelectorProvider;
      14: putstatic     #8                  // Field DEFAULT_SELECTOR_PROVIDER:Ljava/nio/channels/spi/SelectorProvider;
      17: return
}
