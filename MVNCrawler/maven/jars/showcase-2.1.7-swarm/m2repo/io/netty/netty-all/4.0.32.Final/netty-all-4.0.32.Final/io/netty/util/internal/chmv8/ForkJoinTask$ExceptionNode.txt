Compiled from "ForkJoinTask.java"
final class io.netty.util.internal.chmv8.ForkJoinTask$ExceptionNode extends java.lang.ref.WeakReference<io.netty.util.internal.chmv8.ForkJoinTask<?>> {
  final java.lang.Throwable ex;

  io.netty.util.internal.chmv8.ForkJoinTask$ExceptionNode next;

  final long thrower;

  io.netty.util.internal.chmv8.ForkJoinTask$ExceptionNode(io.netty.util.internal.chmv8.ForkJoinTask<?>, java.lang.Throwable, io.netty.util.internal.chmv8.ForkJoinTask$ExceptionNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method io/netty/util/internal/chmv8/ForkJoinTask.access$000:()Ljava/lang/ref/ReferenceQueue;
       5: invokespecial #2                  // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
       8: aload_0
       9: aload_2
      10: putfield      #3                  // Field ex:Ljava/lang/Throwable;
      13: aload_0
      14: aload_3
      15: putfield      #4                  // Field next:Lio/netty/util/internal/chmv8/ForkJoinTask$ExceptionNode;
      18: aload_0
      19: invokestatic  #5                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      22: invokevirtual #6                  // Method java/lang/Thread.getId:()J
      25: putfield      #7                  // Field thrower:J
      28: return
}
