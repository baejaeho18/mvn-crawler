Compiled from "HashedWheelTimer.java"
public class io.netty.util.HashedWheelTimer implements io.netty.util.Timer {
  static final io.netty.util.internal.logging.InternalLogger logger;

  private static final io.netty.util.ResourceLeakDetector<io.netty.util.HashedWheelTimer> leakDetector;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.netty.util.HashedWheelTimer> WORKER_STATE_UPDATER;

  private final io.netty.util.ResourceLeak leak;

  private final io.netty.util.HashedWheelTimer$Worker worker;

  private final java.lang.Thread workerThread;

  public static final int WORKER_STATE_INIT;

  public static final int WORKER_STATE_STARTED;

  public static final int WORKER_STATE_SHUTDOWN;

  private volatile int workerState;

  private final long tickDuration;

  private final io.netty.util.HashedWheelTimer$HashedWheelBucket[] wheel;

  private final int mask;

  private final java.util.concurrent.CountDownLatch startTimeInitialized;

  private final java.util.Queue<io.netty.util.HashedWheelTimer$HashedWheelTimeout> timeouts;

  private final java.util.Queue<java.lang.Runnable> cancelledTimeouts;

  private volatile long startTime;

  public io.netty.util.HashedWheelTimer();
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method java/util/concurrent/Executors.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;
       4: invokespecial #10                 // Method "<init>":(Ljava/util/concurrent/ThreadFactory;)V
       7: return

  public io.netty.util.HashedWheelTimer(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method java/util/concurrent/Executors.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;
       4: lload_1
       5: aload_3
       6: invokespecial #11                 // Method "<init>":(Ljava/util/concurrent/ThreadFactory;JLjava/util/concurrent/TimeUnit;)V
       9: return

  public io.netty.util.HashedWheelTimer(long, java.util.concurrent.TimeUnit, int);
    Code:
       0: aload_0
       1: invokestatic  #9                  // Method java/util/concurrent/Executors.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;
       4: lload_1
       5: aload_3
       6: iload         4
       8: invokespecial #12                 // Method "<init>":(Ljava/util/concurrent/ThreadFactory;JLjava/util/concurrent/TimeUnit;I)V
      11: return

  public io.netty.util.HashedWheelTimer(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #13                 // long 100l
       5: getstatic     #15                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       8: invokespecial #11                 // Method "<init>":(Ljava/util/concurrent/ThreadFactory;JLjava/util/concurrent/TimeUnit;)V
      11: return

  public io.netty.util.HashedWheelTimer(java.util.concurrent.ThreadFactory, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: aload         4
       5: sipush        512
       8: invokespecial #12                 // Method "<init>":(Ljava/util/concurrent/ThreadFactory;JLjava/util/concurrent/TimeUnit;I)V
      11: return

  public io.netty.util.HashedWheelTimer(java.util.concurrent.ThreadFactory, long, java.util.concurrent.TimeUnit, int);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #17                 // class io/netty/util/HashedWheelTimer$Worker
       8: dup
       9: aload_0
      10: aconst_null
      11: invokespecial #18                 // Method io/netty/util/HashedWheelTimer$Worker."<init>":(Lio/netty/util/HashedWheelTimer;Lio/netty/util/HashedWheelTimer$1;)V
      14: putfield      #19                 // Field worker:Lio/netty/util/HashedWheelTimer$Worker;
      17: aload_0
      18: iconst_0
      19: putfield      #20                 // Field workerState:I
      22: aload_0
      23: new           #21                 // class java/util/concurrent/CountDownLatch
      26: dup
      27: iconst_1
      28: invokespecial #22                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      31: putfield      #7                  // Field startTimeInitialized:Ljava/util/concurrent/CountDownLatch;
      34: aload_0
      35: invokestatic  #23                 // Method io/netty/util/internal/PlatformDependent.newMpscQueue:()Ljava/util/Queue;
      38: putfield      #3                  // Field timeouts:Ljava/util/Queue;
      41: aload_0
      42: invokestatic  #23                 // Method io/netty/util/internal/PlatformDependent.newMpscQueue:()Ljava/util/Queue;
      45: putfield      #1                  // Field cancelledTimeouts:Ljava/util/Queue;
      48: aload_1
      49: ifnonnull     62
      52: new           #24                 // class java/lang/NullPointerException
      55: dup
      56: ldc           #25                 // String threadFactory
      58: invokespecial #26                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: aload         4
      64: ifnonnull     77
      67: new           #24                 // class java/lang/NullPointerException
      70: dup
      71: ldc           #27                 // String unit
      73: invokespecial #26                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      76: athrow
      77: lload_2
      78: lconst_0
      79: lcmp
      80: ifgt          110
      83: new           #28                 // class java/lang/IllegalArgumentException
      86: dup
      87: new           #29                 // class java/lang/StringBuilder
      90: dup
      91: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      94: ldc           #31                 // String tickDuration must be greater than 0:
      96: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: lload_2
     100: invokevirtual #33                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     103: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     109: athrow
     110: iload         5
     112: ifgt          143
     115: new           #28                 // class java/lang/IllegalArgumentException
     118: dup
     119: new           #29                 // class java/lang/StringBuilder
     122: dup
     123: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     126: ldc           #36                 // String ticksPerWheel must be greater than 0:
     128: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: iload         5
     133: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     136: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     142: athrow
     143: aload_0
     144: iload         5
     146: invokestatic  #38                 // Method createWheel:(I)[Lio/netty/util/HashedWheelTimer$HashedWheelBucket;
     149: putfield      #5                  // Field wheel:[Lio/netty/util/HashedWheelTimer$HashedWheelBucket;
     152: aload_0
     153: aload_0
     154: getfield      #5                  // Field wheel:[Lio/netty/util/HashedWheelTimer$HashedWheelBucket;
     157: arraylength
     158: iconst_1
     159: isub
     160: putfield      #6                  // Field mask:I
     163: aload_0
     164: aload         4
     166: lload_2
     167: invokevirtual #39                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     170: putfield      #2                  // Field tickDuration:J
     173: aload_0
     174: getfield      #2                  // Field tickDuration:J
     177: ldc2_w        #40                 // long 9223372036854775807l
     180: aload_0
     181: getfield      #5                  // Field wheel:[Lio/netty/util/HashedWheelTimer$HashedWheelBucket;
     184: arraylength
     185: i2l
     186: ldiv
     187: lcmp
     188: iflt          231
     191: new           #28                 // class java/lang/IllegalArgumentException
     194: dup
     195: ldc           #42                 // String tickDuration: %d (expected: 0 < tickDuration in nanos < %d
     197: iconst_2
     198: anewarray     #43                 // class java/lang/Object
     201: dup
     202: iconst_0
     203: lload_2
     204: invokestatic  #44                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     207: aastore
     208: dup
     209: iconst_1
     210: ldc2_w        #40                 // long 9223372036854775807l
     213: aload_0
     214: getfield      #5                  // Field wheel:[Lio/netty/util/HashedWheelTimer$HashedWheelBucket;
     217: arraylength
     218: i2l
     219: ldiv
     220: invokestatic  #44                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     223: aastore
     224: invokestatic  #45                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     227: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     230: athrow
     231: aload_0
     232: aload_1
     233: aload_0
     234: getfield      #19                 // Field worker:Lio/netty/util/HashedWheelTimer$Worker;
     237: invokeinterface #46,  2           // InterfaceMethod java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
     242: putfield      #47                 // Field workerThread:Ljava/lang/Thread;
     245: aload_0
     246: getstatic     #48                 // Field leakDetector:Lio/netty/util/ResourceLeakDetector;
     249: aload_0
     250: invokevirtual #49                 // Method io/netty/util/ResourceLeakDetector.open:(Ljava/lang/Object;)Lio/netty/util/ResourceLeak;
     253: putfield      #50                 // Field leak:Lio/netty/util/ResourceLeak;
     256: return

  private static io.netty.util.HashedWheelTimer$HashedWheelBucket[] createWheel(int);
    Code:
       0: iload_0
       1: ifgt          31
       4: new           #28                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #29                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #36                 // String ticksPerWheel must be greater than 0:
      17: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_0
      21: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: iload_0
      32: ldc           #51                 // int 1073741824
      34: if_icmple     64
      37: new           #28                 // class java/lang/IllegalArgumentException
      40: dup
      41: new           #29                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #52                 // String ticksPerWheel may not be greater than 2^30:
      50: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: iload_0
      54: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      57: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: iload_0
      65: invokestatic  #53                 // Method normalizeTicksPerWheel:(I)I
      68: istore_0
      69: iload_0
      70: anewarray     #54                 // class io/netty/util/HashedWheelTimer$HashedWheelBucket
      73: astore_1
      74: iconst_0
      75: istore_2
      76: iload_2
      77: aload_1
      78: arraylength
      79: if_icmpge     99
      82: aload_1
      83: iload_2
      84: new           #54                 // class io/netty/util/HashedWheelTimer$HashedWheelBucket
      87: dup
      88: aconst_null
      89: invokespecial #55                 // Method io/netty/util/HashedWheelTimer$HashedWheelBucket."<init>":(Lio/netty/util/HashedWheelTimer$1;)V
      92: aastore
      93: iinc          2, 1
      96: goto          76
      99: aload_1
     100: areturn

  private static int normalizeTicksPerWheel(int);
    Code:
       0: iconst_1
       1: istore_1
       2: iload_1
       3: iload_0
       4: if_icmpge     14
       7: iload_1
       8: iconst_1
       9: ishl
      10: istore_1
      11: goto          2
      14: iload_1
      15: ireturn

  public void start();
    Code:
       0: getstatic     #4                  // Field WORKER_STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #56                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
       7: tableswitch   { // 0 to 2
                     0: 32
                     1: 54
                     2: 57
               default: 67
          }
      32: getstatic     #4                  // Field WORKER_STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      35: aload_0
      36: iconst_0
      37: iconst_1
      38: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      41: ifeq          77
      44: aload_0
      45: getfield      #47                 // Field workerThread:Ljava/lang/Thread;
      48: invokevirtual #58                 // Method java/lang/Thread.start:()V
      51: goto          77
      54: goto          77
      57: new           #59                 // class java/lang/IllegalStateException
      60: dup
      61: ldc           #60                 // String cannot be started once stopped
      63: invokespecial #61                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: new           #62                 // class java/lang/Error
      70: dup
      71: ldc           #63                 // String Invalid WorkerState
      73: invokespecial #64                 // Method java/lang/Error."<init>":(Ljava/lang/String;)V
      76: athrow
      77: aload_0
      78: getfield      #8                  // Field startTime:J
      81: lconst_0
      82: lcmp
      83: ifne          100
      86: aload_0
      87: getfield      #7                  // Field startTimeInitialized:Ljava/util/concurrent/CountDownLatch;
      90: invokevirtual #65                 // Method java/util/concurrent/CountDownLatch.await:()V
      93: goto          77
      96: astore_1
      97: goto          77
     100: return
    Exception table:
       from    to  target type
          86    93    96   Class java/lang/InterruptedException

  public java.util.Set<io.netty.util.Timeout> stop();
    Code:
       0: invokestatic  #67                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: aload_0
       4: getfield      #47                 // Field workerThread:Ljava/lang/Thread;
       7: if_acmpne     51
      10: new           #59                 // class java/lang/IllegalStateException
      13: dup
      14: new           #29                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc_w         #68                 // class io/netty/util/HashedWheelTimer
      24: invokevirtual #69                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      27: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #70                 // String .stop() cannot be called from
      32: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc_w         #71                 // class io/netty/util/TimerTask
      38: invokevirtual #69                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      41: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokespecial #61                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: getstatic     #4                  // Field WORKER_STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      54: aload_0
      55: iconst_1
      56: iconst_2
      57: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      60: ifne          92
      63: getstatic     #4                  // Field WORKER_STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      66: aload_0
      67: iconst_2
      68: invokevirtual #72                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
      71: aload_0
      72: getfield      #50                 // Field leak:Lio/netty/util/ResourceLeak;
      75: ifnull        88
      78: aload_0
      79: getfield      #50                 // Field leak:Lio/netty/util/ResourceLeak;
      82: invokeinterface #73,  1           // InterfaceMethod io/netty/util/ResourceLeak.close:()Z
      87: pop
      88: invokestatic  #74                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      91: areturn
      92: iconst_0
      93: istore_1
      94: aload_0
      95: getfield      #47                 // Field workerThread:Ljava/lang/Thread;
      98: invokevirtual #75                 // Method java/lang/Thread.isAlive:()Z
     101: ifeq          130
     104: aload_0
     105: getfield      #47                 // Field workerThread:Ljava/lang/Thread;
     108: invokevirtual #76                 // Method java/lang/Thread.interrupt:()V
     111: aload_0
     112: getfield      #47                 // Field workerThread:Ljava/lang/Thread;
     115: ldc2_w        #13                 // long 100l
     118: invokevirtual #77                 // Method java/lang/Thread.join:(J)V
     121: goto          94
     124: astore_2
     125: iconst_1
     126: istore_1
     127: goto          94
     130: iload_1
     131: ifeq          140
     134: invokestatic  #67                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     137: invokevirtual #76                 // Method java/lang/Thread.interrupt:()V
     140: aload_0
     141: getfield      #50                 // Field leak:Lio/netty/util/ResourceLeak;
     144: ifnull        157
     147: aload_0
     148: getfield      #50                 // Field leak:Lio/netty/util/ResourceLeak;
     151: invokeinterface #73,  1           // InterfaceMethod io/netty/util/ResourceLeak.close:()Z
     156: pop
     157: aload_0
     158: getfield      #19                 // Field worker:Lio/netty/util/HashedWheelTimer$Worker;
     161: invokevirtual #78                 // Method io/netty/util/HashedWheelTimer$Worker.unprocessedTimeouts:()Ljava/util/Set;
     164: areturn
    Exception table:
       from    to  target type
         111   121   124   Class java/lang/InterruptedException

  public io.netty.util.Timeout newTimeout(io.netty.util.TimerTask, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #24                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #79                 // String task
      10: invokespecial #26                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload         4
      16: ifnonnull     29
      19: new           #24                 // class java/lang/NullPointerException
      22: dup
      23: ldc           #27                 // String unit
      25: invokespecial #26                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: invokevirtual #80                 // Method start:()V
      33: invokestatic  #81                 // Method java/lang/System.nanoTime:()J
      36: aload         4
      38: lload_2
      39: invokevirtual #39                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      42: ladd
      43: aload_0
      44: getfield      #8                  // Field startTime:J
      47: lsub
      48: lstore        5
      50: new           #82                 // class io/netty/util/HashedWheelTimer$HashedWheelTimeout
      53: dup
      54: aload_0
      55: aload_1
      56: lload         5
      58: invokespecial #83                 // Method io/netty/util/HashedWheelTimer$HashedWheelTimeout."<init>":(Lio/netty/util/HashedWheelTimer;Lio/netty/util/TimerTask;J)V
      61: astore        7
      63: aload_0
      64: getfield      #3                  // Field timeouts:Ljava/util/Queue;
      67: aload         7
      69: invokeinterface #84,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      74: pop
      75: aload         7
      77: areturn

  static long access$202(io.netty.util.HashedWheelTimer, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #8                  // Field startTime:J
       6: lreturn

  static long access$200(io.netty.util.HashedWheelTimer);
    Code:
       0: aload_0
       1: getfield      #8                  // Field startTime:J
       4: lreturn

  static java.util.concurrent.CountDownLatch access$300(io.netty.util.HashedWheelTimer);
    Code:
       0: aload_0
       1: getfield      #7                  // Field startTimeInitialized:Ljava/util/concurrent/CountDownLatch;
       4: areturn

  static int access$400(io.netty.util.HashedWheelTimer);
    Code:
       0: aload_0
       1: getfield      #6                  // Field mask:I
       4: ireturn

  static io.netty.util.HashedWheelTimer$HashedWheelBucket[] access$500(io.netty.util.HashedWheelTimer);
    Code:
       0: aload_0
       1: getfield      #5                  // Field wheel:[Lio/netty/util/HashedWheelTimer$HashedWheelBucket;
       4: areturn

  static java.util.concurrent.atomic.AtomicIntegerFieldUpdater access$600();
    Code:
       0: getstatic     #4                  // Field WORKER_STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: areturn

  static java.util.Queue access$700(io.netty.util.HashedWheelTimer);
    Code:
       0: aload_0
       1: getfield      #3                  // Field timeouts:Ljava/util/Queue;
       4: areturn

  static long access$900(io.netty.util.HashedWheelTimer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field tickDuration:J
       4: lreturn

  static java.util.Queue access$1000(io.netty.util.HashedWheelTimer);
    Code:
       0: aload_0
       1: getfield      #1                  // Field cancelledTimeouts:Ljava/util/Queue;
       4: areturn

  static {};
    Code:
       0: ldc_w         #68                 // class io/netty/util/HashedWheelTimer
       3: invokestatic  #85                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       6: putstatic     #86                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       9: new           #87                 // class io/netty/util/ResourceLeakDetector
      12: dup
      13: ldc_w         #68                 // class io/netty/util/HashedWheelTimer
      16: iconst_1
      17: invokestatic  #88                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      20: invokevirtual #89                 // Method java/lang/Runtime.availableProcessors:()I
      23: iconst_4
      24: imul
      25: i2l
      26: invokespecial #90                 // Method io/netty/util/ResourceLeakDetector."<init>":(Ljava/lang/Class;IJ)V
      29: putstatic     #48                 // Field leakDetector:Lio/netty/util/ResourceLeakDetector;
      32: ldc_w         #68                 // class io/netty/util/HashedWheelTimer
      35: ldc           #91                 // String workerState
      37: invokestatic  #92                 // Method io/netty/util/internal/PlatformDependent.newAtomicIntegerFieldUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      40: astore_0
      41: aload_0
      42: ifnonnull     54
      45: ldc_w         #68                 // class io/netty/util/HashedWheelTimer
      48: ldc           #91                 // String workerState
      50: invokestatic  #93                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      53: astore_0
      54: aload_0
      55: putstatic     #4                  // Field WORKER_STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      58: return
}
