Compiled from "AbstractEpollStreamChannel.java"
class io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe extends io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe {
  private io.netty.channel.RecvByteBufAllocator$Handle allocHandle;

  static final boolean $assertionsDisabled;

  final io.netty.channel.epoll.AbstractEpollStreamChannel this$0;

  io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe(io.netty.channel.epoll.AbstractEpollStreamChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
       5: aload_0
       6: aload_1
       7: invokespecial #2                  // Method io/netty/channel/epoll/AbstractEpollChannel$AbstractEpollUnsafe."<init>":(Lio/netty/channel/epoll/AbstractEpollChannel;)V
      10: return

  private boolean handleReadException(io.netty.channel.ChannelPipeline, io.netty.buffer.ByteBuf, java.lang.Throwable, boolean);
    Code:
       0: aload_2
       1: ifnull        32
       4: aload_2
       5: invokevirtual #3                  // Method io/netty/buffer/ByteBuf.isReadable:()Z
       8: ifeq          27
      11: aload_0
      12: iconst_0
      13: putfield      #4                  // Field readPending:Z
      16: aload_1
      17: aload_2
      18: invokeinterface #5,  2            // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      23: pop
      24: goto          32
      27: aload_2
      28: invokevirtual #6                  // Method io/netty/buffer/ByteBuf.release:()Z
      31: pop
      32: aload_1
      33: invokeinterface #7,  1            // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
      38: pop
      39: aload_1
      40: aload_3
      41: invokeinterface #8,  2            // InterfaceMethod io/netty/channel/ChannelPipeline.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
      46: pop
      47: iload         4
      49: ifne          59
      52: aload_3
      53: instanceof    #9                  // class java/io/IOException
      56: ifeq          65
      59: aload_0
      60: invokevirtual #10                 // Method shutdownInput:()V
      63: iconst_1
      64: ireturn
      65: iconst_0
      66: ireturn

  public void connect(java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_3
       1: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifeq          17
       9: aload_0
      10: aload_3
      11: invokevirtual #12                 // Method ensureOpen:(Lio/netty/channel/ChannelPromise;)Z
      14: ifne          18
      17: return
      18: aload_0
      19: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      22: invokestatic  #13                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$100:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Lio/netty/channel/ChannelPromise;
      25: ifnull        38
      28: new           #14                 // class java/lang/IllegalStateException
      31: dup
      32: ldc           #15                 // String connection attempt already made
      34: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      42: invokevirtual #17                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.isActive:()Z
      45: istore        4
      47: aload_0
      48: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      51: aload_1
      52: aload_2
      53: invokevirtual #18                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.doConnect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;)Z
      56: ifeq          69
      59: aload_0
      60: aload_3
      61: iload         4
      63: invokespecial #19                 // Method fulfillConnectPromise:(Lio/netty/channel/ChannelPromise;Z)V
      66: goto          154
      69: aload_0
      70: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      73: aload_3
      74: invokestatic  #20                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$102:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
      77: pop
      78: aload_0
      79: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      82: aload_1
      83: invokestatic  #21                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$202:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Ljava/net/SocketAddress;)Ljava/net/SocketAddress;
      86: pop
      87: aload_0
      88: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      91: invokevirtual #22                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.config:()Lio/netty/channel/epoll/EpollChannelConfig;
      94: invokevirtual #23                 // Method io/netty/channel/epoll/EpollChannelConfig.getConnectTimeoutMillis:()I
      97: istore        5
      99: iload         5
     101: ifle          139
     104: aload_0
     105: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     108: aload_0
     109: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     112: invokevirtual #24                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.eventLoop:()Lio/netty/channel/EventLoop;
     115: new           #25                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe$1
     118: dup
     119: aload_0
     120: aload_1
     121: invokespecial #26                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe$1."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe;Ljava/net/SocketAddress;)V
     124: iload         5
     126: i2l
     127: getstatic     #27                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     130: invokeinterface #28,  5           // InterfaceMethod io/netty/channel/EventLoop.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
     135: invokestatic  #29                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$302:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Ljava/util/concurrent/ScheduledFuture;)Ljava/util/concurrent/ScheduledFuture;
     138: pop
     139: aload_3
     140: new           #30                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe$2
     143: dup
     144: aload_0
     145: invokespecial #31                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe$2."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe;)V
     148: invokeinterface #32,  2           // InterfaceMethod io/netty/channel/ChannelPromise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelPromise;
     153: pop
     154: goto          177
     157: astore        4
     159: aload_0
     160: invokevirtual #34                 // Method closeIfClosed:()V
     163: aload_3
     164: aload_0
     165: aload         4
     167: aload_1
     168: invokevirtual #35                 // Method annotateConnectException:(Ljava/lang/Throwable;Ljava/net/SocketAddress;)Ljava/lang/Throwable;
     171: invokeinterface #36,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
     176: pop
     177: return
    Exception table:
       from    to  target type
          18   154   157   Class java/lang/Throwable

  private void fulfillConnectPromise(io.netty.channel.ChannelPromise, boolean);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
       9: iconst_1
      10: putfield      #37                 // Field io/netty/channel/epoll/AbstractEpollStreamChannel.active:Z
      13: aload_1
      14: invokeinterface #38,  1           // InterfaceMethod io/netty/channel/ChannelPromise.trySuccess:()Z
      19: istore_3
      20: iload_2
      21: ifne          47
      24: aload_0
      25: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      28: invokevirtual #17                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.isActive:()Z
      31: ifeq          47
      34: aload_0
      35: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      38: invokevirtual #39                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      41: invokeinterface #40,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelActive:()Lio/netty/channel/ChannelPipeline;
      46: pop
      47: iload_3
      48: ifne          59
      51: aload_0
      52: aload_0
      53: invokevirtual #41                 // Method voidPromise:()Lio/netty/channel/ChannelPromise;
      56: invokevirtual #42                 // Method close:(Lio/netty/channel/ChannelPromise;)V
      59: return

  private void fulfillConnectPromise(io.netty.channel.ChannelPromise, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: aload_2
       7: invokeinterface #36,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      12: pop
      13: aload_0
      14: invokevirtual #34                 // Method closeIfClosed:()V
      17: return

  private void finishConnect();
    Code:
       0: getstatic     #43                 // Field $assertionsDisabled:Z
       3: ifne          29
       6: aload_0
       7: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      10: invokevirtual #24                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.eventLoop:()Lio/netty/channel/EventLoop;
      13: invokeinterface #44,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      18: ifne          29
      21: new           #45                 // class java/lang/AssertionError
      24: dup
      25: invokespecial #46                 // Method java/lang/AssertionError."<init>":()V
      28: athrow
      29: iconst_0
      30: istore_1
      31: aload_0
      32: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      35: invokevirtual #17                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.isActive:()Z
      38: istore_2
      39: aload_0
      40: invokespecial #47                 // Method doFinishConnect:()Z
      43: ifne          86
      46: iconst_1
      47: istore_1
      48: iload_1
      49: ifne          85
      52: aload_0
      53: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      56: invokestatic  #48                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$300:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
      59: ifnull        76
      62: aload_0
      63: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      66: invokestatic  #48                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$300:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
      69: iconst_0
      70: invokeinterface #49,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      75: pop
      76: aload_0
      77: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      80: aconst_null
      81: invokestatic  #20                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$102:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
      84: pop
      85: return
      86: aload_0
      87: aload_0
      88: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      91: invokestatic  #13                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$100:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Lio/netty/channel/ChannelPromise;
      94: iload_2
      95: invokespecial #19                 // Method fulfillConnectPromise:(Lio/netty/channel/ChannelPromise;Z)V
      98: iload_1
      99: ifne          242
     102: aload_0
     103: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     106: invokestatic  #48                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$300:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
     109: ifnull        126
     112: aload_0
     113: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     116: invokestatic  #48                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$300:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
     119: iconst_0
     120: invokeinterface #49,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
     125: pop
     126: aload_0
     127: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     130: aconst_null
     131: invokestatic  #20                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$102:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
     134: pop
     135: goto          242
     138: astore_2
     139: aload_0
     140: aload_0
     141: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     144: invokestatic  #13                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$100:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Lio/netty/channel/ChannelPromise;
     147: aload_0
     148: aload_2
     149: aload_0
     150: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     153: invokestatic  #50                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$200:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/net/SocketAddress;
     156: invokevirtual #35                 // Method annotateConnectException:(Ljava/lang/Throwable;Ljava/net/SocketAddress;)Ljava/lang/Throwable;
     159: invokespecial #51                 // Method fulfillConnectPromise:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
     162: iload_1
     163: ifne          242
     166: aload_0
     167: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     170: invokestatic  #48                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$300:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
     173: ifnull        190
     176: aload_0
     177: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     180: invokestatic  #48                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$300:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
     183: iconst_0
     184: invokeinterface #49,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
     189: pop
     190: aload_0
     191: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     194: aconst_null
     195: invokestatic  #20                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$102:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
     198: pop
     199: goto          242
     202: astore_3
     203: iload_1
     204: ifne          240
     207: aload_0
     208: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     211: invokestatic  #48                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$300:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
     214: ifnull        231
     217: aload_0
     218: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     221: invokestatic  #48                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$300:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/util/concurrent/ScheduledFuture;
     224: iconst_0
     225: invokeinterface #49,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
     230: pop
     231: aload_0
     232: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     235: aconst_null
     236: invokestatic  #20                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$102:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
     239: pop
     240: aload_3
     241: athrow
     242: return
    Exception table:
       from    to  target type
          31    48   138   Class java/lang/Throwable
          86    98   138   Class java/lang/Throwable
          31    48   202   any
          86    98   202   any
         138   162   202   any
         202   203   202   any

  void epollOutReady();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
       4: invokestatic  #13                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$100:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Lio/netty/channel/ChannelPromise;
       7: ifnull        17
      10: aload_0
      11: invokespecial #52                 // Method finishConnect:()V
      14: goto          21
      17: aload_0
      18: invokespecial #53                 // Method io/netty/channel/epoll/AbstractEpollChannel$AbstractEpollUnsafe.epollOutReady:()V
      21: return

  private boolean doFinishConnect() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
       4: invokevirtual #54                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.fd:()Lio/netty/channel/unix/FileDescriptor;
       7: invokevirtual #55                 // Method io/netty/channel/unix/FileDescriptor.intValue:()I
      10: invokestatic  #56                 // Method io/netty/channel/epoll/Native.finishConnect:(I)Z
      13: ifeq          28
      16: aload_0
      17: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      20: getstatic     #57                 // Field io/netty/channel/epoll/Native.EPOLLOUT:I
      23: invokevirtual #58                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.clearFlag:(I)V
      26: iconst_1
      27: ireturn
      28: aload_0
      29: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      32: getstatic     #57                 // Field io/netty/channel/epoll/Native.EPOLLOUT:I
      35: invokevirtual #59                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.setFlag:(I)V
      38: iconst_0
      39: ireturn

  void epollInReady();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
       4: invokevirtual #22                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.config:()Lio/netty/channel/epoll/EpollChannelConfig;
       7: astore_1
       8: aload_0
       9: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      12: getstatic     #60                 // Field io/netty/channel/epoll/Native.EPOLLET:I
      15: invokevirtual #61                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.isFlagSet:(I)Z
      18: istore_2
      19: aload_0
      20: getfield      #4                  // Field readPending:Z
      23: ifne          44
      26: iload_2
      27: ifne          44
      30: aload_1
      31: invokeinterface #62,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
      36: ifne          44
      39: aload_0
      40: invokevirtual #63                 // Method clearEpollIn0:()V
      43: return
      44: aload_0
      45: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
      48: invokevirtual #39                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      51: astore_3
      52: aload_1
      53: invokeinterface #64,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getAllocator:()Lio/netty/buffer/ByteBufAllocator;
      58: astore        4
      60: aload_0
      61: getfield      #65                 // Field allocHandle:Lio/netty/channel/RecvByteBufAllocator$Handle;
      64: astore        5
      66: aload         5
      68: ifnonnull     89
      71: aload_0
      72: aload_1
      73: invokeinterface #66,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getRecvByteBufAllocator:()Lio/netty/channel/RecvByteBufAllocator;
      78: invokeinterface #67,  1           // InterfaceMethod io/netty/channel/RecvByteBufAllocator.newHandle:()Lio/netty/channel/RecvByteBufAllocator$Handle;
      83: dup
      84: astore        5
      86: putfield      #65                 // Field allocHandle:Lio/netty/channel/RecvByteBufAllocator$Handle;
      89: aconst_null
      90: astore        6
      92: iconst_0
      93: istore        7
      95: iload_2
      96: ifeq          104
      99: ldc           #68                 // int 2147483647
     101: goto          110
     104: aload_1
     105: invokeinterface #69,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getMaxMessagesPerRead:()I
     110: istore        8
     112: iconst_0
     113: istore        9
     115: iconst_0
     116: istore        10
     118: aload_0
     119: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     122: invokestatic  #70                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$400:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/util/Queue;
     125: invokeinterface #71,  1           // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
     130: checkcast     #72                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInTask
     133: astore        11
     135: aload         11
     137: ifnull        176
     140: aload         11
     142: aload         5
     144: invokevirtual #73                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInTask.spliceIn:(Lio/netty/channel/RecvByteBufAllocator$Handle;)Z
     147: ifeq          317
     150: aload_0
     151: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     154: invokevirtual #17                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.isActive:()Z
     157: ifeq          307
     160: aload_0
     161: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     164: invokestatic  #70                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.access$400:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)Ljava/util/Queue;
     167: invokeinterface #74,  1           // InterfaceMethod java/util/Queue.remove:()Ljava/lang/Object;
     172: pop
     173: goto          307
     176: aload         5
     178: aload         4
     180: invokeinterface #75,  2           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.allocate:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/buffer/ByteBuf;
     185: astore        6
     187: aload         6
     189: invokevirtual #76                 // Method io/netty/buffer/ByteBuf.writableBytes:()I
     192: istore        12
     194: aload_0
     195: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     198: aload         6
     200: invokevirtual #77                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.doReadBytes:(Lio/netty/buffer/ByteBuf;)I
     203: istore        13
     205: iload         13
     207: ifgt          231
     210: aload         6
     212: invokevirtual #6                  // Method io/netty/buffer/ByteBuf.release:()Z
     215: pop
     216: iload         13
     218: ifge          225
     221: iconst_1
     222: goto          226
     225: iconst_0
     226: istore        7
     228: goto          317
     231: aload_0
     232: iconst_0
     233: putfield      #4                  // Field readPending:Z
     236: aload_3
     237: aload         6
     239: invokeinterface #5,  2            // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
     244: pop
     245: aconst_null
     246: astore        6
     248: iload         10
     250: ldc           #68                 // int 2147483647
     252: iload         13
     254: isub
     255: if_icmplt     274
     258: aload         5
     260: iload         10
     262: invokeinterface #78,  2           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.record:(I)V
     267: iload         13
     269: istore        10
     271: goto          281
     274: iload         10
     276: iload         13
     278: iadd
     279: istore        10
     281: iload         13
     283: iload         12
     285: if_icmpge     291
     288: goto          317
     291: iload_2
     292: ifne          307
     295: aload_1
     296: invokeinterface #62,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     301: ifne          307
     304: goto          317
     307: iinc          9, 1
     310: iload         9
     312: iload         8
     314: if_icmplt     118
     317: aload_3
     318: invokeinterface #7,  1            // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
     323: pop
     324: aload         5
     326: iload         10
     328: invokeinterface #78,  2           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.record:(I)V
     333: iload         7
     335: ifeq          345
     338: aload_0
     339: invokevirtual #10                 // Method shutdownInput:()V
     342: iconst_0
     343: istore        7
     345: aload_0
     346: getfield      #4                  // Field readPending:Z
     349: ifne          456
     352: aload_1
     353: invokeinterface #62,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     358: ifne          456
     361: aload_0
     362: invokevirtual #63                 // Method clearEpollIn0:()V
     365: goto          456
     368: astore        8
     370: aload_0
     371: aload_3
     372: aload         6
     374: aload         8
     376: iload         7
     378: invokespecial #79                 // Method handleReadException:(Lio/netty/channel/ChannelPipeline;Lio/netty/buffer/ByteBuf;Ljava/lang/Throwable;Z)Z
     381: istore        9
     383: iload         9
     385: ifne          408
     388: aload_0
     389: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollStreamChannel;
     392: invokevirtual #24                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel.eventLoop:()Lio/netty/channel/EventLoop;
     395: new           #80                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe$3
     398: dup
     399: aload_0
     400: invokespecial #81                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe$3."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe;)V
     403: invokeinterface #82,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
     408: aload_0
     409: getfield      #4                  // Field readPending:Z
     412: ifne          456
     415: aload_1
     416: invokeinterface #62,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     421: ifne          456
     424: aload_0
     425: invokevirtual #63                 // Method clearEpollIn0:()V
     428: goto          456
     431: astore        14
     433: aload_0
     434: getfield      #4                  // Field readPending:Z
     437: ifne          453
     440: aload_1
     441: invokeinterface #62,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     446: ifne          453
     449: aload_0
     450: invokevirtual #63                 // Method clearEpollIn0:()V
     453: aload         14
     455: athrow
     456: return
    Exception table:
       from    to  target type
          95   345   368   Class java/lang/Throwable
          95   345   431   any
         368   408   431   any
         431   433   431   any

  static {};
    Code:
       0: ldc_w         #83                 // class io/netty/channel/epoll/AbstractEpollStreamChannel
       3: invokevirtual #84                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #43                 // Field $assertionsDisabled:Z
      17: return
}
