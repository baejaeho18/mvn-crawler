Compiled from "TrafficCounter.java"
final class io.netty.handler.traffic.TrafficCounter$TrafficMonitoringTask implements java.lang.Runnable {
  final io.netty.handler.traffic.TrafficCounter this$0;

  private io.netty.handler.traffic.TrafficCounter$TrafficMonitoringTask(io.netty.handler.traffic.TrafficCounter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/netty/handler/traffic/TrafficCounter;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/netty/handler/traffic/TrafficCounter;
       4: getfield      #4                  // Field io/netty/handler/traffic/TrafficCounter.monitorActive:Z
       7: ifne          11
      10: return
      11: aload_0
      12: getfield      #2                  // Field this$0:Lio/netty/handler/traffic/TrafficCounter;
      15: invokestatic  #5                  // Method io/netty/handler/traffic/TrafficCounter.milliSecondFromNano:()J
      18: invokevirtual #6                  // Method io/netty/handler/traffic/TrafficCounter.resetAccounting:(J)V
      21: aload_0
      22: getfield      #2                  // Field this$0:Lio/netty/handler/traffic/TrafficCounter;
      25: getfield      #7                  // Field io/netty/handler/traffic/TrafficCounter.trafficShapingHandler:Lio/netty/handler/traffic/AbstractTrafficShapingHandler;
      28: ifnull        45
      31: aload_0
      32: getfield      #2                  // Field this$0:Lio/netty/handler/traffic/TrafficCounter;
      35: getfield      #7                  // Field io/netty/handler/traffic/TrafficCounter.trafficShapingHandler:Lio/netty/handler/traffic/AbstractTrafficShapingHandler;
      38: aload_0
      39: getfield      #2                  // Field this$0:Lio/netty/handler/traffic/TrafficCounter;
      42: invokevirtual #8                  // Method io/netty/handler/traffic/AbstractTrafficShapingHandler.doAccounting:(Lio/netty/handler/traffic/TrafficCounter;)V
      45: aload_0
      46: getfield      #2                  // Field this$0:Lio/netty/handler/traffic/TrafficCounter;
      49: aload_0
      50: getfield      #2                  // Field this$0:Lio/netty/handler/traffic/TrafficCounter;
      53: getfield      #9                  // Field io/netty/handler/traffic/TrafficCounter.executor:Ljava/util/concurrent/ScheduledExecutorService;
      56: aload_0
      57: aload_0
      58: getfield      #2                  // Field this$0:Lio/netty/handler/traffic/TrafficCounter;
      61: getfield      #10                 // Field io/netty/handler/traffic/TrafficCounter.checkInterval:Ljava/util/concurrent/atomic/AtomicLong;
      64: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      67: getstatic     #12                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      70: invokeinterface #13,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      75: putfield      #14                 // Field io/netty/handler/traffic/TrafficCounter.scheduledFuture:Ljava/util/concurrent/ScheduledFuture;
      78: return

  io.netty.handler.traffic.TrafficCounter$TrafficMonitoringTask(io.netty.handler.traffic.TrafficCounter, io.netty.handler.traffic.TrafficCounter$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lio/netty/handler/traffic/TrafficCounter;)V
       5: return
}
