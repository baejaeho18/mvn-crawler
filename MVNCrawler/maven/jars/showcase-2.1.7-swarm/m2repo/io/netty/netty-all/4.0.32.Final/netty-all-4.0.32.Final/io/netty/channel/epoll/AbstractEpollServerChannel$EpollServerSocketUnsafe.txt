Compiled from "AbstractEpollServerChannel.java"
final class io.netty.channel.epoll.AbstractEpollServerChannel$EpollServerSocketUnsafe extends io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe {
  private final byte[] acceptedAddress;

  static final boolean $assertionsDisabled;

  final io.netty.channel.epoll.AbstractEpollServerChannel this$0;

  io.netty.channel.epoll.AbstractEpollServerChannel$EpollServerSocketUnsafe(io.netty.channel.epoll.AbstractEpollServerChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollServerChannel;
       5: aload_0
       6: aload_1
       7: invokespecial #2                  // Method io/netty/channel/epoll/AbstractEpollChannel$AbstractEpollUnsafe."<init>":(Lio/netty/channel/epoll/AbstractEpollChannel;)V
      10: aload_0
      11: bipush        26
      13: newarray       byte
      15: putfield      #3                  // Field acceptedAddress:[B
      18: return

  public void connect(java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_3
       1: new           #4                  // class java/lang/UnsupportedOperationException
       4: dup
       5: invokespecial #5                  // Method java/lang/UnsupportedOperationException."<init>":()V
       8: invokeinterface #6,  2            // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      13: pop
      14: return

  void epollInReady();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          29
       6: aload_0
       7: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollServerChannel;
      10: invokevirtual #8                  // Method io/netty/channel/epoll/AbstractEpollServerChannel.eventLoop:()Lio/netty/channel/EventLoop;
      13: invokeinterface #9,  1            // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      18: ifne          29
      21: new           #10                 // class java/lang/AssertionError
      24: dup
      25: invokespecial #11                 // Method java/lang/AssertionError."<init>":()V
      28: athrow
      29: aload_0
      30: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollServerChannel;
      33: getstatic     #12                 // Field io/netty/channel/epoll/Native.EPOLLET:I
      36: invokevirtual #13                 // Method io/netty/channel/epoll/AbstractEpollServerChannel.isFlagSet:(I)Z
      39: istore_1
      40: aload_0
      41: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollServerChannel;
      44: invokevirtual #14                 // Method io/netty/channel/epoll/AbstractEpollServerChannel.config:()Lio/netty/channel/epoll/EpollChannelConfig;
      47: astore_2
      48: aload_0
      49: getfield      #15                 // Field readPending:Z
      52: ifne          73
      55: iload_1
      56: ifne          73
      59: aload_2
      60: invokeinterface #16,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
      65: ifne          73
      68: aload_0
      69: invokevirtual #17                 // Method clearEpollIn0:()V
      72: return
      73: aload_0
      74: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollServerChannel;
      77: invokevirtual #18                 // Method io/netty/channel/epoll/AbstractEpollServerChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      80: astore_3
      81: aconst_null
      82: astore        4
      84: iload_1
      85: ifeq          93
      88: ldc           #19                 // int 2147483647
      90: goto          99
      93: aload_2
      94: invokeinterface #20,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getMaxMessagesPerRead:()I
      99: istore        5
     101: iconst_0
     102: istore        6
     104: aload_0
     105: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollServerChannel;
     108: invokevirtual #21                 // Method io/netty/channel/epoll/AbstractEpollServerChannel.fd:()Lio/netty/channel/unix/FileDescriptor;
     111: invokevirtual #22                 // Method io/netty/channel/unix/FileDescriptor.intValue:()I
     114: aload_0
     115: getfield      #3                  // Field acceptedAddress:[B
     118: invokestatic  #23                 // Method io/netty/channel/epoll/Native.accept:(I[B)I
     121: istore        7
     123: iload         7
     125: iconst_m1
     126: if_icmpne     132
     129: goto          249
     132: aload_0
     133: iconst_0
     134: putfield      #15                 // Field readPending:Z
     137: aload_0
     138: getfield      #3                  // Field acceptedAddress:[B
     141: iconst_0
     142: baload
     143: istore        8
     145: aload_3
     146: aload_0
     147: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/AbstractEpollServerChannel;
     150: iload         7
     152: aload_0
     153: getfield      #3                  // Field acceptedAddress:[B
     156: iconst_1
     157: iload         8
     159: invokevirtual #24                 // Method io/netty/channel/epoll/AbstractEpollServerChannel.newChildChannel:(I[BII)Lio/netty/channel/Channel;
     162: invokeinterface #25,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
     167: pop
     168: iload_1
     169: ifne          239
     172: aload_2
     173: invokeinterface #16,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     178: ifne          239
     181: goto          249
     184: astore        8
     186: aload_3
     187: invokeinterface #27,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
     192: pop
     193: aload_3
     194: aload         8
     196: invokeinterface #28,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
     201: pop
     202: iload_1
     203: ifne          239
     206: aload_2
     207: invokeinterface #16,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     212: ifne          239
     215: goto          249
     218: astore        9
     220: iload_1
     221: ifne          236
     224: aload_2
     225: invokeinterface #16,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     230: ifne          236
     233: goto          249
     236: aload         9
     238: athrow
     239: iinc          6, 1
     242: iload         6
     244: iload         5
     246: if_icmplt     104
     249: goto          258
     252: astore        5
     254: aload         5
     256: astore        4
     258: aload_3
     259: invokeinterface #27,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
     264: pop
     265: aload         4
     267: ifnull        279
     270: aload_3
     271: aload         4
     273: invokeinterface #28,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
     278: pop
     279: aload_0
     280: getfield      #15                 // Field readPending:Z
     283: ifne          327
     286: aload_2
     287: invokeinterface #16,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     292: ifne          327
     295: aload_0
     296: invokevirtual #17                 // Method clearEpollIn0:()V
     299: goto          327
     302: astore        10
     304: aload_0
     305: getfield      #15                 // Field readPending:Z
     308: ifne          324
     311: aload_2
     312: invokeinterface #16,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     317: ifne          324
     320: aload_0
     321: invokevirtual #17                 // Method clearEpollIn0:()V
     324: aload         10
     326: athrow
     327: return
    Exception table:
       from    to  target type
         137   168   184   Class java/lang/Throwable
         137   168   218   any
         184   202   218   any
         218   220   218   any
          84   249   252   Class java/lang/Throwable
          84   279   302   any
         302   304   302   any

  static {};
    Code:
       0: ldc_w         #29                 // class io/netty/channel/epoll/AbstractEpollServerChannel
       3: invokevirtual #30                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #7                  // Field $assertionsDisabled:Z
      17: return
}
