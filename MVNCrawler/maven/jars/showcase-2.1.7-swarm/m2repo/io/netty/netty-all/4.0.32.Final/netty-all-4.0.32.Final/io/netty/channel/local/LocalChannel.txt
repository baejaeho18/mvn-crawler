Compiled from "LocalChannel.java"
public class io.netty.channel.local.LocalChannel extends io.netty.channel.AbstractChannel {
  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<io.netty.channel.local.LocalChannel, io.netty.util.concurrent.Future> FINISH_READ_FUTURE_UPDATER;

  private static final io.netty.channel.ChannelMetadata METADATA;

  private static final int MAX_READER_STACK_DEPTH;

  private static final java.nio.channels.ClosedChannelException CLOSED_CHANNEL_EXCEPTION;

  private final io.netty.channel.ChannelConfig config;

  private final java.util.Queue<java.lang.Object> inboundBuffer;

  private final java.lang.Runnable readTask;

  private final java.lang.Runnable shutdownHook;

  private volatile int state;

  private volatile io.netty.channel.local.LocalChannel peer;

  private volatile io.netty.channel.local.LocalAddress localAddress;

  private volatile io.netty.channel.local.LocalAddress remoteAddress;

  private volatile io.netty.channel.ChannelPromise connectPromise;

  private volatile boolean readInProgress;

  private volatile boolean registerInProgress;

  private volatile boolean writeInProgress;

  private volatile io.netty.util.concurrent.Future<?> finishReadFuture;

  public io.netty.channel.local.LocalChannel();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #8                  // Method io/netty/channel/AbstractChannel."<init>":(Lio/netty/channel/Channel;)V
       5: aload_0
       6: new           #9                  // class io/netty/channel/DefaultChannelConfig
       9: dup
      10: aload_0
      11: invokespecial #10                 // Method io/netty/channel/DefaultChannelConfig."<init>":(Lio/netty/channel/Channel;)V
      14: putfield      #11                 // Field config:Lio/netty/channel/ChannelConfig;
      17: aload_0
      18: invokestatic  #12                 // Method io/netty/util/internal/PlatformDependent.newMpscQueue:()Ljava/util/Queue;
      21: putfield      #7                  // Field inboundBuffer:Ljava/util/Queue;
      24: aload_0
      25: new           #13                 // class io/netty/channel/local/LocalChannel$1
      28: dup
      29: aload_0
      30: invokespecial #14                 // Method io/netty/channel/local/LocalChannel$1."<init>":(Lio/netty/channel/local/LocalChannel;)V
      33: putfield      #15                 // Field readTask:Ljava/lang/Runnable;
      36: aload_0
      37: new           #16                 // class io/netty/channel/local/LocalChannel$2
      40: dup
      41: aload_0
      42: invokespecial #17                 // Method io/netty/channel/local/LocalChannel$2."<init>":(Lio/netty/channel/local/LocalChannel;)V
      45: putfield      #18                 // Field shutdownHook:Ljava/lang/Runnable;
      48: return

  io.netty.channel.local.LocalChannel(io.netty.channel.local.LocalServerChannel, io.netty.channel.local.LocalChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method io/netty/channel/AbstractChannel."<init>":(Lio/netty/channel/Channel;)V
       5: aload_0
       6: new           #9                  // class io/netty/channel/DefaultChannelConfig
       9: dup
      10: aload_0
      11: invokespecial #10                 // Method io/netty/channel/DefaultChannelConfig."<init>":(Lio/netty/channel/Channel;)V
      14: putfield      #11                 // Field config:Lio/netty/channel/ChannelConfig;
      17: aload_0
      18: invokestatic  #12                 // Method io/netty/util/internal/PlatformDependent.newMpscQueue:()Ljava/util/Queue;
      21: putfield      #7                  // Field inboundBuffer:Ljava/util/Queue;
      24: aload_0
      25: new           #13                 // class io/netty/channel/local/LocalChannel$1
      28: dup
      29: aload_0
      30: invokespecial #14                 // Method io/netty/channel/local/LocalChannel$1."<init>":(Lio/netty/channel/local/LocalChannel;)V
      33: putfield      #15                 // Field readTask:Ljava/lang/Runnable;
      36: aload_0
      37: new           #16                 // class io/netty/channel/local/LocalChannel$2
      40: dup
      41: aload_0
      42: invokespecial #17                 // Method io/netty/channel/local/LocalChannel$2."<init>":(Lio/netty/channel/local/LocalChannel;)V
      45: putfield      #18                 // Field shutdownHook:Ljava/lang/Runnable;
      48: aload_0
      49: aload_2
      50: putfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
      53: aload_0
      54: aload_1
      55: invokevirtual #19                 // Method io/netty/channel/local/LocalServerChannel.localAddress:()Lio/netty/channel/local/LocalAddress;
      58: putfield      #20                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
      61: aload_0
      62: aload_2
      63: invokevirtual #21                 // Method localAddress:()Lio/netty/channel/local/LocalAddress;
      66: putfield      #22                 // Field remoteAddress:Lio/netty/channel/local/LocalAddress;
      69: return

  public io.netty.channel.ChannelMetadata metadata();
    Code:
       0: getstatic     #23                 // Field METADATA:Lio/netty/channel/ChannelMetadata;
       3: areturn

  public io.netty.channel.ChannelConfig config();
    Code:
       0: aload_0
       1: getfield      #11                 // Field config:Lio/netty/channel/ChannelConfig;
       4: areturn

  public io.netty.channel.local.LocalServerChannel parent();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method io/netty/channel/AbstractChannel.parent:()Lio/netty/channel/Channel;
       4: checkcast     #25                 // class io/netty/channel/local/LocalServerChannel
       7: areturn

  public io.netty.channel.local.LocalAddress localAddress();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method io/netty/channel/AbstractChannel.localAddress:()Ljava/net/SocketAddress;
       4: checkcast     #27                 // class io/netty/channel/local/LocalAddress
       7: areturn

  public io.netty.channel.local.LocalAddress remoteAddress();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method io/netty/channel/AbstractChannel.remoteAddress:()Ljava/net/SocketAddress;
       4: checkcast     #27                 // class io/netty/channel/local/LocalAddress
       7: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: iconst_3
       5: if_icmpge     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isActive();
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: iconst_2
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  protected io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe();
    Code:
       0: new           #29                 // class io/netty/channel/local/LocalChannel$LocalUnsafe
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #30                 // Method io/netty/channel/local/LocalChannel$LocalUnsafe."<init>":(Lio/netty/channel/local/LocalChannel;Lio/netty/channel/local/LocalChannel$1;)V
       9: areturn

  protected boolean isCompatible(io.netty.channel.EventLoop);
    Code:
       0: aload_1
       1: instanceof    #31                 // class io/netty/channel/SingleThreadEventLoop
       4: ireturn

  protected java.net.SocketAddress localAddress0();
    Code:
       0: aload_0
       1: getfield      #20                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
       4: areturn

  protected java.net.SocketAddress remoteAddress0();
    Code:
       0: aload_0
       1: getfield      #22                 // Field remoteAddress:Lio/netty/channel/local/LocalAddress;
       4: areturn

  protected void doRegister() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
       4: ifnull        63
       7: aload_0
       8: invokevirtual #32                 // Method parent:()Lio/netty/channel/local/LocalServerChannel;
      11: ifnull        63
      14: aload_0
      15: getfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
      18: astore_1
      19: aload_0
      20: iconst_1
      21: putfield      #6                  // Field registerInProgress:Z
      24: aload_0
      25: iconst_2
      26: putfield      #2                  // Field state:I
      29: aload_1
      30: aload_0
      31: invokevirtual #32                 // Method parent:()Lio/netty/channel/local/LocalServerChannel;
      34: invokevirtual #19                 // Method io/netty/channel/local/LocalServerChannel.localAddress:()Lio/netty/channel/local/LocalAddress;
      37: putfield      #22                 // Field remoteAddress:Lio/netty/channel/local/LocalAddress;
      40: aload_1
      41: iconst_2
      42: putfield      #2                  // Field state:I
      45: aload_1
      46: invokevirtual #33                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      49: new           #34                 // class io/netty/channel/local/LocalChannel$3
      52: dup
      53: aload_0
      54: aload_1
      55: invokespecial #35                 // Method io/netty/channel/local/LocalChannel$3."<init>":(Lio/netty/channel/local/LocalChannel;Lio/netty/channel/local/LocalChannel;)V
      58: invokeinterface #36,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      63: aload_0
      64: invokevirtual #33                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      67: checkcast     #37                 // class io/netty/util/concurrent/SingleThreadEventExecutor
      70: aload_0
      71: getfield      #18                 // Field shutdownHook:Ljava/lang/Runnable;
      74: invokevirtual #38                 // Method io/netty/util/concurrent/SingleThreadEventExecutor.addShutdownHook:(Ljava/lang/Runnable;)V
      77: return

  protected void doBind(java.net.SocketAddress) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #20                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
       6: aload_1
       7: invokestatic  #39                 // Method io/netty/channel/local/LocalChannelRegistry.register:(Lio/netty/channel/Channel;Lio/netty/channel/local/LocalAddress;Ljava/net/SocketAddress;)Lio/netty/channel/local/LocalAddress;
      10: putfield      #20                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
      13: aload_0
      14: iconst_1
      15: putfield      #2                  // Field state:I
      18: return

  protected void doDisconnect() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method doClose:()V
       4: return

  protected void doClose() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
       4: astore_1
       5: aload_0
       6: getfield      #2                  // Field state:I
       9: iconst_2
      10: if_icmpgt     84
      13: aload_0
      14: getfield      #20                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
      17: ifnull        39
      20: aload_0
      21: invokevirtual #32                 // Method parent:()Lio/netty/channel/local/LocalServerChannel;
      24: ifnonnull     34
      27: aload_0
      28: getfield      #20                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
      31: invokestatic  #41                 // Method io/netty/channel/local/LocalChannelRegistry.unregister:(Lio/netty/channel/local/LocalAddress;)V
      34: aload_0
      35: aconst_null
      36: putfield      #20                 // Field localAddress:Lio/netty/channel/local/LocalAddress;
      39: aload_0
      40: iconst_3
      41: putfield      #2                  // Field state:I
      44: aload_0
      45: getfield      #5                  // Field connectPromise:Lio/netty/channel/ChannelPromise;
      48: astore_2
      49: aload_2
      50: ifnull        68
      53: aload_2
      54: getstatic     #42                 // Field CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      57: invokeinterface #43,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      62: pop
      63: aload_0
      64: aconst_null
      65: putfield      #5                  // Field connectPromise:Lio/netty/channel/ChannelPromise;
      68: aload_0
      69: getfield      #44                 // Field writeInProgress:Z
      72: ifeq          84
      75: aload_1
      76: ifnull        84
      79: aload_0
      80: aload_1
      81: invokespecial #45                 // Method finishPeerRead:(Lio/netty/channel/local/LocalChannel;)V
      84: aload_1
      85: ifnull        165
      88: aload_1
      89: invokevirtual #46                 // Method isActive:()Z
      92: ifeq          165
      95: aload_1
      96: invokevirtual #33                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      99: invokeinterface #47,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
     104: ifeq          126
     107: aload_0
     108: getfield      #6                  // Field registerInProgress:Z
     111: ifne          126
     114: aload_0
     115: aload_1
     116: aload_1
     117: getfield      #44                 // Field writeInProgress:Z
     120: invokespecial #4                  // Method doPeerClose:(Lio/netty/channel/local/LocalChannel;Z)V
     123: goto          160
     126: aload_1
     127: getfield      #44                 // Field writeInProgress:Z
     130: istore_2
     131: aload_1
     132: invokevirtual #33                 // Method eventLoop:()Lio/netty/channel/EventLoop;
     135: new           #48                 // class io/netty/channel/local/LocalChannel$4
     138: dup
     139: aload_0
     140: aload_1
     141: iload_2
     142: invokespecial #49                 // Method io/netty/channel/local/LocalChannel$4."<init>":(Lio/netty/channel/local/LocalChannel;Lio/netty/channel/local/LocalChannel;Z)V
     145: invokeinterface #36,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
     150: goto          160
     153: astore_3
     154: aload_0
     155: invokespecial #51                 // Method releaseInboundBuffers:()V
     158: aload_3
     159: athrow
     160: aload_0
     161: aconst_null
     162: putfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
     165: return
    Exception table:
       from    to  target type
         131   150   153   Class java/lang/RuntimeException

  private void doPeerClose(io.netty.channel.local.LocalChannel, boolean);
    Code:
       0: iload_2
       1: ifeq          9
       4: aload_0
       5: aload_0
       6: invokespecial #3                  // Method finishPeerRead0:(Lio/netty/channel/local/LocalChannel;)V
       9: aload_1
      10: invokevirtual #52                 // Method unsafe:()Lio/netty/channel/Channel$Unsafe;
      13: aload_1
      14: invokevirtual #52                 // Method unsafe:()Lio/netty/channel/Channel$Unsafe;
      17: invokeinterface #53,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.voidPromise:()Lio/netty/channel/ChannelPromise;
      22: invokeinterface #54,  2           // InterfaceMethod io/netty/channel/Channel$Unsafe.close:(Lio/netty/channel/ChannelPromise;)V
      27: return

  protected void doDeregister() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method eventLoop:()Lio/netty/channel/EventLoop;
       4: checkcast     #37                 // class io/netty/util/concurrent/SingleThreadEventExecutor
       7: aload_0
       8: getfield      #18                 // Field shutdownHook:Ljava/lang/Runnable;
      11: invokevirtual #55                 // Method io/netty/util/concurrent/SingleThreadEventExecutor.removeShutdownHook:(Ljava/lang/Runnable;)V
      14: return

  protected void doBeginRead() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #56                 // Field readInProgress:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokevirtual #57                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
      12: astore_1
      13: aload_0
      14: getfield      #7                  // Field inboundBuffer:Ljava/util/Queue;
      17: astore_2
      18: aload_2
      19: invokeinterface #58,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      24: ifeq          33
      27: aload_0
      28: iconst_1
      29: putfield      #56                 // Field readInProgress:Z
      32: return
      33: invokestatic  #59                 // Method io/netty/util/internal/InternalThreadLocalMap.get:()Lio/netty/util/internal/InternalThreadLocalMap;
      36: astore_3
      37: aload_3
      38: invokevirtual #60                 // Method io/netty/util/internal/InternalThreadLocalMap.localChannelReaderStackDepth:()I
      41: invokestatic  #61                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      44: astore        4
      46: aload         4
      48: invokevirtual #62                 // Method java/lang/Integer.intValue:()I
      51: bipush        8
      53: if_icmpge     131
      56: aload_3
      57: aload         4
      59: invokevirtual #62                 // Method java/lang/Integer.intValue:()I
      62: iconst_1
      63: iadd
      64: invokevirtual #63                 // Method io/netty/util/internal/InternalThreadLocalMap.setLocalChannelReaderStackDepth:(I)V
      67: aload_2
      68: invokeinterface #64,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      73: astore        5
      75: aload         5
      77: ifnonnull     83
      80: goto          95
      83: aload_1
      84: aload         5
      86: invokeinterface #65,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      91: pop
      92: goto          67
      95: aload_1
      96: invokeinterface #66,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
     101: pop
     102: aload_3
     103: aload         4
     105: invokevirtual #62                 // Method java/lang/Integer.intValue:()I
     108: invokevirtual #63                 // Method io/netty/util/internal/InternalThreadLocalMap.setLocalChannelReaderStackDepth:(I)V
     111: goto          128
     114: astore        6
     116: aload_3
     117: aload         4
     119: invokevirtual #62                 // Method java/lang/Integer.intValue:()I
     122: invokevirtual #63                 // Method io/netty/util/internal/InternalThreadLocalMap.setLocalChannelReaderStackDepth:(I)V
     125: aload         6
     127: athrow
     128: goto          156
     131: aload_0
     132: invokevirtual #33                 // Method eventLoop:()Lio/netty/channel/EventLoop;
     135: aload_0
     136: getfield      #15                 // Field readTask:Ljava/lang/Runnable;
     139: invokeinterface #36,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
     144: goto          156
     147: astore        5
     149: aload_0
     150: invokespecial #51                 // Method releaseInboundBuffers:()V
     153: aload         5
     155: athrow
     156: return
    Exception table:
       from    to  target type
          67   102   114   any
         114   116   114   any
         131   144   147   Class java/lang/RuntimeException

  protected void doWrite(io.netty.channel.ChannelOutboundBuffer) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: iconst_2
       5: if_icmpge     16
       8: new           #67                 // class java/nio/channels/NotYetConnectedException
      11: dup
      12: invokespecial #68                 // Method java/nio/channels/NotYetConnectedException."<init>":()V
      15: athrow
      16: aload_0
      17: getfield      #2                  // Field state:I
      20: iconst_2
      21: if_icmple     28
      24: getstatic     #42                 // Field CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      27: athrow
      28: aload_0
      29: getfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
      32: astore_2
      33: aload_0
      34: iconst_1
      35: putfield      #44                 // Field writeInProgress:Z
      38: aload_1
      39: invokevirtual #69                 // Method io/netty/channel/ChannelOutboundBuffer.current:()Ljava/lang/Object;
      42: astore_3
      43: aload_3
      44: ifnonnull     50
      47: goto          103
      50: aload_2
      51: getfield      #2                  // Field state:I
      54: iconst_2
      55: if_icmpne     80
      58: aload_2
      59: getfield      #7                  // Field inboundBuffer:Ljava/util/Queue;
      62: aload_3
      63: invokestatic  #70                 // Method io/netty/util/ReferenceCountUtil.retain:(Ljava/lang/Object;)Ljava/lang/Object;
      66: invokeinterface #71,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      71: pop
      72: aload_1
      73: invokevirtual #72                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
      76: pop
      77: goto          88
      80: aload_1
      81: getstatic     #42                 // Field CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      84: invokevirtual #73                 // Method io/netty/channel/ChannelOutboundBuffer.remove:(Ljava/lang/Throwable;)Z
      87: pop
      88: goto          100
      91: astore        4
      93: aload_1
      94: aload         4
      96: invokevirtual #73                 // Method io/netty/channel/ChannelOutboundBuffer.remove:(Ljava/lang/Throwable;)Z
      99: pop
     100: goto          38
     103: aload_0
     104: iconst_0
     105: putfield      #44                 // Field writeInProgress:Z
     108: goto          121
     111: astore        5
     113: aload_0
     114: iconst_0
     115: putfield      #44                 // Field writeInProgress:Z
     118: aload         5
     120: athrow
     121: aload_0
     122: aload_2
     123: invokespecial #45                 // Method finishPeerRead:(Lio/netty/channel/local/LocalChannel;)V
     126: return
    Exception table:
       from    to  target type
          50    88    91   Class java/lang/Throwable
          38   103   111   any
         111   113   111   any

  private void finishPeerRead(io.netty.channel.local.LocalChannel);
    Code:
       0: aload_1
       1: invokevirtual #33                 // Method eventLoop:()Lio/netty/channel/EventLoop;
       4: aload_0
       5: invokevirtual #33                 // Method eventLoop:()Lio/netty/channel/EventLoop;
       8: if_acmpne     26
      11: aload_1
      12: getfield      #44                 // Field writeInProgress:Z
      15: ifne          26
      18: aload_0
      19: aload_1
      20: invokespecial #3                  // Method finishPeerRead0:(Lio/netty/channel/local/LocalChannel;)V
      23: goto          31
      26: aload_0
      27: aload_1
      28: invokespecial #75                 // Method runFinishPeerReadTask:(Lio/netty/channel/local/LocalChannel;)V
      31: return

  private void runFinishPeerReadTask(io.netty.channel.local.LocalChannel);
    Code:
       0: new           #76                 // class io/netty/channel/local/LocalChannel$5
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #77                 // Method io/netty/channel/local/LocalChannel$5."<init>":(Lio/netty/channel/local/LocalChannel;Lio/netty/channel/local/LocalChannel;)V
       9: astore_2
      10: aload_1
      11: getfield      #44                 // Field writeInProgress:Z
      14: ifeq          34
      17: aload_1
      18: aload_1
      19: invokevirtual #33                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      22: aload_2
      23: invokeinterface #78,  2           // InterfaceMethod io/netty/channel/EventLoop.submit:(Ljava/lang/Runnable;)Lio/netty/util/concurrent/Future;
      28: putfield      #79                 // Field finishReadFuture:Lio/netty/util/concurrent/Future;
      31: goto          44
      34: aload_1
      35: invokevirtual #33                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      38: aload_2
      39: invokeinterface #36,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      44: goto          54
      47: astore_3
      48: aload_1
      49: invokespecial #51                 // Method releaseInboundBuffers:()V
      52: aload_3
      53: athrow
      54: return
    Exception table:
       from    to  target type
          10    44    47   Class java/lang/RuntimeException

  private void releaseInboundBuffers();
    Code:
       0: aload_0
       1: getfield      #7                  // Field inboundBuffer:Ljava/util/Queue;
       4: invokeinterface #64,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
       9: astore_1
      10: aload_1
      11: ifnonnull     17
      14: goto          25
      17: aload_1
      18: invokestatic  #80                 // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      21: pop
      22: goto          0
      25: return

  private void finishPeerRead0(io.netty.channel.local.LocalChannel);
    Code:
       0: aload_1
       1: getfield      #79                 // Field finishReadFuture:Lio/netty/util/concurrent/Future;
       4: astore_2
       5: aload_2
       6: ifnull        34
       9: aload_2
      10: invokeinterface #81,  1           // InterfaceMethod io/netty/util/concurrent/Future.isDone:()Z
      15: ifne          24
      18: aload_0
      19: aload_1
      20: invokespecial #75                 // Method runFinishPeerReadTask:(Lio/netty/channel/local/LocalChannel;)V
      23: return
      24: getstatic     #82                 // Field FINISH_READ_FUTURE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      27: aload_1
      28: aload_2
      29: aconst_null
      30: invokevirtual #83                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      33: pop
      34: aload_1
      35: invokevirtual #57                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
      38: astore_3
      39: aload_1
      40: getfield      #56                 // Field readInProgress:Z
      43: ifeq          89
      46: aload_1
      47: iconst_0
      48: putfield      #56                 // Field readInProgress:Z
      51: aload_1
      52: getfield      #7                  // Field inboundBuffer:Ljava/util/Queue;
      55: invokeinterface #64,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      60: astore        4
      62: aload         4
      64: ifnonnull     70
      67: goto          82
      70: aload_3
      71: aload         4
      73: invokeinterface #65,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      78: pop
      79: goto          51
      82: aload_3
      83: invokeinterface #66,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
      88: pop
      89: return

  public java.net.SocketAddress remoteAddress();
    Code:
       0: aload_0
       1: invokevirtual #84                 // Method remoteAddress:()Lio/netty/channel/local/LocalAddress;
       4: areturn

  public java.net.SocketAddress localAddress();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method localAddress:()Lio/netty/channel/local/LocalAddress;
       4: areturn

  public io.netty.channel.Channel parent();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method parent:()Lio/netty/channel/local/LocalServerChannel;
       4: areturn

  static java.util.Queue access$000(io.netty.channel.local.LocalChannel);
    Code:
       0: aload_0
       1: getfield      #7                  // Field inboundBuffer:Ljava/util/Queue;
       4: areturn

  static boolean access$202(io.netty.channel.local.LocalChannel, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #6                  // Field registerInProgress:Z
       6: ireturn

  static io.netty.channel.ChannelPromise access$300(io.netty.channel.local.LocalChannel);
    Code:
       0: aload_0
       1: getfield      #5                  // Field connectPromise:Lio/netty/channel/ChannelPromise;
       4: areturn

  static void access$400(io.netty.channel.local.LocalChannel, io.netty.channel.local.LocalChannel, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #4                  // Method doPeerClose:(Lio/netty/channel/local/LocalChannel;Z)V
       6: return

  static void access$500(io.netty.channel.local.LocalChannel, io.netty.channel.local.LocalChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method finishPeerRead0:(Lio/netty/channel/local/LocalChannel;)V
       5: return

  static int access$600(io.netty.channel.local.LocalChannel);
    Code:
       0: aload_0
       1: getfield      #2                  // Field state:I
       4: ireturn

  static io.netty.channel.ChannelPromise access$302(io.netty.channel.local.LocalChannel, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #5                  // Field connectPromise:Lio/netty/channel/ChannelPromise;
       6: areturn

  static io.netty.channel.local.LocalChannel access$702(io.netty.channel.local.LocalChannel, io.netty.channel.local.LocalChannel);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field peer:Lio/netty/channel/local/LocalChannel;
       6: areturn

  static {};
    Code:
       0: new           #85                 // class io/netty/channel/ChannelMetadata
       3: dup
       4: iconst_0
       5: invokespecial #86                 // Method io/netty/channel/ChannelMetadata."<init>":(Z)V
       8: putstatic     #23                 // Field METADATA:Lio/netty/channel/ChannelMetadata;
      11: new           #87                 // class java/nio/channels/ClosedChannelException
      14: dup
      15: invokespecial #88                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      18: putstatic     #42                 // Field CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      21: ldc_w         #89                 // class io/netty/channel/local/LocalChannel
      24: ldc           #90                 // String finishReadFuture
      26: invokestatic  #91                 // Method io/netty/util/internal/PlatformDependent.newAtomicReferenceFieldUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      29: astore_0
      30: aload_0
      31: ifnonnull     46
      34: ldc_w         #89                 // class io/netty/channel/local/LocalChannel
      37: ldc_w         #92                 // class io/netty/util/concurrent/Future
      40: ldc           #90                 // String finishReadFuture
      42: invokestatic  #93                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      45: astore_0
      46: aload_0
      47: putstatic     #82                 // Field FINISH_READ_FUTURE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      50: getstatic     #42                 // Field CLOSED_CHANNEL_EXCEPTION:Ljava/nio/channels/ClosedChannelException;
      53: getstatic     #94                 // Field io/netty/util/internal/EmptyArrays.EMPTY_STACK_TRACE:[Ljava/lang/StackTraceElement;
      56: invokevirtual #95                 // Method java/nio/channels/ClosedChannelException.setStackTrace:([Ljava/lang/StackTraceElement;)V
      59: return
}
