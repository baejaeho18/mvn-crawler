Compiled from "SslHandler.java"
class io.netty.handler.ssl.SslHandler$1 implements java.lang.Runnable {
  final io.netty.channel.ChannelHandlerContext val$ctx;

  final io.netty.channel.ChannelPromise val$future;

  final io.netty.handler.ssl.SslHandler this$0;

  io.netty.handler.ssl.SslHandler$1(io.netty.handler.ssl.SslHandler, io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/handler/ssl/SslHandler;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$ctx:Lio/netty/channel/ChannelHandlerContext;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$future:Lio/netty/channel/ChannelPromise;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/handler/ssl/SslHandler;
       4: iconst_1
       5: invokestatic  #5                  // Method io/netty/handler/ssl/SslHandler.access$102:(Lio/netty/handler/ssl/SslHandler;Z)Z
       8: pop
       9: aload_0
      10: getfield      #1                  // Field this$0:Lio/netty/handler/ssl/SslHandler;
      13: invokestatic  #6                  // Method io/netty/handler/ssl/SslHandler.access$200:(Lio/netty/handler/ssl/SslHandler;)Ljavax/net/ssl/SSLEngine;
      16: invokevirtual #7                  // Method javax/net/ssl/SSLEngine.closeOutbound:()V
      19: aload_0
      20: getfield      #1                  // Field this$0:Lio/netty/handler/ssl/SslHandler;
      23: aload_0
      24: getfield      #2                  // Field val$ctx:Lio/netty/channel/ChannelHandlerContext;
      27: getstatic     #8                  // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
      30: aload_0
      31: getfield      #3                  // Field val$future:Lio/netty/channel/ChannelPromise;
      34: invokevirtual #9                  // Method io/netty/handler/ssl/SslHandler.write:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V
      37: aload_0
      38: getfield      #1                  // Field this$0:Lio/netty/handler/ssl/SslHandler;
      41: aload_0
      42: getfield      #2                  // Field val$ctx:Lio/netty/channel/ChannelHandlerContext;
      45: invokevirtual #10                 // Method io/netty/handler/ssl/SslHandler.flush:(Lio/netty/channel/ChannelHandlerContext;)V
      48: goto          85
      51: astore_1
      52: aload_0
      53: getfield      #3                  // Field val$future:Lio/netty/channel/ChannelPromise;
      56: aload_1
      57: invokeinterface #12,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      62: ifne          85
      65: invokestatic  #13                 // Method io/netty/handler/ssl/SslHandler.access$300:()Lio/netty/util/internal/logging/InternalLogger;
      68: ldc           #14                 // String {} flush() raised a masked exception.
      70: aload_0
      71: getfield      #2                  // Field val$ctx:Lio/netty/channel/ChannelHandlerContext;
      74: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      79: aload_1
      80: invokeinterface #16,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      85: return
    Exception table:
       from    to  target type
          19    48    51   Class java/lang/Exception
}
