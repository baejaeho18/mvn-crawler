Compiled from "PoolThreadCache.java"
abstract class io.netty.buffer.PoolThreadCache$MemoryRegionCache<T> {
  private final int size;

  private final java.util.Queue<io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry<T>> queue;

  private final io.netty.buffer.PoolArena$SizeClass sizeClass;

  private int allocations;

  private static final io.netty.util.Recycler<io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry> RECYCLER;

  io.netty.buffer.PoolThreadCache$MemoryRegionCache(int, io.netty.buffer.PoolArena$SizeClass);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: invokestatic  #3                  // Method powerOfTwo:(I)I
       9: putfield      #4                  // Field size:I
      12: aload_0
      13: aload_0
      14: getfield      #4                  // Field size:I
      17: invokestatic  #5                  // Method io/netty/util/internal/PlatformDependent.newFixedMpscQueue:(I)Ljava/util/Queue;
      20: putfield      #6                  // Field queue:Ljava/util/Queue;
      23: aload_0
      24: aload_2
      25: putfield      #7                  // Field sizeClass:Lio/netty/buffer/PoolArena$SizeClass;
      28: return

  private static int powerOfTwo(int);
    Code:
       0: iload_0
       1: iconst_2
       2: if_icmpgt     7
       5: iconst_2
       6: ireturn
       7: iinc          0, -1
      10: iload_0
      11: iload_0
      12: iconst_1
      13: ishr
      14: ior
      15: istore_0
      16: iload_0
      17: iload_0
      18: iconst_2
      19: ishr
      20: ior
      21: istore_0
      22: iload_0
      23: iload_0
      24: iconst_4
      25: ishr
      26: ior
      27: istore_0
      28: iload_0
      29: iload_0
      30: bipush        8
      32: ishr
      33: ior
      34: istore_0
      35: iload_0
      36: iload_0
      37: bipush        16
      39: ishr
      40: ior
      41: istore_0
      42: iinc          0, 1
      45: iload_0
      46: ireturn

  protected abstract void initBuf(io.netty.buffer.PoolChunk<T>, long, io.netty.buffer.PooledByteBuf<T>, int);

  public final boolean add(io.netty.buffer.PoolChunk<T>, long);
    Code:
       0: aload_1
       1: lload_2
       2: invokestatic  #8                  // Method newEntry:(Lio/netty/buffer/PoolChunk;J)Lio/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry;
       5: astore        4
       7: aload_0
       8: getfield      #6                  // Field queue:Ljava/util/Queue;
      11: aload         4
      13: invokeinterface #9,  2            // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      18: istore        5
      20: iload         5
      22: ifne          30
      25: aload         4
      27: invokevirtual #10                 // Method io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.recycle:()V
      30: iload         5
      32: ireturn

  public final boolean allocate(io.netty.buffer.PooledByteBuf<T>, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field queue:Ljava/util/Queue;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
       9: checkcast     #12                 // class io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry
      12: astore_3
      13: aload_3
      14: ifnonnull     19
      17: iconst_0
      18: ireturn
      19: aload_0
      20: aload_3
      21: getfield      #13                 // Field io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.chunk:Lio/netty/buffer/PoolChunk;
      24: aload_3
      25: getfield      #14                 // Field io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.handle:J
      28: aload_1
      29: iload_2
      30: invokevirtual #15                 // Method initBuf:(Lio/netty/buffer/PoolChunk;JLio/netty/buffer/PooledByteBuf;I)V
      33: aload_3
      34: invokevirtual #10                 // Method io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.recycle:()V
      37: aload_0
      38: dup
      39: getfield      #16                 // Field allocations:I
      42: iconst_1
      43: iadd
      44: putfield      #16                 // Field allocations:I
      47: iconst_1
      48: ireturn

  public final int free();
    Code:
       0: aload_0
       1: ldc           #17                 // int 2147483647
       3: invokespecial #18                 // Method free:(I)I
       6: ireturn

  private int free(int);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: iload_1
       4: if_icmpge     40
       7: aload_0
       8: getfield      #6                  // Field queue:Ljava/util/Queue;
      11: invokeinterface #11,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      16: checkcast     #12                 // class io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry
      19: astore_3
      20: aload_3
      21: ifnull        32
      24: aload_0
      25: aload_3
      26: invokespecial #19                 // Method freeEntry:(Lio/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry;)V
      29: goto          34
      32: iload_2
      33: ireturn
      34: iinc          2, 1
      37: goto          2
      40: iload_2
      41: ireturn

  public final void trim();
    Code:
       0: aload_0
       1: getfield      #4                  // Field size:I
       4: aload_0
       5: getfield      #16                 // Field allocations:I
       8: isub
       9: istore_1
      10: aload_0
      11: iconst_0
      12: putfield      #16                 // Field allocations:I
      15: iload_1
      16: ifle          25
      19: aload_0
      20: iload_1
      21: invokespecial #18                 // Method free:(I)I
      24: pop
      25: return

  private void freeEntry(io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry);
    Code:
       0: aload_1
       1: getfield      #13                 // Field io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.chunk:Lio/netty/buffer/PoolChunk;
       4: astore_2
       5: aload_1
       6: getfield      #14                 // Field io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.handle:J
       9: lstore_3
      10: aload_1
      11: invokevirtual #10                 // Method io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.recycle:()V
      14: aload_2
      15: getfield      #20                 // Field io/netty/buffer/PoolChunk.arena:Lio/netty/buffer/PoolArena;
      18: aload_2
      19: lload_3
      20: aload_0
      21: getfield      #7                  // Field sizeClass:Lio/netty/buffer/PoolArena$SizeClass;
      24: invokevirtual #21                 // Method io/netty/buffer/PoolArena.freeChunk:(Lio/netty/buffer/PoolChunk;JLio/netty/buffer/PoolArena$SizeClass;)V
      27: return

  private static io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry newEntry(io.netty.buffer.PoolChunk<?>, long);
    Code:
       0: getstatic     #1                  // Field RECYCLER:Lio/netty/util/Recycler;
       3: invokevirtual #22                 // Method io/netty/util/Recycler.get:()Ljava/lang/Object;
       6: checkcast     #12                 // class io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry
       9: astore_3
      10: aload_3
      11: aload_0
      12: putfield      #13                 // Field io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.chunk:Lio/netty/buffer/PoolChunk;
      15: aload_3
      16: lload_1
      17: putfield      #14                 // Field io/netty/buffer/PoolThreadCache$MemoryRegionCache$Entry.handle:J
      20: aload_3
      21: areturn

  static io.netty.util.Recycler access$100();
    Code:
       0: getstatic     #1                  // Field RECYCLER:Lio/netty/util/Recycler;
       3: areturn

  static {};
    Code:
       0: new           #23                 // class io/netty/buffer/PoolThreadCache$MemoryRegionCache$1
       3: dup
       4: invokespecial #24                 // Method io/netty/buffer/PoolThreadCache$MemoryRegionCache$1."<init>":()V
       7: putstatic     #1                  // Field RECYCLER:Lio/netty/util/Recycler;
      10: return
}
