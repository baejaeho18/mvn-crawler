Compiled from "EmbeddedChannel.java"
public class io.netty.channel.embedded.EmbeddedChannel extends io.netty.channel.AbstractChannel {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final io.netty.channel.ChannelMetadata METADATA;

  private final io.netty.channel.embedded.EmbeddedEventLoop loop;

  private final io.netty.channel.ChannelConfig config;

  private final java.net.SocketAddress localAddress;

  private final java.net.SocketAddress remoteAddress;

  private java.util.Queue<java.lang.Object> inboundMessages;

  private java.util.Queue<java.lang.Object> outboundMessages;

  private java.lang.Throwable lastException;

  private int state;

  static final boolean $assertionsDisabled;

  public io.netty.channel.embedded.EmbeddedChannel(io.netty.channel.ChannelHandler...);
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #2                  // Method io/netty/channel/AbstractChannel."<init>":(Lio/netty/channel/Channel;)V
       5: aload_0
       6: new           #3                  // class io/netty/channel/embedded/EmbeddedEventLoop
       9: dup
      10: invokespecial #4                  // Method io/netty/channel/embedded/EmbeddedEventLoop."<init>":()V
      13: putfield      #5                  // Field loop:Lio/netty/channel/embedded/EmbeddedEventLoop;
      16: aload_0
      17: new           #6                  // class io/netty/channel/DefaultChannelConfig
      20: dup
      21: aload_0
      22: invokespecial #7                  // Method io/netty/channel/DefaultChannelConfig."<init>":(Lio/netty/channel/Channel;)V
      25: putfield      #8                  // Field config:Lio/netty/channel/ChannelConfig;
      28: aload_0
      29: new           #9                  // class io/netty/channel/embedded/EmbeddedSocketAddress
      32: dup
      33: invokespecial #10                 // Method io/netty/channel/embedded/EmbeddedSocketAddress."<init>":()V
      36: putfield      #11                 // Field localAddress:Ljava/net/SocketAddress;
      39: aload_0
      40: new           #9                  // class io/netty/channel/embedded/EmbeddedSocketAddress
      43: dup
      44: invokespecial #10                 // Method io/netty/channel/embedded/EmbeddedSocketAddress."<init>":()V
      47: putfield      #12                 // Field remoteAddress:Ljava/net/SocketAddress;
      50: aload_1
      51: ifnonnull     64
      54: new           #13                 // class java/lang/NullPointerException
      57: dup
      58: ldc           #14                 // String handlers
      60: invokespecial #15                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: aload_0
      65: invokevirtual #16                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
      68: astore_2
      69: aload_2
      70: iconst_1
      71: anewarray     #17                 // class io/netty/channel/ChannelHandler
      74: dup
      75: iconst_0
      76: new           #18                 // class io/netty/channel/embedded/EmbeddedChannel$1
      79: dup
      80: aload_0
      81: aload_1
      82: invokespecial #19                 // Method io/netty/channel/embedded/EmbeddedChannel$1."<init>":(Lio/netty/channel/embedded/EmbeddedChannel;[Lio/netty/channel/ChannelHandler;)V
      85: aastore
      86: invokeinterface #20,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      91: pop
      92: aload_0
      93: getfield      #5                  // Field loop:Lio/netty/channel/embedded/EmbeddedEventLoop;
      96: aload_0
      97: invokevirtual #21                 // Method io/netty/channel/embedded/EmbeddedEventLoop.register:(Lio/netty/channel/Channel;)Lio/netty/channel/ChannelFuture;
     100: astore_3
     101: getstatic     #22                 // Field $assertionsDisabled:Z
     104: ifne          124
     107: aload_3
     108: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
     113: ifne          124
     116: new           #24                 // class java/lang/AssertionError
     119: dup
     120: invokespecial #25                 // Method java/lang/AssertionError."<init>":()V
     123: athrow
     124: aload_2
     125: iconst_1
     126: anewarray     #17                 // class io/netty/channel/ChannelHandler
     129: dup
     130: iconst_0
     131: new           #26                 // class io/netty/channel/embedded/EmbeddedChannel$LastInboundHandler
     134: dup
     135: aload_0
     136: aconst_null
     137: invokespecial #27                 // Method io/netty/channel/embedded/EmbeddedChannel$LastInboundHandler."<init>":(Lio/netty/channel/embedded/EmbeddedChannel;Lio/netty/channel/embedded/EmbeddedChannel$1;)V
     140: aastore
     141: invokeinterface #20,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.addLast:([Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
     146: pop
     147: return

  public io.netty.channel.ChannelMetadata metadata();
    Code:
       0: getstatic     #28                 // Field METADATA:Lio/netty/channel/ChannelMetadata;
       3: areturn

  public io.netty.channel.ChannelConfig config();
    Code:
       0: aload_0
       1: getfield      #8                  // Field config:Lio/netty/channel/ChannelConfig;
       4: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #29                 // Field state:I
       4: iconst_2
       5: if_icmpge     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isActive();
    Code:
       0: aload_0
       1: getfield      #29                 // Field state:I
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public java.util.Queue<java.lang.Object> inboundMessages();
    Code:
       0: aload_0
       1: getfield      #30                 // Field inboundMessages:Ljava/util/Queue;
       4: ifnonnull     18
       7: aload_0
       8: new           #31                 // class java/util/ArrayDeque
      11: dup
      12: invokespecial #32                 // Method java/util/ArrayDeque."<init>":()V
      15: putfield      #30                 // Field inboundMessages:Ljava/util/Queue;
      18: aload_0
      19: getfield      #30                 // Field inboundMessages:Ljava/util/Queue;
      22: areturn

  public java.util.Queue<java.lang.Object> lastInboundBuffer();
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method inboundMessages:()Ljava/util/Queue;
       4: areturn

  public java.util.Queue<java.lang.Object> outboundMessages();
    Code:
       0: aload_0
       1: getfield      #34                 // Field outboundMessages:Ljava/util/Queue;
       4: ifnonnull     18
       7: aload_0
       8: new           #31                 // class java/util/ArrayDeque
      11: dup
      12: invokespecial #32                 // Method java/util/ArrayDeque."<init>":()V
      15: putfield      #34                 // Field outboundMessages:Ljava/util/Queue;
      18: aload_0
      19: getfield      #34                 // Field outboundMessages:Ljava/util/Queue;
      22: areturn

  public java.util.Queue<java.lang.Object> lastOutboundBuffer();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method outboundMessages:()Ljava/util/Queue;
       4: areturn

  public java.lang.Object readInbound();
    Code:
       0: aload_0
       1: getfield      #30                 // Field inboundMessages:Ljava/util/Queue;
       4: invokestatic  #36                 // Method poll:(Ljava/util/Queue;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object readOutbound();
    Code:
       0: aload_0
       1: getfield      #34                 // Field outboundMessages:Ljava/util/Queue;
       4: invokestatic  #36                 // Method poll:(Ljava/util/Queue;)Ljava/lang/Object;
       7: areturn

  public boolean writeInbound(java.lang.Object...);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method ensureOpen:()V
       4: aload_1
       5: arraylength
       6: ifne          17
       9: aload_0
      10: getfield      #30                 // Field inboundMessages:Ljava/util/Queue;
      13: invokestatic  #38                 // Method isNotEmpty:(Ljava/util/Queue;)Z
      16: ireturn
      17: aload_0
      18: invokevirtual #16                 // Method pipeline:()Lio/netty/channel/ChannelPipeline;
      21: astore_2
      22: aload_1
      23: astore_3
      24: aload_3
      25: arraylength
      26: istore        4
      28: iconst_0
      29: istore        5
      31: iload         5
      33: iload         4
      35: if_icmpge     59
      38: aload_3
      39: iload         5
      41: aaload
      42: astore        6
      44: aload_2
      45: aload         6
      47: invokeinterface #39,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      52: pop
      53: iinc          5, 1
      56: goto          31
      59: aload_2
      60: invokeinterface #40,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
      65: pop
      66: aload_0
      67: invokevirtual #41                 // Method runPendingTasks:()V
      70: aload_0
      71: invokevirtual #42                 // Method checkException:()V
      74: aload_0
      75: getfield      #30                 // Field inboundMessages:Ljava/util/Queue;
      78: invokestatic  #38                 // Method isNotEmpty:(Ljava/util/Queue;)Z
      81: ireturn

  public boolean writeOutbound(java.lang.Object...);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method ensureOpen:()V
       4: aload_1
       5: arraylength
       6: ifne          17
       9: aload_0
      10: getfield      #34                 // Field outboundMessages:Ljava/util/Queue;
      13: invokestatic  #38                 // Method isNotEmpty:(Ljava/util/Queue;)Z
      16: ireturn
      17: aload_1
      18: arraylength
      19: invokestatic  #43                 // Method io/netty/util/internal/RecyclableArrayList.newInstance:(I)Lio/netty/util/internal/RecyclableArrayList;
      22: astore_2
      23: aload_1
      24: astore_3
      25: aload_3
      26: arraylength
      27: istore        4
      29: iconst_0
      30: istore        5
      32: iload         5
      34: iload         4
      36: if_icmpge     70
      39: aload_3
      40: iload         5
      42: aaload
      43: astore        6
      45: aload         6
      47: ifnonnull     53
      50: goto          70
      53: aload_2
      54: aload_0
      55: aload         6
      57: invokevirtual #44                 // Method write:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      60: invokevirtual #45                 // Method io/netty/util/internal/RecyclableArrayList.add:(Ljava/lang/Object;)Z
      63: pop
      64: iinc          5, 1
      67: goto          32
      70: aload_0
      71: invokevirtual #46                 // Method flush:()Lio/netty/channel/Channel;
      74: pop
      75: aload_2
      76: invokevirtual #47                 // Method io/netty/util/internal/RecyclableArrayList.size:()I
      79: istore_3
      80: iconst_0
      81: istore        4
      83: iload         4
      85: iload_3
      86: if_icmpge     151
      89: aload_2
      90: iload         4
      92: invokevirtual #48                 // Method io/netty/util/internal/RecyclableArrayList.get:(I)Ljava/lang/Object;
      95: checkcast     #49                 // class io/netty/channel/ChannelFuture
      98: astore        5
     100: getstatic     #22                 // Field $assertionsDisabled:Z
     103: ifne          124
     106: aload         5
     108: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
     113: ifne          124
     116: new           #24                 // class java/lang/AssertionError
     119: dup
     120: invokespecial #25                 // Method java/lang/AssertionError."<init>":()V
     123: athrow
     124: aload         5
     126: invokeinterface #50,  1           // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
     131: ifnull        145
     134: aload_0
     135: aload         5
     137: invokeinterface #50,  1           // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
     142: invokespecial #1                  // Method recordException:(Ljava/lang/Throwable;)V
     145: iinc          4, 1
     148: goto          83
     151: aload_0
     152: invokevirtual #41                 // Method runPendingTasks:()V
     155: aload_0
     156: invokevirtual #42                 // Method checkException:()V
     159: aload_0
     160: getfield      #34                 // Field outboundMessages:Ljava/util/Queue;
     163: invokestatic  #38                 // Method isNotEmpty:(Ljava/util/Queue;)Z
     166: istore        4
     168: aload_2
     169: invokevirtual #51                 // Method io/netty/util/internal/RecyclableArrayList.recycle:()Z
     172: pop
     173: iload         4
     175: ireturn
     176: astore        7
     178: aload_2
     179: invokevirtual #51                 // Method io/netty/util/internal/RecyclableArrayList.recycle:()Z
     182: pop
     183: aload         7
     185: athrow
    Exception table:
       from    to  target type
          23   168   176   any
         176   178   176   any

  public boolean finish();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method close:()Lio/netty/channel/ChannelFuture;
       4: pop
       5: aload_0
       6: invokevirtual #41                 // Method runPendingTasks:()V
       9: aload_0
      10: getfield      #5                  // Field loop:Lio/netty/channel/embedded/EmbeddedEventLoop;
      13: invokevirtual #53                 // Method io/netty/channel/embedded/EmbeddedEventLoop.cancelScheduledTasks:()V
      16: aload_0
      17: invokevirtual #42                 // Method checkException:()V
      20: aload_0
      21: getfield      #30                 // Field inboundMessages:Ljava/util/Queue;
      24: invokestatic  #38                 // Method isNotEmpty:(Ljava/util/Queue;)Z
      27: ifne          40
      30: aload_0
      31: getfield      #34                 // Field outboundMessages:Ljava/util/Queue;
      34: invokestatic  #38                 // Method isNotEmpty:(Ljava/util/Queue;)Z
      37: ifeq          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn

  private static boolean isNotEmpty(java.util.Queue<java.lang.Object>);
    Code:
       0: aload_0
       1: ifnull        17
       4: aload_0
       5: invokeinterface #54,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  private static java.lang.Object poll(java.util.Queue<java.lang.Object>);
    Code:
       0: aload_0
       1: ifnull        13
       4: aload_0
       5: invokeinterface #55,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      10: goto          14
      13: aconst_null
      14: areturn

  public void runPendingTasks();
    Code:
       0: aload_0
       1: getfield      #5                  // Field loop:Lio/netty/channel/embedded/EmbeddedEventLoop;
       4: invokevirtual #56                 // Method io/netty/channel/embedded/EmbeddedEventLoop.runTasks:()V
       7: goto          16
      10: astore_1
      11: aload_0
      12: aload_1
      13: invokespecial #1                  // Method recordException:(Ljava/lang/Throwable;)V
      16: aload_0
      17: getfield      #5                  // Field loop:Lio/netty/channel/embedded/EmbeddedEventLoop;
      20: invokevirtual #58                 // Method io/netty/channel/embedded/EmbeddedEventLoop.runScheduledTasks:()J
      23: pop2
      24: goto          33
      27: astore_1
      28: aload_0
      29: aload_1
      30: invokespecial #1                  // Method recordException:(Ljava/lang/Throwable;)V
      33: return
    Exception table:
       from    to  target type
           0     7    10   Class java/lang/Exception
          16    24    27   Class java/lang/Exception

  public long runScheduledPendingTasks();
    Code:
       0: aload_0
       1: getfield      #5                  // Field loop:Lio/netty/channel/embedded/EmbeddedEventLoop;
       4: invokevirtual #58                 // Method io/netty/channel/embedded/EmbeddedEventLoop.runScheduledTasks:()J
       7: lreturn
       8: astore_1
       9: aload_0
      10: aload_1
      11: invokespecial #1                  // Method recordException:(Ljava/lang/Throwable;)V
      14: aload_0
      15: getfield      #5                  // Field loop:Lio/netty/channel/embedded/EmbeddedEventLoop;
      18: invokevirtual #59                 // Method io/netty/channel/embedded/EmbeddedEventLoop.nextScheduledTask:()J
      21: lreturn
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/Exception

  private void recordException(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #60                 // Field lastException:Ljava/lang/Throwable;
       4: ifnonnull     15
       7: aload_0
       8: aload_1
       9: putfield      #60                 // Field lastException:Ljava/lang/Throwable;
      12: goto          26
      15: getstatic     #61                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      18: ldc           #62                 // String More than one exception was raised. Will report only the first one and log others.
      20: aload_1
      21: invokeinterface #63,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      26: return

  public void checkException();
    Code:
       0: aload_0
       1: getfield      #60                 // Field lastException:Ljava/lang/Throwable;
       4: astore_1
       5: aload_1
       6: ifnonnull     10
       9: return
      10: aload_0
      11: aconst_null
      12: putfield      #60                 // Field lastException:Ljava/lang/Throwable;
      15: aload_1
      16: invokestatic  #64                 // Method io/netty/util/internal/PlatformDependent.throwException:(Ljava/lang/Throwable;)V
      19: return

  protected final void ensureOpen();
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method isOpen:()Z
       4: ifne          22
       7: aload_0
       8: new           #66                 // class java/nio/channels/ClosedChannelException
      11: dup
      12: invokespecial #67                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      15: invokespecial #1                  // Method recordException:(Ljava/lang/Throwable;)V
      18: aload_0
      19: invokevirtual #42                 // Method checkException:()V
      22: return

  protected boolean isCompatible(io.netty.channel.EventLoop);
    Code:
       0: aload_1
       1: instanceof    #3                  // class io/netty/channel/embedded/EmbeddedEventLoop
       4: ireturn

  protected java.net.SocketAddress localAddress0();
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method isActive:()Z
       4: ifeq          14
       7: aload_0
       8: getfield      #11                 // Field localAddress:Ljava/net/SocketAddress;
      11: goto          15
      14: aconst_null
      15: areturn

  protected java.net.SocketAddress remoteAddress0();
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method isActive:()Z
       4: ifeq          14
       7: aload_0
       8: getfield      #12                 // Field remoteAddress:Ljava/net/SocketAddress;
      11: goto          15
      14: aconst_null
      15: areturn

  protected void doRegister() throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #29                 // Field state:I
       5: return

  protected void doBind(java.net.SocketAddress) throws java.lang.Exception;
    Code:
       0: return

  protected void doDisconnect() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method doClose:()V
       4: return

  protected void doClose() throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_2
       2: putfield      #29                 // Field state:I
       5: return

  protected void doBeginRead() throws java.lang.Exception;
    Code:
       0: return

  protected io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe();
    Code:
       0: new           #70                 // class io/netty/channel/embedded/EmbeddedChannel$DefaultUnsafe
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #71                 // Method io/netty/channel/embedded/EmbeddedChannel$DefaultUnsafe."<init>":(Lio/netty/channel/embedded/EmbeddedChannel;Lio/netty/channel/embedded/EmbeddedChannel$1;)V
       9: areturn

  protected void doWrite(io.netty.channel.ChannelOutboundBuffer) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #72                 // Method io/netty/channel/ChannelOutboundBuffer.current:()Ljava/lang/Object;
       4: astore_2
       5: aload_2
       6: ifnonnull     12
       9: goto          36
      12: aload_2
      13: invokestatic  #73                 // Method io/netty/util/ReferenceCountUtil.retain:(Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: aload_0
      18: invokevirtual #35                 // Method outboundMessages:()Ljava/util/Queue;
      21: aload_2
      22: invokeinterface #74,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      27: pop
      28: aload_1
      29: invokevirtual #75                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
      32: pop
      33: goto          0
      36: return

  static void access$200(io.netty.channel.embedded.EmbeddedChannel, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method recordException:(Ljava/lang/Throwable;)V
       5: return

  static {};
    Code:
       0: ldc_w         #76                 // class io/netty/channel/embedded/EmbeddedChannel
       3: invokevirtual #77                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #22                 // Field $assertionsDisabled:Z
      17: ldc_w         #76                 // class io/netty/channel/embedded/EmbeddedChannel
      20: invokestatic  #78                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      23: putstatic     #61                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      26: new           #79                 // class io/netty/channel/ChannelMetadata
      29: dup
      30: iconst_0
      31: invokespecial #80                 // Method io/netty/channel/ChannelMetadata."<init>":(Z)V
      34: putstatic     #28                 // Field METADATA:Lio/netty/channel/ChannelMetadata;
      37: return
}
