Compiled from "JdkSslEngine.java"
class io.netty.handler.ssl.JdkSslEngine extends javax.net.ssl.SSLEngine {
  private final javax.net.ssl.SSLEngine engine;

  private final io.netty.handler.ssl.JdkSslSession session;

  io.netty.handler.ssl.JdkSslEngine(javax.net.ssl.SSLEngine);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javax/net/ssl/SSLEngine."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       9: aload_0
      10: new           #3                  // class io/netty/handler/ssl/JdkSslSession
      13: dup
      14: aload_1
      15: invokespecial #4                  // Method io/netty/handler/ssl/JdkSslSession."<init>":(Ljavax/net/ssl/SSLEngine;)V
      18: putfield      #5                  // Field session:Lio/netty/handler/ssl/JdkSslSession;
      21: return

  public io.netty.handler.ssl.JdkSslSession getSession();
    Code:
       0: aload_0
       1: getfield      #5                  // Field session:Lio/netty/handler/ssl/JdkSslSession;
       4: areturn

  public javax.net.ssl.SSLEngine getWrappedEngine();
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: areturn

  public void closeInbound() throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #6                  // Method javax/net/ssl/SSLEngine.closeInbound:()V
       7: return

  public void closeOutbound();
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #7                  // Method javax/net/ssl/SSLEngine.closeOutbound:()V
       7: return

  public java.lang.String getPeerHost();
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #8                  // Method javax/net/ssl/SSLEngine.getPeerHost:()Ljava/lang/String;
       7: areturn

  public int getPeerPort();
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #9                  // Method javax/net/ssl/SSLEngine.getPeerPort:()I
       7: ireturn

  public javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer, java.nio.ByteBuffer) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: aload_1
       5: aload_2
       6: invokevirtual #10                 // Method javax/net/ssl/SSLEngine.wrap:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
       9: areturn

  public javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[], java.nio.ByteBuffer) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: aload_1
       5: aload_2
       6: invokevirtual #11                 // Method javax/net/ssl/SSLEngine.wrap:([Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
       9: areturn

  public javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[], int, int, java.nio.ByteBuffer) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: aload_1
       5: iload_2
       6: iload_3
       7: aload         4
       9: invokevirtual #12                 // Method javax/net/ssl/SSLEngine.wrap:([Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
      12: areturn

  public javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer, java.nio.ByteBuffer) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method javax/net/ssl/SSLEngine.unwrap:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
       9: areturn

  public javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer, java.nio.ByteBuffer[]) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: aload_1
       5: aload_2
       6: invokevirtual #14                 // Method javax/net/ssl/SSLEngine.unwrap:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
       9: areturn

  public javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer, java.nio.ByteBuffer[], int, int) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: aload_1
       5: aload_2
       6: iload_3
       7: iload         4
       9: invokevirtual #15                 // Method javax/net/ssl/SSLEngine.unwrap:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)Ljavax/net/ssl/SSLEngineResult;
      12: areturn

  public java.lang.Runnable getDelegatedTask();
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #16                 // Method javax/net/ssl/SSLEngine.getDelegatedTask:()Ljava/lang/Runnable;
       7: areturn

  public boolean isInboundDone();
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #17                 // Method javax/net/ssl/SSLEngine.isInboundDone:()Z
       7: ireturn

  public boolean isOutboundDone();
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #18                 // Method javax/net/ssl/SSLEngine.isOutboundDone:()Z
       7: ireturn

  public java.lang.String[] getSupportedCipherSuites();
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #19                 // Method javax/net/ssl/SSLEngine.getSupportedCipherSuites:()[Ljava/lang/String;
       7: areturn

  public java.lang.String[] getEnabledCipherSuites();
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #20                 // Method javax/net/ssl/SSLEngine.getEnabledCipherSuites:()[Ljava/lang/String;
       7: areturn

  public void setEnabledCipherSuites(java.lang.String[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: aload_1
       5: invokevirtual #21                 // Method javax/net/ssl/SSLEngine.setEnabledCipherSuites:([Ljava/lang/String;)V
       8: return

  public java.lang.String[] getSupportedProtocols();
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #22                 // Method javax/net/ssl/SSLEngine.getSupportedProtocols:()[Ljava/lang/String;
       7: areturn

  public java.lang.String[] getEnabledProtocols();
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #23                 // Method javax/net/ssl/SSLEngine.getEnabledProtocols:()[Ljava/lang/String;
       7: areturn

  public void setEnabledProtocols(java.lang.String[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: aload_1
       5: invokevirtual #24                 // Method javax/net/ssl/SSLEngine.setEnabledProtocols:([Ljava/lang/String;)V
       8: return

  public javax.net.ssl.SSLSession getHandshakeSession();
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #25                 // Method javax/net/ssl/SSLEngine.getHandshakeSession:()Ljavax/net/ssl/SSLSession;
       7: areturn

  public void beginHandshake() throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #26                 // Method javax/net/ssl/SSLEngine.beginHandshake:()V
       7: return

  public javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus();
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #27                 // Method javax/net/ssl/SSLEngine.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
       7: areturn

  public void setUseClientMode(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: iload_1
       5: invokevirtual #28                 // Method javax/net/ssl/SSLEngine.setUseClientMode:(Z)V
       8: return

  public boolean getUseClientMode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #29                 // Method javax/net/ssl/SSLEngine.getUseClientMode:()Z
       7: ireturn

  public void setNeedClientAuth(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: iload_1
       5: invokevirtual #30                 // Method javax/net/ssl/SSLEngine.setNeedClientAuth:(Z)V
       8: return

  public boolean getNeedClientAuth();
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #31                 // Method javax/net/ssl/SSLEngine.getNeedClientAuth:()Z
       7: ireturn

  public void setWantClientAuth(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: iload_1
       5: invokevirtual #32                 // Method javax/net/ssl/SSLEngine.setWantClientAuth:(Z)V
       8: return

  public boolean getWantClientAuth();
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #33                 // Method javax/net/ssl/SSLEngine.getWantClientAuth:()Z
       7: ireturn

  public void setEnableSessionCreation(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: iload_1
       5: invokevirtual #34                 // Method javax/net/ssl/SSLEngine.setEnableSessionCreation:(Z)V
       8: return

  public boolean getEnableSessionCreation();
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #35                 // Method javax/net/ssl/SSLEngine.getEnableSessionCreation:()Z
       7: ireturn

  public javax.net.ssl.SSLParameters getSSLParameters();
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #36                 // Method javax/net/ssl/SSLEngine.getSSLParameters:()Ljavax/net/ssl/SSLParameters;
       7: areturn

  public void setSSLParameters(javax.net.ssl.SSLParameters);
    Code:
       0: aload_0
       1: getfield      #2                  // Field engine:Ljavax/net/ssl/SSLEngine;
       4: aload_1
       5: invokevirtual #37                 // Method javax/net/ssl/SSLEngine.setSSLParameters:(Ljavax/net/ssl/SSLParameters;)V
       8: return

  public javax.net.ssl.SSLSession getSession();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method getSession:()Lio/netty/handler/ssl/JdkSslSession;
       4: areturn
}
