Compiled from "Recycler.java"
final class io.netty.util.Recycler$WeakOrderQueue {
  private static final int LINK_CAPACITY;

  private io.netty.util.Recycler$WeakOrderQueue$Link head;

  private io.netty.util.Recycler$WeakOrderQueue$Link tail;

  private io.netty.util.Recycler$WeakOrderQueue next;

  private final java.lang.ref.WeakReference<java.lang.Thread> owner;

  private final int id;

  io.netty.util.Recycler$WeakOrderQueue(io.netty.util.Recycler$Stack<?>, java.lang.Thread);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #4                  // Method io/netty/util/Recycler.access$600:()Ljava/util/concurrent/atomic/AtomicInteger;
       8: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      11: putfield      #6                  // Field id:I
      14: aload_0
      15: aload_0
      16: new           #7                  // class io/netty/util/Recycler$WeakOrderQueue$Link
      19: dup
      20: aconst_null
      21: invokespecial #8                  // Method io/netty/util/Recycler$WeakOrderQueue$Link."<init>":(Lio/netty/util/Recycler$1;)V
      24: dup_x1
      25: putfield      #9                  // Field tail:Lio/netty/util/Recycler$WeakOrderQueue$Link;
      28: putfield      #10                 // Field head:Lio/netty/util/Recycler$WeakOrderQueue$Link;
      31: aload_0
      32: new           #11                 // class java/lang/ref/WeakReference
      35: dup
      36: aload_2
      37: invokespecial #12                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      40: putfield      #1                  // Field owner:Ljava/lang/ref/WeakReference;
      43: aload_1
      44: dup
      45: astore_3
      46: monitorenter
      47: aload_0
      48: aload_1
      49: invokestatic  #13                 // Method io/netty/util/Recycler$Stack.access$800:(Lio/netty/util/Recycler$Stack;)Lio/netty/util/Recycler$WeakOrderQueue;
      52: putfield      #2                  // Field next:Lio/netty/util/Recycler$WeakOrderQueue;
      55: aload_1
      56: aload_0
      57: invokestatic  #14                 // Method io/netty/util/Recycler$Stack.access$802:(Lio/netty/util/Recycler$Stack;Lio/netty/util/Recycler$WeakOrderQueue;)Lio/netty/util/Recycler$WeakOrderQueue;
      60: pop
      61: aload_3
      62: monitorexit
      63: goto          73
      66: astore        4
      68: aload_3
      69: monitorexit
      70: aload         4
      72: athrow
      73: return
    Exception table:
       from    to  target type
          47    63    66   any
          66    70    66   any

  void add(io.netty.util.Recycler$DefaultHandle);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field id:I
       5: invokestatic  #15                 // Method io/netty/util/Recycler$DefaultHandle.access$902:(Lio/netty/util/Recycler$DefaultHandle;I)I
       8: pop
       9: aload_0
      10: getfield      #9                  // Field tail:Lio/netty/util/Recycler$WeakOrderQueue$Link;
      13: astore_2
      14: aload_2
      15: invokevirtual #16                 // Method io/netty/util/Recycler$WeakOrderQueue$Link.get:()I
      18: dup
      19: istore_3
      20: bipush        16
      22: if_icmpne     48
      25: aload_0
      26: aload_2
      27: new           #7                  // class io/netty/util/Recycler$WeakOrderQueue$Link
      30: dup
      31: aconst_null
      32: invokespecial #8                  // Method io/netty/util/Recycler$WeakOrderQueue$Link."<init>":(Lio/netty/util/Recycler$1;)V
      35: invokestatic  #17                 // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1002:(Lio/netty/util/Recycler$WeakOrderQueue$Link;Lio/netty/util/Recycler$WeakOrderQueue$Link;)Lio/netty/util/Recycler$WeakOrderQueue$Link;
      38: dup
      39: astore_2
      40: putfield      #9                  // Field tail:Lio/netty/util/Recycler$WeakOrderQueue$Link;
      43: aload_2
      44: invokevirtual #16                 // Method io/netty/util/Recycler$WeakOrderQueue$Link.get:()I
      47: istore_3
      48: aload_2
      49: invokestatic  #18                 // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1100:(Lio/netty/util/Recycler$WeakOrderQueue$Link;)[Lio/netty/util/Recycler$DefaultHandle;
      52: iload_3
      53: aload_1
      54: aastore
      55: aload_1
      56: aconst_null
      57: invokestatic  #19                 // Method io/netty/util/Recycler$DefaultHandle.access$202:(Lio/netty/util/Recycler$DefaultHandle;Lio/netty/util/Recycler$Stack;)Lio/netty/util/Recycler$Stack;
      60: pop
      61: aload_2
      62: iload_3
      63: iconst_1
      64: iadd
      65: invokevirtual #20                 // Method io/netty/util/Recycler$WeakOrderQueue$Link.lazySet:(I)V
      68: return

  boolean hasFinalData();
    Code:
       0: aload_0
       1: getfield      #9                  // Field tail:Lio/netty/util/Recycler$WeakOrderQueue$Link;
       4: invokestatic  #21                 // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1200:(Lio/netty/util/Recycler$WeakOrderQueue$Link;)I
       7: aload_0
       8: getfield      #9                  // Field tail:Lio/netty/util/Recycler$WeakOrderQueue$Link;
      11: invokevirtual #16                 // Method io/netty/util/Recycler$WeakOrderQueue$Link.get:()I
      14: if_icmpeq     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  boolean transfer(io.netty.util.Recycler$Stack<?>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field head:Lio/netty/util/Recycler$WeakOrderQueue$Link;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: iconst_0
      10: ireturn
      11: aload_2
      12: invokestatic  #21                 // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1200:(Lio/netty/util/Recycler$WeakOrderQueue$Link;)I
      15: bipush        16
      17: if_icmpne     39
      20: aload_2
      21: invokestatic  #22                 // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1000:(Lio/netty/util/Recycler$WeakOrderQueue$Link;)Lio/netty/util/Recycler$WeakOrderQueue$Link;
      24: ifnonnull     29
      27: iconst_0
      28: ireturn
      29: aload_0
      30: aload_2
      31: invokestatic  #22                 // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1000:(Lio/netty/util/Recycler$WeakOrderQueue$Link;)Lio/netty/util/Recycler$WeakOrderQueue$Link;
      34: dup
      35: astore_2
      36: putfield      #10                 // Field head:Lio/netty/util/Recycler$WeakOrderQueue$Link;
      39: aload_2
      40: invokestatic  #21                 // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1200:(Lio/netty/util/Recycler$WeakOrderQueue$Link;)I
      43: istore_3
      44: aload_2
      45: invokevirtual #16                 // Method io/netty/util/Recycler$WeakOrderQueue$Link.get:()I
      48: istore        4
      50: iload         4
      52: iload_3
      53: isub
      54: istore        5
      56: iload         5
      58: ifne          63
      61: iconst_0
      62: ireturn
      63: aload_1
      64: invokestatic  #23                 // Method io/netty/util/Recycler$Stack.access$400:(Lio/netty/util/Recycler$Stack;)I
      67: istore        6
      69: iload         6
      71: iload         5
      73: iadd
      74: istore        7
      76: iload         7
      78: aload_1
      79: invokestatic  #24                 // Method io/netty/util/Recycler$Stack.access$300:(Lio/netty/util/Recycler$Stack;)[Lio/netty/util/Recycler$DefaultHandle;
      82: arraylength
      83: if_icmple     108
      86: aload_1
      87: iload         7
      89: invokevirtual #25                 // Method io/netty/util/Recycler$Stack.increaseCapacity:(I)I
      92: istore        8
      94: iload_3
      95: iload         8
      97: iadd
      98: iload         6
     100: isub
     101: iload         4
     103: invokestatic  #26                 // Method java/lang/Math.min:(II)I
     106: istore        4
     108: iload_3
     109: iload         4
     111: if_icmpeq     259
     114: aload_2
     115: invokestatic  #18                 // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1100:(Lio/netty/util/Recycler$WeakOrderQueue$Link;)[Lio/netty/util/Recycler$DefaultHandle;
     118: astore        8
     120: aload_1
     121: invokestatic  #24                 // Method io/netty/util/Recycler$Stack.access$300:(Lio/netty/util/Recycler$Stack;)[Lio/netty/util/Recycler$DefaultHandle;
     124: astore        9
     126: iload         6
     128: istore        10
     130: iload_3
     131: istore        11
     133: iload         11
     135: iload         4
     137: if_icmpge     221
     140: aload         8
     142: iload         11
     144: aaload
     145: astore        12
     147: aload         12
     149: invokestatic  #27                 // Method io/netty/util/Recycler$DefaultHandle.access$1300:(Lio/netty/util/Recycler$DefaultHandle;)I
     152: ifne          169
     155: aload         12
     157: aload         12
     159: invokestatic  #28                 // Method io/netty/util/Recycler$DefaultHandle.access$900:(Lio/netty/util/Recycler$DefaultHandle;)I
     162: invokestatic  #29                 // Method io/netty/util/Recycler$DefaultHandle.access$1302:(Lio/netty/util/Recycler$DefaultHandle;I)I
     165: pop
     166: goto          192
     169: aload         12
     171: invokestatic  #27                 // Method io/netty/util/Recycler$DefaultHandle.access$1300:(Lio/netty/util/Recycler$DefaultHandle;)I
     174: aload         12
     176: invokestatic  #28                 // Method io/netty/util/Recycler$DefaultHandle.access$900:(Lio/netty/util/Recycler$DefaultHandle;)I
     179: if_icmpeq     192
     182: new           #30                 // class java/lang/IllegalStateException
     185: dup
     186: ldc           #31                 // String recycled already
     188: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     191: athrow
     192: aload         12
     194: aload_1
     195: invokestatic  #19                 // Method io/netty/util/Recycler$DefaultHandle.access$202:(Lio/netty/util/Recycler$DefaultHandle;Lio/netty/util/Recycler$Stack;)Lio/netty/util/Recycler$Stack;
     198: pop
     199: aload         9
     201: iload         10
     203: iinc          10, 1
     206: aload         12
     208: aastore
     209: aload         8
     211: iload         11
     213: aconst_null
     214: aastore
     215: iinc          11, 1
     218: goto          133
     221: aload_1
     222: iload         10
     224: invokestatic  #33                 // Method io/netty/util/Recycler$Stack.access$402:(Lio/netty/util/Recycler$Stack;I)I
     227: pop
     228: iload         4
     230: bipush        16
     232: if_icmpne     250
     235: aload_2
     236: invokestatic  #22                 // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1000:(Lio/netty/util/Recycler$WeakOrderQueue$Link;)Lio/netty/util/Recycler$WeakOrderQueue$Link;
     239: ifnull        250
     242: aload_0
     243: aload_2
     244: invokestatic  #22                 // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1000:(Lio/netty/util/Recycler$WeakOrderQueue$Link;)Lio/netty/util/Recycler$WeakOrderQueue$Link;
     247: putfield      #10                 // Field head:Lio/netty/util/Recycler$WeakOrderQueue$Link;
     250: aload_2
     251: iload         4
     253: invokestatic  #34                 // Method io/netty/util/Recycler$WeakOrderQueue$Link.access$1202:(Lio/netty/util/Recycler$WeakOrderQueue$Link;I)I
     256: pop
     257: iconst_1
     258: ireturn
     259: iconst_0
     260: ireturn

  static io.netty.util.Recycler$WeakOrderQueue access$1500(io.netty.util.Recycler$WeakOrderQueue);
    Code:
       0: aload_0
       1: getfield      #2                  // Field next:Lio/netty/util/Recycler$WeakOrderQueue;
       4: areturn

  static java.lang.ref.WeakReference access$1600(io.netty.util.Recycler$WeakOrderQueue);
    Code:
       0: aload_0
       1: getfield      #1                  // Field owner:Ljava/lang/ref/WeakReference;
       4: areturn

  static io.netty.util.Recycler$WeakOrderQueue access$1502(io.netty.util.Recycler$WeakOrderQueue, io.netty.util.Recycler$WeakOrderQueue);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field next:Lio/netty/util/Recycler$WeakOrderQueue;
       6: areturn
}
