Compiled from "AbstractOioChannel.java"
public abstract class io.netty.channel.oio.AbstractOioChannel extends io.netty.channel.AbstractChannel {
  protected static final int SO_TIMEOUT;

  private volatile boolean readPending;

  private final java.lang.Runnable readTask;

  protected io.netty.channel.oio.AbstractOioChannel(io.netty.channel.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/netty/channel/AbstractChannel."<init>":(Lio/netty/channel/Channel;)V
       5: aload_0
       6: new           #2                  // class io/netty/channel/oio/AbstractOioChannel$1
       9: dup
      10: aload_0
      11: invokespecial #3                  // Method io/netty/channel/oio/AbstractOioChannel$1."<init>":(Lio/netty/channel/oio/AbstractOioChannel;)V
      14: putfield      #4                  // Field readTask:Ljava/lang/Runnable;
      17: return

  protected io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe();
    Code:
       0: new           #5                  // class io/netty/channel/oio/AbstractOioChannel$DefaultOioUnsafe
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #6                  // Method io/netty/channel/oio/AbstractOioChannel$DefaultOioUnsafe."<init>":(Lio/netty/channel/oio/AbstractOioChannel;Lio/netty/channel/oio/AbstractOioChannel$1;)V
       9: areturn

  protected boolean isCompatible(io.netty.channel.EventLoop);
    Code:
       0: aload_1
       1: instanceof    #7                  // class io/netty/channel/ThreadPerChannelEventLoop
       4: ireturn

  protected abstract void doConnect(java.net.SocketAddress, java.net.SocketAddress) throws java.lang.Exception;

  protected void doBeginRead() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method isReadPending:()Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: invokevirtual #9                  // Method setReadPending:(Z)V
      13: aload_0
      14: invokevirtual #10                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      17: aload_0
      18: getfield      #4                  // Field readTask:Ljava/lang/Runnable;
      21: invokeinterface #11,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      26: return

  protected abstract void doRead();

  protected boolean isReadPending();
    Code:
       0: aload_0
       1: getfield      #12                 // Field readPending:Z
       4: ireturn

  protected void setReadPending(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field readPending:Z
       5: return
}
