Compiled from "FixedChannelPool.java"
class io.netty.channel.pool.FixedChannelPool$4 implements io.netty.util.concurrent.FutureListener<java.lang.Void> {
  static final boolean $assertionsDisabled;

  final io.netty.util.concurrent.Promise val$promise;

  final io.netty.channel.pool.FixedChannelPool this$0;

  io.netty.channel.pool.FixedChannelPool$4(io.netty.channel.pool.FixedChannelPool, io.netty.util.concurrent.Promise);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$promise:Lio/netty/util/concurrent/Promise;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void operationComplete(io.netty.util.concurrent.Future<java.lang.Void>) throws java.lang.Exception;
    Code:
       0: getstatic     #4                  // Field $assertionsDisabled:Z
       3: ifne          29
       6: aload_0
       7: getfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
      10: invokestatic  #5                  // Method io/netty/channel/pool/FixedChannelPool.access$400:(Lio/netty/channel/pool/FixedChannelPool;)Lio/netty/util/concurrent/EventExecutor;
      13: invokeinterface #6,  1            // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      18: ifne          29
      21: new           #7                  // class java/lang/AssertionError
      24: dup
      25: invokespecial #8                  // Method java/lang/AssertionError."<init>":()V
      28: athrow
      29: aload_1
      30: invokeinterface #9,  1            // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
      35: ifeq          59
      38: aload_0
      39: getfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
      42: invokestatic  #10                 // Method io/netty/channel/pool/FixedChannelPool.access$500:(Lio/netty/channel/pool/FixedChannelPool;)V
      45: aload_0
      46: getfield      #2                  // Field val$promise:Lio/netty/util/concurrent/Promise;
      49: aconst_null
      50: invokeinterface #11,  2           // InterfaceMethod io/netty/util/concurrent/Promise.setSuccess:(Ljava/lang/Object;)Lio/netty/util/concurrent/Promise;
      55: pop
      56: goto          96
      59: aload_1
      60: invokeinterface #12,  1           // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
      65: astore_2
      66: aload_2
      67: instanceof    #13                 // class java/lang/IllegalArgumentException
      70: ifne          80
      73: aload_0
      74: getfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
      77: invokestatic  #10                 // Method io/netty/channel/pool/FixedChannelPool.access$500:(Lio/netty/channel/pool/FixedChannelPool;)V
      80: aload_0
      81: getfield      #2                  // Field val$promise:Lio/netty/util/concurrent/Promise;
      84: aload_1
      85: invokeinterface #12,  1           // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
      90: invokeinterface #14,  2           // InterfaceMethod io/netty/util/concurrent/Promise.setFailure:(Ljava/lang/Throwable;)Lio/netty/util/concurrent/Promise;
      95: pop
      96: return

  static {};
    Code:
       0: ldc_w         #15                 // class io/netty/channel/pool/FixedChannelPool
       3: invokevirtual #16                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #4                  // Field $assertionsDisabled:Z
      17: return
}
