Compiled from "SpdyOrHttpChooser.java"
public abstract class io.netty.handler.codec.spdy.SpdyOrHttpChooser extends io.netty.handler.codec.ByteToMessageDecoder {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  protected io.netty.handler.codec.spdy.SpdyOrHttpChooser();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/netty/handler/codec/ByteToMessageDecoder."<init>":()V
       4: return

  protected void decode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List<java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method configurePipeline:(Lio/netty/channel/ChannelHandlerContext;)Z
       5: ifeq          21
       8: aload_1
       9: invokeinterface #3,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
      14: aload_0
      15: invokeinterface #4,  2            // InterfaceMethod io/netty/channel/ChannelPipeline.remove:(Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      20: pop
      21: return

  private boolean configurePipeline(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: invokeinterface #3,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
       6: ldc_w         #5                  // class io/netty/handler/ssl/SslHandler
       9: invokeinterface #6,  2            // InterfaceMethod io/netty/channel/ChannelPipeline.get:(Ljava/lang/Class;)Lio/netty/channel/ChannelHandler;
      14: checkcast     #5                  // class io/netty/handler/ssl/SslHandler
      17: astore_2
      18: aload_2
      19: ifnonnull     32
      22: new           #7                  // class java/lang/IllegalStateException
      25: dup
      26: ldc           #8                  // String cannot find a SslHandler in the pipeline (required for SPDY)
      28: invokespecial #9                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_2
      33: invokevirtual #10                 // Method io/netty/handler/ssl/SslHandler.handshakeFuture:()Lio/netty/util/concurrent/Future;
      36: invokeinterface #11,  1           // InterfaceMethod io/netty/util/concurrent/Future.isDone:()Z
      41: ifne          46
      44: iconst_0
      45: ireturn
      46: aload_0
      47: aload_2
      48: invokevirtual #12                 // Method selectProtocol:(Lio/netty/handler/ssl/SslHandler;)Lio/netty/handler/codec/spdy/SpdyOrHttpChooser$SelectedProtocol;
      51: astore_3
      52: goto          69
      55: astore        4
      57: new           #7                  // class java/lang/IllegalStateException
      60: dup
      61: ldc           #14                 // String failed to get the selected protocol
      63: aload         4
      65: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      68: athrow
      69: aload_3
      70: ifnonnull     83
      73: new           #7                  // class java/lang/IllegalStateException
      76: dup
      77: ldc           #16                 // String unknown protocol
      79: invokespecial #9                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      82: athrow
      83: getstatic     #17                 // Field io/netty/handler/codec/spdy/SpdyOrHttpChooser$1.$SwitchMap$io$netty$handler$codec$spdy$SpdyOrHttpChooser$SelectedProtocol:[I
      86: aload_3
      87: invokevirtual #18                 // Method io/netty/handler/codec/spdy/SpdyOrHttpChooser$SelectedProtocol.ordinal:()I
      90: iaload
      91: tableswitch   { // 1 to 3
                     1: 116
                     2: 141
                     3: 141
               default: 163
          }
     116: aload_0
     117: aload_1
     118: getstatic     #19                 // Field io/netty/handler/codec/spdy/SpdyVersion.SPDY_3_1:Lio/netty/handler/codec/spdy/SpdyVersion;
     121: invokevirtual #20                 // Method configureSpdy:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/spdy/SpdyVersion;)V
     124: goto          163
     127: astore        4
     129: new           #7                  // class java/lang/IllegalStateException
     132: dup
     133: ldc           #21                 // String failed to configure a SPDY pipeline
     135: aload         4
     137: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     140: athrow
     141: aload_0
     142: aload_1
     143: invokevirtual #22                 // Method configureHttp1:(Lio/netty/channel/ChannelHandlerContext;)V
     146: goto          163
     149: astore        4
     151: new           #7                  // class java/lang/IllegalStateException
     154: dup
     155: ldc           #23                 // String failed to configure a HTTP/1 pipeline
     157: aload         4
     159: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     162: athrow
     163: iconst_1
     164: ireturn
    Exception table:
       from    to  target type
          46    52    55   Class java/lang/Exception
         116   124   127   Class java/lang/Exception
         141   146   149   Class java/lang/Exception

  protected io.netty.handler.codec.spdy.SpdyOrHttpChooser$SelectedProtocol selectProtocol(io.netty.handler.ssl.SslHandler) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #24                 // Method io/netty/handler/ssl/SslHandler.applicationProtocol:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ifnull        16
       9: aload_2
      10: invokestatic  #25                 // Method io/netty/handler/codec/spdy/SpdyOrHttpChooser$SelectedProtocol.protocol:(Ljava/lang/String;)Lio/netty/handler/codec/spdy/SpdyOrHttpChooser$SelectedProtocol;
      13: goto          19
      16: getstatic     #26                 // Field io/netty/handler/codec/spdy/SpdyOrHttpChooser$SelectedProtocol.HTTP_1_1:Lio/netty/handler/codec/spdy/SpdyOrHttpChooser$SelectedProtocol;
      19: areturn

  protected abstract void configureSpdy(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.spdy.SpdyVersion) throws java.lang.Exception;

  protected abstract void configureHttp1(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;

  public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: getstatic     #27                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: ldc           #28                 // String {} Failed to select the application-level protocol:
       5: aload_1
       6: invokeinterface #29,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      11: aload_2
      12: invokeinterface #30,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      17: aload_1
      18: invokeinterface #31,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
      23: pop
      24: return

  static {};
    Code:
       0: ldc_w         #32                 // class io/netty/handler/codec/spdy/SpdyOrHttpChooser
       3: invokestatic  #33                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       6: putstatic     #27                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       9: return
}
