Compiled from "RequestBufferingHandler.java"
class io.undertow.server.handlers.RequestBufferingHandler$1 implements org.xnio.ChannelListener<org.xnio.channels.StreamSourceChannel> {
  io.undertow.connector.PooledByteBuffer buffer;

  int readBuffers;

  final io.undertow.connector.PooledByteBuffer val$finalBuffer;

  final int val$finalReadBuffers;

  final io.undertow.connector.PooledByteBuffer[] val$bufferedData;

  final io.undertow.server.HttpServerExchange val$exchange;

  final io.undertow.server.handlers.RequestBufferingHandler this$0;

  io.undertow.server.handlers.RequestBufferingHandler$1(io.undertow.server.handlers.RequestBufferingHandler, io.undertow.connector.PooledByteBuffer, int, io.undertow.connector.PooledByteBuffer[], io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/server/handlers/RequestBufferingHandler;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$finalBuffer:Lio/undertow/connector/PooledByteBuffer;
      10: aload_0
      11: iload_3
      12: putfield      #3                  // Field val$finalReadBuffers:I
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$bufferedData:[Lio/undertow/connector/PooledByteBuffer;
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
      27: aload_0
      28: invokespecial #6                  // Method java/lang/Object."<init>":()V
      31: aload_0
      32: aload_0
      33: getfield      #2                  // Field val$finalBuffer:Lio/undertow/connector/PooledByteBuffer;
      36: putfield      #7                  // Field buffer:Lio/undertow/connector/PooledByteBuffer;
      39: aload_0
      40: aload_0
      41: getfield      #3                  // Field val$finalReadBuffers:I
      44: putfield      #8                  // Field readBuffers:I
      47: return

  public void handleEvent(org.xnio.channels.StreamSourceChannel);
    Code:
       0: aload_0
       1: getfield      #7                  // Field buffer:Lio/undertow/connector/PooledByteBuffer;
       4: invokeinterface #9,  1            // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
       9: astore_3
      10: aload_1
      11: aload_3
      12: invokeinterface #10,  2           // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
      17: istore_2
      18: iload_2
      19: iconst_m1
      20: if_icmpne     105
      23: aload_3
      24: invokevirtual #11                 // Method java/nio/ByteBuffer.position:()I
      27: ifne          42
      30: aload_0
      31: getfield      #7                  // Field buffer:Lio/undertow/connector/PooledByteBuffer;
      34: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      39: goto          60
      42: aload_3
      43: invokevirtual #13                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      46: pop
      47: aload_0
      48: getfield      #4                  // Field val$bufferedData:[Lio/undertow/connector/PooledByteBuffer;
      51: aload_0
      52: getfield      #8                  // Field readBuffers:I
      55: aload_0
      56: getfield      #7                  // Field buffer:Lio/undertow/connector/PooledByteBuffer;
      59: aastore
      60: aload_0
      61: getfield      #5                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
      64: aload_0
      65: getfield      #4                  // Field val$bufferedData:[Lio/undertow/connector/PooledByteBuffer;
      68: invokestatic  #14                 // Method io/undertow/server/Connectors.ungetRequestBytes:(Lio/undertow/server/HttpServerExchange;[Lio/undertow/connector/PooledByteBuffer;)V
      71: aload_0
      72: getfield      #5                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
      75: invokestatic  #15                 // Method io/undertow/server/Connectors.resetRequestChannel:(Lio/undertow/server/HttpServerExchange;)V
      78: aload_0
      79: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/RequestBufferingHandler;
      82: invokestatic  #16                 // Method io/undertow/server/handlers/RequestBufferingHandler.access$000:(Lio/undertow/server/handlers/RequestBufferingHandler;)Lio/undertow/server/HttpHandler;
      85: aload_0
      86: getfield      #5                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
      89: invokestatic  #17                 // Method io/undertow/server/Connectors.executeRootHandler:(Lio/undertow/server/HttpHandler;Lio/undertow/server/HttpServerExchange;)V
      92: aload_1
      93: invokeinterface #18,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
      98: aconst_null
      99: invokeinterface #19,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     104: return
     105: iload_2
     106: ifne          110
     109: return
     110: aload_3
     111: invokevirtual #20                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     114: ifne          220
     117: aload_3
     118: invokevirtual #13                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     121: pop
     122: aload_0
     123: getfield      #4                  // Field val$bufferedData:[Lio/undertow/connector/PooledByteBuffer;
     126: aload_0
     127: dup
     128: getfield      #8                  // Field readBuffers:I
     131: dup_x1
     132: iconst_1
     133: iadd
     134: putfield      #8                  // Field readBuffers:I
     137: aload_0
     138: getfield      #7                  // Field buffer:Lio/undertow/connector/PooledByteBuffer;
     141: aastore
     142: aload_0
     143: getfield      #8                  // Field readBuffers:I
     146: aload_0
     147: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/RequestBufferingHandler;
     150: invokestatic  #21                 // Method io/undertow/server/handlers/RequestBufferingHandler.access$100:(Lio/undertow/server/handlers/RequestBufferingHandler;)I
     153: if_icmpne     201
     156: aload_0
     157: getfield      #5                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
     160: aload_0
     161: getfield      #4                  // Field val$bufferedData:[Lio/undertow/connector/PooledByteBuffer;
     164: invokestatic  #14                 // Method io/undertow/server/Connectors.ungetRequestBytes:(Lio/undertow/server/HttpServerExchange;[Lio/undertow/connector/PooledByteBuffer;)V
     167: aload_0
     168: getfield      #5                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
     171: invokestatic  #15                 // Method io/undertow/server/Connectors.resetRequestChannel:(Lio/undertow/server/HttpServerExchange;)V
     174: aload_0
     175: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/RequestBufferingHandler;
     178: invokestatic  #16                 // Method io/undertow/server/handlers/RequestBufferingHandler.access$000:(Lio/undertow/server/handlers/RequestBufferingHandler;)Lio/undertow/server/HttpHandler;
     181: aload_0
     182: getfield      #5                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
     185: invokestatic  #17                 // Method io/undertow/server/Connectors.executeRootHandler:(Lio/undertow/server/HttpHandler;Lio/undertow/server/HttpServerExchange;)V
     188: aload_1
     189: invokeinterface #18,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
     194: aconst_null
     195: invokeinterface #19,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     200: return
     201: aload_0
     202: aload_0
     203: getfield      #5                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
     206: invokevirtual #22                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     209: invokevirtual #23                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
     212: invokeinterface #24,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     217: putfield      #7                  // Field buffer:Lio/undertow/connector/PooledByteBuffer;
     220: goto          0
     223: astore_2
     224: getstatic     #26                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     227: aload_2
     228: invokeinterface #27,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
     233: iconst_0
     234: istore_3
     235: iload_3
     236: aload_0
     237: getfield      #4                  // Field val$bufferedData:[Lio/undertow/connector/PooledByteBuffer;
     240: arraylength
     241: if_icmpge     259
     244: aload_0
     245: getfield      #4                  // Field val$bufferedData:[Lio/undertow/connector/PooledByteBuffer;
     248: iload_3
     249: aaload
     250: invokestatic  #28                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     253: iinc          3, 1
     256: goto          235
     259: aload_0
     260: getfield      #5                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
     263: invokevirtual #29                 // Method io/undertow/server/HttpServerExchange.endExchange:()Lio/undertow/server/HttpServerExchange;
     266: pop
     267: return
    Exception table:
       from    to  target type
           0   104   223   Class java/io/IOException
         105   109   223   Class java/io/IOException
         110   200   223   Class java/io/IOException
         201   223   223   Class java/io/IOException

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #30                 // class org/xnio/channels/StreamSourceChannel
       5: invokevirtual #31                 // Method handleEvent:(Lorg/xnio/channels/StreamSourceChannel;)V
       8: return
}
