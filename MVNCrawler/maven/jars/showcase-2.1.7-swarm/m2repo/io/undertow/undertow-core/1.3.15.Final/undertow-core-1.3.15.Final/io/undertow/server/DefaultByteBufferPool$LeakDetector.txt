Compiled from "DefaultByteBufferPool.java"
class io.undertow.server.DefaultByteBufferPool$LeakDetector {
  volatile boolean closed;

  private final java.lang.Throwable allocationPoint;

  private io.undertow.server.DefaultByteBufferPool$LeakDetector();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field closed:Z
       9: aload_0
      10: new           #4                  // class java/lang/Throwable
      13: dup
      14: ldc           #5                  // String Buffer leak detected
      16: invokespecial #6                  // Method java/lang/Throwable."<init>":(Ljava/lang/String;)V
      19: putfield      #7                  // Field allocationPoint:Ljava/lang/Throwable;
      22: return

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object.finalize:()V
       4: aload_0
       5: getfield      #3                  // Field closed:Z
       8: ifne          18
      11: aload_0
      12: getfield      #7                  // Field allocationPoint:Ljava/lang/Throwable;
      15: invokevirtual #9                  // Method java/lang/Throwable.printStackTrace:()V
      18: return

  io.undertow.server.DefaultByteBufferPool$LeakDetector(io.undertow.server.DefaultByteBufferPool$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
