Compiled from "NodePingUtil.java"
class io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$RequestExchangeListener extends io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$CancellableTask implements io.undertow.client.ClientCallback<io.undertow.client.ClientExchange> {
  private io.undertow.client.ClientExchange exchange;

  private final boolean closeConnection;

  private final io.undertow.server.handlers.proxy.mod_cluster.NodeHealthChecker healthChecker;

  static final boolean $assertionsDisabled;

  io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$RequestExchangeListener(io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$PingCallback, io.undertow.server.handlers.proxy.mod_cluster.NodeHealthChecker, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$CancellableTask."<init>":(Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$PingCallback;)V
       5: getstatic     #5                  // Field $assertionsDisabled:Z
       8: ifne          23
      11: aload_2
      12: ifnonnull     23
      15: new           #6                  // class java/lang/AssertionError
      18: dup
      19: invokespecial #7                  // Method java/lang/AssertionError."<init>":()V
      22: athrow
      23: aload_0
      24: iload_3
      25: putfield      #1                  // Field closeConnection:Z
      28: aload_0
      29: aload_2
      30: putfield      #2                  // Field healthChecker:Lio/undertow/server/handlers/proxy/mod_cluster/NodeHealthChecker;
      33: return

  public void completed(io.undertow.client.ClientExchange);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method isDone:()Z
       4: ifeq          17
       7: aload_1
       8: invokeinterface #9,  1            // InterfaceMethod io/undertow/client/ClientExchange.getConnection:()Lio/undertow/client/ClientConnection;
      13: invokestatic  #10                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      16: return
      17: ldc2_w        #12                 // long 9223372036854775807l
      20: new           #14                 // class io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener$1
      23: dup
      24: aload_0
      25: aload_1
      26: invokespecial #15                 // Method io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener$1."<init>":(Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener;Lio/undertow/client/ClientExchange;)V
      29: new           #16                 // class io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener$2
      32: dup
      33: aload_0
      34: invokespecial #17                 // Method io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener$2."<init>":(Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$RequestExchangeListener;)V
      37: invokestatic  #18                 // Method org/xnio/ChannelListeners.drainListener:(JLorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
      40: astore_2
      41: aload_1
      42: invokeinterface #19,  1           // InterfaceMethod io/undertow/client/ClientExchange.getResponseChannel:()Lorg/xnio/channels/StreamSourceChannel;
      47: astore_3
      48: aload_3
      49: invokeinterface #20,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
      54: aload_2
      55: invokeinterface #21,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      60: aload_3
      61: invokeinterface #22,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.resumeReads:()V
      66: aload_2
      67: aload_3
      68: invokeinterface #23,  2           // InterfaceMethod org/xnio/ChannelListener.handleEvent:(Ljava/nio/channels/Channel;)V
      73: return

  public void failed(java.io.IOException);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method taskFailed:()V
       4: aload_0
       5: getfield      #3                  // Field exchange:Lio/undertow/client/ClientExchange;
       8: ifnull        23
      11: aload_0
      12: getfield      #3                  // Field exchange:Lio/undertow/client/ClientExchange;
      15: invokeinterface #9,  1            // InterfaceMethod io/undertow/client/ClientExchange.getConnection:()Lio/undertow/client/ClientConnection;
      20: invokestatic  #10                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      23: return

  public void completed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class io/undertow/client/ClientExchange
       5: invokevirtual #26                 // Method completed:(Lio/undertow/client/ClientExchange;)V
       8: return

  static io.undertow.client.ClientExchange access$302(io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$RequestExchangeListener, io.undertow.client.ClientExchange);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field exchange:Lio/undertow/client/ClientExchange;
       6: areturn

  static io.undertow.server.handlers.proxy.mod_cluster.NodeHealthChecker access$500(io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$RequestExchangeListener);
    Code:
       0: aload_0
       1: getfield      #2                  // Field healthChecker:Lio/undertow/server/handlers/proxy/mod_cluster/NodeHealthChecker;
       4: areturn

  static boolean access$600(io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$RequestExchangeListener);
    Code:
       0: aload_0
       1: getfield      #1                  // Field closeConnection:Z
       4: ireturn

  static io.undertow.client.ClientExchange access$300(io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$RequestExchangeListener);
    Code:
       0: aload_0
       1: getfield      #3                  // Field exchange:Lio/undertow/client/ClientExchange;
       4: areturn

  static {};
    Code:
       0: ldc           #27                 // class io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil
       2: invokevirtual #28                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #5                  // Field $assertionsDisabled:Z
      16: return
}
