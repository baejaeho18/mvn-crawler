Compiled from "MultipartParser.java"
public class io.undertow.util.MultipartParser$ParseState {
  private final io.undertow.connector.ByteBufferPool bufferPool;

  private final io.undertow.util.MultipartParser$PartHandler partHandler;

  private final java.lang.String requestCharset;

  private final byte[] boundary;

  private volatile int state;

  private volatile int subState;

  private volatile java.io.ByteArrayOutputStream currentString;

  private volatile java.lang.String currentHeaderName;

  private volatile io.undertow.util.HeaderMap headers;

  private volatile io.undertow.util.MultipartParser$Encoding encodingHandler;

  public io.undertow.util.MultipartParser$ParseState(io.undertow.connector.ByteBufferPool, io.undertow.util.MultipartParser$PartHandler, java.lang.String, byte[]);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field state:I
       9: aload_0
      10: ldc           #5                  // int 2147483647
      12: putfield      #6                  // Field subState:I
      15: aload_0
      16: aconst_null
      17: putfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
      20: aload_0
      21: aconst_null
      22: putfield      #8                  // Field currentHeaderName:Ljava/lang/String;
      25: aload_0
      26: aload_1
      27: putfield      #9                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      30: aload_0
      31: aload_2
      32: putfield      #10                 // Field partHandler:Lio/undertow/util/MultipartParser$PartHandler;
      35: aload_0
      36: aload_3
      37: putfield      #11                 // Field requestCharset:Ljava/lang/String;
      40: aload_0
      41: aload         4
      43: putfield      #12                 // Field boundary:[B
      46: return

  public void parse(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          107
       7: aload_0
       8: getfield      #3                  // Field state:I
      11: tableswitch   { // -1 to 3
                    -1: 76
                     0: 44
                     1: 52
                     2: 60
                     3: 68
               default: 77
          }
      44: aload_0
      45: aload_1
      46: invokespecial #14                 // Method preamble:(Ljava/nio/ByteBuffer;)V
      49: goto          0
      52: aload_0
      53: aload_1
      54: invokespecial #15                 // Method headerName:(Ljava/nio/ByteBuffer;)V
      57: goto          0
      60: aload_0
      61: aload_1
      62: invokespecial #16                 // Method headerValue:(Ljava/nio/ByteBuffer;)V
      65: goto          0
      68: aload_0
      69: aload_1
      70: invokespecial #17                 // Method entity:(Ljava/nio/ByteBuffer;)V
      73: goto          0
      76: return
      77: new           #18                 // class java/lang/IllegalStateException
      80: dup
      81: new           #19                 // class java/lang/StringBuilder
      84: dup
      85: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      88: ldc           #21                 // String
      90: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload_0
      94: getfield      #3                  // Field state:I
      97: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     100: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: invokespecial #25                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     106: athrow
     107: return

  private void preamble(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          188
       7: aload_1
       8: invokevirtual #26                 // Method java/nio/ByteBuffer.get:()B
      11: istore_2
      12: aload_0
      13: getfield      #6                  // Field subState:I
      16: iflt          120
      19: aload_0
      20: getfield      #6                  // Field subState:I
      23: ldc           #5                  // int 2147483647
      25: if_icmpne     51
      28: aload_0
      29: getfield      #12                 // Field boundary:[B
      32: iconst_2
      33: baload
      34: iload_2
      35: if_icmpne     46
      38: aload_0
      39: iconst_2
      40: putfield      #6                  // Field subState:I
      43: goto          51
      46: aload_0
      47: iconst_0
      48: putfield      #6                  // Field subState:I
      51: iload_2
      52: aload_0
      53: getfield      #12                 // Field boundary:[B
      56: aload_0
      57: getfield      #6                  // Field subState:I
      60: baload
      61: if_icmpne     94
      64: aload_0
      65: dup
      66: getfield      #6                  // Field subState:I
      69: iconst_1
      70: iadd
      71: putfield      #6                  // Field subState:I
      74: aload_0
      75: getfield      #6                  // Field subState:I
      78: aload_0
      79: getfield      #12                 // Field boundary:[B
      82: arraylength
      83: if_icmpne     185
      86: aload_0
      87: iconst_m1
      88: putfield      #6                  // Field subState:I
      91: goto          185
      94: iload_2
      95: aload_0
      96: getfield      #12                 // Field boundary:[B
      99: iconst_0
     100: baload
     101: if_icmpne     112
     104: aload_0
     105: iconst_1
     106: putfield      #6                  // Field subState:I
     109: goto          185
     112: aload_0
     113: iconst_0
     114: putfield      #6                  // Field subState:I
     117: goto          185
     120: aload_0
     121: getfield      #6                  // Field subState:I
     124: iconst_m1
     125: if_icmpne     143
     128: iload_2
     129: bipush        13
     131: if_icmpne     185
     134: aload_0
     135: bipush        -2
     137: putfield      #6                  // Field subState:I
     140: goto          185
     143: aload_0
     144: getfield      #6                  // Field subState:I
     147: bipush        -2
     149: if_icmpne     185
     152: iload_2
     153: bipush        10
     155: if_icmpne     180
     158: aload_0
     159: iconst_0
     160: putfield      #6                  // Field subState:I
     163: aload_0
     164: iconst_1
     165: putfield      #3                  // Field state:I
     168: aload_0
     169: new           #27                 // class io/undertow/util/HeaderMap
     172: dup
     173: invokespecial #28                 // Method io/undertow/util/HeaderMap."<init>":()V
     176: putfield      #29                 // Field headers:Lio/undertow/util/HeaderMap;
     179: return
     180: aload_0
     181: iconst_m1
     182: putfield      #6                  // Field subState:I
     185: goto          0
     188: return

  private void headerName(java.nio.ByteBuffer) throws io.undertow.util.MalformedMessageException, java.io.UnsupportedEncodingException;
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          309
       7: aload_1
       8: invokevirtual #26                 // Method java/nio/ByteBuffer.get:()B
      11: istore_2
      12: iload_2
      13: bipush        58
      15: if_icmpne     80
      18: aload_0
      19: getfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
      22: ifnull        32
      25: aload_0
      26: getfield      #6                  // Field subState:I
      29: ifeq          40
      32: new           #30                 // class io/undertow/util/MalformedMessageException
      35: dup
      36: invokespecial #31                 // Method io/undertow/util/MalformedMessageException."<init>":()V
      39: athrow
      40: aload_0
      41: new           #32                 // class java/lang/String
      44: dup
      45: aload_0
      46: getfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
      49: invokevirtual #33                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      52: aload_0
      53: getfield      #11                 // Field requestCharset:Ljava/lang/String;
      56: invokespecial #34                 // Method java/lang/String."<init>":([BLjava/lang/String;)V
      59: putfield      #8                  // Field currentHeaderName:Ljava/lang/String;
      62: aload_0
      63: getfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
      66: invokevirtual #35                 // Method java/io/ByteArrayOutputStream.reset:()V
      69: aload_0
      70: iconst_0
      71: putfield      #6                  // Field subState:I
      74: aload_0
      75: iconst_2
      76: putfield      #3                  // Field state:I
      79: return
      80: iload_2
      81: bipush        13
      83: if_icmpne     109
      86: aload_0
      87: getfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
      90: ifnull        101
      93: new           #30                 // class io/undertow/util/MalformedMessageException
      96: dup
      97: invokespecial #31                 // Method io/undertow/util/MalformedMessageException."<init>":()V
     100: athrow
     101: aload_0
     102: iconst_1
     103: putfield      #6                  // Field subState:I
     106: goto          306
     109: iload_2
     110: bipush        10
     112: if_icmpne     265
     115: aload_0
     116: getfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
     119: ifnonnull     130
     122: aload_0
     123: getfield      #6                  // Field subState:I
     126: iconst_1
     127: if_icmpeq     138
     130: new           #30                 // class io/undertow/util/MalformedMessageException
     133: dup
     134: invokespecial #31                 // Method io/undertow/util/MalformedMessageException."<init>":()V
     137: athrow
     138: aload_0
     139: iconst_3
     140: putfield      #3                  // Field state:I
     143: aload_0
     144: iconst_0
     145: putfield      #6                  // Field subState:I
     148: aload_0
     149: getfield      #10                 // Field partHandler:Lio/undertow/util/MultipartParser$PartHandler;
     152: aload_0
     153: getfield      #29                 // Field headers:Lio/undertow/util/HeaderMap;
     156: invokeinterface #36,  2           // InterfaceMethod io/undertow/util/MultipartParser$PartHandler.beginPart:(Lio/undertow/util/HeaderMap;)V
     161: aload_0
     162: getfield      #29                 // Field headers:Lio/undertow/util/HeaderMap;
     165: getstatic     #37                 // Field io/undertow/util/Headers.CONTENT_TRANSFER_ENCODING:Lio/undertow/util/HttpString;
     168: invokevirtual #38                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     171: astore_3
     172: aload_3
     173: ifnonnull     191
     176: aload_0
     177: new           #39                 // class io/undertow/util/MultipartParser$IdentityEncoding
     180: dup
     181: aconst_null
     182: invokespecial #40                 // Method io/undertow/util/MultipartParser$IdentityEncoding."<init>":(Lio/undertow/util/MultipartParser$1;)V
     185: putfield      #41                 // Field encodingHandler:Lio/undertow/util/MultipartParser$Encoding;
     188: goto          259
     191: aload_3
     192: ldc           #42                 // String base64
     194: invokevirtual #43                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     197: ifeq          219
     200: aload_0
     201: new           #44                 // class io/undertow/util/MultipartParser$Base64Encoding
     204: dup
     205: aload_0
     206: getfield      #9                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     209: aconst_null
     210: invokespecial #45                 // Method io/undertow/util/MultipartParser$Base64Encoding."<init>":(Lio/undertow/connector/ByteBufferPool;Lio/undertow/util/MultipartParser$1;)V
     213: putfield      #41                 // Field encodingHandler:Lio/undertow/util/MultipartParser$Encoding;
     216: goto          259
     219: aload_3
     220: ldc           #46                 // String quoted-printable
     222: invokevirtual #43                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     225: ifeq          247
     228: aload_0
     229: new           #47                 // class io/undertow/util/MultipartParser$QuotedPrintableEncoding
     232: dup
     233: aload_0
     234: getfield      #9                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     237: aconst_null
     238: invokespecial #48                 // Method io/undertow/util/MultipartParser$QuotedPrintableEncoding."<init>":(Lio/undertow/connector/ByteBufferPool;Lio/undertow/util/MultipartParser$1;)V
     241: putfield      #41                 // Field encodingHandler:Lio/undertow/util/MultipartParser$Encoding;
     244: goto          259
     247: aload_0
     248: new           #39                 // class io/undertow/util/MultipartParser$IdentityEncoding
     251: dup
     252: aconst_null
     253: invokespecial #40                 // Method io/undertow/util/MultipartParser$IdentityEncoding."<init>":(Lio/undertow/util/MultipartParser$1;)V
     256: putfield      #41                 // Field encodingHandler:Lio/undertow/util/MultipartParser$Encoding;
     259: aload_0
     260: aconst_null
     261: putfield      #29                 // Field headers:Lio/undertow/util/HeaderMap;
     264: return
     265: aload_0
     266: getfield      #6                  // Field subState:I
     269: ifeq          280
     272: new           #30                 // class io/undertow/util/MalformedMessageException
     275: dup
     276: invokespecial #31                 // Method io/undertow/util/MalformedMessageException."<init>":()V
     279: athrow
     280: aload_0
     281: getfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
     284: ifnonnull     298
     287: aload_0
     288: new           #49                 // class java/io/ByteArrayOutputStream
     291: dup
     292: invokespecial #50                 // Method java/io/ByteArrayOutputStream."<init>":()V
     295: putfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
     298: aload_0
     299: getfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
     302: iload_2
     303: invokevirtual #51                 // Method java/io/ByteArrayOutputStream.write:(I)V
     306: goto          0
     309: return

  private void headerValue(java.nio.ByteBuffer) throws io.undertow.util.MalformedMessageException, java.io.UnsupportedEncodingException;
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          133
       7: aload_1
       8: invokevirtual #26                 // Method java/nio/ByteBuffer.get:()B
      11: istore_2
      12: iload_2
      13: bipush        13
      15: if_icmpne     26
      18: aload_0
      19: iconst_1
      20: putfield      #6                  // Field subState:I
      23: goto          130
      26: iload_2
      27: bipush        10
      29: if_icmpne     107
      32: aload_0
      33: getfield      #6                  // Field subState:I
      36: iconst_1
      37: if_icmpeq     48
      40: new           #30                 // class io/undertow/util/MalformedMessageException
      43: dup
      44: invokespecial #31                 // Method io/undertow/util/MalformedMessageException."<init>":()V
      47: athrow
      48: aload_0
      49: getfield      #29                 // Field headers:Lio/undertow/util/HeaderMap;
      52: new           #52                 // class io/undertow/util/HttpString
      55: dup
      56: aload_0
      57: getfield      #8                  // Field currentHeaderName:Ljava/lang/String;
      60: invokevirtual #53                 // Method java/lang/String.trim:()Ljava/lang/String;
      63: invokespecial #54                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      66: new           #32                 // class java/lang/String
      69: dup
      70: aload_0
      71: getfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
      74: invokevirtual #33                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      77: aload_0
      78: getfield      #11                 // Field requestCharset:Ljava/lang/String;
      81: invokespecial #34                 // Method java/lang/String."<init>":([BLjava/lang/String;)V
      84: invokevirtual #53                 // Method java/lang/String.trim:()Ljava/lang/String;
      87: invokevirtual #55                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      90: pop
      91: aload_0
      92: iconst_1
      93: putfield      #3                  // Field state:I
      96: aload_0
      97: iconst_0
      98: putfield      #6                  // Field subState:I
     101: aload_0
     102: aconst_null
     103: putfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
     106: return
     107: aload_0
     108: getfield      #6                  // Field subState:I
     111: ifeq          122
     114: new           #30                 // class io/undertow/util/MalformedMessageException
     117: dup
     118: invokespecial #31                 // Method io/undertow/util/MalformedMessageException."<init>":()V
     121: athrow
     122: aload_0
     123: getfield      #7                  // Field currentString:Ljava/io/ByteArrayOutputStream;
     126: iload_2
     127: invokevirtual #51                 // Method java/io/ByteArrayOutputStream.write:(I)V
     130: goto          0
     133: return

  private void entity(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field subState:I
       4: istore_2
       5: aload_1
       6: invokevirtual #56                 // Method java/nio/ByteBuffer.position:()I
       9: istore_3
      10: aload_1
      11: invokevirtual #13                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      14: ifeq          348
      17: aload_1
      18: invokevirtual #26                 // Method java/nio/ByteBuffer.get:()B
      21: istore        4
      23: aload_0
      24: getfield      #6                  // Field subState:I
      27: iflt          216
      30: iload         4
      32: aload_0
      33: getfield      #12                 // Field boundary:[B
      36: aload_0
      37: getfield      #6                  // Field subState:I
      40: baload
      41: if_icmpne     133
      44: aload_0
      45: dup
      46: getfield      #6                  // Field subState:I
      49: iconst_1
      50: iadd
      51: putfield      #6                  // Field subState:I
      54: aload_0
      55: getfield      #6                  // Field subState:I
      58: aload_0
      59: getfield      #12                 // Field boundary:[B
      62: arraylength
      63: if_icmpne     345
      66: iconst_0
      67: istore_2
      68: aload_1
      69: invokevirtual #57                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      72: astore        5
      74: aload         5
      76: iload_3
      77: invokevirtual #58                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      80: pop
      81: aload         5
      83: aload_1
      84: invokevirtual #56                 // Method java/nio/ByteBuffer.position:()I
      87: aload_0
      88: getfield      #12                 // Field boundary:[B
      91: arraylength
      92: isub
      93: iconst_0
      94: invokestatic  #59                 // Method java/lang/Math.max:(II)I
      97: invokevirtual #60                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     100: pop
     101: aload_0
     102: getfield      #41                 // Field encodingHandler:Lio/undertow/util/MultipartParser$Encoding;
     105: aload_0
     106: getfield      #10                 // Field partHandler:Lio/undertow/util/MultipartParser$PartHandler;
     109: aload         5
     111: invokeinterface #61,  3           // InterfaceMethod io/undertow/util/MultipartParser$Encoding.handle:(Lio/undertow/util/MultipartParser$PartHandler;Ljava/nio/ByteBuffer;)V
     116: aload_0
     117: getfield      #10                 // Field partHandler:Lio/undertow/util/MultipartParser$PartHandler;
     120: invokeinterface #62,  1           // InterfaceMethod io/undertow/util/MultipartParser$PartHandler.endPart:()V
     125: aload_0
     126: iconst_m1
     127: putfield      #6                  // Field subState:I
     130: goto          345
     133: iload         4
     135: aload_0
     136: getfield      #12                 // Field boundary:[B
     139: iconst_0
     140: baload
     141: if_icmpne     180
     144: iload_2
     145: ifle          172
     148: aload_0
     149: getfield      #41                 // Field encodingHandler:Lio/undertow/util/MultipartParser$Encoding;
     152: aload_0
     153: getfield      #10                 // Field partHandler:Lio/undertow/util/MultipartParser$PartHandler;
     156: aload_0
     157: getfield      #12                 // Field boundary:[B
     160: iconst_0
     161: iload_2
     162: invokestatic  #63                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
     165: invokeinterface #61,  3           // InterfaceMethod io/undertow/util/MultipartParser$Encoding.handle:(Lio/undertow/util/MultipartParser$PartHandler;Ljava/nio/ByteBuffer;)V
     170: iconst_0
     171: istore_2
     172: aload_0
     173: iconst_1
     174: putfield      #6                  // Field subState:I
     177: goto          345
     180: iload_2
     181: ifle          208
     184: aload_0
     185: getfield      #41                 // Field encodingHandler:Lio/undertow/util/MultipartParser$Encoding;
     188: aload_0
     189: getfield      #10                 // Field partHandler:Lio/undertow/util/MultipartParser$PartHandler;
     192: aload_0
     193: getfield      #12                 // Field boundary:[B
     196: iconst_0
     197: iload_2
     198: invokestatic  #63                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
     201: invokeinterface #61,  3           // InterfaceMethod io/undertow/util/MultipartParser$Encoding.handle:(Lio/undertow/util/MultipartParser$PartHandler;Ljava/nio/ByteBuffer;)V
     206: iconst_0
     207: istore_2
     208: aload_0
     209: iconst_0
     210: putfield      #6                  // Field subState:I
     213: goto          345
     216: aload_0
     217: getfield      #6                  // Field subState:I
     220: iconst_m1
     221: if_icmpne     256
     224: iload         4
     226: bipush        13
     228: if_icmpne     240
     231: aload_0
     232: bipush        -2
     234: putfield      #6                  // Field subState:I
     237: goto          345
     240: iload         4
     242: bipush        45
     244: if_icmpne     345
     247: aload_0
     248: bipush        -3
     250: putfield      #6                  // Field subState:I
     253: goto          345
     256: aload_0
     257: getfield      #6                  // Field subState:I
     260: bipush        -2
     262: if_icmpne     318
     265: iload         4
     267: bipush        10
     269: if_icmpne     294
     272: aload_0
     273: iconst_0
     274: putfield      #6                  // Field subState:I
     277: aload_0
     278: iconst_1
     279: putfield      #3                  // Field state:I
     282: aload_0
     283: new           #27                 // class io/undertow/util/HeaderMap
     286: dup
     287: invokespecial #28                 // Method io/undertow/util/HeaderMap."<init>":()V
     290: putfield      #29                 // Field headers:Lio/undertow/util/HeaderMap;
     293: return
     294: iload         4
     296: bipush        45
     298: if_icmpne     310
     301: aload_0
     302: bipush        -3
     304: putfield      #6                  // Field subState:I
     307: goto          345
     310: aload_0
     311: iconst_m1
     312: putfield      #6                  // Field subState:I
     315: goto          345
     318: aload_0
     319: getfield      #6                  // Field subState:I
     322: bipush        -3
     324: if_icmpne     345
     327: iload         4
     329: bipush        45
     331: if_icmpne     340
     334: aload_0
     335: iconst_m1
     336: putfield      #3                  // Field state:I
     339: return
     340: aload_0
     341: iconst_m1
     342: putfield      #6                  // Field subState:I
     345: goto          10
     348: aload_1
     349: invokevirtual #57                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
     352: astore        4
     354: aload         4
     356: iload_3
     357: invokevirtual #58                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     360: pop
     361: aload_0
     362: getfield      #6                  // Field subState:I
     365: ifne          386
     368: aload_0
     369: getfield      #41                 // Field encodingHandler:Lio/undertow/util/MultipartParser$Encoding;
     372: aload_0
     373: getfield      #10                 // Field partHandler:Lio/undertow/util/MultipartParser$PartHandler;
     376: aload         4
     378: invokeinterface #61,  3           // InterfaceMethod io/undertow/util/MultipartParser$Encoding.handle:(Lio/undertow/util/MultipartParser$PartHandler;Ljava/nio/ByteBuffer;)V
     383: goto          436
     386: aload         4
     388: invokevirtual #64                 // Method java/nio/ByteBuffer.remaining:()I
     391: aload_0
     392: getfield      #6                  // Field subState:I
     395: if_icmple     436
     398: aload_0
     399: getfield      #6                  // Field subState:I
     402: ifle          436
     405: aload         4
     407: aload         4
     409: invokevirtual #65                 // Method java/nio/ByteBuffer.limit:()I
     412: aload_0
     413: getfield      #6                  // Field subState:I
     416: isub
     417: invokevirtual #60                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     420: pop
     421: aload_0
     422: getfield      #41                 // Field encodingHandler:Lio/undertow/util/MultipartParser$Encoding;
     425: aload_0
     426: getfield      #10                 // Field partHandler:Lio/undertow/util/MultipartParser$PartHandler;
     429: aload         4
     431: invokeinterface #61,  3           // InterfaceMethod io/undertow/util/MultipartParser$Encoding.handle:(Lio/undertow/util/MultipartParser$PartHandler;Ljava/nio/ByteBuffer;)V
     436: return

  public boolean isComplete();
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:I
       4: iconst_m1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn
}
