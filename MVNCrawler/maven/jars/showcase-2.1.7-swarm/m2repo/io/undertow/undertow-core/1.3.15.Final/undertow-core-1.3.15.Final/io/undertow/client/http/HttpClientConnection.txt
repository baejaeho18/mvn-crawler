Compiled from "HttpClientConnection.java"
class io.undertow.client.http.HttpClientConnection extends io.undertow.util.AbstractAttachable implements java.io.Closeable,io.undertow.client.ClientConnection {
  public final io.undertow.conduits.ConduitListener<org.xnio.conduits.StreamSinkConduit> requestFinishListener;

  public final io.undertow.conduits.ConduitListener<org.xnio.conduits.StreamSourceConduit> responseFinishedListener;

  private final java.util.Deque<io.undertow.client.http.HttpClientExchange> pendingQueue;

  private io.undertow.client.http.HttpClientExchange currentRequest;

  private io.undertow.client.http.HttpResponseBuilder pendingResponse;

  private final org.xnio.OptionMap options;

  private final org.xnio.StreamConnection connection;

  private final org.xnio.conduits.PushBackStreamSourceConduit pushBackStreamSourceConduit;

  private final io.undertow.client.http.HttpClientConnection$ClientReadListener clientReadListener;

  private final io.undertow.connector.ByteBufferPool bufferPool;

  private io.undertow.connector.PooledByteBuffer pooledBuffer;

  private final org.xnio.conduits.StreamSinkConduit originalSinkConduit;

  private static final int UPGRADED;

  private static final int UPGRADE_REQUESTED;

  private static final int CLOSE_REQ;

  private static final int CLOSED;

  private int count;

  private int state;

  private final org.xnio.ChannelListener$SimpleSetter<io.undertow.client.http.HttpClientConnection> closeSetter;

  private final io.undertow.client.ClientStatistics clientStatistics;

  private int requestCount;

  private int read;

  private int written;

  private boolean http2Tried;

  private boolean http2UpgradeReceived;

  private io.undertow.client.ClientConnection http2Delegate;

  io.undertow.client.http.HttpClientConnection(org.xnio.StreamConnection, org.xnio.OptionMap, io.undertow.connector.ByteBufferPool);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method io/undertow/util/AbstractAttachable."<init>":()V
       4: aload_0
       5: new           #16                 // class io/undertow/client/http/HttpClientConnection$1
       8: dup
       9: aload_0
      10: invokespecial #17                 // Method io/undertow/client/http/HttpClientConnection$1."<init>":(Lio/undertow/client/http/HttpClientConnection;)V
      13: putfield      #18                 // Field requestFinishListener:Lio/undertow/conduits/ConduitListener;
      16: aload_0
      17: new           #19                 // class io/undertow/client/http/HttpClientConnection$2
      20: dup
      21: aload_0
      22: invokespecial #20                 // Method io/undertow/client/http/HttpClientConnection$2."<init>":(Lio/undertow/client/http/HttpClientConnection;)V
      25: putfield      #21                 // Field responseFinishedListener:Lio/undertow/conduits/ConduitListener;
      28: aload_0
      29: new           #22                 // class java/util/ArrayDeque
      32: dup
      33: invokespecial #23                 // Method java/util/ArrayDeque."<init>":()V
      36: putfield      #24                 // Field pendingQueue:Ljava/util/Deque;
      39: aload_0
      40: new           #25                 // class io/undertow/client/http/HttpClientConnection$ClientReadListener
      43: dup
      44: aload_0
      45: invokespecial #26                 // Method io/undertow/client/http/HttpClientConnection$ClientReadListener."<init>":(Lio/undertow/client/http/HttpClientConnection;)V
      48: putfield      #27                 // Field clientReadListener:Lio/undertow/client/http/HttpClientConnection$ClientReadListener;
      51: aload_0
      52: iconst_0
      53: putfield      #28                 // Field count:I
      56: aload_0
      57: new           #29                 // class org/xnio/ChannelListener$SimpleSetter
      60: dup
      61: invokespecial #30                 // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
      64: putfield      #10                 // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      67: aload_0
      68: iconst_0
      69: putfield      #31                 // Field http2Tried:Z
      72: aload_0
      73: iconst_0
      74: putfield      #3                  // Field http2UpgradeReceived:Z
      77: aload_2
      78: getstatic     #32                 // Field io/undertow/UndertowOptions.ENABLE_STATISTICS:Lorg/xnio/Option;
      81: iconst_0
      82: invokevirtual #33                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      85: ifeq          162
      88: aload_0
      89: new           #34                 // class io/undertow/client/http/HttpClientConnection$ClientStatisticsImpl
      92: dup
      93: aload_0
      94: aconst_null
      95: invokespecial #35                 // Method io/undertow/client/http/HttpClientConnection$ClientStatisticsImpl."<init>":(Lio/undertow/client/http/HttpClientConnection;Lio/undertow/client/http/HttpClientConnection$1;)V
      98: putfield      #36                 // Field clientStatistics:Lio/undertow/client/ClientStatistics;
     101: aload_1
     102: invokevirtual #37                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     105: new           #38                 // class io/undertow/conduits/BytesSentStreamSinkConduit
     108: dup
     109: aload_1
     110: invokevirtual #37                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     113: invokevirtual #39                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
     116: new           #40                 // class io/undertow/client/http/HttpClientConnection$3
     119: dup
     120: aload_0
     121: invokespecial #41                 // Method io/undertow/client/http/HttpClientConnection$3."<init>":(Lio/undertow/client/http/HttpClientConnection;)V
     124: invokespecial #42                 // Method io/undertow/conduits/BytesSentStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/conduits/ByteActivityCallback;)V
     127: invokevirtual #43                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
     130: aload_1
     131: invokevirtual #44                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     134: new           #45                 // class io/undertow/conduits/BytesReceivedStreamSourceConduit
     137: dup
     138: aload_1
     139: invokevirtual #44                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     142: invokevirtual #46                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
     145: new           #47                 // class io/undertow/client/http/HttpClientConnection$4
     148: dup
     149: aload_0
     150: invokespecial #48                 // Method io/undertow/client/http/HttpClientConnection$4."<init>":(Lio/undertow/client/http/HttpClientConnection;)V
     153: invokespecial #49                 // Method io/undertow/conduits/BytesReceivedStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lio/undertow/conduits/ByteActivityCallback;)V
     156: invokevirtual #50                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     159: goto          167
     162: aload_0
     163: aconst_null
     164: putfield      #36                 // Field clientStatistics:Lio/undertow/client/ClientStatistics;
     167: aload_0
     168: aload_2
     169: putfield      #51                 // Field options:Lorg/xnio/OptionMap;
     172: aload_0
     173: aload_1
     174: putfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
     177: aload_0
     178: new           #52                 // class org/xnio/conduits/PushBackStreamSourceConduit
     181: dup
     182: aload_1
     183: invokevirtual #44                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     186: invokevirtual #46                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
     189: invokespecial #53                 // Method org/xnio/conduits/PushBackStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
     192: putfield      #4                  // Field pushBackStreamSourceConduit:Lorg/xnio/conduits/PushBackStreamSourceConduit;
     195: aload_0
     196: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
     199: invokevirtual #44                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     202: aload_0
     203: getfield      #4                  // Field pushBackStreamSourceConduit:Lorg/xnio/conduits/PushBackStreamSourceConduit;
     206: invokevirtual #50                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     209: aload_0
     210: aload_3
     211: putfield      #6                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     214: aload_0
     215: aload_1
     216: invokevirtual #37                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     219: invokevirtual #39                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
     222: putfield      #54                 // Field originalSinkConduit:Lorg/xnio/conduits/StreamSinkConduit;
     225: aload_1
     226: invokevirtual #55                 // Method org/xnio/StreamConnection.getCloseSetter:()Lorg/xnio/ChannelListener$Setter;
     229: new           #56                 // class io/undertow/client/http/HttpClientConnection$5
     232: dup
     233: aload_0
     234: invokespecial #57                 // Method io/undertow/client/http/HttpClientConnection$5."<init>":(Lio/undertow/client/http/HttpClientConnection;)V
     237: invokeinterface #58,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     242: return

  public io.undertow.connector.ByteBufferPool getBufferPool();
    Code:
       0: aload_0
       1: getfield      #6                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
       4: areturn

  public java.net.SocketAddress getPeerAddress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
       4: invokevirtual #59                 // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
       7: areturn

  org.xnio.StreamConnection getConnection();
    Code:
       0: aload_0
       1: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
       4: areturn

  public <A extends java.net.SocketAddress> A getPeerAddress(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
       4: aload_1
       5: invokevirtual #60                 // Method org/xnio/StreamConnection.getPeerAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
       8: areturn

  public org.xnio.ChannelListener$Setter<? extends io.undertow.client.http.HttpClientConnection> getCloseSetter();
    Code:
       0: aload_0
       1: getfield      #10                 // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  public java.net.SocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
       4: invokevirtual #61                 // Method org/xnio/StreamConnection.getLocalAddress:()Ljava/net/SocketAddress;
       7: areturn

  public <A extends java.net.SocketAddress> A getLocalAddress(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
       4: aload_1
       5: invokevirtual #62                 // Method org/xnio/StreamConnection.getLocalAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
       8: areturn

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
       4: invokevirtual #63                 // Method org/xnio/StreamConnection.getWorker:()Lorg/xnio/XnioWorker;
       7: areturn

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: aload_0
       1: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
       4: invokevirtual #64                 // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
       7: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #65                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
       4: ifnull        17
       7: aload_0
       8: getfield      #65                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
      11: invokeinterface #66,  1           // InterfaceMethod io/undertow/client/ClientConnection.isOpen:()Z
      16: ireturn
      17: aload_0
      18: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
      21: invokevirtual #67                 // Method org/xnio/StreamConnection.isOpen:()Z
      24: ifeq          43
      27: aload_0
      28: getfield      #11                 // Field state:I
      31: ldc           #69                 // int -1073741824
      33: invokestatic  #70                 // Method org/xnio/Bits.allAreClear:(II)Z
      36: ifeq          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: aload_0
       1: getfield      #65                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
       4: ifnull        18
       7: aload_0
       8: getfield      #65                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
      11: aload_1
      12: invokeinterface #71,  2           // InterfaceMethod io/undertow/client/ClientConnection.supportsOption:(Lorg/xnio/Option;)Z
      17: ireturn
      18: aload_0
      19: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
      22: aload_1
      23: invokevirtual #72                 // Method org/xnio/StreamConnection.supportsOption:(Lorg/xnio/Option;)Z
      26: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #65                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
       4: ifnull        18
       7: aload_0
       8: getfield      #65                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
      11: aload_1
      12: invokeinterface #73,  2           // InterfaceMethod io/undertow/client/ClientConnection.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      17: areturn
      18: aload_0
      19: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
      22: aload_1
      23: invokevirtual #74                 // Method org/xnio/StreamConnection.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      26: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #65                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
       4: ifnull        19
       7: aload_0
       8: getfield      #65                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
      11: aload_1
      12: aload_2
      13: invokeinterface #75,  3           // InterfaceMethod io/undertow/client/ClientConnection.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
      18: areturn
      19: aload_0
      20: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
      23: aload_1
      24: aload_2
      25: invokevirtual #76                 // Method org/xnio/StreamConnection.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
      28: areturn

  public boolean isUpgraded();
    Code:
       0: aload_0
       1: getfield      #65                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
       4: ifnull        17
       7: aload_0
       8: getfield      #65                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
      11: invokeinterface #77,  1           // InterfaceMethod io/undertow/client/ClientConnection.isUpgraded:()Z
      16: ireturn
      17: aload_0
      18: getfield      #11                 // Field state:I
      21: ldc           #78                 // int 805306368
      23: invokestatic  #79                 // Method org/xnio/Bits.anyAreSet:(II)Z
      26: ireturn

  public boolean isPushSupported();
    Code:
       0: aload_0
       1: getfield      #65                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
       4: ifnull        17
       7: aload_0
       8: getfield      #65                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
      11: invokeinterface #80,  1           // InterfaceMethod io/undertow/client/ClientConnection.isPushSupported:()Z
      16: ireturn
      17: iconst_0
      18: ireturn

  public boolean isMultiplexingSupported();
    Code:
       0: aload_0
       1: getfield      #65                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
       4: ifnull        17
       7: aload_0
       8: getfield      #65                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
      11: invokeinterface #81,  1           // InterfaceMethod io/undertow/client/ClientConnection.isMultiplexingSupported:()Z
      16: ireturn
      17: iconst_0
      18: ireturn

  public io.undertow.client.ClientStatistics getStatistics();
    Code:
       0: aload_0
       1: getfield      #65                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
       4: ifnull        17
       7: aload_0
       8: getfield      #65                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
      11: invokeinterface #82,  1           // InterfaceMethod io/undertow/client/ClientConnection.getStatistics:()Lio/undertow/client/ClientStatistics;
      16: areturn
      17: aload_0
      18: getfield      #36                 // Field clientStatistics:Lio/undertow/client/ClientStatistics;
      21: areturn

  public boolean isUpgradeSupported();
    Code:
       0: aload_0
       1: getfield      #65                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
       4: ifnull        9
       7: iconst_0
       8: ireturn
       9: iconst_1
      10: ireturn

  public void sendRequest(io.undertow.client.ClientRequest, io.undertow.client.ClientCallback<io.undertow.client.ClientExchange>);
    Code:
       0: aload_0
       1: getfield      #65                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
       4: ifnull        19
       7: aload_0
       8: getfield      #65                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
      11: aload_1
      12: aload_2
      13: invokeinterface #83,  3           // InterfaceMethod io/undertow/client/ClientConnection.sendRequest:(Lio/undertow/client/ClientRequest;Lio/undertow/client/ClientCallback;)V
      18: return
      19: aload_0
      20: dup
      21: getfield      #28                 // Field count:I
      24: iconst_1
      25: iadd
      26: putfield      #28                 // Field count:I
      29: aload_0
      30: getfield      #11                 // Field state:I
      33: ldc           #84                 // int -268435456
      35: invokestatic  #79                 // Method org/xnio/Bits.anyAreSet:(II)Z
      38: ifeq          56
      41: aload_2
      42: getstatic     #85                 // Field io/undertow/client/UndertowClientMessages.MESSAGES:Lio/undertow/client/UndertowClientMessages;
      45: invokeinterface #86,  1           // InterfaceMethod io/undertow/client/UndertowClientMessages.invalidConnectionState:()Ljava/io/IOException;
      50: invokeinterface #87,  2           // InterfaceMethod io/undertow/client/ClientCallback.failed:(Ljava/io/IOException;)V
      55: return
      56: new           #88                 // class io/undertow/client/http/HttpClientExchange
      59: dup
      60: aload_2
      61: aload_1
      62: aload_0
      63: invokespecial #89                 // Method io/undertow/client/http/HttpClientExchange."<init>":(Lio/undertow/client/ClientCallback;Lio/undertow/client/ClientRequest;Lio/undertow/client/http/HttpClientConnection;)V
      66: astore_3
      67: aload_0
      68: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
      71: instanceof    #90                 // class org/xnio/ssl/SslConnection
      74: istore        4
      76: iload         4
      78: ifne          187
      81: aload_0
      82: getfield      #31                 // Field http2Tried:Z
      85: ifne          187
      88: aload_0
      89: getfield      #51                 // Field options:Lorg/xnio/OptionMap;
      92: getstatic     #91                 // Field io/undertow/UndertowOptions.ENABLE_HTTP2:Lorg/xnio/Option;
      95: iconst_0
      96: invokevirtual #33                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      99: ifeq          187
     102: aload_1
     103: invokevirtual #92                 // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     106: getstatic     #93                 // Field io/undertow/util/Headers.UPGRADE:Lio/undertow/util/HttpString;
     109: invokevirtual #94                 // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
     112: ifne          187
     115: aload_1
     116: invokevirtual #95                 // Method io/undertow/client/ClientRequest.getMethod:()Lio/undertow/util/HttpString;
     119: getstatic     #96                 // Field io/undertow/util/Methods.GET:Lio/undertow/util/HttpString;
     122: invokevirtual #97                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
     125: ifeq          187
     128: aload_1
     129: invokevirtual #92                 // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     132: new           #98                 // class io/undertow/util/HttpString
     135: dup
     136: ldc           #99                 // String HTTP2-Settings
     138: invokespecial #100                // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
     141: aload_0
     142: getfield      #51                 // Field options:Lorg/xnio/OptionMap;
     145: aload_0
     146: getfield      #6                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     149: invokestatic  #101                // Method io/undertow/client/http2/Http2ClearClientProvider.createSettingsFrame:(Lorg/xnio/OptionMap;Lio/undertow/connector/ByteBufferPool;)Ljava/lang/String;
     152: invokevirtual #102                // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     155: pop
     156: aload_1
     157: invokevirtual #92                 // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     160: getstatic     #93                 // Field io/undertow/util/Headers.UPGRADE:Lio/undertow/util/HttpString;
     163: ldc           #104                // String h2c
     165: invokevirtual #102                // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     168: pop
     169: aload_1
     170: invokevirtual #92                 // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     173: getstatic     #105                // Field io/undertow/util/Headers.CONNECTION:Lio/undertow/util/HttpString;
     176: ldc           #106                // String Upgrade, HTTP2-Settings
     178: invokevirtual #102                // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     181: pop
     182: aload_0
     183: iconst_1
     184: putfield      #31                 // Field http2Tried:Z
     187: aload_0
     188: getfield      #14                 // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
     191: ifnonnull     202
     194: aload_0
     195: aload_3
     196: invokespecial #107                // Method initiateRequest:(Lio/undertow/client/http/HttpClientExchange;)V
     199: goto          213
     202: aload_0
     203: getfield      #24                 // Field pendingQueue:Ljava/util/Deque;
     206: aload_3
     207: invokeinterface #108,  2          // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
     212: pop
     213: return

  private void initiateRequest(io.undertow.client.http.HttpClientExchange);
    Code:
       0: aload_0
       1: dup
       2: getfield      #1                  // Field requestCount:I
       5: iconst_1
       6: iadd
       7: putfield      #1                  // Field requestCount:I
      10: aload_0
      11: aload_1
      12: putfield      #14                 // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
      15: aload_0
      16: new           #109                // class io/undertow/client/http/HttpResponseBuilder
      19: dup
      20: invokespecial #110                // Method io/undertow/client/http/HttpResponseBuilder."<init>":()V
      23: putfield      #7                  // Field pendingResponse:Lio/undertow/client/http/HttpResponseBuilder;
      26: aload_1
      27: invokevirtual #111                // Method io/undertow/client/http/HttpClientExchange.getRequest:()Lio/undertow/client/ClientRequest;
      30: astore_2
      31: aload_2
      32: invokevirtual #92                 // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      35: getstatic     #105                // Field io/undertow/util/Headers.CONNECTION:Lio/undertow/util/HttpString;
      38: invokevirtual #112                // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      41: astore_3
      42: aload_3
      43: ifnull        106
      46: new           #98                 // class io/undertow/util/HttpString
      49: dup
      50: aload_3
      51: invokespecial #100                // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      54: astore        4
      56: aload         4
      58: getstatic     #113                // Field io/undertow/util/Headers.CLOSE:Lio/undertow/util/HttpString;
      61: invokevirtual #97                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
      64: ifeq          81
      67: aload_0
      68: dup
      69: getfield      #11                 // Field state:I
      72: ldc           #114                // int 1073741824
      74: ior
      75: putfield      #11                 // Field state:I
      78: goto          103
      81: aload         4
      83: getstatic     #93                 // Field io/undertow/util/Headers.UPGRADE:Lio/undertow/util/HttpString;
      86: invokevirtual #97                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
      89: ifeq          103
      92: aload_0
      93: dup
      94: getfield      #11                 // Field state:I
      97: ldc           #115                // int 536870912
      99: ior
     100: putfield      #11                 // Field state:I
     103: goto          127
     106: aload_2
     107: invokevirtual #116                // Method io/undertow/client/ClientRequest.getProtocol:()Lio/undertow/util/HttpString;
     110: getstatic     #117                // Field io/undertow/util/Protocols.HTTP_1_1:Lio/undertow/util/HttpString;
     113: if_acmpeq     127
     116: aload_0
     117: dup
     118: getfield      #11                 // Field state:I
     121: ldc           #114                // int 1073741824
     123: ior
     124: putfield      #11                 // Field state:I
     127: aload_2
     128: invokevirtual #92                 // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     131: getstatic     #93                 // Field io/undertow/util/Headers.UPGRADE:Lio/undertow/util/HttpString;
     134: invokevirtual #94                 // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
     137: ifeq          151
     140: aload_0
     141: dup
     142: getfield      #11                 // Field state:I
     145: ldc           #115                // int 536870912
     147: ior
     148: putfield      #11                 // Field state:I
     151: aload_2
     152: invokevirtual #95                 // Method io/undertow/client/ClientRequest.getMethod:()Lio/undertow/util/HttpString;
     155: getstatic     #118                // Field io/undertow/util/Methods.CONNECT:Lio/undertow/util/HttpString;
     158: invokevirtual #97                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
     161: ifeq          175
     164: aload_0
     165: dup
     166: getfield      #11                 // Field state:I
     169: ldc           #115                // int 536870912
     171: ior
     172: putfield      #11                 // Field state:I
     175: aload_0
     176: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
     179: invokevirtual #44                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     182: astore        4
     184: aload         4
     186: aload_0
     187: getfield      #27                 // Field clientReadListener:Lio/undertow/client/http/HttpClientConnection$ClientReadListener;
     190: invokevirtual #119                // Method org/xnio/conduits/ConduitStreamSourceChannel.setReadListener:(Lorg/xnio/ChannelListener;)V
     193: aload         4
     195: invokevirtual #120                // Method org/xnio/conduits/ConduitStreamSourceChannel.resumeReads:()V
     198: aload_0
     199: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
     202: invokevirtual #37                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     205: astore        5
     207: aload_0
     208: getfield      #54                 // Field originalSinkConduit:Lorg/xnio/conduits/StreamSinkConduit;
     211: astore        6
     213: new           #121                // class io/undertow/client/http/HttpRequestConduit
     216: dup
     217: aload         6
     219: aload_0
     220: getfield      #6                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     223: aload_2
     224: invokespecial #122                // Method io/undertow/client/http/HttpRequestConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/connector/ByteBufferPool;Lio/undertow/client/ClientRequest;)V
     227: astore        6
     229: aload_2
     230: invokevirtual #92                 // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     233: getstatic     #123                // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
     236: invokevirtual #112                // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     239: astore        7
     241: aload_2
     242: invokevirtual #92                 // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     245: getstatic     #124                // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
     248: invokevirtual #125                // Method io/undertow/util/HeaderMap.getLast:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     251: astore        8
     253: iconst_1
     254: istore        9
     256: aload         7
     258: ifnull        320
     261: aload         7
     263: invokestatic  #126                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     266: lstore        10
     268: new           #127                // class io/undertow/client/http/ClientFixedLengthStreamSinkConduit
     271: dup
     272: aload         6
     274: lload         10
     276: iconst_0
     277: iconst_0
     278: aload_0
     279: getfield      #14                 // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
     282: invokespecial #128                // Method io/undertow/client/http/ClientFixedLengthStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;JZZLio/undertow/client/http/HttpClientExchange;)V
     285: astore        6
     287: lload         10
     289: lconst_0
     290: lcmp
     291: ifeq          298
     294: iconst_1
     295: goto          299
     298: iconst_0
     299: istore        9
     301: goto          418
     304: astore        10
     306: aload_0
     307: new           #130                // class java/io/IOException
     310: dup
     311: aload         10
     313: invokespecial #131                // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     316: invokespecial #8                  // Method handleError:(Ljava/io/IOException;)V
     319: return
     320: aload         8
     322: ifnull        397
     325: aload         8
     327: getstatic     #132                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
     330: invokevirtual #133                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
     333: getstatic     #134                // Field io/undertow/util/Headers.CHUNKED:Lio/undertow/util/HttpString;
     336: invokevirtual #135                // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
     339: invokevirtual #136                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     342: ifne          360
     345: aload_0
     346: getstatic     #85                 // Field io/undertow/client/UndertowClientMessages.MESSAGES:Lio/undertow/client/UndertowClientMessages;
     349: aload         8
     351: invokeinterface #137,  2          // InterfaceMethod io/undertow/client/UndertowClientMessages.unknownTransferEncoding:(Ljava/lang/String;)Ljava/io/IOException;
     356: invokespecial #8                  // Method handleError:(Ljava/io/IOException;)V
     359: return
     360: new           #138                // class io/undertow/conduits/ChunkedStreamSinkConduit
     363: dup
     364: aload         6
     366: aload_1
     367: invokevirtual #139                // Method io/undertow/client/http/HttpClientExchange.getConnection:()Lio/undertow/client/ClientConnection;
     370: invokeinterface #140,  1          // InterfaceMethod io/undertow/client/ClientConnection.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
     375: iconst_0
     376: iconst_0
     377: aload_1
     378: invokevirtual #111                // Method io/undertow/client/http/HttpClientExchange.getRequest:()Lio/undertow/client/ClientRequest;
     381: invokevirtual #92                 // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     384: aload_0
     385: getfield      #18                 // Field requestFinishListener:Lio/undertow/conduits/ConduitListener;
     388: aload_1
     389: invokespecial #141                // Method io/undertow/conduits/ChunkedStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/connector/ByteBufferPool;ZZLio/undertow/util/HeaderMap;Lio/undertow/conduits/ConduitListener;Lio/undertow/util/Attachable;)V
     392: astore        6
     394: goto          418
     397: new           #127                // class io/undertow/client/http/ClientFixedLengthStreamSinkConduit
     400: dup
     401: aload         6
     403: lconst_0
     404: iconst_0
     405: iconst_0
     406: aload_0
     407: getfield      #14                 // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
     410: invokespecial #128                // Method io/undertow/client/http/ClientFixedLengthStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;JZZLio/undertow/client/http/HttpClientExchange;)V
     413: astore        6
     415: iconst_0
     416: istore        9
     418: aload         5
     420: aload         6
     422: invokevirtual #43                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
     425: aload_1
     426: invokevirtual #142                // Method io/undertow/client/http/HttpClientExchange.invokeReadReadyCallback:()V
     429: iload         9
     431: ifne          480
     434: aload         5
     436: invokevirtual #143                // Method org/xnio/conduits/ConduitStreamSinkChannel.shutdownWrites:()V
     439: aload         5
     441: invokevirtual #144                // Method org/xnio/conduits/ConduitStreamSinkChannel.flush:()Z
     444: ifne          469
     447: aload         5
     449: aconst_null
     450: new           #145                // class io/undertow/client/http/HttpClientConnection$6
     453: dup
     454: aload_0
     455: invokespecial #146                // Method io/undertow/client/http/HttpClientConnection$6."<init>":(Lio/undertow/client/http/HttpClientConnection;)V
     458: invokestatic  #147                // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
     461: invokevirtual #148                // Method org/xnio/conduits/ConduitStreamSinkChannel.setWriteListener:(Lorg/xnio/ChannelListener;)V
     464: aload         5
     466: invokevirtual #149                // Method org/xnio/conduits/ConduitStreamSinkChannel.resumeWrites:()V
     469: goto          480
     472: astore        10
     474: aload_0
     475: aload         10
     477: invokespecial #8                  // Method handleError:(Ljava/io/IOException;)V
     480: return
    Exception table:
       from    to  target type
         261   301   304   Class java/lang/NumberFormatException
         434   469   472   Class java/io/IOException

  private void handleError(java.io.IOException);
    Code:
       0: aload_0
       1: getfield      #14                 // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
       4: aload_1
       5: invokevirtual #150                // Method io/undertow/client/http/HttpClientExchange.setFailed:(Ljava/io/IOException;)V
       8: getstatic     #151                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      11: aload_1
      12: invokeinterface #152,  2          // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
      17: aload_0
      18: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
      21: invokestatic  #153                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      24: return

  public org.xnio.StreamConnection performUpgrade() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field state:I
       4: ldc           #154                // int -805306368
       6: invokestatic  #155                // Method org/xnio/Bits.allAreSet:(II)Z
       9: ifeq          28
      12: new           #130                // class java/io/IOException
      15: dup
      16: getstatic     #85                 // Field io/undertow/client/UndertowClientMessages.MESSAGES:Lio/undertow/client/UndertowClientMessages;
      19: invokeinterface #156,  1          // InterfaceMethod io/undertow/client/UndertowClientMessages.connectionClosed:()Ljava/lang/String;
      24: invokespecial #157                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: dup
      30: getfield      #11                 // Field state:I
      33: ldc           #158                // int 268435456
      35: ior
      36: putfield      #11                 // Field state:I
      39: aload_0
      40: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
      43: invokevirtual #37                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      46: aload_0
      47: getfield      #54                 // Field originalSinkConduit:Lorg/xnio/conduits/StreamSinkConduit;
      50: invokevirtual #43                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
      53: aload_0
      54: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
      57: invokevirtual #44                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      60: aload_0
      61: getfield      #4                  // Field pushBackStreamSourceConduit:Lorg/xnio/conduits/PushBackStreamSourceConduit;
      64: invokevirtual #50                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
      67: aload_0
      68: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
      71: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #65                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
       4: ifnull        16
       7: aload_0
       8: getfield      #65                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
      11: invokeinterface #159,  1          // InterfaceMethod io/undertow/client/ClientConnection.close:()V
      16: aload_0
      17: getfield      #11                 // Field state:I
      20: ldc           #160                // int -2147483648
      22: invokestatic  #79                 // Method org/xnio/Bits.anyAreSet:(II)Z
      25: ifeq          29
      28: return
      29: aload_0
      30: dup
      31: getfield      #11                 // Field state:I
      34: ldc           #69                 // int -1073741824
      36: ior
      37: putfield      #11                 // Field state:I
      40: aload_0
      41: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
      44: invokevirtual #161                // Method org/xnio/StreamConnection.close:()V
      47: return

  public void exchangeDone();
    Code:
       0: aload_0
       1: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
       4: invokevirtual #37                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: aload_0
       8: getfield      #54                 // Field originalSinkConduit:Lorg/xnio/conduits/StreamSinkConduit;
      11: invokevirtual #43                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
      14: aload_0
      15: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
      18: invokevirtual #44                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      21: aload_0
      22: getfield      #4                  // Field pushBackStreamSourceConduit:Lorg/xnio/conduits/PushBackStreamSourceConduit;
      25: invokevirtual #50                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
      28: aload_0
      29: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
      32: invokevirtual #37                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      35: invokevirtual #162                // Method org/xnio/conduits/ConduitStreamSinkChannel.suspendWrites:()V
      38: aload_0
      39: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
      42: invokevirtual #37                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      45: aconst_null
      46: invokevirtual #148                // Method org/xnio/conduits/ConduitStreamSinkChannel.setWriteListener:(Lorg/xnio/ChannelListener;)V
      49: aload_0
      50: getfield      #11                 // Field state:I
      53: ldc           #114                // int 1073741824
      55: invokestatic  #79                 // Method org/xnio/Bits.anyAreSet:(II)Z
      58: ifeq          87
      61: aload_0
      62: aconst_null
      63: putfield      #14                 // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
      66: aload_0
      67: dup
      68: getfield      #11                 // Field state:I
      71: ldc           #160                // int -2147483648
      73: ior
      74: putfield      #11                 // Field state:I
      77: aload_0
      78: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
      81: invokestatic  #153                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      84: goto          115
      87: aload_0
      88: getfield      #11                 // Field state:I
      91: ldc           #115                // int 536870912
      93: invokestatic  #79                 // Method org/xnio/Bits.anyAreSet:(II)Z
      96: ifeq          115
      99: aload_0
     100: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
     103: invokevirtual #44                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     106: invokevirtual #163                // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
     109: aload_0
     110: aconst_null
     111: putfield      #14                 // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
     114: return
     115: aload_0
     116: aconst_null
     117: putfield      #14                 // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
     120: aload_0
     121: getfield      #24                 // Field pendingQueue:Ljava/util/Deque;
     124: invokeinterface #164,  1          // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
     129: checkcast     #88                 // class io/undertow/client/http/HttpClientExchange
     132: astore_1
     133: aload_1
     134: ifnonnull     164
     137: aload_0
     138: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
     141: invokevirtual #44                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     144: aload_0
     145: getfield      #27                 // Field clientReadListener:Lio/undertow/client/http/HttpClientConnection$ClientReadListener;
     148: invokevirtual #119                // Method org/xnio/conduits/ConduitStreamSourceChannel.setReadListener:(Lorg/xnio/ChannelListener;)V
     151: aload_0
     152: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
     155: invokevirtual #44                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     158: invokevirtual #120                // Method org/xnio/conduits/ConduitStreamSourceChannel.resumeReads:()V
     161: goto          169
     164: aload_0
     165: aload_1
     166: invokespecial #107                // Method initiateRequest:(Lio/undertow/client/http/HttpClientExchange;)V
     169: return

  public void requestDataSent();
    Code:
       0: aload_0
       1: getfield      #3                  // Field http2UpgradeReceived:Z
       4: ifeq          11
       7: aload_0
       8: invokevirtual #165                // Method doHttp2Upgrade:()V
      11: return

  protected void doHttp2Upgrade();
    Code:
       0: new           #103                // class io/undertow/protocols/http2/Http2Channel
       3: dup
       4: aload_0
       5: invokevirtual #166                // Method performUpgrade:()Lorg/xnio/StreamConnection;
       8: aconst_null
       9: aload_0
      10: getfield      #6                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      13: aconst_null
      14: iconst_1
      15: iconst_1
      16: aload_0
      17: getfield      #51                 // Field options:Lorg/xnio/OptionMap;
      20: invokespecial #167                // Method io/undertow/protocols/http2/Http2Channel."<init>":(Lorg/xnio/StreamConnection;Ljava/lang/String;Lio/undertow/connector/ByteBufferPool;Lio/undertow/connector/PooledByteBuffer;ZZLorg/xnio/OptionMap;)V
      23: astore_1
      24: new           #168                // class io/undertow/client/http2/Http2ClientConnection
      27: dup
      28: aload_1
      29: aload_0
      30: getfield      #14                 // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
      33: invokevirtual #169                // Method io/undertow/client/http/HttpClientExchange.getResponseCallback:()Lio/undertow/client/ClientCallback;
      36: aload_0
      37: getfield      #14                 // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
      40: invokevirtual #111                // Method io/undertow/client/http/HttpClientExchange.getRequest:()Lio/undertow/client/ClientRequest;
      43: aload_0
      44: getfield      #14                 // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
      47: invokevirtual #111                // Method io/undertow/client/http/HttpClientExchange.getRequest:()Lio/undertow/client/ClientRequest;
      50: invokevirtual #92                 // Method io/undertow/client/ClientRequest.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      53: getstatic     #170                // Field io/undertow/util/Headers.HOST:Lio/undertow/util/HttpString;
      56: invokevirtual #112                // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      59: aload_0
      60: getfield      #36                 // Field clientStatistics:Lio/undertow/client/ClientStatistics;
      63: invokespecial #171                // Method io/undertow/client/http2/Http2ClientConnection."<init>":(Lio/undertow/protocols/http2/Http2Channel;Lio/undertow/client/ClientCallback;Lio/undertow/client/ClientRequest;Ljava/lang/String;Lio/undertow/client/ClientStatistics;)V
      66: astore_2
      67: aload_2
      68: invokevirtual #172                // Method io/undertow/client/http2/Http2ClientConnection.getCloseSetter:()Lorg/xnio/ChannelListener$Setter;
      71: new           #173                // class io/undertow/client/http/HttpClientConnection$7
      74: dup
      75: aload_0
      76: invokespecial #174                // Method io/undertow/client/http/HttpClientConnection$7."<init>":(Lio/undertow/client/http/HttpClientConnection;)V
      79: invokeinterface #58,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      84: aload_0
      85: aload_2
      86: putfield      #65                 // Field http2Delegate:Lio/undertow/client/ClientConnection;
      89: aload_0
      90: aconst_null
      91: putfield      #14                 // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
      94: goto          111
      97: astore_1
      98: getstatic     #151                // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     101: aload_1
     102: invokeinterface #152,  2          // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
     107: aload_0
     108: invokestatic  #153                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     111: return
    Exception table:
       from    to  target type
           0    94    97   Class java/io/IOException

  private void prepareResponseChannel(io.undertow.client.ClientResponse, io.undertow.client.ClientExchange);
    Code:
       0: aload_1
       1: invokevirtual #175                // Method io/undertow/client/ClientResponse.getResponseHeaders:()Lio/undertow/util/HeaderMap;
       4: getstatic     #124                // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
       7: invokevirtual #125                // Method io/undertow/util/HeaderMap.getLast:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      10: astore_3
      11: aload_3
      12: ifnull        36
      15: getstatic     #134                // Field io/undertow/util/Headers.CHUNKED:Lio/undertow/util/HttpString;
      18: new           #98                 // class io/undertow/util/HttpString
      21: dup
      22: aload_3
      23: invokespecial #100                // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      26: invokevirtual #97                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
      29: ifeq          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: istore        4
      39: aload_1
      40: invokevirtual #175                // Method io/undertow/client/ClientResponse.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      43: getstatic     #123                // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      46: invokevirtual #112                // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      49: astore        5
      51: aload_2
      52: invokeinterface #176,  1          // InterfaceMethod io/undertow/client/ClientExchange.getRequest:()Lio/undertow/client/ClientRequest;
      57: invokevirtual #95                 // Method io/undertow/client/ClientRequest.getMethod:()Lio/undertow/util/HttpString;
      60: getstatic     #177                // Field io/undertow/util/Methods.HEAD:Lio/undertow/util/HttpString;
      63: invokevirtual #97                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
      66: ifeq          104
      69: aload_0
      70: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
      73: invokevirtual #44                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      76: new           #178                // class io/undertow/conduits/FixedLengthStreamSourceConduit
      79: dup
      80: aload_0
      81: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
      84: invokevirtual #44                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      87: invokevirtual #46                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      90: lconst_0
      91: aload_0
      92: getfield      #21                 // Field responseFinishedListener:Lio/undertow/conduits/ConduitListener;
      95: invokespecial #179                // Method io/undertow/conduits/FixedLengthStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;JLio/undertow/conduits/ConduitListener;)V
      98: invokevirtual #50                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     101: goto          287
     104: iload         4
     106: ifeq          152
     109: aload_0
     110: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
     113: invokevirtual #44                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     116: new           #180                // class io/undertow/conduits/ChunkedStreamSourceConduit
     119: dup
     120: aload_0
     121: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
     124: invokevirtual #44                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     127: invokevirtual #46                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
     130: aload_0
     131: getfield      #4                  // Field pushBackStreamSourceConduit:Lorg/xnio/conduits/PushBackStreamSourceConduit;
     134: aload_0
     135: getfield      #6                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     138: aload_0
     139: getfield      #21                 // Field responseFinishedListener:Lio/undertow/conduits/ConduitListener;
     142: aload_2
     143: invokespecial #181                // Method io/undertow/conduits/ChunkedStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lorg/xnio/conduits/PushBackStreamSourceConduit;Lio/undertow/connector/ByteBufferPool;Lio/undertow/conduits/ConduitListener;Lio/undertow/util/Attachable;)V
     146: invokevirtual #50                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     149: goto          287
     152: aload         5
     154: ifnull        218
     157: aload         5
     159: invokestatic  #126                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     162: lstore        6
     164: aload_0
     165: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
     168: invokevirtual #44                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     171: new           #178                // class io/undertow/conduits/FixedLengthStreamSourceConduit
     174: dup
     175: aload_0
     176: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
     179: invokevirtual #44                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     182: invokevirtual #46                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
     185: lload         6
     187: aload_0
     188: getfield      #21                 // Field responseFinishedListener:Lio/undertow/conduits/ConduitListener;
     191: invokespecial #179                // Method io/undertow/conduits/FixedLengthStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;JLio/undertow/conduits/ConduitListener;)V
     194: invokevirtual #50                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     197: goto          287
     200: astore        6
     202: aload_0
     203: new           #130                // class java/io/IOException
     206: dup
     207: aload         6
     209: invokespecial #131                // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     212: invokespecial #8                  // Method handleError:(Ljava/io/IOException;)V
     215: aload         6
     217: athrow
     218: aload_1
     219: invokevirtual #182                // Method io/undertow/client/ClientResponse.getProtocol:()Lio/undertow/util/HttpString;
     222: getstatic     #117                // Field io/undertow/util/Protocols.HTTP_1_1:Lio/undertow/util/HttpString;
     225: invokevirtual #97                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
     228: ifeq          276
     231: aload_1
     232: invokevirtual #183                // Method io/undertow/client/ClientResponse.getResponseCode:()I
     235: invokestatic  #184                // Method io/undertow/server/Connectors.isEntityBodyAllowed:(I)Z
     238: ifne          276
     241: aload_0
     242: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
     245: invokevirtual #44                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     248: new           #178                // class io/undertow/conduits/FixedLengthStreamSourceConduit
     251: dup
     252: aload_0
     253: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
     256: invokevirtual #44                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     259: invokevirtual #46                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
     262: lconst_0
     263: aload_0
     264: getfield      #21                 // Field responseFinishedListener:Lio/undertow/conduits/ConduitListener;
     267: invokespecial #179                // Method io/undertow/conduits/FixedLengthStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;JLio/undertow/conduits/ConduitListener;)V
     270: invokevirtual #50                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     273: goto          287
     276: aload_0
     277: dup
     278: getfield      #11                 // Field state:I
     281: ldc           #114                // int 1073741824
     283: ior
     284: putfield      #11                 // Field state:I
     287: return
    Exception table:
       from    to  target type
         157   197   200   Class java/lang/NumberFormatException

  static io.undertow.client.http.HttpClientExchange access$000(io.undertow.client.http.HttpClientConnection);
    Code:
       0: aload_0
       1: getfield      #14                 // Field currentRequest:Lio/undertow/client/http/HttpClientExchange;
       4: areturn

  static int access$200(io.undertow.client.http.HttpClientConnection);
    Code:
       0: aload_0
       1: getfield      #13                 // Field written:I
       4: ireturn

  static int access$202(io.undertow.client.http.HttpClientConnection, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #13                 // Field written:I
       6: ireturn

  static int access$300(io.undertow.client.http.HttpClientConnection);
    Code:
       0: aload_0
       1: getfield      #12                 // Field read:I
       4: ireturn

  static int access$302(io.undertow.client.http.HttpClientConnection, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #12                 // Field read:I
       6: ireturn

  static int access$400(io.undertow.client.http.HttpClientConnection);
    Code:
       0: aload_0
       1: getfield      #11                 // Field state:I
       4: ireturn

  static int access$402(io.undertow.client.http.HttpClientConnection, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #11                 // Field state:I
       6: ireturn

  static org.xnio.ChannelListener$SimpleSetter access$500(io.undertow.client.http.HttpClientConnection);
    Code:
       0: aload_0
       1: getfield      #10                 // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  static io.undertow.connector.PooledByteBuffer access$600(io.undertow.client.http.HttpClientConnection);
    Code:
       0: aload_0
       1: getfield      #9                  // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
       4: areturn

  static void access$700(io.undertow.client.http.HttpClientConnection, java.io.IOException);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method handleError:(Ljava/io/IOException;)V
       5: return

  static io.undertow.client.http.HttpResponseBuilder access$800(io.undertow.client.http.HttpClientConnection);
    Code:
       0: aload_0
       1: getfield      #7                  // Field pendingResponse:Lio/undertow/client/http/HttpResponseBuilder;
       4: areturn

  static io.undertow.connector.ByteBufferPool access$900(io.undertow.client.http.HttpClientConnection);
    Code:
       0: aload_0
       1: getfield      #6                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
       4: areturn

  static org.xnio.StreamConnection access$1000(io.undertow.client.http.HttpClientConnection);
    Code:
       0: aload_0
       1: getfield      #5                  // Field connection:Lorg/xnio/StreamConnection;
       4: areturn

  static org.xnio.conduits.PushBackStreamSourceConduit access$1100(io.undertow.client.http.HttpClientConnection);
    Code:
       0: aload_0
       1: getfield      #4                  // Field pushBackStreamSourceConduit:Lorg/xnio/conduits/PushBackStreamSourceConduit;
       4: areturn

  static boolean access$1202(io.undertow.client.http.HttpClientConnection, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #3                  // Field http2UpgradeReceived:Z
       6: ireturn

  static io.undertow.client.http.HttpResponseBuilder access$802(io.undertow.client.http.HttpClientConnection, io.undertow.client.http.HttpResponseBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #7                  // Field pendingResponse:Lio/undertow/client/http/HttpResponseBuilder;
       6: areturn

  static void access$1300(io.undertow.client.http.HttpClientConnection, io.undertow.client.ClientResponse, io.undertow.client.ClientExchange);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method prepareResponseChannel:(Lio/undertow/client/ClientResponse;Lio/undertow/client/ClientExchange;)V
       6: return

  static io.undertow.connector.PooledByteBuffer access$602(io.undertow.client.http.HttpClientConnection, io.undertow.connector.PooledByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #9                  // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
       6: areturn

  static int access$1400(io.undertow.client.http.HttpClientConnection);
    Code:
       0: aload_0
       1: getfield      #1                  // Field requestCount:I
       4: ireturn

  static int access$1402(io.undertow.client.http.HttpClientConnection, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #1                  // Field requestCount:I
       6: ireturn
}
