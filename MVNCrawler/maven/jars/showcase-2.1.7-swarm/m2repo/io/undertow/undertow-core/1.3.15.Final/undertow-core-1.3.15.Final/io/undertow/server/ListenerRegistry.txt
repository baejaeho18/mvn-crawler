Compiled from "ListenerRegistry.java"
public class io.undertow.server.ListenerRegistry {
  private final java.util.concurrent.ConcurrentMap<java.lang.String, io.undertow.server.ListenerRegistry$Listener> listeners;

  public io.undertow.server.ListenerRegistry();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class io/undertow/util/CopyOnWriteMap
       8: dup
       9: invokespecial #3                  // Method io/undertow/util/CopyOnWriteMap."<init>":()V
      12: putfield      #4                  // Field listeners:Ljava/util/concurrent/ConcurrentMap;
      15: return

  public io.undertow.server.ListenerRegistry$Listener getListener(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field listeners:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #6                  // class io/undertow/server/ListenerRegistry$Listener
      13: areturn

  public void addListener(io.undertow.server.ListenerRegistry$Listener);
    Code:
       0: aload_0
       1: getfield      #4                  // Field listeners:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokevirtual #7                  // Method io/undertow/server/ListenerRegistry$Listener.getName:()Ljava/lang/String;
       8: aload_1
       9: invokeinterface #8,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: ifnull        30
      17: getstatic     #9                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      20: aload_1
      21: invokevirtual #7                  // Method io/undertow/server/ListenerRegistry$Listener.getName:()Ljava/lang/String;
      24: invokeinterface #10,  2           // InterfaceMethod io/undertow/UndertowMessages.listenerAlreadyRegistered:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      29: athrow
      30: return

  public void removeListener(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field listeners:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return
}
