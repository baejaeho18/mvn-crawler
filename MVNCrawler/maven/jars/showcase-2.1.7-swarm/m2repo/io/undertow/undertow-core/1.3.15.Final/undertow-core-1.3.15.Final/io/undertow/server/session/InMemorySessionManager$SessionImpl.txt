Compiled from "InMemorySessionManager.java"
class io.undertow.server.session.InMemorySessionManager$SessionImpl implements io.undertow.server.session.Session {
  final io.undertow.server.session.InMemorySessionManager sessionManager;

  final java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.Object> attributes;

  volatile long lastAccessed;

  final long creationTime;

  volatile int maxInactiveInterval;

  static volatile java.util.concurrent.atomic.AtomicReferenceFieldUpdater<io.undertow.server.session.InMemorySessionManager$SessionImpl, java.lang.Object> evictionTokenUpdater;

  private java.lang.String sessionId;

  private volatile java.lang.Object evictionToken;

  private final io.undertow.server.session.SessionConfig sessionCookieConfig;

  private volatile long expireTime;

  private volatile boolean invalid;

  private volatile boolean invalidationStarted;

  final org.xnio.XnioExecutor executor;

  final org.xnio.XnioWorker worker;

  org.xnio.XnioExecutor$Key timerCancelKey;

  java.lang.Runnable cancelTask;

  private static java.util.concurrent.atomic.AtomicReferenceFieldUpdater<io.undertow.server.session.InMemorySessionManager$SessionImpl, java.lang.Object> createTokenUpdater();
    Code:
       0: ldc           #5                  // class io/undertow/server/session/InMemorySessionManager$SessionImpl
       2: ldc           #6                  // class java/lang/Object
       4: ldc           #7                  // String evictionToken
       6: invokestatic  #8                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: areturn

  private io.undertow.server.session.InMemorySessionManager$SessionImpl(io.undertow.server.session.InMemorySessionManager, java.lang.String, io.undertow.server.session.SessionConfig, org.xnio.XnioExecutor, org.xnio.XnioWorker, java.lang.Object, int);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #10                 // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #11                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #12                 // Field attributes:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: ldc2_w        #13                 // long -1l
      19: putfield      #1                  // Field expireTime:J
      22: aload_0
      23: iconst_0
      24: putfield      #15                 // Field invalid:Z
      27: aload_0
      28: iconst_0
      29: putfield      #16                 // Field invalidationStarted:Z
      32: aload_0
      33: new           #17                 // class io/undertow/server/session/InMemorySessionManager$SessionImpl$2
      36: dup
      37: aload_0
      38: invokespecial #18                 // Method io/undertow/server/session/InMemorySessionManager$SessionImpl$2."<init>":(Lio/undertow/server/session/InMemorySessionManager$SessionImpl;)V
      41: putfield      #19                 // Field cancelTask:Ljava/lang/Runnable;
      44: aload_0
      45: aload_1
      46: putfield      #20                 // Field sessionManager:Lio/undertow/server/session/InMemorySessionManager;
      49: aload_0
      50: aload_2
      51: putfield      #21                 // Field sessionId:Ljava/lang/String;
      54: aload_0
      55: aload_3
      56: putfield      #22                 // Field sessionCookieConfig:Lio/undertow/server/session/SessionConfig;
      59: aload_0
      60: aload         4
      62: putfield      #23                 // Field executor:Lorg/xnio/XnioExecutor;
      65: aload_0
      66: aload         5
      68: putfield      #24                 // Field worker:Lorg/xnio/XnioWorker;
      71: aload_0
      72: aload         6
      74: putfield      #25                 // Field evictionToken:Ljava/lang/Object;
      77: aload_0
      78: aload_0
      79: invokestatic  #26                 // Method java/lang/System.currentTimeMillis:()J
      82: dup2_x1
      83: putfield      #27                 // Field lastAccessed:J
      86: putfield      #28                 // Field creationTime:J
      89: aload_0
      90: iload         7
      92: putfield      #29                 // Field maxInactiveInterval:I
      95: return

  synchronized void bumpTimeout();
    Code:
       0: aload_0
       1: getfield      #16                 // Field invalidationStarted:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokevirtual #30                 // Method getMaxInactiveInterval:()I
      12: istore_1
      13: iload_1
      14: ifle          107
      17: invokestatic  #26                 // Method java/lang/System.currentTimeMillis:()J
      20: iload_1
      21: i2l
      22: ldc2_w        #31                 // long 1000l
      25: lmul
      26: ladd
      27: lstore_2
      28: aload_0
      29: getfield      #33                 // Field timerCancelKey:Lorg/xnio/XnioExecutor$Key;
      32: ifnull        62
      35: lload_2
      36: aload_0
      37: getfield      #1                  // Field expireTime:J
      40: lcmp
      41: ifge          62
      44: aload_0
      45: getfield      #33                 // Field timerCancelKey:Lorg/xnio/XnioExecutor$Key;
      48: invokeinterface #34,  1           // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
      53: ifne          57
      56: return
      57: aload_0
      58: aconst_null
      59: putfield      #33                 // Field timerCancelKey:Lorg/xnio/XnioExecutor$Key;
      62: aload_0
      63: lload_2
      64: putfield      #1                  // Field expireTime:J
      67: aload_0
      68: getfield      #33                 // Field timerCancelKey:Lorg/xnio/XnioExecutor$Key;
      71: ifnonnull     104
      74: aload_0
      75: aload_0
      76: getfield      #23                 // Field executor:Lorg/xnio/XnioExecutor;
      79: aload_0
      80: getfield      #19                 // Field cancelTask:Ljava/lang/Runnable;
      83: iload_1
      84: i2l
      85: ldc2_w        #31                 // long 1000l
      88: lmul
      89: ldc2_w        #35                 // long 500l
      92: ladd
      93: getstatic     #37                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      96: invokeinterface #38,  5           // InterfaceMethod org/xnio/XnioExecutor.executeAfter:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
     101: putfield      #33                 // Field timerCancelKey:Lorg/xnio/XnioExecutor$Key;
     104: goto          136
     107: aload_0
     108: ldc2_w        #13                 // long -1l
     111: putfield      #1                  // Field expireTime:J
     114: aload_0
     115: getfield      #33                 // Field timerCancelKey:Lorg/xnio/XnioExecutor$Key;
     118: ifnull        136
     121: aload_0
     122: getfield      #33                 // Field timerCancelKey:Lorg/xnio/XnioExecutor$Key;
     125: invokeinterface #34,  1           // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
     130: pop
     131: aload_0
     132: aconst_null
     133: putfield      #33                 // Field timerCancelKey:Lorg/xnio/XnioExecutor$Key;
     136: aload_0
     137: getfield      #25                 // Field evictionToken:Ljava/lang/Object;
     140: ifnull        189
     143: aload_0
     144: getfield      #25                 // Field evictionToken:Ljava/lang/Object;
     147: astore_2
     148: getstatic     #39                 // Field evictionTokenUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     151: aload_0
     152: aload_2
     153: aconst_null
     154: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     157: ifeq          189
     160: aload_0
     161: getfield      #20                 // Field sessionManager:Lio/undertow/server/session/InMemorySessionManager;
     164: invokestatic  #41                 // Method io/undertow/server/session/InMemorySessionManager.access$400:(Lio/undertow/server/session/InMemorySessionManager;)Lio/undertow/util/ConcurrentDirectDeque;
     167: aload_2
     168: invokevirtual #42                 // Method io/undertow/util/ConcurrentDirectDeque.removeToken:(Ljava/lang/Object;)V
     171: aload_0
     172: aload_0
     173: getfield      #20                 // Field sessionManager:Lio/undertow/server/session/InMemorySessionManager;
     176: invokestatic  #41                 // Method io/undertow/server/session/InMemorySessionManager.access$400:(Lio/undertow/server/session/InMemorySessionManager;)Lio/undertow/util/ConcurrentDirectDeque;
     179: aload_0
     180: getfield      #21                 // Field sessionId:Ljava/lang/String;
     183: invokevirtual #43                 // Method io/undertow/util/ConcurrentDirectDeque.offerLastAndReturnToken:(Ljava/lang/Object;)Ljava/lang/Object;
     186: putfield      #25                 // Field evictionToken:Ljava/lang/Object;
     189: return

  public java.lang.String getId();
    Code:
       0: aload_0
       1: getfield      #21                 // Field sessionId:Ljava/lang/String;
       4: areturn

  public void requestDone(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: getfield      #15                 // Field invalid:Z
       4: ifne          14
       7: aload_0
       8: invokestatic  #26                 // Method java/lang/System.currentTimeMillis:()J
      11: putfield      #27                 // Field lastAccessed:J
      14: return

  public long getCreationTime();
    Code:
       0: aload_0
       1: getfield      #15                 // Field invalid:Z
       4: ifeq          20
       7: getstatic     #44                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: aload_0
      11: getfield      #21                 // Field sessionId:Ljava/lang/String;
      14: invokeinterface #45,  2           // InterfaceMethod io/undertow/UndertowMessages.sessionNotFound:(Ljava/lang/String;)Ljava/lang/IllegalStateException;
      19: athrow
      20: aload_0
      21: getfield      #28                 // Field creationTime:J
      24: lreturn

  public long getLastAccessedTime();
    Code:
       0: aload_0
       1: getfield      #15                 // Field invalid:Z
       4: ifeq          20
       7: getstatic     #44                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: aload_0
      11: getfield      #21                 // Field sessionId:Ljava/lang/String;
      14: invokeinterface #45,  2           // InterfaceMethod io/undertow/UndertowMessages.sessionNotFound:(Ljava/lang/String;)Ljava/lang/IllegalStateException;
      19: athrow
      20: aload_0
      21: getfield      #27                 // Field lastAccessed:J
      24: lreturn

  public void setMaxInactiveInterval(int);
    Code:
       0: aload_0
       1: getfield      #15                 // Field invalid:Z
       4: ifeq          20
       7: getstatic     #44                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: aload_0
      11: getfield      #21                 // Field sessionId:Ljava/lang/String;
      14: invokeinterface #45,  2           // InterfaceMethod io/undertow/UndertowMessages.sessionNotFound:(Ljava/lang/String;)Ljava/lang/IllegalStateException;
      19: athrow
      20: aload_0
      21: iload_1
      22: putfield      #29                 // Field maxInactiveInterval:I
      25: aload_0
      26: invokevirtual #46                 // Method bumpTimeout:()V
      29: return

  public int getMaxInactiveInterval();
    Code:
       0: aload_0
       1: getfield      #15                 // Field invalid:Z
       4: ifeq          20
       7: getstatic     #44                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: aload_0
      11: getfield      #21                 // Field sessionId:Ljava/lang/String;
      14: invokeinterface #45,  2           // InterfaceMethod io/undertow/UndertowMessages.sessionNotFound:(Ljava/lang/String;)Ljava/lang/IllegalStateException;
      19: athrow
      20: aload_0
      21: getfield      #29                 // Field maxInactiveInterval:I
      24: ireturn

  public java.lang.Object getAttribute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field invalid:Z
       4: ifeq          20
       7: getstatic     #44                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: aload_0
      11: getfield      #21                 // Field sessionId:Ljava/lang/String;
      14: invokeinterface #45,  2           // InterfaceMethod io/undertow/UndertowMessages.sessionNotFound:(Ljava/lang/String;)Ljava/lang/IllegalStateException;
      19: athrow
      20: aload_0
      21: invokevirtual #46                 // Method bumpTimeout:()V
      24: aload_0
      25: getfield      #12                 // Field attributes:Ljava/util/concurrent/ConcurrentMap;
      28: aload_1
      29: invokeinterface #47,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      34: areturn

  public java.util.Set<java.lang.String> getAttributeNames();
    Code:
       0: aload_0
       1: getfield      #15                 // Field invalid:Z
       4: ifeq          20
       7: getstatic     #44                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: aload_0
      11: getfield      #21                 // Field sessionId:Ljava/lang/String;
      14: invokeinterface #45,  2           // InterfaceMethod io/undertow/UndertowMessages.sessionNotFound:(Ljava/lang/String;)Ljava/lang/IllegalStateException;
      19: athrow
      20: aload_0
      21: invokevirtual #46                 // Method bumpTimeout:()V
      24: aload_0
      25: getfield      #12                 // Field attributes:Ljava/util/concurrent/ConcurrentMap;
      28: invokeinterface #48,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
      33: areturn

  public java.lang.Object setAttribute(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #15                 // Field invalid:Z
       4: ifeq          20
       7: getstatic     #44                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: aload_0
      11: getfield      #21                 // Field sessionId:Ljava/lang/String;
      14: invokeinterface #45,  2           // InterfaceMethod io/undertow/UndertowMessages.sessionNotFound:(Ljava/lang/String;)Ljava/lang/IllegalStateException;
      19: athrow
      20: aload_0
      21: getfield      #12                 // Field attributes:Ljava/util/concurrent/ConcurrentMap;
      24: aload_1
      25: aload_2
      26: invokeinterface #49,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      31: astore_3
      32: aload_3
      33: ifnonnull     52
      36: aload_0
      37: getfield      #20                 // Field sessionManager:Lio/undertow/server/session/InMemorySessionManager;
      40: invokestatic  #50                 // Method io/undertow/server/session/InMemorySessionManager.access$500:(Lio/undertow/server/session/InMemorySessionManager;)Lio/undertow/server/session/SessionListeners;
      43: aload_0
      44: aload_1
      45: aload_2
      46: invokevirtual #51                 // Method io/undertow/server/session/SessionListeners.attributeAdded:(Lio/undertow/server/session/Session;Ljava/lang/String;Ljava/lang/Object;)V
      49: goto          66
      52: aload_0
      53: getfield      #20                 // Field sessionManager:Lio/undertow/server/session/InMemorySessionManager;
      56: invokestatic  #50                 // Method io/undertow/server/session/InMemorySessionManager.access$500:(Lio/undertow/server/session/InMemorySessionManager;)Lio/undertow/server/session/SessionListeners;
      59: aload_0
      60: aload_1
      61: aload_2
      62: aload_3
      63: invokevirtual #52                 // Method io/undertow/server/session/SessionListeners.attributeUpdated:(Lio/undertow/server/session/Session;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      66: aload_0
      67: invokevirtual #46                 // Method bumpTimeout:()V
      70: aload_3
      71: areturn

  public java.lang.Object removeAttribute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field invalid:Z
       4: ifeq          20
       7: getstatic     #44                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: aload_0
      11: getfield      #21                 // Field sessionId:Ljava/lang/String;
      14: invokeinterface #45,  2           // InterfaceMethod io/undertow/UndertowMessages.sessionNotFound:(Ljava/lang/String;)Ljava/lang/IllegalStateException;
      19: athrow
      20: aload_0
      21: getfield      #12                 // Field attributes:Ljava/util/concurrent/ConcurrentMap;
      24: aload_1
      25: invokeinterface #53,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      30: astore_2
      31: aload_0
      32: getfield      #20                 // Field sessionManager:Lio/undertow/server/session/InMemorySessionManager;
      35: invokestatic  #50                 // Method io/undertow/server/session/InMemorySessionManager.access$500:(Lio/undertow/server/session/InMemorySessionManager;)Lio/undertow/server/session/SessionListeners;
      38: aload_0
      39: aload_1
      40: aload_2
      41: invokevirtual #54                 // Method io/undertow/server/session/SessionListeners.attributeRemoved:(Lio/undertow/server/session/Session;Ljava/lang/String;Ljava/lang/Object;)V
      44: aload_0
      45: invokevirtual #46                 // Method bumpTimeout:()V
      48: aload_2
      49: areturn

  public void invalidate(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #55                 // Field io/undertow/server/session/SessionListener$SessionDestroyedReason.INVALIDATED:Lio/undertow/server/session/SessionListener$SessionDestroyedReason;
       5: invokevirtual #56                 // Method invalidate:(Lio/undertow/server/HttpServerExchange;Lio/undertow/server/session/SessionListener$SessionDestroyedReason;)V
       8: aload_1
       9: ifnull        24
      12: aload_1
      13: aload_0
      14: getfield      #20                 // Field sessionManager:Lio/undertow/server/session/InMemorySessionManager;
      17: invokestatic  #57                 // Method io/undertow/server/session/InMemorySessionManager.access$600:(Lio/undertow/server/session/InMemorySessionManager;)Lio/undertow/util/AttachmentKey;
      20: invokevirtual #58                 // Method io/undertow/server/HttpServerExchange.removeAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      23: pop
      24: return

  void invalidate(io.undertow.server.HttpServerExchange, io.undertow.server.session.SessionListener$SessionDestroyedReason);
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #33                 // Field timerCancelKey:Lorg/xnio/XnioExecutor$Key;
       8: ifnull        21
      11: aload_0
      12: getfield      #33                 // Field timerCancelKey:Lorg/xnio/XnioExecutor$Key;
      15: invokeinterface #34,  1           // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
      20: pop
      21: aload_0
      22: getfield      #20                 // Field sessionManager:Lio/undertow/server/session/InMemorySessionManager;
      25: invokestatic  #59                 // Method io/undertow/server/session/InMemorySessionManager.access$700:(Lio/undertow/server/session/InMemorySessionManager;)Ljava/util/concurrent/ConcurrentMap;
      28: aload_0
      29: getfield      #21                 // Field sessionId:Ljava/lang/String;
      32: invokeinterface #53,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #5                  // class io/undertow/server/session/InMemorySessionManager$SessionImpl
      40: astore        4
      42: aload         4
      44: ifnonnull     66
      47: aload_2
      48: getstatic     #55                 // Field io/undertow/server/session/SessionListener$SessionDestroyedReason.INVALIDATED:Lio/undertow/server/session/SessionListener$SessionDestroyedReason;
      51: if_acmpne     63
      54: getstatic     #44                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      57: invokeinterface #60,  1           // InterfaceMethod io/undertow/UndertowMessages.sessionAlreadyInvalidated:()Ljava/lang/IllegalStateException;
      62: athrow
      63: aload_3
      64: monitorexit
      65: return
      66: aload_0
      67: iconst_1
      68: putfield      #16                 // Field invalidationStarted:Z
      71: aload_3
      72: monitorexit
      73: goto          83
      76: astore        5
      78: aload_3
      79: monitorexit
      80: aload         5
      82: athrow
      83: aload_0
      84: getfield      #20                 // Field sessionManager:Lio/undertow/server/session/InMemorySessionManager;
      87: invokestatic  #50                 // Method io/undertow/server/session/InMemorySessionManager.access$500:(Lio/undertow/server/session/InMemorySessionManager;)Lio/undertow/server/session/SessionListeners;
      90: aload_0
      91: aload_1
      92: aload_2
      93: invokevirtual #61                 // Method io/undertow/server/session/SessionListeners.sessionDestroyed:(Lio/undertow/server/session/Session;Lio/undertow/server/HttpServerExchange;Lio/undertow/server/session/SessionListener$SessionDestroyedReason;)V
      96: aload_0
      97: iconst_1
      98: putfield      #15                 // Field invalid:Z
     101: aload_0
     102: getfield      #20                 // Field sessionManager:Lio/undertow/server/session/InMemorySessionManager;
     105: invokestatic  #62                 // Method io/undertow/server/session/InMemorySessionManager.access$800:(Lio/undertow/server/session/InMemorySessionManager;)Z
     108: ifeq          284
     111: aload_0
     112: getfield      #20                 // Field sessionManager:Lio/undertow/server/session/InMemorySessionManager;
     115: invokestatic  #63                 // Method io/undertow/server/session/InMemorySessionManager.access$900:(Lio/undertow/server/session/InMemorySessionManager;)Ljava/util/concurrent/atomic/AtomicLong;
     118: invokevirtual #64                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     121: lstore_3
     122: new           #65                 // class java/math/BigDecimal
     125: dup
     126: lload_3
     127: invokespecial #66                 // Method java/math/BigDecimal."<init>":(J)V
     130: astore        7
     132: aload         7
     134: new           #65                 // class java/math/BigDecimal
     137: dup
     138: aload_0
     139: getfield      #20                 // Field sessionManager:Lio/undertow/server/session/InMemorySessionManager;
     142: invokestatic  #67                 // Method io/undertow/server/session/InMemorySessionManager.access$1000:(Lio/undertow/server/session/InMemorySessionManager;)Ljava/util/concurrent/atomic/AtomicLong;
     145: invokevirtual #64                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     148: invokespecial #66                 // Method java/math/BigDecimal."<init>":(J)V
     151: invokevirtual #68                 // Method java/math/BigDecimal.multiply:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
     154: aload         7
     156: invokevirtual #69                 // Method java/math/BigDecimal.add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
     159: pop
     160: aload         7
     162: new           #65                 // class java/math/BigDecimal
     165: dup
     166: aload_0
     167: getfield      #20                 // Field sessionManager:Lio/undertow/server/session/InMemorySessionManager;
     170: invokestatic  #67                 // Method io/undertow/server/session/InMemorySessionManager.access$1000:(Lio/undertow/server/session/InMemorySessionManager;)Ljava/util/concurrent/atomic/AtomicLong;
     173: invokevirtual #64                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     176: lconst_1
     177: ladd
     178: invokespecial #66                 // Method java/math/BigDecimal."<init>":(J)V
     181: getstatic     #70                 // Field java/math/MathContext.DECIMAL64:Ljava/math/MathContext;
     184: invokevirtual #71                 // Method java/math/BigDecimal.divide:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
     187: invokevirtual #72                 // Method java/math/BigDecimal.longValue:()J
     190: lstore        5
     192: aload_0
     193: getfield      #20                 // Field sessionManager:Lio/undertow/server/session/InMemorySessionManager;
     196: invokestatic  #63                 // Method io/undertow/server/session/InMemorySessionManager.access$900:(Lio/undertow/server/session/InMemorySessionManager;)Ljava/util/concurrent/atomic/AtomicLong;
     199: lload_3
     200: lload         5
     202: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicLong.compareAndSet:(JJ)Z
     205: ifeq          111
     208: aload_0
     209: getfield      #20                 // Field sessionManager:Lio/undertow/server/session/InMemorySessionManager;
     212: invokestatic  #67                 // Method io/undertow/server/session/InMemorySessionManager.access$1000:(Lio/undertow/server/session/InMemorySessionManager;)Ljava/util/concurrent/atomic/AtomicLong;
     215: invokevirtual #74                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
     218: pop2
     219: invokestatic  #26                 // Method java/lang/System.currentTimeMillis:()J
     222: aload_0
     223: getfield      #28                 // Field creationTime:J
     226: lsub
     227: lstore        7
     229: aload_0
     230: getfield      #20                 // Field sessionManager:Lio/undertow/server/session/InMemorySessionManager;
     233: invokestatic  #75                 // Method io/undertow/server/session/InMemorySessionManager.access$1100:(Lio/undertow/server/session/InMemorySessionManager;)Ljava/util/concurrent/atomic/AtomicLong;
     236: invokevirtual #64                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     239: lstore        9
     241: lload         7
     243: lload         9
     245: lcmp
     246: ifle          284
     249: aload_0
     250: getfield      #20                 // Field sessionManager:Lio/undertow/server/session/InMemorySessionManager;
     253: invokestatic  #75                 // Method io/undertow/server/session/InMemorySessionManager.access$1100:(Lio/undertow/server/session/InMemorySessionManager;)Ljava/util/concurrent/atomic/AtomicLong;
     256: lload         9
     258: lload         7
     260: invokevirtual #73                 // Method java/util/concurrent/atomic/AtomicLong.compareAndSet:(JJ)Z
     263: ifeq          269
     266: goto          284
     269: aload_0
     270: getfield      #20                 // Field sessionManager:Lio/undertow/server/session/InMemorySessionManager;
     273: invokestatic  #75                 // Method io/undertow/server/session/InMemorySessionManager.access$1100:(Lio/undertow/server/session/InMemorySessionManager;)Ljava/util/concurrent/atomic/AtomicLong;
     276: invokevirtual #64                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
     279: lstore        9
     281: goto          241
     284: aload_1
     285: ifnull        302
     288: aload_0
     289: getfield      #22                 // Field sessionCookieConfig:Lio/undertow/server/session/SessionConfig;
     292: aload_1
     293: aload_0
     294: invokevirtual #76                 // Method getId:()Ljava/lang/String;
     297: invokeinterface #77,  3           // InterfaceMethod io/undertow/server/session/SessionConfig.clearSession:(Lio/undertow/server/HttpServerExchange;Ljava/lang/String;)V
     302: return
    Exception table:
       from    to  target type
           4    65    76   any
          66    73    76   any
          76    80    76   any

  public io.undertow.server.session.SessionManager getSessionManager();
    Code:
       0: aload_0
       1: getfield      #20                 // Field sessionManager:Lio/undertow/server/session/InMemorySessionManager;
       4: areturn

  public java.lang.String changeSessionId(io.undertow.server.HttpServerExchange, io.undertow.server.session.SessionConfig);
    Code:
       0: aload_0
       1: getfield      #21                 // Field sessionId:Ljava/lang/String;
       4: astore_3
       5: aload_0
       6: getfield      #20                 // Field sessionManager:Lio/undertow/server/session/InMemorySessionManager;
       9: invokestatic  #78                 // Method io/undertow/server/session/InMemorySessionManager.access$1200:(Lio/undertow/server/session/InMemorySessionManager;)Lio/undertow/server/session/SessionIdGenerator;
      12: invokeinterface #79,  1           // InterfaceMethod io/undertow/server/session/SessionIdGenerator.createSessionId:()Ljava/lang/String;
      17: astore        4
      19: aload_0
      20: aload         4
      22: putfield      #21                 // Field sessionId:Ljava/lang/String;
      25: aload_0
      26: getfield      #20                 // Field sessionManager:Lio/undertow/server/session/InMemorySessionManager;
      29: invokestatic  #59                 // Method io/undertow/server/session/InMemorySessionManager.access$700:(Lio/undertow/server/session/InMemorySessionManager;)Ljava/util/concurrent/ConcurrentMap;
      32: aload         4
      34: aload_0
      35: invokeinterface #49,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: aload_0
      42: getfield      #20                 // Field sessionManager:Lio/undertow/server/session/InMemorySessionManager;
      45: invokestatic  #59                 // Method io/undertow/server/session/InMemorySessionManager.access$700:(Lio/undertow/server/session/InMemorySessionManager;)Ljava/util/concurrent/ConcurrentMap;
      48: aload_3
      49: invokeinterface #53,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: aload_2
      56: aload_1
      57: aload_0
      58: invokevirtual #76                 // Method getId:()Ljava/lang/String;
      61: invokeinterface #80,  3           // InterfaceMethod io/undertow/server/session/SessionConfig.setSessionId:(Lio/undertow/server/HttpServerExchange;Ljava/lang/String;)V
      66: aload_0
      67: getfield      #20                 // Field sessionManager:Lio/undertow/server/session/InMemorySessionManager;
      70: invokestatic  #50                 // Method io/undertow/server/session/InMemorySessionManager.access$500:(Lio/undertow/server/session/InMemorySessionManager;)Lio/undertow/server/session/SessionListeners;
      73: aload_0
      74: aload_3
      75: invokevirtual #81                 // Method io/undertow/server/session/SessionListeners.sessionIdChanged:(Lio/undertow/server/session/Session;Ljava/lang/String;)V
      78: aload         4
      80: areturn

  private synchronized void destroy();
    Code:
       0: aload_0
       1: getfield      #33                 // Field timerCancelKey:Lorg/xnio/XnioExecutor$Key;
       4: ifnull        17
       7: aload_0
       8: getfield      #33                 // Field timerCancelKey:Lorg/xnio/XnioExecutor$Key;
      11: invokeinterface #34,  1           // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
      16: pop
      17: aload_0
      18: aconst_null
      19: putfield      #19                 // Field cancelTask:Ljava/lang/Runnable;
      22: return

  static void access$000(io.undertow.server.session.InMemorySessionManager$SessionImpl);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method destroy:()V
       4: return

  io.undertow.server.session.InMemorySessionManager$SessionImpl(io.undertow.server.session.InMemorySessionManager, java.lang.String, io.undertow.server.session.SessionConfig, org.xnio.XnioExecutor, org.xnio.XnioWorker, java.lang.Object, int, io.undertow.server.session.InMemorySessionManager$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: iload         7
      12: invokespecial #3                  // Method "<init>":(Lio/undertow/server/session/InMemorySessionManager;Ljava/lang/String;Lio/undertow/server/session/SessionConfig;Lorg/xnio/XnioExecutor;Lorg/xnio/XnioWorker;Ljava/lang/Object;I)V
      15: return

  static java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$200();
    Code:
       0: invokestatic  #2                  // Method createTokenUpdater:()Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: areturn

  static long access$300(io.undertow.server.session.InMemorySessionManager$SessionImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field expireTime:J
       4: lreturn

  static {};
    Code:
       0: new           #82                 // class io/undertow/server/session/InMemorySessionManager$SessionImpl$1
       3: dup
       4: invokespecial #83                 // Method io/undertow/server/session/InMemorySessionManager$SessionImpl$1."<init>":()V
       7: invokestatic  #84                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      10: checkcast     #85                 // class java/util/concurrent/atomic/AtomicReferenceFieldUpdater
      13: putstatic     #39                 // Field evictionTokenUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      16: return
}
