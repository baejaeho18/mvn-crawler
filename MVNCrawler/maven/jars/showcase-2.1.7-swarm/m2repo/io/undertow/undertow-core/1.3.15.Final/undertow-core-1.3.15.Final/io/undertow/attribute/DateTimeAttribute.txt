Compiled from "DateTimeAttribute.java"
public class io.undertow.attribute.DateTimeAttribute implements io.undertow.attribute.ExchangeAttribute {
  public static final java.lang.String DATE_TIME_SHORT;

  public static final java.lang.String DATE_TIME;

  public static final java.lang.String CUSTOM_TIME;

  public static final io.undertow.attribute.ExchangeAttribute INSTANCE;

  private final java.lang.String dateFormat;

  private final java.lang.ThreadLocal<java.text.SimpleDateFormat> cachedFormat;

  private io.undertow.attribute.DateTimeAttribute();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field dateFormat:Ljava/lang/String;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field cachedFormat:Ljava/lang/ThreadLocal;
      14: return

  public io.undertow.attribute.DateTimeAttribute(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #4                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;)V
       6: return

  public io.undertow.attribute.DateTimeAttribute(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field dateFormat:Ljava/lang/String;
       9: aload_0
      10: new           #5                  // class io/undertow/attribute/DateTimeAttribute$1
      13: dup
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokespecial #6                  // Method io/undertow/attribute/DateTimeAttribute$1."<init>":(Lio/undertow/attribute/DateTimeAttribute;Ljava/lang/String;Ljava/lang/String;)V
      20: putfield      #3                  // Field cachedFormat:Ljava/lang/ThreadLocal;
      23: return

  public java.lang.String readAttribute(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: getfield      #2                  // Field dateFormat:Ljava/lang/String;
       4: ifnonnull     18
       7: new           #7                  // class java/util/Date
      10: dup
      11: invokespecial #8                  // Method java/util/Date."<init>":()V
      14: invokestatic  #9                  // Method io/undertow/util/DateUtils.toCommonLogFormat:(Ljava/util/Date;)Ljava/lang/String;
      17: areturn
      18: aload_0
      19: getfield      #3                  // Field cachedFormat:Ljava/lang/ThreadLocal;
      22: invokevirtual #10                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      25: checkcast     #11                 // class java/text/SimpleDateFormat
      28: astore_2
      29: aload_2
      30: new           #7                  // class java/util/Date
      33: dup
      34: invokespecial #8                  // Method java/util/Date."<init>":()V
      37: invokevirtual #12                 // Method java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      40: areturn

  public void writeAttribute(io.undertow.server.HttpServerExchange, java.lang.String) throws io.undertow.attribute.ReadOnlyAttributeException;
    Code:
       0: new           #13                 // class io/undertow/attribute/ReadOnlyAttributeException
       3: dup
       4: ldc           #14                 // String Date time
       6: aload_2
       7: invokespecial #15                 // Method io/undertow/attribute/ReadOnlyAttributeException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      10: athrow

  static {};
    Code:
       0: new           #16                 // class io/undertow/attribute/DateTimeAttribute
       3: dup
       4: invokespecial #17                 // Method "<init>":()V
       7: putstatic     #18                 // Field INSTANCE:Lio/undertow/attribute/ExchangeAttribute;
      10: return
}
