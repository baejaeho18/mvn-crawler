Compiled from "PathMatcher.java"
public class io.undertow.util.PathMatcher<T> {
  private static final java.lang.String STRING_PATH_SEPARATOR;

  private volatile T defaultHandler;

  private final io.undertow.util.SubstringMap<T> paths;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, T> exactPathMatches;

  private volatile int[] lengths;

  public io.undertow.util.PathMatcher(T);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class io/undertow/util/SubstringMap
       8: dup
       9: invokespecial #3                  // Method io/undertow/util/SubstringMap."<init>":()V
      12: putfield      #4                  // Field paths:Lio/undertow/util/SubstringMap;
      15: aload_0
      16: new           #5                  // class io/undertow/util/CopyOnWriteMap
      19: dup
      20: invokespecial #6                  // Method io/undertow/util/CopyOnWriteMap."<init>":()V
      23: putfield      #7                  // Field exactPathMatches:Ljava/util/concurrent/ConcurrentMap;
      26: aload_0
      27: iconst_0
      28: newarray       int
      30: putfield      #8                  // Field lengths:[I
      33: aload_0
      34: aload_1
      35: putfield      #9                  // Field defaultHandler:Ljava/lang/Object;
      38: return

  public io.undertow.util.PathMatcher();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class io/undertow/util/SubstringMap
       8: dup
       9: invokespecial #3                  // Method io/undertow/util/SubstringMap."<init>":()V
      12: putfield      #4                  // Field paths:Lio/undertow/util/SubstringMap;
      15: aload_0
      16: new           #5                  // class io/undertow/util/CopyOnWriteMap
      19: dup
      20: invokespecial #6                  // Method io/undertow/util/CopyOnWriteMap."<init>":()V
      23: putfield      #7                  // Field exactPathMatches:Ljava/util/concurrent/ConcurrentMap;
      26: aload_0
      27: iconst_0
      28: newarray       int
      30: putfield      #8                  // Field lengths:[I
      33: return

  public io.undertow.util.PathMatcher$PathMatch<T> match(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field exactPathMatches:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.isEmpty:()Z
       9: ifne          34
      12: aload_0
      13: aload_1
      14: invokevirtual #11                 // Method getExactPath:(Ljava/lang/String;)Ljava/lang/Object;
      17: astore_2
      18: aload_2
      19: ifnull        34
      22: new           #12                 // class io/undertow/util/PathMatcher$PathMatch
      25: dup
      26: aload_1
      27: ldc           #13                 // String
      29: aload_2
      30: invokespecial #14                 // Method io/undertow/util/PathMatcher$PathMatch."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
      33: areturn
      34: aload_1
      35: invokevirtual #15                 // Method java/lang/String.length:()I
      38: istore_2
      39: aload_0
      40: getfield      #8                  // Field lengths:[I
      43: astore_3
      44: iconst_0
      45: istore        4
      47: iload         4
      49: aload_3
      50: arraylength
      51: if_icmpge     169
      54: aload_3
      55: iload         4
      57: iaload
      58: istore        5
      60: iload         5
      62: iload_2
      63: if_icmpne     101
      66: aload_0
      67: getfield      #4                  // Field paths:Lio/undertow/util/SubstringMap;
      70: aload_1
      71: iload_2
      72: invokevirtual #16                 // Method io/undertow/util/SubstringMap.get:(Ljava/lang/String;I)Lio/undertow/util/SubstringMap$SubstringMatch;
      75: astore        6
      77: aload         6
      79: ifnull        98
      82: new           #12                 // class io/undertow/util/PathMatcher$PathMatch
      85: dup
      86: aload_1
      87: ldc           #13                 // String
      89: aload         6
      91: invokevirtual #17                 // Method io/undertow/util/SubstringMap$SubstringMatch.getValue:()Ljava/lang/Object;
      94: invokespecial #14                 // Method io/undertow/util/PathMatcher$PathMatch."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
      97: areturn
      98: goto          163
     101: iload         5
     103: iload_2
     104: if_icmpge     163
     107: aload_1
     108: iload         5
     110: invokevirtual #18                 // Method java/lang/String.charAt:(I)C
     113: istore        6
     115: iload         6
     117: bipush        47
     119: if_icmpne     163
     122: aload_0
     123: getfield      #4                  // Field paths:Lio/undertow/util/SubstringMap;
     126: aload_1
     127: iload         5
     129: invokevirtual #16                 // Method io/undertow/util/SubstringMap.get:(Ljava/lang/String;I)Lio/undertow/util/SubstringMap$SubstringMatch;
     132: astore        7
     134: aload         7
     136: ifnull        163
     139: new           #12                 // class io/undertow/util/PathMatcher$PathMatch
     142: dup
     143: aload         7
     145: invokevirtual #19                 // Method io/undertow/util/SubstringMap$SubstringMatch.getKey:()Ljava/lang/String;
     148: aload_1
     149: iload         5
     151: invokevirtual #20                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     154: aload         7
     156: invokevirtual #17                 // Method io/undertow/util/SubstringMap$SubstringMatch.getValue:()Ljava/lang/Object;
     159: invokespecial #14                 // Method io/undertow/util/PathMatcher$PathMatch."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
     162: areturn
     163: iinc          4, 1
     166: goto          47
     169: new           #12                 // class io/undertow/util/PathMatcher$PathMatch
     172: dup
     173: ldc           #13                 // String
     175: aload_1
     176: aload_0
     177: getfield      #9                  // Field defaultHandler:Ljava/lang/Object;
     180: invokespecial #14                 // Method io/undertow/util/PathMatcher$PathMatch."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
     183: areturn

  public synchronized io.undertow.util.PathMatcher addPrefixPath(java.lang.String, T);
    Code:
       0: aload_1
       1: invokevirtual #21                 // Method java/lang/String.isEmpty:()Z
       4: ifeq          16
       7: getstatic     #22                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #23,  1           // InterfaceMethod io/undertow/UndertowMessages.pathMustBeSpecified:()Ljava/lang/IllegalArgumentException;
      15: athrow
      16: aload_1
      17: invokestatic  #24                 // Method io/undertow/util/URLUtils.normalizeSlashes:(Ljava/lang/String;)Ljava/lang/String;
      20: astore_3
      21: ldc           #26                 // String /
      23: aload_3
      24: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ifeq          37
      30: aload_0
      31: aload_2
      32: putfield      #9                  // Field defaultHandler:Ljava/lang/Object;
      35: aload_0
      36: areturn
      37: aload_0
      38: getfield      #4                  // Field paths:Lio/undertow/util/SubstringMap;
      41: aload_3
      42: aload_2
      43: invokevirtual #28                 // Method io/undertow/util/SubstringMap.put:(Ljava/lang/String;Ljava/lang/Object;)V
      46: aload_0
      47: invokespecial #29                 // Method buildLengths:()V
      50: aload_0
      51: areturn

  public synchronized io.undertow.util.PathMatcher addExactPath(java.lang.String, T);
    Code:
       0: aload_1
       1: invokevirtual #21                 // Method java/lang/String.isEmpty:()Z
       4: ifeq          16
       7: getstatic     #22                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #23,  1           // InterfaceMethod io/undertow/UndertowMessages.pathMustBeSpecified:()Ljava/lang/IllegalArgumentException;
      15: athrow
      16: aload_0
      17: getfield      #7                  // Field exactPathMatches:Ljava/util/concurrent/ConcurrentMap;
      20: aload_1
      21: invokestatic  #24                 // Method io/undertow/util/URLUtils.normalizeSlashes:(Ljava/lang/String;)Ljava/lang/String;
      24: aload_2
      25: invokeinterface #30,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: aload_0
      32: areturn

  public T getExactPath(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field exactPathMatches:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokestatic  #24                 // Method io/undertow/util/URLUtils.normalizeSlashes:(Ljava/lang/String;)Ljava/lang/String;
       8: invokeinterface #31,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public T getPrefixPath(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #24                 // Method io/undertow/util/URLUtils.normalizeSlashes:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #4                  // Field paths:Lio/undertow/util/SubstringMap;
       9: aload_2
      10: invokevirtual #32                 // Method io/undertow/util/SubstringMap.get:(Ljava/lang/String;)Lio/undertow/util/SubstringMap$SubstringMatch;
      13: astore_3
      14: ldc           #26                 // String /
      16: aload_2
      17: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifeq          32
      23: aload_3
      24: ifnonnull     32
      27: aload_0
      28: getfield      #9                  // Field defaultHandler:Ljava/lang/Object;
      31: areturn
      32: aload_3
      33: ifnonnull     38
      36: aconst_null
      37: areturn
      38: aload_3
      39: invokevirtual #17                 // Method io/undertow/util/SubstringMap$SubstringMatch.getValue:()Ljava/lang/Object;
      42: areturn

  private void buildLengths();
    Code:
       0: new           #33                 // class java/util/TreeSet
       3: dup
       4: new           #34                 // class io/undertow/util/PathMatcher$1
       7: dup
       8: aload_0
       9: invokespecial #35                 // Method io/undertow/util/PathMatcher$1."<init>":(Lio/undertow/util/PathMatcher;)V
      12: invokespecial #36                 // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
      15: astore_1
      16: aload_0
      17: getfield      #4                  // Field paths:Lio/undertow/util/SubstringMap;
      20: invokevirtual #37                 // Method io/undertow/util/SubstringMap.keys:()Ljava/lang/Iterable;
      23: invokeinterface #38,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      28: astore_2
      29: aload_2
      30: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          65
      38: aload_2
      39: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #41                 // class java/lang/String
      47: astore_3
      48: aload_1
      49: aload_3
      50: invokevirtual #15                 // Method java/lang/String.length:()I
      53: invokestatic  #42                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      56: invokeinterface #43,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      61: pop
      62: goto          29
      65: aload_1
      66: invokeinterface #44,  1           // InterfaceMethod java/util/Set.size:()I
      71: newarray       int
      73: astore_2
      74: iconst_0
      75: istore_3
      76: aload_1
      77: invokeinterface #45,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      82: astore        4
      84: aload         4
      86: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      91: ifeq          120
      94: aload         4
      96: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     101: checkcast     #46                 // class java/lang/Integer
     104: invokevirtual #47                 // Method java/lang/Integer.intValue:()I
     107: istore        5
     109: aload_2
     110: iload_3
     111: iinc          3, 1
     114: iload         5
     116: iastore
     117: goto          84
     120: aload_0
     121: aload_2
     122: putfield      #8                  // Field lengths:[I
     125: return

  public synchronized io.undertow.util.PathMatcher removePath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #48                 // Method removePrefixPath:(Ljava/lang/String;)Lio/undertow/util/PathMatcher;
       5: areturn

  public synchronized io.undertow.util.PathMatcher removePrefixPath(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #21                 // Method java/lang/String.isEmpty:()Z
       8: ifeq          20
      11: getstatic     #22                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      14: invokeinterface #23,  1           // InterfaceMethod io/undertow/UndertowMessages.pathMustBeSpecified:()Ljava/lang/IllegalArgumentException;
      19: athrow
      20: aload_1
      21: invokestatic  #24                 // Method io/undertow/util/URLUtils.normalizeSlashes:(Ljava/lang/String;)Ljava/lang/String;
      24: astore_2
      25: ldc           #26                 // String /
      27: aload_2
      28: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      31: ifeq          41
      34: aload_0
      35: aconst_null
      36: putfield      #9                  // Field defaultHandler:Ljava/lang/Object;
      39: aload_0
      40: areturn
      41: aload_0
      42: getfield      #4                  // Field paths:Lio/undertow/util/SubstringMap;
      45: aload_2
      46: invokevirtual #49                 // Method io/undertow/util/SubstringMap.remove:(Ljava/lang/String;)Ljava/lang/Object;
      49: pop
      50: aload_0
      51: invokespecial #29                 // Method buildLengths:()V
      54: aload_0
      55: areturn

  public synchronized io.undertow.util.PathMatcher removeExactPath(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #21                 // Method java/lang/String.isEmpty:()Z
       8: ifeq          20
      11: getstatic     #22                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      14: invokeinterface #23,  1           // InterfaceMethod io/undertow/UndertowMessages.pathMustBeSpecified:()Ljava/lang/IllegalArgumentException;
      19: athrow
      20: aload_0
      21: getfield      #7                  // Field exactPathMatches:Ljava/util/concurrent/ConcurrentMap;
      24: aload_1
      25: invokestatic  #24                 // Method io/undertow/util/URLUtils.normalizeSlashes:(Ljava/lang/String;)Ljava/lang/String;
      28: invokeinterface #50,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: aload_0
      35: areturn

  public synchronized io.undertow.util.PathMatcher clearPaths();
    Code:
       0: aload_0
       1: getfield      #4                  // Field paths:Lio/undertow/util/SubstringMap;
       4: invokevirtual #51                 // Method io/undertow/util/SubstringMap.clear:()V
       7: aload_0
       8: getfield      #7                  // Field exactPathMatches:Ljava/util/concurrent/ConcurrentMap;
      11: invokeinterface #52,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
      16: aload_0
      17: iconst_0
      18: newarray       int
      20: putfield      #8                  // Field lengths:[I
      23: aload_0
      24: aconst_null
      25: putfield      #9                  // Field defaultHandler:Ljava/lang/Object;
      28: aload_0
      29: areturn

  public java.util.Map<java.lang.String, T> getPaths();
    Code:
       0: aload_0
       1: getfield      #4                  // Field paths:Lio/undertow/util/SubstringMap;
       4: invokevirtual #53                 // Method io/undertow/util/SubstringMap.toMap:()Ljava/util/Map;
       7: areturn
}
