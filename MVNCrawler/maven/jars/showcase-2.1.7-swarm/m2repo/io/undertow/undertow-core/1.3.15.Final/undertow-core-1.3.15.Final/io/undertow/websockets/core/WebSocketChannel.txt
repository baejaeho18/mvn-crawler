Compiled from "WebSocketChannel.java"
public abstract class io.undertow.websockets.core.WebSocketChannel extends io.undertow.server.protocol.framed.AbstractFramedChannel<io.undertow.websockets.core.WebSocketChannel, io.undertow.websockets.core.StreamSourceFrameChannel, io.undertow.websockets.core.StreamSinkFrameChannel> {
  private final boolean client;

  private final io.undertow.websockets.core.WebSocketVersion version;

  private final java.lang.String wsUrl;

  private volatile boolean closeFrameReceived;

  private volatile boolean closeFrameSent;

  private volatile boolean closeInitiatedByRemotePeer;

  private volatile int closeCode;

  private volatile java.lang.String closeReason;

  private final java.lang.String subProtocol;

  protected final boolean extensionsSupported;

  protected final io.undertow.websockets.extensions.ExtensionFunction extensionFunction;

  protected final boolean hasReservedOpCode;

  private volatile io.undertow.websockets.core.WebSocketChannel$PartialFrame partialFrame;

  private final java.util.Map<java.lang.String, java.lang.Object> attributes;

  protected io.undertow.websockets.core.StreamSourceFrameChannel fragmentedChannel;

  private final java.util.Set<io.undertow.websockets.core.WebSocketChannel> peerConnections;

  protected io.undertow.websockets.core.WebSocketChannel(org.xnio.StreamConnection, io.undertow.connector.ByteBufferPool, io.undertow.websockets.core.WebSocketVersion, java.lang.String, java.lang.String, boolean, boolean, io.undertow.websockets.extensions.ExtensionFunction, java.util.Set<io.undertow.websockets.core.WebSocketChannel>, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #2                  // class io/undertow/websockets/core/WebSocketFramePriority
       6: dup
       7: invokespecial #3                  // Method io/undertow/websockets/core/WebSocketFramePriority."<init>":()V
      10: aconst_null
      11: aload         10
      13: invokespecial #4                  // Method io/undertow/server/protocol/framed/AbstractFramedChannel."<init>":(Lorg/xnio/StreamConnection;Lio/undertow/connector/ByteBufferPool;Lio/undertow/server/protocol/framed/FramePriority;Lio/undertow/connector/PooledByteBuffer;Lorg/xnio/OptionMap;)V
      16: aload_0
      17: iconst_m1
      18: putfield      #5                  // Field closeCode:I
      21: aload_0
      22: new           #6                  // class java/util/HashMap
      25: dup
      26: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      29: invokestatic  #8                  // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      32: putfield      #9                  // Field attributes:Ljava/util/Map;
      35: aload_0
      36: iload         6
      38: putfield      #10                 // Field client:Z
      41: aload_0
      42: aload_3
      43: putfield      #11                 // Field version:Lio/undertow/websockets/core/WebSocketVersion;
      46: aload_0
      47: aload         4
      49: putfield      #12                 // Field wsUrl:Ljava/lang/String;
      52: aload_0
      53: iload         7
      55: putfield      #13                 // Field extensionsSupported:Z
      58: aload_0
      59: aload         8
      61: putfield      #14                 // Field extensionFunction:Lio/undertow/websockets/extensions/ExtensionFunction;
      64: aload_0
      65: aload         8
      67: invokeinterface #15,  1           // InterfaceMethod io/undertow/websockets/extensions/ExtensionFunction.hasExtensionOpCode:()Z
      72: putfield      #16                 // Field hasReservedOpCode:Z
      75: aload_0
      76: aload         5
      78: putfield      #17                 // Field subProtocol:Ljava/lang/String;
      81: aload_0
      82: aload         9
      84: putfield      #1                  // Field peerConnections:Ljava/util/Set;
      87: aload_0
      88: new           #18                 // class io/undertow/websockets/core/WebSocketChannel$1
      91: dup
      92: aload_0
      93: aload         8
      95: invokespecial #19                 // Method io/undertow/websockets/core/WebSocketChannel$1."<init>":(Lio/undertow/websockets/core/WebSocketChannel;Lio/undertow/websockets/extensions/ExtensionFunction;)V
      98: invokevirtual #20                 // Method addCloseTask:(Lorg/xnio/ChannelListener;)V
     101: return

  protected io.undertow.conduits.IdleTimeoutConduit createIdleTimeoutChannel(org.xnio.StreamConnection);
    Code:
       0: new           #21                 // class io/undertow/websockets/core/WebSocketChannel$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokevirtual #22                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       9: invokevirtual #23                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
      12: aload_1
      13: invokevirtual #24                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      16: invokevirtual #25                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      19: invokespecial #26                 // Method io/undertow/websockets/core/WebSocketChannel$2."<init>":(Lio/undertow/websockets/core/WebSocketChannel;Lorg/xnio/conduits/StreamSinkConduit;Lorg/xnio/conduits/StreamSourceConduit;)V
      22: areturn

  protected boolean isLastFrameSent();
    Code:
       0: aload_0
       1: getfield      #27                 // Field closeFrameSent:Z
       4: ireturn

  protected boolean isLastFrameReceived();
    Code:
       0: aload_0
       1: getfield      #28                 // Field closeFrameReceived:Z
       4: ireturn

  protected void markReadsBroken(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #29                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.markReadsBroken:(Ljava/lang/Throwable;)V
       5: return

  protected void lastDataRead();
    Code:
       0: aload_0
       1: getfield      #28                 // Field closeFrameReceived:Z
       4: ifne          31
       7: aload_0
       8: getfield      #27                 // Field closeFrameSent:Z
      11: ifne          31
      14: aload_0
      15: iconst_1
      16: putfield      #28                 // Field closeFrameReceived:Z
      19: aload_0
      20: invokevirtual #30                 // Method sendClose:()V
      23: goto          31
      26: astore_1
      27: aload_0
      28: invokestatic  #32                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      31: return
    Exception table:
       from    to  target type
          19    23    26   Class java/io/IOException

  protected boolean isReadsBroken();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.isReadsBroken:()Z
       4: ireturn

  protected io.undertow.server.protocol.framed.FrameHeaderData parseFrame(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field partialFrame:Lio/undertow/websockets/core/WebSocketChannel$PartialFrame;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokevirtual #35                 // Method receiveFrame:()Lio/undertow/websockets/core/WebSocketChannel$PartialFrame;
      12: putfield      #34                 // Field partialFrame:Lio/undertow/websockets/core/WebSocketChannel$PartialFrame;
      15: aload_0
      16: getfield      #34                 // Field partialFrame:Lio/undertow/websockets/core/WebSocketChannel$PartialFrame;
      19: aload_1
      20: invokeinterface #36,  2           // InterfaceMethod io/undertow/websockets/core/WebSocketChannel$PartialFrame.handle:(Ljava/nio/ByteBuffer;)V
      25: goto          91
      28: astore_2
      29: aload_0
      30: aload_2
      31: invokevirtual #38                 // Method markReadsBroken:(Ljava/lang/Throwable;)V
      34: getstatic     #39                 // Field io/undertow/websockets/core/WebSocketLogger.REQUEST_LOGGER:Lio/undertow/websockets/core/WebSocketLogger;
      37: invokeinterface #40,  1           // InterfaceMethod io/undertow/websockets/core/WebSocketLogger.isDebugEnabled:()Z
      42: ifeq          60
      45: getstatic     #39                 // Field io/undertow/websockets/core/WebSocketLogger.REQUEST_LOGGER:Lio/undertow/websockets/core/WebSocketLogger;
      48: aload_2
      49: ldc           #41                 // String receive failed due to Exception
      51: iconst_0
      52: anewarray     #42                 // class java/lang/Object
      55: invokeinterface #43,  4           // InterfaceMethod io/undertow/websockets/core/WebSocketLogger.debugf:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      60: new           #44                 // class io/undertow/websockets/core/CloseMessage
      63: dup
      64: sipush        1002
      67: aload_2
      68: invokevirtual #45                 // Method io/undertow/websockets/core/WebSocketException.getMessage:()Ljava/lang/String;
      71: invokespecial #46                 // Method io/undertow/websockets/core/CloseMessage."<init>":(ILjava/lang/String;)V
      74: invokevirtual #47                 // Method io/undertow/websockets/core/CloseMessage.toByteBuffer:()Ljava/nio/ByteBuffer;
      77: aload_0
      78: aconst_null
      79: invokestatic  #48                 // Method io/undertow/websockets/core/WebSockets.sendClose:(Ljava/nio/ByteBuffer;Lio/undertow/websockets/core/WebSocketChannel;Lio/undertow/websockets/core/WebSocketCallback;)V
      82: new           #31                 // class java/io/IOException
      85: dup
      86: aload_2
      87: invokespecial #49                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      90: athrow
      91: aload_0
      92: getfield      #34                 // Field partialFrame:Lio/undertow/websockets/core/WebSocketChannel$PartialFrame;
      95: invokeinterface #50,  1           // InterfaceMethod io/undertow/websockets/core/WebSocketChannel$PartialFrame.isDone:()Z
     100: ifeq          115
     103: aload_0
     104: getfield      #34                 // Field partialFrame:Lio/undertow/websockets/core/WebSocketChannel$PartialFrame;
     107: astore_2
     108: aload_0
     109: aconst_null
     110: putfield      #34                 // Field partialFrame:Lio/undertow/websockets/core/WebSocketChannel$PartialFrame;
     113: aload_2
     114: areturn
     115: aconst_null
     116: areturn
    Exception table:
       from    to  target type
          15    25    28   Class io/undertow/websockets/core/WebSocketException

  protected abstract io.undertow.websockets.core.WebSocketChannel$PartialFrame receiveFrame();

  protected io.undertow.websockets.core.StreamSourceFrameChannel createChannel(io.undertow.server.protocol.framed.FrameHeaderData, io.undertow.connector.PooledByteBuffer);
    Code:
       0: aload_1
       1: checkcast     #51                 // class io/undertow/websockets/core/WebSocketChannel$PartialFrame
       4: astore_3
       5: aload_3
       6: aload_2
       7: invokeinterface #52,  2           // InterfaceMethod io/undertow/websockets/core/WebSocketChannel$PartialFrame.getChannel:(Lio/undertow/connector/PooledByteBuffer;)Lio/undertow/websockets/core/StreamSourceFrameChannel;
      12: astore        4
      14: aload         4
      16: invokevirtual #53                 // Method io/undertow/websockets/core/StreamSourceFrameChannel.getType:()Lio/undertow/websockets/core/WebSocketFrameType;
      19: getstatic     #54                 // Field io/undertow/websockets/core/WebSocketFrameType.CLOSE:Lio/undertow/websockets/core/WebSocketFrameType;
      22: if_acmpne     42
      25: aload_0
      26: getfield      #27                 // Field closeFrameSent:Z
      29: ifne          37
      32: aload_0
      33: iconst_1
      34: putfield      #55                 // Field closeInitiatedByRemotePeer:Z
      37: aload_0
      38: iconst_1
      39: putfield      #28                 // Field closeFrameReceived:Z
      42: aload         4
      44: areturn

  public final boolean setAttribute(java.lang.String, java.lang.Object);
    Code:
       0: aload_2
       1: ifnonnull     23
       4: aload_0
       5: getfield      #9                  // Field attributes:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #56,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: ifnull        21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn
      23: aload_0
      24: getfield      #9                  // Field attributes:Ljava/util/Map;
      27: aload_1
      28: aload_2
      29: invokeinterface #57,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: ifnonnull     41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  public final java.lang.Object getAttribute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field attributes:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #58,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public boolean areExtensionsSupported();
    Code:
       0: aload_0
       1: getfield      #13                 // Field extensionsSupported:Z
       4: ireturn

  protected void handleBrokenSourceChannel(java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #59                 // class java/io/UnsupportedEncodingException
       4: ifeq          39
       7: aload_0
       8: invokevirtual #60                 // Method getFramePriority:()Lio/undertow/websockets/core/WebSocketFramePriority;
      11: invokevirtual #61                 // Method io/undertow/websockets/core/WebSocketFramePriority.immediateCloseFrame:()V
      14: new           #44                 // class io/undertow/websockets/core/CloseMessage
      17: dup
      18: sipush        1007
      21: aload_1
      22: invokevirtual #62                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      25: invokespecial #46                 // Method io/undertow/websockets/core/CloseMessage."<init>":(ILjava/lang/String;)V
      28: invokevirtual #47                 // Method io/undertow/websockets/core/CloseMessage.toByteBuffer:()Ljava/nio/ByteBuffer;
      31: aload_0
      32: aconst_null
      33: invokestatic  #48                 // Method io/undertow/websockets/core/WebSockets.sendClose:(Ljava/nio/ByteBuffer;Lio/undertow/websockets/core/WebSocketChannel;Lio/undertow/websockets/core/WebSocketCallback;)V
      36: goto          107
      39: aload_1
      40: instanceof    #63                 // class io/undertow/websockets/core/WebSocketInvalidCloseCodeException
      43: ifeq          71
      46: new           #44                 // class io/undertow/websockets/core/CloseMessage
      49: dup
      50: sipush        1002
      53: aload_1
      54: invokevirtual #62                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      57: invokespecial #46                 // Method io/undertow/websockets/core/CloseMessage."<init>":(ILjava/lang/String;)V
      60: invokevirtual #47                 // Method io/undertow/websockets/core/CloseMessage.toByteBuffer:()Ljava/nio/ByteBuffer;
      63: aload_0
      64: aconst_null
      65: invokestatic  #48                 // Method io/undertow/websockets/core/WebSockets.sendClose:(Ljava/nio/ByteBuffer;Lio/undertow/websockets/core/WebSocketChannel;Lio/undertow/websockets/core/WebSocketCallback;)V
      68: goto          107
      71: aload_1
      72: instanceof    #64                 // class io/undertow/websockets/core/WebSocketFrameCorruptedException
      75: ifeq          107
      78: aload_0
      79: invokevirtual #60                 // Method getFramePriority:()Lio/undertow/websockets/core/WebSocketFramePriority;
      82: invokevirtual #61                 // Method io/undertow/websockets/core/WebSocketFramePriority.immediateCloseFrame:()V
      85: new           #44                 // class io/undertow/websockets/core/CloseMessage
      88: dup
      89: sipush        1002
      92: aload_1
      93: invokevirtual #62                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      96: invokespecial #46                 // Method io/undertow/websockets/core/CloseMessage."<init>":(ILjava/lang/String;)V
      99: invokevirtual #47                 // Method io/undertow/websockets/core/CloseMessage.toByteBuffer:()Ljava/nio/ByteBuffer;
     102: aload_0
     103: aconst_null
     104: invokestatic  #48                 // Method io/undertow/websockets/core/WebSockets.sendClose:(Ljava/nio/ByteBuffer;Lio/undertow/websockets/core/WebSocketChannel;Lio/undertow/websockets/core/WebSocketCallback;)V
     107: return

  protected void handleBrokenSinkChannel(java.lang.Throwable);
    Code:
       0: return

  public java.util.Set<java.lang.String> getSubProtocols();
    Code:
       0: aload_0
       1: getfield      #17                 // Field subProtocol:Ljava/lang/String;
       4: invokestatic  #65                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
       7: areturn

  public java.lang.String getSubProtocol();
    Code:
       0: aload_0
       1: getfield      #17                 // Field subProtocol:Ljava/lang/String;
       4: areturn

  public boolean isCloseFrameReceived();
    Code:
       0: aload_0
       1: getfield      #28                 // Field closeFrameReceived:Z
       4: ireturn

  public boolean isCloseFrameSent();
    Code:
       0: aload_0
       1: getfield      #27                 // Field closeFrameSent:Z
       4: ireturn

  public java.lang.String getRequestScheme();
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method getUrl:()Ljava/lang/String;
       4: ldc           #67                 // String wss:
       6: invokevirtual #68                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       9: ifeq          15
      12: ldc           #69                 // String wss
      14: areturn
      15: ldc           #70                 // String ws
      17: areturn

  public boolean isSecure();
    Code:
       0: ldc           #69                 // String wss
       2: aload_0
       3: invokevirtual #71                 // Method getRequestScheme:()Ljava/lang/String;
       6: invokevirtual #72                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ireturn

  public java.lang.String getUrl();
    Code:
       0: aload_0
       1: getfield      #12                 // Field wsUrl:Ljava/lang/String;
       4: areturn

  public io.undertow.websockets.core.WebSocketVersion getVersion();
    Code:
       0: aload_0
       1: getfield      #11                 // Field version:Lio/undertow/websockets/core/WebSocketVersion;
       4: areturn

  public java.net.InetSocketAddress getSourceAddress();
    Code:
       0: aload_0
       1: ldc           #73                 // class java/net/InetSocketAddress
       3: invokevirtual #74                 // Method getPeerAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
       6: checkcast     #73                 // class java/net/InetSocketAddress
       9: areturn

  public java.net.InetSocketAddress getDestinationAddress();
    Code:
       0: aload_0
       1: ldc           #73                 // class java/net/InetSocketAddress
       3: invokevirtual #75                 // Method getLocalAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
       6: checkcast     #73                 // class java/net/InetSocketAddress
       9: areturn

  public boolean isClient();
    Code:
       0: aload_0
       1: getfield      #10                 // Field client:Z
       4: ireturn

  public final io.undertow.websockets.core.StreamSinkFrameChannel send(io.undertow.websockets.core.WebSocketFrameType) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field closeFrameSent:Z
       4: ifne          21
       7: aload_0
       8: getfield      #28                 // Field closeFrameReceived:Z
      11: ifeq          30
      14: aload_1
      15: getstatic     #54                 // Field io/undertow/websockets/core/WebSocketFrameType.CLOSE:Lio/undertow/websockets/core/WebSocketFrameType;
      18: if_acmpeq     30
      21: getstatic     #76                 // Field io/undertow/websockets/core/WebSocketMessages.MESSAGES:Lio/undertow/websockets/core/WebSocketMessages;
      24: invokeinterface #77,  1           // InterfaceMethod io/undertow/websockets/core/WebSocketMessages.channelClosed:()Ljava/io/IOException;
      29: athrow
      30: aload_0
      31: invokevirtual #78                 // Method isWritesBroken:()Z
      34: ifeq          46
      37: getstatic     #76                 // Field io/undertow/websockets/core/WebSocketMessages.MESSAGES:Lio/undertow/websockets/core/WebSocketMessages;
      40: invokeinterface #79,  1           // InterfaceMethod io/undertow/websockets/core/WebSocketMessages.streamIsBroken:()Ljava/io/IOException;
      45: athrow
      46: aload_0
      47: aload_1
      48: invokevirtual #80                 // Method createStreamSinkChannel:(Lio/undertow/websockets/core/WebSocketFrameType;)Lio/undertow/websockets/core/StreamSinkFrameChannel;
      51: astore_2
      52: aload_0
      53: invokevirtual #60                 // Method getFramePriority:()Lio/undertow/websockets/core/WebSocketFramePriority;
      56: aload_2
      57: invokevirtual #81                 // Method io/undertow/websockets/core/WebSocketFramePriority.addToOrderQueue:(Lio/undertow/websockets/core/StreamSinkFrameChannel;)V
      60: aload_1
      61: getstatic     #54                 // Field io/undertow/websockets/core/WebSocketFrameType.CLOSE:Lio/undertow/websockets/core/WebSocketFrameType;
      64: if_acmpne     72
      67: aload_0
      68: iconst_1
      69: putfield      #27                 // Field closeFrameSent:Z
      72: aload_2
      73: areturn

  public void sendClose() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #82                 // String
       3: putfield      #83                 // Field closeReason:Ljava/lang/String;
       6: aload_0
       7: sipush        1000
      10: putfield      #5                  // Field closeCode:I
      13: aload_0
      14: getstatic     #54                 // Field io/undertow/websockets/core/WebSocketFrameType.CLOSE:Lio/undertow/websockets/core/WebSocketFrameType;
      17: invokevirtual #84                 // Method send:(Lio/undertow/websockets/core/WebSocketFrameType;)Lio/undertow/websockets/core/StreamSinkFrameChannel;
      20: astore_1
      21: aload_1
      22: invokevirtual #85                 // Method io/undertow/websockets/core/StreamSinkFrameChannel.shutdownWrites:()V
      25: aload_1
      26: invokevirtual #86                 // Method io/undertow/websockets/core/StreamSinkFrameChannel.flush:()Z
      29: ifne          57
      32: aload_1
      33: invokevirtual #87                 // Method io/undertow/websockets/core/StreamSinkFrameChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
      36: aconst_null
      37: new           #88                 // class io/undertow/websockets/core/WebSocketChannel$3
      40: dup
      41: aload_0
      42: invokespecial #89                 // Method io/undertow/websockets/core/WebSocketChannel$3."<init>":(Lio/undertow/websockets/core/WebSocketChannel;)V
      45: invokestatic  #90                 // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
      48: invokeinterface #91,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      53: aload_1
      54: invokevirtual #92                 // Method io/undertow/websockets/core/StreamSinkFrameChannel.resumeWrites:()V
      57: return

  protected abstract io.undertow.websockets.core.StreamSinkFrameChannel createStreamSinkChannel(io.undertow.websockets.core.WebSocketFrameType);

  protected io.undertow.websockets.core.WebSocketFramePriority getFramePriority();
    Code:
       0: aload_0
       1: invokespecial #93                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.getFramePriority:()Lio/undertow/server/protocol/framed/FramePriority;
       4: checkcast     #2                  // class io/undertow/websockets/core/WebSocketFramePriority
       7: areturn

  public java.util.Set<io.undertow.websockets.core.WebSocketChannel> getPeerConnections();
    Code:
       0: aload_0
       1: getfield      #1                  // Field peerConnections:Ljava/util/Set;
       4: invokestatic  #94                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       7: areturn

  public boolean isCloseInitiatedByRemotePeer();
    Code:
       0: aload_0
       1: getfield      #55                 // Field closeInitiatedByRemotePeer:Z
       4: ireturn

  public java.lang.String getCloseReason();
    Code:
       0: aload_0
       1: getfield      #83                 // Field closeReason:Ljava/lang/String;
       4: areturn

  public void setCloseReason(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #83                 // Field closeReason:Ljava/lang/String;
       5: return

  public int getCloseCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field closeCode:I
       4: ireturn

  public void setCloseCode(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field closeCode:I
       5: return

  public io.undertow.websockets.extensions.ExtensionFunction getExtensionFunction();
    Code:
       0: aload_0
       1: getfield      #14                 // Field extensionFunction:Lio/undertow/websockets/extensions/ExtensionFunction;
       4: areturn

  protected io.undertow.server.protocol.framed.FramePriority getFramePriority();
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method getFramePriority:()Lio/undertow/websockets/core/WebSocketFramePriority;
       4: areturn

  protected io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel createChannel(io.undertow.server.protocol.framed.FrameHeaderData, io.undertow.connector.PooledByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #95                 // Method createChannel:(Lio/undertow/server/protocol/framed/FrameHeaderData;Lio/undertow/connector/PooledByteBuffer;)Lio/undertow/websockets/core/StreamSourceFrameChannel;
       6: areturn

  static java.util.Set access$000(io.undertow.websockets.core.WebSocketChannel);
    Code:
       0: aload_0
       1: getfield      #1                  // Field peerConnections:Ljava/util/Set;
       4: areturn
}
