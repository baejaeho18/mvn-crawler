Compiled from "SpdyChannel.java"
public class io.undertow.protocols.spdy.SpdyChannel extends io.undertow.server.protocol.framed.AbstractFramedChannel<io.undertow.protocols.spdy.SpdyChannel, io.undertow.protocols.spdy.SpdyStreamSourceChannel, io.undertow.protocols.spdy.SpdyStreamSinkChannel> implements io.undertow.util.Attachable {
  static final int DEFAULT_INITIAL_WINDOW_SIZE;

  static final int SYN_STREAM;

  static final int SYN_REPLY;

  static final int RST_STREAM;

  static final int SETTINGS;

  static final int PING;

  static final int GOAWAY;

  static final int HEADERS;

  static final int WINDOW_UPDATE;

  public static final int CLOSE_OK;

  public static final int CLOSE_PROTOCOL_ERROR;

  public static final int CLOSE_INTERNAL_ERROR;

  static final int FLAG_FIN;

  static final int FLAG_UNIDIRECTIONAL;

  static final int CONTROL_FRAME;

  public static final int RST_STATUS_PROTOCOL_ERROR;

  public static final int RST_STATUS_INVALID_STREAM;

  public static final int RST_STATUS_REFUSED_STREAM;

  public static final int RST_STATUS_UNSUPPORTED_VERSION;

  public static final int RST_STATUS_CANCEL;

  public static final int RST_STATUS_INTERNAL_ERROR;

  public static final int RST_STATUS_FLOW_CONTROL_ERROR;

  public static final int RST_STATUS_STREAM_IN_USE;

  public static final int RST_STATUS_STREAM_ALREADY_CLOSED;

  public static final int RST_STATUS_FRAME_TOO_LARGE;

  private final java.util.zip.Inflater inflater;

  private final java.util.zip.Deflater deflater;

  private io.undertow.protocols.spdy.SpdyChannel$SpdyFrameParser frameParser;

  private final java.util.Map<java.lang.Integer, io.undertow.protocols.spdy.SpdyStreamStreamSourceChannel> incomingStreams;

  private final java.util.Map<java.lang.Integer, io.undertow.protocols.spdy.SpdyStreamStreamSinkChannel> outgoingStreams;

  private volatile int initialWindowSize;

  private volatile int receiveWindowSize;

  private volatile int sendWindowSize;

  private final io.undertow.connector.ByteBufferPool heapBufferPool;

  private boolean thisGoneAway;

  private boolean peerGoneAway;

  private boolean lastDataRead;

  private int streamIdCounter;

  private int lastGoodStreamId;

  private final java.util.Map<io.undertow.util.AttachmentKey<?>, java.lang.Object> attachments;

  public io.undertow.protocols.spdy.SpdyChannel(org.xnio.StreamConnection, io.undertow.connector.ByteBufferPool, io.undertow.connector.PooledByteBuffer, io.undertow.connector.ByteBufferPool, boolean, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #5                  // Field io/undertow/protocols/spdy/SpdyFramePriority.INSTANCE:Lio/undertow/protocols/spdy/SpdyFramePriority;
       6: aload_3
       7: aload         6
       9: invokespecial #6                  // Method io/undertow/server/protocol/framed/AbstractFramedChannel."<init>":(Lorg/xnio/StreamConnection;Lio/undertow/connector/ByteBufferPool;Lio/undertow/server/protocol/framed/FramePriority;Lio/undertow/connector/PooledByteBuffer;Lorg/xnio/OptionMap;)V
      12: aload_0
      13: new           #7                  // class java/util/zip/Inflater
      16: dup
      17: iconst_0
      18: invokespecial #8                  // Method java/util/zip/Inflater."<init>":(Z)V
      21: putfield      #3                  // Field inflater:Ljava/util/zip/Inflater;
      24: aload_0
      25: new           #9                  // class java/util/zip/Deflater
      28: dup
      29: bipush        6
      31: invokespecial #10                 // Method java/util/zip/Deflater."<init>":(I)V
      34: putfield      #11                 // Field deflater:Ljava/util/zip/Deflater;
      37: aload_0
      38: new           #12                 // class java/util/concurrent/ConcurrentHashMap
      41: dup
      42: invokespecial #13                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      45: putfield      #1                  // Field incomingStreams:Ljava/util/Map;
      48: aload_0
      49: new           #12                 // class java/util/concurrent/ConcurrentHashMap
      52: dup
      53: invokespecial #13                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      56: putfield      #14                 // Field outgoingStreams:Ljava/util/Map;
      59: aload_0
      60: ldc           #16                 // int 65536
      62: putfield      #17                 // Field initialWindowSize:I
      65: aload_0
      66: aload_0
      67: getfield      #17                 // Field initialWindowSize:I
      70: putfield      #18                 // Field receiveWindowSize:I
      73: aload_0
      74: aload_0
      75: getfield      #17                 // Field initialWindowSize:I
      78: putfield      #19                 // Field sendWindowSize:I
      81: aload_0
      82: iconst_0
      83: putfield      #20                 // Field thisGoneAway:Z
      86: aload_0
      87: iconst_0
      88: putfield      #2                  // Field peerGoneAway:Z
      91: aload_0
      92: iconst_0
      93: putfield      #21                 // Field lastDataRead:Z
      96: aload_0
      97: new           #22                 // class java/util/HashMap
     100: dup
     101: invokespecial #23                 // Method java/util/HashMap."<init>":()V
     104: invokestatic  #24                 // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
     107: putfield      #25                 // Field attachments:Ljava/util/Map;
     110: aload_0
     111: aload         4
     113: putfield      #26                 // Field heapBufferPool:Lio/undertow/connector/ByteBufferPool;
     116: aload_0
     117: getfield      #11                 // Field deflater:Ljava/util/zip/Deflater;
     120: getstatic     #27                 // Field io/undertow/protocols/spdy/SpdyProtocolUtils.SPDY_DICT:[B
     123: invokevirtual #28                 // Method java/util/zip/Deflater.setDictionary:([B)V
     126: aload_0
     127: iload         5
     129: ifeq          136
     132: iconst_1
     133: goto          137
     136: iconst_2
     137: putfield      #29                 // Field streamIdCounter:I
     140: return

  protected io.undertow.protocols.spdy.SpdyStreamSourceChannel createChannel(io.undertow.server.protocol.framed.FrameHeaderData, io.undertow.connector.PooledByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: checkcast     #30                 // class io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser
       4: astore_3
       5: aload_3
       6: getfield      #31                 // Field io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser.control:Z
       9: ifne          33
      12: getstatic     #32                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      15: ldc           #33                 // String Dropping Frame of length %s for stream %s
      17: aload_3
      18: invokevirtual #34                 // Method io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser.getFrameLength:()J
      21: aload_3
      22: getfield      #35                 // Field io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser.dataFrameStreamId:I
      25: i2l
      26: invokeinterface #36,  6           // InterfaceMethod io/undertow/UndertowLogger.tracef:(Ljava/lang/String;JJ)V
      31: aconst_null
      32: areturn
      33: aload_3
      34: getfield      #37                 // Field io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser.type:I
      37: tableswitch   { // 1 to 9
                     1: 88
                     2: 174
                     3: 256
                     4: 297
                     5: 532
                     6: 339
                     7: 367
                     8: 532
                     9: 501
               default: 532
          }
      88: aload_3
      89: getfield      #38                 // Field io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser.parser:Lio/undertow/protocols/spdy/SpdyPushBackParser;
      92: checkcast     #39                 // class io/undertow/protocols/spdy/SpdySynStreamParser
      95: astore        5
      97: new           #40                 // class io/undertow/protocols/spdy/SpdySynStreamStreamSourceChannel
     100: dup
     101: aload_0
     102: aload_2
     103: aload_1
     104: invokeinterface #41,  1           // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
     109: aload_0
     110: getfield      #11                 // Field deflater:Ljava/util/zip/Deflater;
     113: aload         5
     115: invokevirtual #42                 // Method io/undertow/protocols/spdy/SpdySynStreamParser.getHeaderMap:()Lio/undertow/util/HeaderMap;
     118: aload         5
     120: getfield      #43                 // Field io/undertow/protocols/spdy/SpdySynStreamParser.streamId:I
     123: invokespecial #44                 // Method io/undertow/protocols/spdy/SpdySynStreamStreamSourceChannel."<init>":(Lio/undertow/protocols/spdy/SpdyChannel;Lio/undertow/connector/PooledByteBuffer;JLjava/util/zip/Deflater;Lio/undertow/util/HeaderMap;I)V
     126: astore        4
     128: aload_0
     129: aload         5
     131: getfield      #43                 // Field io/undertow/protocols/spdy/SpdySynStreamParser.streamId:I
     134: putfield      #45                 // Field lastGoodStreamId:I
     137: aload_3
     138: getfield      #46                 // Field io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser.flags:I
     141: iconst_1
     142: invokestatic  #47                 // Method org/xnio/Bits.anyAreSet:(II)Z
     145: ifne          545
     148: aload_0
     149: getfield      #1                  // Field incomingStreams:Ljava/util/Map;
     152: aload         5
     154: getfield      #43                 // Field io/undertow/protocols/spdy/SpdySynStreamParser.streamId:I
     157: invokestatic  #48                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     160: aload         4
     162: checkcast     #49                 // class io/undertow/protocols/spdy/SpdyStreamStreamSourceChannel
     165: invokeinterface #50,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     170: pop
     171: goto          545
     174: aload_3
     175: getfield      #38                 // Field io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser.parser:Lio/undertow/protocols/spdy/SpdyPushBackParser;
     178: checkcast     #51                 // class io/undertow/protocols/spdy/SpdySynReplyParser
     181: astore        5
     183: new           #52                 // class io/undertow/protocols/spdy/SpdySynReplyStreamSourceChannel
     186: dup
     187: aload_0
     188: aload_2
     189: aload_1
     190: invokeinterface #41,  1           // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
     195: aload         5
     197: invokevirtual #53                 // Method io/undertow/protocols/spdy/SpdySynReplyParser.getHeaderMap:()Lio/undertow/util/HeaderMap;
     200: aload         5
     202: getfield      #54                 // Field io/undertow/protocols/spdy/SpdySynReplyParser.streamId:I
     205: invokespecial #55                 // Method io/undertow/protocols/spdy/SpdySynReplyStreamSourceChannel."<init>":(Lio/undertow/protocols/spdy/SpdyChannel;Lio/undertow/connector/PooledByteBuffer;JLio/undertow/util/HeaderMap;I)V
     208: astore        4
     210: aload_0
     211: aload         5
     213: getfield      #54                 // Field io/undertow/protocols/spdy/SpdySynReplyParser.streamId:I
     216: putfield      #45                 // Field lastGoodStreamId:I
     219: aload_3
     220: getfield      #46                 // Field io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser.flags:I
     223: iconst_1
     224: invokestatic  #47                 // Method org/xnio/Bits.anyAreSet:(II)Z
     227: ifne          545
     230: aload_0
     231: getfield      #1                  // Field incomingStreams:Ljava/util/Map;
     234: aload         5
     236: getfield      #54                 // Field io/undertow/protocols/spdy/SpdySynReplyParser.streamId:I
     239: invokestatic  #48                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     242: aload         4
     244: checkcast     #49                 // class io/undertow/protocols/spdy/SpdyStreamStreamSourceChannel
     247: invokeinterface #50,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     252: pop
     253: goto          545
     256: aload_3
     257: getfield      #38                 // Field io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser.parser:Lio/undertow/protocols/spdy/SpdyPushBackParser;
     260: checkcast     #56                 // class io/undertow/protocols/spdy/SpdyRstStreamParser
     263: astore        5
     265: new           #57                 // class io/undertow/protocols/spdy/SpdyRstStreamStreamSourceChannel
     268: dup
     269: aload_0
     270: aload_2
     271: aload_3
     272: invokevirtual #34                 // Method io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser.getFrameLength:()J
     275: aload         5
     277: invokevirtual #58                 // Method io/undertow/protocols/spdy/SpdyRstStreamParser.getStreamId:()I
     280: invokespecial #59                 // Method io/undertow/protocols/spdy/SpdyRstStreamStreamSourceChannel."<init>":(Lio/undertow/protocols/spdy/SpdyChannel;Lio/undertow/connector/PooledByteBuffer;JI)V
     283: astore        4
     285: aload_0
     286: aload         5
     288: invokevirtual #58                 // Method io/undertow/protocols/spdy/SpdyRstStreamParser.getStreamId:()I
     291: invokespecial #60                 // Method handleRstStream:(I)V
     294: goto          545
     297: aload_0
     298: aload_3
     299: getfield      #38                 // Field io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser.parser:Lio/undertow/protocols/spdy/SpdyPushBackParser;
     302: checkcast     #61                 // class io/undertow/protocols/spdy/SpdySettingsParser
     305: invokevirtual #62                 // Method io/undertow/protocols/spdy/SpdySettingsParser.getSettings:()Ljava/util/List;
     308: invokevirtual #63                 // Method updateSettings:(Ljava/util/List;)V
     311: new           #64                 // class io/undertow/protocols/spdy/SpdySettingsStreamSourceChannel
     314: dup
     315: aload_0
     316: aload_2
     317: aload_3
     318: invokevirtual #34                 // Method io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser.getFrameLength:()J
     321: aload_3
     322: getfield      #38                 // Field io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser.parser:Lio/undertow/protocols/spdy/SpdyPushBackParser;
     325: checkcast     #61                 // class io/undertow/protocols/spdy/SpdySettingsParser
     328: invokevirtual #62                 // Method io/undertow/protocols/spdy/SpdySettingsParser.getSettings:()Ljava/util/List;
     331: invokespecial #65                 // Method io/undertow/protocols/spdy/SpdySettingsStreamSourceChannel."<init>":(Lio/undertow/protocols/spdy/SpdyChannel;Lio/undertow/connector/PooledByteBuffer;JLjava/util/List;)V
     334: astore        4
     336: goto          545
     339: new           #66                 // class io/undertow/protocols/spdy/SpdyPingStreamSourceChannel
     342: dup
     343: aload_0
     344: aload_2
     345: aload_3
     346: invokevirtual #34                 // Method io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser.getFrameLength:()J
     349: aload_3
     350: getfield      #38                 // Field io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser.parser:Lio/undertow/protocols/spdy/SpdyPushBackParser;
     353: checkcast     #67                 // class io/undertow/protocols/spdy/SpdyPingParser
     356: invokevirtual #68                 // Method io/undertow/protocols/spdy/SpdyPingParser.getId:()I
     359: invokespecial #69                 // Method io/undertow/protocols/spdy/SpdyPingStreamSourceChannel."<init>":(Lio/undertow/protocols/spdy/SpdyChannel;Lio/undertow/connector/PooledByteBuffer;JI)V
     362: astore        4
     364: goto          545
     367: aload_3
     368: getfield      #38                 // Field io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser.parser:Lio/undertow/protocols/spdy/SpdyPushBackParser;
     371: checkcast     #70                 // class io/undertow/protocols/spdy/SpdyGoAwayParser
     374: astore        5
     376: new           #71                 // class io/undertow/protocols/spdy/SpdyGoAwayStreamSourceChannel
     379: dup
     380: aload_0
     381: aload_2
     382: aload_3
     383: invokevirtual #34                 // Method io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser.getFrameLength:()J
     386: aload         5
     388: invokevirtual #72                 // Method io/undertow/protocols/spdy/SpdyGoAwayParser.getStatusCode:()I
     391: aload         5
     393: invokevirtual #73                 // Method io/undertow/protocols/spdy/SpdyGoAwayParser.getLastGoodStreamId:()I
     396: invokespecial #74                 // Method io/undertow/protocols/spdy/SpdyGoAwayStreamSourceChannel."<init>":(Lio/undertow/protocols/spdy/SpdyChannel;Lio/undertow/connector/PooledByteBuffer;JII)V
     399: astore        4
     401: aload_0
     402: iconst_1
     403: putfield      #2                  // Field peerGoneAway:Z
     406: aload_0
     407: getfield      #1                  // Field incomingStreams:Ljava/util/Map;
     410: invokeinterface #75,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     415: invokeinterface #76,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     420: astore        6
     422: aload         6
     424: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     429: ifeq          452
     432: aload         6
     434: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     439: checkcast     #49                 // class io/undertow/protocols/spdy/SpdyStreamStreamSourceChannel
     442: astore        7
     444: aload         7
     446: invokevirtual #79                 // Method io/undertow/protocols/spdy/SpdyStreamStreamSourceChannel.close:()V
     449: goto          422
     452: aload_0
     453: getfield      #14                 // Field outgoingStreams:Ljava/util/Map;
     456: invokeinterface #75,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     461: invokeinterface #76,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     466: astore        6
     468: aload         6
     470: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     475: ifeq          498
     478: aload         6
     480: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     485: checkcast     #80                 // class io/undertow/protocols/spdy/SpdyStreamStreamSinkChannel
     488: astore        7
     490: aload         7
     492: invokevirtual #81                 // Method io/undertow/protocols/spdy/SpdyStreamStreamSinkChannel.close:()V
     495: goto          468
     498: goto          545
     501: aload_3
     502: getfield      #38                 // Field io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser.parser:Lio/undertow/protocols/spdy/SpdyPushBackParser;
     505: checkcast     #82                 // class io/undertow/protocols/spdy/SpdyWindowUpdateParser
     508: astore        5
     510: aload_0
     511: aload         5
     513: invokevirtual #83                 // Method io/undertow/protocols/spdy/SpdyWindowUpdateParser.getStreamId:()I
     516: aload         5
     518: invokevirtual #84                 // Method io/undertow/protocols/spdy/SpdyWindowUpdateParser.getDeltaWindowSize:()I
     521: invokevirtual #85                 // Method handleWindowUpdate:(II)V
     524: aload_2
     525: invokeinterface #86,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     530: aconst_null
     531: areturn
     532: getstatic     #87                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     535: aload_3
     536: getfield      #37                 // Field io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser.type:I
     539: invokeinterface #88,  2           // InterfaceMethod io/undertow/UndertowMessages.unexpectedFrameType:(I)Ljava/io/IOException;
     544: athrow
     545: aload_3
     546: getfield      #46                 // Field io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser.flags:I
     549: iconst_1
     550: invokestatic  #47                 // Method org/xnio/Bits.anyAreSet:(II)Z
     553: ifeq          561
     556: aload         4
     558: invokevirtual #89                 // Method io/undertow/protocols/spdy/SpdyStreamSourceChannel.lastFrame:()V
     561: aload         4
     563: areturn

  protected io.undertow.server.protocol.framed.FrameHeaderData parseFrame(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #90                 // Field frameParser:Lio/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser;
       4: astore_2
       5: aload_2
       6: ifnonnull     23
       9: aload_0
      10: new           #30                 // class io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser
      13: dup
      14: aload_0
      15: invokespecial #91                 // Method io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser."<init>":(Lio/undertow/protocols/spdy/SpdyChannel;)V
      18: dup
      19: astore_2
      20: putfield      #90                 // Field frameParser:Lio/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser;
      23: aload_2
      24: aload_1
      25: invokevirtual #92                 // Method io/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser.handle:(Ljava/nio/ByteBuffer;)Z
      28: ifne          33
      31: aconst_null
      32: areturn
      33: aload_0
      34: aconst_null
      35: putfield      #90                 // Field frameParser:Lio/undertow/protocols/spdy/SpdyChannel$SpdyFrameParser;
      38: aload_2
      39: areturn

  protected void lastDataRead();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #21                 // Field lastDataRead:Z
       5: aload_0
       6: getfield      #2                  // Field peerGoneAway:Z
       9: ifne          48
      12: aload_0
      13: getfield      #20                 // Field thisGoneAway:Z
      16: ifne          48
      19: aload_0
      20: getfield      #1                  // Field incomingStreams:Ljava/util/Map;
      23: invokeinterface #93,  1           // InterfaceMethod java/util/Map.size:()I
      28: ifle          39
      31: aload_0
      32: iconst_1
      33: invokevirtual #94                 // Method sendGoAway:(I)V
      36: goto          43
      39: aload_0
      40: invokestatic  #95                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      43: aload_0
      44: iconst_1
      45: putfield      #2                  // Field peerGoneAway:Z
      48: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: invokespecial #96                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.isOpen:()Z
       4: ifeq          25
       7: aload_0
       8: getfield      #20                 // Field thisGoneAway:Z
      11: ifne          25
      14: aload_0
      15: getfield      #2                  // Field peerGoneAway:Z
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  protected boolean isLastFrameReceived();
    Code:
       0: aload_0
       1: getfield      #21                 // Field lastDataRead:Z
       4: ireturn

  protected boolean isLastFrameSent();
    Code:
       0: aload_0
       1: getfield      #20                 // Field thisGoneAway:Z
       4: ireturn

  protected void handleBrokenSourceChannel(java.lang.Throwable);
    Code:
       0: getstatic     #32                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
       3: aload_1
       4: ldc           #97                 // String Closing SPDY channel to %s due to broken read side
       6: aload_0
       7: invokevirtual #98                 // Method getPeerAddress:()Ljava/net/SocketAddress;
      10: invokeinterface #99,  4           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      15: aload_0
      16: iconst_1
      17: new           #100                // class io/undertow/protocols/spdy/SpdyChannel$SpdyControlMessageExceptionHandler
      20: dup
      21: aload_0
      22: aconst_null
      23: invokespecial #101                // Method io/undertow/protocols/spdy/SpdyChannel$SpdyControlMessageExceptionHandler."<init>":(Lio/undertow/protocols/spdy/SpdyChannel;Lio/undertow/protocols/spdy/SpdyChannel$1;)V
      26: invokevirtual #102                // Method sendGoAway:(ILorg/xnio/ChannelExceptionHandler;)V
      29: return

  protected void handleBrokenSinkChannel(java.lang.Throwable);
    Code:
       0: getstatic     #32                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
       3: aload_1
       4: ldc           #103                // String Closing SPDY channel to %s due to broken write side
       6: aload_0
       7: invokevirtual #98                 // Method getPeerAddress:()Ljava/net/SocketAddress;
      10: invokeinterface #99,  4           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/Object;)V
      15: aload_0
      16: invokestatic  #95                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      19: return

  protected void closeSubChannels();
    Code:
       0: aload_0
       1: getfield      #1                  // Field incomingStreams:Ljava/util/Map;
       4: invokeinterface #104,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #105,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          76
      24: aload_1
      25: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #106                // class java/util/Map$Entry
      33: astore_2
      34: aload_2
      35: invokeinterface #107,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      40: checkcast     #108                // class io/undertow/protocols/spdy/SpdyStreamSourceChannel
      43: astore_3
      44: aload_3
      45: invokevirtual #109                // Method io/undertow/protocols/spdy/SpdyStreamSourceChannel.isReadResumed:()Z
      48: ifeq          69
      51: aload_3
      52: invokevirtual #110                // Method io/undertow/protocols/spdy/SpdyStreamSourceChannel.getIoThread:()Lorg/xnio/XnioIoThread;
      55: aload_3
      56: aload_3
      57: invokevirtual #111                // Method io/undertow/protocols/spdy/SpdyStreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
      60: checkcast     #112                // class org/xnio/ChannelListener$SimpleSetter
      63: invokevirtual #113                // Method org/xnio/ChannelListener$SimpleSetter.get:()Lorg/xnio/ChannelListener;
      66: invokestatic  #114                // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/util/concurrent/Executor;Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)V
      69: aload_3
      70: invokestatic  #95                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      73: goto          15
      76: aload_0
      77: getfield      #1                  // Field incomingStreams:Ljava/util/Map;
      80: invokeinterface #115,  1          // InterfaceMethod java/util/Map.clear:()V
      85: aload_0
      86: getfield      #14                 // Field outgoingStreams:Ljava/util/Map;
      89: invokeinterface #104,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      94: invokeinterface #105,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      99: astore_1
     100: aload_1
     101: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     106: ifeq          161
     109: aload_1
     110: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     115: checkcast     #106                // class java/util/Map$Entry
     118: astore_2
     119: aload_2
     120: invokeinterface #107,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     125: checkcast     #80                 // class io/undertow/protocols/spdy/SpdyStreamStreamSinkChannel
     128: astore_3
     129: aload_3
     130: invokevirtual #116                // Method io/undertow/protocols/spdy/SpdyStreamStreamSinkChannel.isWritesShutdown:()Z
     133: ifeq          154
     136: aload_3
     137: invokevirtual #117                // Method io/undertow/protocols/spdy/SpdyStreamStreamSinkChannel.getIoThread:()Lorg/xnio/XnioIoThread;
     140: aload_3
     141: aload_3
     142: invokevirtual #118                // Method io/undertow/protocols/spdy/SpdyStreamStreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
     145: checkcast     #112                // class org/xnio/ChannelListener$SimpleSetter
     148: invokevirtual #113                // Method org/xnio/ChannelListener$SimpleSetter.get:()Lorg/xnio/ChannelListener;
     151: invokestatic  #114                // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/util/concurrent/Executor;Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)V
     154: aload_3
     155: invokestatic  #95                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     158: goto          100
     161: aload_0
     162: getfield      #14                 // Field outgoingStreams:Ljava/util/Map;
     165: invokeinterface #115,  1          // InterfaceMethod java/util/Map.clear:()V
     170: return

  synchronized void updateSettings(java.util.List<io.undertow.protocols.spdy.SpdySetting>);
    Code:
       0: aload_1
       1: invokeinterface #119,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          83
      16: aload_2
      17: invokeinterface #78,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #120                // class io/undertow/protocols/spdy/SpdySetting
      25: astore_3
      26: aload_3
      27: invokevirtual #121                // Method io/undertow/protocols/spdy/SpdySetting.getId:()I
      30: bipush        7
      32: if_icmpne     80
      35: aload_0
      36: getfield      #17                 // Field initialWindowSize:I
      39: istore        4
      41: aload_0
      42: aload_3
      43: invokevirtual #122                // Method io/undertow/protocols/spdy/SpdySetting.getValue:()I
      46: putfield      #17                 // Field initialWindowSize:I
      49: aload_0
      50: getfield      #17                 // Field initialWindowSize:I
      53: iload         4
      55: isub
      56: istore        5
      58: aload_0
      59: dup
      60: getfield      #18                 // Field receiveWindowSize:I
      63: iload         5
      65: iadd
      66: putfield      #18                 // Field receiveWindowSize:I
      69: aload_0
      70: dup
      71: getfield      #19                 // Field sendWindowSize:I
      74: iload         5
      76: iadd
      77: putfield      #19                 // Field sendWindowSize:I
      80: goto          7
      83: return

  public int getSpdyVersion();
    Code:
       0: iconst_3
       1: ireturn

  io.undertow.connector.ByteBufferPool getHeapBufferPool();
    Code:
       0: aload_0
       1: getfield      #26                 // Field heapBufferPool:Lio/undertow/connector/ByteBufferPool;
       4: areturn

  int getInitialWindowSize();
    Code:
       0: aload_0
       1: getfield      #17                 // Field initialWindowSize:I
       4: ireturn

  public synchronized void handleWindowUpdate(int, int) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifne          38
       4: aload_0
       5: getfield      #19                 // Field sendWindowSize:I
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: istore_3
      17: aload_0
      18: dup
      19: getfield      #19                 // Field sendWindowSize:I
      22: iload_2
      23: iadd
      24: putfield      #19                 // Field sendWindowSize:I
      27: iload_3
      28: ifeq          35
      31: aload_0
      32: invokevirtual #123                // Method notifyFlowControlAllowed:()V
      35: goto          67
      38: aload_0
      39: getfield      #14                 // Field outgoingStreams:Ljava/util/Map;
      42: iload_1
      43: invokestatic  #48                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      46: invokeinterface #124,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      51: checkcast     #80                 // class io/undertow/protocols/spdy/SpdyStreamStreamSinkChannel
      54: astore_3
      55: aload_3
      56: ifnonnull     62
      59: goto          67
      62: aload_3
      63: iload_2
      64: invokevirtual #125                // Method io/undertow/protocols/spdy/SpdyStreamStreamSinkChannel.updateFlowControlWindow:(I)V
      67: return

  synchronized void notifyFlowControlAllowed() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #126                // Method io/undertow/server/protocol/framed/AbstractFramedChannel.recalculateHeldFrames:()V
       4: return

  public void sendPing(int);
    Code:
       0: aload_0
       1: iload_1
       2: new           #100                // class io/undertow/protocols/spdy/SpdyChannel$SpdyControlMessageExceptionHandler
       5: dup
       6: aload_0
       7: aconst_null
       8: invokespecial #101                // Method io/undertow/protocols/spdy/SpdyChannel$SpdyControlMessageExceptionHandler."<init>":(Lio/undertow/protocols/spdy/SpdyChannel;Lio/undertow/protocols/spdy/SpdyChannel$1;)V
      11: invokevirtual #127                // Method sendPing:(ILorg/xnio/ChannelExceptionHandler;)V
      14: return

  public void sendPing(int, org.xnio.ChannelExceptionHandler<io.undertow.protocols.spdy.SpdyStreamSinkChannel>);
    Code:
       0: new           #128                // class io/undertow/protocols/spdy/SpdyPingStreamSinkChannel
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #129                // Method io/undertow/protocols/spdy/SpdyPingStreamSinkChannel."<init>":(Lio/undertow/protocols/spdy/SpdyChannel;I)V
       9: astore_3
      10: aload_3
      11: invokevirtual #130                // Method io/undertow/protocols/spdy/SpdyPingStreamSinkChannel.shutdownWrites:()V
      14: aload_3
      15: invokevirtual #131                // Method io/undertow/protocols/spdy/SpdyPingStreamSinkChannel.flush:()Z
      18: ifne          39
      21: aload_3
      22: invokevirtual #132                // Method io/undertow/protocols/spdy/SpdyPingStreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
      25: aconst_null
      26: aload_2
      27: invokestatic  #133                // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
      30: invokeinterface #134,  2          // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      35: aload_3
      36: invokevirtual #135                // Method io/undertow/protocols/spdy/SpdyPingStreamSinkChannel.resumeWrites:()V
      39: goto          53
      42: astore        4
      44: aload_2
      45: aload_3
      46: aload         4
      48: invokeinterface #137,  3          // InterfaceMethod org/xnio/ChannelExceptionHandler.handleException:(Ljava/nio/channels/Channel;Ljava/io/IOException;)V
      53: return
    Exception table:
       from    to  target type
          10    39    42   Class java/io/IOException

  public void sendGoAway(int);
    Code:
       0: aload_0
       1: iload_1
       2: new           #100                // class io/undertow/protocols/spdy/SpdyChannel$SpdyControlMessageExceptionHandler
       5: dup
       6: aload_0
       7: aconst_null
       8: invokespecial #101                // Method io/undertow/protocols/spdy/SpdyChannel$SpdyControlMessageExceptionHandler."<init>":(Lio/undertow/protocols/spdy/SpdyChannel;Lio/undertow/protocols/spdy/SpdyChannel$1;)V
      11: invokevirtual #102                // Method sendGoAway:(ILorg/xnio/ChannelExceptionHandler;)V
      14: return

  public void sendGoAway(int, org.xnio.ChannelExceptionHandler<io.undertow.protocols.spdy.SpdyStreamSinkChannel>);
    Code:
       0: aload_0
       1: getfield      #20                 // Field thisGoneAway:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #20                 // Field thisGoneAway:Z
      13: new           #138                // class io/undertow/protocols/spdy/SpdyGoAwayStreamSinkChannel
      16: dup
      17: aload_0
      18: iload_1
      19: aload_0
      20: getfield      #45                 // Field lastGoodStreamId:I
      23: invokespecial #139                // Method io/undertow/protocols/spdy/SpdyGoAwayStreamSinkChannel."<init>":(Lio/undertow/protocols/spdy/SpdyChannel;II)V
      26: astore_3
      27: aload_3
      28: invokevirtual #140                // Method io/undertow/protocols/spdy/SpdyGoAwayStreamSinkChannel.shutdownWrites:()V
      31: aload_3
      32: invokevirtual #141                // Method io/undertow/protocols/spdy/SpdyGoAwayStreamSinkChannel.flush:()Z
      35: ifne          56
      38: aload_3
      39: invokevirtual #142                // Method io/undertow/protocols/spdy/SpdyGoAwayStreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
      42: aconst_null
      43: aload_2
      44: invokestatic  #133                // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
      47: invokeinterface #134,  2          // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      52: aload_3
      53: invokevirtual #143                // Method io/undertow/protocols/spdy/SpdyGoAwayStreamSinkChannel.resumeWrites:()V
      56: goto          70
      59: astore        4
      61: aload_2
      62: aload_3
      63: aload         4
      65: invokeinterface #137,  3          // InterfaceMethod org/xnio/ChannelExceptionHandler.handleException:(Ljava/nio/channels/Channel;Ljava/io/IOException;)V
      70: return
    Exception table:
       from    to  target type
          27    56    59   Class java/io/IOException

  public void sendUpdateWindowSize(int, int);
    Code:
       0: new           #144                // class io/undertow/protocols/spdy/SpdyWindowUpdateStreamSinkChannel
       3: dup
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokespecial #145                // Method io/undertow/protocols/spdy/SpdyWindowUpdateStreamSinkChannel."<init>":(Lio/undertow/protocols/spdy/SpdyChannel;II)V
      10: astore_3
      11: aload_3
      12: invokevirtual #146                // Method io/undertow/protocols/spdy/SpdyWindowUpdateStreamSinkChannel.shutdownWrites:()V
      15: aload_3
      16: invokevirtual #147                // Method io/undertow/protocols/spdy/SpdyWindowUpdateStreamSinkChannel.flush:()Z
      19: ifne          48
      22: aload_3
      23: invokevirtual #148                // Method io/undertow/protocols/spdy/SpdyWindowUpdateStreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
      26: aconst_null
      27: new           #100                // class io/undertow/protocols/spdy/SpdyChannel$SpdyControlMessageExceptionHandler
      30: dup
      31: aload_0
      32: aconst_null
      33: invokespecial #101                // Method io/undertow/protocols/spdy/SpdyChannel$SpdyControlMessageExceptionHandler."<init>":(Lio/undertow/protocols/spdy/SpdyChannel;Lio/undertow/protocols/spdy/SpdyChannel$1;)V
      36: invokestatic  #133                // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
      39: invokeinterface #134,  2          // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      44: aload_3
      45: invokevirtual #149                // Method io/undertow/protocols/spdy/SpdyWindowUpdateStreamSinkChannel.resumeWrites:()V
      48: goto          59
      51: astore        4
      53: aload_0
      54: aload         4
      56: invokevirtual #150                // Method handleBrokenSinkChannel:(Ljava/lang/Throwable;)V
      59: return
    Exception table:
       from    to  target type
          11    48    51   Class java/io/IOException

  public javax.net.ssl.SSLSession getSslSession();
    Code:
       0: aload_0
       1: invokevirtual #151                // Method getUnderlyingConnection:()Lorg/xnio/StreamConnection;
       4: astore_1
       5: aload_1
       6: instanceof    #152                // class org/xnio/ssl/SslConnection
       9: ifeq          20
      12: aload_1
      13: checkcast     #152                // class org/xnio/ssl/SslConnection
      16: invokevirtual #153                // Method org/xnio/ssl/SslConnection.getSslSession:()Ljavax/net/ssl/SSLSession;
      19: areturn
      20: aconst_null
      21: areturn

  public synchronized void updateReceiveFlowControlWindow(int);
    Code:
       0: iload_1
       1: ifgt          5
       4: return
       5: aload_0
       6: dup
       7: getfield      #18                 // Field receiveWindowSize:I
      10: iload_1
      11: isub
      12: putfield      #18                 // Field receiveWindowSize:I
      15: aload_0
      16: getfield      #17                 // Field initialWindowSize:I
      19: istore_2
      20: aload_0
      21: getfield      #18                 // Field receiveWindowSize:I
      24: iload_2
      25: iconst_2
      26: idiv
      27: if_icmpge     53
      30: iload_2
      31: aload_0
      32: getfield      #18                 // Field receiveWindowSize:I
      35: isub
      36: istore_3
      37: aload_0
      38: dup
      39: getfield      #18                 // Field receiveWindowSize:I
      42: iload_3
      43: iadd
      44: putfield      #18                 // Field receiveWindowSize:I
      47: aload_0
      48: iconst_0
      49: iload_3
      50: invokevirtual #154                // Method sendUpdateWindowSize:(II)V
      53: return

  public synchronized io.undertow.protocols.spdy.SpdySynStreamStreamSinkChannel createStream(io.undertow.util.HeaderMap) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokevirtual #155                // Method createStream:(ILio/undertow/util/HeaderMap;)Lio/undertow/protocols/spdy/SpdySynStreamStreamSinkChannel;
       6: areturn

  public synchronized io.undertow.protocols.spdy.SpdySynStreamStreamSinkChannel createStream(int, io.undertow.util.HeaderMap) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #156                // Method isOpen:()Z
       4: ifne          16
       7: getstatic     #87                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #157,  1          // InterfaceMethod io/undertow/UndertowMessages.channelIsClosed:()Ljava/nio/channels/ClosedChannelException;
      15: athrow
      16: aload_0
      17: getfield      #29                 // Field streamIdCounter:I
      20: istore_3
      21: aload_0
      22: dup
      23: getfield      #29                 // Field streamIdCounter:I
      26: iconst_2
      27: iadd
      28: putfield      #29                 // Field streamIdCounter:I
      31: new           #158                // class io/undertow/protocols/spdy/SpdySynStreamStreamSinkChannel
      34: dup
      35: aload_0
      36: aload_2
      37: iload_3
      38: aload_0
      39: getfield      #11                 // Field deflater:Ljava/util/zip/Deflater;
      42: iload_1
      43: invokespecial #159                // Method io/undertow/protocols/spdy/SpdySynStreamStreamSinkChannel."<init>":(Lio/undertow/protocols/spdy/SpdyChannel;Lio/undertow/util/HeaderMap;ILjava/util/zip/Deflater;I)V
      46: astore        4
      48: aload_0
      49: getfield      #14                 // Field outgoingStreams:Ljava/util/Map;
      52: iload_3
      53: invokestatic  #48                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      56: aload         4
      58: invokeinterface #50,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: pop
      64: aload         4
      66: areturn

  synchronized int grabFlowControlBytes(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #19                 // Field sendWindowSize:I
       5: invokestatic  #160                // Method java/lang/Math.min:(II)I
       8: istore_2
       9: aload_0
      10: dup
      11: getfield      #19                 // Field sendWindowSize:I
      14: iload_2
      15: isub
      16: putfield      #19                 // Field sendWindowSize:I
      19: iload_2
      20: ireturn

  void registerStreamSink(io.undertow.protocols.spdy.SpdySynReplyStreamSinkChannel);
    Code:
       0: aload_0
       1: getfield      #14                 // Field outgoingStreams:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #161                // Method io/undertow/protocols/spdy/SpdySynReplyStreamSinkChannel.getStreamId:()I
       8: invokestatic  #48                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: aload_1
      12: invokeinterface #50,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: return

  void removeStreamSink(int);
    Code:
       0: aload_0
       1: getfield      #14                 // Field outgoingStreams:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #48                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #162,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: invokevirtual #163                // Method isLastFrameReceived:()Z
      18: ifeq          38
      21: aload_0
      22: getfield      #14                 // Field outgoingStreams:Ljava/util/Map;
      25: invokeinterface #164,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
      30: ifeq          38
      33: aload_0
      34: iconst_0
      35: invokevirtual #94                 // Method sendGoAway:(I)V
      38: return

  public boolean isClient();
    Code:
       0: aload_0
       1: getfield      #29                 // Field streamIdCounter:I
       4: iconst_2
       5: irem
       6: iconst_1
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public <T> T getAttachment(io.undertow.util.AttachmentKey<T>);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: getstatic     #87                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       7: ldc           #165                // String key
       9: invokeinterface #166,  2          // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_0
      16: getfield      #25                 // Field attachments:Ljava/util/Map;
      19: aload_1
      20: invokeinterface #124,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: areturn

  public <T> java.util.List<T> getAttachmentList(io.undertow.util.AttachmentKey<? extends java.util.List<T>>);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: getstatic     #87                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       7: ldc           #165                // String key
       9: invokeinterface #166,  2          // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_0
      16: getfield      #25                 // Field attachments:Ljava/util/Map;
      19: aload_1
      20: invokeinterface #124,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: astore_2
      26: aload_2
      27: ifnonnull     34
      30: invokestatic  #167                // Method java/util/Collections.emptyList:()Ljava/util/List;
      33: areturn
      34: aload_2
      35: checkcast     #168                // class java/util/List
      38: areturn

  public <T> T putAttachment(io.undertow.util.AttachmentKey<T>, T);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: getstatic     #87                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       7: ldc           #165                // String key
       9: invokeinterface #166,  2          // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_1
      16: aload_0
      17: getfield      #25                 // Field attachments:Ljava/util/Map;
      20: aload_1
      21: aload_1
      22: aload_2
      23: invokevirtual #169                // Method io/undertow/util/AttachmentKey.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      26: invokeinterface #50,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      31: invokevirtual #169                // Method io/undertow/util/AttachmentKey.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      34: areturn

  public <T> T removeAttachment(io.undertow.util.AttachmentKey<T>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #25                 // Field attachments:Ljava/util/Map;
       5: aload_1
       6: invokeinterface #162,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      11: invokevirtual #169                // Method io/undertow/util/AttachmentKey.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  public <T> void addToAttachmentList(io.undertow.util.AttachmentKey<io.undertow.util.AttachmentList<T>>, T);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: getstatic     #87                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       7: ldc           #165                // String key
       9: invokeinterface #166,  2          // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_0
      16: getfield      #25                 // Field attachments:Ljava/util/Map;
      19: astore_3
      20: aload_3
      21: dup
      22: astore        4
      24: monitorenter
      25: aload_1
      26: aload_3
      27: aload_1
      28: invokeinterface #124,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: invokevirtual #169                // Method io/undertow/util/AttachmentKey.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #168                // class java/util/List
      39: astore        5
      41: aload         5
      43: ifnonnull     77
      46: new           #170                // class io/undertow/util/AttachmentList
      49: dup
      50: ldc           #171                // class java/lang/Object
      52: invokespecial #172                // Method io/undertow/util/AttachmentList."<init>":(Ljava/lang/Class;)V
      55: astore        6
      57: aload_3
      58: aload_1
      59: aload         6
      61: invokeinterface #50,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      66: pop
      67: aload         6
      69: aload_2
      70: invokevirtual #173                // Method io/undertow/util/AttachmentList.add:(Ljava/lang/Object;)Z
      73: pop
      74: goto          86
      77: aload         5
      79: aload_2
      80: invokeinterface #174,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      85: pop
      86: aload         4
      88: monitorexit
      89: goto          100
      92: astore        7
      94: aload         4
      96: monitorexit
      97: aload         7
      99: athrow
     100: return
    Exception table:
       from    to  target type
          25    89    92   any
          92    97    92   any

  public void sendRstStream(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #60                 // Method handleRstStream:(I)V
       5: new           #175                // class io/undertow/protocols/spdy/SpdyRstStreamSinkChannel
       8: dup
       9: aload_0
      10: iload_1
      11: iload_2
      12: invokespecial #176                // Method io/undertow/protocols/spdy/SpdyRstStreamSinkChannel."<init>":(Lio/undertow/protocols/spdy/SpdyChannel;II)V
      15: astore_3
      16: aload_3
      17: invokevirtual #177                // Method io/undertow/protocols/spdy/SpdyRstStreamSinkChannel.shutdownWrites:()V
      20: aload_3
      21: invokevirtual #178                // Method io/undertow/protocols/spdy/SpdyRstStreamSinkChannel.flush:()Z
      24: ifne          52
      27: aload_3
      28: invokevirtual #179                // Method io/undertow/protocols/spdy/SpdyRstStreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
      31: aconst_null
      32: new           #180                // class io/undertow/protocols/spdy/SpdyChannel$1
      35: dup
      36: aload_0
      37: invokespecial #181                // Method io/undertow/protocols/spdy/SpdyChannel$1."<init>":(Lio/undertow/protocols/spdy/SpdyChannel;)V
      40: invokestatic  #133                // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
      43: invokeinterface #134,  2          // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      48: aload_3
      49: invokevirtual #182                // Method io/undertow/protocols/spdy/SpdyRstStreamSinkChannel.resumeWrites:()V
      52: goto          61
      55: astore_3
      56: aload_0
      57: aload_3
      58: invokevirtual #4                  // Method markWritesBroken:(Ljava/lang/Throwable;)V
      61: return
    Exception table:
       from    to  target type
           5    52    55   Class java/io/IOException

  private void handleRstStream(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field incomingStreams:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #48                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #162,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #108                // class io/undertow/protocols/spdy/SpdyStreamSourceChannel
      16: astore_2
      17: aload_2
      18: ifnull        25
      21: aload_2
      22: invokevirtual #183                // Method io/undertow/protocols/spdy/SpdyStreamSourceChannel.rstStream:()V
      25: aload_0
      26: getfield      #14                 // Field outgoingStreams:Ljava/util/Map;
      29: iload_1
      30: invokestatic  #48                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: invokeinterface #162,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #80                 // class io/undertow/protocols/spdy/SpdyStreamStreamSinkChannel
      41: astore_3
      42: aload_3
      43: ifnull        50
      46: aload_3
      47: invokevirtual #184                // Method io/undertow/protocols/spdy/SpdyStreamStreamSinkChannel.rstStream:()V
      50: return

  protected io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel createChannel(io.undertow.server.protocol.framed.FrameHeaderData, io.undertow.connector.PooledByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #185                // Method createChannel:(Lio/undertow/server/protocol/framed/FrameHeaderData;Lio/undertow/connector/PooledByteBuffer;)Lio/undertow/protocols/spdy/SpdyStreamSourceChannel;
       6: areturn

  static void access$100(io.undertow.protocols.spdy.SpdyChannel, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method markWritesBroken:(Ljava/lang/Throwable;)V
       5: return

  static java.util.zip.Inflater access$200(io.undertow.protocols.spdy.SpdyChannel);
    Code:
       0: aload_0
       1: getfield      #3                  // Field inflater:Ljava/util/zip/Inflater;
       4: areturn

  static boolean access$302(io.undertow.protocols.spdy.SpdyChannel, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #2                  // Field peerGoneAway:Z
       6: ireturn

  static java.util.Map access$400(io.undertow.protocols.spdy.SpdyChannel);
    Code:
       0: aload_0
       1: getfield      #1                  // Field incomingStreams:Ljava/util/Map;
       4: areturn
}
