Compiled from "AbstractFramedChannel.java"
class io.undertow.server.protocol.framed.AbstractFramedChannel$FrameWriteListener implements org.xnio.ChannelListener<org.xnio.channels.StreamSinkChannel> {
  final io.undertow.server.protocol.framed.AbstractFramedChannel this$0;

  private io.undertow.server.protocol.framed.AbstractFramedChannel$FrameWriteListener(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: return

  public void handleEvent(org.xnio.channels.StreamSinkChannel);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       4: invokevirtual #4                  // Method io/undertow/server/protocol/framed/AbstractFramedChannel.flushSenders:()V
       7: return

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #5                  // class org/xnio/channels/StreamSinkChannel
       5: invokevirtual #6                  // Method handleEvent:(Lorg/xnio/channels/StreamSinkChannel;)V
       8: return

  io.undertow.server.protocol.framed.AbstractFramedChannel$FrameWriteListener(io.undertow.server.protocol.framed.AbstractFramedChannel, io.undertow.server.protocol.framed.AbstractFramedChannel$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)V
       5: return
}
