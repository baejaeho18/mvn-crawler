Compiled from "ReadTimeoutStreamSourceChannel.java"
public final class io.undertow.channels.ReadTimeoutStreamSourceChannel extends io.undertow.channels.DelegatingStreamSourceChannel<io.undertow.channels.ReadTimeoutStreamSourceChannel> {
  private int readTimeout;

  private org.xnio.XnioExecutor$Key handle;

  private final java.lang.Runnable timeoutCommand;

  public io.undertow.channels.ReadTimeoutStreamSourceChannel(org.xnio.channels.StreamSourceChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/undertow/channels/DelegatingStreamSourceChannel."<init>":(Lorg/xnio/channels/StreamSourceChannel;)V
       5: aload_0
       6: new           #2                  // class io/undertow/channels/ReadTimeoutStreamSourceChannel$1
       9: dup
      10: aload_0
      11: invokespecial #3                  // Method io/undertow/channels/ReadTimeoutStreamSourceChannel$1."<init>":(Lio/undertow/channels/ReadTimeoutStreamSourceChannel;)V
      14: putfield      #4                  // Field timeoutCommand:Ljava/lang/Runnable;
      17: aload_1
      18: getstatic     #5                  // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
      21: invokeinterface #6,  2            // InterfaceMethod org/xnio/channels/StreamSourceChannel.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      26: checkcast     #7                  // class java/lang/Integer
      29: astore_2
      30: aload_2
      31: ifnull        45
      34: aload_0
      35: aload_2
      36: invokevirtual #8                  // Method java/lang/Integer.intValue:()I
      39: putfield      #9                  // Field readTimeout:I
      42: goto          50
      45: aload_0
      46: iconst_0
      47: putfield      #9                  // Field readTimeout:I
      50: goto          63
      53: astore_2
      54: new           #11                 // class java/lang/RuntimeException
      57: dup
      58: aload_2
      59: invokespecial #12                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      62: athrow
      63: return
    Exception table:
       from    to  target type
          17    50    53   Class java/io/IOException

  private void handleReadTimeout(long);
    Code:
       0: lload_1
       1: ldc2_w        #13                 // long -1l
       4: lcmp
       5: ifne          33
       8: aload_0
       9: getfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
      12: ifnull        107
      15: aload_0
      16: getfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
      19: invokeinterface #16,  1           // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
      24: pop
      25: aload_0
      26: aconst_null
      27: putfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
      30: goto          107
      33: aload_0
      34: getfield      #9                  // Field readTimeout:I
      37: ifle          107
      40: lload_1
      41: lconst_0
      42: lcmp
      43: ifne          84
      46: aload_0
      47: getfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
      50: ifnonnull     84
      53: aload_0
      54: aload_0
      55: getfield      #17                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
      58: invokeinterface #18,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getIoThread:()Lorg/xnio/XnioIoThread;
      63: aload_0
      64: getfield      #4                  // Field timeoutCommand:Ljava/lang/Runnable;
      67: aload_0
      68: getfield      #9                  // Field readTimeout:I
      71: i2l
      72: getstatic     #19                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      75: invokevirtual #20                 // Method org/xnio/XnioIoThread.executeAfter:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
      78: putfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
      81: goto          107
      84: lload_1
      85: lconst_0
      86: lcmp
      87: ifle          107
      90: aload_0
      91: getfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
      94: ifnull        107
      97: aload_0
      98: getfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
     101: invokeinterface #16,  1           // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
     106: pop
     107: return

  public long transferTo(long, long, java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
       4: lload_1
       5: lload_3
       6: aload         5
       8: invokeinterface #21,  6           // InterfaceMethod org/xnio/channels/StreamSourceChannel.transferTo:(JJLjava/nio/channels/FileChannel;)J
      13: lstore        6
      15: aload_0
      16: lload         6
      18: invokespecial #22                 // Method handleReadTimeout:(J)V
      21: lload         6
      23: lreturn

  public long transferTo(long, java.nio.ByteBuffer, org.xnio.channels.StreamSinkChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
       4: lload_1
       5: aload_3
       6: aload         4
       8: invokeinterface #23,  5           // InterfaceMethod org/xnio/channels/StreamSourceChannel.transferTo:(JLjava/nio/ByteBuffer;Lorg/xnio/channels/StreamSinkChannel;)J
      13: lstore        5
      15: aload_0
      16: lload         5
      18: invokespecial #22                 // Method handleReadTimeout:(J)V
      21: lload         5
      23: lreturn

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokeinterface #24,  4           // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:([Ljava/nio/ByteBuffer;II)J
      12: lstore        4
      14: aload_0
      15: lload         4
      17: invokespecial #22                 // Method handleReadTimeout:(J)V
      20: lload         4
      22: lreturn

  public long read(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:([Ljava/nio/ByteBuffer;)J
      10: lstore_2
      11: aload_0
      12: lload_2
      13: invokespecial #22                 // Method handleReadTimeout:(J)V
      16: lload_2
      17: lreturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field delegate:Lorg/xnio/channels/StreamSourceChannel;
       4: aload_1
       5: invokeinterface #26,  2           // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
      10: istore_2
      11: aload_0
      12: iload_2
      13: i2l
      14: invokespecial #22                 // Method handleReadTimeout:(J)V
      17: iload_2
      18: ireturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #27                 // Method io/undertow/channels/DelegatingStreamSourceChannel.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
       6: astore_3
       7: aload_1
       8: getstatic     #5                  // Field org/xnio/Options.READ_TIMEOUT:Lorg/xnio/Option;
      11: if_acmpne     71
      14: aload_0
      15: aload_2
      16: checkcast     #7                  // class java/lang/Integer
      19: invokevirtual #8                  // Method java/lang/Integer.intValue:()I
      22: putfield      #9                  // Field readTimeout:I
      25: aload_0
      26: getfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
      29: ifnull        71
      32: aload_0
      33: getfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
      36: invokeinterface #16,  1           // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
      41: pop
      42: aload_0
      43: getfield      #9                  // Field readTimeout:I
      46: ifle          71
      49: aload_0
      50: invokevirtual #28                 // Method getReadThread:()Lorg/xnio/XnioExecutor;
      53: aload_0
      54: getfield      #4                  // Field timeoutCommand:Ljava/lang/Runnable;
      57: aload_0
      58: getfield      #9                  // Field readTimeout:I
      61: i2l
      62: getstatic     #19                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      65: invokeinterface #29,  5           // InterfaceMethod org/xnio/XnioExecutor.executeAfter:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
      70: pop
      71: aload_3
      72: areturn

  public void shutdownReads() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #30                 // Method io/undertow/channels/DelegatingStreamSourceChannel.shutdownReads:()V
       4: aload_0
       5: getfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
       8: ifnull        26
      11: aload_0
      12: getfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
      15: invokeinterface #16,  1           // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
      20: pop
      21: aload_0
      22: aconst_null
      23: putfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
      26: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #31                 // Method io/undertow/channels/DelegatingStreamSourceChannel.close:()V
       4: aload_0
       5: getfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
       8: ifnull        26
      11: aload_0
      12: getfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
      15: invokeinterface #16,  1           // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
      20: pop
      21: aload_0
      22: aconst_null
      23: putfield      #15                 // Field handle:Lorg/xnio/XnioExecutor$Key;
      26: return
}
