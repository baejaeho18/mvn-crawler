Compiled from "InMemorySessionManager.java"
public class io.undertow.server.session.InMemorySessionManager implements io.undertow.server.session.SessionManager,io.undertow.server.session.SessionManagerStatistics {
  private final io.undertow.util.AttachmentKey<io.undertow.server.session.InMemorySessionManager$SessionImpl> NEW_SESSION;

  private final io.undertow.server.session.SessionIdGenerator sessionIdGenerator;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, io.undertow.server.session.InMemorySessionManager$SessionImpl> sessions;

  private final io.undertow.server.session.SessionListeners sessionListeners;

  private volatile int defaultSessionTimeout;

  private final int maxSize;

  private final io.undertow.util.ConcurrentDirectDeque<java.lang.String> evictionQueue;

  private final java.lang.String deploymentName;

  private final java.util.concurrent.atomic.AtomicLong createdSessionCount;

  private final java.util.concurrent.atomic.AtomicLong expiredSessionCount;

  private final java.util.concurrent.atomic.AtomicLong rejectedSessionCount;

  private final java.util.concurrent.atomic.AtomicLong averageSessionLifetime;

  private final java.util.concurrent.atomic.AtomicLong longestSessionLifetime;

  private final boolean statisticsEnabled;

  private volatile long startTime;

  private final boolean expireOldestUnusedSessionOnMax;

  public io.undertow.server.session.InMemorySessionManager(java.lang.String, int, boolean);
    Code:
       0: aload_0
       1: new           #10                 // class io/undertow/server/session/SecureRandomSessionIdGenerator
       4: dup
       5: invokespecial #11                 // Method io/undertow/server/session/SecureRandomSessionIdGenerator."<init>":()V
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokespecial #12                 // Method "<init>":(Lio/undertow/server/session/SessionIdGenerator;Ljava/lang/String;IZ)V
      14: return

  public io.undertow.server.session.InMemorySessionManager(io.undertow.server.session.SessionIdGenerator, java.lang.String, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: iconst_1
       7: invokespecial #13                 // Method "<init>":(Lio/undertow/server/session/SessionIdGenerator;Ljava/lang/String;IZZ)V
      10: return

  public io.undertow.server.session.InMemorySessionManager(io.undertow.server.session.SessionIdGenerator, java.lang.String, int, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #15                 // class io/undertow/server/session/InMemorySessionManager$SessionImpl
       7: invokestatic  #16                 // Method io/undertow/util/AttachmentKey.create:(Ljava/lang/Class;)Lio/undertow/util/AttachmentKey;
      10: putfield      #7                  // Field NEW_SESSION:Lio/undertow/util/AttachmentKey;
      13: aload_0
      14: new           #17                 // class io/undertow/server/session/SessionListeners
      17: dup
      18: invokespecial #18                 // Method io/undertow/server/session/SessionListeners."<init>":()V
      21: putfield      #8                  // Field sessionListeners:Lio/undertow/server/session/SessionListeners;
      24: aload_0
      25: sipush        1800
      28: putfield      #19                 // Field defaultSessionTimeout:I
      31: aload_0
      32: new           #20                 // class java/util/concurrent/atomic/AtomicLong
      35: dup
      36: invokespecial #21                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      39: putfield      #22                 // Field createdSessionCount:Ljava/util/concurrent/atomic/AtomicLong;
      42: aload_0
      43: new           #20                 // class java/util/concurrent/atomic/AtomicLong
      46: dup
      47: invokespecial #21                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      50: putfield      #3                  // Field expiredSessionCount:Ljava/util/concurrent/atomic/AtomicLong;
      53: aload_0
      54: new           #20                 // class java/util/concurrent/atomic/AtomicLong
      57: dup
      58: invokespecial #21                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      61: putfield      #23                 // Field rejectedSessionCount:Ljava/util/concurrent/atomic/AtomicLong;
      64: aload_0
      65: new           #20                 // class java/util/concurrent/atomic/AtomicLong
      68: dup
      69: invokespecial #21                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      72: putfield      #4                  // Field averageSessionLifetime:Ljava/util/concurrent/atomic/AtomicLong;
      75: aload_0
      76: new           #20                 // class java/util/concurrent/atomic/AtomicLong
      79: dup
      80: invokespecial #21                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      83: putfield      #2                  // Field longestSessionLifetime:Ljava/util/concurrent/atomic/AtomicLong;
      86: aload_0
      87: aload_1
      88: putfield      #1                  // Field sessionIdGenerator:Lio/undertow/server/session/SessionIdGenerator;
      91: aload_0
      92: aload_2
      93: putfield      #24                 // Field deploymentName:Ljava/lang/String;
      96: aload_0
      97: iload         5
      99: putfield      #5                  // Field statisticsEnabled:Z
     102: aload_0
     103: iload         4
     105: putfield      #25                 // Field expireOldestUnusedSessionOnMax:Z
     108: aload_0
     109: new           #26                 // class java/util/concurrent/ConcurrentHashMap
     112: dup
     113: invokespecial #27                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
     116: putfield      #6                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
     119: aload_0
     120: iload_3
     121: putfield      #28                 // Field maxSize:I
     124: aconst_null
     125: astore        6
     127: iload_3
     128: ifle          136
     131: invokestatic  #29                 // Method io/undertow/util/ConcurrentDirectDeque.newInstance:()Lio/undertow/util/ConcurrentDirectDeque;
     134: astore        6
     136: aload_0
     137: aload         6
     139: putfield      #9                  // Field evictionQueue:Lio/undertow/util/ConcurrentDirectDeque;
     142: return

  public io.undertow.server.session.InMemorySessionManager(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_0
       4: invokespecial #30                 // Method "<init>":(Ljava/lang/String;IZ)V
       7: return

  public io.undertow.server.session.InMemorySessionManager(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_m1
       3: invokespecial #31                 // Method "<init>":(Ljava/lang/String;I)V
       6: return

  public java.lang.String getDeploymentName();
    Code:
       0: aload_0
       1: getfield      #24                 // Field deploymentName:Ljava/lang/String;
       4: areturn

  public void start();
    Code:
       0: aload_0
       1: getfield      #22                 // Field createdSessionCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: lconst_0
       5: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
       8: aload_0
       9: getfield      #3                  // Field expiredSessionCount:Ljava/util/concurrent/atomic/AtomicLong;
      12: lconst_0
      13: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      16: aload_0
      17: invokestatic  #33                 // Method java/lang/System.currentTimeMillis:()J
      20: putfield      #34                 // Field startTime:J
      23: return

  public void stop();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #35,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
       9: invokeinterface #36,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          69
      24: aload_1
      25: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #39                 // class java/util/Map$Entry
      33: astore_2
      34: aload_2
      35: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      40: checkcast     #15                 // class io/undertow/server/session/InMemorySessionManager$SessionImpl
      43: invokestatic  #41                 // Method io/undertow/server/session/InMemorySessionManager$SessionImpl.access$000:(Lio/undertow/server/session/InMemorySessionManager$SessionImpl;)V
      46: aload_0
      47: getfield      #8                  // Field sessionListeners:Lio/undertow/server/session/SessionListeners;
      50: aload_2
      51: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      56: checkcast     #42                 // class io/undertow/server/session/Session
      59: aconst_null
      60: getstatic     #43                 // Field io/undertow/server/session/SessionListener$SessionDestroyedReason.UNDEPLOY:Lio/undertow/server/session/SessionListener$SessionDestroyedReason;
      63: invokevirtual #44                 // Method io/undertow/server/session/SessionListeners.sessionDestroyed:(Lio/undertow/server/session/Session;Lio/undertow/server/HttpServerExchange;Lio/undertow/server/session/SessionListener$SessionDestroyedReason;)V
      66: goto          15
      69: aload_0
      70: getfield      #6                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
      73: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
      78: return

  public io.undertow.server.session.Session createSession(io.undertow.server.HttpServerExchange, io.undertow.server.session.SessionConfig);
    Code:
       0: aload_0
       1: getfield      #9                  // Field evictionQueue:Lio/undertow/util/ConcurrentDirectDeque;
       4: ifnull        138
       7: aload_0
       8: getfield      #25                 // Field expireOldestUnusedSessionOnMax:Z
      11: ifeq          94
      14: aload_0
      15: getfield      #6                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
      18: invokeinterface #46,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
      23: aload_0
      24: getfield      #28                 // Field maxSize:I
      27: if_icmplt     138
      30: aload_0
      31: getfield      #9                  // Field evictionQueue:Lio/undertow/util/ConcurrentDirectDeque;
      34: invokevirtual #47                 // Method io/undertow/util/ConcurrentDirectDeque.isEmpty:()Z
      37: ifne          138
      40: aload_0
      41: getfield      #9                  // Field evictionQueue:Lio/undertow/util/ConcurrentDirectDeque;
      44: invokevirtual #48                 // Method io/undertow/util/ConcurrentDirectDeque.poll:()Ljava/lang/Object;
      47: checkcast     #49                 // class java/lang/String
      50: astore_3
      51: getstatic     #50                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      54: ldc           #51                 // String Removing session %s as max size has been hit
      56: aload_3
      57: invokeinterface #52,  3           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      62: aload_0
      63: getfield      #6                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
      66: aload_3
      67: invokeinterface #53,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      72: checkcast     #15                 // class io/undertow/server/session/InMemorySessionManager$SessionImpl
      75: astore        4
      77: aload         4
      79: ifnull        91
      82: aload         4
      84: aconst_null
      85: getstatic     #54                 // Field io/undertow/server/session/SessionListener$SessionDestroyedReason.TIMEOUT:Lio/undertow/server/session/SessionListener$SessionDestroyedReason;
      88: invokevirtual #55                 // Method io/undertow/server/session/InMemorySessionManager$SessionImpl.invalidate:(Lio/undertow/server/HttpServerExchange;Lio/undertow/server/session/SessionListener$SessionDestroyedReason;)V
      91: goto          14
      94: aload_0
      95: getfield      #6                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
      98: invokeinterface #46,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
     103: aload_0
     104: getfield      #28                 // Field maxSize:I
     107: if_icmplt     138
     110: aload_0
     111: getfield      #5                  // Field statisticsEnabled:Z
     114: ifeq          125
     117: aload_0
     118: getfield      #23                 // Field rejectedSessionCount:Ljava/util/concurrent/atomic/AtomicLong;
     121: invokevirtual #56                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
     124: pop2
     125: getstatic     #57                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     128: aload_0
     129: getfield      #28                 // Field maxSize:I
     132: invokeinterface #58,  2           // InterfaceMethod io/undertow/UndertowMessages.tooManySessions:(I)Ljava/lang/IllegalStateException;
     137: athrow
     138: aload_2
     139: ifnonnull     151
     142: getstatic     #57                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     145: invokeinterface #59,  1           // InterfaceMethod io/undertow/UndertowMessages.couldNotFindSessionCookieConfig:()Ljava/lang/IllegalStateException;
     150: athrow
     151: aload_2
     152: aload_1
     153: invokeinterface #60,  2           // InterfaceMethod io/undertow/server/session/SessionConfig.findSessionId:(Lio/undertow/server/HttpServerExchange;)Ljava/lang/String;
     158: astore_3
     159: iconst_0
     160: istore        4
     162: aload_3
     163: ifnonnull     210
     166: aload_0
     167: getfield      #1                  // Field sessionIdGenerator:Lio/undertow/server/session/SessionIdGenerator;
     170: invokeinterface #61,  1           // InterfaceMethod io/undertow/server/session/SessionIdGenerator.createSessionId:()Ljava/lang/String;
     175: astore_3
     176: aload_0
     177: getfield      #6                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
     180: aload_3
     181: invokeinterface #62,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
     186: ifeq          191
     189: aconst_null
     190: astore_3
     191: iload         4
     193: iinc          4, 1
     196: bipush        100
     198: if_icmpne     162
     201: getstatic     #57                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     204: invokeinterface #63,  1           // InterfaceMethod io/undertow/UndertowMessages.couldNotGenerateUniqueSessionId:()Ljava/lang/RuntimeException;
     209: athrow
     210: aload_0
     211: getfield      #9                  // Field evictionQueue:Lio/undertow/util/ConcurrentDirectDeque;
     214: ifnull        230
     217: aload_0
     218: getfield      #9                  // Field evictionQueue:Lio/undertow/util/ConcurrentDirectDeque;
     221: aload_3
     222: invokevirtual #64                 // Method io/undertow/util/ConcurrentDirectDeque.offerLastAndReturnToken:(Ljava/lang/Object;)Ljava/lang/Object;
     225: astore        5
     227: goto          233
     230: aconst_null
     231: astore        5
     233: aload_0
     234: getfield      #5                  // Field statisticsEnabled:Z
     237: ifeq          248
     240: aload_0
     241: getfield      #22                 // Field createdSessionCount:Ljava/util/concurrent/atomic/AtomicLong;
     244: invokevirtual #56                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
     247: pop2
     248: new           #15                 // class io/undertow/server/session/InMemorySessionManager$SessionImpl
     251: dup
     252: aload_0
     253: aload_3
     254: aload_2
     255: aload_1
     256: invokevirtual #65                 // Method io/undertow/server/HttpServerExchange.getIoThread:()Lorg/xnio/XnioIoThread;
     259: aload_1
     260: invokevirtual #66                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     263: invokevirtual #67                 // Method io/undertow/server/ServerConnection.getWorker:()Lorg/xnio/XnioWorker;
     266: aload         5
     268: aload_0
     269: getfield      #19                 // Field defaultSessionTimeout:I
     272: aconst_null
     273: invokespecial #68                 // Method io/undertow/server/session/InMemorySessionManager$SessionImpl."<init>":(Lio/undertow/server/session/InMemorySessionManager;Ljava/lang/String;Lio/undertow/server/session/SessionConfig;Lorg/xnio/XnioExecutor;Lorg/xnio/XnioWorker;Ljava/lang/Object;ILio/undertow/server/session/InMemorySessionManager$1;)V
     276: astore        6
     278: aload_0
     279: getfield      #6                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
     282: aload_3
     283: aload         6
     285: invokeinterface #69,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     290: pop
     291: aload_2
     292: aload_1
     293: aload         6
     295: invokevirtual #70                 // Method io/undertow/server/session/InMemorySessionManager$SessionImpl.getId:()Ljava/lang/String;
     298: invokeinterface #71,  3           // InterfaceMethod io/undertow/server/session/SessionConfig.setSessionId:(Lio/undertow/server/HttpServerExchange;Ljava/lang/String;)V
     303: aload         6
     305: invokestatic  #33                 // Method java/lang/System.currentTimeMillis:()J
     308: putfield      #72                 // Field io/undertow/server/session/InMemorySessionManager$SessionImpl.lastAccessed:J
     311: aload         6
     313: invokevirtual #73                 // Method io/undertow/server/session/InMemorySessionManager$SessionImpl.bumpTimeout:()V
     316: aload_0
     317: getfield      #8                  // Field sessionListeners:Lio/undertow/server/session/SessionListeners;
     320: aload         6
     322: aload_1
     323: invokevirtual #74                 // Method io/undertow/server/session/SessionListeners.sessionCreated:(Lio/undertow/server/session/Session;Lio/undertow/server/HttpServerExchange;)V
     326: aload_1
     327: aload_0
     328: getfield      #7                  // Field NEW_SESSION:Lio/undertow/util/AttachmentKey;
     331: aload         6
     333: invokevirtual #75                 // Method io/undertow/server/HttpServerExchange.putAttachment:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
     336: pop
     337: aload         6
     339: areturn

  public io.undertow.server.session.Session getSession(io.undertow.server.HttpServerExchange, io.undertow.server.session.SessionConfig);
    Code:
       0: aload_1
       1: ifnull        22
       4: aload_1
       5: aload_0
       6: getfield      #7                  // Field NEW_SESSION:Lio/undertow/util/AttachmentKey;
       9: invokevirtual #76                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      12: checkcast     #15                 // class io/undertow/server/session/InMemorySessionManager$SessionImpl
      15: astore_3
      16: aload_3
      17: ifnull        22
      20: aload_3
      21: areturn
      22: aload_2
      23: aload_1
      24: invokeinterface #60,  2           // InterfaceMethod io/undertow/server/session/SessionConfig.findSessionId:(Lio/undertow/server/HttpServerExchange;)Ljava/lang/String;
      29: astore_3
      30: aload_0
      31: aload_3
      32: invokevirtual #77                 // Method getSession:(Ljava/lang/String;)Lio/undertow/server/session/Session;
      35: areturn

  public io.undertow.server.session.Session getSession(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #6                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
      10: aload_1
      11: invokeinterface #53,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #15                 // class io/undertow/server/session/InMemorySessionManager$SessionImpl
      19: astore_2
      20: aload_2
      21: ifnonnull     26
      24: aconst_null
      25: areturn
      26: aload_2
      27: areturn

  public synchronized void registerSessionListener(io.undertow.server.session.SessionListener);
    Code:
       0: aload_0
       1: getfield      #8                  // Field sessionListeners:Lio/undertow/server/session/SessionListeners;
       4: aload_1
       5: invokevirtual #78                 // Method io/undertow/server/session/SessionListeners.addSessionListener:(Lio/undertow/server/session/SessionListener;)V
       8: return

  public synchronized void removeSessionListener(io.undertow.server.session.SessionListener);
    Code:
       0: aload_0
       1: getfield      #8                  // Field sessionListeners:Lio/undertow/server/session/SessionListeners;
       4: aload_1
       5: invokevirtual #79                 // Method io/undertow/server/session/SessionListeners.removeSessionListener:(Lio/undertow/server/session/SessionListener;)Z
       8: pop
       9: return

  public void setDefaultSessionTimeout(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field defaultSessionTimeout:I
       5: return

  public java.util.Set<java.lang.String> getTransientSessions();
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method getAllSessions:()Ljava/util/Set;
       4: areturn

  public java.util.Set<java.lang.String> getActiveSessions();
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method getAllSessions:()Ljava/util/Set;
       4: areturn

  public java.util.Set<java.lang.String> getAllSessions();
    Code:
       0: new           #81                 // class java/util/HashSet
       3: dup
       4: aload_0
       5: getfield      #6                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
       8: invokeinterface #82,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
      13: invokespecial #83                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      16: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #84                 // class io/undertow/server/session/SessionManager
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #84                 // class io/undertow/server/session/SessionManager
      13: astore_2
      14: aload_0
      15: getfield      #24                 // Field deploymentName:Ljava/lang/String;
      18: aload_2
      19: invokeinterface #85,  1           // InterfaceMethod io/undertow/server/session/SessionManager.getDeploymentName:()Ljava/lang/String;
      24: invokevirtual #86                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #24                 // Field deploymentName:Ljava/lang/String;
       4: invokevirtual #87                 // Method java/lang/String.hashCode:()I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #24                 // Field deploymentName:Ljava/lang/String;
       4: areturn

  public io.undertow.server.session.SessionManagerStatistics getStatistics();
    Code:
       0: aload_0
       1: areturn

  public long getCreatedSessionCount();
    Code:
       0: aload_0
       1: getfield      #22                 // Field createdSessionCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #88                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getMaxActiveSessions();
    Code:
       0: aload_0
       1: getfield      #28                 // Field maxSize:I
       4: i2l
       5: lreturn

  public long getActiveSessionCount();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #46,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
       9: i2l
      10: lreturn

  public long getExpiredSessionCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field expiredSessionCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #88                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getRejectedSessions();
    Code:
       0: aload_0
       1: getfield      #23                 // Field rejectedSessionCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #88                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getMaxSessionAliveTime();
    Code:
       0: aload_0
       1: getfield      #2                  // Field longestSessionLifetime:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #88                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getAverageSessionAliveTime();
    Code:
       0: aload_0
       1: getfield      #4                  // Field averageSessionLifetime:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #88                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long getStartTime();
    Code:
       0: aload_0
       1: getfield      #34                 // Field startTime:J
       4: lreturn

  static io.undertow.util.ConcurrentDirectDeque access$400(io.undertow.server.session.InMemorySessionManager);
    Code:
       0: aload_0
       1: getfield      #9                  // Field evictionQueue:Lio/undertow/util/ConcurrentDirectDeque;
       4: areturn

  static io.undertow.server.session.SessionListeners access$500(io.undertow.server.session.InMemorySessionManager);
    Code:
       0: aload_0
       1: getfield      #8                  // Field sessionListeners:Lio/undertow/server/session/SessionListeners;
       4: areturn

  static io.undertow.util.AttachmentKey access$600(io.undertow.server.session.InMemorySessionManager);
    Code:
       0: aload_0
       1: getfield      #7                  // Field NEW_SESSION:Lio/undertow/util/AttachmentKey;
       4: areturn

  static java.util.concurrent.ConcurrentMap access$700(io.undertow.server.session.InMemorySessionManager);
    Code:
       0: aload_0
       1: getfield      #6                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  static boolean access$800(io.undertow.server.session.InMemorySessionManager);
    Code:
       0: aload_0
       1: getfield      #5                  // Field statisticsEnabled:Z
       4: ireturn

  static java.util.concurrent.atomic.AtomicLong access$900(io.undertow.server.session.InMemorySessionManager);
    Code:
       0: aload_0
       1: getfield      #4                  // Field averageSessionLifetime:Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  static java.util.concurrent.atomic.AtomicLong access$1000(io.undertow.server.session.InMemorySessionManager);
    Code:
       0: aload_0
       1: getfield      #3                  // Field expiredSessionCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  static java.util.concurrent.atomic.AtomicLong access$1100(io.undertow.server.session.InMemorySessionManager);
    Code:
       0: aload_0
       1: getfield      #2                  // Field longestSessionLifetime:Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  static io.undertow.server.session.SessionIdGenerator access$1200(io.undertow.server.session.InMemorySessionManager);
    Code:
       0: aload_0
       1: getfield      #1                  // Field sessionIdGenerator:Lio/undertow/server/session/SessionIdGenerator;
       4: areturn
}
