Compiled from "SimpleNonceManager.java"
class io.undertow.security.impl.SimpleNonceManager$Nonce {
  private final java.lang.String nonce;

  private final long timeStamp;

  private int maxNonceCount;

  private final io.undertow.security.impl.SimpleNonceManager$NonceHolder previousNonce;

  private byte[] sessionKey;

  private org.xnio.XnioExecutor$Key executorKey;

  final io.undertow.security.impl.SimpleNonceManager this$0;

  private io.undertow.security.impl.SimpleNonceManager$Nonce(io.undertow.security.impl.SimpleNonceManager, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc2_w        #7                  // long -1l
       6: iconst_m1
       7: invokespecial #1                  // Method "<init>":(Lio/undertow/security/impl/SimpleNonceManager;Ljava/lang/String;JI)V
      10: return

  private io.undertow.security.impl.SimpleNonceManager$Nonce(io.undertow.security.impl.SimpleNonceManager, java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: iconst_m1
       5: invokespecial #1                  // Method "<init>":(Lio/undertow/security/impl/SimpleNonceManager;Ljava/lang/String;JI)V
       8: return

  private io.undertow.security.impl.SimpleNonceManager$Nonce(io.undertow.security.impl.SimpleNonceManager, java.lang.String, long, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: iload         5
       6: aconst_null
       7: invokespecial #9                  // Method "<init>":(Lio/undertow/security/impl/SimpleNonceManager;Ljava/lang/String;JILio/undertow/security/impl/SimpleNonceManager$NonceHolder;)V
      10: return

  private io.undertow.security.impl.SimpleNonceManager$Nonce(io.undertow.security.impl.SimpleNonceManager, java.lang.String, long, io.undertow.security.impl.SimpleNonceManager$NonceHolder);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: iconst_m1
       5: aload         5
       7: invokespecial #9                  // Method "<init>":(Lio/undertow/security/impl/SimpleNonceManager;Ljava/lang/String;JILio/undertow/security/impl/SimpleNonceManager$NonceHolder;)V
      10: return

  private io.undertow.security.impl.SimpleNonceManager$Nonce(io.undertow.security.impl.SimpleNonceManager, java.lang.String, long, int, io.undertow.security.impl.SimpleNonceManager$NonceHolder);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field this$0:Lio/undertow/security/impl/SimpleNonceManager;
       5: aload_0
       6: invokespecial #11                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field nonce:Ljava/lang/String;
      14: aload_0
      15: lload_3
      16: putfield      #6                  // Field timeStamp:J
      19: aload_0
      20: iload         5
      22: putfield      #12                 // Field maxNonceCount:I
      25: aload_0
      26: aload         6
      28: putfield      #13                 // Field previousNonce:Lio/undertow/security/impl/SimpleNonceManager$NonceHolder;
      31: return

  byte[] getSessionKey();
    Code:
       0: aload_0
       1: getfield      #14                 // Field sessionKey:[B
       4: areturn

  void setSessionKey(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field sessionKey:[B
       5: return

  int getMaxNonceCount();
    Code:
       0: aload_0
       1: getfield      #12                 // Field maxNonceCount:I
       4: ireturn

  void setMaxNonceCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field maxNonceCount:I
       5: return

  static long access$100(io.undertow.security.impl.SimpleNonceManager$Nonce);
    Code:
       0: aload_0
       1: getfield      #6                  // Field timeStamp:J
       4: lreturn

  static org.xnio.XnioExecutor$Key access$200(io.undertow.security.impl.SimpleNonceManager$Nonce);
    Code:
       0: aload_0
       1: getfield      #5                  // Field executorKey:Lorg/xnio/XnioExecutor$Key;
       4: areturn

  static java.lang.String access$300(io.undertow.security.impl.SimpleNonceManager$Nonce);
    Code:
       0: aload_0
       1: getfield      #4                  // Field nonce:Ljava/lang/String;
       4: areturn

  static org.xnio.XnioExecutor$Key access$202(io.undertow.security.impl.SimpleNonceManager$Nonce, org.xnio.XnioExecutor$Key);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #5                  // Field executorKey:Lorg/xnio/XnioExecutor$Key;
       6: areturn

  io.undertow.security.impl.SimpleNonceManager$Nonce(io.undertow.security.impl.SimpleNonceManager, java.lang.String, long, io.undertow.security.impl.SimpleNonceManager$NonceHolder, io.undertow.security.impl.SimpleNonceManager$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: aload         5
       6: invokespecial #3                  // Method "<init>":(Lio/undertow/security/impl/SimpleNonceManager;Ljava/lang/String;JLio/undertow/security/impl/SimpleNonceManager$NonceHolder;)V
       9: return

  io.undertow.security.impl.SimpleNonceManager$Nonce(io.undertow.security.impl.SimpleNonceManager, java.lang.String, io.undertow.security.impl.SimpleNonceManager$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method "<init>":(Lio/undertow/security/impl/SimpleNonceManager;Ljava/lang/String;)V
       6: return

  io.undertow.security.impl.SimpleNonceManager$Nonce(io.undertow.security.impl.SimpleNonceManager, java.lang.String, long, int, io.undertow.security.impl.SimpleNonceManager$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: iload         5
       6: invokespecial #1                  // Method "<init>":(Lio/undertow/security/impl/SimpleNonceManager;Ljava/lang/String;JI)V
       9: return
}
