Compiled from "ProxyHandler.java"
final class io.undertow.server.handlers.proxy.ProxyHandler$ResponseCallback implements io.undertow.client.ClientCallback<io.undertow.client.ClientExchange> {
  private final io.undertow.server.HttpServerExchange exchange;

  private io.undertow.server.handlers.proxy.ProxyHandler$ResponseCallback(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       9: return

  public void completed(io.undertow.client.ClientExchange);
    Code:
       0: aload_1
       1: invokeinterface #4,  1            // InterfaceMethod io/undertow/client/ClientExchange.getResponse:()Lio/undertow/client/ClientResponse;
       6: astore_2
       7: invokestatic  #5                  // Method io/undertow/server/handlers/proxy/ProxyHandler.access$600:()Lorg/jboss/logging/Logger;
      10: invokevirtual #6                  // Method org/jboss/logging/Logger.isDebugEnabled:()Z
      13: ifeq          35
      16: invokestatic  #5                  // Method io/undertow/server/handlers/proxy/ProxyHandler.access$600:()Lorg/jboss/logging/Logger;
      19: ldc           #7                  // String Received response %s for request %s for exchange %s
      21: aload_2
      22: aload_1
      23: invokeinterface #8,  1            // InterfaceMethod io/undertow/client/ClientExchange.getRequest:()Lio/undertow/client/ClientRequest;
      28: aload_0
      29: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      32: invokevirtual #9                  // Method org/jboss/logging/Logger.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      35: aload_2
      36: invokevirtual #10                 // Method io/undertow/client/ClientResponse.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      39: astore_3
      40: aload_0
      41: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      44: invokevirtual #11                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      47: astore        4
      49: aload_0
      50: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      53: aload_2
      54: invokevirtual #12                 // Method io/undertow/client/ClientResponse.getResponseCode:()I
      57: invokevirtual #13                 // Method io/undertow/server/HttpServerExchange.setStatusCode:(I)Lio/undertow/server/HttpServerExchange;
      60: pop
      61: aload         4
      63: aload_3
      64: invokestatic  #14                 // Method io/undertow/server/handlers/proxy/ProxyHandler.copyHeaders:(Lio/undertow/util/HeaderMap;Lio/undertow/util/HeaderMap;)V
      67: aload_0
      68: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      71: invokevirtual #15                 // Method io/undertow/server/HttpServerExchange.isUpgrade:()Z
      74: ifeq          94
      77: aload_0
      78: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      81: new           #16                 // class io/undertow/server/handlers/proxy/ProxyHandler$ResponseCallback$1
      84: dup
      85: aload_0
      86: aload_1
      87: invokespecial #17                 // Method io/undertow/server/handlers/proxy/ProxyHandler$ResponseCallback$1."<init>":(Lio/undertow/server/handlers/proxy/ProxyHandler$ResponseCallback;Lio/undertow/client/ClientExchange;)V
      90: invokevirtual #18                 // Method io/undertow/server/HttpServerExchange.upgradeChannel:(Lio/undertow/server/HttpUpgradeListener;)Lio/undertow/server/HttpServerExchange;
      93: pop
      94: new           #19                 // class io/undertow/server/handlers/proxy/ProxyHandler$IoExceptionHandler
      97: dup
      98: aload_0
      99: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     102: aload_1
     103: invokeinterface #20,  1           // InterfaceMethod io/undertow/client/ClientExchange.getConnection:()Lio/undertow/client/ClientConnection;
     108: aconst_null
     109: invokespecial #21                 // Method io/undertow/server/handlers/proxy/ProxyHandler$IoExceptionHandler."<init>":(Lio/undertow/server/HttpServerExchange;Lio/undertow/client/ClientConnection;Lio/undertow/server/handlers/proxy/ProxyHandler$1;)V
     112: astore        5
     114: aload_1
     115: invokeinterface #22,  1           // InterfaceMethod io/undertow/client/ClientExchange.getResponseChannel:()Lorg/xnio/channels/StreamSourceChannel;
     120: aload_0
     121: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     124: invokevirtual #23                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
     127: invokestatic  #24                 // Method org/xnio/ChannelListeners.closingChannelListener:()Lorg/xnio/ChannelListener;
     130: new           #25                 // class io/undertow/server/handlers/proxy/ProxyHandler$HTTPTrailerChannelListener
     133: dup
     134: aload_1
     135: aload_0
     136: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     139: aconst_null
     140: invokespecial #26                 // Method io/undertow/server/handlers/proxy/ProxyHandler$HTTPTrailerChannelListener."<init>":(Lio/undertow/util/Attachable;Lio/undertow/util/Attachable;Lio/undertow/server/handlers/proxy/ProxyHandler$1;)V
     143: aload         5
     145: aload         5
     147: aload_0
     148: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     151: invokevirtual #27                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     154: invokevirtual #28                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
     157: invokestatic  #29                 // Method io/undertow/util/Transfer.initiateTransfer:(Lorg/xnio/channels/StreamSourceChannel;Lorg/xnio/channels/StreamSinkChannel;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;Lorg/xnio/ChannelExceptionHandler;Lio/undertow/connector/ByteBufferPool;)V
     160: return

  public void failed(java.io.IOException);
    Code:
       0: getstatic     #30                 // Field io/undertow/UndertowLogger.PROXY_REQUEST_LOGGER:Lio/undertow/UndertowLogger;
       3: aload_0
       4: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       7: invokevirtual #31                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
      10: aload_1
      11: invokeinterface #32,  3           // InterfaceMethod io/undertow/UndertowLogger.proxyRequestFailed:(Ljava/lang/String;Ljava/lang/Exception;)V
      16: aload_0
      17: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      20: invokevirtual #33                 // Method io/undertow/server/HttpServerExchange.isResponseStarted:()Z
      23: ifne          48
      26: aload_0
      27: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      30: sipush        500
      33: invokevirtual #13                 // Method io/undertow/server/HttpServerExchange.setStatusCode:(I)Lio/undertow/server/HttpServerExchange;
      36: pop
      37: aload_0
      38: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      41: invokevirtual #35                 // Method io/undertow/server/HttpServerExchange.endExchange:()Lio/undertow/server/HttpServerExchange;
      44: pop
      45: goto          58
      48: aload_0
      49: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      52: invokevirtual #27                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      55: invokestatic  #36                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      58: return

  public void completed(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #37                 // class io/undertow/client/ClientExchange
       5: invokevirtual #38                 // Method completed:(Lio/undertow/client/ClientExchange;)V
       8: return

  io.undertow.server.handlers.proxy.ProxyHandler$ResponseCallback(io.undertow.server.HttpServerExchange, io.undertow.server.handlers.proxy.ProxyHandler$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lio/undertow/server/HttpServerExchange;)V
       5: return
}
