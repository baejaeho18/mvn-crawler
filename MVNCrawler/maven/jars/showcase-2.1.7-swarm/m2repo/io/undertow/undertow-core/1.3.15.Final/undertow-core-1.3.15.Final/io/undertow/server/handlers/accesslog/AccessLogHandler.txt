Compiled from "AccessLogHandler.java"
public class io.undertow.server.handlers.accesslog.AccessLogHandler implements io.undertow.server.HttpHandler {
  private final io.undertow.server.HttpHandler next;

  private final io.undertow.server.handlers.accesslog.AccessLogReceiver accessLogReceiver;

  private final java.lang.String formatString;

  private final io.undertow.attribute.ExchangeAttribute tokens;

  private final io.undertow.server.ExchangeCompletionListener exchangeCompletionListener;

  private final io.undertow.predicate.Predicate predicate;

  public io.undertow.server.handlers.accesslog.AccessLogHandler(io.undertow.server.HttpHandler, io.undertow.server.handlers.accesslog.AccessLogReceiver, java.lang.String, java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #4                  // Method io/undertow/predicate/Predicates.truePredicate:()Lio/undertow/predicate/Predicate;
       9: invokespecial #5                  // Method "<init>":(Lio/undertow/server/HttpHandler;Lio/undertow/server/handlers/accesslog/AccessLogReceiver;Ljava/lang/String;Ljava/lang/ClassLoader;Lio/undertow/predicate/Predicate;)V
      12: return

  public io.undertow.server.handlers.accesslog.AccessLogHandler(io.undertow.server.HttpHandler, io.undertow.server.handlers.accesslog.AccessLogReceiver, java.lang.String, java.lang.ClassLoader, io.undertow.predicate.Predicate);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class io/undertow/server/handlers/accesslog/AccessLogHandler$AccessLogCompletionListener
       8: dup
       9: aload_0
      10: aconst_null
      11: invokespecial #8                  // Method io/undertow/server/handlers/accesslog/AccessLogHandler$AccessLogCompletionListener."<init>":(Lio/undertow/server/handlers/accesslog/AccessLogHandler;Lio/undertow/server/handlers/accesslog/AccessLogHandler$1;)V
      14: putfield      #9                  // Field exchangeCompletionListener:Lio/undertow/server/ExchangeCompletionListener;
      17: aload_0
      18: aload_1
      19: putfield      #10                 // Field next:Lio/undertow/server/HttpHandler;
      22: aload_0
      23: aload_2
      24: putfield      #1                  // Field accessLogReceiver:Lio/undertow/server/handlers/accesslog/AccessLogReceiver;
      27: aload_0
      28: aload         5
      30: putfield      #3                  // Field predicate:Lio/undertow/predicate/Predicate;
      33: aload_0
      34: aload_3
      35: invokestatic  #11                 // Method handleCommonNames:(Ljava/lang/String;)Ljava/lang/String;
      38: putfield      #12                 // Field formatString:Ljava/lang/String;
      41: aload_0
      42: aload         4
      44: iconst_1
      45: anewarray     #13                 // class io/undertow/attribute/ExchangeAttributeWrapper
      48: dup
      49: iconst_0
      50: new           #14                 // class io/undertow/attribute/SubstituteEmptyWrapper
      53: dup
      54: ldc           #15                 // String -
      56: invokespecial #16                 // Method io/undertow/attribute/SubstituteEmptyWrapper."<init>":(Ljava/lang/String;)V
      59: aastore
      60: invokestatic  #17                 // Method io/undertow/attribute/ExchangeAttributes.parser:(Ljava/lang/ClassLoader;[Lio/undertow/attribute/ExchangeAttributeWrapper;)Lio/undertow/attribute/ExchangeAttributeParser;
      63: aload_0
      64: getfield      #12                 // Field formatString:Ljava/lang/String;
      67: invokevirtual #18                 // Method io/undertow/attribute/ExchangeAttributeParser.parse:(Ljava/lang/String;)Lio/undertow/attribute/ExchangeAttribute;
      70: putfield      #2                  // Field tokens:Lio/undertow/attribute/ExchangeAttribute;
      73: return

  public io.undertow.server.handlers.accesslog.AccessLogHandler(io.undertow.server.HttpHandler, io.undertow.server.handlers.accesslog.AccessLogReceiver, java.lang.String, io.undertow.attribute.ExchangeAttribute);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #4                  // Method io/undertow/predicate/Predicates.truePredicate:()Lio/undertow/predicate/Predicate;
       9: invokespecial #19                 // Method "<init>":(Lio/undertow/server/HttpHandler;Lio/undertow/server/handlers/accesslog/AccessLogReceiver;Ljava/lang/String;Lio/undertow/attribute/ExchangeAttribute;Lio/undertow/predicate/Predicate;)V
      12: return

  public io.undertow.server.handlers.accesslog.AccessLogHandler(io.undertow.server.HttpHandler, io.undertow.server.handlers.accesslog.AccessLogReceiver, java.lang.String, io.undertow.attribute.ExchangeAttribute, io.undertow.predicate.Predicate);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class io/undertow/server/handlers/accesslog/AccessLogHandler$AccessLogCompletionListener
       8: dup
       9: aload_0
      10: aconst_null
      11: invokespecial #8                  // Method io/undertow/server/handlers/accesslog/AccessLogHandler$AccessLogCompletionListener."<init>":(Lio/undertow/server/handlers/accesslog/AccessLogHandler;Lio/undertow/server/handlers/accesslog/AccessLogHandler$1;)V
      14: putfield      #9                  // Field exchangeCompletionListener:Lio/undertow/server/ExchangeCompletionListener;
      17: aload_0
      18: aload_1
      19: putfield      #10                 // Field next:Lio/undertow/server/HttpHandler;
      22: aload_0
      23: aload_2
      24: putfield      #1                  // Field accessLogReceiver:Lio/undertow/server/handlers/accesslog/AccessLogReceiver;
      27: aload_0
      28: aload         5
      30: putfield      #3                  // Field predicate:Lio/undertow/predicate/Predicate;
      33: aload_0
      34: aload_3
      35: invokestatic  #11                 // Method handleCommonNames:(Ljava/lang/String;)Ljava/lang/String;
      38: putfield      #12                 // Field formatString:Ljava/lang/String;
      41: aload_0
      42: aload         4
      44: putfield      #2                  // Field tokens:Lio/undertow/attribute/ExchangeAttribute;
      47: return

  private static java.lang.String handleCommonNames(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #20                 // String common
       3: invokevirtual #21                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          12
       9: ldc           #22                 // String %h %l %u %t \"%r\" %s %b
      11: areturn
      12: aload_0
      13: ldc           #23                 // String combined
      15: invokevirtual #21                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      18: ifeq          24
      21: ldc           #24                 // String %h %l %u %t \"%r\" %s %b \"%{i,Referer}\" \"%{i,User-Agent}\"
      23: areturn
      24: aload_0
      25: areturn

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #9                  // Field exchangeCompletionListener:Lio/undertow/server/ExchangeCompletionListener;
       5: invokevirtual #25                 // Method io/undertow/server/HttpServerExchange.addExchangeCompleteListener:(Lio/undertow/server/ExchangeCompletionListener;)Lio/undertow/server/HttpServerExchange;
       8: pop
       9: aload_0
      10: getfield      #10                 // Field next:Lio/undertow/server/HttpHandler;
      13: aload_1
      14: invokeinterface #26,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
      19: return

  public java.lang.String toString();
    Code:
       0: new           #27                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #29                 // String AccessLogHandler{formatString=\'
       9: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #12                 // Field formatString:Ljava/lang/String;
      16: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: bipush        39
      21: invokevirtual #31                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: bipush        125
      26: invokevirtual #31                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      29: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: areturn

  static io.undertow.predicate.Predicate access$100(io.undertow.server.handlers.accesslog.AccessLogHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field predicate:Lio/undertow/predicate/Predicate;
       4: areturn

  static io.undertow.attribute.ExchangeAttribute access$200(io.undertow.server.handlers.accesslog.AccessLogHandler);
    Code:
       0: aload_0
       1: getfield      #2                  // Field tokens:Lio/undertow/attribute/ExchangeAttribute;
       4: areturn

  static io.undertow.server.handlers.accesslog.AccessLogReceiver access$300(io.undertow.server.handlers.accesslog.AccessLogHandler);
    Code:
       0: aload_0
       1: getfield      #1                  // Field accessLogReceiver:Lio/undertow/server/handlers/accesslog/AccessLogReceiver;
       4: areturn
}
