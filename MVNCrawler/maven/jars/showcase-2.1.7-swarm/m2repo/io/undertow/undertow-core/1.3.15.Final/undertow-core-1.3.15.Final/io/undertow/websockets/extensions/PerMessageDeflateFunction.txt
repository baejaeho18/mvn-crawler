Compiled from "PerMessageDeflateFunction.java"
public class io.undertow.websockets.extensions.PerMessageDeflateFunction implements io.undertow.websockets.extensions.ExtensionFunction {
  public static final byte[] TAIL;

  private final int deflaterLevel;

  private final boolean compressContextTakeover;

  private final boolean decompressContextTakeover;

  private final java.util.zip.Inflater decompress;

  private final java.util.zip.Deflater compress;

  public io.undertow.websockets.extensions.PerMessageDeflateFunction(int, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field deflaterLevel:I
       9: aload_0
      10: new           #3                  // class java/util/zip/Inflater
      13: dup
      14: iconst_1
      15: invokespecial #4                  // Method java/util/zip/Inflater."<init>":(Z)V
      18: putfield      #5                  // Field decompress:Ljava/util/zip/Inflater;
      21: aload_0
      22: new           #6                  // class java/util/zip/Deflater
      25: dup
      26: aload_0
      27: getfield      #2                  // Field deflaterLevel:I
      30: iconst_1
      31: invokespecial #7                  // Method java/util/zip/Deflater."<init>":(IZ)V
      34: putfield      #8                  // Field compress:Ljava/util/zip/Deflater;
      37: aload_0
      38: iload_2
      39: putfield      #9                  // Field compressContextTakeover:Z
      42: aload_0
      43: iload_3
      44: putfield      #10                 // Field decompressContextTakeover:Z
      47: return

  public int writeRsv(int);
    Code:
       0: iload_1
       1: iconst_4
       2: ior
       3: ireturn

  public boolean hasExtensionOpCode();
    Code:
       0: iconst_0
       1: ireturn

  public synchronized io.undertow.connector.PooledByteBuffer transformForWrite(io.undertow.connector.PooledByteBuffer, io.undertow.websockets.core.WebSocketChannel) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
       6: astore_3
       7: aload_3
       8: invokevirtual #13                 // Method java/nio/ByteBuffer.hasArray:()Z
      11: ifeq          41
      14: aload_0
      15: getfield      #8                  // Field compress:Ljava/util/zip/Deflater;
      18: aload_3
      19: invokevirtual #14                 // Method java/nio/ByteBuffer.array:()[B
      22: aload_3
      23: invokevirtual #15                 // Method java/nio/ByteBuffer.arrayOffset:()I
      26: aload_3
      27: invokevirtual #16                 // Method java/nio/ByteBuffer.position:()I
      30: iadd
      31: aload_3
      32: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
      35: invokevirtual #18                 // Method java/util/zip/Deflater.setInput:([BII)V
      38: goto          52
      41: aload_0
      42: getfield      #8                  // Field compress:Ljava/util/zip/Deflater;
      45: aload_3
      46: invokestatic  #19                 // Method org/xnio/Buffers.take:(Ljava/nio/ByteBuffer;)[B
      49: invokevirtual #20                 // Method java/util/zip/Deflater.setInput:([B)V
      52: aload_0
      53: aload_2
      54: iconst_0
      55: invokespecial #21                 // Method allocateBufferWithArray:(Lio/undertow/websockets/core/WebSocketChannel;I)Lio/undertow/connector/PooledByteBuffer;
      58: astore        4
      60: aload         4
      62: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      67: astore        5
      69: aload_0
      70: getfield      #8                  // Field compress:Ljava/util/zip/Deflater;
      73: invokevirtual #22                 // Method java/util/zip/Deflater.needsInput:()Z
      76: ifne          170
      79: aload_0
      80: getfield      #8                  // Field compress:Ljava/util/zip/Deflater;
      83: invokevirtual #23                 // Method java/util/zip/Deflater.finished:()Z
      86: ifne          170
      89: aload         5
      91: invokevirtual #24                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      94: ifne          122
      97: aload_0
      98: aload         4
     100: aload_2
     101: aload         5
     103: invokevirtual #25                 // Method java/nio/ByteBuffer.capacity:()I
     106: iconst_2
     107: imul
     108: invokespecial #26                 // Method largerBuffer:(Lio/undertow/connector/PooledByteBuffer;Lio/undertow/websockets/core/WebSocketChannel;I)Lio/undertow/connector/PooledByteBuffer;
     111: astore        4
     113: aload         4
     115: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     120: astore        5
     122: aload_0
     123: getfield      #8                  // Field compress:Ljava/util/zip/Deflater;
     126: aload         5
     128: invokevirtual #14                 // Method java/nio/ByteBuffer.array:()[B
     131: aload         5
     133: invokevirtual #15                 // Method java/nio/ByteBuffer.arrayOffset:()I
     136: aload         5
     138: invokevirtual #16                 // Method java/nio/ByteBuffer.position:()I
     141: iadd
     142: aload         5
     144: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
     147: iconst_2
     148: invokevirtual #27                 // Method java/util/zip/Deflater.deflate:([BIII)I
     151: istore        6
     153: aload         5
     155: aload         5
     157: invokevirtual #16                 // Method java/nio/ByteBuffer.position:()I
     160: iload         6
     162: iadd
     163: invokevirtual #28                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     166: pop
     167: goto          69
     170: aload_1
     171: invokeinterface #29,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     176: goto          190
     179: astore        7
     181: aload_1
     182: invokeinterface #29,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     187: aload         7
     189: athrow
     190: aload         5
     192: invokevirtual #24                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     195: ifne          223
     198: aload_0
     199: aload         4
     201: aload_2
     202: aload         5
     204: invokevirtual #25                 // Method java/nio/ByteBuffer.capacity:()I
     207: iconst_1
     208: iadd
     209: invokespecial #26                 // Method largerBuffer:(Lio/undertow/connector/PooledByteBuffer;Lio/undertow/websockets/core/WebSocketChannel;I)Lio/undertow/connector/PooledByteBuffer;
     212: astore        4
     214: aload         4
     216: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     221: astore        5
     223: aload         5
     225: iconst_0
     226: invokevirtual #30                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     229: pop
     230: aload         5
     232: invokevirtual #31                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     235: pop
     236: aload_0
     237: getfield      #9                  // Field compressContextTakeover:Z
     240: ifne          250
     243: aload_0
     244: getfield      #8                  // Field compress:Ljava/util/zip/Deflater;
     247: invokevirtual #32                 // Method java/util/zip/Deflater.reset:()V
     250: aload         4
     252: areturn
    Exception table:
       from    to  target type
          69   170   179   any
         179   181   179   any

  private io.undertow.connector.PooledByteBuffer largerBuffer(io.undertow.connector.PooledByteBuffer, io.undertow.websockets.core.WebSocketChannel, int);
    Code:
       0: aload_1
       1: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
       6: astore        4
       8: aload         4
      10: invokevirtual #31                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      13: pop
      14: aload_0
      15: aload_2
      16: iload_3
      17: invokespecial #21                 // Method allocateBufferWithArray:(Lio/undertow/websockets/core/WebSocketChannel;I)Lio/undertow/connector/PooledByteBuffer;
      20: astore        5
      22: aload         5
      24: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      29: aload         4
      31: invokevirtual #33                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      34: pop
      35: aload_1
      36: invokeinterface #29,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      41: aload         5
      43: areturn

  private io.undertow.connector.PooledByteBuffer allocateBufferWithArray(io.undertow.websockets.core.WebSocketChannel, int);
    Code:
       0: iload_2
       1: ifle          16
       4: new           #34                 // class io/undertow/util/ImmediatePooledByteBuffer
       7: dup
       8: iload_2
       9: invokestatic  #35                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      12: invokespecial #36                 // Method io/undertow/util/ImmediatePooledByteBuffer."<init>":(Ljava/nio/ByteBuffer;)V
      15: areturn
      16: aload_1
      17: invokevirtual #37                 // Method io/undertow/websockets/core/WebSocketChannel.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
      20: invokeinterface #38,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      25: astore_3
      26: aload_3
      27: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      32: invokevirtual #13                 // Method java/nio/ByteBuffer.hasArray:()Z
      35: ifeq          40
      38: aload_3
      39: areturn
      40: aload_3
      41: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      46: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
      49: istore        4
      51: aload_3
      52: invokeinterface #29,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      57: aload_0
      58: aload_1
      59: iload         4
      61: invokespecial #21                 // Method allocateBufferWithArray:(Lio/undertow/websockets/core/WebSocketChannel;I)Lio/undertow/connector/PooledByteBuffer;
      64: areturn

  public synchronized io.undertow.connector.PooledByteBuffer transformForRead(io.undertow.connector.PooledByteBuffer, io.undertow.websockets.core.WebSocketChannel, boolean) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
       6: astore        4
       8: aload         4
      10: invokevirtual #13                 // Method java/nio/ByteBuffer.hasArray:()Z
      13: ifeq          47
      16: aload_0
      17: getfield      #5                  // Field decompress:Ljava/util/zip/Inflater;
      20: aload         4
      22: invokevirtual #14                 // Method java/nio/ByteBuffer.array:()[B
      25: aload         4
      27: invokevirtual #15                 // Method java/nio/ByteBuffer.arrayOffset:()I
      30: aload         4
      32: invokevirtual #16                 // Method java/nio/ByteBuffer.position:()I
      35: iadd
      36: aload         4
      38: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
      41: invokevirtual #39                 // Method java/util/zip/Inflater.setInput:([BII)V
      44: goto          59
      47: aload_0
      48: getfield      #5                  // Field decompress:Ljava/util/zip/Inflater;
      51: aload         4
      53: invokestatic  #19                 // Method org/xnio/Buffers.take:(Ljava/nio/ByteBuffer;)[B
      56: invokevirtual #40                 // Method java/util/zip/Inflater.setInput:([B)V
      59: aload_0
      60: aload_2
      61: iconst_0
      62: invokespecial #21                 // Method allocateBufferWithArray:(Lio/undertow/websockets/core/WebSocketChannel;I)Lio/undertow/connector/PooledByteBuffer;
      65: astore        5
      67: aload_0
      68: aload_2
      69: aload         5
      71: invokespecial #41                 // Method decompress:(Lio/undertow/websockets/core/WebSocketChannel;Lio/undertow/connector/PooledByteBuffer;)Lio/undertow/connector/PooledByteBuffer;
      74: astore        5
      76: aload_1
      77: invokeinterface #29,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      82: goto          96
      85: astore        6
      87: aload_1
      88: invokeinterface #29,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      93: aload         6
      95: athrow
      96: iload_3
      97: ifeq          119
     100: aload_0
     101: getfield      #5                  // Field decompress:Ljava/util/zip/Inflater;
     104: getstatic     #42                 // Field TAIL:[B
     107: invokevirtual #40                 // Method java/util/zip/Inflater.setInput:([B)V
     110: aload_0
     111: aload_2
     112: aload         5
     114: invokespecial #41                 // Method decompress:(Lio/undertow/websockets/core/WebSocketChannel;Lio/undertow/connector/PooledByteBuffer;)Lio/undertow/connector/PooledByteBuffer;
     117: astore        5
     119: aload         5
     121: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     126: invokevirtual #31                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     129: pop
     130: iload_3
     131: ifeq          148
     134: aload_0
     135: getfield      #10                 // Field decompressContextTakeover:Z
     138: ifne          148
     141: aload_0
     142: getfield      #5                  // Field decompress:Ljava/util/zip/Inflater;
     145: invokevirtual #43                 // Method java/util/zip/Inflater.reset:()V
     148: aload         5
     150: areturn
    Exception table:
       from    to  target type
          67    76    85   any
          85    87    85   any

  private io.undertow.connector.PooledByteBuffer decompress(io.undertow.websockets.core.WebSocketChannel, io.undertow.connector.PooledByteBuffer) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
       6: astore_3
       7: aload_0
       8: getfield      #5                  // Field decompress:Ljava/util/zip/Inflater;
      11: invokevirtual #44                 // Method java/util/zip/Inflater.needsInput:()Z
      14: ifne          126
      17: aload_0
      18: getfield      #5                  // Field decompress:Ljava/util/zip/Inflater;
      21: invokevirtual #45                 // Method java/util/zip/Inflater.finished:()Z
      24: ifne          126
      27: aload_3
      28: invokevirtual #24                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      31: ifne          54
      34: aload_0
      35: aload_2
      36: aload_1
      37: aload_3
      38: invokevirtual #25                 // Method java/nio/ByteBuffer.capacity:()I
      41: iconst_2
      42: imul
      43: invokespecial #26                 // Method largerBuffer:(Lio/undertow/connector/PooledByteBuffer;Lio/undertow/websockets/core/WebSocketChannel;I)Lio/undertow/connector/PooledByteBuffer;
      46: astore_2
      47: aload_2
      48: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      53: astore_3
      54: aload_0
      55: getfield      #5                  // Field decompress:Ljava/util/zip/Inflater;
      58: aload_3
      59: invokevirtual #14                 // Method java/nio/ByteBuffer.array:()[B
      62: aload_3
      63: invokevirtual #15                 // Method java/nio/ByteBuffer.arrayOffset:()I
      66: aload_3
      67: invokevirtual #16                 // Method java/nio/ByteBuffer.position:()I
      70: iadd
      71: aload_3
      72: invokevirtual #17                 // Method java/nio/ByteBuffer.remaining:()I
      75: invokevirtual #46                 // Method java/util/zip/Inflater.inflate:([BII)I
      78: istore        4
      80: goto          111
      83: astore        5
      85: getstatic     #48                 // Field io/undertow/websockets/core/WebSocketLogger.EXTENSION_LOGGER:Lio/undertow/websockets/core/WebSocketLogger;
      88: aload         5
      90: invokevirtual #49                 // Method java/util/zip/DataFormatException.getMessage:()Ljava/lang/String;
      93: aload         5
      95: invokeinterface #50,  3           // InterfaceMethod io/undertow/websockets/core/WebSocketLogger.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     100: getstatic     #51                 // Field io/undertow/websockets/core/WebSocketMessages.MESSAGES:Lio/undertow/websockets/core/WebSocketMessages;
     103: aload         5
     105: invokeinterface #52,  2           // InterfaceMethod io/undertow/websockets/core/WebSocketMessages.badCompressedPayload:(Ljava/util/zip/DataFormatException;)Ljava/io/IOException;
     110: athrow
     111: aload_3
     112: aload_3
     113: invokevirtual #16                 // Method java/nio/ByteBuffer.position:()I
     116: iload         4
     118: iadd
     119: invokevirtual #28                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     122: pop
     123: goto          7
     126: aload_2
     127: areturn
    Exception table:
       from    to  target type
          54    80    83   Class java/util/zip/DataFormatException

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #8                  // Field compress:Ljava/util/zip/Deflater;
       4: invokevirtual #53                 // Method java/util/zip/Deflater.end:()V
       7: aload_0
       8: getfield      #5                  // Field decompress:Ljava/util/zip/Inflater;
      11: invokevirtual #54                 // Method java/util/zip/Inflater.end:()V
      14: return

  static {};
    Code:
       0: iconst_4
       1: newarray       byte
       3: dup
       4: iconst_0
       5: iconst_0
       6: bastore
       7: dup
       8: iconst_1
       9: iconst_0
      10: bastore
      11: dup
      12: iconst_2
      13: iconst_m1
      14: bastore
      15: dup
      16: iconst_3
      17: iconst_m1
      18: bastore
      19: putstatic     #42                 // Field TAIL:[B
      22: return
}
