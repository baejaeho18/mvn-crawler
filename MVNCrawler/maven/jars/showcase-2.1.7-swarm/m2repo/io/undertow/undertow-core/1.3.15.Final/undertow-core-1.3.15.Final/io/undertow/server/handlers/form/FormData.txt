Compiled from "FormData.java"
public final class io.undertow.server.handlers.form.FormData implements java.lang.Iterable<java.lang.String> {
  private final java.util.Map<java.lang.String, java.util.Deque<io.undertow.server.handlers.form.FormData$FormValue>> values;

  private final int maxValues;

  private int valueCount;

  public io.undertow.server.handlers.form.FormData(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #4                  // Field values:Ljava/util/Map;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field valueCount:I
      20: aload_0
      21: iload_1
      22: putfield      #6                  // Field maxValues:I
      25: return

  public java.util.Iterator<java.lang.String> iterator();
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:Ljava/util/Map;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: areturn

  public io.undertow.server.handlers.form.FormData$FormValue getFirst(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class java/util/Deque
      13: astore_2
      14: aload_2
      15: ifnonnull     22
      18: aconst_null
      19: goto          31
      22: aload_2
      23: invokeinterface #11,  1           // InterfaceMethod java/util/Deque.peekFirst:()Ljava/lang/Object;
      28: checkcast     #12                 // class io/undertow/server/handlers/form/FormData$FormValue
      31: areturn

  public io.undertow.server.handlers.form.FormData$FormValue getLast(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class java/util/Deque
      13: astore_2
      14: aload_2
      15: ifnonnull     22
      18: aconst_null
      19: goto          31
      22: aload_2
      23: invokeinterface #13,  1           // InterfaceMethod java/util/Deque.peekLast:()Ljava/lang/Object;
      28: checkcast     #12                 // class io/undertow/server/handlers/form/FormData$FormValue
      31: areturn

  public java.util.Deque<io.undertow.server.handlers.form.FormData$FormValue> get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class java/util/Deque
      13: areturn

  public void add(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #14                 // Method add:(Ljava/lang/String;Ljava/lang/String;Lio/undertow/util/HeaderMap;)V
       7: return

  public void add(java.lang.String, java.lang.String, io.undertow.util.HeaderMap);
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class java/util/Deque
      13: astore        4
      15: aload         4
      17: ifnonnull     42
      20: aload_0
      21: getfield      #4                  // Field values:Ljava/util/Map;
      24: aload_1
      25: new           #15                 // class java/util/ArrayDeque
      28: dup
      29: iconst_1
      30: invokespecial #16                 // Method java/util/ArrayDeque."<init>":(I)V
      33: dup
      34: astore        4
      36: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: aload         4
      44: new           #18                 // class io/undertow/server/handlers/form/FormData$FormValueImpl
      47: dup
      48: aload_2
      49: aload_3
      50: invokespecial #19                 // Method io/undertow/server/handlers/form/FormData$FormValueImpl."<init>":(Ljava/lang/String;Lio/undertow/util/HeaderMap;)V
      53: invokeinterface #20,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      58: pop
      59: aload_0
      60: dup
      61: getfield      #5                  // Field valueCount:I
      64: iconst_1
      65: iadd
      66: dup_x1
      67: putfield      #5                  // Field valueCount:I
      70: aload_0
      71: getfield      #6                  // Field maxValues:I
      74: if_icmple     90
      77: getstatic     #21                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      80: aload_0
      81: getfield      #6                  // Field maxValues:I
      84: invokeinterface #22,  2           // InterfaceMethod io/undertow/UndertowMessages.tooManyParameters:(I)Ljava/lang/IllegalStateException;
      89: athrow
      90: return

  public void add(java.lang.String, java.nio.file.Path, java.lang.String, io.undertow.util.HeaderMap);
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class java/util/Deque
      13: astore        5
      15: aload         5
      17: ifnonnull     42
      20: aload_0
      21: getfield      #4                  // Field values:Ljava/util/Map;
      24: aload_1
      25: new           #15                 // class java/util/ArrayDeque
      28: dup
      29: iconst_1
      30: invokespecial #16                 // Method java/util/ArrayDeque."<init>":(I)V
      33: dup
      34: astore        5
      36: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: aload         5
      44: new           #18                 // class io/undertow/server/handlers/form/FormData$FormValueImpl
      47: dup
      48: aload_2
      49: aload_3
      50: aload         4
      52: invokespecial #23                 // Method io/undertow/server/handlers/form/FormData$FormValueImpl."<init>":(Ljava/nio/file/Path;Ljava/lang/String;Lio/undertow/util/HeaderMap;)V
      55: invokeinterface #20,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      60: pop
      61: aload         5
      63: invokeinterface #24,  1           // InterfaceMethod java/util/Deque.size:()I
      68: aload_0
      69: getfield      #6                  // Field maxValues:I
      72: if_icmple     88
      75: getstatic     #21                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      78: aload_0
      79: getfield      #6                  // Field maxValues:I
      82: invokeinterface #22,  2           // InterfaceMethod io/undertow/UndertowMessages.tooManyParameters:(I)Ljava/lang/IllegalStateException;
      87: athrow
      88: aload_0
      89: dup
      90: getfield      #5                  // Field valueCount:I
      93: iconst_1
      94: iadd
      95: dup_x1
      96: putfield      #5                  // Field valueCount:I
      99: aload_0
     100: getfield      #6                  // Field maxValues:I
     103: if_icmple     119
     106: getstatic     #21                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     109: aload_0
     110: getfield      #6                  // Field maxValues:I
     113: invokeinterface #22,  2           // InterfaceMethod io/undertow/UndertowMessages.tooManyParameters:(I)Ljava/lang/IllegalStateException;
     118: athrow
     119: return

  public void put(java.lang.String, java.lang.String, io.undertow.util.HeaderMap);
    Code:
       0: new           #15                 // class java/util/ArrayDeque
       3: dup
       4: iconst_1
       5: invokespecial #16                 // Method java/util/ArrayDeque."<init>":(I)V
       8: astore        4
      10: aload_0
      11: getfield      #4                  // Field values:Ljava/util/Map;
      14: aload_1
      15: aload         4
      17: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #10                 // class java/util/Deque
      25: astore        5
      27: aload         5
      29: ifnull        48
      32: aload_0
      33: dup
      34: getfield      #5                  // Field valueCount:I
      37: aload         5
      39: invokeinterface #24,  1           // InterfaceMethod java/util/Deque.size:()I
      44: isub
      45: putfield      #5                  // Field valueCount:I
      48: aload         4
      50: new           #18                 // class io/undertow/server/handlers/form/FormData$FormValueImpl
      53: dup
      54: aload_2
      55: aload_3
      56: invokespecial #19                 // Method io/undertow/server/handlers/form/FormData$FormValueImpl."<init>":(Ljava/lang/String;Lio/undertow/util/HeaderMap;)V
      59: invokeinterface #20,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      64: pop
      65: aload_0
      66: dup
      67: getfield      #5                  // Field valueCount:I
      70: iconst_1
      71: iadd
      72: dup_x1
      73: putfield      #5                  // Field valueCount:I
      76: aload_0
      77: getfield      #6                  // Field maxValues:I
      80: if_icmple     96
      83: getstatic     #21                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      86: aload_0
      87: getfield      #6                  // Field maxValues:I
      90: invokeinterface #22,  2           // InterfaceMethod io/undertow/UndertowMessages.tooManyParameters:(I)Ljava/lang/IllegalStateException;
      95: athrow
      96: return

  public java.util.Deque<io.undertow.server.handlers.form.FormData$FormValue> remove(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class java/util/Deque
      13: astore_2
      14: aload_2
      15: ifnull        33
      18: aload_0
      19: dup
      20: getfield      #5                  // Field valueCount:I
      23: aload_2
      24: invokeinterface #24,  1           // InterfaceMethod java/util/Deque.size:()I
      29: isub
      30: putfield      #5                  // Field valueCount:I
      33: aload_2
      34: areturn

  public boolean contains(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class java/util/Deque
      13: astore_2
      14: aload_2
      15: ifnull        31
      18: aload_2
      19: invokeinterface #26,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      24: ifne          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #28                 // class io/undertow/server/handlers/form/FormData
      28: astore_2
      29: aload_0
      30: getfield      #4                  // Field values:Ljava/util/Map;
      33: ifnull        55
      36: aload_0
      37: getfield      #4                  // Field values:Ljava/util/Map;
      40: aload_2
      41: getfield      #4                  // Field values:Ljava/util/Map;
      44: invokeinterface #29,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      49: ifne          64
      52: goto          62
      55: aload_2
      56: getfield      #4                  // Field values:Ljava/util/Map;
      59: ifnull        64
      62: iconst_0
      63: ireturn
      64: iconst_1
      65: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field values:Ljava/util/Map;
       4: ifnull        19
       7: aload_0
       8: getfield      #4                  // Field values:Ljava/util/Map;
      11: invokeinterface #30,  1           // InterfaceMethod java/util/Map.hashCode:()I
      16: goto          20
      19: iconst_0
      20: ireturn

  public java.lang.String toString();
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #33                 // String FormData{values=
       9: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #4                  // Field values:Ljava/util/Map;
      16: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: bipush        125
      21: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn
}
