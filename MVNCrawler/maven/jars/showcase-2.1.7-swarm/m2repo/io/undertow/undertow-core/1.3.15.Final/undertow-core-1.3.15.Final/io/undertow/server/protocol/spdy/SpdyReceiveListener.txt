Compiled from "SpdyReceiveListener.java"
public class io.undertow.server.protocol.spdy.SpdyReceiveListener implements org.xnio.ChannelListener<io.undertow.protocols.spdy.SpdyChannel> {
  static final io.undertow.util.HttpString METHOD;

  static final io.undertow.util.HttpString PATH;

  static final io.undertow.util.HttpString SCHEME;

  static final io.undertow.util.HttpString VERSION;

  static final io.undertow.util.HttpString HOST;

  private final io.undertow.server.HttpHandler rootHandler;

  private final long maxEntitySize;

  private final org.xnio.OptionMap undertowOptions;

  private final java.lang.String encoding;

  private final boolean decode;

  private final java.lang.StringBuilder decodeBuffer;

  private final boolean allowEncodingSlash;

  private final int bufferSize;

  private final io.undertow.server.ConnectorStatisticsImpl connectorStatistics;

  public io.undertow.server.protocol.spdy.SpdyReceiveListener(io.undertow.server.HttpHandler, org.xnio.OptionMap, int, io.undertow.server.ConnectorStatisticsImpl);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/StringBuilder
       8: dup
       9: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      12: putfield      #4                  // Field decodeBuffer:Ljava/lang/StringBuilder;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field rootHandler:Lio/undertow/server/HttpHandler;
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field undertowOptions:Lorg/xnio/OptionMap;
      25: aload_0
      26: iload_3
      27: putfield      #7                  // Field bufferSize:I
      30: aload_0
      31: aload         4
      33: putfield      #8                  // Field connectorStatistics:Lio/undertow/server/ConnectorStatisticsImpl;
      36: aload_0
      37: aload_2
      38: getstatic     #9                  // Field io/undertow/UndertowOptions.MAX_ENTITY_SIZE:Lorg/xnio/Option;
      41: ldc2_w        #11                 // long -1l
      44: invokevirtual #13                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;J)J
      47: putfield      #14                 // Field maxEntitySize:J
      50: aload_0
      51: aload_2
      52: getstatic     #15                 // Field io/undertow/UndertowOptions.ALLOW_ENCODED_SLASH:Lorg/xnio/Option;
      55: iconst_0
      56: invokevirtual #16                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      59: putfield      #17                 // Field allowEncodingSlash:Z
      62: aload_0
      63: aload_2
      64: getstatic     #18                 // Field io/undertow/UndertowOptions.DECODE_URL:Lorg/xnio/Option;
      67: iconst_1
      68: invokevirtual #16                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      71: putfield      #19                 // Field decode:Z
      74: aload_2
      75: getstatic     #18                 // Field io/undertow/UndertowOptions.DECODE_URL:Lorg/xnio/Option;
      78: iconst_1
      79: invokevirtual #16                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      82: ifeq          108
      85: aload_0
      86: aload_2
      87: getstatic     #20                 // Field io/undertow/UndertowOptions.URL_CHARSET:Lorg/xnio/Option;
      90: getstatic     #21                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      93: invokevirtual #22                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
      96: invokevirtual #23                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
      99: checkcast     #24                 // class java/lang/String
     102: putfield      #25                 // Field encoding:Ljava/lang/String;
     105: goto          113
     108: aload_0
     109: aconst_null
     110: putfield      #25                 // Field encoding:Ljava/lang/String;
     113: return

  public void handleEvent(io.undertow.protocols.spdy.SpdyChannel);
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method io/undertow/protocols/spdy/SpdyChannel.receive:()Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
       4: checkcast     #27                 // class io/undertow/protocols/spdy/SpdyStreamSourceChannel
       7: astore_2
       8: aload_2
       9: ifnonnull     13
      12: return
      13: aload_2
      14: instanceof    #28                 // class io/undertow/protocols/spdy/SpdyPingStreamSourceChannel
      17: ifeq          31
      20: aload_0
      21: aload_2
      22: checkcast     #28                 // class io/undertow/protocols/spdy/SpdyPingStreamSourceChannel
      25: invokespecial #29                 // Method handlePing:(Lio/undertow/protocols/spdy/SpdyPingStreamSourceChannel;)V
      28: goto          386
      31: aload_2
      32: instanceof    #30                 // class io/undertow/protocols/spdy/SpdySynStreamStreamSourceChannel
      35: ifeq          386
      38: aload_2
      39: checkcast     #30                 // class io/undertow/protocols/spdy/SpdySynStreamStreamSourceChannel
      42: astore_3
      43: new           #31                 // class io/undertow/server/protocol/spdy/SpdyServerConnection
      46: dup
      47: aload_0
      48: getfield      #5                  // Field rootHandler:Lio/undertow/server/HttpHandler;
      51: aload_1
      52: aload_3
      53: aload_0
      54: getfield      #6                  // Field undertowOptions:Lorg/xnio/OptionMap;
      57: aload_0
      58: getfield      #7                  // Field bufferSize:I
      61: invokespecial #32                 // Method io/undertow/server/protocol/spdy/SpdyServerConnection."<init>":(Lio/undertow/server/HttpHandler;Lio/undertow/protocols/spdy/SpdyChannel;Lio/undertow/protocols/spdy/SpdySynStreamStreamSourceChannel;Lorg/xnio/OptionMap;I)V
      64: astore        4
      66: new           #33                 // class io/undertow/server/HttpServerExchange
      69: dup
      70: aload         4
      72: aload_3
      73: invokevirtual #34                 // Method io/undertow/protocols/spdy/SpdySynStreamStreamSourceChannel.getHeaders:()Lio/undertow/util/HeaderMap;
      76: aload_3
      77: invokevirtual #35                 // Method io/undertow/protocols/spdy/SpdySynStreamStreamSourceChannel.getResponseChannel:()Lio/undertow/protocols/spdy/SpdySynReplyStreamSinkChannel;
      80: invokevirtual #36                 // Method io/undertow/protocols/spdy/SpdySynReplyStreamSinkChannel.getHeaders:()Lio/undertow/util/HeaderMap;
      83: aload_0
      84: getfield      #14                 // Field maxEntitySize:J
      87: invokespecial #37                 // Method io/undertow/server/HttpServerExchange."<init>":(Lio/undertow/server/ServerConnection;Lio/undertow/util/HeaderMap;Lio/undertow/util/HeaderMap;J)V
      90: astore        5
      92: aload         4
      94: aload         5
      96: invokevirtual #38                 // Method io/undertow/server/protocol/spdy/SpdyServerConnection.setExchange:(Lio/undertow/server/HttpServerExchange;)V
      99: aload_3
     100: aload_0
     101: getfield      #14                 // Field maxEntitySize:J
     104: invokevirtual #39                 // Method io/undertow/protocols/spdy/SpdySynStreamStreamSourceChannel.setMaxStreamSize:(J)V
     107: aload         5
     109: aload         5
     111: invokevirtual #40                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     114: getstatic     #41                 // Field SCHEME:Lio/undertow/util/HttpString;
     117: invokevirtual #42                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     120: invokevirtual #43                 // Method io/undertow/server/HttpServerExchange.setRequestScheme:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
     123: pop
     124: aload         5
     126: invokevirtual #40                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     129: getstatic     #41                 // Field SCHEME:Lio/undertow/util/HttpString;
     132: invokevirtual #44                 // Method io/undertow/util/HeaderMap.remove:(Lio/undertow/util/HttpString;)Ljava/util/Collection;
     135: pop
     136: aload         5
     138: new           #45                 // class io/undertow/util/HttpString
     141: dup
     142: aload         5
     144: invokevirtual #40                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     147: getstatic     #46                 // Field VERSION:Lio/undertow/util/HttpString;
     150: invokevirtual #42                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     153: invokespecial #47                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
     156: invokevirtual #48                 // Method io/undertow/server/HttpServerExchange.setProtocol:(Lio/undertow/util/HttpString;)Lio/undertow/server/HttpServerExchange;
     159: pop
     160: aload         5
     162: invokevirtual #40                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     165: getstatic     #46                 // Field VERSION:Lio/undertow/util/HttpString;
     168: invokevirtual #44                 // Method io/undertow/util/HeaderMap.remove:(Lio/undertow/util/HttpString;)Ljava/util/Collection;
     171: pop
     172: aload         5
     174: new           #45                 // class io/undertow/util/HttpString
     177: dup
     178: aload         5
     180: invokevirtual #40                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     183: getstatic     #49                 // Field METHOD:Lio/undertow/util/HttpString;
     186: invokevirtual #42                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     189: invokespecial #47                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
     192: invokevirtual #50                 // Method io/undertow/server/HttpServerExchange.setRequestMethod:(Lio/undertow/util/HttpString;)Lio/undertow/server/HttpServerExchange;
     195: pop
     196: aload         5
     198: invokevirtual #40                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     201: getstatic     #49                 // Field METHOD:Lio/undertow/util/HttpString;
     204: invokevirtual #44                 // Method io/undertow/util/HeaderMap.remove:(Lio/undertow/util/HttpString;)Ljava/util/Collection;
     207: pop
     208: aload         5
     210: invokevirtual #40                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     213: getstatic     #51                 // Field io/undertow/util/Headers.HOST:Lio/undertow/util/HttpString;
     216: aload         5
     218: invokevirtual #40                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     221: getstatic     #52                 // Field HOST:Lio/undertow/util/HttpString;
     224: invokevirtual #42                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     227: invokevirtual #53                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     230: pop
     231: aload         5
     233: invokevirtual #40                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     236: getstatic     #52                 // Field HOST:Lio/undertow/util/HttpString;
     239: invokevirtual #44                 // Method io/undertow/util/HeaderMap.remove:(Lio/undertow/util/HttpString;)Ljava/util/Collection;
     242: pop
     243: aload         5
     245: invokevirtual #40                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     248: getstatic     #54                 // Field PATH:Lio/undertow/util/HttpString;
     251: invokevirtual #42                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     254: astore        6
     256: aload         5
     258: invokevirtual #40                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     261: getstatic     #54                 // Field PATH:Lio/undertow/util/HttpString;
     264: invokevirtual #44                 // Method io/undertow/util/HeaderMap.remove:(Lio/undertow/util/HttpString;)Ljava/util/Collection;
     267: pop
     268: aload         5
     270: aload         6
     272: aload_0
     273: getfield      #25                 // Field encoding:Ljava/lang/String;
     276: aload_0
     277: getfield      #19                 // Field decode:Z
     280: aload_0
     281: getfield      #17                 // Field allowEncodingSlash:Z
     284: aload_0
     285: getfield      #4                  // Field decodeBuffer:Ljava/lang/StringBuilder;
     288: invokestatic  #55                 // Method io/undertow/server/Connectors.setExchangeRequestPath:(Lio/undertow/server/HttpServerExchange;Ljava/lang/String;Ljava/lang/String;ZZLjava/lang/StringBuilder;)V
     291: aload_1
     292: invokevirtual #56                 // Method io/undertow/protocols/spdy/SpdyChannel.getSslSession:()Ljavax/net/ssl/SSLSession;
     295: astore        7
     297: aload         7
     299: ifnull        315
     302: aload         4
     304: new           #57                 // class io/undertow/server/protocol/spdy/SpdySslSessionInfo
     307: dup
     308: aload_1
     309: invokespecial #58                 // Method io/undertow/server/protocol/spdy/SpdySslSessionInfo."<init>":(Lio/undertow/protocols/spdy/SpdyChannel;)V
     312: invokevirtual #59                 // Method io/undertow/server/protocol/spdy/SpdyServerConnection.setSslSessionInfo:(Lio/undertow/server/SSLSessionInfo;)V
     315: aload_3
     316: invokevirtual #35                 // Method io/undertow/protocols/spdy/SpdySynStreamStreamSourceChannel.getResponseChannel:()Lio/undertow/protocols/spdy/SpdySynReplyStreamSinkChannel;
     319: new           #60                 // class io/undertow/server/protocol/spdy/SpdyReceiveListener$1
     322: dup
     323: aload_0
     324: aload         5
     326: invokespecial #61                 // Method io/undertow/server/protocol/spdy/SpdyReceiveListener$1."<init>":(Lio/undertow/server/protocol/spdy/SpdyReceiveListener;Lio/undertow/server/HttpServerExchange;)V
     329: invokevirtual #62                 // Method io/undertow/protocols/spdy/SpdySynReplyStreamSinkChannel.setCompletionListener:(Lorg/xnio/ChannelListener;)V
     332: aload_3
     333: invokevirtual #63                 // Method io/undertow/protocols/spdy/SpdySynStreamStreamSourceChannel.isOpen:()Z
     336: ifne          347
     339: aload         5
     341: invokestatic  #64                 // Method io/undertow/server/Connectors.terminateRequest:(Lio/undertow/server/HttpServerExchange;)V
     344: goto          361
     347: aload_3
     348: new           #65                 // class io/undertow/server/protocol/spdy/SpdyReceiveListener$2
     351: dup
     352: aload_0
     353: aload         5
     355: invokespecial #66                 // Method io/undertow/server/protocol/spdy/SpdyReceiveListener$2."<init>":(Lio/undertow/server/protocol/spdy/SpdyReceiveListener;Lio/undertow/server/HttpServerExchange;)V
     358: invokevirtual #67                 // Method io/undertow/protocols/spdy/SpdySynStreamStreamSourceChannel.setCompletionListener:(Lorg/xnio/ChannelListener;)V
     361: aload_0
     362: getfield      #8                  // Field connectorStatistics:Lio/undertow/server/ConnectorStatisticsImpl;
     365: ifnull        377
     368: aload_0
     369: getfield      #8                  // Field connectorStatistics:Lio/undertow/server/ConnectorStatisticsImpl;
     372: aload         5
     374: invokevirtual #68                 // Method io/undertow/server/ConnectorStatisticsImpl.setup:(Lio/undertow/server/HttpServerExchange;)V
     377: aload_0
     378: getfield      #5                  // Field rootHandler:Lio/undertow/server/HttpHandler;
     381: aload         5
     383: invokestatic  #69                 // Method io/undertow/server/Connectors.executeRootHandler:(Lio/undertow/server/HttpHandler;Lio/undertow/server/HttpServerExchange;)V
     386: goto          403
     389: astore_2
     390: getstatic     #71                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     393: aload_2
     394: invokeinterface #72,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
     399: aload_1
     400: invokestatic  #73                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     403: return
    Exception table:
       from    to  target type
           0    12   389   Class java/io/IOException
          13   386   389   Class java/io/IOException

  private void handlePing(io.undertow.protocols.spdy.SpdyPingStreamSourceChannel);
    Code:
       0: aload_1
       1: invokevirtual #74                 // Method io/undertow/protocols/spdy/SpdyPingStreamSourceChannel.getId:()I
       4: istore_2
       5: iload_2
       6: iconst_2
       7: irem
       8: iconst_1
       9: if_icmpne     20
      12: aload_1
      13: invokevirtual #75                 // Method io/undertow/protocols/spdy/SpdyPingStreamSourceChannel.getSpdyChannel:()Lio/undertow/protocols/spdy/SpdyChannel;
      16: iload_2
      17: invokevirtual #76                 // Method io/undertow/protocols/spdy/SpdyChannel.sendPing:(I)V
      20: return

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #77                 // class io/undertow/protocols/spdy/SpdyChannel
       5: invokevirtual #78                 // Method handleEvent:(Lio/undertow/protocols/spdy/SpdyChannel;)V
       8: return

  static {};
    Code:
       0: new           #45                 // class io/undertow/util/HttpString
       3: dup
       4: ldc           #79                 // String :method
       6: invokespecial #47                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
       9: putstatic     #49                 // Field METHOD:Lio/undertow/util/HttpString;
      12: new           #45                 // class io/undertow/util/HttpString
      15: dup
      16: ldc           #80                 // String :path
      18: invokespecial #47                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      21: putstatic     #54                 // Field PATH:Lio/undertow/util/HttpString;
      24: new           #45                 // class io/undertow/util/HttpString
      27: dup
      28: ldc           #81                 // String :scheme
      30: invokespecial #47                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      33: putstatic     #41                 // Field SCHEME:Lio/undertow/util/HttpString;
      36: new           #45                 // class io/undertow/util/HttpString
      39: dup
      40: ldc           #82                 // String :version
      42: invokespecial #47                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      45: putstatic     #46                 // Field VERSION:Lio/undertow/util/HttpString;
      48: new           #45                 // class io/undertow/util/HttpString
      51: dup
      52: ldc           #83                 // String :host
      54: invokespecial #47                 // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
      57: putstatic     #52                 // Field HOST:Lio/undertow/util/HttpString;
      60: return
}
