Compiled from "StringReadChannelListener.java"
public abstract class io.undertow.util.StringReadChannelListener implements org.xnio.ChannelListener<org.xnio.channels.StreamSourceChannel> {
  private final io.undertow.websockets.core.UTF8Output string;

  private final io.undertow.connector.ByteBufferPool bufferPool;

  public io.undertow.util.StringReadChannelListener(io.undertow.connector.ByteBufferPool);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class io/undertow/websockets/core/UTF8Output
       8: dup
       9: invokespecial #3                  // Method io/undertow/websockets/core/UTF8Output."<init>":()V
      12: putfield      #4                  // Field string:Lio/undertow/websockets/core/UTF8Output;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      20: return

  public io.undertow.util.StringReadChannelListener(org.xnio.Pool<java.nio.ByteBuffer>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class io/undertow/websockets/core/UTF8Output
       8: dup
       9: invokespecial #3                  // Method io/undertow/websockets/core/UTF8Output."<init>":()V
      12: putfield      #4                  // Field string:Lio/undertow/websockets/core/UTF8Output;
      15: aload_0
      16: new           #6                  // class io/undertow/server/XnioByteBufferPool
      19: dup
      20: aload_1
      21: invokespecial #7                  // Method io/undertow/server/XnioByteBufferPool."<init>":(Lorg/xnio/Pool;)V
      24: putfield      #5                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      27: return

  public void setup(org.xnio.channels.StreamSourceChannel);
    Code:
       0: aload_0
       1: getfield      #5                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
       4: invokeinterface #8,  1            // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
       9: astore_2
      10: aload_2
      11: invokeinterface #9,  1            // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      16: astore_3
      17: iconst_0
      18: istore        4
      20: aload_1
      21: aload_3
      22: invokeinterface #10,  2           // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
      27: istore        4
      29: iload         4
      31: ifne          55
      34: aload_1
      35: invokeinterface #11,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
      40: aload_0
      41: invokeinterface #12,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      46: aload_1
      47: invokeinterface #13,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.resumeReads:()V
      52: goto          99
      55: iload         4
      57: iconst_m1
      58: if_icmpne     79
      61: aload_0
      62: aload_0
      63: getfield      #4                  // Field string:Lio/undertow/websockets/core/UTF8Output;
      66: invokevirtual #14                 // Method io/undertow/websockets/core/UTF8Output.extract:()Ljava/lang/String;
      69: invokevirtual #15                 // Method stringDone:(Ljava/lang/String;)V
      72: aload_1
      73: invokestatic  #16                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      76: goto          99
      79: aload_3
      80: invokevirtual #17                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      83: pop
      84: aload_0
      85: getfield      #4                  // Field string:Lio/undertow/websockets/core/UTF8Output;
      88: iconst_1
      89: anewarray     #18                 // class java/nio/ByteBuffer
      92: dup
      93: iconst_0
      94: aload_3
      95: aastore
      96: invokevirtual #19                 // Method io/undertow/websockets/core/UTF8Output.write:([Ljava/nio/ByteBuffer;)V
      99: iload         4
     101: ifgt          20
     104: aload_2
     105: invokeinterface #20,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     110: goto          141
     113: astore        4
     115: aload_0
     116: aload         4
     118: invokevirtual #22                 // Method error:(Ljava/io/IOException;)V
     121: aload_2
     122: invokeinterface #20,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     127: goto          141
     130: astore        5
     132: aload_2
     133: invokeinterface #20,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     138: aload         5
     140: athrow
     141: return
    Exception table:
       from    to  target type
          17   104   113   Class java/io/IOException
          17   104   130   any
         113   121   130   any
         130   132   130   any

  public void handleEvent(org.xnio.channels.StreamSourceChannel);
    Code:
       0: aload_0
       1: getfield      #5                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
       4: invokeinterface #8,  1            // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
       9: astore_2
      10: aload_2
      11: invokeinterface #9,  1            // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      16: astore_3
      17: iconst_0
      18: istore        4
      20: aload_1
      21: aload_3
      22: invokeinterface #10,  2           // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
      27: istore        4
      29: iload         4
      31: ifne          41
      34: aload_2
      35: invokeinterface #20,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      40: return
      41: iload         4
      43: iconst_m1
      44: if_icmpne     65
      47: aload_0
      48: aload_0
      49: getfield      #4                  // Field string:Lio/undertow/websockets/core/UTF8Output;
      52: invokevirtual #14                 // Method io/undertow/websockets/core/UTF8Output.extract:()Ljava/lang/String;
      55: invokevirtual #15                 // Method stringDone:(Ljava/lang/String;)V
      58: aload_1
      59: invokestatic  #16                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      62: goto          85
      65: aload_3
      66: invokevirtual #17                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      69: pop
      70: aload_0
      71: getfield      #4                  // Field string:Lio/undertow/websockets/core/UTF8Output;
      74: iconst_1
      75: anewarray     #18                 // class java/nio/ByteBuffer
      78: dup
      79: iconst_0
      80: aload_3
      81: aastore
      82: invokevirtual #19                 // Method io/undertow/websockets/core/UTF8Output.write:([Ljava/nio/ByteBuffer;)V
      85: iload         4
      87: ifgt          20
      90: aload_2
      91: invokeinterface #20,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      96: goto          127
      99: astore        4
     101: aload_0
     102: aload         4
     104: invokevirtual #22                 // Method error:(Ljava/io/IOException;)V
     107: aload_2
     108: invokeinterface #20,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     113: goto          127
     116: astore        5
     118: aload_2
     119: invokeinterface #20,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     124: aload         5
     126: athrow
     127: return
    Exception table:
       from    to  target type
          17    34    99   Class java/io/IOException
          41    90    99   Class java/io/IOException
          17    34   116   any
          41    90   116   any
          99   107   116   any
         116   118   116   any

  protected abstract void stringDone(java.lang.String);

  protected abstract void error(java.io.IOException);

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #23                 // class org/xnio/channels/StreamSourceChannel
       5: invokevirtual #24                 // Method handleEvent:(Lorg/xnio/channels/StreamSourceChannel;)V
       8: return
}
