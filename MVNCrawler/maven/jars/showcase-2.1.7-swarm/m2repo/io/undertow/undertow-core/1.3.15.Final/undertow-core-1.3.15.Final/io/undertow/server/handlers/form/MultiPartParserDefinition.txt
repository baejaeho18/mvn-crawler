Compiled from "MultiPartParserDefinition.java"
public class io.undertow.server.handlers.form.MultiPartParserDefinition implements io.undertow.server.handlers.form.FormParserFactory$ParserDefinition<io.undertow.server.handlers.form.MultiPartParserDefinition> {
  public static final java.lang.String MULTIPART_FORM_DATA;

  private java.util.concurrent.Executor executor;

  private java.nio.file.Path tempFileLocation;

  private java.lang.String defaultEncoding;

  private long maxIndividualFileSize;

  public io.undertow.server.handlers.form.MultiPartParserDefinition();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #4                  // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
       8: invokevirtual #5                  // Method java/nio/charset/Charset.displayName:()Ljava/lang/String;
      11: putfield      #6                  // Field defaultEncoding:Ljava/lang/String;
      14: aload_0
      15: ldc2_w        #7                  // long -1l
      18: putfield      #9                  // Field maxIndividualFileSize:J
      21: aload_0
      22: ldc           #10                 // String java.io.tmpdir
      24: invokestatic  #11                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      27: iconst_0
      28: anewarray     #12                 // class java/lang/String
      31: invokestatic  #13                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      34: putfield      #1                  // Field tempFileLocation:Ljava/nio/file/Path;
      37: return

  public io.undertow.server.handlers.form.MultiPartParserDefinition(java.nio.file.Path);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #4                  // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
       8: invokevirtual #5                  // Method java/nio/charset/Charset.displayName:()Ljava/lang/String;
      11: putfield      #6                  // Field defaultEncoding:Ljava/lang/String;
      14: aload_0
      15: ldc2_w        #7                  // long -1l
      18: putfield      #9                  // Field maxIndividualFileSize:J
      21: aload_0
      22: aload_1
      23: putfield      #1                  // Field tempFileLocation:Ljava/nio/file/Path;
      26: return

  public io.undertow.server.handlers.form.FormDataParser create(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_1
       1: invokevirtual #14                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
       4: getstatic     #15                 // Field io/undertow/util/Headers.CONTENT_TYPE:Lio/undertow/util/HttpString;
       7: invokevirtual #16                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      10: astore_2
      11: aload_2
      12: ifnull        120
      15: aload_2
      16: ldc           #18                 // String multipart/form-data
      18: invokevirtual #19                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      21: ifeq          120
      24: aload_2
      25: ldc           #20                 // String boundary
      27: invokestatic  #21                 // Method io/undertow/util/Headers.extractTokenFromHeader:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      30: astore_3
      31: aload_3
      32: ifnonnull     48
      35: getstatic     #22                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      38: ldc           #23                 // String Could not find boundary in multipart request with ContentType: %s, multipart data will not be available
      40: aload_2
      41: invokeinterface #24,  3           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      46: aconst_null
      47: areturn
      48: new           #25                 // class io/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler
      51: dup
      52: aload_0
      53: aload_1
      54: aload_3
      55: aload_0
      56: getfield      #9                  // Field maxIndividualFileSize:J
      59: aload_0
      60: getfield      #6                  // Field defaultEncoding:Ljava/lang/String;
      63: aconst_null
      64: invokespecial #26                 // Method io/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler."<init>":(Lio/undertow/server/handlers/form/MultiPartParserDefinition;Lio/undertow/server/HttpServerExchange;Ljava/lang/String;JLjava/lang/String;Lio/undertow/server/handlers/form/MultiPartParserDefinition$1;)V
      67: astore        4
      69: aload_1
      70: new           #27                 // class io/undertow/server/handlers/form/MultiPartParserDefinition$1
      73: dup
      74: aload_0
      75: aload         4
      77: invokespecial #28                 // Method io/undertow/server/handlers/form/MultiPartParserDefinition$1."<init>":(Lio/undertow/server/handlers/form/MultiPartParserDefinition;Lio/undertow/server/handlers/form/MultiPartParserDefinition$MultiPartUploadHandler;)V
      80: invokevirtual #29                 // Method io/undertow/server/HttpServerExchange.addExchangeCompleteListener:(Lio/undertow/server/ExchangeCompletionListener;)Lio/undertow/server/HttpServerExchange;
      83: pop
      84: aload_1
      85: invokevirtual #30                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      88: invokevirtual #31                 // Method io/undertow/server/ServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
      91: getstatic     #32                 // Field io/undertow/UndertowOptions.MULTIPART_MAX_ENTITY_SIZE:Lorg/xnio/Option;
      94: invokevirtual #33                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;)Ljava/lang/Object;
      97: checkcast     #34                 // class java/lang/Long
     100: astore        5
     102: aload         5
     104: ifnull        117
     107: aload_1
     108: aload         5
     110: invokevirtual #35                 // Method java/lang/Long.longValue:()J
     113: invokevirtual #36                 // Method io/undertow/server/HttpServerExchange.setMaxEntitySize:(J)Lio/undertow/server/HttpServerExchange;
     116: pop
     117: aload         4
     119: areturn
     120: aconst_null
     121: areturn

  public java.util.concurrent.Executor getExecutor();
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/Executor;
       4: areturn

  public io.undertow.server.handlers.form.MultiPartParserDefinition setExecutor(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field executor:Ljava/util/concurrent/Executor;
       5: aload_0
       6: areturn

  public java.nio.file.Path getTempFileLocation();
    Code:
       0: aload_0
       1: getfield      #1                  // Field tempFileLocation:Ljava/nio/file/Path;
       4: areturn

  public io.undertow.server.handlers.form.MultiPartParserDefinition setTempFileLocation(java.nio.file.Path);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field tempFileLocation:Ljava/nio/file/Path;
       5: aload_0
       6: areturn

  public java.lang.String getDefaultEncoding();
    Code:
       0: aload_0
       1: getfield      #6                  // Field defaultEncoding:Ljava/lang/String;
       4: areturn

  public io.undertow.server.handlers.form.MultiPartParserDefinition setDefaultEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field defaultEncoding:Ljava/lang/String;
       5: aload_0
       6: areturn

  public long getMaxIndividualFileSize();
    Code:
       0: aload_0
       1: getfield      #9                  // Field maxIndividualFileSize:J
       4: lreturn

  public void setMaxIndividualFileSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #9                  // Field maxIndividualFileSize:J
       5: return

  public java.lang.Object setDefaultEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #37                 // Method setDefaultEncoding:(Ljava/lang/String;)Lio/undertow/server/handlers/form/MultiPartParserDefinition;
       5: areturn

  static java.util.concurrent.Executor access$100(io.undertow.server.handlers.form.MultiPartParserDefinition);
    Code:
       0: aload_0
       1: getfield      #2                  // Field executor:Ljava/util/concurrent/Executor;
       4: areturn

  static java.nio.file.Path access$300(io.undertow.server.handlers.form.MultiPartParserDefinition);
    Code:
       0: aload_0
       1: getfield      #1                  // Field tempFileLocation:Ljava/nio/file/Path;
       4: areturn
}
