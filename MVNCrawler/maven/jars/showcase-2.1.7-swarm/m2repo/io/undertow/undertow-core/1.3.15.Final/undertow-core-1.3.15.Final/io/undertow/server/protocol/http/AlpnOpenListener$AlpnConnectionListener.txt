Compiled from "AlpnOpenListener.java"
class io.undertow.server.protocol.http.AlpnOpenListener$AlpnConnectionListener implements org.xnio.ChannelListener<org.xnio.channels.StreamSourceChannel> {
  private java.lang.String selected;

  private final org.xnio.StreamConnection channel;

  final io.undertow.server.protocol.http.AlpnOpenListener this$0;

  private io.undertow.server.protocol.http.AlpnOpenListener$AlpnConnectionListener(io.undertow.server.protocol.http.AlpnOpenListener, org.xnio.StreamConnection);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field this$0:Lio/undertow/server/protocol/http/AlpnOpenListener;
       5: aload_0
       6: invokespecial #4                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
      14: return

  public void handleEvent(org.xnio.channels.StreamSourceChannel);
    Code:
       0: aload_0
       1: getfield      #3                  // Field this$0:Lio/undertow/server/protocol/http/AlpnOpenListener;
       4: invokestatic  #6                  // Method io/undertow/server/protocol/http/AlpnOpenListener.access$500:(Lio/undertow/server/protocol/http/AlpnOpenListener;)Lio/undertow/connector/ByteBufferPool;
       7: invokeinterface #7,  1            // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      12: astore_2
      13: iconst_1
      14: istore_3
      15: aload_0
      16: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
      19: invokevirtual #8                  // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      22: aload_2
      23: invokeinterface #9,  1            // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      28: invokevirtual #10                 // Method org/xnio/conduits/ConduitStreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
      31: istore        4
      33: iload         4
      35: iconst_m1
      36: if_icmpne     57
      39: aload_0
      40: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
      43: invokestatic  #11                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      46: iload_3
      47: ifeq          56
      50: aload_2
      51: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      56: return
      57: aload_2
      58: invokeinterface #9,  1            // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      63: invokevirtual #13                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      66: pop
      67: aload_0
      68: getfield      #1                  // Field selected:Ljava/lang/String;
      71: ifnull        135
      74: aload_0
      75: getfield      #3                  // Field this$0:Lio/undertow/server/protocol/http/AlpnOpenListener;
      78: invokestatic  #14                 // Method io/undertow/server/protocol/http/AlpnOpenListener.access$200:(Lio/undertow/server/protocol/http/AlpnOpenListener;)Ljava/util/Map;
      81: aload_0
      82: getfield      #1                  // Field selected:Ljava/lang/String;
      85: invokeinterface #15,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      90: checkcast     #16                 // class io/undertow/server/protocol/http/AlpnOpenListener$ListenerEntry
      93: getfield      #17                 // Field io/undertow/server/protocol/http/AlpnOpenListener$ListenerEntry.listener:Lio/undertow/server/DelegateOpenListener;
      96: astore        5
      98: aload_1
      99: invokeinterface #18,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
     104: aconst_null
     105: invokeinterface #19,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     110: aload         5
     112: aload_0
     113: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
     116: aload_2
     117: invokeinterface #20,  3           // InterfaceMethod io/undertow/server/DelegateOpenListener.handleEvent:(Lorg/xnio/StreamConnection;Lio/undertow/connector/PooledByteBuffer;)V
     122: iconst_0
     123: istore_3
     124: iload_3
     125: ifeq          134
     128: aload_2
     129: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     134: return
     135: iload         4
     137: ifle          247
     140: aload_0
     141: getfield      #3                  // Field this$0:Lio/undertow/server/protocol/http/AlpnOpenListener;
     144: invokestatic  #21                 // Method io/undertow/server/protocol/http/AlpnOpenListener.access$300:(Lio/undertow/server/protocol/http/AlpnOpenListener;)Ljava/lang/String;
     147: ifnonnull     183
     150: getstatic     #22                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     153: aload_0
     154: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
     157: invokevirtual #23                 // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
     160: invokeinterface #24,  2           // InterfaceMethod io/undertow/UndertowLogger.noALPNFallback:(Ljava/net/SocketAddress;)V
     165: aload_0
     166: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
     169: invokestatic  #11                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     172: iload_3
     173: ifeq          182
     176: aload_2
     177: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     182: return
     183: aload_0
     184: getfield      #3                  // Field this$0:Lio/undertow/server/protocol/http/AlpnOpenListener;
     187: invokestatic  #14                 // Method io/undertow/server/protocol/http/AlpnOpenListener.access$200:(Lio/undertow/server/protocol/http/AlpnOpenListener;)Ljava/util/Map;
     190: aload_0
     191: getfield      #3                  // Field this$0:Lio/undertow/server/protocol/http/AlpnOpenListener;
     194: invokestatic  #21                 // Method io/undertow/server/protocol/http/AlpnOpenListener.access$300:(Lio/undertow/server/protocol/http/AlpnOpenListener;)Ljava/lang/String;
     197: invokeinterface #15,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     202: checkcast     #16                 // class io/undertow/server/protocol/http/AlpnOpenListener$ListenerEntry
     205: getfield      #17                 // Field io/undertow/server/protocol/http/AlpnOpenListener$ListenerEntry.listener:Lio/undertow/server/DelegateOpenListener;
     208: astore        5
     210: aload_1
     211: invokeinterface #18,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
     216: aconst_null
     217: invokeinterface #19,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     222: aload         5
     224: aload_0
     225: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
     228: aload_2
     229: invokeinterface #20,  3           // InterfaceMethod io/undertow/server/DelegateOpenListener.handleEvent:(Lorg/xnio/StreamConnection;Lio/undertow/connector/PooledByteBuffer;)V
     234: iconst_0
     235: istore_3
     236: iload_3
     237: ifeq          246
     240: aload_2
     241: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     246: return
     247: iload         4
     249: ifne          273
     252: aload_0
     253: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
     256: invokevirtual #8                  // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     259: invokevirtual #25                 // Method org/xnio/conduits/ConduitStreamSourceChannel.resumeReads:()V
     262: iload_3
     263: ifeq          272
     266: aload_2
     267: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     272: return
     273: goto          15
     276: astore        4
     278: getstatic     #22                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     281: aload         4
     283: invokeinterface #27,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
     288: aload_0
     289: getfield      #5                  // Field channel:Lorg/xnio/StreamConnection;
     292: invokestatic  #11                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     295: iload_3
     296: ifeq          323
     299: aload_2
     300: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     305: goto          323
     308: astore        6
     310: iload_3
     311: ifeq          320
     314: aload_2
     315: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     320: aload         6
     322: athrow
     323: return
    Exception table:
       from    to  target type
          15    46   276   Class java/io/IOException
          57   124   276   Class java/io/IOException
         135   172   276   Class java/io/IOException
         183   236   276   Class java/io/IOException
         247   262   276   Class java/io/IOException
         273   276   276   Class java/io/IOException
          15    46   308   any
          57   124   308   any
         135   172   308   any
         183   236   308   any
         247   262   308   any
         273   295   308   any
         308   310   308   any

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #28                 // class org/xnio/channels/StreamSourceChannel
       5: invokevirtual #29                 // Method handleEvent:(Lorg/xnio/channels/StreamSourceChannel;)V
       8: return

  io.undertow.server.protocol.http.AlpnOpenListener$AlpnConnectionListener(io.undertow.server.protocol.http.AlpnOpenListener, org.xnio.StreamConnection, io.undertow.server.protocol.http.AlpnOpenListener$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method "<init>":(Lio/undertow/server/protocol/http/AlpnOpenListener;Lorg/xnio/StreamConnection;)V
       6: return

  static java.lang.String access$402(io.undertow.server.protocol.http.AlpnOpenListener$AlpnConnectionListener, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field selected:Ljava/lang/String;
       6: areturn
}
