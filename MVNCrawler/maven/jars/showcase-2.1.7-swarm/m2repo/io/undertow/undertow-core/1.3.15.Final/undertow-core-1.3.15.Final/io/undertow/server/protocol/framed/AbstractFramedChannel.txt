Compiled from "AbstractFramedChannel.java"
public abstract class io.undertow.server.protocol.framed.AbstractFramedChannel<C extends io.undertow.server.protocol.framed.AbstractFramedChannel<C, R, S>, R extends io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel<C, R, S>, S extends io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel<C, R, S>> implements org.xnio.channels.ConnectedChannel {
  private final int maxQueuedBuffers;

  private final org.xnio.StreamConnection channel;

  private final io.undertow.conduits.IdleTimeoutConduit idleTimeoutConduit;

  private final org.xnio.ChannelListener$SimpleSetter<C> closeSetter;

  private final org.xnio.ChannelListener$SimpleSetter<C> receiveSetter;

  private final io.undertow.connector.ByteBufferPool bufferPool;

  private final io.undertow.server.protocol.framed.FramePriority<C, R, S> framePriority;

  private final java.util.List<S> pendingFrames;

  private final java.util.Deque<S> heldFrames;

  private final java.util.Deque<S> newFrames;

  private volatile long frameDataRemaining;

  private volatile R receiver;

  private boolean receivesSuspended;

  private volatile int readsBroken;

  private volatile int writesBroken;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.server.protocol.framed.AbstractFramedChannel> readsBrokenUpdater;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.server.protocol.framed.AbstractFramedChannel> writesBrokenUpdater;

  private io.undertow.util.ReferenceCountedPooled readData;

  private final java.util.List<org.xnio.ChannelListener<C>> closeTasks;

  private volatile boolean flushingSenders;

  private final java.util.Set<io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel<C, R, S>> receivers;

  private volatile int outstandingBuffers;

  private volatile java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.server.protocol.framed.AbstractFramedChannel> outstandingBuffersUpdater;

  private final java.util.concurrent.LinkedBlockingDeque<java.lang.Runnable> taskRunQueue;

  private final org.xnio.OptionMap settings;

  private final io.undertow.util.ReferenceCountedPooled$FreeNotifier freeNotifier;

  private static final org.xnio.ChannelListener<io.undertow.server.protocol.framed.AbstractFramedChannel> DRAIN_LISTENER;

  static final boolean $assertionsDisabled;

  protected io.undertow.server.protocol.framed.AbstractFramedChannel(org.xnio.StreamConnection, io.undertow.connector.ByteBufferPool, io.undertow.server.protocol.framed.FramePriority<C, R, S>, io.undertow.connector.PooledByteBuffer, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #17                 // class java/util/LinkedList
       8: dup
       9: invokespecial #18                 // Method java/util/LinkedList."<init>":()V
      12: putfield      #6                  // Field pendingFrames:Ljava/util/List;
      15: aload_0
      16: new           #19                 // class java/util/ArrayDeque
      19: dup
      20: invokespecial #20                 // Method java/util/ArrayDeque."<init>":()V
      23: putfield      #4                  // Field heldFrames:Ljava/util/Deque;
      26: aload_0
      27: new           #21                 // class java/util/concurrent/LinkedBlockingDeque
      30: dup
      31: invokespecial #22                 // Method java/util/concurrent/LinkedBlockingDeque."<init>":()V
      34: putfield      #5                  // Field newFrames:Ljava/util/Deque;
      37: aload_0
      38: iconst_1
      39: putfield      #14                 // Field receivesSuspended:Z
      42: aload_0
      43: iconst_0
      44: putfield      #23                 // Field readsBroken:I
      47: aload_0
      48: iconst_0
      49: putfield      #24                 // Field writesBroken:I
      52: aload_0
      53: aconst_null
      54: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
      57: aload_0
      58: new           #25                 // class java/util/concurrent/CopyOnWriteArrayList
      61: dup
      62: invokespecial #26                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      65: putfield      #2                  // Field closeTasks:Ljava/util/List;
      68: aload_0
      69: iconst_0
      70: putfield      #27                 // Field flushingSenders:Z
      73: aload_0
      74: new           #28                 // class java/util/HashSet
      77: dup
      78: invokespecial #29                 // Method java/util/HashSet."<init>":()V
      81: putfield      #3                  // Field receivers:Ljava/util/Set;
      84: aload_0
      85: ldc           #30                 // class io/undertow/server/protocol/framed/AbstractFramedChannel
      87: ldc           #31                 // String outstandingBuffers
      89: invokestatic  #32                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      92: putfield      #15                 // Field outstandingBuffersUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      95: aload_0
      96: new           #21                 // class java/util/concurrent/LinkedBlockingDeque
      99: dup
     100: invokespecial #22                 // Method java/util/concurrent/LinkedBlockingDeque."<init>":()V
     103: putfield      #11                 // Field taskRunQueue:Ljava/util/concurrent/LinkedBlockingDeque;
     106: aload_0
     107: new           #33                 // class io/undertow/server/protocol/framed/AbstractFramedChannel$1
     110: dup
     111: aload_0
     112: invokespecial #34                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel$1."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)V
     115: putfield      #35                 // Field freeNotifier:Lio/undertow/util/ReferenceCountedPooled$FreeNotifier;
     118: aload_0
     119: aload_3
     120: putfield      #36                 // Field framePriority:Lio/undertow/server/protocol/framed/FramePriority;
     123: aload_0
     124: aload         5
     126: getstatic     #37                 // Field io/undertow/UndertowOptions.MAX_QUEUED_READ_BUFFERS:Lorg/xnio/Option;
     129: bipush        10
     131: invokevirtual #38                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     134: putfield      #13                 // Field maxQueuedBuffers:I
     137: aload_0
     138: aload         5
     140: putfield      #39                 // Field settings:Lorg/xnio/OptionMap;
     143: aload         4
     145: ifnull        185
     148: aload         4
     150: invokeinterface #40,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     155: invokevirtual #41                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     158: ifeq          178
     161: aload_0
     162: new           #42                 // class io/undertow/util/ReferenceCountedPooled
     165: dup
     166: aload         4
     168: iconst_1
     169: invokespecial #43                 // Method io/undertow/util/ReferenceCountedPooled."<init>":(Lio/undertow/connector/PooledByteBuffer;I)V
     172: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     175: goto          185
     178: aload         4
     180: invokeinterface #44,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     185: aload_2
     186: ifnonnull     200
     189: getstatic     #45                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     192: ldc           #46                 // String bufferPool
     194: invokeinterface #47,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     199: athrow
     200: aload_1
     201: ifnonnull     215
     204: getstatic     #45                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     207: ldc           #48                 // String connectedStreamChannel
     209: invokeinterface #47,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     214: athrow
     215: aload_0
     216: aload_1
     217: invokevirtual #49                 // Method createIdleTimeoutChannel:(Lorg/xnio/StreamConnection;)Lio/undertow/conduits/IdleTimeoutConduit;
     220: astore        6
     222: aload_1
     223: invokevirtual #50                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     226: aload         6
     228: invokevirtual #51                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     231: aload_1
     232: invokevirtual #52                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     235: aload         6
     237: invokevirtual #53                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
     240: aload_0
     241: aload         6
     243: putfield      #54                 // Field idleTimeoutConduit:Lio/undertow/conduits/IdleTimeoutConduit;
     246: aload_0
     247: aload_1
     248: putfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
     251: aload_0
     252: aload_2
     253: putfield      #55                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     256: aload_0
     257: new           #56                 // class org/xnio/ChannelListener$SimpleSetter
     260: dup
     261: invokespecial #57                 // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
     264: putfield      #1                  // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
     267: aload_0
     268: new           #56                 // class org/xnio/ChannelListener$SimpleSetter
     271: dup
     272: invokespecial #57                 // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
     275: putfield      #9                  // Field receiveSetter:Lorg/xnio/ChannelListener$SimpleSetter;
     278: aload_0
     279: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
     282: invokevirtual #50                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     285: invokevirtual #58                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
     288: aconst_null
     289: invokeinterface #59,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     294: aload_0
     295: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
     298: invokevirtual #50                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     301: invokevirtual #60                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
     304: aload_0
     305: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
     308: invokevirtual #50                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     311: invokevirtual #58                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
     314: new           #61                 // class io/undertow/server/protocol/framed/AbstractFramedChannel$FrameReadListener
     317: dup
     318: aload_0
     319: aconst_null
     320: invokespecial #62                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel$FrameReadListener."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;Lio/undertow/server/protocol/framed/AbstractFramedChannel$1;)V
     323: invokeinterface #59,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     328: aload_1
     329: invokevirtual #52                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     332: invokevirtual #63                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
     335: new           #64                 // class io/undertow/server/protocol/framed/AbstractFramedChannel$FrameWriteListener
     338: dup
     339: aload_0
     340: aconst_null
     341: invokespecial #65                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel$FrameWriteListener."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;Lio/undertow/server/protocol/framed/AbstractFramedChannel$1;)V
     344: invokeinterface #59,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     349: new           #66                 // class io/undertow/server/protocol/framed/AbstractFramedChannel$FrameCloseListener
     352: dup
     353: aload_0
     354: aconst_null
     355: invokespecial #67                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel$FrameCloseListener."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;Lio/undertow/server/protocol/framed/AbstractFramedChannel$1;)V
     358: astore        7
     360: aload_1
     361: invokevirtual #52                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     364: invokevirtual #68                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getCloseSetter:()Lorg/xnio/ChannelListener$Setter;
     367: aload         7
     369: invokeinterface #59,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     374: aload_1
     375: invokevirtual #50                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     378: invokevirtual #69                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getCloseSetter:()Lorg/xnio/ChannelListener$Setter;
     381: aload         7
     383: invokeinterface #59,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     388: return

  protected io.undertow.conduits.IdleTimeoutConduit createIdleTimeoutChannel(org.xnio.StreamConnection);
    Code:
       0: new           #70                 // class io/undertow/conduits/IdleTimeoutConduit
       3: dup
       4: aload_1
       5: invokevirtual #52                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       8: invokevirtual #71                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
      11: aload_1
      12: invokevirtual #50                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      15: invokevirtual #72                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      18: invokespecial #73                 // Method io/undertow/conduits/IdleTimeoutConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lorg/xnio/conduits/StreamSourceConduit;)V
      21: areturn

  void runInIoThread(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #11                 // Field taskRunQueue:Ljava/util/concurrent/LinkedBlockingDeque;
       4: aload_1
       5: invokevirtual #74                 // Method java/util/concurrent/LinkedBlockingDeque.add:(Ljava/lang/Object;)Z
       8: pop
       9: aload_0
      10: invokevirtual #75                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
      13: new           #76                 // class io/undertow/server/protocol/framed/AbstractFramedChannel$3
      16: dup
      17: aload_0
      18: invokespecial #77                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel$3."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)V
      21: invokevirtual #78                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      24: return

  public io.undertow.connector.ByteBufferPool getBufferPool();
    Code:
       0: aload_0
       1: getfield      #55                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
       4: areturn

  public java.net.SocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #79                 // Method org/xnio/StreamConnection.getLocalAddress:()Ljava/net/SocketAddress;
       7: areturn

  public <A extends java.net.SocketAddress> A getLocalAddress(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
       4: aload_1
       5: invokevirtual #80                 // Method org/xnio/StreamConnection.getLocalAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
       8: areturn

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #81                 // Method org/xnio/StreamConnection.getWorker:()Lorg/xnio/XnioWorker;
       7: areturn

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: aload_0
       1: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #82                 // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
       7: areturn

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
       4: aload_1
       5: invokevirtual #83                 // Method org/xnio/StreamConnection.supportsOption:(Lorg/xnio/Option;)Z
       8: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
       4: aload_1
       5: invokevirtual #84                 // Method org/xnio/StreamConnection.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
       8: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
       4: aload_1
       5: aload_2
       6: invokevirtual #85                 // Method org/xnio/StreamConnection.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #86                 // Method org/xnio/StreamConnection.isOpen:()Z
       7: ireturn

  public java.net.SocketAddress getPeerAddress();
    Code:
       0: aload_0
       1: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #87                 // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
       7: areturn

  public <A extends java.net.SocketAddress> A getPeerAddress(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
       4: aload_1
       5: invokevirtual #88                 // Method org/xnio/StreamConnection.getPeerAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
       8: areturn

  public java.net.InetSocketAddress getSourceAddress();
    Code:
       0: aload_0
       1: ldc           #89                 // class java/net/InetSocketAddress
       3: invokevirtual #90                 // Method getPeerAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
       6: checkcast     #89                 // class java/net/InetSocketAddress
       9: areturn

  public java.net.InetSocketAddress getDestinationAddress();
    Code:
       0: aload_0
       1: ldc           #89                 // class java/net/InetSocketAddress
       3: invokevirtual #91                 // Method getLocalAddress:(Ljava/lang/Class;)Ljava/net/SocketAddress;
       6: checkcast     #89                 // class java/net/InetSocketAddress
       9: areturn

  public synchronized R receive() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #92                 // Method isLastFrameReceived:()Z
       4: ifeq          55
       7: aload_0
       8: getfield      #10                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
      11: ifnonnull     55
      14: aload_0
      15: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
      18: ifnull        33
      21: aload_0
      22: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
      25: invokevirtual #93                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
      28: aload_0
      29: aconst_null
      30: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
      33: aload_0
      34: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
      37: invokevirtual #50                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      40: invokevirtual #60                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
      43: aload_0
      44: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
      47: invokevirtual #50                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      50: invokevirtual #94                 // Method org/xnio/conduits/ConduitStreamSourceChannel.shutdownReads:()V
      53: aconst_null
      54: areturn
      55: aload_0
      56: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
      59: astore_1
      60: aload_1
      61: ifnonnull     80
      64: aload_0
      65: invokespecial #95                 // Method allocateReferenceCountedBuffer:()Lio/undertow/util/ReferenceCountedPooled;
      68: astore_1
      69: aload_1
      70: ifnonnull     75
      73: aconst_null
      74: areturn
      75: iconst_0
      76: istore_2
      77: goto          133
      80: aload_1
      81: invokevirtual #96                 // Method io/undertow/util/ReferenceCountedPooled.isFreed:()Z
      84: ifeq          125
      87: aload_1
      88: invokevirtual #97                 // Method io/undertow/util/ReferenceCountedPooled.tryUnfree:()Z
      91: ifne          105
      94: aload_0
      95: invokespecial #95                 // Method allocateReferenceCountedBuffer:()Lio/undertow/util/ReferenceCountedPooled;
      98: astore_1
      99: aload_1
     100: ifnonnull     120
     103: aconst_null
     104: areturn
     105: aload_1
     106: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     109: aload_1
     110: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     113: invokevirtual #99                 // Method java/nio/ByteBuffer.capacity:()I
     116: invokevirtual #100                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     119: pop
     120: iconst_0
     121: istore_2
     122: goto          133
     125: aload_1
     126: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     129: invokevirtual #41                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     132: istore_2
     133: iconst_0
     134: istore_3
     135: iconst_0
     136: istore        4
     138: iload_2
     139: ifne          366
     142: aload_1
     143: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     146: invokevirtual #101                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     149: pop
     150: aload_0
     151: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
     154: invokevirtual #50                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     157: aload_1
     158: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     161: invokevirtual #102                // Method org/xnio/conduits/ConduitStreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
     164: istore        4
     166: iload         4
     168: ifne          232
     171: iconst_1
     172: istore_3
     173: aconst_null
     174: astore        5
     176: aload_0
     177: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     180: ifnull        229
     183: aload_1
     184: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     187: invokevirtual #41                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     190: ifeq          197
     193: iload_3
     194: ifeq          229
     197: aload_1
     198: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     201: invokevirtual #103                // Method java/nio/ByteBuffer.limit:()I
     204: iconst_2
     205: imul
     206: aload_1
     207: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     210: invokevirtual #99                 // Method java/nio/ByteBuffer.capacity:()I
     213: if_icmpgt     220
     216: iload_3
     217: ifeq          225
     220: aload_0
     221: aconst_null
     222: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     225: aload_1
     226: invokevirtual #93                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
     229: aload         5
     231: areturn
     232: iload         4
     234: iconst_m1
     235: if_icmpne     358
     238: aload_0
     239: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
     242: invokevirtual #50                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     245: invokevirtual #94                 // Method org/xnio/conduits/ConduitStreamSourceChannel.shutdownReads:()V
     248: goto          293
     251: astore        5
     253: getstatic     #105                // Field io/undertow/websockets/core/WebSocketLogger.REQUEST_LOGGER:Lio/undertow/websockets/core/WebSocketLogger;
     256: invokeinterface #106,  1          // InterfaceMethod io/undertow/websockets/core/WebSocketLogger.isDebugEnabled:()Z
     261: ifeq          280
     264: getstatic     #105                // Field io/undertow/websockets/core/WebSocketLogger.REQUEST_LOGGER:Lio/undertow/websockets/core/WebSocketLogger;
     267: aload         5
     269: ldc           #107                // String Connection closed with IOException when attempting to shut down reads
     271: iconst_0
     272: anewarray     #108                // class java/lang/Object
     275: invokeinterface #109,  4          // InterfaceMethod io/undertow/websockets/core/WebSocketLogger.debugf:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
     280: aload_0
     281: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
     284: invokevirtual #50                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     287: invokestatic  #110                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     290: aload         5
     292: athrow
     293: iconst_1
     294: istore_3
     295: aload_0
     296: invokevirtual #111                // Method lastDataRead:()V
     299: aconst_null
     300: astore        5
     302: aload_0
     303: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     306: ifnull        355
     309: aload_1
     310: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     313: invokevirtual #41                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     316: ifeq          323
     319: iload_3
     320: ifeq          355
     323: aload_1
     324: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     327: invokevirtual #103                // Method java/nio/ByteBuffer.limit:()I
     330: iconst_2
     331: imul
     332: aload_1
     333: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     336: invokevirtual #99                 // Method java/nio/ByteBuffer.capacity:()I
     339: if_icmpgt     346
     342: iload_3
     343: ifeq          351
     346: aload_0
     347: aconst_null
     348: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     351: aload_1
     352: invokevirtual #93                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
     355: aload         5
     357: areturn
     358: aload_1
     359: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     362: invokevirtual #112                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     365: pop
     366: aload_0
     367: getfield      #113                // Field frameDataRemaining:J
     370: lconst_0
     371: lcmp
     372: ifle          662
     375: aload_0
     376: getfield      #113                // Field frameDataRemaining:J
     379: aload_1
     380: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     383: invokevirtual #114                // Method java/nio/ByteBuffer.remaining:()I
     386: i2l
     387: lcmp
     388: iflt          509
     391: aload_0
     392: dup
     393: getfield      #113                // Field frameDataRemaining:J
     396: aload_1
     397: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     400: invokevirtual #114                // Method java/nio/ByteBuffer.remaining:()I
     403: i2l
     404: lsub
     405: putfield      #113                // Field frameDataRemaining:J
     408: aload_0
     409: getfield      #10                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     412: ifnull        427
     415: aload_0
     416: getfield      #10                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     419: aconst_null
     420: aload_1
     421: invokevirtual #115                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel.dataReady:(Lio/undertow/server/protocol/framed/FrameHeaderData;Lio/undertow/connector/PooledByteBuffer;)V
     424: goto          431
     427: aload_1
     428: invokevirtual #93                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
     431: aload_0
     432: aconst_null
     433: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     436: aload_0
     437: getfield      #113                // Field frameDataRemaining:J
     440: lconst_0
     441: lcmp
     442: ifne          450
     445: aload_0
     446: aconst_null
     447: putfield      #10                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     450: aconst_null
     451: astore        5
     453: aload_0
     454: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     457: ifnull        506
     460: aload_1
     461: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     464: invokevirtual #41                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     467: ifeq          474
     470: iload_3
     471: ifeq          506
     474: aload_1
     475: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     478: invokevirtual #103                // Method java/nio/ByteBuffer.limit:()I
     481: iconst_2
     482: imul
     483: aload_1
     484: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     487: invokevirtual #99                 // Method java/nio/ByteBuffer.capacity:()I
     490: if_icmpgt     497
     493: iload_3
     494: ifeq          502
     497: aload_0
     498: aconst_null
     499: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     502: aload_1
     503: invokevirtual #93                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
     506: aload         5
     508: areturn
     509: aload_1
     510: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     513: invokevirtual #116                // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
     516: astore        5
     518: aload         5
     520: aload         5
     522: invokevirtual #117                // Method java/nio/ByteBuffer.position:()I
     525: i2l
     526: aload_0
     527: getfield      #113                // Field frameDataRemaining:J
     530: ladd
     531: l2i
     532: invokevirtual #100                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     535: pop
     536: aload_1
     537: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     540: aload_1
     541: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     544: invokevirtual #117                // Method java/nio/ByteBuffer.position:()I
     547: i2l
     548: aload_0
     549: getfield      #113                // Field frameDataRemaining:J
     552: ladd
     553: l2i
     554: invokevirtual #118                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     557: pop
     558: aload_0
     559: lconst_0
     560: putfield      #113                // Field frameDataRemaining:J
     563: aload_1
     564: aload         5
     566: invokevirtual #119                // Method io/undertow/util/ReferenceCountedPooled.createView:(Ljava/nio/ByteBuffer;)Lio/undertow/connector/PooledByteBuffer;
     569: astore        6
     571: aload_0
     572: getfield      #10                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     575: ifnull        591
     578: aload_0
     579: getfield      #10                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     582: aconst_null
     583: aload         6
     585: invokevirtual #115                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel.dataReady:(Lio/undertow/server/protocol/framed/FrameHeaderData;Lio/undertow/connector/PooledByteBuffer;)V
     588: goto          598
     591: aload         6
     593: invokeinterface #44,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     598: aload_0
     599: aconst_null
     600: putfield      #10                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     603: aconst_null
     604: astore        5
     606: aload_0
     607: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     610: ifnull        659
     613: aload_1
     614: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     617: invokevirtual #41                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     620: ifeq          627
     623: iload_3
     624: ifeq          659
     627: aload_1
     628: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     631: invokevirtual #103                // Method java/nio/ByteBuffer.limit:()I
     634: iconst_2
     635: imul
     636: aload_1
     637: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     640: invokevirtual #99                 // Method java/nio/ByteBuffer.capacity:()I
     643: if_icmpgt     650
     646: iload_3
     647: ifeq          655
     650: aload_0
     651: aconst_null
     652: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     655: aload_1
     656: invokevirtual #93                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
     659: aload         5
     661: areturn
     662: aload_0
     663: aload_1
     664: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     667: invokevirtual #120                // Method parseFrame:(Ljava/nio/ByteBuffer;)Lio/undertow/server/protocol/framed/FrameHeaderData;
     670: astore        5
     672: aload         5
     674: ifnull        1065
     677: aload         5
     679: invokeinterface #121,  1          // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
     684: aload_1
     685: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     688: invokevirtual #114                // Method java/nio/ByteBuffer.remaining:()I
     691: i2l
     692: lcmp
     693: iflt          747
     696: aload_0
     697: aload         5
     699: invokeinterface #121,  1          // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
     704: aload_1
     705: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     708: invokevirtual #114                // Method java/nio/ByteBuffer.remaining:()I
     711: i2l
     712: lsub
     713: putfield      #113                // Field frameDataRemaining:J
     716: aload_1
     717: aload_1
     718: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     721: invokevirtual #116                // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
     724: invokevirtual #119                // Method io/undertow/util/ReferenceCountedPooled.createView:(Ljava/nio/ByteBuffer;)Lio/undertow/connector/PooledByteBuffer;
     727: astore        6
     729: aload_1
     730: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     733: aload_1
     734: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     737: invokevirtual #103                // Method java/nio/ByteBuffer.limit:()I
     740: invokevirtual #118                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     743: pop
     744: goto          810
     747: aload_1
     748: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     751: invokevirtual #116                // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
     754: astore        7
     756: aload         7
     758: aload         7
     760: invokevirtual #117                // Method java/nio/ByteBuffer.position:()I
     763: i2l
     764: aload         5
     766: invokeinterface #121,  1          // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
     771: ladd
     772: l2i
     773: invokevirtual #100                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     776: pop
     777: aload_1
     778: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     781: aload_1
     782: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     785: invokevirtual #117                // Method java/nio/ByteBuffer.position:()I
     788: i2l
     789: aload         5
     791: invokeinterface #121,  1          // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
     796: ladd
     797: l2i
     798: invokevirtual #118                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     801: pop
     802: aload_1
     803: aload         7
     805: invokevirtual #119                // Method io/undertow/util/ReferenceCountedPooled.createView:(Ljava/nio/ByteBuffer;)Lio/undertow/connector/PooledByteBuffer;
     808: astore        6
     810: aload         5
     812: invokeinterface #122,  1          // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getExistingChannel:()Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     817: astore        7
     819: aload         7
     821: ifnull        920
     824: aload         5
     826: invokeinterface #121,  1          // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
     831: aload         6
     833: invokeinterface #40,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     838: invokevirtual #114                // Method java/nio/ByteBuffer.remaining:()I
     841: i2l
     842: lcmp
     843: ifle          852
     846: aload_0
     847: aload         7
     849: putfield      #10                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     852: aload         7
     854: aload         5
     856: aload         6
     858: invokevirtual #115                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel.dataReady:(Lio/undertow/server/protocol/framed/FrameHeaderData;Lio/undertow/connector/PooledByteBuffer;)V
     861: aconst_null
     862: astore        8
     864: aload_0
     865: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     868: ifnull        917
     871: aload_1
     872: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     875: invokevirtual #41                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     878: ifeq          885
     881: iload_3
     882: ifeq          917
     885: aload_1
     886: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     889: invokevirtual #103                // Method java/nio/ByteBuffer.limit:()I
     892: iconst_2
     893: imul
     894: aload_1
     895: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
     898: invokevirtual #99                 // Method java/nio/ByteBuffer.capacity:()I
     901: if_icmpgt     908
     904: iload_3
     905: ifeq          913
     908: aload_0
     909: aconst_null
     910: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     913: aload_1
     914: invokevirtual #93                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
     917: aload         8
     919: areturn
     920: aload         5
     922: invokeinterface #121,  1          // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
     927: aload         6
     929: invokeinterface #40,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     934: invokevirtual #114                // Method java/nio/ByteBuffer.remaining:()I
     937: i2l
     938: lcmp
     939: ifle          946
     942: iconst_1
     943: goto          947
     946: iconst_0
     947: istore        8
     949: aload_0
     950: aload         5
     952: aload         6
     954: invokevirtual #123                // Method createChannel:(Lio/undertow/server/protocol/framed/FrameHeaderData;Lio/undertow/connector/PooledByteBuffer;)Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     957: astore        9
     959: aload         9
     961: ifnull        998
     964: aload         9
     966: invokevirtual #124                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel.isComplete:()Z
     969: ifne          984
     972: aload_0
     973: getfield      #3                  // Field receivers:Ljava/util/Set;
     976: aload         9
     978: invokeinterface #125,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     983: pop
     984: iload         8
     986: ifeq          1005
     989: aload_0
     990: aload         9
     992: putfield      #10                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
     995: goto          1005
     998: aload         6
    1000: invokeinterface #44,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1005: aload         9
    1007: astore        10
    1009: aload_0
    1010: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
    1013: ifnull        1062
    1016: aload_1
    1017: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1020: invokevirtual #41                 // Method java/nio/ByteBuffer.hasRemaining:()Z
    1023: ifeq          1030
    1026: iload_3
    1027: ifeq          1062
    1030: aload_1
    1031: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1034: invokevirtual #103                // Method java/nio/ByteBuffer.limit:()I
    1037: iconst_2
    1038: imul
    1039: aload_1
    1040: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1043: invokevirtual #99                 // Method java/nio/ByteBuffer.capacity:()I
    1046: if_icmpgt     1053
    1049: iload_3
    1050: ifeq          1058
    1053: aload_0
    1054: aconst_null
    1055: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
    1058: aload_1
    1059: invokevirtual #93                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
    1062: aload         10
    1064: areturn
    1065: aconst_null
    1066: astore        6
    1068: aload_0
    1069: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
    1072: ifnull        1121
    1075: aload_1
    1076: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1079: invokevirtual #41                 // Method java/nio/ByteBuffer.hasRemaining:()Z
    1082: ifeq          1089
    1085: iload_3
    1086: ifeq          1121
    1089: aload_1
    1090: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1093: invokevirtual #103                // Method java/nio/ByteBuffer.limit:()I
    1096: iconst_2
    1097: imul
    1098: aload_1
    1099: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1102: invokevirtual #99                 // Method java/nio/ByteBuffer.capacity:()I
    1105: if_icmpgt     1112
    1108: iload_3
    1109: ifeq          1117
    1112: aload_0
    1113: aconst_null
    1114: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
    1117: aload_1
    1118: invokevirtual #93                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
    1121: aload         6
    1123: areturn
    1124: astore        5
    1126: aload_0
    1127: aload         5
    1129: invokevirtual #127                // Method markReadsBroken:(Ljava/lang/Throwable;)V
    1132: iconst_1
    1133: istore_3
    1134: aload         5
    1136: athrow
    1137: astore        11
    1139: aload_0
    1140: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
    1143: ifnull        1192
    1146: aload_1
    1147: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1150: invokevirtual #41                 // Method java/nio/ByteBuffer.hasRemaining:()Z
    1153: ifeq          1160
    1156: iload_3
    1157: ifeq          1192
    1160: aload_1
    1161: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1164: invokevirtual #103                // Method java/nio/ByteBuffer.limit:()I
    1167: iconst_2
    1168: imul
    1169: aload_1
    1170: invokevirtual #98                 // Method io/undertow/util/ReferenceCountedPooled.getBuffer:()Ljava/nio/ByteBuffer;
    1173: invokevirtual #99                 // Method java/nio/ByteBuffer.capacity:()I
    1176: if_icmpgt     1183
    1179: iload_3
    1180: ifeq          1188
    1183: aload_0
    1184: aconst_null
    1185: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
    1188: aload_1
    1189: invokevirtual #93                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
    1192: aload         11
    1194: athrow
    Exception table:
       from    to  target type
         238   248   251   Class java/io/IOException
         138   176  1124   Class java/io/IOException
         138   176  1124   Class java/lang/RuntimeException
         232   302  1124   Class java/io/IOException
         232   302  1124   Class java/lang/RuntimeException
         358   453  1124   Class java/io/IOException
         358   453  1124   Class java/lang/RuntimeException
         509   606  1124   Class java/io/IOException
         509   606  1124   Class java/lang/RuntimeException
         662   864  1124   Class java/io/IOException
         662   864  1124   Class java/lang/RuntimeException
         920  1009  1124   Class java/io/IOException
         920  1009  1124   Class java/lang/RuntimeException
        1065  1068  1124   Class java/io/IOException
        1065  1068  1124   Class java/lang/RuntimeException
         138   176  1137   any
         232   302  1137   any
         358   453  1137   any
         509   606  1137   any
         662   864  1137   any
         920  1009  1137   any
        1065  1068  1137   any
        1124  1139  1137   any

  private io.undertow.util.ReferenceCountedPooled allocateReferenceCountedBuffer();
    Code:
       0: aload_0
       1: getfield      #13                 // Field maxQueuedBuffers:I
       4: ifle          84
       7: aload_0
       8: getfield      #15                 // Field outstandingBuffersUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      11: aload_0
      12: invokevirtual #128                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
      15: istore_1
      16: iload_1
      17: aload_0
      18: getfield      #13                 // Field maxQueuedBuffers:I
      21: if_icmpne     69
      24: aload_0
      25: dup
      26: astore_2
      27: monitorenter
      28: aload_0
      29: getfield      #15                 // Field outstandingBuffersUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      32: aload_0
      33: invokevirtual #128                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
      36: istore_1
      37: iload_1
      38: aload_0
      39: getfield      #13                 // Field maxQueuedBuffers:I
      42: if_icmpne     59
      45: aload_0
      46: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
      49: invokevirtual #50                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      52: invokevirtual #60                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
      55: aconst_null
      56: aload_2
      57: monitorexit
      58: areturn
      59: aload_2
      60: monitorexit
      61: goto          69
      64: astore_3
      65: aload_2
      66: monitorexit
      67: aload_3
      68: athrow
      69: aload_0
      70: getfield      #15                 // Field outstandingBuffersUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      73: aload_0
      74: iload_1
      75: iload_1
      76: iconst_1
      77: iadd
      78: invokevirtual #129                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      81: ifeq          7
      84: aload_0
      85: getfield      #55                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      88: invokeinterface #130,  1          // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      93: astore_1
      94: aload_0
      95: new           #42                 // class io/undertow/util/ReferenceCountedPooled
      98: dup
      99: aload_1
     100: iconst_1
     101: aload_0
     102: getfield      #13                 // Field maxQueuedBuffers:I
     105: ifle          115
     108: aload_0
     109: getfield      #35                 // Field freeNotifier:Lio/undertow/util/ReferenceCountedPooled$FreeNotifier;
     112: goto          116
     115: aconst_null
     116: invokespecial #131                // Method io/undertow/util/ReferenceCountedPooled."<init>":(Lio/undertow/connector/PooledByteBuffer;ILio/undertow/util/ReferenceCountedPooled$FreeNotifier;)V
     119: dup_x1
     120: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
     123: areturn
    Exception table:
       from    to  target type
          28    58    64   any
          59    61    64   any
          64    67    64   any

  protected void lastDataRead();
    Code:
       0: return

  protected abstract R createChannel(io.undertow.server.protocol.framed.FrameHeaderData, io.undertow.connector.PooledByteBuffer) throws java.io.IOException;

  protected abstract io.undertow.server.protocol.framed.FrameHeaderData parseFrame(java.nio.ByteBuffer) throws java.io.IOException;

  protected synchronized void recalculateHeldFrames() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field heldFrames:Ljava/util/Deque;
       4: invokeinterface #132,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
       9: ifne          34
      12: aload_0
      13: getfield      #36                 // Field framePriority:Lio/undertow/server/protocol/framed/FramePriority;
      16: aconst_null
      17: aload_0
      18: getfield      #6                  // Field pendingFrames:Ljava/util/List;
      21: aload_0
      22: getfield      #4                  // Field heldFrames:Ljava/util/Deque;
      25: invokeinterface #133,  4          // InterfaceMethod io/undertow/server/protocol/framed/FramePriority.frameAdded:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;Ljava/util/List;Ljava/util/Deque;)V
      30: aload_0
      31: invokevirtual #134                // Method flushSenders:()V
      34: return

  protected synchronized void flushSenders();
    Code:
       0: aload_0
       1: getfield      #27                 // Field flushingSenders:Z
       4: ifeq          16
       7: getstatic     #45                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #135,  1          // InterfaceMethod io/undertow/UndertowMessages.recursiveCallToFlushingSenders:()Ljava/lang/RuntimeException;
      15: athrow
      16: aload_0
      17: iconst_1
      18: putfield      #27                 // Field flushingSenders:Z
      21: iconst_0
      22: istore_1
      23: aload_0
      24: getfield      #5                  // Field newFrames:Ljava/util/Deque;
      27: invokeinterface #132,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
      32: ifne          112
      35: aload_0
      36: getfield      #5                  // Field newFrames:Ljava/util/Deque;
      39: invokeinterface #136,  1          // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
      44: checkcast     #137                // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel
      47: astore_2
      48: aload_0
      49: getfield      #36                 // Field framePriority:Lio/undertow/server/protocol/framed/FramePriority;
      52: aload_2
      53: aload_0
      54: getfield      #6                  // Field pendingFrames:Ljava/util/List;
      57: invokeinterface #138,  3          // InterfaceMethod io/undertow/server/protocol/framed/FramePriority.insertFrame:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;Ljava/util/List;)Z
      62: ifeq          98
      65: aload_0
      66: getfield      #4                  // Field heldFrames:Ljava/util/Deque;
      69: invokeinterface #132,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
      74: ifne          109
      77: aload_0
      78: getfield      #36                 // Field framePriority:Lio/undertow/server/protocol/framed/FramePriority;
      81: aload_2
      82: aload_0
      83: getfield      #6                  // Field pendingFrames:Ljava/util/List;
      86: aload_0
      87: getfield      #4                  // Field heldFrames:Ljava/util/Deque;
      90: invokeinterface #133,  4          // InterfaceMethod io/undertow/server/protocol/framed/FramePriority.frameAdded:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel;Ljava/util/List;Ljava/util/Deque;)V
      95: goto          109
      98: aload_0
      99: getfield      #4                  // Field heldFrames:Ljava/util/Deque;
     102: aload_2
     103: invokeinterface #139,  2          // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
     108: pop
     109: goto          23
     112: iconst_0
     113: istore_2
     114: aload_0
     115: getfield      #6                  // Field pendingFrames:Ljava/util/List;
     118: invokeinterface #140,  1          // InterfaceMethod java/util/List.listIterator:()Ljava/util/ListIterator;
     123: astore_3
     124: aload_3
     125: invokeinterface #141,  1          // InterfaceMethod java/util/ListIterator.hasNext:()Z
     130: ifeq          168
     133: aload_3
     134: invokeinterface #142,  1          // InterfaceMethod java/util/ListIterator.next:()Ljava/lang/Object;
     139: checkcast     #137                // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel
     142: astore        4
     144: aload         4
     146: invokevirtual #143                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.isReadyForFlush:()Z
     149: ifeq          168
     152: iinc          1, 1
     155: aload         4
     157: invokevirtual #144                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.isLastFrame:()Z
     160: ifeq          165
     163: iconst_1
     164: istore_2
     165: goto          124
     168: iload_1
     169: ifne          243
     172: aload_0
     173: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
     176: invokevirtual #52                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     179: invokevirtual #145                // Method org/xnio/conduits/ConduitStreamSinkChannel.flush:()Z
     182: ifeq          195
     185: aload_0
     186: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
     189: invokevirtual #52                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     192: invokevirtual #146                // Method org/xnio/conduits/ConduitStreamSinkChannel.suspendWrites:()V
     195: goto          213
     198: astore        4
     200: aload_0
     201: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
     204: invokestatic  #110                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     207: aload_0
     208: aload         4
     210: invokevirtual #147                // Method markWritesBroken:(Ljava/lang/Throwable;)V
     213: aload_0
     214: iconst_0
     215: putfield      #27                 // Field flushingSenders:Z
     218: aload_0
     219: getfield      #5                  // Field newFrames:Ljava/util/Deque;
     222: invokeinterface #132,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
     227: ifne          242
     230: aload_0
     231: new           #148                // class io/undertow/server/protocol/framed/AbstractFramedChannel$4
     234: dup
     235: aload_0
     236: invokespecial #149                // Method io/undertow/server/protocol/framed/AbstractFramedChannel$4."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)V
     239: invokevirtual #150                // Method runInIoThread:(Ljava/lang/Runnable;)V
     242: return
     243: iload_1
     244: iconst_3
     245: imul
     246: anewarray     #151                // class java/nio/ByteBuffer
     249: astore        4
     251: iconst_0
     252: istore        5
     254: aload_0
     255: getfield      #6                  // Field pendingFrames:Ljava/util/List;
     258: invokeinterface #140,  1          // InterfaceMethod java/util/List.listIterator:()Ljava/util/ListIterator;
     263: astore_3
     264: iload         5
     266: iload_1
     267: if_icmpge     368
     270: aload_3
     271: invokeinterface #142,  1          // InterfaceMethod java/util/ListIterator.next:()Ljava/lang/Object;
     276: checkcast     #137                // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel
     279: astore        6
     281: aload         6
     283: invokevirtual #152                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getFrameHeader:()Lio/undertow/server/protocol/framed/SendFrameHeader;
     286: astore        7
     288: aload         7
     290: invokevirtual #153                // Method io/undertow/server/protocol/framed/SendFrameHeader.getByteBuffer:()Lio/undertow/connector/PooledByteBuffer;
     293: astore        8
     295: aload         4
     297: iload         5
     299: iconst_3
     300: imul
     301: aload         8
     303: ifnull        316
     306: aload         8
     308: invokeinterface #40,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     313: goto          319
     316: getstatic     #154                // Field org/xnio/Buffers.EMPTY_BYTE_BUFFER:Ljava/nio/ByteBuffer;
     319: aastore
     320: aload         4
     322: iload         5
     324: iconst_3
     325: imul
     326: iconst_1
     327: iadd
     328: aload         6
     330: invokevirtual #155                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getBuffer:()Ljava/nio/ByteBuffer;
     333: ifnonnull     342
     336: getstatic     #154                // Field org/xnio/Buffers.EMPTY_BYTE_BUFFER:Ljava/nio/ByteBuffer;
     339: goto          347
     342: aload         6
     344: invokevirtual #155                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getBuffer:()Ljava/nio/ByteBuffer;
     347: aastore
     348: aload         4
     350: iload         5
     352: iconst_3
     353: imul
     354: iconst_2
     355: iadd
     356: aload         6
     358: invokevirtual #156                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getFrameFooter:()Ljava/nio/ByteBuffer;
     361: aastore
     362: iinc          5, 1
     365: goto          264
     368: aload         4
     370: invokestatic  #157                // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
     373: lstore        6
     375: aload_0
     376: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
     379: invokevirtual #52                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     382: aload         4
     384: invokevirtual #158                // Method org/xnio/conduits/ConduitStreamSinkChannel.write:([Ljava/nio/ByteBuffer;)J
     387: lstore        8
     389: lload         6
     391: lload         8
     393: lsub
     394: lstore        6
     396: lload         8
     398: lconst_0
     399: lcmp
     400: ifle          410
     403: lload         6
     405: lconst_0
     406: lcmp
     407: ifgt          375
     410: iload_1
     411: istore        10
     413: iload         10
     415: ifle          517
     418: aload_0
     419: getfield      #6                  // Field pendingFrames:Ljava/util/List;
     422: iconst_0
     423: invokeinterface #159,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     428: checkcast     #137                // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel
     431: astore        11
     433: aload         11
     435: invokevirtual #152                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getFrameHeader:()Lio/undertow/server/protocol/framed/SendFrameHeader;
     438: invokevirtual #153                // Method io/undertow/server/protocol/framed/SendFrameHeader.getByteBuffer:()Lio/undertow/connector/PooledByteBuffer;
     441: astore        12
     443: aload         12
     445: ifnull        461
     448: aload         12
     450: invokeinterface #40,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     455: invokevirtual #41                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     458: ifne          517
     461: aload         11
     463: invokevirtual #155                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getBuffer:()Ljava/nio/ByteBuffer;
     466: ifnull        480
     469: aload         11
     471: invokevirtual #155                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getBuffer:()Ljava/nio/ByteBuffer;
     474: invokevirtual #41                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     477: ifne          517
     480: aload         11
     482: invokevirtual #156                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getFrameFooter:()Ljava/nio/ByteBuffer;
     485: invokevirtual #41                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     488: ifeq          494
     491: goto          517
     494: aload         11
     496: invokevirtual #160                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.flushComplete:()V
     499: aload_0
     500: getfield      #6                  // Field pendingFrames:Ljava/util/List;
     503: aload         11
     505: invokeinterface #161,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
     510: pop
     511: iinc          10, -1
     514: goto          413
     517: aload_0
     518: getfield      #6                  // Field pendingFrames:Ljava/util/List;
     521: invokeinterface #162,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     526: ifeq          542
     529: aload_0
     530: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
     533: invokevirtual #52                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     536: invokevirtual #145                // Method org/xnio/conduits/ConduitStreamSinkChannel.flush:()Z
     539: ifne          555
     542: aload_0
     543: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
     546: invokevirtual #52                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     549: invokevirtual #163                // Method org/xnio/conduits/ConduitStreamSinkChannel.resumeWrites:()V
     552: goto          565
     555: aload_0
     556: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
     559: invokevirtual #52                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     562: invokevirtual #146                // Method org/xnio/conduits/ConduitStreamSinkChannel.suspendWrites:()V
     565: aload_0
     566: getfield      #6                  // Field pendingFrames:Ljava/util/List;
     569: invokeinterface #162,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     574: ifeq          629
     577: iload_2
     578: ifeq          629
     581: aload_0
     582: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
     585: invokevirtual #52                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     588: invokevirtual #164                // Method org/xnio/conduits/ConduitStreamSinkChannel.shutdownWrites:()V
     591: aload_0
     592: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
     595: invokevirtual #52                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     598: invokevirtual #145                // Method org/xnio/conduits/ConduitStreamSinkChannel.flush:()Z
     601: ifne          629
     604: aload_0
     605: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
     608: invokevirtual #52                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     611: aconst_null
     612: aconst_null
     613: invokestatic  #165                // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
     616: invokevirtual #166                // Method org/xnio/conduits/ConduitStreamSinkChannel.setWriteListener:(Lorg/xnio/ChannelListener;)V
     619: aload_0
     620: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
     623: invokevirtual #52                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     626: invokevirtual #163                // Method org/xnio/conduits/ConduitStreamSinkChannel.resumeWrites:()V
     629: goto          647
     632: astore        6
     634: aload_0
     635: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
     638: invokestatic  #110                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     641: aload_0
     642: aload         6
     644: invokevirtual #147                // Method markWritesBroken:(Ljava/lang/Throwable;)V
     647: aload_0
     648: iconst_0
     649: putfield      #27                 // Field flushingSenders:Z
     652: aload_0
     653: getfield      #5                  // Field newFrames:Ljava/util/Deque;
     656: invokeinterface #132,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
     661: ifne          713
     664: aload_0
     665: new           #148                // class io/undertow/server/protocol/framed/AbstractFramedChannel$4
     668: dup
     669: aload_0
     670: invokespecial #149                // Method io/undertow/server/protocol/framed/AbstractFramedChannel$4."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)V
     673: invokevirtual #150                // Method runInIoThread:(Ljava/lang/Runnable;)V
     676: goto          713
     679: astore        13
     681: aload_0
     682: iconst_0
     683: putfield      #27                 // Field flushingSenders:Z
     686: aload_0
     687: getfield      #5                  // Field newFrames:Ljava/util/Deque;
     690: invokeinterface #132,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z
     695: ifne          710
     698: aload_0
     699: new           #148                // class io/undertow/server/protocol/framed/AbstractFramedChannel$4
     702: dup
     703: aload_0
     704: invokespecial #149                // Method io/undertow/server/protocol/framed/AbstractFramedChannel$4."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)V
     707: invokevirtual #150                // Method runInIoThread:(Ljava/lang/Runnable;)V
     710: aload         13
     712: athrow
     713: return
    Exception table:
       from    to  target type
         172   195   198   Class java/io/IOException
         264   629   632   Class java/io/IOException
          21   213   679   any
         243   647   679   any
         679   681   679   any

  void awaitWritable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #52                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: invokevirtual #167                // Method org/xnio/conduits/ConduitStreamSinkChannel.awaitWritable:()V
      10: return

  void awaitWritable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #52                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: lload_1
       8: aload_3
       9: invokevirtual #168                // Method org/xnio/conduits/ConduitStreamSinkChannel.awaitWritable:(JLjava/util/concurrent/TimeUnit;)V
      12: return

  protected void queueFrame(S) throws java.io.IOException;
    Code:
       0: getstatic     #169                // Field $assertionsDisabled:Z
       3: ifne          27
       6: aload_0
       7: getfield      #5                  // Field newFrames:Ljava/util/Deque;
      10: aload_1
      11: invokeinterface #170,  2          // InterfaceMethod java/util/Deque.contains:(Ljava/lang/Object;)Z
      16: ifeq          27
      19: new           #171                // class java/lang/AssertionError
      22: dup
      23: invokespecial #172                // Method java/lang/AssertionError."<init>":()V
      26: athrow
      27: aload_0
      28: invokevirtual #173                // Method isWritesBroken:()Z
      31: ifne          61
      34: aload_0
      35: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
      38: invokevirtual #52                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      41: invokevirtual #174                // Method org/xnio/conduits/ConduitStreamSinkChannel.isOpen:()Z
      44: ifeq          61
      47: aload_1
      48: invokevirtual #175                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.isBroken:()Z
      51: ifne          61
      54: aload_1
      55: invokevirtual #176                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.isOpen:()Z
      58: ifne          74
      61: aload_1
      62: invokestatic  #110                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      65: getstatic     #45                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      68: invokeinterface #177,  1          // InterfaceMethod io/undertow/UndertowMessages.channelIsClosed:()Ljava/nio/channels/ClosedChannelException;
      73: athrow
      74: aload_0
      75: getfield      #5                  // Field newFrames:Ljava/util/Deque;
      78: aload_1
      79: invokeinterface #139,  2          // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      84: pop
      85: aload_0
      86: getfield      #27                 // Field flushingSenders:Z
      89: ifne          121
      92: aload_1
      93: invokevirtual #178                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.getIoThread:()Lorg/xnio/XnioIoThread;
      96: invokestatic  #179                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      99: if_acmpne     109
     102: aload_0
     103: invokevirtual #134                // Method flushSenders:()V
     106: goto          121
     109: aload_0
     110: new           #180                // class io/undertow/server/protocol/framed/AbstractFramedChannel$5
     113: dup
     114: aload_0
     115: invokespecial #181                // Method io/undertow/server/protocol/framed/AbstractFramedChannel$5."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)V
     118: invokevirtual #150                // Method runInIoThread:(Ljava/lang/Runnable;)V
     121: return

  protected abstract boolean isLastFrameReceived();

  protected abstract boolean isLastFrameSent();

  protected abstract void handleBrokenSourceChannel(java.lang.Throwable);

  protected abstract void handleBrokenSinkChannel(java.lang.Throwable);

  public org.xnio.ChannelListener$Setter<C> getReceiveSetter();
    Code:
       0: aload_0
       1: getfield      #9                  // Field receiveSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  public synchronized void suspendReceives();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #14                 // Field receivesSuspended:Z
       5: aload_0
       6: getfield      #10                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
       9: ifnonnull     22
      12: aload_0
      13: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
      16: invokevirtual #50                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      19: invokevirtual #60                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
      22: return

  public synchronized void resumeReceives();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #14                 // Field receivesSuspended:Z
       5: aload_0
       6: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
       9: ifnull        35
      12: aload_0
      13: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
      16: invokevirtual #96                 // Method io/undertow/util/ReferenceCountedPooled.isFreed:()Z
      19: ifne          35
      22: aload_0
      23: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
      26: invokevirtual #50                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      29: invokevirtual #182                // Method org/xnio/conduits/ConduitStreamSourceChannel.wakeupReads:()V
      32: goto          45
      35: aload_0
      36: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
      39: invokevirtual #50                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      42: invokevirtual #183                // Method org/xnio/conduits/ConduitStreamSourceChannel.resumeReads:()V
      45: return

  public boolean isReceivesResumed();
    Code:
       0: aload_0
       1: getfield      #14                 // Field receivesSuspended:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokestatic  #110                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
       7: aload_0
       8: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
      11: ifnull        26
      14: aload_0
      15: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
      18: invokevirtual #93                 // Method io/undertow/util/ReferenceCountedPooled.close:()V
      21: aload_0
      22: aconst_null
      23: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
      26: return

  public org.xnio.ChannelListener$Setter<? extends io.undertow.server.protocol.framed.AbstractFramedChannel> getCloseSetter();
    Code:
       0: aload_0
       1: getfield      #1                  // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  protected void markReadsBroken(java.lang.Throwable);
    Code:
       0: getstatic     #184                // Field readsBrokenUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iconst_0
       5: iconst_1
       6: invokevirtual #129                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
       9: ifeq          31
      12: aload_0
      13: aload_1
      14: invokevirtual #185                // Method handleBrokenSourceChannel:(Ljava/lang/Throwable;)V
      17: aload_0
      18: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
      21: invokevirtual #50                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      24: invokestatic  #110                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      27: aload_0
      28: invokevirtual #186                // Method closeSubChannels:()V
      31: return

  protected abstract void closeSubChannels();

  protected void markWritesBroken(java.lang.Throwable);
    Code:
       0: getstatic     #187                // Field writesBrokenUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iconst_0
       5: iconst_1
       6: invokevirtual #129                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
       9: ifeq          184
      12: aload_0
      13: aload_1
      14: invokevirtual #188                // Method handleBrokenSinkChannel:(Ljava/lang/Throwable;)V
      17: aload_0
      18: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
      21: invokevirtual #52                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      24: invokestatic  #110                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      27: aload_0
      28: dup
      29: astore_2
      30: monitorenter
      31: aload_0
      32: getfield      #6                  // Field pendingFrames:Ljava/util/List;
      35: invokeinterface #189,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      40: astore_3
      41: aload_3
      42: invokeinterface #190,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          69
      50: aload_3
      51: invokeinterface #191,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #137                // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel
      59: astore        4
      61: aload         4
      63: invokevirtual #192                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.markBroken:()V
      66: goto          41
      69: aload_0
      70: getfield      #6                  // Field pendingFrames:Ljava/util/List;
      73: invokeinterface #193,  1          // InterfaceMethod java/util/List.clear:()V
      78: aload_0
      79: getfield      #5                  // Field newFrames:Ljava/util/Deque;
      82: invokeinterface #194,  1          // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
      87: astore_3
      88: aload_3
      89: invokeinterface #190,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      94: ifeq          116
      97: aload_3
      98: invokeinterface #191,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     103: checkcast     #137                // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel
     106: astore        4
     108: aload         4
     110: invokevirtual #192                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.markBroken:()V
     113: goto          88
     116: aload_0
     117: getfield      #5                  // Field newFrames:Ljava/util/Deque;
     120: invokeinterface #195,  1          // InterfaceMethod java/util/Deque.clear:()V
     125: aload_0
     126: getfield      #4                  // Field heldFrames:Ljava/util/Deque;
     129: invokeinterface #194,  1          // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
     134: astore_3
     135: aload_3
     136: invokeinterface #190,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     141: ifeq          163
     144: aload_3
     145: invokeinterface #191,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     150: checkcast     #137                // class io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel
     153: astore        4
     155: aload         4
     157: invokevirtual #192                // Method io/undertow/server/protocol/framed/AbstractFramedStreamSinkChannel.markBroken:()V
     160: goto          135
     163: aload_0
     164: getfield      #4                  // Field heldFrames:Ljava/util/Deque;
     167: invokeinterface #195,  1          // InterfaceMethod java/util/Deque.clear:()V
     172: aload_2
     173: monitorexit
     174: goto          184
     177: astore        5
     179: aload_2
     180: monitorexit
     181: aload         5
     183: athrow
     184: return
    Exception table:
       from    to  target type
          31   174   177   any
         177   181   177   any

  protected boolean isWritesBroken();
    Code:
       0: getstatic     #187                // Field writesBrokenUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #128                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  protected boolean isReadsBroken();
    Code:
       0: getstatic     #184                // Field readsBrokenUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #128                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  void resumeWrites();
    Code:
       0: aload_0
       1: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #52                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: invokevirtual #163                // Method org/xnio/conduits/ConduitStreamSinkChannel.resumeWrites:()V
      10: return

  void suspendWrites();
    Code:
       0: aload_0
       1: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #52                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: invokevirtual #146                // Method org/xnio/conduits/ConduitStreamSinkChannel.suspendWrites:()V
      10: return

  void wakeupWrites();
    Code:
       0: aload_0
       1: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #52                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: invokevirtual #196                // Method org/xnio/conduits/ConduitStreamSinkChannel.wakeupWrites:()V
      10: return

  org.xnio.channels.StreamSourceChannel getSourceChannel();
    Code:
       0: aload_0
       1: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
       4: invokevirtual #50                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
       7: areturn

  void notifyFrameReadComplete(io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel<C, R, S>);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: invokevirtual #92                 // Method isLastFrameReceived:()Z
       8: ifeq          21
      11: aload_0
      12: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
      15: invokevirtual #50                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      18: invokestatic  #110                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      21: aload_2
      22: monitorexit
      23: goto          31
      26: astore_3
      27: aload_2
      28: monitorexit
      29: aload_3
      30: athrow
      31: return
    Exception table:
       from    to  target type
           4    23    26   any
          26    29    26   any

  void notifyClosed(io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel<C, R, S>);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #3                  // Field receivers:Ljava/util/Set;
       8: aload_1
       9: invokeinterface #197,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      14: pop
      15: aload_2
      16: monitorexit
      17: goto          25
      20: astore_3
      21: aload_2
      22: monitorexit
      23: aload_3
      24: athrow
      25: return
    Exception table:
       from    to  target type
           4    17    20   any
          20    23    20   any

  public void setIdleTimeout(long);
    Code:
       0: aload_0
       1: getfield      #54                 // Field idleTimeoutConduit:Lio/undertow/conduits/IdleTimeoutConduit;
       4: lload_1
       5: invokevirtual #198                // Method io/undertow/conduits/IdleTimeoutConduit.setIdleTimeout:(J)V
       8: return

  public long getIdleTimeout();
    Code:
       0: aload_0
       1: getfield      #54                 // Field idleTimeoutConduit:Lio/undertow/conduits/IdleTimeoutConduit;
       4: invokevirtual #199                // Method io/undertow/conduits/IdleTimeoutConduit.getIdleTimeout:()J
       7: lreturn

  protected io.undertow.server.protocol.framed.FramePriority<C, R, S> getFramePriority();
    Code:
       0: aload_0
       1: getfield      #36                 // Field framePriority:Lio/undertow/server/protocol/framed/FramePriority;
       4: areturn

  public void addCloseTask(org.xnio.ChannelListener<C>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field closeTasks:Ljava/util/List;
       4: aload_1
       5: invokeinterface #200,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public java.lang.String toString();
    Code:
       0: new           #201                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #202                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #203                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #204                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      14: invokevirtual #205                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #206                // String  peer
      19: invokevirtual #205                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
      26: invokevirtual #87                 // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
      29: invokevirtual #207                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      32: ldc           #208                // String  local
      34: invokevirtual #205                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
      41: invokevirtual #79                 // Method org/xnio/StreamConnection.getLocalAddress:()Ljava/net/SocketAddress;
      44: invokevirtual #207                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      47: ldc           #209                // String [
      49: invokevirtual #205                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_0
      53: getfield      #10                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
      56: ifnonnull     64
      59: ldc           #210                // String No Receiver
      61: goto          71
      64: aload_0
      65: getfield      #10                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
      68: invokevirtual #211                // Method java/lang/Object.toString:()Ljava/lang/String;
      71: invokevirtual #205                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: ldc           #212                // String
      76: invokevirtual #205                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_0
      80: getfield      #6                  // Field pendingFrames:Ljava/util/List;
      83: invokevirtual #211                // Method java/lang/Object.toString:()Ljava/lang/String;
      86: invokevirtual #205                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: ldc           #213                // String  --
      91: invokevirtual #205                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_0
      95: getfield      #4                  // Field heldFrames:Ljava/util/Deque;
      98: invokevirtual #211                // Method java/lang/Object.toString:()Ljava/lang/String;
     101: invokevirtual #205                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: ldc           #213                // String  --
     106: invokevirtual #205                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload_0
     110: getfield      #5                  // Field newFrames:Ljava/util/Deque;
     113: invokevirtual #211                // Method java/lang/Object.toString:()Ljava/lang/String;
     116: invokevirtual #205                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: ldc           #214                // String ]
     121: invokevirtual #205                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: invokevirtual #215                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: areturn

  protected org.xnio.StreamConnection getUnderlyingConnection();
    Code:
       0: aload_0
       1: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
       4: areturn

  protected org.xnio.ChannelExceptionHandler<org.xnio.channels.SuspendableWriteChannel> writeExceptionHandler();
    Code:
       0: new           #216                // class io/undertow/server/protocol/framed/AbstractFramedChannel$6
       3: dup
       4: aload_0
       5: invokespecial #217                // Method io/undertow/server/protocol/framed/AbstractFramedChannel$6."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedChannel;)V
       8: areturn

  protected org.xnio.OptionMap getSettings();
    Code:
       0: aload_0
       1: getfield      #39                 // Field settings:Lorg/xnio/OptionMap;
       4: areturn

  static java.util.concurrent.atomic.AtomicIntegerFieldUpdater access$000(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #15                 // Field outstandingBuffersUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       4: areturn

  static boolean access$100(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #14                 // Field receivesSuspended:Z
       4: ireturn

  static int access$200(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #13                 // Field maxQueuedBuffers:I
       4: ireturn

  static org.xnio.StreamConnection access$300(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #12                 // Field channel:Lorg/xnio/StreamConnection;
       4: areturn

  static java.util.concurrent.LinkedBlockingDeque access$700(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #11                 // Field taskRunQueue:Ljava/util/concurrent/LinkedBlockingDeque;
       4: areturn

  static io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel access$800(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #10                 // Field receiver:Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;
       4: areturn

  static org.xnio.ChannelListener$SimpleSetter access$900(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #9                  // Field receiveSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  static org.xnio.ChannelListener access$1000();
    Code:
       0: getstatic     #8                  // Field DRAIN_LISTENER:Lorg/xnio/ChannelListener;
       3: areturn

  static io.undertow.util.ReferenceCountedPooled access$1100(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
       4: areturn

  static java.util.List access$1200(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #6                  // Field pendingFrames:Ljava/util/List;
       4: areturn

  static java.util.Deque access$1300(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #5                  // Field newFrames:Ljava/util/Deque;
       4: areturn

  static java.util.Deque access$1400(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #4                  // Field heldFrames:Ljava/util/Deque;
       4: areturn

  static java.util.Set access$1500(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #3                  // Field receivers:Ljava/util/Set;
       4: areturn

  static java.util.List access$1600(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #2                  // Field closeTasks:Ljava/util/List;
       4: areturn

  static io.undertow.util.ReferenceCountedPooled access$1102(io.undertow.server.protocol.framed.AbstractFramedChannel, io.undertow.util.ReferenceCountedPooled);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #7                  // Field readData:Lio/undertow/util/ReferenceCountedPooled;
       6: areturn

  static org.xnio.ChannelListener$SimpleSetter access$1700(io.undertow.server.protocol.framed.AbstractFramedChannel);
    Code:
       0: aload_0
       1: getfield      #1                  // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  static {};
    Code:
       0: ldc           #30                 // class io/undertow/server/protocol/framed/AbstractFramedChannel
       2: invokevirtual #218                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #169                // Field $assertionsDisabled:Z
      16: ldc           #30                 // class io/undertow/server/protocol/framed/AbstractFramedChannel
      18: ldc           #219                // String readsBroken
      20: invokestatic  #32                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      23: putstatic     #184                // Field readsBrokenUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      26: ldc           #30                 // class io/undertow/server/protocol/framed/AbstractFramedChannel
      28: ldc           #220                // String writesBroken
      30: invokestatic  #32                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      33: putstatic     #187                // Field writesBrokenUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      36: new           #221                // class io/undertow/server/protocol/framed/AbstractFramedChannel$2
      39: dup
      40: invokespecial #222                // Method io/undertow/server/protocol/framed/AbstractFramedChannel$2."<init>":()V
      43: putstatic     #8                  // Field DRAIN_LISTENER:Lorg/xnio/ChannelListener;
      46: return
}
