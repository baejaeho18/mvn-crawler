Compiled from "Http2ClientExchange.java"
public class io.undertow.client.http2.Http2ClientExchange extends io.undertow.util.AbstractAttachable implements io.undertow.client.ClientExchange {
  private io.undertow.client.ClientCallback<io.undertow.client.ClientExchange> responseListener;

  private io.undertow.client.ContinueNotification continueNotification;

  private io.undertow.protocols.http2.Http2StreamSourceChannel response;

  private io.undertow.client.ClientResponse clientResponse;

  private io.undertow.client.ClientResponse continueResponse;

  private final io.undertow.client.ClientConnection clientConnection;

  private final io.undertow.protocols.http2.Http2StreamSinkChannel request;

  private final io.undertow.client.ClientRequest clientRequest;

  private java.io.IOException failedReason;

  private io.undertow.client.PushCallback pushCallback;

  public io.undertow.client.http2.Http2ClientExchange(io.undertow.client.ClientConnection, io.undertow.protocols.http2.Http2StreamSinkChannel, io.undertow.client.ClientRequest);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/undertow/util/AbstractAttachable."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field clientConnection:Lio/undertow/client/ClientConnection;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field request:Lio/undertow/protocols/http2/Http2StreamSinkChannel;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field clientRequest:Lio/undertow/client/ClientRequest;
      19: return

  public void setResponseListener(io.undertow.client.ClientCallback<io.undertow.client.ClientExchange>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field responseListener:Lio/undertow/client/ClientCallback;
       5: aload_0
       6: getfield      #6                  // Field failedReason:Ljava/io/IOException;
       9: ifnull        22
      12: aload_1
      13: aload_0
      14: getfield      #6                  // Field failedReason:Ljava/io/IOException;
      17: invokeinterface #7,  2            // InterfaceMethod io/undertow/client/ClientCallback.failed:(Ljava/io/IOException;)V
      22: return

  public void setContinueHandler(io.undertow.client.ContinueNotification);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field continueNotification:Lio/undertow/client/ContinueNotification;
       5: return

  void setContinueResponse(io.undertow.client.ClientResponse);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field continueResponse:Lio/undertow/client/ClientResponse;
       5: aload_0
       6: getfield      #8                  // Field continueNotification:Lio/undertow/client/ContinueNotification;
       9: ifnull        22
      12: aload_0
      13: getfield      #8                  // Field continueNotification:Lio/undertow/client/ContinueNotification;
      16: aload_0
      17: invokeinterface #10,  2           // InterfaceMethod io/undertow/client/ContinueNotification.handleContinue:(Lio/undertow/client/ClientExchange;)V
      22: return

  public void setPushHandler(io.undertow.client.PushCallback);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field pushCallback:Lio/undertow/client/PushCallback;
       5: return

  io.undertow.client.PushCallback getPushCallback();
    Code:
       0: aload_0
       1: getfield      #11                 // Field pushCallback:Lio/undertow/client/PushCallback;
       4: areturn

  public org.xnio.channels.StreamSinkChannel getRequestChannel();
    Code:
       0: aload_0
       1: getfield      #3                  // Field request:Lio/undertow/protocols/http2/Http2StreamSinkChannel;
       4: areturn

  public org.xnio.channels.StreamSourceChannel getResponseChannel();
    Code:
       0: aload_0
       1: getfield      #12                 // Field response:Lio/undertow/protocols/http2/Http2StreamSourceChannel;
       4: areturn

  public io.undertow.client.ClientRequest getRequest();
    Code:
       0: aload_0
       1: getfield      #4                  // Field clientRequest:Lio/undertow/client/ClientRequest;
       4: areturn

  public io.undertow.client.ClientResponse getResponse();
    Code:
       0: aload_0
       1: getfield      #13                 // Field clientResponse:Lio/undertow/client/ClientResponse;
       4: areturn

  public io.undertow.client.ClientResponse getContinueResponse();
    Code:
       0: aload_0
       1: getfield      #9                  // Field continueResponse:Lio/undertow/client/ClientResponse;
       4: areturn

  public io.undertow.client.ClientConnection getConnection();
    Code:
       0: aload_0
       1: getfield      #2                  // Field clientConnection:Lio/undertow/client/ClientConnection;
       4: areturn

  void failed(java.io.IOException);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field failedReason:Ljava/io/IOException;
       5: aload_0
       6: getfield      #5                  // Field responseListener:Lio/undertow/client/ClientCallback;
       9: ifnull        22
      12: aload_0
      13: getfield      #5                  // Field responseListener:Lio/undertow/client/ClientCallback;
      16: aload_1
      17: invokeinterface #7,  2            // InterfaceMethod io/undertow/client/ClientCallback.failed:(Ljava/io/IOException;)V
      22: return

  void responseReady(io.undertow.protocols.http2.Http2StreamSourceChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field response:Lio/undertow/protocols/http2/Http2StreamSourceChannel;
       5: aload_0
       6: aload_1
       7: invokevirtual #14                 // Method createResponse:(Lio/undertow/protocols/http2/Http2StreamSourceChannel;)Lio/undertow/client/ClientResponse;
      10: astore_2
      11: aload_0
      12: aload_2
      13: putfield      #13                 // Field clientResponse:Lio/undertow/client/ClientResponse;
      16: aload_0
      17: getfield      #5                  // Field responseListener:Lio/undertow/client/ClientCallback;
      20: ifnull        33
      23: aload_0
      24: getfield      #5                  // Field responseListener:Lio/undertow/client/ClientCallback;
      27: aload_0
      28: invokeinterface #15,  2           // InterfaceMethod io/undertow/client/ClientCallback.completed:(Ljava/lang/Object;)V
      33: return

  io.undertow.client.ClientResponse createResponse(io.undertow.protocols.http2.Http2StreamSourceChannel);
    Code:
       0: aload_1
       1: invokevirtual #16                 // Method io/undertow/protocols/http2/Http2StreamSourceChannel.getHeaders:()Lio/undertow/util/HeaderMap;
       4: astore_2
       5: aload_1
       6: invokevirtual #16                 // Method io/undertow/protocols/http2/Http2StreamSourceChannel.getHeaders:()Lio/undertow/util/HeaderMap;
       9: getstatic     #17                 // Field io/undertow/client/http2/Http2ClientConnection.STATUS:Lio/undertow/util/HttpString;
      12: invokevirtual #18                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      15: astore_3
      16: aload_3
      17: invokestatic  #19                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      20: istore        4
      22: aload_2
      23: getstatic     #17                 // Field io/undertow/client/http2/Http2ClientConnection.STATUS:Lio/undertow/util/HttpString;
      26: invokevirtual #20                 // Method io/undertow/util/HeaderMap.remove:(Lio/undertow/util/HttpString;)Ljava/util/Collection;
      29: pop
      30: new           #21                 // class io/undertow/client/ClientResponse
      33: dup
      34: iload         4
      36: aload_3
      37: ifnull        48
      40: aload_3
      41: iconst_3
      42: invokevirtual #22                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      45: goto          50
      48: ldc           #23                 // String
      50: aload_0
      51: getfield      #4                  // Field clientRequest:Lio/undertow/client/ClientRequest;
      54: invokevirtual #24                 // Method io/undertow/client/ClientRequest.getProtocol:()Lio/undertow/util/HttpString;
      57: aload_2
      58: invokespecial #25                 // Method io/undertow/client/ClientResponse."<init>":(ILjava/lang/String;Lio/undertow/util/HttpString;Lio/undertow/util/HeaderMap;)V
      61: areturn
}
