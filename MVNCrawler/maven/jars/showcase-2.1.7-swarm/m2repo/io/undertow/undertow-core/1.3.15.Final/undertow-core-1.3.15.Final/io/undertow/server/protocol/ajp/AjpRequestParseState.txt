Compiled from "AjpRequestParseState.java"
class io.undertow.server.protocol.ajp.AjpRequestParseState {
  public static final int BEGIN;

  public static final int READING_MAGIC_NUMBER;

  public static final int READING_DATA_SIZE;

  public static final int READING_PREFIX_CODE;

  public static final int READING_METHOD;

  public static final int READING_PROTOCOL;

  public static final int READING_REQUEST_URI;

  public static final int READING_REMOTE_ADDR;

  public static final int READING_REMOTE_HOST;

  public static final int READING_SERVER_NAME;

  public static final int READING_SERVER_PORT;

  public static final int READING_IS_SSL;

  public static final int READING_NUM_HEADERS;

  public static final int READING_HEADERS;

  public static final int READING_ATTRIBUTES;

  public static final int DONE;

  int state;

  byte prefix;

  int dataSize;

  int numHeaders;

  io.undertow.util.HttpString currentHeader;

  java.lang.String currentAttribute;

  java.util.Map<java.lang.String, java.lang.String> attributes;

  java.lang.String remoteAddress;

  int remotePort;

  int serverPort;

  java.lang.String serverAddress;

  public int stringLength;

  private byte[] currentString;

  private int currentStringLength;

  public int currentIntegerPart;

  boolean containsUrlCharacters;

  public int readHeaders;

  public java.lang.String sslSessionId;

  public java.lang.String sslCipher;

  public java.lang.String sslCert;

  public java.lang.String sslKeySize;

  io.undertow.server.protocol.ajp.AjpRequestParseState();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field numHeaders:I
       9: aload_0
      10: iconst_m1
      11: putfield      #3                  // Field remotePort:I
      14: aload_0
      15: bipush        80
      17: putfield      #4                  // Field serverPort:I
      20: aload_0
      21: iconst_m1
      22: putfield      #5                  // Field stringLength:I
      25: aload_0
      26: bipush        16
      28: newarray       byte
      30: putfield      #6                  // Field currentString:[B
      33: aload_0
      34: iconst_0
      35: putfield      #7                  // Field currentStringLength:I
      38: aload_0
      39: iconst_m1
      40: putfield      #8                  // Field currentIntegerPart:I
      43: aload_0
      44: iconst_0
      45: putfield      #9                  // Field containsUrlCharacters:Z
      48: aload_0
      49: iconst_0
      50: putfield      #10                 // Field readHeaders:I
      53: return

  public void reset();
    Code:
       0: aload_0
       1: iconst_m1
       2: putfield      #5                  // Field stringLength:I
       5: aload_0
       6: iconst_0
       7: putfield      #7                  // Field currentStringLength:I
      10: aload_0
      11: iconst_m1
      12: putfield      #8                  // Field currentIntegerPart:I
      15: aload_0
      16: iconst_0
      17: putfield      #10                 // Field readHeaders:I
      20: return

  public boolean isComplete();
    Code:
       0: aload_0
       1: getfield      #11                 // Field state:I
       4: bipush        15
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  io.undertow.server.BasicSSLSessionInfo createSslSessionInfo();
    Code:
       0: aload_0
       1: getfield      #12                 // Field sslSessionId:Ljava/lang/String;
       4: astore_1
       5: aload_0
       6: getfield      #13                 // Field sslCipher:Ljava/lang/String;
       9: astore_2
      10: aload_0
      11: getfield      #14                 // Field sslCert:Ljava/lang/String;
      14: astore_3
      15: aload_3
      16: ifnonnull     25
      19: aload_1
      20: ifnonnull     25
      23: aconst_null
      24: areturn
      25: new           #15                 // class io/undertow/server/BasicSSLSessionInfo
      28: dup
      29: aload_1
      30: aload_2
      31: aload_3
      32: invokespecial #16                 // Method io/undertow/server/BasicSSLSessionInfo."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      35: areturn
      36: astore        4
      38: aconst_null
      39: areturn
      40: astore        4
      42: aconst_null
      43: areturn
    Exception table:
       from    to  target type
          25    35    36   Class java/security/cert/CertificateException
          25    35    40   Class javax/security/cert/CertificateException

  java.net.InetSocketAddress createPeerAddress();
    Code:
       0: aload_0
       1: getfield      #19                 // Field remoteAddress:Ljava/lang/String;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #3                  // Field remotePort:I
      13: ifle          23
      16: aload_0
      17: getfield      #3                  // Field remotePort:I
      20: goto          24
      23: iconst_0
      24: istore_1
      25: aload_0
      26: getfield      #19                 // Field remoteAddress:Ljava/lang/String;
      29: invokestatic  #20                 // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
      32: astore_2
      33: new           #21                 // class java/net/InetSocketAddress
      36: dup
      37: aload_2
      38: iload_1
      39: invokespecial #22                 // Method java/net/InetSocketAddress."<init>":(Ljava/net/InetAddress;I)V
      42: areturn
      43: astore_2
      44: aconst_null
      45: areturn
    Exception table:
       from    to  target type
          25    42    43   Class java/net/UnknownHostException

  java.net.InetSocketAddress createDestinationAddress();
    Code:
       0: aload_0
       1: getfield      #24                 // Field serverAddress:Ljava/lang/String;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #24                 // Field serverAddress:Ljava/lang/String;
      13: aload_0
      14: getfield      #4                  // Field serverPort:I
      17: invokestatic  #25                 // Method java/net/InetSocketAddress.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;
      20: areturn

  public void addStringByte(byte);
    Code:
       0: aload_0
       1: getfield      #6                  // Field currentString:[B
       4: arraylength
       5: aload_0
       6: getfield      #7                  // Field currentStringLength:I
       9: if_icmpne     44
      12: aload_0
      13: getfield      #6                  // Field currentString:[B
      16: astore_2
      17: aload_0
      18: aload_0
      19: getfield      #7                  // Field currentStringLength:I
      22: bipush        16
      24: iadd
      25: newarray       byte
      27: putfield      #6                  // Field currentString:[B
      30: aload_2
      31: iconst_0
      32: aload_0
      33: getfield      #6                  // Field currentString:[B
      36: iconst_0
      37: aload_0
      38: getfield      #7                  // Field currentStringLength:I
      41: invokestatic  #26                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      44: aload_0
      45: getfield      #6                  // Field currentString:[B
      48: aload_0
      49: dup
      50: getfield      #7                  // Field currentStringLength:I
      53: dup_x1
      54: iconst_1
      55: iadd
      56: putfield      #7                  // Field currentStringLength:I
      59: iload_1
      60: bastore
      61: return

  public java.lang.String getStringAndClear(java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: new           #27                 // class java/lang/String
       3: dup
       4: aload_0
       5: getfield      #6                  // Field currentString:[B
       8: iconst_0
       9: aload_0
      10: getfield      #7                  // Field currentStringLength:I
      13: aload_1
      14: invokespecial #28                 // Method java/lang/String."<init>":([BIILjava/lang/String;)V
      17: astore_2
      18: aload_0
      19: iconst_0
      20: putfield      #7                  // Field currentStringLength:I
      23: aload_2
      24: areturn

  public int getCurrentStringLength();
    Code:
       0: aload_0
       1: getfield      #7                  // Field currentStringLength:I
       4: ireturn
}
