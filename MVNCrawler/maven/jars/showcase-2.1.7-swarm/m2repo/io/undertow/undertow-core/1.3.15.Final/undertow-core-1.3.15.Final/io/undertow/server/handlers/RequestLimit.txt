Compiled from "RequestLimit.java"
public class io.undertow.server.handlers.RequestLimit {
  private volatile long state;

  private static final java.util.concurrent.atomic.AtomicLongFieldUpdater<io.undertow.server.handlers.RequestLimit> stateUpdater;

  private static final long MASK_MAX;

  private static final long MASK_CURRENT;

  private volatile io.undertow.server.HttpHandler failureHandler;

  private final java.util.Queue<io.undertow.server.handlers.RequestLimit$SuspendedRequest> queue;

  private final io.undertow.server.ExchangeCompletionListener COMPLETION_LISTENER;

  public io.undertow.server.handlers.RequestLimit(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_m1
       3: invokespecial #5                  // Method "<init>":(II)V
       6: return

  public io.undertow.server.handlers.RequestLimit(int, int);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class io/undertow/server/handlers/ResponseCodeHandler
       8: dup
       9: sipush        513
      12: invokespecial #8                  // Method io/undertow/server/handlers/ResponseCodeHandler."<init>":(I)V
      15: putfield      #1                  // Field failureHandler:Lio/undertow/server/HttpHandler;
      18: aload_0
      19: new           #9                  // class io/undertow/server/handlers/RequestLimit$1
      22: dup
      23: aload_0
      24: invokespecial #10                 // Method io/undertow/server/handlers/RequestLimit$1."<init>":(Lio/undertow/server/handlers/RequestLimit;)V
      27: putfield      #3                  // Field COMPLETION_LISTENER:Lio/undertow/server/ExchangeCompletionListener;
      30: iload_1
      31: iconst_1
      32: if_icmpge     45
      35: new           #11                 // class java/lang/IllegalArgumentException
      38: dup
      39: ldc           #12                 // String Maximum concurrent requests must be at least 1
      41: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: iload_1
      47: i2l
      48: ldc2_w        #14                 // long 4294967295l
      51: land
      52: bipush        32
      54: lshl
      55: putfield      #16                 // Field state:J
      58: aload_0
      59: new           #17                 // class java/util/concurrent/LinkedBlockingQueue
      62: dup
      63: iload_2
      64: ifgt          72
      67: ldc           #19                 // int 2147483647
      69: goto          73
      72: iload_2
      73: invokespecial #20                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
      76: putfield      #4                  // Field queue:Ljava/util/Queue;
      79: return

  public void handleRequest(io.undertow.server.HttpServerExchange, io.undertow.server.HttpHandler) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #16                 // Field state:J
       4: lstore_3
       5: lload_3
       6: getstatic     #21                 // Field MASK_CURRENT:J
       9: land
      10: lstore        7
      12: lload_3
      13: getstatic     #22                 // Field MASK_MAX:J
      16: land
      17: bipush        32
      19: lshr
      20: lstore        9
      22: lload         7
      24: lload         9
      26: lcmp
      27: iflt          49
      30: aload_1
      31: getstatic     #23                 // Field io/undertow/util/SameThreadExecutor.INSTANCE:Ljava/util/concurrent/Executor;
      34: new           #24                 // class io/undertow/server/handlers/RequestLimit$2
      37: dup
      38: aload_0
      39: aload_1
      40: aload_2
      41: invokespecial #25                 // Method io/undertow/server/handlers/RequestLimit$2."<init>":(Lio/undertow/server/handlers/RequestLimit;Lio/undertow/server/HttpServerExchange;Lio/undertow/server/HttpHandler;)V
      44: invokevirtual #26                 // Method io/undertow/server/HttpServerExchange.dispatch:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)Lio/undertow/server/HttpServerExchange;
      47: pop
      48: return
      49: lload_3
      50: lconst_1
      51: ladd
      52: lstore        5
      54: getstatic     #27                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      57: aload_0
      58: lload_3
      59: lload         5
      61: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.compareAndSet:(Ljava/lang/Object;JJ)Z
      64: ifeq          0
      67: aload_1
      68: aload_0
      69: getfield      #3                  // Field COMPLETION_LISTENER:Lio/undertow/server/ExchangeCompletionListener;
      72: invokevirtual #29                 // Method io/undertow/server/HttpServerExchange.addExchangeCompleteListener:(Lio/undertow/server/ExchangeCompletionListener;)Lio/undertow/server/HttpServerExchange;
      75: pop
      76: aload_2
      77: aload_1
      78: invokeinterface #30,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
      83: return

  public int getMaximumConcurrentRequests();
    Code:
       0: aload_0
       1: getfield      #16                 // Field state:J
       4: bipush        32
       6: lshr
       7: l2i
       8: ireturn

  public int setMaximumConcurrentRequests(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpge     15
       5: new           #11                 // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #12                 // String Maximum concurrent requests must be at least 1
      11: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: getfield      #16                 // Field state:J
      19: lstore_2
      20: lload_2
      21: getstatic     #21                 // Field MASK_CURRENT:J
      24: land
      25: l2i
      26: istore        6
      28: lload_2
      29: getstatic     #22                 // Field MASK_MAX:J
      32: land
      33: bipush        32
      35: lshr
      36: l2i
      37: istore        7
      39: iload         6
      41: i2l
      42: iload_1
      43: i2l
      44: ldc2_w        #31                 // long -4294967296l
      47: land
      48: lor
      49: lstore        4
      51: getstatic     #27                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      54: aload_0
      55: lload_2
      56: lload         4
      58: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.compareAndSet:(Ljava/lang/Object;JJ)Z
      61: ifeq          15
      64: iload         6
      66: iload_1
      67: if_icmpge     124
      70: aload_0
      71: getfield      #4                  // Field queue:Ljava/util/Queue;
      74: invokeinterface #33,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      79: checkcast     #34                 // class io/undertow/server/handlers/RequestLimit$SuspendedRequest
      82: astore        8
      84: aload         8
      86: ifnull        121
      89: getstatic     #27                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      92: aload_0
      93: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.getAndIncrement:(Ljava/lang/Object;)J
      96: lstore        4
      98: lload         4
     100: getstatic     #21                 // Field MASK_CURRENT:J
     103: land
     104: l2i
     105: istore        6
     107: aload         8
     109: getfield      #36                 // Field io/undertow/server/handlers/RequestLimit$SuspendedRequest.exchange:Lio/undertow/server/HttpServerExchange;
     112: aload         8
     114: getfield      #37                 // Field io/undertow/server/handlers/RequestLimit$SuspendedRequest.next:Lio/undertow/server/HttpHandler;
     117: invokevirtual #38                 // Method io/undertow/server/HttpServerExchange.dispatch:(Lio/undertow/server/HttpHandler;)Lio/undertow/server/HttpServerExchange;
     120: pop
     121: goto          64
     124: iload         7
     126: ireturn

  private void decrementRequests();
    Code:
       0: getstatic     #27                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       3: aload_0
       4: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.decrementAndGet:(Ljava/lang/Object;)J
       7: pop2
       8: return

  public io.undertow.server.HttpHandler getFailureHandler();
    Code:
       0: aload_0
       1: getfield      #1                  // Field failureHandler:Lio/undertow/server/HttpHandler;
       4: areturn

  public void setFailureHandler(io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field failureHandler:Lio/undertow/server/HttpHandler;
       5: return

  static java.util.Queue access$000(io.undertow.server.handlers.RequestLimit);
    Code:
       0: aload_0
       1: getfield      #4                  // Field queue:Ljava/util/Queue;
       4: areturn

  static io.undertow.server.ExchangeCompletionListener access$100(io.undertow.server.handlers.RequestLimit);
    Code:
       0: aload_0
       1: getfield      #3                  // Field COMPLETION_LISTENER:Lio/undertow/server/ExchangeCompletionListener;
       4: areturn

  static void access$200(io.undertow.server.handlers.RequestLimit);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method decrementRequests:()V
       4: return

  static io.undertow.server.HttpHandler access$400(io.undertow.server.handlers.RequestLimit);
    Code:
       0: aload_0
       1: getfield      #1                  // Field failureHandler:Lio/undertow/server/HttpHandler;
       4: areturn

  static {};
    Code:
       0: ldc           #40                 // class io/undertow/server/handlers/RequestLimit
       2: ldc           #41                 // String state
       4: invokestatic  #42                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       7: putstatic     #27                 // Field stateUpdater:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: bipush        32
      12: bipush        63
      14: invokestatic  #43                 // Method org/xnio/Bits.longBitMask:(II)J
      17: putstatic     #22                 // Field MASK_MAX:J
      20: iconst_0
      21: bipush        30
      23: invokestatic  #43                 // Method org/xnio/Bits.longBitMask:(II)J
      26: putstatic     #21                 // Field MASK_CURRENT:J
      29: return
}
