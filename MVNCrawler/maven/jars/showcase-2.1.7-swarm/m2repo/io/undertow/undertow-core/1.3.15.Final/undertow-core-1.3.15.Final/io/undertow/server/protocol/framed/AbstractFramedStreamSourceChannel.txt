Compiled from "AbstractFramedStreamSourceChannel.java"
public abstract class io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel<C extends io.undertow.server.protocol.framed.AbstractFramedChannel<C, R, S>, R extends io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel<C, R, S>, S extends io.undertow.server.protocol.framed.AbstractFramedStreamSinkChannel<C, R, S>> implements org.xnio.channels.StreamSourceChannel {
  private final org.xnio.ChannelListener$SimpleSetter<? extends R> readSetter;

  private final org.xnio.ChannelListener$SimpleSetter<? extends R> closeSetter;

  private final C framedChannel;

  private final java.util.Deque<io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel<C, R, S>.FrameData> pendingFrameData;

  private int state;

  private static final int STATE_DONE;

  private static final int STATE_READS_RESUMED;

  private static final int STATE_CLOSED;

  private static final int STATE_LAST_FRAME;

  private static final int STATE_IN_LISTENER_LOOP;

  private static final int STATE_STREAM_BROKEN;

  private static final int STATE_RETURNED_MINUS_ONE;

  private static final int STATE_WAITNG_MINUS_ONE;

  private io.undertow.connector.PooledByteBuffer data;

  private int currentDataOriginalSize;

  private long frameDataRemaining;

  private final java.lang.Object lock;

  private int waiters;

  private volatile boolean waitingForFrame;

  private int readFrameCount;

  private long maxStreamSize;

  private long currentStreamSize;

  private org.xnio.ChannelListener[] closeListeners;

  public io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel(C);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class org/xnio/ChannelListener$SimpleSetter
       8: dup
       9: invokespecial #8                  // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
      12: putfield      #9                  // Field readSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      15: aload_0
      16: new           #7                  // class org/xnio/ChannelListener$SimpleSetter
      19: dup
      20: invokespecial #8                  // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
      23: putfield      #10                 // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      26: aload_0
      27: new           #11                 // class java/util/LinkedList
      30: dup
      31: invokespecial #12                 // Method java/util/LinkedList."<init>":()V
      34: putfield      #2                  // Field pendingFrameData:Ljava/util/Deque;
      37: aload_0
      38: iconst_0
      39: putfield      #1                  // Field state:I
      42: aload_0
      43: new           #13                 // class java/lang/Object
      46: dup
      47: invokespecial #6                  // Method java/lang/Object."<init>":()V
      50: putfield      #14                 // Field lock:Ljava/lang/Object;
      53: aload_0
      54: iconst_0
      55: putfield      #15                 // Field readFrameCount:I
      58: aload_0
      59: ldc2_w        #16                 // long -1l
      62: putfield      #18                 // Field maxStreamSize:J
      65: aload_0
      66: aconst_null
      67: putfield      #19                 // Field closeListeners:[Lorg/xnio/ChannelListener;
      70: aload_0
      71: aload_1
      72: putfield      #20                 // Field framedChannel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      75: aload_0
      76: iconst_1
      77: putfield      #21                 // Field waitingForFrame:Z
      80: return

  public io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel(C, io.undertow.connector.PooledByteBuffer, long);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class org/xnio/ChannelListener$SimpleSetter
       8: dup
       9: invokespecial #8                  // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
      12: putfield      #9                  // Field readSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      15: aload_0
      16: new           #7                  // class org/xnio/ChannelListener$SimpleSetter
      19: dup
      20: invokespecial #8                  // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
      23: putfield      #10                 // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      26: aload_0
      27: new           #11                 // class java/util/LinkedList
      30: dup
      31: invokespecial #12                 // Method java/util/LinkedList."<init>":()V
      34: putfield      #2                  // Field pendingFrameData:Ljava/util/Deque;
      37: aload_0
      38: iconst_0
      39: putfield      #1                  // Field state:I
      42: aload_0
      43: new           #13                 // class java/lang/Object
      46: dup
      47: invokespecial #6                  // Method java/lang/Object."<init>":()V
      50: putfield      #14                 // Field lock:Ljava/lang/Object;
      53: aload_0
      54: iconst_0
      55: putfield      #15                 // Field readFrameCount:I
      58: aload_0
      59: ldc2_w        #16                 // long -1l
      62: putfield      #18                 // Field maxStreamSize:J
      65: aload_0
      66: aconst_null
      67: putfield      #19                 // Field closeListeners:[Lorg/xnio/ChannelListener;
      70: aload_0
      71: aload_1
      72: putfield      #20                 // Field framedChannel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      75: aload_0
      76: aload_2
      77: ifnonnull     90
      80: lload_3
      81: lconst_0
      82: lcmp
      83: ifgt          90
      86: iconst_1
      87: goto          91
      90: iconst_0
      91: putfield      #21                 // Field waitingForFrame:Z
      94: aload_0
      95: lload_3
      96: putfield      #4                  // Field frameDataRemaining:J
      99: aload_0
     100: lload_3
     101: putfield      #22                 // Field currentStreamSize:J
     104: aload_2
     105: ifnull        155
     108: aload_2
     109: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     114: invokevirtual #24                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     117: ifne          149
     120: aload_2
     121: invokeinterface #25,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     126: aload_0
     127: aconst_null
     128: putfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     131: aload_0
     132: lload_3
     133: lconst_0
     134: lcmp
     135: ifgt          142
     138: iconst_1
     139: goto          143
     142: iconst_0
     143: putfield      #21                 // Field waitingForFrame:Z
     146: goto          155
     149: aload_0
     150: aconst_null
     151: aload_2
     152: invokevirtual #26                 // Method dataReady:(Lio/undertow/server/protocol/framed/FrameHeaderData;Lio/undertow/connector/PooledByteBuffer;)V
     155: return

  public long transferTo(long, long, java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field state:I
       4: iconst_2
       5: invokestatic  #28                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          15
      11: ldc2_w        #16                 // long -1l
      14: lreturn
      15: aload_0
      16: invokespecial #29                 // Method beforeRead:()V
      19: aload_0
      20: getfield      #21                 // Field waitingForFrame:Z
      23: ifeq          28
      26: lconst_0
      27: lreturn
      28: aload_0
      29: getfield      #4                  // Field frameDataRemaining:J
      32: lconst_0
      33: lcmp
      34: ifne          73
      37: aload_0
      38: getfield      #1                  // Field state:I
      41: bipush        16
      43: invokestatic  #28                 // Method org/xnio/Bits.anyAreSet:(II)Z
      46: ifeq          73
      49: aload_0
      50: dup
      51: getfield      #1                  // Field state:I
      54: sipush        128
      57: ior
      58: putfield      #1                  // Field state:I
      61: ldc2_w        #16                 // long -1l
      64: lstore        6
      66: aload_0
      67: invokespecial #30                 // Method exitRead:()V
      70: lload         6
      72: lreturn
      73: aload_0
      74: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      77: ifnull        209
      80: aload_0
      81: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      84: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      89: invokevirtual #31                 // Method java/nio/ByteBuffer.limit:()I
      92: istore        6
      94: lload_3
      95: aload_0
      96: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      99: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     104: invokevirtual #32                 // Method java/nio/ByteBuffer.remaining:()I
     107: i2l
     108: lcmp
     109: ifge          141
     112: aload_0
     113: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     116: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     121: aload_0
     122: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     125: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     130: invokevirtual #33                 // Method java/nio/ByteBuffer.position:()I
     133: i2l
     134: lload_3
     135: ladd
     136: l2i
     137: invokevirtual #34                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     140: pop
     141: aload         5
     143: aload_0
     144: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     147: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     152: lload_1
     153: invokevirtual #35                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;J)I
     156: i2l
     157: lstore        7
     159: aload_0
     160: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     163: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     168: iload         6
     170: invokevirtual #34                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     173: pop
     174: aload_0
     175: invokespecial #36                 // Method decrementFrameDataRemaining:()V
     178: aload_0
     179: invokespecial #30                 // Method exitRead:()V
     182: lload         7
     184: lreturn
     185: astore        9
     187: aload_0
     188: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     191: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     196: iload         6
     198: invokevirtual #34                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     201: pop
     202: aload_0
     203: invokespecial #36                 // Method decrementFrameDataRemaining:()V
     206: aload         9
     208: athrow
     209: lconst_0
     210: lstore        6
     212: aload_0
     213: invokespecial #30                 // Method exitRead:()V
     216: lload         6
     218: lreturn
     219: astore        10
     221: aload_0
     222: invokespecial #30                 // Method exitRead:()V
     225: aload         10
     227: athrow
    Exception table:
       from    to  target type
          94   159   185   any
         185   187   185   any
          28    66   219   any
          73   178   219   any
         185   212   219   any
         219   221   219   any

  private void decrementFrameDataRemaining();
    Code:
       0: aload_0
       1: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
       4: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
       9: invokevirtual #24                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      12: ifne          29
      15: aload_0
      16: dup
      17: getfield      #4                  // Field frameDataRemaining:J
      20: aload_0
      21: getfield      #37                 // Field currentDataOriginalSize:I
      24: i2l
      25: lsub
      26: putfield      #4                  // Field frameDataRemaining:J
      29: return

  public long transferTo(long, java.nio.ByteBuffer, org.xnio.channels.StreamSinkChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field state:I
       4: iconst_2
       5: invokestatic  #28                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          15
      11: ldc2_w        #16                 // long -1l
      14: lreturn
      15: aload_0
      16: invokespecial #29                 // Method beforeRead:()V
      19: aload_0
      20: getfield      #21                 // Field waitingForFrame:Z
      23: ifeq          37
      26: aload_3
      27: aload_3
      28: invokevirtual #31                 // Method java/nio/ByteBuffer.limit:()I
      31: invokevirtual #38                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      34: pop
      35: lconst_0
      36: lreturn
      37: aload_0
      38: getfield      #4                  // Field frameDataRemaining:J
      41: lconst_0
      42: lcmp
      43: ifne          82
      46: aload_0
      47: getfield      #1                  // Field state:I
      50: bipush        16
      52: invokestatic  #28                 // Method org/xnio/Bits.anyAreSet:(II)Z
      55: ifeq          82
      58: aload_0
      59: dup
      60: getfield      #1                  // Field state:I
      63: sipush        128
      66: ior
      67: putfield      #1                  // Field state:I
      70: ldc2_w        #16                 // long -1l
      73: lstore        5
      75: aload_0
      76: invokespecial #30                 // Method exitRead:()V
      79: lload         5
      81: lreturn
      82: aload_0
      83: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      86: ifnull        289
      89: aload_0
      90: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      93: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      98: invokevirtual #24                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     101: ifeq          289
     104: aload_0
     105: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     108: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     113: invokevirtual #31                 // Method java/nio/ByteBuffer.limit:()I
     116: istore        5
     118: lload_1
     119: aload_0
     120: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     123: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     128: invokevirtual #32                 // Method java/nio/ByteBuffer.remaining:()I
     131: i2l
     132: lcmp
     133: ifge          165
     136: aload_0
     137: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     140: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     145: aload_0
     146: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     149: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     154: invokevirtual #33                 // Method java/nio/ByteBuffer.position:()I
     157: i2l
     158: lload_1
     159: ladd
     160: l2i
     161: invokevirtual #34                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     164: pop
     165: aload         4
     167: aload_0
     168: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     171: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     176: invokeinterface #39,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
     181: istore        6
     183: aload_0
     184: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     187: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     192: invokevirtual #24                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     195: ifeq          225
     198: aload_3
     199: invokevirtual #40                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     202: pop
     203: aload_3
     204: aload_0
     205: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     208: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     213: invokestatic  #41                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
     216: pop
     217: aload_3
     218: invokevirtual #42                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     221: pop
     222: goto          234
     225: aload_3
     226: aload_3
     227: invokevirtual #31                 // Method java/nio/ByteBuffer.limit:()I
     230: invokevirtual #38                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     233: pop
     234: iload         6
     236: i2l
     237: lstore        7
     239: aload_0
     240: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     243: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     248: iload         5
     250: invokevirtual #34                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     253: pop
     254: aload_0
     255: invokespecial #36                 // Method decrementFrameDataRemaining:()V
     258: aload_0
     259: invokespecial #30                 // Method exitRead:()V
     262: lload         7
     264: lreturn
     265: astore        9
     267: aload_0
     268: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     271: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     276: iload         5
     278: invokevirtual #34                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     281: pop
     282: aload_0
     283: invokespecial #36                 // Method decrementFrameDataRemaining:()V
     286: aload         9
     288: athrow
     289: aload_3
     290: aload_3
     291: invokevirtual #31                 // Method java/nio/ByteBuffer.limit:()I
     294: invokevirtual #38                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     297: pop
     298: lconst_0
     299: lstore        5
     301: aload_0
     302: invokespecial #30                 // Method exitRead:()V
     305: lload         5
     307: lreturn
     308: astore        10
     310: aload_0
     311: invokespecial #30                 // Method exitRead:()V
     314: aload         10
     316: athrow
    Exception table:
       from    to  target type
         118   239   265   any
         265   267   265   any
          37    75   308   any
          82   258   308   any
         265   301   308   any
         308   310   308   any

  public long getMaxStreamSize();
    Code:
       0: aload_0
       1: getfield      #18                 // Field maxStreamSize:J
       4: lreturn

  public void setMaxStreamSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #18                 // Field maxStreamSize:J
       5: lload_1
       6: lconst_0
       7: lcmp
       8: ifle          24
      11: lload_1
      12: aload_0
      13: getfield      #22                 // Field currentStreamSize:J
      16: lcmp
      17: ifge          24
      20: aload_0
      21: invokespecial #43                 // Method handleStreamTooLarge:()V
      24: return

  private void handleStreamTooLarge();
    Code:
       0: aload_0
       1: invokestatic  #44                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
       4: return

  public void suspendReads();
    Code:
       0: aload_0
       1: dup
       2: getfield      #1                  // Field state:I
       5: bipush        -5
       7: iand
       8: putfield      #1                  // Field state:I
      11: return

  protected void complete() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method close:()V
       4: return

  protected boolean isComplete();
    Code:
       0: aload_0
       1: getfield      #1                  // Field state:I
       4: iconst_2
       5: invokestatic  #28                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ireturn

  public void resumeReads();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #46                 // Method resumeReadsInternal:(Z)V
       5: return

  public boolean isReadResumed();
    Code:
       0: aload_0
       1: getfield      #1                  // Field state:I
       4: iconst_4
       5: invokestatic  #28                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ireturn

  public void wakeupReads();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #46                 // Method resumeReadsInternal:(Z)V
       5: return

  public void addCloseTask(org.xnio.ChannelListener<R>);
    Code:
       0: aload_0
       1: getfield      #19                 // Field closeListeners:[Lorg/xnio/ChannelListener;
       4: ifnonnull     22
       7: aload_0
       8: iconst_1
       9: anewarray     #47                 // class org/xnio/ChannelListener
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: putfield      #19                 // Field closeListeners:[Lorg/xnio/ChannelListener;
      19: goto          58
      22: aload_0
      23: getfield      #19                 // Field closeListeners:[Lorg/xnio/ChannelListener;
      26: astore_2
      27: aload_0
      28: aload_2
      29: arraylength
      30: iconst_1
      31: iadd
      32: anewarray     #47                 // class org/xnio/ChannelListener
      35: putfield      #19                 // Field closeListeners:[Lorg/xnio/ChannelListener;
      38: aload_2
      39: iconst_0
      40: aload_0
      41: getfield      #19                 // Field closeListeners:[Lorg/xnio/ChannelListener;
      44: iconst_0
      45: aload_2
      46: arraylength
      47: invokestatic  #48                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      50: aload_0
      51: getfield      #19                 // Field closeListeners:[Lorg/xnio/ChannelListener;
      54: aload_2
      55: arraylength
      56: aload_1
      57: aastore
      58: return

  void resumeReadsInternal(boolean);
    Code:
       0: aload_0
       1: getfield      #1                  // Field state:I
       4: iconst_4
       5: invokestatic  #28                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: istore_2
       9: aload_0
      10: dup
      11: getfield      #1                  // Field state:I
      14: iconst_4
      15: ior
      16: putfield      #1                  // Field state:I
      19: iload_2
      20: ifeq          27
      23: iload_1
      24: ifeq          65
      27: aload_0
      28: getfield      #1                  // Field state:I
      31: bipush        32
      33: invokestatic  #28                 // Method org/xnio/Bits.anyAreSet:(II)Z
      36: ifne          65
      39: aload_0
      40: dup
      41: getfield      #1                  // Field state:I
      44: bipush        32
      46: ior
      47: putfield      #1                  // Field state:I
      50: aload_0
      51: invokevirtual #49                 // Method getFramedChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      54: new           #50                 // class io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$1
      57: dup
      58: aload_0
      59: invokespecial #51                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$1."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;)V
      62: invokevirtual #52                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.runInIoThread:(Ljava/lang/Runnable;)V
      65: return

  private org.xnio.ChannelListener<? super R> getReadListener();
    Code:
       0: aload_0
       1: getfield      #9                  // Field readSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: invokevirtual #53                 // Method org/xnio/ChannelListener$SimpleSetter.get:()Lorg/xnio/ChannelListener;
       7: areturn

  public void shutdownReads() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method close:()V
       4: return

  protected void lastFrame();
    Code:
       0: aload_0
       1: dup
       2: getfield      #1                  // Field state:I
       5: bipush        16
       7: ior
       8: putfield      #1                  // Field state:I
      11: aload_0
      12: iconst_0
      13: putfield      #21                 // Field waitingForFrame:Z
      16: aload_0
      17: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      20: ifnonnull     75
      23: aload_0
      24: getfield      #2                  // Field pendingFrameData:Ljava/util/Deque;
      27: invokeinterface #54,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      32: ifeq          75
      35: aload_0
      36: getfield      #4                  // Field frameDataRemaining:J
      39: lconst_0
      40: lcmp
      41: ifne          75
      44: aload_0
      45: dup
      46: getfield      #1                  // Field state:I
      49: bipush        10
      51: ior
      52: putfield      #1                  // Field state:I
      55: aload_0
      56: invokevirtual #49                 // Method getFramedChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      59: aload_0
      60: invokevirtual #55                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.notifyFrameReadComplete:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;)V
      63: aload_0
      64: invokevirtual #49                 // Method getFramedChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      67: aload_0
      68: invokevirtual #56                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.notifyClosed:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;)V
      71: aload_0
      72: invokestatic  #44                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      75: return

  public void awaitReadable() throws java.io.IOException;
    Code:
       0: invokestatic  #57                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: aload_0
       4: invokevirtual #58                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
       7: if_acmpne     19
      10: getstatic     #59                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      13: invokeinterface #60,  1           // InterfaceMethod io/undertow/UndertowMessages.awaitCalledFromIoThread:()Ljava/io/IOException;
      18: athrow
      19: aload_0
      20: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      23: ifnonnull     134
      26: aload_0
      27: getfield      #2                  // Field pendingFrameData:Ljava/util/Deque;
      30: invokeinterface #54,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      35: ifeq          134
      38: aload_0
      39: getfield      #14                 // Field lock:Ljava/lang/Object;
      42: dup
      43: astore_1
      44: monitorenter
      45: aload_0
      46: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      49: ifnonnull     122
      52: aload_0
      53: getfield      #2                  // Field pendingFrameData:Ljava/util/Deque;
      56: invokeinterface #54,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      61: ifeq          122
      64: aload_0
      65: dup
      66: getfield      #61                 // Field waiters:I
      69: iconst_1
      70: iadd
      71: putfield      #61                 // Field waiters:I
      74: aload_0
      75: getfield      #14                 // Field lock:Ljava/lang/Object;
      78: invokevirtual #62                 // Method java/lang/Object.wait:()V
      81: aload_0
      82: dup
      83: getfield      #61                 // Field waiters:I
      86: iconst_1
      87: isub
      88: putfield      #61                 // Field waiters:I
      91: goto          122
      94: astore_2
      95: invokestatic  #57                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      98: invokevirtual #64                 // Method java/lang/Thread.interrupt:()V
     101: new           #65                 // class java/io/InterruptedIOException
     104: dup
     105: invokespecial #66                 // Method java/io/InterruptedIOException."<init>":()V
     108: athrow
     109: astore_3
     110: aload_0
     111: dup
     112: getfield      #61                 // Field waiters:I
     115: iconst_1
     116: isub
     117: putfield      #61                 // Field waiters:I
     120: aload_3
     121: athrow
     122: aload_1
     123: monitorexit
     124: goto          134
     127: astore        4
     129: aload_1
     130: monitorexit
     131: aload         4
     133: athrow
     134: return
    Exception table:
       from    to  target type
          64    81    94   Class java/lang/InterruptedException
          64    81   109   any
          94   110   109   any
          45   124   127   any
         127   131   127   any

  public void awaitReadable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: invokestatic  #57                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: aload_0
       4: invokevirtual #58                 // Method getIoThread:()Lorg/xnio/XnioIoThread;
       7: if_acmpne     19
      10: getstatic     #59                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      13: invokeinterface #60,  1           // InterfaceMethod io/undertow/UndertowMessages.awaitCalledFromIoThread:()Ljava/io/IOException;
      18: athrow
      19: aload_0
      20: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      23: ifnonnull     121
      26: aload_0
      27: getfield      #14                 // Field lock:Ljava/lang/Object;
      30: dup
      31: astore        4
      33: monitorenter
      34: aload_0
      35: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      38: ifnonnull     107
      41: aload_0
      42: dup
      43: getfield      #61                 // Field waiters:I
      46: iconst_1
      47: iadd
      48: putfield      #61                 // Field waiters:I
      51: aload_0
      52: getfield      #14                 // Field lock:Ljava/lang/Object;
      55: aload_3
      56: lload_1
      57: invokevirtual #67                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      60: invokevirtual #68                 // Method java/lang/Object.wait:(J)V
      63: aload_0
      64: dup
      65: getfield      #61                 // Field waiters:I
      68: iconst_1
      69: isub
      70: putfield      #61                 // Field waiters:I
      73: goto          107
      76: astore        5
      78: invokestatic  #57                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      81: invokevirtual #64                 // Method java/lang/Thread.interrupt:()V
      84: new           #65                 // class java/io/InterruptedIOException
      87: dup
      88: invokespecial #66                 // Method java/io/InterruptedIOException."<init>":()V
      91: athrow
      92: astore        6
      94: aload_0
      95: dup
      96: getfield      #61                 // Field waiters:I
      99: iconst_1
     100: isub
     101: putfield      #61                 // Field waiters:I
     104: aload         6
     106: athrow
     107: aload         4
     109: monitorexit
     110: goto          121
     113: astore        7
     115: aload         4
     117: monitorexit
     118: aload         7
     120: athrow
     121: return
    Exception table:
       from    to  target type
          41    63    76   Class java/lang/InterruptedException
          41    63    92   any
          76    94    92   any
          34   110   113   any
         113   118   113   any

  protected void dataReady(io.undertow.server.protocol.framed.FrameHeaderData, io.undertow.connector.PooledByteBuffer);
    Code:
       0: aload_0
       1: getfield      #1                  // Field state:I
       4: bipush        64
       6: invokestatic  #28                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          19
      12: aload_2
      13: invokeinterface #25,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      18: return
      19: aload_0
      20: getfield      #14                 // Field lock:Ljava/lang/Object;
      23: dup
      24: astore_3
      25: monitorenter
      26: aload_0
      27: getfield      #2                  // Field pendingFrameData:Ljava/util/Deque;
      30: invokeinterface #54,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      35: istore        4
      37: aload_0
      38: getfield      #2                  // Field pendingFrameData:Ljava/util/Deque;
      41: new           #69                 // class io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData
      44: dup
      45: aload_0
      46: aload_1
      47: aload_2
      48: invokespecial #70                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData."<init>":(Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;Lio/undertow/server/protocol/framed/FrameHeaderData;Lio/undertow/connector/PooledByteBuffer;)V
      51: invokeinterface #71,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      56: pop
      57: iload         4
      59: ifeq          76
      62: aload_0
      63: getfield      #61                 // Field waiters:I
      66: ifle          76
      69: aload_0
      70: getfield      #14                 // Field lock:Ljava/lang/Object;
      73: invokevirtual #72                 // Method java/lang/Object.notifyAll:()V
      76: aload_0
      77: iconst_0
      78: putfield      #21                 // Field waitingForFrame:Z
      81: aload_3
      82: monitorexit
      83: goto          93
      86: astore        5
      88: aload_3
      89: monitorexit
      90: aload         5
      92: athrow
      93: aload_0
      94: getfield      #1                  // Field state:I
      97: iconst_4
      98: invokestatic  #28                 // Method org/xnio/Bits.anyAreSet:(II)Z
     101: ifeq          109
     104: aload_0
     105: iconst_1
     106: invokevirtual #46                 // Method resumeReadsInternal:(Z)V
     109: aload_1
     110: ifnull        153
     113: aload_0
     114: dup
     115: getfield      #22                 // Field currentStreamSize:J
     118: aload_1
     119: invokeinterface #73,  1           // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
     124: ladd
     125: putfield      #22                 // Field currentStreamSize:J
     128: aload_0
     129: getfield      #18                 // Field maxStreamSize:J
     132: lconst_0
     133: lcmp
     134: ifle          153
     137: aload_0
     138: getfield      #22                 // Field currentStreamSize:J
     141: aload_0
     142: getfield      #18                 // Field maxStreamSize:J
     145: lcmp
     146: ifle          153
     149: aload_0
     150: invokespecial #43                 // Method handleStreamTooLarge:()V
     153: return
    Exception table:
       from    to  target type
          26    83    86   any
          86    90    86   any

  protected long updateFrameDataRemaining(io.undertow.connector.PooledByteBuffer, long);
    Code:
       0: lload_2
       1: lreturn

  protected io.undertow.connector.PooledByteBuffer processFrameData(io.undertow.connector.PooledByteBuffer, boolean) throws java.io.IOException;
    Code:
       0: aload_1
       1: areturn

  protected void handleHeaderData(io.undertow.server.protocol.framed.FrameHeaderData);
    Code:
       0: return

  public org.xnio.XnioExecutor getReadThread();
    Code:
       0: aload_0
       1: getfield      #20                 // Field framedChannel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       4: invokevirtual #74                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.getIoThread:()Lorg/xnio/XnioIoThread;
       7: areturn

  public org.xnio.ChannelListener$Setter<? extends R> getReadSetter();
    Code:
       0: aload_0
       1: getfield      #9                  // Field readSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  public org.xnio.ChannelListener$Setter<? extends R> getCloseSetter();
    Code:
       0: aload_0
       1: getfield      #10                 // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #20                 // Field framedChannel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       4: invokevirtual #75                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.getWorker:()Lorg/xnio/XnioWorker;
       7: areturn

  public org.xnio.XnioIoThread getIoThread();
    Code:
       0: aload_0
       1: getfield      #20                 // Field framedChannel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       4: invokevirtual #74                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.getIoThread:()Lorg/xnio/XnioIoThread;
       7: areturn

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: iconst_0
       1: ireturn

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field state:I
       4: iconst_2
       5: invokestatic  #28                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          15
      11: ldc2_w        #16                 // long -1l
      14: lreturn
      15: aload_0
      16: invokespecial #29                 // Method beforeRead:()V
      19: aload_0
      20: getfield      #21                 // Field waitingForFrame:Z
      23: ifeq          28
      26: lconst_0
      27: lreturn
      28: aload_0
      29: getfield      #4                  // Field frameDataRemaining:J
      32: lconst_0
      33: lcmp
      34: ifne          73
      37: aload_0
      38: getfield      #1                  // Field state:I
      41: bipush        16
      43: invokestatic  #28                 // Method org/xnio/Bits.anyAreSet:(II)Z
      46: ifeq          73
      49: aload_0
      50: dup
      51: getfield      #1                  // Field state:I
      54: sipush        128
      57: ior
      58: putfield      #1                  // Field state:I
      61: ldc2_w        #16                 // long -1l
      64: lstore        4
      66: aload_0
      67: invokespecial #30                 // Method exitRead:()V
      70: lload         4
      72: lreturn
      73: aload_0
      74: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      77: ifnull        240
      80: aload_0
      81: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      84: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      89: invokevirtual #31                 // Method java/nio/ByteBuffer.limit:()I
      92: istore        4
      94: aload_1
      95: iload_2
      96: iload_3
      97: invokestatic  #76                 // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;II)J
     100: lstore        5
     102: lload         5
     104: aload_0
     105: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     108: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     113: invokevirtual #32                 // Method java/nio/ByteBuffer.remaining:()I
     116: i2l
     117: lcmp
     118: ifge          154
     121: aload_0
     122: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     125: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     130: aload_0
     131: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     134: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     139: invokevirtual #33                 // Method java/nio/ByteBuffer.position:()I
     142: i2l
     143: lload         5
     145: ladd
     146: l2i
     147: invokevirtual #34                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     150: pop
     151: goto          169
     154: aload_0
     155: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     158: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     163: invokevirtual #32                 // Method java/nio/ByteBuffer.remaining:()I
     166: i2l
     167: lstore        5
     169: lload         5
     171: l2i
     172: aload_1
     173: iload_2
     174: iload_3
     175: aload_0
     176: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     179: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     184: invokestatic  #77                 // Method org/xnio/Buffers.copy:(I[Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)I
     187: i2l
     188: lstore        7
     190: aload_0
     191: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     194: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     199: iload         4
     201: invokevirtual #34                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     204: pop
     205: aload_0
     206: invokespecial #36                 // Method decrementFrameDataRemaining:()V
     209: aload_0
     210: invokespecial #30                 // Method exitRead:()V
     213: lload         7
     215: lreturn
     216: astore        9
     218: aload_0
     219: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     222: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     227: iload         4
     229: invokevirtual #34                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     232: pop
     233: aload_0
     234: invokespecial #36                 // Method decrementFrameDataRemaining:()V
     237: aload         9
     239: athrow
     240: lconst_0
     241: lstore        4
     243: aload_0
     244: invokespecial #30                 // Method exitRead:()V
     247: lload         4
     249: lreturn
     250: astore        10
     252: aload_0
     253: invokespecial #30                 // Method exitRead:()V
     256: aload         10
     258: athrow
    Exception table:
       from    to  target type
          94   190   216   any
         216   218   216   any
          28    66   250   any
          73   209   250   any
         216   243   250   any
         250   252   250   any

  public long read(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #78                 // Method read:([Ljava/nio/ByteBuffer;II)J
       8: lreturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field state:I
       4: iconst_2
       5: invokestatic  #28                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          13
      11: iconst_m1
      12: ireturn
      13: aload_1
      14: invokevirtual #24                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_0
      23: invokespecial #29                 // Method beforeRead:()V
      26: aload_0
      27: getfield      #21                 // Field waitingForFrame:Z
      30: ifeq          35
      33: iconst_0
      34: ireturn
      35: aload_0
      36: getfield      #4                  // Field frameDataRemaining:J
      39: lconst_0
      40: lcmp
      41: ifne          76
      44: aload_0
      45: getfield      #1                  // Field state:I
      48: bipush        16
      50: invokestatic  #28                 // Method org/xnio/Bits.anyAreSet:(II)Z
      53: ifeq          76
      56: aload_0
      57: dup
      58: getfield      #1                  // Field state:I
      61: sipush        128
      64: ior
      65: putfield      #1                  // Field state:I
      68: iconst_m1
      69: istore_2
      70: aload_0
      71: invokespecial #30                 // Method exitRead:()V
      74: iload_2
      75: ireturn
      76: aload_0
      77: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      80: ifnull        224
      83: aload_0
      84: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      87: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      92: invokevirtual #31                 // Method java/nio/ByteBuffer.limit:()I
      95: istore_2
      96: aload_1
      97: invokevirtual #32                 // Method java/nio/ByteBuffer.remaining:()I
     100: istore_3
     101: iload_3
     102: aload_0
     103: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     106: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     111: invokevirtual #32                 // Method java/nio/ByteBuffer.remaining:()I
     114: if_icmpge     147
     117: aload_0
     118: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     121: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     126: aload_0
     127: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     130: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     135: invokevirtual #33                 // Method java/nio/ByteBuffer.position:()I
     138: iload_3
     139: iadd
     140: invokevirtual #34                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     143: pop
     144: goto          160
     147: aload_0
     148: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     151: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     156: invokevirtual #32                 // Method java/nio/ByteBuffer.remaining:()I
     159: istore_3
     160: iload_3
     161: aload_1
     162: aload_0
     163: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     166: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     171: invokestatic  #79                 // Method org/xnio/Buffers.copy:(ILjava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
     174: istore        4
     176: aload_0
     177: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     180: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     185: iload_2
     186: invokevirtual #34                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     189: pop
     190: aload_0
     191: invokespecial #36                 // Method decrementFrameDataRemaining:()V
     194: aload_0
     195: invokespecial #30                 // Method exitRead:()V
     198: iload         4
     200: ireturn
     201: astore        5
     203: aload_0
     204: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     207: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     212: iload_2
     213: invokevirtual #34                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     216: pop
     217: aload_0
     218: invokespecial #36                 // Method decrementFrameDataRemaining:()V
     221: aload         5
     223: athrow
     224: iconst_0
     225: istore_2
     226: aload_0
     227: invokespecial #30                 // Method exitRead:()V
     230: iload_2
     231: ireturn
     232: astore        6
     234: aload_0
     235: invokespecial #30                 // Method exitRead:()V
     238: aload         6
     240: athrow
    Exception table:
       from    to  target type
          96   176   201   any
         201   203   201   any
          35    70   232   any
          76   194   232   any
         201   226   232   any
         232   234   232   any

  private void beforeRead() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field state:I
       4: bipush        64
       6: invokestatic  #28                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          21
      12: getstatic     #59                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      15: invokeinterface #80,  1           // InterfaceMethod io/undertow/UndertowMessages.channelIsClosed:()Ljava/nio/channels/ClosedChannelException;
      20: athrow
      21: aload_0
      22: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      25: ifnonnull     189
      28: aload_0
      29: getfield      #14                 // Field lock:Ljava/lang/Object;
      32: dup
      33: astore_1
      34: monitorenter
      35: aload_0
      36: getfield      #2                  // Field pendingFrameData:Ljava/util/Deque;
      39: invokeinterface #81,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
      44: checkcast     #69                 // class io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData
      47: astore_2
      48: aload_2
      49: ifnull        177
      52: aload_2
      53: invokevirtual #82                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData.getFrameData:()Lio/undertow/connector/PooledByteBuffer;
      56: astore_3
      57: iconst_1
      58: istore        4
      60: aload_3
      61: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      66: invokevirtual #24                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      69: ifeq          80
      72: aload_0
      73: aload_3
      74: putfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      77: goto          89
      80: aload_3
      81: invokeinterface #25,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      86: iconst_0
      87: istore        4
      89: aload_2
      90: invokevirtual #83                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData.getFrameHeaderData:()Lio/undertow/server/protocol/framed/FrameHeaderData;
      93: ifnull        117
      96: aload_0
      97: aload_2
      98: invokevirtual #83                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData.getFrameHeaderData:()Lio/undertow/server/protocol/framed/FrameHeaderData;
     101: invokeinterface #73,  1           // InterfaceMethod io/undertow/server/protocol/framed/FrameHeaderData.getFrameLength:()J
     106: putfield      #4                  // Field frameDataRemaining:J
     109: aload_0
     110: aload_2
     111: invokevirtual #83                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData.getFrameHeaderData:()Lio/undertow/server/protocol/framed/FrameHeaderData;
     114: invokevirtual #84                 // Method handleHeaderData:(Lio/undertow/server/protocol/framed/FrameHeaderData;)V
     117: iload         4
     119: ifeq          177
     122: aload_0
     123: aload_0
     124: aload_3
     125: aload_0
     126: getfield      #4                  // Field frameDataRemaining:J
     129: invokevirtual #85                 // Method updateFrameDataRemaining:(Lio/undertow/connector/PooledByteBuffer;J)J
     132: putfield      #4                  // Field frameDataRemaining:J
     135: aload_0
     136: aload_3
     137: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     142: invokevirtual #32                 // Method java/nio/ByteBuffer.remaining:()I
     145: putfield      #37                 // Field currentDataOriginalSize:I
     148: aload_0
     149: aload_0
     150: aload_3
     151: aload_0
     152: getfield      #4                  // Field frameDataRemaining:J
     155: aload_0
     156: getfield      #37                 // Field currentDataOriginalSize:I
     159: i2l
     160: lsub
     161: lconst_0
     162: lcmp
     163: ifne          170
     166: iconst_1
     167: goto          171
     170: iconst_0
     171: invokevirtual #86                 // Method processFrameData:(Lio/undertow/connector/PooledByteBuffer;Z)Lio/undertow/connector/PooledByteBuffer;
     174: putfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
     177: aload_1
     178: monitorexit
     179: goto          189
     182: astore        5
     184: aload_1
     185: monitorexit
     186: aload         5
     188: athrow
     189: return
    Exception table:
       from    to  target type
          35   179   182   any
         182   186   182   any

  private void exitRead() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
       4: ifnull        36
       7: aload_0
       8: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      11: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      16: invokevirtual #24                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      19: ifne          36
      22: aload_0
      23: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      26: invokeinterface #25,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      31: aload_0
      32: aconst_null
      33: putfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      36: aload_0
      37: getfield      #4                  // Field frameDataRemaining:J
      40: lconst_0
      41: lcmp
      42: ifne          204
      45: aload_0
      46: getfield      #14                 // Field lock:Ljava/lang/Object;
      49: dup
      50: astore_1
      51: monitorenter
      52: aload_0
      53: dup
      54: getfield      #15                 // Field readFrameCount:I
      57: iconst_1
      58: iadd
      59: putfield      #15                 // Field readFrameCount:I
      62: aload_0
      63: getfield      #2                  // Field pendingFrameData:Ljava/util/Deque;
      66: invokeinterface #54,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      71: ifeq          148
      74: aload_0
      75: getfield      #1                  // Field state:I
      78: sipush        128
      81: invokestatic  #28                 // Method org/xnio/Bits.anyAreSet:(II)Z
      84: ifeq          116
      87: aload_0
      88: dup
      89: getfield      #1                  // Field state:I
      92: iconst_2
      93: ior
      94: putfield      #1                  // Field state:I
      97: aload_0
      98: invokevirtual #49                 // Method getFramedChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
     101: aload_0
     102: invokevirtual #56                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.notifyClosed:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;)V
     105: aload_0
     106: invokevirtual #87                 // Method complete:()V
     109: aload_0
     110: invokevirtual #45                 // Method close:()V
     113: goto          148
     116: aload_0
     117: getfield      #1                  // Field state:I
     120: bipush        16
     122: invokestatic  #28                 // Method org/xnio/Bits.anyAreSet:(II)Z
     125: ifeq          143
     128: aload_0
     129: dup
     130: getfield      #1                  // Field state:I
     133: sipush        256
     136: ior
     137: putfield      #1                  // Field state:I
     140: goto          148
     143: aload_0
     144: iconst_1
     145: putfield      #21                 // Field waitingForFrame:Z
     148: aload_1
     149: monitorexit
     150: goto          158
     153: astore_2
     154: aload_1
     155: monitorexit
     156: aload_2
     157: athrow
     158: aload_0
     159: getfield      #2                  // Field pendingFrameData:Ljava/util/Deque;
     162: invokeinterface #54,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
     167: ifeq          204
     170: aload_0
     171: getfield      #20                 // Field framedChannel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
     174: aload_0
     175: invokevirtual #55                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.notifyFrameReadComplete:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;)V
     178: goto          204
     181: astore_3
     182: aload_0
     183: getfield      #2                  // Field pendingFrameData:Ljava/util/Deque;
     186: invokeinterface #54,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
     191: ifeq          202
     194: aload_0
     195: getfield      #20                 // Field framedChannel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
     198: aload_0
     199: invokevirtual #55                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.notifyFrameReadComplete:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;)V
     202: aload_3
     203: athrow
     204: return
    Exception table:
       from    to  target type
          52   150   153   any
         153   156   153   any
          45   158   181   any

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #1                  // Field state:I
       4: bipush        8
       6: invokestatic  #88                 // Method org/xnio/Bits.allAreClear:(II)Z
       9: ireturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #1                  // Field state:I
       4: bipush        8
       6: invokestatic  #28                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          13
      12: return
      13: aload_0
      14: dup
      15: getfield      #1                  // Field state:I
      18: bipush        8
      20: ior
      21: putfield      #1                  // Field state:I
      24: aload_0
      25: getfield      #1                  // Field state:I
      28: bipush        18
      30: invokestatic  #88                 // Method org/xnio/Bits.allAreClear:(II)Z
      33: ifeq          59
      36: aload_0
      37: dup
      38: getfield      #1                  // Field state:I
      41: bipush        64
      43: ior
      44: putfield      #1                  // Field state:I
      47: aload_0
      48: invokevirtual #49                 // Method getFramedChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      51: aload_0
      52: invokevirtual #56                 // Method io/undertow/server/protocol/framed/AbstractFramedChannel.notifyClosed:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel;)V
      55: aload_0
      56: invokevirtual #89                 // Method channelForciblyClosed:()V
      59: aload_0
      60: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      63: ifnull        80
      66: aload_0
      67: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      70: invokeinterface #25,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      75: aload_0
      76: aconst_null
      77: putfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      80: aload_0
      81: getfield      #2                  // Field pendingFrameData:Ljava/util/Deque;
      84: invokeinterface #54,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      89: ifne          115
      92: aload_0
      93: getfield      #2                  // Field pendingFrameData:Ljava/util/Deque;
      96: invokeinterface #81,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
     101: checkcast     #69                 // class io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData
     104: invokestatic  #90                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData.access$500:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData;)Lio/undertow/connector/PooledByteBuffer;
     107: invokeinterface #25,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     112: goto          80
     115: aload_0
     116: aload_0
     117: getfield      #10                 // Field closeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
     120: invokevirtual #53                 // Method org/xnio/ChannelListener$SimpleSetter.get:()Lorg/xnio/ChannelListener;
     123: invokestatic  #91                 // Method org/xnio/ChannelListeners.invokeChannelListener:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelListener;)Z
     126: pop
     127: aload_0
     128: getfield      #19                 // Field closeListeners:[Lorg/xnio/ChannelListener;
     131: ifnull        163
     134: iconst_0
     135: istore_1
     136: iload_1
     137: aload_0
     138: getfield      #19                 // Field closeListeners:[Lorg/xnio/ChannelListener;
     141: arraylength
     142: if_icmpge     163
     145: aload_0
     146: getfield      #19                 // Field closeListeners:[Lorg/xnio/ChannelListener;
     149: iload_1
     150: aaload
     151: aload_0
     152: invokeinterface #92,  2           // InterfaceMethod org/xnio/ChannelListener.handleEvent:(Ljava/nio/channels/Channel;)V
     157: iinc          1, 1
     160: goto          136
     163: return

  protected void channelForciblyClosed();
    Code:
       0: return

  protected C getFramedChannel();
    Code:
       0: aload_0
       1: getfield      #20                 // Field framedChannel:Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       4: areturn

  protected int getReadFrameCount();
    Code:
       0: aload_0
       1: getfield      #15                 // Field readFrameCount:I
       4: ireturn

  protected synchronized void markStreamBroken();
    Code:
       0: aload_0
       1: dup
       2: getfield      #1                  // Field state:I
       5: bipush        64
       7: ior
       8: putfield      #1                  // Field state:I
      11: aload_0
      12: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      15: ifnull        32
      18: aload_0
      19: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      22: invokeinterface #25,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      27: aload_0
      28: aconst_null
      29: putfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
      32: aload_0
      33: getfield      #2                  // Field pendingFrameData:Ljava/util/Deque;
      36: invokeinterface #93,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;
      41: astore_1
      42: aload_1
      43: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          73
      51: aload_1
      52: invokeinterface #95,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #69                 // class io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData
      60: astore_2
      61: aload_2
      62: invokestatic  #90                 // Method io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData.access$500:(Lio/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel$FrameData;)Lio/undertow/connector/PooledByteBuffer;
      65: invokeinterface #25,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      70: goto          42
      73: aload_0
      74: getfield      #2                  // Field pendingFrameData:Ljava/util/Deque;
      77: invokeinterface #96,  1           // InterfaceMethod java/util/Deque.clear:()V
      82: aload_0
      83: invokevirtual #97                 // Method isReadResumed:()Z
      86: ifeq          94
      89: aload_0
      90: iconst_1
      91: invokevirtual #46                 // Method resumeReadsInternal:(Z)V
      94: aload_0
      95: getfield      #61                 // Field waiters:I
      98: ifle          108
     101: aload_0
     102: getfield      #14                 // Field lock:Ljava/lang/Object;
     105: invokevirtual #72                 // Method java/lang/Object.notifyAll:()V
     108: return

  static org.xnio.ChannelListener access$000(io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method getReadListener:()Lorg/xnio/ChannelListener;
       4: areturn

  static long access$100(io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel);
    Code:
       0: aload_0
       1: getfield      #4                  // Field frameDataRemaining:J
       4: lreturn

  static io.undertow.connector.PooledByteBuffer access$200(io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel);
    Code:
       0: aload_0
       1: getfield      #3                  // Field data:Lio/undertow/connector/PooledByteBuffer;
       4: areturn

  static java.util.Deque access$300(io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel);
    Code:
       0: aload_0
       1: getfield      #2                  // Field pendingFrameData:Ljava/util/Deque;
       4: areturn

  static int access$400(io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel);
    Code:
       0: aload_0
       1: getfield      #1                  // Field state:I
       4: ireturn

  static int access$402(io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #1                  // Field state:I
       6: ireturn
}
