Compiled from "SpdyChannel.java"
class io.undertow.protocols.spdy.SpdyChannel$SpdyControlMessageExceptionHandler implements org.xnio.ChannelExceptionHandler<io.undertow.protocols.spdy.SpdyStreamSinkChannel> {
  final io.undertow.protocols.spdy.SpdyChannel this$0;

  private io.undertow.protocols.spdy.SpdyChannel$SpdyControlMessageExceptionHandler(io.undertow.protocols.spdy.SpdyChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/undertow/protocols/spdy/SpdyChannel;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: return

  public void handleException(io.undertow.protocols.spdy.SpdyStreamSinkChannel, java.io.IOException);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
       4: aload_0
       5: getfield      #2                  // Field this$0:Lio/undertow/protocols/spdy/SpdyChannel;
       8: aload_2
       9: invokevirtual #5                  // Method io/undertow/protocols/spdy/SpdyChannel.handleBrokenSinkChannel:(Ljava/lang/Throwable;)V
      12: return

  public void handleException(java.nio.channels.Channel, java.io.IOException);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #6                  // class io/undertow/protocols/spdy/SpdyStreamSinkChannel
       5: aload_2
       6: invokevirtual #7                  // Method handleException:(Lio/undertow/protocols/spdy/SpdyStreamSinkChannel;Ljava/io/IOException;)V
       9: return

  io.undertow.protocols.spdy.SpdyChannel$SpdyControlMessageExceptionHandler(io.undertow.protocols.spdy.SpdyChannel, io.undertow.protocols.spdy.SpdyChannel$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lio/undertow/protocols/spdy/SpdyChannel;)V
       5: return
}
