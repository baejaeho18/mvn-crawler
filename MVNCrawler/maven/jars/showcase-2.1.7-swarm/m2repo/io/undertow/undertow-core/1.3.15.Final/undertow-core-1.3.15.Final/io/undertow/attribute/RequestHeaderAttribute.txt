Compiled from "RequestHeaderAttribute.java"
public class io.undertow.attribute.RequestHeaderAttribute implements io.undertow.attribute.ExchangeAttribute {
  private final io.undertow.util.HttpString requestHeader;

  public io.undertow.attribute.RequestHeaderAttribute(io.undertow.util.HttpString);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field requestHeader:Lio/undertow/util/HttpString;
       9: return

  public java.lang.String readAttribute(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
       4: aload_0
       5: getfield      #2                  // Field requestHeader:Lio/undertow/util/HttpString;
       8: invokevirtual #4                  // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      11: areturn

  public void writeAttribute(io.undertow.server.HttpServerExchange, java.lang.String) throws io.undertow.attribute.ReadOnlyAttributeException;
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
       4: aload_0
       5: getfield      #2                  // Field requestHeader:Lio/undertow/util/HttpString;
       8: aload_2
       9: invokevirtual #5                  // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      12: pop
      13: return
}
