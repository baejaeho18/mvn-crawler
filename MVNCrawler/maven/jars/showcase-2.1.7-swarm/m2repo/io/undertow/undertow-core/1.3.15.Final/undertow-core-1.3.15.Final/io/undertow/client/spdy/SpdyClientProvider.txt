Compiled from "SpdyClientProvider.java"
public class io.undertow.client.spdy.SpdyClientProvider implements io.undertow.client.ClientProvider {
  private static final java.lang.String PROTOCOL_KEY;

  private static final java.lang.String SPDY_3;

  private static final java.lang.String SPDY_3_1;

  private static final java.lang.String HTTP_1_1;

  private static final java.util.List<java.lang.String> PROTOCOLS;

  private static final java.lang.reflect.Method ALPN_PUT_METHOD;

  public io.undertow.client.spdy.SpdyClientProvider();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: return

  public void connect(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.URI, org.xnio.XnioWorker, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: aload_3
       5: aload         4
       7: aload         5
       9: aload         6
      11: invokevirtual #6                  // Method connect:(Lio/undertow/client/ClientCallback;Ljava/net/InetSocketAddress;Ljava/net/URI;Lorg/xnio/XnioWorker;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
      14: return

  public void connect(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.URI, org.xnio.XnioIoThread, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: aload_3
       5: aload         4
       7: aload         5
       9: aload         6
      11: invokevirtual #7                  // Method connect:(Lio/undertow/client/ClientCallback;Ljava/net/InetSocketAddress;Ljava/net/URI;Lorg/xnio/XnioIoThread;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
      14: return

  public java.util.Set<java.lang.String> handlesSchemes();
    Code:
       0: new           #8                  // class java/util/HashSet
       3: dup
       4: iconst_2
       5: anewarray     #9                  // class java/lang/String
       8: dup
       9: iconst_0
      10: ldc           #10                 // String spdy
      12: aastore
      13: dup
      14: iconst_1
      15: ldc           #11                 // String spdy-plain
      17: aastore
      18: invokestatic  #12                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      21: invokespecial #13                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      24: areturn

  public void connect(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.InetSocketAddress, java.net.URI, org.xnio.XnioWorker, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_3
       1: invokevirtual #14                 // Method java/net/URI.getScheme:()Ljava/lang/String;
       4: ldc           #11                 // String spdy-plain
       6: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          142
      12: aload_2
      13: ifnonnull     79
      16: aload         4
      18: new           #16                 // class java/net/InetSocketAddress
      21: dup
      22: aload_3
      23: invokevirtual #17                 // Method java/net/URI.getHost:()Ljava/lang/String;
      26: aload_3
      27: invokevirtual #18                 // Method java/net/URI.getPort:()I
      30: iconst_m1
      31: if_icmpne     40
      34: sipush        443
      37: goto          44
      40: aload_3
      41: invokevirtual #18                 // Method java/net/URI.getPort:()I
      44: invokespecial #19                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      47: aload_0
      48: aload_1
      49: aload_3
      50: aload         5
      52: aload         6
      54: aload         7
      56: invokespecial #20                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lorg/xnio/ChannelListener;
      59: aload         7
      61: invokevirtual #21                 // Method org/xnio/XnioWorker.openStreamConnection:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      64: aload_0
      65: aload_1
      66: invokespecial #22                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
      69: aconst_null
      70: invokeinterface #23,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
      75: pop
      76: goto          141
      79: aload         4
      81: aload_2
      82: new           #16                 // class java/net/InetSocketAddress
      85: dup
      86: aload_3
      87: invokevirtual #17                 // Method java/net/URI.getHost:()Ljava/lang/String;
      90: aload_3
      91: invokevirtual #18                 // Method java/net/URI.getPort:()I
      94: iconst_m1
      95: if_icmpne     104
      98: sipush        443
     101: goto          108
     104: aload_3
     105: invokevirtual #18                 // Method java/net/URI.getPort:()I
     108: invokespecial #19                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     111: aload_0
     112: aload_1
     113: aload_3
     114: aload         5
     116: aload         6
     118: aload         7
     120: invokespecial #20                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lorg/xnio/ChannelListener;
     123: aconst_null
     124: aload         7
     126: invokevirtual #24                 // Method org/xnio/XnioWorker.openStreamConnection:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     129: aload_0
     130: aload_1
     131: invokespecial #22                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
     134: aconst_null
     135: invokeinterface #23,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     140: pop
     141: return
     142: getstatic     #25                 // Field ALPN_PUT_METHOD:Ljava/lang/reflect/Method;
     145: ifnonnull     163
     148: aload_1
     149: getstatic     #26                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     152: invokeinterface #27,  1           // InterfaceMethod io/undertow/UndertowMessages.jettyNPNNotAvailable:()Ljava/io/IOException;
     157: invokeinterface #28,  2           // InterfaceMethod io/undertow/client/ClientCallback.failed:(Ljava/io/IOException;)V
     162: return
     163: aload         5
     165: ifnonnull     183
     168: aload_1
     169: getstatic     #26                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     172: invokeinterface #29,  1           // InterfaceMethod io/undertow/UndertowMessages.sslWasNull:()Ljava/io/IOException;
     177: invokeinterface #28,  2           // InterfaceMethod io/undertow/client/ClientCallback.failed:(Ljava/io/IOException;)V
     182: return
     183: invokestatic  #30                 // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
     186: aload         7
     188: invokevirtual #31                 // Method org/xnio/OptionMap$Builder.addAll:(Lorg/xnio/OptionMap;)Lorg/xnio/OptionMap$Builder;
     191: getstatic     #32                 // Field org/xnio/Options.SSL_STARTTLS:Lorg/xnio/Option;
     194: iconst_1
     195: invokevirtual #33                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
     198: invokevirtual #34                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
     201: astore        8
     203: aload_2
     204: ifnonnull     272
     207: aload         5
     209: aload         4
     211: new           #16                 // class java/net/InetSocketAddress
     214: dup
     215: aload_3
     216: invokevirtual #17                 // Method java/net/URI.getHost:()Ljava/lang/String;
     219: aload_3
     220: invokevirtual #18                 // Method java/net/URI.getPort:()I
     223: iconst_m1
     224: if_icmpne     233
     227: sipush        443
     230: goto          237
     233: aload_3
     234: invokevirtual #18                 // Method java/net/URI.getPort:()I
     237: invokespecial #19                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     240: aload_0
     241: aload_1
     242: aload_3
     243: aload         5
     245: aload         6
     247: aload         8
     249: invokespecial #20                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lorg/xnio/ChannelListener;
     252: aload         8
     254: invokevirtual #35                 // Method org/xnio/ssl/XnioSsl.openSslConnection:(Lorg/xnio/XnioWorker;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     257: aload_0
     258: aload_1
     259: invokespecial #22                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
     262: aconst_null
     263: invokeinterface #23,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     268: pop
     269: goto          335
     272: aload         5
     274: aload         4
     276: aload_2
     277: new           #16                 // class java/net/InetSocketAddress
     280: dup
     281: aload_3
     282: invokevirtual #17                 // Method java/net/URI.getHost:()Ljava/lang/String;
     285: aload_3
     286: invokevirtual #18                 // Method java/net/URI.getPort:()I
     289: iconst_m1
     290: if_icmpne     299
     293: sipush        443
     296: goto          303
     299: aload_3
     300: invokevirtual #18                 // Method java/net/URI.getPort:()I
     303: invokespecial #19                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     306: aload_0
     307: aload_1
     308: aload_3
     309: aload         5
     311: aload         6
     313: aload         8
     315: invokespecial #20                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lorg/xnio/ChannelListener;
     318: aload         8
     320: invokevirtual #36                 // Method org/xnio/ssl/XnioSsl.openSslConnection:(Lorg/xnio/XnioWorker;Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     323: aload_0
     324: aload_1
     325: invokespecial #22                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
     328: aconst_null
     329: invokeinterface #23,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     334: pop
     335: return

  public void connect(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.InetSocketAddress, java.net.URI, org.xnio.XnioIoThread, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_3
       1: invokevirtual #14                 // Method java/net/URI.getScheme:()Ljava/lang/String;
       4: ldc           #11                 // String spdy-plain
       6: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          142
      12: aload_2
      13: ifnonnull     79
      16: aload         4
      18: new           #16                 // class java/net/InetSocketAddress
      21: dup
      22: aload_3
      23: invokevirtual #17                 // Method java/net/URI.getHost:()Ljava/lang/String;
      26: aload_3
      27: invokevirtual #18                 // Method java/net/URI.getPort:()I
      30: iconst_m1
      31: if_icmpne     40
      34: sipush        443
      37: goto          44
      40: aload_3
      41: invokevirtual #18                 // Method java/net/URI.getPort:()I
      44: invokespecial #19                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      47: aload_0
      48: aload_1
      49: aload_3
      50: aload         5
      52: aload         6
      54: aload         7
      56: invokespecial #20                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lorg/xnio/ChannelListener;
      59: aload         7
      61: invokevirtual #37                 // Method org/xnio/XnioIoThread.openStreamConnection:(Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
      64: aload_0
      65: aload_1
      66: invokespecial #22                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
      69: aconst_null
      70: invokeinterface #23,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
      75: pop
      76: goto          141
      79: aload         4
      81: aload_2
      82: new           #16                 // class java/net/InetSocketAddress
      85: dup
      86: aload_3
      87: invokevirtual #17                 // Method java/net/URI.getHost:()Ljava/lang/String;
      90: aload_3
      91: invokevirtual #18                 // Method java/net/URI.getPort:()I
      94: iconst_m1
      95: if_icmpne     104
      98: sipush        443
     101: goto          108
     104: aload_3
     105: invokevirtual #18                 // Method java/net/URI.getPort:()I
     108: invokespecial #19                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     111: aload_0
     112: aload_1
     113: aload_3
     114: aload         5
     116: aload         6
     118: aload         7
     120: invokespecial #20                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lorg/xnio/ChannelListener;
     123: aconst_null
     124: aload         7
     126: invokevirtual #38                 // Method org/xnio/XnioIoThread.openStreamConnection:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     129: aload_0
     130: aload_1
     131: invokespecial #22                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
     134: aconst_null
     135: invokeinterface #23,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     140: pop
     141: return
     142: getstatic     #25                 // Field ALPN_PUT_METHOD:Ljava/lang/reflect/Method;
     145: ifnonnull     163
     148: aload_1
     149: getstatic     #26                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     152: invokeinterface #27,  1           // InterfaceMethod io/undertow/UndertowMessages.jettyNPNNotAvailable:()Ljava/io/IOException;
     157: invokeinterface #28,  2           // InterfaceMethod io/undertow/client/ClientCallback.failed:(Ljava/io/IOException;)V
     162: return
     163: aload         5
     165: ifnonnull     183
     168: aload_1
     169: getstatic     #26                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     172: invokeinterface #29,  1           // InterfaceMethod io/undertow/UndertowMessages.sslWasNull:()Ljava/io/IOException;
     177: invokeinterface #28,  2           // InterfaceMethod io/undertow/client/ClientCallback.failed:(Ljava/io/IOException;)V
     182: return
     183: invokestatic  #30                 // Method org/xnio/OptionMap.builder:()Lorg/xnio/OptionMap$Builder;
     186: aload         7
     188: invokevirtual #31                 // Method org/xnio/OptionMap$Builder.addAll:(Lorg/xnio/OptionMap;)Lorg/xnio/OptionMap$Builder;
     191: getstatic     #32                 // Field org/xnio/Options.SSL_STARTTLS:Lorg/xnio/Option;
     194: iconst_1
     195: invokevirtual #33                 // Method org/xnio/OptionMap$Builder.set:(Lorg/xnio/Option;Z)Lorg/xnio/OptionMap$Builder;
     198: invokevirtual #34                 // Method org/xnio/OptionMap$Builder.getMap:()Lorg/xnio/OptionMap;
     201: astore        8
     203: aload_2
     204: ifnonnull     272
     207: aload         5
     209: aload         4
     211: new           #16                 // class java/net/InetSocketAddress
     214: dup
     215: aload_3
     216: invokevirtual #17                 // Method java/net/URI.getHost:()Ljava/lang/String;
     219: aload_3
     220: invokevirtual #18                 // Method java/net/URI.getPort:()I
     223: iconst_m1
     224: if_icmpne     233
     227: sipush        443
     230: goto          237
     233: aload_3
     234: invokevirtual #18                 // Method java/net/URI.getPort:()I
     237: invokespecial #19                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     240: aload_0
     241: aload_1
     242: aload_3
     243: aload         5
     245: aload         6
     247: aload         8
     249: invokespecial #20                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lorg/xnio/ChannelListener;
     252: aload         8
     254: invokevirtual #39                 // Method org/xnio/ssl/XnioSsl.openSslConnection:(Lorg/xnio/XnioIoThread;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     257: aload_0
     258: aload_1
     259: invokespecial #22                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
     262: aconst_null
     263: invokeinterface #23,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     268: pop
     269: goto          335
     272: aload         5
     274: aload         4
     276: aload_2
     277: new           #16                 // class java/net/InetSocketAddress
     280: dup
     281: aload_3
     282: invokevirtual #17                 // Method java/net/URI.getHost:()Ljava/lang/String;
     285: aload_3
     286: invokevirtual #18                 // Method java/net/URI.getPort:()I
     289: iconst_m1
     290: if_icmpne     299
     293: sipush        443
     296: goto          303
     299: aload_3
     300: invokevirtual #18                 // Method java/net/URI.getPort:()I
     303: invokespecial #19                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     306: aload_0
     307: aload_1
     308: aload_3
     309: aload         5
     311: aload         6
     313: aload         8
     315: invokespecial #20                 // Method createOpenListener:(Lio/undertow/client/ClientCallback;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lorg/xnio/ChannelListener;
     318: aload         8
     320: invokevirtual #40                 // Method org/xnio/ssl/XnioSsl.openSslConnection:(Lorg/xnio/XnioIoThread;Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Lorg/xnio/ChannelListener;Lorg/xnio/OptionMap;)Lorg/xnio/IoFuture;
     323: aload_0
     324: aload_1
     325: invokespecial #22                 // Method createNotifier:(Lio/undertow/client/ClientCallback;)Lorg/xnio/IoFuture$Notifier;
     328: aconst_null
     329: invokeinterface #23,  3           // InterfaceMethod org/xnio/IoFuture.addNotifier:(Lorg/xnio/IoFuture$Notifier;Ljava/lang/Object;)Lorg/xnio/IoFuture;
     334: pop
     335: return

  private org.xnio.IoFuture$Notifier<org.xnio.StreamConnection, java.lang.Object> createNotifier(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>);
    Code:
       0: new           #41                 // class io/undertow/client/spdy/SpdyClientProvider$1
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #42                 // Method io/undertow/client/spdy/SpdyClientProvider$1."<init>":(Lio/undertow/client/spdy/SpdyClientProvider;Lio/undertow/client/ClientCallback;)V
       9: areturn

  private org.xnio.ChannelListener<org.xnio.StreamConnection> createOpenListener(io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.URI, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: new           #43                 // class io/undertow/client/spdy/SpdyClientProvider$2
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload         4
      10: aload         5
      12: invokespecial #44                 // Method io/undertow/client/spdy/SpdyClientProvider$2."<init>":(Lio/undertow/client/spdy/SpdyClientProvider;Lio/undertow/client/ClientCallback;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
      15: areturn

  private void handleConnected(org.xnio.StreamConnection, io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.net.URI, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_1
       1: instanceof    #45                 // class org/xnio/ssl/SslConnection
       4: ifeq          28
       7: aload_1
       8: aload_2
       9: aload         5
      11: aload         6
      13: new           #46                 // class io/undertow/client/spdy/SpdyClientProvider$3
      16: dup
      17: aload_0
      18: aload_2
      19: invokespecial #47                 // Method io/undertow/client/spdy/SpdyClientProvider$3."<init>":(Lio/undertow/client/spdy/SpdyClientProvider;Lio/undertow/client/ClientCallback;)V
      22: invokestatic  #48                 // Method handlePotentialSpdyConnection:(Lorg/xnio/StreamConnection;Lio/undertow/client/ClientCallback;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Lorg/xnio/ChannelListener;)V
      25: goto          42
      28: aload_2
      29: aload_1
      30: aload         5
      32: aload         6
      34: invokestatic  #3                  // Method createSpdyChannel:(Lorg/xnio/StreamConnection;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lio/undertow/client/spdy/SpdyClientConnection;
      37: invokeinterface #49,  2           // InterfaceMethod io/undertow/client/ClientCallback.completed:(Ljava/lang/Object;)V
      42: return

  public static boolean isEnabled();
    Code:
       0: getstatic     #25                 // Field ALPN_PUT_METHOD:Ljava/lang/reflect/Method;
       3: ifnull        10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  public static void handlePotentialSpdyConnection(org.xnio.StreamConnection, io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap, org.xnio.ChannelListener<org.xnio.ssl.SslConnection>);
    Code:
       0: aload_0
       1: checkcast     #45                 // class org/xnio/ssl/SslConnection
       4: astore        5
       6: aload         5
       8: invokestatic  #50                 // Method io/undertow/protocols/ssl/UndertowXnioSsl.getSslEngine:(Lorg/xnio/ssl/SslConnection;)Ljavax/net/ssl/SSLEngine;
      11: astore        6
      13: new           #51                 // class io/undertow/client/spdy/SpdyClientProvider$SpdySelectionProvider
      16: dup
      17: aload         6
      19: aconst_null
      20: invokespecial #52                 // Method io/undertow/client/spdy/SpdyClientProvider$SpdySelectionProvider."<init>":(Ljavax/net/ssl/SSLEngine;Lio/undertow/client/spdy/SpdyClientProvider$1;)V
      23: astore        7
      25: getstatic     #25                 // Field ALPN_PUT_METHOD:Ljava/lang/reflect/Method;
      28: aconst_null
      29: iconst_2
      30: anewarray     #53                 // class java/lang/Object
      33: dup
      34: iconst_0
      35: aload         6
      37: aastore
      38: dup
      39: iconst_1
      40: aload         7
      42: aastore
      43: invokevirtual #54                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: goto          62
      50: astore        8
      52: aload         4
      54: aload         5
      56: invokeinterface #56,  2           // InterfaceMethod org/xnio/ChannelListener.handleEvent:(Ljava/nio/channels/Channel;)V
      61: return
      62: aload         5
      64: invokevirtual #57                 // Method org/xnio/ssl/SslConnection.startHandshake:()V
      67: aload         5
      69: invokevirtual #58                 // Method org/xnio/ssl/SslConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      72: invokevirtual #59                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
      75: new           #60                 // class io/undertow/client/spdy/SpdyClientProvider$4
      78: dup
      79: aload         7
      81: aload         5
      83: aload         4
      85: aload_1
      86: aload_0
      87: aload_2
      88: aload_3
      89: aload         6
      91: invokespecial #61                 // Method io/undertow/client/spdy/SpdyClientProvider$4."<init>":(Lio/undertow/client/spdy/SpdyClientProvider$SpdySelectionProvider;Lorg/xnio/ssl/SslConnection;Lorg/xnio/ChannelListener;Lio/undertow/client/ClientCallback;Lorg/xnio/StreamConnection;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;Ljavax/net/ssl/SSLEngine;)V
      94: invokeinterface #62,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      99: aload         5
     101: invokevirtual #58                 // Method org/xnio/ssl/SslConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     104: invokevirtual #63                 // Method org/xnio/conduits/ConduitStreamSourceChannel.resumeReads:()V
     107: goto          120
     110: astore        8
     112: aload_1
     113: aload         8
     115: invokeinterface #28,  2           // InterfaceMethod io/undertow/client/ClientCallback.failed:(Ljava/io/IOException;)V
     120: return
    Exception table:
       from    to  target type
          25    47    50   Class java/lang/Exception
          62   107   110   Class java/io/IOException

  private static io.undertow.client.spdy.SpdyClientConnection createSpdyChannel(org.xnio.StreamConnection, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_2
       1: getstatic     #65                 // Field io/undertow/UndertowOptions.ENABLE_STATISTICS:Lorg/xnio/Option;
       4: iconst_0
       5: invokevirtual #66                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
       8: ifeq          81
      11: new           #67                 // class io/undertow/client/spdy/SpdyClientProvider$ClientStatisticsImpl
      14: dup
      15: aconst_null
      16: invokespecial #68                 // Method io/undertow/client/spdy/SpdyClientProvider$ClientStatisticsImpl."<init>":(Lio/undertow/client/spdy/SpdyClientProvider$1;)V
      19: astore_3
      20: aload_0
      21: invokevirtual #69                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      24: new           #70                 // class io/undertow/conduits/BytesSentStreamSinkConduit
      27: dup
      28: aload_0
      29: invokevirtual #69                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      32: invokevirtual #71                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
      35: new           #72                 // class io/undertow/client/spdy/SpdyClientProvider$5
      38: dup
      39: aload_3
      40: invokespecial #73                 // Method io/undertow/client/spdy/SpdyClientProvider$5."<init>":(Lio/undertow/client/spdy/SpdyClientProvider$ClientStatisticsImpl;)V
      43: invokespecial #74                 // Method io/undertow/conduits/BytesSentStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/conduits/ByteActivityCallback;)V
      46: invokevirtual #75                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
      49: aload_0
      50: invokevirtual #76                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      53: new           #77                 // class io/undertow/conduits/BytesReceivedStreamSourceConduit
      56: dup
      57: aload_0
      58: invokevirtual #76                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      61: invokevirtual #78                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      64: new           #79                 // class io/undertow/client/spdy/SpdyClientProvider$6
      67: dup
      68: aload_3
      69: invokespecial #80                 // Method io/undertow/client/spdy/SpdyClientProvider$6."<init>":(Lio/undertow/client/spdy/SpdyClientProvider$ClientStatisticsImpl;)V
      72: invokespecial #81                 // Method io/undertow/conduits/BytesReceivedStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lio/undertow/conduits/ByteActivityCallback;)V
      75: invokevirtual #82                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
      78: goto          83
      81: aconst_null
      82: astore_3
      83: new           #83                 // class io/undertow/protocols/spdy/SpdyChannel
      86: dup
      87: aload_0
      88: aload_1
      89: aconst_null
      90: new           #84                 // class io/undertow/server/DefaultByteBufferPool
      93: dup
      94: iconst_0
      95: sipush        8192
      98: invokespecial #85                 // Method io/undertow/server/DefaultByteBufferPool."<init>":(ZI)V
     101: iconst_1
     102: aload_2
     103: invokespecial #86                 // Method io/undertow/protocols/spdy/SpdyChannel."<init>":(Lorg/xnio/StreamConnection;Lio/undertow/connector/ByteBufferPool;Lio/undertow/connector/PooledByteBuffer;Lio/undertow/connector/ByteBufferPool;ZLorg/xnio/OptionMap;)V
     106: astore        4
     108: new           #87                 // class io/undertow/client/spdy/SpdyClientConnection
     111: dup
     112: aload         4
     114: aload_3
     115: invokespecial #88                 // Method io/undertow/client/spdy/SpdyClientConnection."<init>":(Lio/undertow/protocols/spdy/SpdyChannel;Lio/undertow/client/ClientStatistics;)V
     118: areturn

  static void access$000(io.undertow.client.spdy.SpdyClientProvider, org.xnio.StreamConnection, io.undertow.client.ClientCallback, java.net.URI, org.xnio.ssl.XnioSsl, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokespecial #4                  // Method handleConnected:(Lorg/xnio/StreamConnection;Lio/undertow/client/ClientCallback;Ljava/net/URI;Lorg/xnio/ssl/XnioSsl;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)V
      13: return

  static io.undertow.client.spdy.SpdyClientConnection access$300(org.xnio.StreamConnection, io.undertow.connector.ByteBufferPool, org.xnio.OptionMap);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #3                  // Method createSpdyChannel:(Lorg/xnio/StreamConnection;Lio/undertow/connector/ByteBufferPool;Lorg/xnio/OptionMap;)Lio/undertow/client/spdy/SpdyClientConnection;
       6: areturn

  static java.lang.String access$400();
    Code:
       0: getstatic     #2                  // Field PROTOCOL_KEY:Ljava/lang/String;
       3: areturn

  static java.util.List access$800();
    Code:
       0: getstatic     #1                  // Field PROTOCOLS:Ljava/util/List;
       3: areturn

  static {};
    Code:
       0: new           #89                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #90                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #91                 // class io/undertow/client/spdy/SpdyClientProvider
       9: invokevirtual #92                 // Method java/lang/Class.getName:()Ljava/lang/String;
      12: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #94                 // String .protocol
      17: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #95                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: putstatic     #2                  // Field PROTOCOL_KEY:Ljava/lang/String;
      26: iconst_2
      27: anewarray     #9                  // class java/lang/String
      30: dup
      31: iconst_0
      32: ldc           #96                 // String spdy/3.1
      34: aastore
      35: dup
      36: iconst_1
      37: ldc           #97                 // String http/1.1
      39: aastore
      40: invokestatic  #12                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      43: invokestatic  #98                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      46: putstatic     #1                  // Field PROTOCOLS:Ljava/util/List;
      49: ldc           #99                 // String org.eclipse.jetty.alpn.ALPN
      51: iconst_0
      52: ldc           #91                 // class io/undertow/client/spdy/SpdyClientProvider
      54: invokevirtual #100                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      57: invokestatic  #101                // Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
      60: astore_1
      61: aload_1
      62: ldc           #102                // String put
      64: iconst_2
      65: anewarray     #103                // class java/lang/Class
      68: dup
      69: iconst_0
      70: ldc           #104                // class javax/net/ssl/SSLEngine
      72: aastore
      73: dup
      74: iconst_1
      75: ldc           #105                // String org.eclipse.jetty.alpn.ALPN$Provider
      77: iconst_0
      78: ldc           #91                 // class io/undertow/client/spdy/SpdyClientProvider
      80: invokevirtual #100                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      83: invokestatic  #101                // Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
      86: aastore
      87: invokevirtual #106                // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      90: astore_0
      91: goto          107
      94: astore_1
      95: getstatic     #107                // Field io/undertow/UndertowLogger.CLIENT_LOGGER:Lio/undertow/UndertowLogger;
      98: ldc           #108                // String SPDY
     100: invokeinterface #109,  2          // InterfaceMethod io/undertow/UndertowLogger.jettyALPNNotFound:(Ljava/lang/String;)V
     105: aconst_null
     106: astore_0
     107: aload_0
     108: putstatic     #25                 // Field ALPN_PUT_METHOD:Ljava/lang/reflect/Method;
     111: return
    Exception table:
       from    to  target type
          49    91    94   Class java/lang/Exception
}
