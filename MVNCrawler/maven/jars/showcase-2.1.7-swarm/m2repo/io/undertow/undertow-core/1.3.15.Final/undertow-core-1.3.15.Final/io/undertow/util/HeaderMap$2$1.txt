Compiled from "HeaderMap.java"
class io.undertow.util.HeaderMap$2$1 implements java.util.Iterator<io.undertow.util.HttpString> {
  final java.util.Iterator val$iterator;

  final io.undertow.util.HeaderMap$2 this$1;

  io.undertow.util.HeaderMap$2$1(io.undertow.util.HeaderMap$2, java.util.Iterator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lio/undertow/util/HeaderMap$2;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$iterator:Ljava/util/Iterator;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$iterator:Ljava/util/Iterator;
       4: invokeinterface #4,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
       9: ireturn

  public io.undertow.util.HttpString next();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$iterator:Ljava/util/Iterator;
       4: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
       9: checkcast     #6                  // class io/undertow/util/HeaderValues
      12: invokevirtual #7                  // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
      15: areturn

  public void remove();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$iterator:Ljava/util/Iterator;
       4: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.remove:()V
       9: return

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method next:()Lio/undertow/util/HttpString;
       4: areturn
}
