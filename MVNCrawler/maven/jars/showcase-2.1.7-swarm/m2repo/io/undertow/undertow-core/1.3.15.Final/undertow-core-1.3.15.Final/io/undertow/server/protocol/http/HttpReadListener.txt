Compiled from "HttpReadListener.java"
final class io.undertow.server.protocol.http.HttpReadListener implements org.xnio.ChannelListener<org.xnio.conduits.ConduitStreamSourceChannel>, java.lang.Runnable {
  private static final io.undertow.util.HttpString PRI;

  private static final byte[] PRI_EXPECTED;

  private static final java.lang.String BAD_REQUEST;

  private final io.undertow.server.protocol.http.HttpServerConnection connection;

  private final io.undertow.server.protocol.http.ParseState state;

  private final io.undertow.server.protocol.http.HttpRequestParser parser;

  private io.undertow.server.HttpServerExchange httpServerExchange;

  private int read;

  private final int maxRequestSize;

  private final long maxEntitySize;

  private final boolean recordRequestStartTime;

  private final boolean allowUnknownProtocols;

  private volatile int requestState;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.undertow.server.protocol.http.HttpReadListener> requestStateUpdater;

  private final io.undertow.server.ConnectorStatisticsImpl connectorStatistics;

  private io.undertow.server.protocol.ParseTimeoutUpdater parseTimeoutUpdater;

  io.undertow.server.protocol.http.HttpReadListener(io.undertow.server.protocol.http.HttpServerConnection, io.undertow.server.protocol.http.HttpRequestParser, io.undertow.server.ConnectorStatisticsImpl);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class io/undertow/server/protocol/http/ParseState
       8: dup
       9: invokespecial #4                  // Method io/undertow/server/protocol/http/ParseState."<init>":()V
      12: putfield      #5                  // Field state:Lio/undertow/server/protocol/http/ParseState;
      15: aload_0
      16: iconst_0
      17: putfield      #6                  // Field read:I
      20: aload_0
      21: aload_1
      22: putfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
      25: aload_0
      26: aload_2
      27: putfield      #8                  // Field parser:Lio/undertow/server/protocol/http/HttpRequestParser;
      30: aload_0
      31: aload_3
      32: putfield      #9                  // Field connectorStatistics:Lio/undertow/server/ConnectorStatisticsImpl;
      35: aload_0
      36: aload_1
      37: invokevirtual #10                 // Method io/undertow/server/protocol/http/HttpServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
      40: getstatic     #11                 // Field io/undertow/UndertowOptions.MAX_HEADER_SIZE:Lorg/xnio/Option;
      43: ldc           #13                 // int 1048576
      45: invokevirtual #14                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      48: putfield      #15                 // Field maxRequestSize:I
      51: aload_0
      52: aload_1
      53: invokevirtual #10                 // Method io/undertow/server/protocol/http/HttpServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
      56: getstatic     #16                 // Field io/undertow/UndertowOptions.MAX_ENTITY_SIZE:Lorg/xnio/Option;
      59: ldc2_w        #17                 // long -1l
      62: invokevirtual #19                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;J)J
      65: putfield      #20                 // Field maxEntitySize:J
      68: aload_0
      69: aload_1
      70: invokevirtual #10                 // Method io/undertow/server/protocol/http/HttpServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
      73: getstatic     #21                 // Field io/undertow/UndertowOptions.RECORD_REQUEST_START_TIME:Lorg/xnio/Option;
      76: iconst_0
      77: invokevirtual #22                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      80: putfield      #23                 // Field recordRequestStartTime:Z
      83: aload_0
      84: aload_1
      85: invokevirtual #10                 // Method io/undertow/server/protocol/http/HttpServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
      88: getstatic     #24                 // Field io/undertow/UndertowOptions.ALLOW_UNKNOWN_PROTOCOLS:Lorg/xnio/Option;
      91: iconst_0
      92: invokevirtual #22                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      95: putfield      #25                 // Field allowUnknownProtocols:Z
      98: aload_1
      99: invokevirtual #10                 // Method io/undertow/server/protocol/http/HttpServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
     102: getstatic     #26                 // Field io/undertow/UndertowOptions.REQUEST_PARSE_TIMEOUT:Lorg/xnio/Option;
     105: iconst_m1
     106: invokevirtual #14                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     109: istore        4
     111: aload_1
     112: invokevirtual #10                 // Method io/undertow/server/protocol/http/HttpServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
     115: getstatic     #27                 // Field io/undertow/UndertowOptions.NO_REQUEST_TIMEOUT:Lorg/xnio/Option;
     118: iconst_m1
     119: invokevirtual #14                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     122: istore        5
     124: iload         5
     126: ifge          142
     129: iload         4
     131: ifge          142
     134: aload_0
     135: aconst_null
     136: putfield      #28                 // Field parseTimeoutUpdater:Lio/undertow/server/protocol/ParseTimeoutUpdater;
     139: goto          168
     142: aload_0
     143: new           #29                 // class io/undertow/server/protocol/ParseTimeoutUpdater
     146: dup
     147: aload_1
     148: iload         4
     150: i2l
     151: iload         5
     153: i2l
     154: invokespecial #30                 // Method io/undertow/server/protocol/ParseTimeoutUpdater."<init>":(Lio/undertow/server/ServerConnection;JJ)V
     157: putfield      #28                 // Field parseTimeoutUpdater:Lio/undertow/server/protocol/ParseTimeoutUpdater;
     160: aload_1
     161: aload_0
     162: getfield      #28                 // Field parseTimeoutUpdater:Lio/undertow/server/protocol/ParseTimeoutUpdater;
     165: invokevirtual #31                 // Method io/undertow/server/protocol/http/HttpServerConnection.addCloseListener:(Lio/undertow/server/ServerConnection$CloseListener;)V
     168: return

  public void newRequest();
    Code:
       0: aload_0
       1: getfield      #5                  // Field state:Lio/undertow/server/protocol/http/ParseState;
       4: invokevirtual #32                 // Method io/undertow/server/protocol/http/ParseState.reset:()V
       7: aload_0
       8: iconst_0
       9: putfield      #6                  // Field read:I
      12: aload_0
      13: getfield      #28                 // Field parseTimeoutUpdater:Lio/undertow/server/protocol/ParseTimeoutUpdater;
      16: ifnull        26
      19: aload_0
      20: getfield      #28                 // Field parseTimeoutUpdater:Lio/undertow/server/protocol/ParseTimeoutUpdater;
      23: invokevirtual #33                 // Method io/undertow/server/protocol/ParseTimeoutUpdater.connectionIdle:()V
      26: aload_0
      27: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
      30: aconst_null
      31: invokevirtual #34                 // Method io/undertow/server/protocol/http/HttpServerConnection.setCurrentExchange:(Lio/undertow/server/HttpServerExchange;)V
      34: return

  public void handleEvent(org.xnio.conduits.ConduitStreamSourceChannel);
    Code:
       0: getstatic     #35                 // Field requestStateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
       7: ifeq          49
      10: getstatic     #35                 // Field requestStateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      13: aload_0
      14: iconst_1
      15: iconst_2
      16: invokevirtual #37                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      19: ifeq          0
      22: aload_1
      23: invokevirtual #38                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
      26: getstatic     #35                 // Field requestStateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      29: aload_0
      30: iconst_1
      31: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
      34: goto          48
      37: astore_2
      38: getstatic     #35                 // Field requestStateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      41: aload_0
      42: iconst_1
      43: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
      46: aload_2
      47: athrow
      48: return
      49: aload_0
      50: aload_1
      51: invokevirtual #40                 // Method handleEventWithNoRunningRequest:(Lorg/xnio/conduits/ConduitStreamSourceChannel;)V
      54: return
    Exception table:
       from    to  target type
          22    26    37   any

  public void handleEventWithNoRunningRequest(org.xnio.conduits.ConduitStreamSourceChannel);
    Code:
       0: aload_0
       1: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
       4: invokevirtual #41                 // Method io/undertow/server/protocol/http/HttpServerConnection.getExtraBytes:()Lio/undertow/connector/PooledByteBuffer;
       7: astore_2
       8: aload_2
       9: ifnonnull     27
      12: aload_0
      13: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
      16: invokevirtual #42                 // Method io/undertow/server/protocol/http/HttpServerConnection.getOriginalSourceConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      19: invokeinterface #43,  1           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.isReadShutdown:()Z
      24: ifne          42
      27: aload_0
      28: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
      31: invokevirtual #44                 // Method io/undertow/server/protocol/http/HttpServerConnection.getOriginalSinkConduit:()Lorg/xnio/conduits/StreamSinkConduit;
      34: invokeinterface #45,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.isWriteShutdown:()Z
      39: ifeq          54
      42: aload_0
      43: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
      46: invokestatic  #46                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      49: aload_1
      50: invokevirtual #38                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
      53: return
      54: aload_2
      55: ifnonnull     73
      58: aload_0
      59: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
      62: invokevirtual #47                 // Method io/undertow/server/protocol/http/HttpServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      65: invokeinterface #48,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      70: goto          74
      73: aload_2
      74: astore_3
      75: aload_3
      76: invokeinterface #49,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      81: astore        4
      83: iconst_1
      84: istore        5
      86: iconst_0
      87: istore        7
      89: aload_2
      90: ifnonnull     143
      93: aload         4
      95: invokevirtual #50                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      98: pop
      99: aload_1
     100: aload         4
     102: invokevirtual #51                 // Method org/xnio/conduits/ConduitStreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
     105: istore        6
     107: goto          150
     110: astore        8
     112: getstatic     #53                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     115: ldc           #54                 // String Error reading request
     117: aload         8
     119: invokeinterface #55,  3           // InterfaceMethod io/undertow/UndertowLogger.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     124: aload_0
     125: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
     128: invokestatic  #46                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     131: iload         5
     133: ifeq          142
     136: aload_3
     137: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     142: return
     143: aload         4
     145: invokevirtual #57                 // Method java/nio/ByteBuffer.remaining:()I
     148: istore        6
     150: iload         6
     152: ifgt          193
     155: iload         7
     157: ifeq          174
     160: aload_0
     161: getfield      #28                 // Field parseTimeoutUpdater:Lio/undertow/server/protocol/ParseTimeoutUpdater;
     164: ifnull        174
     167: aload_0
     168: getfield      #28                 // Field parseTimeoutUpdater:Lio/undertow/server/protocol/ParseTimeoutUpdater;
     171: invokevirtual #58                 // Method io/undertow/server/protocol/ParseTimeoutUpdater.failedParse:()V
     174: aload_0
     175: aload_1
     176: iload         6
     178: invokespecial #59                 // Method handleFailedRead:(Lorg/xnio/conduits/ConduitStreamSourceChannel;I)V
     181: iload         5
     183: ifeq          192
     186: aload_3
     187: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     192: return
     193: iconst_1
     194: istore        7
     196: aload_2
     197: ifnull        213
     200: aconst_null
     201: astore_2
     202: aload_0
     203: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
     206: aconst_null
     207: invokevirtual #60                 // Method io/undertow/server/protocol/http/HttpServerConnection.setExtraBytes:(Lio/undertow/connector/PooledByteBuffer;)V
     210: goto          219
     213: aload         4
     215: invokevirtual #61                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     218: pop
     219: aload         4
     221: invokevirtual #57                 // Method java/nio/ByteBuffer.remaining:()I
     224: istore        8
     226: aload_0
     227: getfield      #62                 // Field httpServerExchange:Lio/undertow/server/HttpServerExchange;
     230: ifnonnull     252
     233: aload_0
     234: new           #63                 // class io/undertow/server/HttpServerExchange
     237: dup
     238: aload_0
     239: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
     242: aload_0
     243: getfield      #20                 // Field maxEntitySize:J
     246: invokespecial #64                 // Method io/undertow/server/HttpServerExchange."<init>":(Lio/undertow/server/ServerConnection;J)V
     249: putfield      #62                 // Field httpServerExchange:Lio/undertow/server/HttpServerExchange;
     252: aload_0
     253: getfield      #8                  // Field parser:Lio/undertow/server/protocol/http/HttpRequestParser;
     256: aload         4
     258: aload_0
     259: getfield      #5                  // Field state:Lio/undertow/server/protocol/http/ParseState;
     262: aload_0
     263: getfield      #62                 // Field httpServerExchange:Lio/undertow/server/HttpServerExchange;
     266: invokevirtual #65                 // Method io/undertow/server/protocol/http/HttpRequestParser.handle:(Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/ParseState;Lio/undertow/server/HttpServerExchange;)V
     269: aload         4
     271: invokevirtual #66                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     274: ifeq          288
     277: iconst_0
     278: istore        5
     280: aload_0
     281: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
     284: aload_3
     285: invokevirtual #60                 // Method io/undertow/server/protocol/http/HttpServerConnection.setExtraBytes:(Lio/undertow/connector/PooledByteBuffer;)V
     288: aload_0
     289: getfield      #6                  // Field read:I
     292: iload         8
     294: aload         4
     296: invokevirtual #57                 // Method java/nio/ByteBuffer.remaining:()I
     299: isub
     300: iadd
     301: istore        9
     303: aload_0
     304: iload         9
     306: putfield      #6                  // Field read:I
     309: aload_0
     310: getfield      #6                  // Field read:I
     313: aload_0
     314: getfield      #15                 // Field maxRequestSize:I
     317: if_icmple     358
     320: getstatic     #67                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     323: aload_0
     324: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
     327: invokevirtual #68                 // Method io/undertow/server/protocol/http/HttpServerConnection.getPeerAddress:()Ljava/net/SocketAddress;
     330: aload_0
     331: getfield      #15                 // Field maxRequestSize:I
     334: invokeinterface #69,  3           // InterfaceMethod io/undertow/UndertowLogger.requestHeaderWasTooLarge:(Ljava/net/SocketAddress;I)V
     339: aload_0
     340: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
     343: invokestatic  #46                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     346: iload         5
     348: ifeq          357
     351: aload_3
     352: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     357: return
     358: aload_0
     359: getfield      #5                  // Field state:Lio/undertow/server/protocol/http/ParseState;
     362: invokevirtual #70                 // Method io/undertow/server/protocol/http/ParseState.isComplete:()Z
     365: ifeq          89
     368: aload_0
     369: getfield      #28                 // Field parseTimeoutUpdater:Lio/undertow/server/protocol/ParseTimeoutUpdater;
     372: ifnull        382
     375: aload_0
     376: getfield      #28                 // Field parseTimeoutUpdater:Lio/undertow/server/protocol/ParseTimeoutUpdater;
     379: invokevirtual #71                 // Method io/undertow/server/protocol/ParseTimeoutUpdater.requestStarted:()V
     382: aload_0
     383: getfield      #62                 // Field httpServerExchange:Lio/undertow/server/HttpServerExchange;
     386: astore        8
     388: aload         8
     390: aload_0
     391: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
     394: invokevirtual #72                 // Method io/undertow/server/protocol/http/HttpServerConnection.getSslSession:()Ljavax/net/ssl/SSLSession;
     397: ifnull        405
     400: ldc           #73                 // String https
     402: goto          407
     405: ldc           #74                 // String http
     407: invokevirtual #75                 // Method io/undertow/server/HttpServerExchange.setRequestScheme:(Ljava/lang/String;)Lio/undertow/server/HttpServerExchange;
     410: pop
     411: aload_0
     412: aconst_null
     413: putfield      #62                 // Field httpServerExchange:Lio/undertow/server/HttpServerExchange;
     416: getstatic     #35                 // Field requestStateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     419: aload_0
     420: iconst_1
     421: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
     424: aload         8
     426: invokevirtual #76                 // Method io/undertow/server/HttpServerExchange.getProtocol:()Lio/undertow/util/HttpString;
     429: getstatic     #77                 // Field io/undertow/util/Protocols.HTTP_2_0:Lio/undertow/util/HttpString;
     432: if_acmpne     456
     435: aload_0
     436: aload_3
     437: aload         8
     439: invokespecial #78                 // Method handleHttp2PriorKnowledge:(Lio/undertow/connector/PooledByteBuffer;Lio/undertow/server/HttpServerExchange;)Z
     442: istore        5
     444: iload         5
     446: ifeq          455
     449: aload_3
     450: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     455: return
     456: aload_0
     457: getfield      #25                 // Field allowUnknownProtocols:Z
     460: ifne          546
     463: aload         8
     465: invokevirtual #76                 // Method io/undertow/server/HttpServerExchange.getProtocol:()Lio/undertow/util/HttpString;
     468: astore        9
     470: aload         9
     472: getstatic     #79                 // Field io/undertow/util/Protocols.HTTP_1_1:Lio/undertow/util/HttpString;
     475: if_acmpeq     546
     478: aload         9
     480: getstatic     #80                 // Field io/undertow/util/Protocols.HTTP_1_0:Lio/undertow/util/HttpString;
     483: if_acmpeq     546
     486: aload         9
     488: getstatic     #81                 // Field io/undertow/util/Protocols.HTTP_0_9:Lio/undertow/util/HttpString;
     491: if_acmpeq     546
     494: getstatic     #53                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     497: ldc           #82                 // String Closing connection from %s due to unknown protocol %s
     499: aload_0
     500: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
     503: invokevirtual #83                 // Method io/undertow/server/protocol/http/HttpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
     506: invokevirtual #84                 // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
     509: aload         9
     511: invokeinterface #85,  4           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     516: aload_0
     517: aload_0
     518: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
     521: invokevirtual #83                 // Method io/undertow/server/protocol/http/HttpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
     524: new           #52                 // class java/io/IOException
     527: dup
     528: invokespecial #86                 // Method java/io/IOException."<init>":()V
     531: invokespecial #87                 // Method sendBadRequestAndClose:(Lorg/xnio/StreamConnection;Ljava/lang/Exception;)V
     534: iload         5
     536: ifeq          545
     539: aload_3
     540: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     545: return
     546: aload         8
     548: invokestatic  #88                 // Method io/undertow/server/protocol/http/HttpTransferEncoding.setupRequest:(Lio/undertow/server/HttpServerExchange;)V
     551: aload_0
     552: getfield      #23                 // Field recordRequestStartTime:Z
     555: ifeq          563
     558: aload         8
     560: invokestatic  #89                 // Method io/undertow/server/Connectors.setRequestStartTime:(Lio/undertow/server/HttpServerExchange;)V
     563: aload_0
     564: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
     567: aload         8
     569: invokevirtual #34                 // Method io/undertow/server/protocol/http/HttpServerConnection.setCurrentExchange:(Lio/undertow/server/HttpServerExchange;)V
     572: aload_0
     573: getfield      #9                  // Field connectorStatistics:Lio/undertow/server/ConnectorStatisticsImpl;
     576: ifnull        588
     579: aload_0
     580: getfield      #9                  // Field connectorStatistics:Lio/undertow/server/ConnectorStatisticsImpl;
     583: aload         8
     585: invokevirtual #90                 // Method io/undertow/server/ConnectorStatisticsImpl.setup:(Lio/undertow/server/HttpServerExchange;)V
     588: aload_0
     589: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
     592: invokevirtual #72                 // Method io/undertow/server/protocol/http/HttpServerConnection.getSslSession:()Ljavax/net/ssl/SSLSession;
     595: ifnull        602
     598: aload_1
     599: invokevirtual #38                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
     602: aload_0
     603: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
     606: invokevirtual #91                 // Method io/undertow/server/protocol/http/HttpServerConnection.getRootHandler:()Lio/undertow/server/HttpHandler;
     609: aload         8
     611: invokestatic  #92                 // Method io/undertow/server/Connectors.executeRootHandler:(Lio/undertow/server/HttpHandler;Lio/undertow/server/HttpServerExchange;)V
     614: iload         5
     616: ifeq          671
     619: aload_3
     620: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     625: goto          671
     628: astore        6
     630: aload_0
     631: aload_0
     632: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
     635: invokevirtual #83                 // Method io/undertow/server/protocol/http/HttpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
     638: aload         6
     640: invokespecial #87                 // Method sendBadRequestAndClose:(Lorg/xnio/StreamConnection;Ljava/lang/Exception;)V
     643: iload         5
     645: ifeq          654
     648: aload_3
     649: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     654: return
     655: astore        10
     657: iload         5
     659: ifeq          668
     662: aload_3
     663: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     668: aload         10
     670: athrow
     671: return
    Exception table:
       from    to  target type
          99   107   110   Class java/io/IOException
          86   131   628   Class java/lang/Exception
         143   181   628   Class java/lang/Exception
         193   346   628   Class java/lang/Exception
         358   444   628   Class java/lang/Exception
         456   534   628   Class java/lang/Exception
         546   614   628   Class java/lang/Exception
          86   131   655   any
         143   181   655   any
         193   346   655   any
         358   444   655   any
         456   534   655   any
         546   614   655   any
         628   643   655   any
         655   657   655   any

  private boolean handleHttp2PriorKnowledge(io.undertow.connector.PooledByteBuffer, io.undertow.server.HttpServerExchange) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #94                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
       4: getstatic     #95                 // Field PRI:Lio/undertow/util/HttpString;
       7: invokevirtual #96                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
      10: ifeq          48
      13: aload_0
      14: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
      17: invokevirtual #10                 // Method io/undertow/server/protocol/http/HttpServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
      20: getstatic     #97                 // Field io/undertow/UndertowOptions.ENABLE_HTTP2:Lorg/xnio/Option;
      23: iconst_0
      24: invokevirtual #22                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      27: ifeq          48
      30: aload_0
      31: aload_0
      32: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
      35: invokevirtual #83                 // Method io/undertow/server/protocol/http/HttpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
      38: aload_0
      39: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
      42: aload_1
      43: invokespecial #98                 // Method handleHttp2PriorKnowledge:(Lorg/xnio/StreamConnection;Lio/undertow/server/protocol/http/HttpServerConnection;Lio/undertow/connector/PooledByteBuffer;)V
      46: iconst_0
      47: ireturn
      48: aload_0
      49: aload_0
      50: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
      53: invokevirtual #83                 // Method io/undertow/server/protocol/http/HttpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
      56: new           #52                 // class java/io/IOException
      59: dup
      60: invokespecial #86                 // Method java/io/IOException."<init>":()V
      63: invokespecial #87                 // Method sendBadRequestAndClose:(Lorg/xnio/StreamConnection;Ljava/lang/Exception;)V
      66: iconst_1
      67: ireturn

  private void handleFailedRead(org.xnio.conduits.ConduitStreamSourceChannel, int);
    Code:
       0: iload_2
       1: ifne          16
       4: aload_1
       5: aload_0
       6: invokevirtual #99                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setReadListener:(Lorg/xnio/ChannelListener;)V
       9: aload_1
      10: invokevirtual #100                // Method org/xnio/conduits/ConduitStreamSourceChannel.resumeReads:()V
      13: goto          28
      16: iload_2
      17: iconst_m1
      18: if_icmpne     28
      21: aload_0
      22: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
      25: invokestatic  #46                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      28: return

  private void sendBadRequestAndClose(org.xnio.StreamConnection, java.lang.Exception);
    Code:
       0: getstatic     #53                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
       3: aload_2
       4: invokeinterface #101,  2          // InterfaceMethod io/undertow/UndertowLogger.failedToParseRequest:(Ljava/lang/Exception;)V
       9: aload_1
      10: invokevirtual #102                // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      13: invokevirtual #38                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
      16: new           #103                // class io/undertow/server/protocol/http/HttpReadListener$1
      19: dup
      20: aload_0
      21: ldc           #105                // String HTTP/1.1 400 Bad Request\r\nContent-Length: 0\r\nConnection: close\r\n\r\n
      23: aload_1
      24: invokespecial #106                // Method io/undertow/server/protocol/http/HttpReadListener$1."<init>":(Lio/undertow/server/protocol/http/HttpReadListener;Ljava/lang/String;Lorg/xnio/StreamConnection;)V
      27: aload_1
      28: invokevirtual #107                // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      31: invokevirtual #108                // Method io/undertow/server/protocol/http/HttpReadListener$1.setup:(Lorg/xnio/channels/StreamSinkChannel;)V
      34: return

  public void exchangeComplete(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
       4: invokevirtual #109                // Method io/undertow/server/protocol/http/HttpServerConnection.clearChannel:()V
       7: aload_0
       8: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
      11: astore_2
      12: aload_1
      13: invokevirtual #110                // Method io/undertow/server/HttpServerExchange.isPersistent:()Z
      16: ifeq          319
      19: aload_0
      20: aload_1
      21: invokespecial #111                // Method isUpgradeOrConnect:(Lio/undertow/server/HttpServerExchange;)Z
      24: ifne          319
      27: aload_2
      28: invokevirtual #83                 // Method io/undertow/server/protocol/http/HttpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
      31: astore_3
      32: aload_2
      33: invokevirtual #41                 // Method io/undertow/server/protocol/http/HttpServerConnection.getExtraBytes:()Lio/undertow/connector/PooledByteBuffer;
      36: ifnonnull     177
      39: aload_1
      40: invokevirtual #112                // Method io/undertow/server/HttpServerExchange.isInIoThread:()Z
      43: ifeq          76
      46: aload_0
      47: invokevirtual #113                // Method newRequest:()V
      50: aload_3
      51: invokevirtual #102                // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      54: aload_0
      55: invokevirtual #99                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setReadListener:(Lorg/xnio/ChannelListener;)V
      58: aload_3
      59: invokevirtual #102                // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      62: invokevirtual #100                // Method org/xnio/conduits/ConduitStreamSourceChannel.resumeReads:()V
      65: getstatic     #35                 // Field requestStateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      68: aload_0
      69: iconst_0
      70: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
      73: goto          316
      76: aload_2
      77: invokevirtual #42                 // Method io/undertow/server/protocol/http/HttpServerConnection.getOriginalSourceConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      80: invokeinterface #43,  1           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.isReadShutdown:()Z
      85: ifne          100
      88: aload_2
      89: invokevirtual #44                 // Method io/undertow/server/protocol/http/HttpServerConnection.getOriginalSinkConduit:()Lorg/xnio/conduits/StreamSinkConduit;
      92: invokeinterface #45,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.isWriteShutdown:()Z
      97: ifeq          119
     100: aload_3
     101: invokevirtual #102                // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     104: invokevirtual #38                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
     107: aload_3
     108: invokevirtual #107                // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     111: invokevirtual #114                // Method org/xnio/conduits/ConduitStreamSinkChannel.suspendWrites:()V
     114: aload_2
     115: invokestatic  #46                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     118: return
     119: getstatic     #35                 // Field requestStateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     122: aload_0
     123: iconst_1
     124: iconst_2
     125: invokevirtual #37                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
     128: ifeq          76
     131: aload_0
     132: invokevirtual #113                // Method newRequest:()V
     135: aload_3
     136: invokevirtual #102                // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     139: aload_0
     140: invokevirtual #99                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setReadListener:(Lorg/xnio/ChannelListener;)V
     143: aload_3
     144: invokevirtual #102                // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     147: invokevirtual #100                // Method org/xnio/conduits/ConduitStreamSourceChannel.resumeReads:()V
     150: getstatic     #35                 // Field requestStateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     153: aload_0
     154: iconst_0
     155: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
     158: goto          174
     161: astore        4
     163: getstatic     #35                 // Field requestStateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     166: aload_0
     167: iconst_0
     168: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
     171: aload         4
     173: athrow
     174: goto          316
     177: aload_1
     178: invokevirtual #112                // Method io/undertow/server/HttpServerExchange.isInIoThread:()Z
     181: ifeq          207
     184: getstatic     #35                 // Field requestStateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     187: aload_0
     188: iconst_0
     189: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
     192: aload_0
     193: invokevirtual #113                // Method newRequest:()V
     196: aload_3
     197: invokevirtual #115                // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
     200: aload_0
     201: invokevirtual #116                // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
     204: goto          316
     207: aload_2
     208: invokevirtual #44                 // Method io/undertow/server/protocol/http/HttpServerConnection.getOriginalSinkConduit:()Lorg/xnio/conduits/StreamSinkConduit;
     211: invokeinterface #45,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.isWriteShutdown:()Z
     216: ifeq          238
     219: aload_3
     220: invokevirtual #102                // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     223: invokevirtual #38                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
     226: aload_3
     227: invokevirtual #107                // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     230: invokevirtual #114                // Method org/xnio/conduits/ConduitStreamSinkChannel.suspendWrites:()V
     233: aload_2
     234: invokestatic  #46                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     237: return
     238: getstatic     #35                 // Field requestStateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     241: aload_0
     242: iconst_1
     243: iconst_2
     244: invokevirtual #37                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
     247: ifeq          207
     250: aload_0
     251: invokevirtual #113                // Method newRequest:()V
     254: aload_3
     255: invokevirtual #102                // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     258: invokevirtual #38                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
     261: getstatic     #35                 // Field requestStateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     264: aload_0
     265: iconst_0
     266: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
     269: goto          285
     272: astore        5
     274: getstatic     #35                 // Field requestStateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     277: aload_0
     278: iconst_0
     279: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
     282: aload         5
     284: athrow
     285: goto          288
     288: aload_1
     289: invokevirtual #117                // Method io/undertow/server/HttpServerExchange.getDispatchExecutor:()Ljava/util/concurrent/Executor;
     292: astore        4
     294: aload         4
     296: ifnonnull     308
     299: aload_1
     300: invokevirtual #118                // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     303: invokevirtual #119                // Method io/undertow/server/ServerConnection.getWorker:()Lorg/xnio/XnioWorker;
     306: astore        4
     308: aload         4
     310: aload_0
     311: invokeinterface #120,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
     316: goto          461
     319: aload_1
     320: invokevirtual #110                // Method io/undertow/server/HttpServerExchange.isPersistent:()Z
     323: ifne          333
     326: aload_2
     327: invokestatic  #46                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     330: goto          461
     333: aload_2
     334: invokevirtual #41                 // Method io/undertow/server/protocol/http/HttpServerConnection.getExtraBytes:()Lio/undertow/connector/PooledByteBuffer;
     337: ifnull        368
     340: aload_2
     341: invokevirtual #83                 // Method io/undertow/server/protocol/http/HttpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
     344: invokevirtual #102                // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     347: new           #121                // class io/undertow/conduits/ReadDataStreamSourceConduit
     350: dup
     351: aload_2
     352: invokevirtual #83                 // Method io/undertow/server/protocol/http/HttpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
     355: invokevirtual #102                // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     358: invokevirtual #122                // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
     361: aload_2
     362: invokespecial #123                // Method io/undertow/conduits/ReadDataStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lio/undertow/server/AbstractServerConnection;)V
     365: invokevirtual #124                // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
     368: aload_2
     369: invokevirtual #83                 // Method io/undertow/server/protocol/http/HttpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
     372: invokevirtual #107                // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     375: invokevirtual #125                // Method org/xnio/conduits/ConduitStreamSinkChannel.flush:()Z
     378: ifne          430
     381: aload_2
     382: invokevirtual #83                 // Method io/undertow/server/protocol/http/HttpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
     385: invokevirtual #107                // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     388: new           #126                // class io/undertow/server/protocol/http/HttpReadListener$2
     391: dup
     392: aload_0
     393: aload_2
     394: aload_1
     395: invokespecial #127                // Method io/undertow/server/protocol/http/HttpReadListener$2."<init>":(Lio/undertow/server/protocol/http/HttpReadListener;Lio/undertow/server/protocol/http/HttpServerConnection;Lio/undertow/server/HttpServerExchange;)V
     398: new           #128                // class io/undertow/util/ClosingChannelExceptionHandler
     401: dup
     402: iconst_1
     403: anewarray     #129                // class java/io/Closeable
     406: dup
     407: iconst_0
     408: aload_2
     409: aastore
     410: invokespecial #130                // Method io/undertow/util/ClosingChannelExceptionHandler."<init>":([Ljava/io/Closeable;)V
     413: invokestatic  #131                // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
     416: invokevirtual #132                // Method org/xnio/conduits/ConduitStreamSinkChannel.setWriteListener:(Lorg/xnio/ChannelListener;)V
     419: aload_2
     420: invokevirtual #83                 // Method io/undertow/server/protocol/http/HttpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
     423: invokevirtual #107                // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     426: invokevirtual #133                // Method org/xnio/conduits/ConduitStreamSinkChannel.resumeWrites:()V
     429: return
     430: aload_2
     431: invokevirtual #134                // Method io/undertow/server/protocol/http/HttpServerConnection.getUpgradeListener:()Lio/undertow/server/HttpUpgradeListener;
     434: aload_2
     435: invokevirtual #83                 // Method io/undertow/server/protocol/http/HttpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
     438: aload_1
     439: invokeinterface #135,  3          // InterfaceMethod io/undertow/server/HttpUpgradeListener.handleUpgrade:(Lorg/xnio/StreamConnection;Lio/undertow/server/HttpServerExchange;)V
     444: goto          461
     447: astore_3
     448: getstatic     #53                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     451: aload_3
     452: invokeinterface #136,  2          // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
     457: aload_2
     458: invokestatic  #46                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     461: return
    Exception table:
       from    to  target type
         131   150   161   any
         161   163   161   any
         250   261   272   any
         272   274   272   any
         368   429   447   Class java/io/IOException
         430   444   447   Class java/io/IOException

  private boolean isUpgradeOrConnect(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_1
       1: invokevirtual #137                // Method io/undertow/server/HttpServerExchange.isUpgrade:()Z
       4: ifne          33
       7: aload_1
       8: invokevirtual #94                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
      11: getstatic     #138                // Field io/undertow/util/Methods.CONNECT:Lio/undertow/util/HttpString;
      14: invokevirtual #96                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
      17: ifeq          37
      20: aload_1
      21: invokevirtual #118                // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      24: checkcast     #139                // class io/undertow/server/protocol/http/HttpServerConnection
      27: invokevirtual #140                // Method io/undertow/server/protocol/http/HttpServerConnection.isConnectHandled:()Z
      30: ifeq          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public void run();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field connection:Lio/undertow/server/protocol/http/HttpServerConnection;
       5: invokevirtual #83                 // Method io/undertow/server/protocol/http/HttpServerConnection.getChannel:()Lorg/xnio/StreamConnection;
       8: invokevirtual #102                // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      11: invokevirtual #141                // Method handleEvent:(Lorg/xnio/conduits/ConduitStreamSourceChannel;)V
      14: return

  private void handleHttp2PriorKnowledge(org.xnio.StreamConnection, io.undertow.server.protocol.http.HttpServerConnection, io.undertow.connector.PooledByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #102                // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
       4: astore        4
       6: getstatic     #142                // Field PRI_EXPECTED:[B
       9: arraylength
      10: newarray       byte
      12: astore        5
      14: aload         5
      16: invokestatic  #143                // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      19: astore        6
      21: aload_3
      22: invokeinterface #49,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      27: invokevirtual #66                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      30: ifeq          71
      33: aload_3
      34: invokeinterface #49,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      39: invokevirtual #66                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      42: ifeq          71
      45: aload         6
      47: invokevirtual #66                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      50: ifeq          71
      53: aload         6
      55: aload_3
      56: invokeinterface #49,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      61: invokevirtual #144                // Method java/nio/ByteBuffer.get:()B
      64: invokevirtual #145                // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      67: pop
      68: goto          33
      71: aload_3
      72: invokeinterface #49,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      77: invokevirtual #66                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      80: ifeq          89
      83: aload_3
      84: astore        7
      86: goto          98
      89: aload_3
      90: invokeinterface #56,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      95: aconst_null
      96: astore        7
      98: aload_0
      99: aload_1
     100: aload         6
     102: aload_2
     103: aload         7
     105: invokespecial #1                  // Method doHttp2PriRead:(Lorg/xnio/StreamConnection;Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/HttpServerConnection;Lio/undertow/connector/PooledByteBuffer;)Z
     108: ifne          140
     111: aload         4
     113: invokevirtual #146                // Method org/xnio/conduits/ConduitStreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
     116: new           #147                // class io/undertow/server/protocol/http/HttpReadListener$3
     119: dup
     120: aload_0
     121: aload_1
     122: aload         6
     124: aload_2
     125: aload         7
     127: invokespecial #148                // Method io/undertow/server/protocol/http/HttpReadListener$3."<init>":(Lio/undertow/server/protocol/http/HttpReadListener;Lorg/xnio/StreamConnection;Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/HttpServerConnection;Lio/undertow/connector/PooledByteBuffer;)V
     130: invokeinterface #149,  2          // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     135: aload         4
     137: invokevirtual #100                // Method org/xnio/conduits/ConduitStreamSourceChannel.resumeReads:()V
     140: return

  private boolean doHttp2PriRead(org.xnio.StreamConnection, java.nio.ByteBuffer, io.undertow.server.protocol.http.HttpServerConnection, io.undertow.connector.PooledByteBuffer) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #66                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          34
       7: aload_1
       8: invokevirtual #102                // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      11: aload_2
      12: invokevirtual #51                 // Method org/xnio/conduits/ConduitStreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
      15: istore        5
      17: iload         5
      19: iconst_m1
      20: if_icmpne     25
      23: iconst_1
      24: ireturn
      25: aload_2
      26: invokevirtual #66                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      29: ifeq          34
      32: iconst_0
      33: ireturn
      34: aload_2
      35: invokevirtual #61                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      38: pop
      39: iconst_0
      40: istore        5
      42: iload         5
      44: getstatic     #142                // Field PRI_EXPECTED:[B
      47: arraylength
      48: if_icmpge     79
      51: aload_2
      52: invokevirtual #144                // Method java/nio/ByteBuffer.get:()B
      55: getstatic     #142                // Field PRI_EXPECTED:[B
      58: iload         5
      60: baload
      61: if_icmpeq     73
      64: getstatic     #150                // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      67: invokeinterface #151,  1          // InterfaceMethod io/undertow/UndertowMessages.http2PriRequestFailed:()Ljava/io/IOException;
      72: athrow
      73: iinc          5, 1
      76: goto          42
      79: new           #152                // class io/undertow/protocols/http2/Http2Channel
      82: dup
      83: aload_1
      84: aconst_null
      85: aload_3
      86: invokevirtual #47                 // Method io/undertow/server/protocol/http/HttpServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      89: aload         4
      91: iconst_0
      92: iconst_0
      93: iconst_0
      94: aload_3
      95: invokevirtual #10                 // Method io/undertow/server/protocol/http/HttpServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
      98: invokespecial #153                // Method io/undertow/protocols/http2/Http2Channel."<init>":(Lorg/xnio/StreamConnection;Ljava/lang/String;Lio/undertow/connector/ByteBufferPool;Lio/undertow/connector/PooledByteBuffer;ZZZLorg/xnio/OptionMap;)V
     101: astore        5
     103: new           #154                // class io/undertow/server/protocol/http2/Http2ReceiveListener
     106: dup
     107: aload_3
     108: invokevirtual #91                 // Method io/undertow/server/protocol/http/HttpServerConnection.getRootHandler:()Lio/undertow/server/HttpHandler;
     111: aload_3
     112: invokevirtual #10                 // Method io/undertow/server/protocol/http/HttpServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
     115: aload_3
     116: invokevirtual #155                // Method io/undertow/server/protocol/http/HttpServerConnection.getBufferSize:()I
     119: aconst_null
     120: invokespecial #156                // Method io/undertow/server/protocol/http2/Http2ReceiveListener."<init>":(Lio/undertow/server/HttpHandler;Lorg/xnio/OptionMap;ILio/undertow/server/ConnectorStatisticsImpl;)V
     123: astore        6
     125: aload         5
     127: invokevirtual #157                // Method io/undertow/protocols/http2/Http2Channel.getReceiveSetter:()Lorg/xnio/ChannelListener$Setter;
     130: aload         6
     132: invokeinterface #149,  2          // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     137: aload         5
     139: invokevirtual #158                // Method io/undertow/protocols/http2/Http2Channel.resumeReceives:()V
     142: iconst_1
     143: ireturn

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #159                // class org/xnio/conduits/ConduitStreamSourceChannel
       5: invokevirtual #141                // Method handleEvent:(Lorg/xnio/conduits/ConduitStreamSourceChannel;)V
       8: return

  static boolean access$000(io.undertow.server.protocol.http.HttpReadListener, org.xnio.StreamConnection, java.nio.ByteBuffer, io.undertow.server.protocol.http.HttpServerConnection, io.undertow.connector.PooledByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #1                  // Method doHttp2PriRead:(Lorg/xnio/StreamConnection;Ljava/nio/ByteBuffer;Lio/undertow/server/protocol/http/HttpServerConnection;Lio/undertow/connector/PooledByteBuffer;)Z
       9: ireturn

  static {};
    Code:
       0: new           #160                // class io/undertow/util/HttpString
       3: dup
       4: ldc           #161                // String PRI
       6: invokespecial #162                // Method io/undertow/util/HttpString."<init>":(Ljava/lang/String;)V
       9: putstatic     #95                 // Field PRI:Lio/undertow/util/HttpString;
      12: bipush        6
      14: newarray       byte
      16: dup
      17: iconst_0
      18: bipush        83
      20: bastore
      21: dup
      22: iconst_1
      23: bipush        77
      25: bastore
      26: dup
      27: iconst_2
      28: bipush        13
      30: bastore
      31: dup
      32: iconst_3
      33: bipush        10
      35: bastore
      36: dup
      37: iconst_4
      38: bipush        13
      40: bastore
      41: dup
      42: iconst_5
      43: bipush        10
      45: bastore
      46: putstatic     #142                // Field PRI_EXPECTED:[B
      49: ldc           #104                // class io/undertow/server/protocol/http/HttpReadListener
      51: ldc           #163                // String requestState
      53: invokestatic  #164                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      56: putstatic     #35                 // Field requestStateUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      59: return
}
