Compiled from "ProxyHandler.java"
class io.undertow.server.handlers.proxy.ProxyHandler$ResponseCallback$1 implements io.undertow.server.HttpUpgradeListener {
  final io.undertow.client.ClientExchange val$result;

  final io.undertow.server.handlers.proxy.ProxyHandler$ResponseCallback this$0;

  io.undertow.server.handlers.proxy.ProxyHandler$ResponseCallback$1(io.undertow.server.handlers.proxy.ProxyHandler$ResponseCallback, io.undertow.client.ClientExchange);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/server/handlers/proxy/ProxyHandler$ResponseCallback;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$result:Lio/undertow/client/ClientExchange;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void handleUpgrade(org.xnio.StreamConnection, io.undertow.server.HttpServerExchange);
    Code:
       0: invokestatic  #4                  // Method io/undertow/server/handlers/proxy/ProxyHandler.access$600:()Lorg/jboss/logging/Logger;
       3: invokevirtual #5                  // Method org/jboss/logging/Logger.isDebugEnabled:()Z
       6: ifeq          27
       9: invokestatic  #4                  // Method io/undertow/server/handlers/proxy/ProxyHandler.access$600:()Lorg/jboss/logging/Logger;
      12: ldc           #6                  // String Upgraded request %s to for exchange %s
      14: aload_0
      15: getfield      #2                  // Field val$result:Lio/undertow/client/ClientExchange;
      18: invokeinterface #7,  1            // InterfaceMethod io/undertow/client/ClientExchange.getRequest:()Lio/undertow/client/ClientRequest;
      23: aload_2
      24: invokevirtual #8                  // Method org/jboss/logging/Logger.debugf:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      27: aconst_null
      28: astore_3
      29: aload_0
      30: getfield      #2                  // Field val$result:Lio/undertow/client/ClientExchange;
      33: invokeinterface #9,  1            // InterfaceMethod io/undertow/client/ClientExchange.getConnection:()Lio/undertow/client/ClientConnection;
      38: invokeinterface #10,  1           // InterfaceMethod io/undertow/client/ClientConnection.performUpgrade:()Lorg/xnio/StreamConnection;
      43: astore_3
      44: new           #11                 // class io/undertow/server/handlers/proxy/ProxyHandler$ClosingExceptionHandler
      47: dup
      48: iconst_2
      49: anewarray     #12                 // class java/io/Closeable
      52: dup
      53: iconst_0
      54: aload_1
      55: aastore
      56: dup
      57: iconst_1
      58: aload_3
      59: aastore
      60: aconst_null
      61: invokespecial #13                 // Method io/undertow/server/handlers/proxy/ProxyHandler$ClosingExceptionHandler."<init>":([Ljava/io/Closeable;Lio/undertow/server/handlers/proxy/ProxyHandler$1;)V
      64: astore        4
      66: aload_3
      67: invokevirtual #14                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      70: aload_1
      71: invokevirtual #15                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      74: invokestatic  #16                 // Method org/xnio/ChannelListeners.closingChannelListener:()Lorg/xnio/ChannelListener;
      77: invokestatic  #16                 // Method org/xnio/ChannelListeners.closingChannelListener:()Lorg/xnio/ChannelListener;
      80: invokestatic  #17                 // Method org/xnio/ChannelListeners.closingChannelExceptionHandler:()Lorg/xnio/ChannelExceptionHandler;
      83: invokestatic  #18                 // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
      86: invokestatic  #17                 // Method org/xnio/ChannelListeners.closingChannelExceptionHandler:()Lorg/xnio/ChannelExceptionHandler;
      89: invokestatic  #19                 // Method org/xnio/ChannelListeners.writeShutdownChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
      92: aload         4
      94: aload         4
      96: aload_0
      97: getfield      #2                  // Field val$result:Lio/undertow/client/ClientExchange;
     100: invokeinterface #9,  1            // InterfaceMethod io/undertow/client/ClientExchange.getConnection:()Lio/undertow/client/ClientConnection;
     105: invokeinterface #20,  1           // InterfaceMethod io/undertow/client/ClientConnection.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
     110: invokestatic  #21                 // Method io/undertow/util/Transfer.initiateTransfer:(Lorg/xnio/channels/StreamSourceChannel;Lorg/xnio/channels/StreamSinkChannel;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;Lorg/xnio/ChannelExceptionHandler;Lio/undertow/connector/ByteBufferPool;)V
     113: aload_1
     114: invokevirtual #14                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
     117: aload_3
     118: invokevirtual #15                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
     121: invokestatic  #16                 // Method org/xnio/ChannelListeners.closingChannelListener:()Lorg/xnio/ChannelListener;
     124: invokestatic  #16                 // Method org/xnio/ChannelListeners.closingChannelListener:()Lorg/xnio/ChannelListener;
     127: invokestatic  #17                 // Method org/xnio/ChannelListeners.closingChannelExceptionHandler:()Lorg/xnio/ChannelExceptionHandler;
     130: invokestatic  #18                 // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
     133: invokestatic  #17                 // Method org/xnio/ChannelListeners.closingChannelExceptionHandler:()Lorg/xnio/ChannelExceptionHandler;
     136: invokestatic  #19                 // Method org/xnio/ChannelListeners.writeShutdownChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
     139: aload         4
     141: aload         4
     143: aload_0
     144: getfield      #2                  // Field val$result:Lio/undertow/client/ClientExchange;
     147: invokeinterface #9,  1            // InterfaceMethod io/undertow/client/ClientExchange.getConnection:()Lio/undertow/client/ClientConnection;
     152: invokeinterface #20,  1           // InterfaceMethod io/undertow/client/ClientConnection.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
     157: invokestatic  #21                 // Method io/undertow/util/Transfer.initiateTransfer:(Lorg/xnio/channels/StreamSourceChannel;Lorg/xnio/channels/StreamSinkChannel;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;Lorg/xnio/ChannelExceptionHandler;Lio/undertow/connector/ByteBufferPool;)V
     160: goto          180
     163: astore        4
     165: iconst_2
     166: anewarray     #12                 // class java/io/Closeable
     169: dup
     170: iconst_0
     171: aload_1
     172: aastore
     173: dup
     174: iconst_1
     175: aload_3
     176: aastore
     177: invokestatic  #23                 // Method org/xnio/IoUtils.safeClose:([Ljava/io/Closeable;)V
     180: return
    Exception table:
       from    to  target type
          29   160   163   Class java/io/IOException
}
