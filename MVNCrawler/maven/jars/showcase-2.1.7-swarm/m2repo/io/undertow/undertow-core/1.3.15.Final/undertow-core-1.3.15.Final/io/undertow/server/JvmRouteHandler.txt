Compiled from "JvmRouteHandler.java"
public class io.undertow.server.JvmRouteHandler implements io.undertow.server.HttpHandler {
  private final io.undertow.server.HttpHandler next;

  private final java.lang.String sessionCookieName;

  private final java.lang.String jvmRoute;

  private final io.undertow.server.JvmRouteHandler$JvmRouteWrapper wrapper;

  public io.undertow.server.JvmRouteHandler(io.undertow.server.HttpHandler, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class io/undertow/server/JvmRouteHandler$JvmRouteWrapper
       8: dup
       9: aload_0
      10: aconst_null
      11: invokespecial #5                  // Method io/undertow/server/JvmRouteHandler$JvmRouteWrapper."<init>":(Lio/undertow/server/JvmRouteHandler;Lio/undertow/server/JvmRouteHandler$1;)V
      14: putfield      #6                  // Field wrapper:Lio/undertow/server/JvmRouteHandler$JvmRouteWrapper;
      17: aload_0
      18: aload_1
      19: putfield      #7                  // Field next:Lio/undertow/server/HttpHandler;
      22: aload_0
      23: aload_2
      24: putfield      #2                  // Field sessionCookieName:Ljava/lang/String;
      27: aload_0
      28: aload_3
      29: putfield      #1                  // Field jvmRoute:Ljava/lang/String;
      32: return

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method io/undertow/server/HttpServerExchange.getRequestCookies:()Ljava/util/Map;
       4: aload_0
       5: getfield      #2                  // Field sessionCookieName:Ljava/lang/String;
       8: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #10                 // class io/undertow/server/handlers/Cookie
      16: astore_2
      17: aload_2
      18: ifnull        56
      21: aload_2
      22: invokeinterface #11,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getValue:()Ljava/lang/String;
      27: bipush        46
      29: invokevirtual #12                 // Method java/lang/String.indexOf:(I)I
      32: istore_3
      33: iload_3
      34: iconst_m1
      35: if_icmpeq     56
      38: aload_2
      39: aload_2
      40: invokeinterface #11,  1           // InterfaceMethod io/undertow/server/handlers/Cookie.getValue:()Ljava/lang/String;
      45: iconst_0
      46: iload_3
      47: invokevirtual #13                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      50: invokeinterface #14,  2           // InterfaceMethod io/undertow/server/handlers/Cookie.setValue:(Ljava/lang/String;)Lio/undertow/server/handlers/Cookie;
      55: pop
      56: aload_1
      57: aload_0
      58: getfield      #6                  // Field wrapper:Lio/undertow/server/JvmRouteHandler$JvmRouteWrapper;
      61: invokevirtual #15                 // Method io/undertow/server/HttpServerExchange.addResponseWrapper:(Lio/undertow/server/ConduitWrapper;)Lio/undertow/server/HttpServerExchange;
      64: pop
      65: aload_0
      66: getfield      #7                  // Field next:Lio/undertow/server/HttpHandler;
      69: aload_1
      70: invokeinterface #16,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
      75: return

  static java.lang.String access$100(io.undertow.server.JvmRouteHandler);
    Code:
       0: aload_0
       1: getfield      #2                  // Field sessionCookieName:Ljava/lang/String;
       4: areturn

  static java.lang.String access$200(io.undertow.server.JvmRouteHandler);
    Code:
       0: aload_0
       1: getfield      #1                  // Field jvmRoute:Ljava/lang/String;
       4: areturn
}
