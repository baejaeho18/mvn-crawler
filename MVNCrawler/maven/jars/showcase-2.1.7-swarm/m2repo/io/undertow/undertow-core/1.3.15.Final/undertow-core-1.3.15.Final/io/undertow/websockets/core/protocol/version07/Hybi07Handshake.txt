Compiled from "Hybi07Handshake.java"
public class io.undertow.websockets.core.protocol.version07.Hybi07Handshake extends io.undertow.websockets.core.protocol.Handshake {
  public static final java.lang.String MAGIC_NUMBER;

  protected io.undertow.websockets.core.protocol.version07.Hybi07Handshake(io.undertow.websockets.core.WebSocketVersion, java.util.Set<java.lang.String>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #1                  // String SHA1
       4: ldc           #3                  // String 258EAFA5-E914-47DA-95CA-C5AB0DC85B11
       6: aload_2
       7: invokespecial #4                  // Method io/undertow/websockets/core/protocol/Handshake."<init>":(Lio/undertow/websockets/core/WebSocketVersion;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)V
      10: aload_0
      11: iload_3
      12: putfield      #5                  // Field allowExtensions:Z
      15: return

  public io.undertow.websockets.core.protocol.version07.Hybi07Handshake(java.util.Set<java.lang.String>, boolean);
    Code:
       0: aload_0
       1: getstatic     #6                  // Field io/undertow/websockets/core/WebSocketVersion.V07:Lio/undertow/websockets/core/WebSocketVersion;
       4: aload_1
       5: iload_2
       6: invokespecial #7                  // Method "<init>":(Lio/undertow/websockets/core/WebSocketVersion;Ljava/util/Set;Z)V
       9: return

  public io.undertow.websockets.core.protocol.version07.Hybi07Handshake();
    Code:
       0: aload_0
       1: getstatic     #6                  // Field io/undertow/websockets/core/WebSocketVersion.V07:Lio/undertow/websockets/core/WebSocketVersion;
       4: invokestatic  #8                  // Method java/util/Collections.emptySet:()Ljava/util/Set;
       7: iconst_0
       8: invokespecial #7                  // Method "<init>":(Lio/undertow/websockets/core/WebSocketVersion;Ljava/util/Set;Z)V
      11: return

  public boolean matches(io.undertow.websockets.spi.WebSocketHttpExchange);
    Code:
       0: aload_1
       1: ldc           #10                 // String Sec-WebSocket-Key
       3: invokeinterface #11,  2           // InterfaceMethod io/undertow/websockets/spi/WebSocketHttpExchange.getRequestHeader:(Ljava/lang/String;)Ljava/lang/String;
       8: ifnull        41
      11: aload_1
      12: ldc           #12                 // String Sec-WebSocket-Version
      14: invokeinterface #11,  2           // InterfaceMethod io/undertow/websockets/spi/WebSocketHttpExchange.getRequestHeader:(Ljava/lang/String;)Ljava/lang/String;
      19: ifnull        41
      22: aload_1
      23: ldc           #12                 // String Sec-WebSocket-Version
      25: invokeinterface #11,  2           // InterfaceMethod io/undertow/websockets/spi/WebSocketHttpExchange.getRequestHeader:(Ljava/lang/String;)Ljava/lang/String;
      30: aload_0
      31: invokevirtual #13                 // Method getVersion:()Lio/undertow/websockets/core/WebSocketVersion;
      34: invokevirtual #14                 // Method io/undertow/websockets/core/WebSocketVersion.toHttpHeaderValue:()Ljava/lang/String;
      37: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ireturn
      41: iconst_0
      42: ireturn

  protected void handshakeInternal(io.undertow.websockets.spi.WebSocketHttpExchange);
    Code:
       0: aload_1
       1: ldc           #16                 // String Sec-WebSocket-Origin
       3: invokeinterface #11,  2           // InterfaceMethod io/undertow/websockets/spi/WebSocketHttpExchange.getRequestHeader:(Ljava/lang/String;)Ljava/lang/String;
       8: astore_2
       9: aload_2
      10: ifnull        22
      13: aload_1
      14: ldc           #16                 // String Sec-WebSocket-Origin
      16: aload_2
      17: invokeinterface #17,  3           // InterfaceMethod io/undertow/websockets/spi/WebSocketHttpExchange.setResponseHeader:(Ljava/lang/String;Ljava/lang/String;)V
      22: aload_0
      23: aload_1
      24: invokevirtual #18                 // Method selectSubprotocol:(Lio/undertow/websockets/spi/WebSocketHttpExchange;)V
      27: aload_0
      28: aload_1
      29: invokevirtual #19                 // Method selectExtensions:(Lio/undertow/websockets/spi/WebSocketHttpExchange;)V
      32: aload_1
      33: ldc           #20                 // String Sec-WebSocket-Location
      35: aload_1
      36: invokestatic  #21                 // Method getWebSocketLocation:(Lio/undertow/websockets/spi/WebSocketHttpExchange;)Ljava/lang/String;
      39: invokeinterface #17,  3           // InterfaceMethod io/undertow/websockets/spi/WebSocketHttpExchange.setResponseHeader:(Ljava/lang/String;Ljava/lang/String;)V
      44: aload_1
      45: ldc           #10                 // String Sec-WebSocket-Key
      47: invokeinterface #11,  2           // InterfaceMethod io/undertow/websockets/spi/WebSocketHttpExchange.getRequestHeader:(Ljava/lang/String;)Ljava/lang/String;
      52: astore_3
      53: aload_0
      54: aload_3
      55: invokevirtual #22                 // Method solve:(Ljava/lang/String;)Ljava/lang/String;
      58: astore        4
      60: aload_1
      61: ldc           #23                 // String Sec-WebSocket-Accept
      63: aload         4
      65: invokeinterface #17,  3           // InterfaceMethod io/undertow/websockets/spi/WebSocketHttpExchange.setResponseHeader:(Ljava/lang/String;Ljava/lang/String;)V
      70: aload_0
      71: aload_1
      72: invokevirtual #24                 // Method performUpgrade:(Lio/undertow/websockets/spi/WebSocketHttpExchange;)V
      75: goto          91
      78: astore        4
      80: aload_1
      81: invokestatic  #26                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      84: aload_1
      85: invokeinterface #27,  1           // InterfaceMethod io/undertow/websockets/spi/WebSocketHttpExchange.endExchange:()V
      90: return
      91: return
    Exception table:
       from    to  target type
          53    75    78   Class java/security/NoSuchAlgorithmException

  protected final java.lang.String solve(java.lang.String) throws java.security.NoSuchAlgorithmException;
    Code:
       0: new           #28                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #30                 // Method java/lang/String.trim:()Ljava/lang/String;
      11: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: invokevirtual #32                 // Method getMagicNumber:()Ljava/lang/String;
      18: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      24: astore_2
      25: aload_0
      26: invokevirtual #34                 // Method getHashAlgorithm:()Ljava/lang/String;
      29: invokestatic  #35                 // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
      32: astore_3
      33: aload_3
      34: aload_2
      35: getstatic     #36                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      38: invokevirtual #37                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      41: invokevirtual #38                 // Method java/security/MessageDigest.update:([B)V
      44: aload_3
      45: invokevirtual #39                 // Method java/security/MessageDigest.digest:()[B
      48: invokestatic  #40                 // Method io/undertow/websockets/core/protocol/version07/Base64.encodeBytes:([B)Ljava/lang/String;
      51: invokevirtual #30                 // Method java/lang/String.trim:()Ljava/lang/String;
      54: areturn

  public io.undertow.websockets.core.WebSocketChannel createChannel(io.undertow.websockets.spi.WebSocketHttpExchange, org.xnio.StreamConnection, io.undertow.connector.ByteBufferPool);
    Code:
       0: new           #41                 // class io/undertow/websockets/core/protocol/version07/WebSocket07Channel
       3: dup
       4: aload_2
       5: aload_3
       6: aload_1
       7: invokestatic  #21                 // Method getWebSocketLocation:(Lio/undertow/websockets/spi/WebSocketHttpExchange;)Ljava/lang/String;
      10: aload_1
      11: ldc           #42                 // String Sec-WebSocket-Protocol
      13: invokeinterface #43,  2           // InterfaceMethod io/undertow/websockets/spi/WebSocketHttpExchange.getResponseHeader:(Ljava/lang/String;)Ljava/lang/String;
      18: iconst_0
      19: aload_0
      20: getfield      #5                  // Field allowExtensions:Z
      23: aload_0
      24: aload_1
      25: invokevirtual #44                 // Method initExtensions:(Lio/undertow/websockets/spi/WebSocketHttpExchange;)Lio/undertow/websockets/extensions/ExtensionFunction;
      28: aload_1
      29: invokeinterface #45,  1           // InterfaceMethod io/undertow/websockets/spi/WebSocketHttpExchange.getPeerConnections:()Ljava/util/Set;
      34: aload_1
      35: invokeinterface #46,  1           // InterfaceMethod io/undertow/websockets/spi/WebSocketHttpExchange.getOptions:()Lorg/xnio/OptionMap;
      40: invokespecial #47                 // Method io/undertow/websockets/core/protocol/version07/WebSocket07Channel."<init>":(Lorg/xnio/StreamConnection;Lio/undertow/connector/ByteBufferPool;Ljava/lang/String;Ljava/lang/String;ZZLio/undertow/websockets/extensions/ExtensionFunction;Ljava/util/Set;Lorg/xnio/OptionMap;)V
      43: areturn
}
