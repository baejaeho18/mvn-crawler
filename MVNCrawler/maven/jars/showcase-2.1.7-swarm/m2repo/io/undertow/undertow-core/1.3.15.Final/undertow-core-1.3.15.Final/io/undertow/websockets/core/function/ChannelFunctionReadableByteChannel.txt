Compiled from "ChannelFunctionReadableByteChannel.java"
public class io.undertow.websockets.core.function.ChannelFunctionReadableByteChannel implements java.nio.channels.ReadableByteChannel {
  private final io.undertow.websockets.core.function.ChannelFunction[] functions;

  private final java.nio.channels.ReadableByteChannel channel;

  public io.undertow.websockets.core.function.ChannelFunctionReadableByteChannel(java.nio.channels.ReadableByteChannel, io.undertow.websockets.core.function.ChannelFunction...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field channel:Ljava/nio/channels/ReadableByteChannel;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field functions:[Lio/undertow/websockets/core/function/ChannelFunction;
      14: return

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method java/nio/ByteBuffer.position:()I
       4: istore_2
       5: iconst_0
       6: istore_3
       7: aload_0
       8: getfield      #2                  // Field channel:Ljava/nio/channels/ReadableByteChannel;
      11: aload_1
      12: invokeinterface #5,  2            // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
      17: istore_3
      18: iload_3
      19: istore        4
      21: iload_3
      22: ifle          69
      25: aload_0
      26: getfield      #3                  // Field functions:[Lio/undertow/websockets/core/function/ChannelFunction;
      29: astore        5
      31: aload         5
      33: arraylength
      34: istore        6
      36: iconst_0
      37: istore        7
      39: iload         7
      41: iload         6
      43: if_icmpge     69
      46: aload         5
      48: iload         7
      50: aaload
      51: astore        8
      53: aload         8
      55: aload_1
      56: iload_2
      57: iload_3
      58: invokeinterface #6,  4            // InterfaceMethod io/undertow/websockets/core/function/ChannelFunction.afterRead:(Ljava/nio/ByteBuffer;II)V
      63: iinc          7, 1
      66: goto          39
      69: iload         4
      71: ireturn
      72: astore        9
      74: iload_3
      75: ifle          122
      78: aload_0
      79: getfield      #3                  // Field functions:[Lio/undertow/websockets/core/function/ChannelFunction;
      82: astore        10
      84: aload         10
      86: arraylength
      87: istore        11
      89: iconst_0
      90: istore        12
      92: iload         12
      94: iload         11
      96: if_icmpge     122
      99: aload         10
     101: iload         12
     103: aaload
     104: astore        13
     106: aload         13
     108: aload_1
     109: iload_2
     110: iload_3
     111: invokeinterface #6,  4            // InterfaceMethod io/undertow/websockets/core/function/ChannelFunction.afterRead:(Ljava/nio/ByteBuffer;II)V
     116: iinc          12, 1
     119: goto          92
     122: aload         9
     124: athrow
    Exception table:
       from    to  target type
           7    21    72   any
          72    74    72   any

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Ljava/nio/channels/ReadableByteChannel;
       4: invokeinterface #7,  1            // InterfaceMethod java/nio/channels/ReadableByteChannel.isOpen:()Z
       9: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Ljava/nio/channels/ReadableByteChannel;
       4: invokeinterface #8,  1            // InterfaceMethod java/nio/channels/ReadableByteChannel.close:()V
       9: return
}
