Compiled from "HttpReadListener.java"
class io.undertow.server.protocol.http.HttpReadListener$1 extends io.undertow.util.StringWriteChannelListener {
  final org.xnio.StreamConnection val$connection;

  final io.undertow.server.protocol.http.HttpReadListener this$0;

  io.undertow.server.protocol.http.HttpReadListener$1(io.undertow.server.protocol.http.HttpReadListener, java.lang.String, org.xnio.StreamConnection);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/server/protocol/http/HttpReadListener;
       5: aload_0
       6: aload_3
       7: putfield      #2                  // Field val$connection:Lorg/xnio/StreamConnection;
      10: aload_0
      11: aload_2
      12: invokespecial #3                  // Method io/undertow/util/StringWriteChannelListener."<init>":(Ljava/lang/String;)V
      15: return

  protected void writeDone(org.xnio.channels.StreamSinkChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method io/undertow/util/StringWriteChannelListener.writeDone:(Lorg/xnio/channels/StreamSinkChannel;)V
       5: aload_1
       6: invokeinterface #5,  1            // InterfaceMethod org/xnio/channels/StreamSinkChannel.suspendWrites:()V
      11: aload_0
      12: getfield      #2                  // Field val$connection:Lorg/xnio/StreamConnection;
      15: invokestatic  #6                  // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      18: return

  protected void handleError(org.xnio.channels.StreamSinkChannel, java.io.IOException);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$connection:Lorg/xnio/StreamConnection;
       4: invokestatic  #6                  // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
       7: return
}
