Compiled from "SslConduit.java"
public class io.undertow.protocols.ssl.SslConduit implements org.xnio.conduits.StreamSourceConduit,org.xnio.conduits.StreamSinkConduit {
  private static final int FLAG_READ_REQUIRES_WRITE;

  private static final int FLAG_WRITE_REQUIRES_READ;

  private static final int FLAG_READS_RESUMED;

  private static final int FLAG_WRITES_RESUMED;

  private static final int FLAG_DATA_TO_UNWRAP;

  private static final int FLAG_READ_SHUTDOWN;

  private static final int FLAG_WRITE_SHUTDOWN;

  private static final int FLAG_ENGINE_INBOUND_SHUTDOWN;

  private static final int FLAG_ENGINE_OUTBOUND_SHUTDOWN;

  private static final int FLAG_DELEGATE_SINK_SHUTDOWN;

  private static final int FLAG_DELEGATE_SOURCE_SHUTDOWN;

  private static final int FLAG_IN_HANDSHAKE;

  private static final int FLAG_CLOSED;

  private static final int FLAG_WRITE_CLOSED;

  private static final int FLAG_READ_CLOSED;

  public static final java.nio.ByteBuffer EMPTY_BUFFER;

  private final io.undertow.protocols.ssl.UndertowSslConnection connection;

  private final org.xnio.StreamConnection delegate;

  private final javax.net.ssl.SSLEngine engine;

  private final org.xnio.conduits.StreamSinkConduit sink;

  private final org.xnio.conduits.StreamSourceConduit source;

  private final io.undertow.connector.ByteBufferPool bufferPool;

  private final java.lang.Runnable handshakeCallback;

  private int state;

  private volatile int outstandingTasks;

  private io.undertow.connector.PooledByteBuffer wrappedData;

  private io.undertow.connector.PooledByteBuffer dataToUnwrap;

  private io.undertow.connector.PooledByteBuffer unwrappedData;

  private io.undertow.protocols.ssl.SslConduit$SslWriteReadyHandler writeReadyHandler;

  private io.undertow.protocols.ssl.SslConduit$SslReadReadyHandler readReadyHandler;

  private boolean invokingReadListenerHandshake;

  io.undertow.protocols.ssl.SslConduit(io.undertow.protocols.ssl.UndertowSslConnection, org.xnio.StreamConnection, javax.net.ssl.SSLEngine, io.undertow.connector.ByteBufferPool, java.lang.Runnable);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #6                  // Field state:I
       9: aload_0
      10: iconst_0
      11: putfield      #9                  // Field outstandingTasks:I
      14: aload_0
      15: iconst_0
      16: putfield      #5                  // Field invokingReadListenerHandshake:Z
      19: aload_0
      20: aload_1
      21: putfield      #7                  // Field connection:Lio/undertow/protocols/ssl/UndertowSslConnection;
      24: aload_0
      25: aload_2
      26: putfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      29: aload_0
      30: aload         5
      32: putfield      #14                 // Field handshakeCallback:Ljava/lang/Runnable;
      35: aload_0
      36: aload_2
      37: invokevirtual #15                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      40: invokevirtual #16                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
      43: putfield      #17                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
      46: aload_0
      47: aload_2
      48: invokevirtual #18                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      51: invokevirtual #19                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      54: putfield      #20                 // Field source:Lorg/xnio/conduits/StreamSourceConduit;
      57: aload_0
      58: aload_3
      59: putfield      #21                 // Field engine:Ljavax/net/ssl/SSLEngine;
      62: aload_0
      63: aload         4
      65: putfield      #22                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      68: aload_2
      69: invokevirtual #18                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      72: invokevirtual #19                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      75: aload_0
      76: new           #23                 // class io/undertow/protocols/ssl/SslConduit$SslReadReadyHandler
      79: dup
      80: aload_0
      81: aconst_null
      82: aconst_null
      83: invokespecial #24                 // Method io/undertow/protocols/ssl/SslConduit$SslReadReadyHandler."<init>":(Lio/undertow/protocols/ssl/SslConduit;Lorg/xnio/conduits/ReadReadyHandler;Lio/undertow/protocols/ssl/SslConduit$1;)V
      86: dup_x1
      87: putfield      #11                 // Field readReadyHandler:Lio/undertow/protocols/ssl/SslConduit$SslReadReadyHandler;
      90: invokeinterface #25,  2           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.setReadReadyHandler:(Lorg/xnio/conduits/ReadReadyHandler;)V
      95: aload_2
      96: invokevirtual #15                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      99: invokevirtual #16                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
     102: aload_0
     103: new           #26                 // class io/undertow/protocols/ssl/SslConduit$SslWriteReadyHandler
     106: dup
     107: aload_0
     108: aconst_null
     109: aconst_null
     110: invokespecial #27                 // Method io/undertow/protocols/ssl/SslConduit$SslWriteReadyHandler."<init>":(Lio/undertow/protocols/ssl/SslConduit;Lorg/xnio/conduits/WriteReadyHandler;Lio/undertow/protocols/ssl/SslConduit$1;)V
     113: dup_x1
     114: putfield      #10                 // Field writeReadyHandler:Lio/undertow/protocols/ssl/SslConduit$SslWriteReadyHandler;
     117: invokeinterface #28,  2           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.setWriteReadyHandler:(Lorg/xnio/conduits/WriteReadyHandler;)V
     122: aload_3
     123: invokevirtual #29                 // Method javax/net/ssl/SSLEngine.getUseClientMode:()Z
     126: ifeq          139
     129: aload_0
     130: sipush        2049
     133: putfield      #6                  // Field state:I
     136: goto          146
     139: aload_0
     140: sipush        2050
     143: putfield      #6                  // Field state:I
     146: return

  public void terminateReads() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #6                  // Field state:I
       5: bipush        32
       7: ior
       8: putfield      #6                  // Field state:I
      11: aload_0
      12: invokevirtual #31                 // Method notifyReadClosed:()V
      15: return

  public boolean isReadShutdown();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: bipush        32
       6: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ireturn

  public void resumeReads();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_4
       5: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          12
      11: return
      12: aload_0
      13: iconst_0
      14: invokespecial #33                 // Method resumeReads:(Z)V
      17: return

  public void suspendReads();
    Code:
       0: aload_0
       1: dup
       2: getfield      #6                  // Field state:I
       5: bipush        -5
       7: iand
       8: putfield      #6                  // Field state:I
      11: aload_0
      12: getfield      #6                  // Field state:I
      15: bipush        10
      17: invokestatic  #34                 // Method org/xnio/Bits.allAreSet:(II)Z
      20: ifne          33
      23: aload_0
      24: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      27: invokevirtual #18                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      30: invokevirtual #35                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
      33: return

  public void wakeupReads();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #33                 // Method resumeReads:(Z)V
       5: return

  private void resumeReads(boolean);
    Code:
       0: aload_0
       1: dup
       2: getfield      #6                  // Field state:I
       5: iconst_4
       6: ior
       7: putfield      #6                  // Field state:I
      10: aload_0
      11: getfield      #6                  // Field state:I
      14: iconst_1
      15: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      18: ifeq          34
      21: aload_0
      22: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      25: invokevirtual #15                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      28: invokevirtual #36                 // Method org/xnio/conduits/ConduitStreamSinkChannel.resumeWrites:()V
      31: goto          68
      34: aload_0
      35: getfield      #6                  // Field state:I
      38: bipush        16
      40: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      43: ifne          50
      46: iload_1
      47: ifeq          58
      50: aload_0
      51: iconst_1
      52: invokespecial #1                  // Method runReadListener:(Z)V
      55: goto          68
      58: aload_0
      59: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      62: invokevirtual #18                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      65: invokevirtual #37                 // Method org/xnio/conduits/ConduitStreamSourceChannel.resumeReads:()V
      68: return

  private void runReadListener(boolean);
    Code:
       0: aload_0
       1: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #38                 // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
       7: new           #39                 // class io/undertow/protocols/ssl/SslConduit$1
      10: dup
      11: aload_0
      12: iload_1
      13: invokespecial #40                 // Method io/undertow/protocols/ssl/SslConduit$1."<init>":(Lio/undertow/protocols/ssl/SslConduit;Z)V
      16: invokevirtual #41                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      19: goto          59
      22: astore_2
      23: iconst_2
      24: anewarray     #43                 // class java/io/Closeable
      27: dup
      28: iconst_0
      29: aload_0
      30: getfield      #7                  // Field connection:Lio/undertow/protocols/ssl/UndertowSslConnection;
      33: aastore
      34: dup
      35: iconst_1
      36: aload_0
      37: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      40: aastore
      41: invokestatic  #44                 // Method org/xnio/IoUtils.safeClose:([Ljava/io/Closeable;)V
      44: getstatic     #45                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      47: aload_2
      48: ldc           #46                 // String Failed to queue read listener invocation
      50: iconst_0
      51: anewarray     #47                 // class java/lang/Object
      54: invokeinterface #48,  4           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      59: return
    Exception table:
       from    to  target type
           0    19    22   Class java/lang/Exception

  private void runWriteListener();
    Code:
       0: aload_0
       1: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #38                 // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
       7: new           #49                 // class io/undertow/protocols/ssl/SslConduit$2
      10: dup
      11: aload_0
      12: invokespecial #50                 // Method io/undertow/protocols/ssl/SslConduit$2."<init>":(Lio/undertow/protocols/ssl/SslConduit;)V
      15: invokevirtual #41                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      18: goto          58
      21: astore_1
      22: iconst_2
      23: anewarray     #43                 // class java/io/Closeable
      26: dup
      27: iconst_0
      28: aload_0
      29: getfield      #7                  // Field connection:Lio/undertow/protocols/ssl/UndertowSslConnection;
      32: aastore
      33: dup
      34: iconst_1
      35: aload_0
      36: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      39: aastore
      40: invokestatic  #44                 // Method org/xnio/IoUtils.safeClose:([Ljava/io/Closeable;)V
      43: getstatic     #45                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      46: aload_1
      47: ldc           #46                 // String Failed to queue read listener invocation
      49: iconst_0
      50: anewarray     #47                 // class java/lang/Object
      53: invokeinterface #48,  4           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
      58: return
    Exception table:
       from    to  target type
           0    18    21   Class java/lang/Exception

  public boolean isReadResumed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_4
       5: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ireturn

  public void awaitReadable() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #9                  // Field outstandingTasks:I
       8: ifle          27
      11: aload_0
      12: invokevirtual #51                 // Method java/lang/Object.wait:()V
      15: aload_1
      16: monitorexit
      17: return
      18: astore_2
      19: new           #53                 // class java/io/InterruptedIOException
      22: dup
      23: invokespecial #54                 // Method java/io/InterruptedIOException."<init>":()V
      26: athrow
      27: aload_1
      28: monitorexit
      29: goto          37
      32: astore_3
      33: aload_1
      34: monitorexit
      35: aload_3
      36: athrow
      37: aload_0
      38: getfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
      41: ifnull        45
      44: return
      45: aload_0
      46: getfield      #6                  // Field state:I
      49: bipush        16
      51: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      54: ifeq          58
      57: return
      58: aload_0
      59: getfield      #6                  // Field state:I
      62: iconst_1
      63: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      66: ifeq          74
      69: aload_0
      70: invokevirtual #55                 // Method awaitWritable:()V
      73: return
      74: aload_0
      75: getfield      #20                 // Field source:Lorg/xnio/conduits/StreamSourceConduit;
      78: invokeinterface #56,  1           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.awaitReadable:()V
      83: return
    Exception table:
       from    to  target type
          11    15    18   Class java/lang/InterruptedException
           4    17    32   any
          18    29    32   any
          32    35    32   any

  public void awaitReadable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: astore        4
       4: monitorenter
       5: aload_0
       6: getfield      #9                  // Field outstandingTasks:I
       9: ifle          35
      12: aload_0
      13: aload_3
      14: lload_1
      15: invokevirtual #57                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      18: invokevirtual #58                 // Method java/lang/Object.wait:(J)V
      21: aload         4
      23: monitorexit
      24: return
      25: astore        5
      27: new           #53                 // class java/io/InterruptedIOException
      30: dup
      31: invokespecial #54                 // Method java/io/InterruptedIOException."<init>":()V
      34: athrow
      35: aload         4
      37: monitorexit
      38: goto          49
      41: astore        6
      43: aload         4
      45: monitorexit
      46: aload         6
      48: athrow
      49: aload_0
      50: getfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
      53: ifnull        57
      56: return
      57: aload_0
      58: getfield      #6                  // Field state:I
      61: bipush        16
      63: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      66: ifeq          70
      69: return
      70: aload_0
      71: getfield      #6                  // Field state:I
      74: iconst_1
      75: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      78: ifeq          88
      81: aload_0
      82: lload_1
      83: aload_3
      84: invokevirtual #59                 // Method awaitWritable:(JLjava/util/concurrent/TimeUnit;)V
      87: return
      88: aload_0
      89: getfield      #20                 // Field source:Lorg/xnio/conduits/StreamSourceConduit;
      92: lload_1
      93: aload_3
      94: invokeinterface #60,  4           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.awaitReadable:(JLjava/util/concurrent/TimeUnit;)V
      99: return
    Exception table:
       from    to  target type
          12    21    25   Class java/lang/InterruptedException
           5    24    41   any
          25    38    41   any
          41    46    41   any

  public org.xnio.XnioIoThread getReadThread();
    Code:
       0: aload_0
       1: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #38                 // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
       7: areturn

  public void setReadReadyHandler(org.xnio.conduits.ReadReadyHandler);
    Code:
       0: aload_0
       1: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #18                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
       7: invokevirtual #19                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      10: aload_0
      11: new           #23                 // class io/undertow/protocols/ssl/SslConduit$SslReadReadyHandler
      14: dup
      15: aload_0
      16: aload_1
      17: aconst_null
      18: invokespecial #24                 // Method io/undertow/protocols/ssl/SslConduit$SslReadReadyHandler."<init>":(Lio/undertow/protocols/ssl/SslConduit;Lorg/xnio/conduits/ReadReadyHandler;Lio/undertow/protocols/ssl/SslConduit$1;)V
      21: dup_x1
      22: putfield      #11                 // Field readReadyHandler:Lio/undertow/protocols/ssl/SslConduit$SslReadReadyHandler;
      25: invokeinterface #25,  2           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.setReadReadyHandler:(Lorg/xnio/conduits/ReadReadyHandler;)V
      30: return

  public long transferFrom(java.nio.channels.FileChannel, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: bipush        64
       6: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          20
      12: new           #61                 // class java/nio/channels/ClosedChannelException
      15: dup
      16: invokespecial #62                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      19: athrow
      20: aload_1
      21: lload_2
      22: lload         4
      24: new           #63                 // class org/xnio/conduits/ConduitWritableByteChannel
      27: dup
      28: aload_0
      29: invokespecial #64                 // Method org/xnio/conduits/ConduitWritableByteChannel."<init>":(Lorg/xnio/conduits/StreamSinkConduit;)V
      32: invokevirtual #65                 // Method java/nio/channels/FileChannel.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J
      35: lreturn

  public long transferFrom(org.xnio.channels.StreamSourceChannel, long, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: bipush        64
       6: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          20
      12: new           #61                 // class java/nio/channels/ClosedChannelException
      15: dup
      16: invokespecial #62                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      19: athrow
      20: aload_1
      21: lload_2
      22: aload         4
      24: new           #63                 // class org/xnio/conduits/ConduitWritableByteChannel
      27: dup
      28: aload_0
      29: invokespecial #64                 // Method org/xnio/conduits/ConduitWritableByteChannel."<init>":(Lorg/xnio/conduits/StreamSinkConduit;)V
      32: invokestatic  #66                 // Method org/xnio/IoUtils.transfer:(Ljava/nio/channels/ReadableByteChannel;JLjava/nio/ByteBuffer;Ljava/nio/channels/WritableByteChannel;)J
      35: lreturn

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: bipush        64
       6: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          20
      12: new           #61                 // class java/nio/channels/ClosedChannelException
      15: dup
      16: invokespecial #62                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      19: athrow
      20: aload_0
      21: iconst_1
      22: anewarray     #67                 // class java/nio/ByteBuffer
      25: dup
      26: iconst_0
      27: aload_1
      28: aastore
      29: iconst_0
      30: iconst_1
      31: invokespecial #68                 // Method doWrap:([Ljava/nio/ByteBuffer;II)J
      34: l2i
      35: ireturn

  public long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: bipush        64
       6: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          20
      12: new           #61                 // class java/nio/channels/ClosedChannelException
      15: dup
      16: invokespecial #62                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      19: athrow
      20: aload_0
      21: aload_1
      22: iload_2
      23: iload_3
      24: invokespecial #68                 // Method doWrap:([Ljava/nio/ByteBuffer;II)J
      27: lreturn

  public int writeFinal(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: bipush        64
       6: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          20
      12: new           #61                 // class java/nio/channels/ClosedChannelException
      15: dup
      16: invokespecial #62                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      19: athrow
      20: aload_0
      21: aload_1
      22: invokestatic  #69                 // Method org/xnio/conduits/Conduits.writeFinalBasic:(Lorg/xnio/conduits/StreamSinkConduit;Ljava/nio/ByteBuffer;)I
      25: ireturn

  public long writeFinal(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #70                 // Method org/xnio/conduits/Conduits.writeFinalBasic:(Lorg/xnio/conduits/StreamSinkConduit;[Ljava/nio/ByteBuffer;II)J
       7: lreturn

  public void terminateWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #6                  // Field state:I
       5: bipush        64
       7: ior
       8: putfield      #6                  // Field state:I
      11: return

  public boolean isWriteShutdown();
    Code:
       0: iconst_0
       1: ireturn

  public void resumeWrites();
    Code:
       0: aload_0
       1: dup
       2: getfield      #6                  // Field state:I
       5: bipush        8
       7: ior
       8: putfield      #6                  // Field state:I
      11: aload_0
      12: getfield      #6                  // Field state:I
      15: iconst_2
      16: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      19: ifeq          35
      22: aload_0
      23: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      26: invokevirtual #18                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      29: invokevirtual #37                 // Method org/xnio/conduits/ConduitStreamSourceChannel.resumeReads:()V
      32: goto          45
      35: aload_0
      36: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      39: invokevirtual #15                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      42: invokevirtual #36                 // Method org/xnio/conduits/ConduitStreamSinkChannel.resumeWrites:()V
      45: return

  public void suspendWrites();
    Code:
       0: aload_0
       1: dup
       2: getfield      #6                  // Field state:I
       5: bipush        -9
       7: iand
       8: putfield      #6                  // Field state:I
      11: aload_0
      12: getfield      #6                  // Field state:I
      15: iconst_5
      16: invokestatic  #34                 // Method org/xnio/Bits.allAreSet:(II)Z
      19: ifne          32
      22: aload_0
      23: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      26: invokevirtual #15                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      29: invokevirtual #71                 // Method org/xnio/conduits/ConduitStreamSinkChannel.suspendWrites:()V
      32: return

  public void wakeupWrites();
    Code:
       0: aload_0
       1: dup
       2: getfield      #6                  // Field state:I
       5: bipush        8
       7: ior
       8: putfield      #6                  // Field state:I
      11: aload_0
      12: invokevirtual #72                 // Method getWriteThread:()Lorg/xnio/XnioIoThread;
      15: new           #73                 // class io/undertow/protocols/ssl/SslConduit$3
      18: dup
      19: aload_0
      20: invokespecial #74                 // Method io/undertow/protocols/ssl/SslConduit$3."<init>":(Lio/undertow/protocols/ssl/SslConduit;)V
      23: invokevirtual #41                 // Method org/xnio/XnioIoThread.execute:(Ljava/lang/Runnable;)V
      26: return

  public boolean isWriteResumed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: bipush        8
       6: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ireturn

  public void awaitWritable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: bipush        64
       6: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          13
      12: return
      13: aload_0
      14: getfield      #9                  // Field outstandingTasks:I
      17: ifle          57
      20: aload_0
      21: dup
      22: astore_1
      23: monitorenter
      24: aload_0
      25: getfield      #9                  // Field outstandingTasks:I
      28: ifle          47
      31: aload_0
      32: invokevirtual #51                 // Method java/lang/Object.wait:()V
      35: aload_1
      36: monitorexit
      37: return
      38: astore_2
      39: new           #53                 // class java/io/InterruptedIOException
      42: dup
      43: invokespecial #54                 // Method java/io/InterruptedIOException."<init>":()V
      46: athrow
      47: aload_1
      48: monitorexit
      49: goto          57
      52: astore_3
      53: aload_1
      54: monitorexit
      55: aload_3
      56: athrow
      57: aload_0
      58: getfield      #6                  // Field state:I
      61: iconst_2
      62: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      65: ifeq          73
      68: aload_0
      69: invokevirtual #75                 // Method awaitReadable:()V
      72: return
      73: aload_0
      74: getfield      #17                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
      77: invokeinterface #76,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.awaitWritable:()V
      82: return
    Exception table:
       from    to  target type
          31    35    38   Class java/lang/InterruptedException
          24    37    52   any
          38    49    52   any
          52    55    52   any

  public void awaitWritable(long, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: bipush        64
       6: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          13
      12: return
      13: aload_0
      14: getfield      #9                  // Field outstandingTasks:I
      17: ifle          69
      20: aload_0
      21: dup
      22: astore        4
      24: monitorenter
      25: aload_0
      26: getfield      #9                  // Field outstandingTasks:I
      29: ifle          55
      32: aload_0
      33: aload_3
      34: lload_1
      35: invokevirtual #57                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      38: invokevirtual #58                 // Method java/lang/Object.wait:(J)V
      41: aload         4
      43: monitorexit
      44: return
      45: astore        5
      47: new           #53                 // class java/io/InterruptedIOException
      50: dup
      51: invokespecial #54                 // Method java/io/InterruptedIOException."<init>":()V
      54: athrow
      55: aload         4
      57: monitorexit
      58: goto          69
      61: astore        6
      63: aload         4
      65: monitorexit
      66: aload         6
      68: athrow
      69: aload_0
      70: getfield      #6                  // Field state:I
      73: iconst_2
      74: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      77: ifeq          87
      80: aload_0
      81: lload_1
      82: aload_3
      83: invokevirtual #77                 // Method awaitReadable:(JLjava/util/concurrent/TimeUnit;)V
      86: return
      87: aload_0
      88: getfield      #17                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
      91: invokeinterface #76,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.awaitWritable:()V
      96: return
    Exception table:
       from    to  target type
          32    41    45   Class java/lang/InterruptedException
          25    44    61   any
          45    58    61   any
          61    66    61   any

  public org.xnio.XnioIoThread getWriteThread();
    Code:
       0: aload_0
       1: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #38                 // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
       7: areturn

  public void setWriteReadyHandler(org.xnio.conduits.WriteReadyHandler);
    Code:
       0: aload_0
       1: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #15                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: invokevirtual #16                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
      10: aload_0
      11: new           #26                 // class io/undertow/protocols/ssl/SslConduit$SslWriteReadyHandler
      14: dup
      15: aload_0
      16: aload_1
      17: aconst_null
      18: invokespecial #27                 // Method io/undertow/protocols/ssl/SslConduit$SslWriteReadyHandler."<init>":(Lio/undertow/protocols/ssl/SslConduit;Lorg/xnio/conduits/WriteReadyHandler;Lio/undertow/protocols/ssl/SslConduit$1;)V
      21: dup_x1
      22: putfield      #10                 // Field writeReadyHandler:Lio/undertow/protocols/ssl/SslConduit$SslWriteReadyHandler;
      25: invokeinterface #28,  2           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.setWriteReadyHandler:(Lorg/xnio/conduits/WriteReadyHandler;)V
      30: return

  public void truncateWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #78                 // Method notifyWriteClosed:()V
       4: aload_0
       5: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
       8: invokevirtual #15                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      11: invokevirtual #79                 // Method org/xnio/conduits/ConduitStreamSinkChannel.close:()V
      14: goto          30
      17: astore_1
      18: aload_0
      19: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      22: invokevirtual #15                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      25: invokevirtual #79                 // Method org/xnio/conduits/ConduitStreamSinkChannel.close:()V
      28: aload_1
      29: athrow
      30: return
    Exception table:
       from    to  target type
           0     4    17   any

  public boolean flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: sipush        512
       7: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifeq          23
      13: aload_0
      14: getfield      #17                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
      17: invokeinterface #80,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.flush:()Z
      22: ireturn
      23: aload_0
      24: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      27: ifnull        47
      30: aload_0
      31: aconst_null
      32: iconst_0
      33: iconst_0
      34: invokespecial #68                 // Method doWrap:([Ljava/nio/ByteBuffer;II)J
      37: pop2
      38: aload_0
      39: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      42: ifnull        47
      45: iconst_0
      46: ireturn
      47: aload_0
      48: getfield      #6                  // Field state:I
      51: bipush        64
      53: invokestatic  #34                 // Method org/xnio/Bits.allAreSet:(II)Z
      56: ifeq          179
      59: aload_0
      60: getfield      #6                  // Field state:I
      63: sipush        256
      66: invokestatic  #81                 // Method org/xnio/Bits.allAreClear:(II)Z
      69: ifeq          108
      72: aload_0
      73: dup
      74: getfield      #6                  // Field state:I
      77: sipush        256
      80: ior
      81: putfield      #6                  // Field state:I
      84: aload_0
      85: getfield      #21                 // Field engine:Ljavax/net/ssl/SSLEngine;
      88: invokevirtual #82                 // Method javax/net/ssl/SSLEngine.closeOutbound:()V
      91: aload_0
      92: aconst_null
      93: iconst_0
      94: iconst_0
      95: invokespecial #68                 // Method doWrap:([Ljava/nio/ByteBuffer;II)J
      98: pop2
      99: aload_0
     100: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     103: ifnull        145
     106: iconst_0
     107: ireturn
     108: aload_0
     109: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     112: ifnull        145
     115: aload_0
     116: getfield      #6                  // Field state:I
     119: sipush        512
     122: invokestatic  #81                 // Method org/xnio/Bits.allAreClear:(II)Z
     125: ifeq          145
     128: aload_0
     129: aconst_null
     130: iconst_0
     131: iconst_0
     132: invokespecial #68                 // Method doWrap:([Ljava/nio/ByteBuffer;II)J
     135: pop2
     136: aload_0
     137: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     140: ifnull        145
     143: iconst_0
     144: ireturn
     145: aload_0
     146: getfield      #6                  // Field state:I
     149: sipush        512
     152: invokestatic  #81                 // Method org/xnio/Bits.allAreClear:(II)Z
     155: ifeq          179
     158: aload_0
     159: getfield      #17                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
     162: invokeinterface #83,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.terminateWrites:()V
     167: aload_0
     168: dup
     169: getfield      #6                  // Field state:I
     172: sipush        512
     175: ior
     176: putfield      #6                  // Field state:I
     179: aload_0
     180: getfield      #17                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
     183: invokeinterface #80,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.flush:()Z
     188: ireturn

  public long transferTo(long, long, java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: bipush        32
       6: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          20
      12: new           #61                 // class java/nio/channels/ClosedChannelException
      15: dup
      16: invokespecial #62                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      19: athrow
      20: aload         5
      22: new           #84                 // class org/xnio/conduits/ConduitReadableByteChannel
      25: dup
      26: aload_0
      27: invokespecial #85                 // Method org/xnio/conduits/ConduitReadableByteChannel."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
      30: lload_1
      31: lload_3
      32: invokevirtual #86                 // Method java/nio/channels/FileChannel.transferFrom:(Ljava/nio/channels/ReadableByteChannel;JJ)J
      35: lreturn

  public long transferTo(long, java.nio.ByteBuffer, org.xnio.channels.StreamSinkChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: bipush        32
       6: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          20
      12: new           #61                 // class java/nio/channels/ClosedChannelException
      15: dup
      16: invokespecial #62                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      19: athrow
      20: new           #84                 // class org/xnio/conduits/ConduitReadableByteChannel
      23: dup
      24: aload_0
      25: invokespecial #85                 // Method org/xnio/conduits/ConduitReadableByteChannel."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
      28: lload_1
      29: aload_3
      30: aload         4
      32: invokestatic  #66                 // Method org/xnio/IoUtils.transfer:(Ljava/nio/channels/ReadableByteChannel;JLjava/nio/ByteBuffer;Ljava/nio/channels/WritableByteChannel;)J
      35: lreturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: bipush        32
       6: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          20
      12: new           #61                 // class java/nio/channels/ClosedChannelException
      15: dup
      16: invokespecial #62                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      19: athrow
      20: aload_0
      21: iconst_1
      22: anewarray     #67                 // class java/nio/ByteBuffer
      25: dup
      26: iconst_0
      27: aload_1
      28: aastore
      29: iconst_0
      30: iconst_1
      31: invokespecial #87                 // Method doUnwrap:([Ljava/nio/ByteBuffer;II)J
      34: l2i
      35: ireturn

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: bipush        32
       6: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
       9: ifeq          20
      12: new           #61                 // class java/nio/channels/ClosedChannelException
      15: dup
      16: invokespecial #62                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      19: athrow
      20: aload_0
      21: aload_1
      22: iload_2
      23: iload_3
      24: invokespecial #87                 // Method doUnwrap:([Ljava/nio/ByteBuffer;II)J
      27: lreturn

  public org.xnio.XnioWorker getWorker();
    Code:
       0: aload_0
       1: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #88                 // Method org/xnio/StreamConnection.getWorker:()Lorg/xnio/XnioWorker;
       7: areturn

  void notifyWriteClosed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: sipush        8192
       7: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifeq          14
      13: return
      14: aload_0
      15: invokevirtual #89                 // Method isWriteResumed:()Z
      18: ifeq          38
      21: aload_0
      22: getfield      #6                  // Field state:I
      25: sipush        4096
      28: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: istore_1
      40: aload_0
      41: getfield      #7                  // Field connection:Lio/undertow/protocols/ssl/UndertowSslConnection;
      44: invokevirtual #90                 // Method io/undertow/protocols/ssl/UndertowSslConnection.writeClosed:()Z
      47: pop
      48: aload_0
      49: getfield      #21                 // Field engine:Ljavax/net/ssl/SSLEngine;
      52: invokevirtual #82                 // Method javax/net/ssl/SSLEngine.closeOutbound:()V
      55: aload_0
      56: dup
      57: getfield      #6                  // Field state:I
      60: sipush        8448
      63: ior
      64: putfield      #6                  // Field state:I
      67: aload_0
      68: getfield      #6                  // Field state:I
      71: sipush        16384
      74: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      77: ifeq          84
      80: aload_0
      81: invokespecial #91                 // Method closed:()V
      84: aload_0
      85: getfield      #6                  // Field state:I
      88: iconst_1
      89: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      92: ifeq          99
      95: aload_0
      96: invokevirtual #31                 // Method notifyReadClosed:()V
      99: aload_0
     100: dup
     101: getfield      #6                  // Field state:I
     104: bipush        -3
     106: iand
     107: putfield      #6                  // Field state:I
     110: iload_1
     111: ifeq          118
     114: aload_0
     115: invokespecial #92                 // Method runWriteListener:()V
     118: return

  void notifyReadClosed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: sipush        16384
       7: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifeq          14
      13: return
      14: aload_0
      15: invokevirtual #93                 // Method isReadResumed:()Z
      18: ifeq          38
      21: aload_0
      22: getfield      #6                  // Field state:I
      25: sipush        4096
      28: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: istore_1
      40: aload_0
      41: getfield      #7                  // Field connection:Lio/undertow/protocols/ssl/UndertowSslConnection;
      44: invokevirtual #94                 // Method io/undertow/protocols/ssl/UndertowSslConnection.readClosed:()Z
      47: pop
      48: aload_0
      49: getfield      #21                 // Field engine:Ljavax/net/ssl/SSLEngine;
      52: invokevirtual #95                 // Method javax/net/ssl/SSLEngine.closeInbound:()V
      55: goto          75
      58: astore_2
      59: getstatic     #45                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
      62: new           #97                 // class java/io/IOException
      65: dup
      66: aload_2
      67: invokespecial #98                 // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      70: invokeinterface #99,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
      75: aload_0
      76: dup
      77: getfield      #6                  // Field state:I
      80: sipush        16512
      83: ior
      84: putfield      #6                  // Field state:I
      87: aload_0
      88: getfield      #6                  // Field state:I
      91: sipush        8192
      94: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      97: ifeq          104
     100: aload_0
     101: invokespecial #91                 // Method closed:()V
     104: aload_0
     105: getfield      #6                  // Field state:I
     108: iconst_2
     109: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
     112: ifeq          119
     115: aload_0
     116: invokevirtual #78                 // Method notifyWriteClosed:()V
     119: iload_1
     120: ifeq          128
     123: aload_0
     124: iconst_0
     125: invokespecial #1                  // Method runReadListener:(Z)V
     128: return
    Exception table:
       from    to  target type
          48    55    58   Class javax/net/ssl/SSLException

  public void startHandshake() throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #6                  // Field state:I
       5: iconst_1
       6: ior
       7: putfield      #6                  // Field state:I
      10: aload_0
      11: getfield      #21                 // Field engine:Ljavax/net/ssl/SSLEngine;
      14: invokevirtual #100                // Method javax/net/ssl/SSLEngine.beginHandshake:()V
      17: return

  public javax.net.ssl.SSLSession getSslSession();
    Code:
       0: aload_0
       1: getfield      #21                 // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #101                // Method javax/net/ssl/SSLEngine.getSession:()Ljavax/net/ssl/SSLSession;
       7: areturn

  private void doHandshake() throws java.io.IOException;
    Code:
       0: aload_0
       1: aconst_null
       2: iconst_0
       3: iconst_0
       4: invokespecial #87                 // Method doUnwrap:([Ljava/nio/ByteBuffer;II)J
       7: pop2
       8: aload_0
       9: aconst_null
      10: iconst_0
      11: iconst_0
      12: invokespecial #68                 // Method doWrap:([Ljava/nio/ByteBuffer;II)J
      15: pop2
      16: return

  private long doUnwrap(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: sipush        4096
       7: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifeq          21
      13: new           #61                 // class java/nio/channels/ClosedChannelException
      16: dup
      17: invokespecial #62                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #9                  // Field outstandingTasks:I
      25: ifle          30
      28: lconst_0
      29: lreturn
      30: aload_0
      31: getfield      #6                  // Field state:I
      34: iconst_1
      35: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      38: ifeq          62
      41: aload_0
      42: aconst_null
      43: iconst_0
      44: iconst_0
      45: invokespecial #68                 // Method doWrap:([Ljava/nio/ByteBuffer;II)J
      48: pop2
      49: aload_0
      50: getfield      #6                  // Field state:I
      53: iconst_2
      54: invokestatic  #81                 // Method org/xnio/Bits.allAreClear:(II)Z
      57: ifeq          62
      60: lconst_0
      61: lreturn
      62: aload_0
      63: getfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
      66: astore        4
      68: aload         4
      70: ifnull        121
      73: aload_1
      74: ifnull        121
      77: aload_1
      78: iload_2
      79: iload_3
      80: aload         4
      82: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      87: invokestatic  #103                // Method org/xnio/Buffers.copy:([Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)I
      90: i2l
      91: lstore        5
      93: aload         4
      95: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     100: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
     103: ifne          118
     106: aload         4
     108: invokeinterface #105,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     113: aload_0
     114: aconst_null
     115: putfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
     118: lload         5
     120: lreturn
     121: iconst_m1
     122: istore        5
     124: aload_0
     125: getfield      #6                  // Field state:I
     128: bipush        16
     130: invokestatic  #81                 // Method org/xnio/Bits.allAreClear:(II)Z
     133: ifeq          533
     136: aload_0
     137: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     140: ifnonnull     156
     143: aload_0
     144: aload_0
     145: getfield      #22                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     148: invokeinterface #106,  1          // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     153: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     156: aload_0
     157: getfield      #20                 // Field source:Lorg/xnio/conduits/StreamSourceConduit;
     160: aload_0
     161: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     164: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     169: invokeinterface #107,  2          // InterfaceMethod org/xnio/conduits/StreamSourceConduit.read:(Ljava/nio/ByteBuffer;)I
     174: istore        6
     176: goto          198
     179: astore        7
     181: aload_0
     182: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     185: invokeinterface #105,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     190: aload_0
     191: aconst_null
     192: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     195: aload         7
     197: athrow
     198: aload_0
     199: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     202: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     207: invokevirtual #108                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     210: pop
     211: iload         6
     213: iconst_m1
     214: if_icmpne     376
     217: aload_0
     218: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     221: invokeinterface #105,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     226: aload_0
     227: aconst_null
     228: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     231: aload_0
     232: invokevirtual #31                 // Method notifyReadClosed:()V
     235: ldc2_w        #109                // long -1l
     238: lstore        7
     240: iconst_0
     241: istore        9
     243: aload         4
     245: ifnull        264
     248: aload         4
     250: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     255: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
     258: ifeq          264
     261: iconst_1
     262: istore        9
     264: aload_0
     265: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     268: ifnull        345
     271: aload_0
     272: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     275: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     280: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
     283: ifne          314
     286: aload_0
     287: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     290: invokeinterface #105,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     295: aload_0
     296: aconst_null
     297: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     300: aload_0
     301: dup
     302: getfield      #6                  // Field state:I
     305: bipush        -17
     307: iand
     308: putfield      #6                  // Field state:I
     311: goto          345
     314: aload_0
     315: getfield      #6                  // Field state:I
     318: bipush        16
     320: invokestatic  #81                 // Method org/xnio/Bits.allAreClear:(II)Z
     323: ifeq          342
     326: aload_0
     327: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     330: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     335: invokevirtual #111                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     338: pop
     339: goto          345
     342: iconst_1
     343: istore        9
     345: iload         9
     347: ifeq          373
     350: aload_0
     351: getfield      #6                  // Field state:I
     354: iconst_4
     355: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
     358: ifeq          373
     361: aload_0
     362: getfield      #5                  // Field invokingReadListenerHandshake:Z
     365: ifne          373
     368: aload_0
     369: iconst_0
     370: invokespecial #1                  // Method runReadListener:(Z)V
     373: lload         7
     375: lreturn
     376: iload         6
     378: ifne          533
     381: aload_0
     382: getfield      #21                 // Field engine:Ljavax/net/ssl/SSLEngine;
     385: invokevirtual #112                // Method javax/net/ssl/SSLEngine.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     388: getstatic     #113                // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.FINISHED:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     391: if_acmpne     533
     394: lconst_0
     395: lstore        7
     397: iconst_0
     398: istore        9
     400: aload         4
     402: ifnull        421
     405: aload         4
     407: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     412: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
     415: ifeq          421
     418: iconst_1
     419: istore        9
     421: aload_0
     422: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     425: ifnull        502
     428: aload_0
     429: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     432: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     437: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
     440: ifne          471
     443: aload_0
     444: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     447: invokeinterface #105,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     452: aload_0
     453: aconst_null
     454: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     457: aload_0
     458: dup
     459: getfield      #6                  // Field state:I
     462: bipush        -17
     464: iand
     465: putfield      #6                  // Field state:I
     468: goto          502
     471: aload_0
     472: getfield      #6                  // Field state:I
     475: bipush        16
     477: invokestatic  #81                 // Method org/xnio/Bits.allAreClear:(II)Z
     480: ifeq          499
     483: aload_0
     484: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     487: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     492: invokevirtual #111                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     495: pop
     496: goto          502
     499: iconst_1
     500: istore        9
     502: iload         9
     504: ifeq          530
     507: aload_0
     508: getfield      #6                  // Field state:I
     511: iconst_4
     512: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
     515: ifeq          530
     518: aload_0
     519: getfield      #5                  // Field invokingReadListenerHandshake:Z
     522: ifne          530
     525: aload_0
     526: iconst_0
     527: invokespecial #1                  // Method runReadListener:(Z)V
     530: lload         7
     532: lreturn
     533: aload_0
     534: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     537: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     542: invokevirtual #114                // Method java/nio/ByteBuffer.remaining:()I
     545: istore        5
     547: lconst_0
     548: lstore        6
     550: aload_1
     551: ifnull        560
     554: aload_1
     555: invokestatic  #115                // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
     558: lstore        6
     560: iconst_0
     561: istore        9
     563: aload_1
     564: ifnull        664
     567: aload_0
     568: getfield      #21                 // Field engine:Ljavax/net/ssl/SSLEngine;
     571: aload_0
     572: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     575: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     580: aload_1
     581: iload_2
     582: iload_3
     583: invokevirtual #116                // Method javax/net/ssl/SSLEngine.unwrap:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)Ljavax/net/ssl/SSLEngineResult;
     586: astore        8
     588: aload         8
     590: invokevirtual #117                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     593: getstatic     #118                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_OVERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
     596: if_acmpne     722
     599: aload_0
     600: getfield      #22                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     603: invokeinterface #106,  1          // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     608: astore        4
     610: iload_3
     611: iconst_1
     612: iadd
     613: anewarray     #67                 // class java/nio/ByteBuffer
     616: astore        10
     618: aload_1
     619: iload_2
     620: aload         10
     622: iconst_0
     623: iload_3
     624: invokestatic  #119                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     627: aload         10
     629: iload_3
     630: aload         4
     632: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     637: aastore
     638: aload_0
     639: getfield      #21                 // Field engine:Ljavax/net/ssl/SSLEngine;
     642: aload_0
     643: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     646: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     651: aload         10
     653: invokevirtual #120                // Method javax/net/ssl/SSLEngine.unwrap:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
     656: astore        8
     658: iconst_1
     659: istore        9
     661: goto          722
     664: iconst_1
     665: istore        9
     667: aload         4
     669: ifnonnull     686
     672: aload_0
     673: getfield      #22                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     676: invokeinterface #106,  1          // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     681: astore        4
     683: goto          697
     686: aload         4
     688: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     693: invokevirtual #111                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     696: pop
     697: aload_0
     698: getfield      #21                 // Field engine:Ljavax/net/ssl/SSLEngine;
     701: aload_0
     702: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     705: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     710: aload         4
     712: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     717: invokevirtual #121                // Method javax/net/ssl/SSLEngine.unwrap:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
     720: astore        8
     722: iload         9
     724: ifeq          761
     727: aload         4
     729: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     734: invokevirtual #108                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     737: pop
     738: aload         4
     740: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     745: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
     748: ifne          761
     751: aload         4
     753: invokeinterface #105,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     758: aconst_null
     759: astore        4
     761: aload_0
     762: aload         4
     764: putfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
     767: goto          820
     770: astore        11
     772: iload         9
     774: ifeq          811
     777: aload         4
     779: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     784: invokevirtual #108                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     787: pop
     788: aload         4
     790: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     795: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
     798: ifne          811
     801: aload         4
     803: invokeinterface #105,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     808: aconst_null
     809: astore        4
     811: aload_0
     812: aload         4
     814: putfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
     817: aload         11
     819: athrow
     820: aload_0
     821: aload         8
     823: invokespecial #122                // Method handleHandshakeResult:(Ljavax/net/ssl/SSLEngineResult;)Z
     826: ifne          1022
     829: aload_0
     830: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     833: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     838: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
     841: ifeq          883
     844: aload         8
     846: invokevirtual #117                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     849: getstatic     #123                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_UNDERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
     852: if_acmpeq     883
     855: aload_0
     856: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     859: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     864: invokevirtual #114                // Method java/nio/ByteBuffer.remaining:()I
     867: iload         5
     869: if_icmpeq     883
     872: aload_0
     873: dup
     874: getfield      #6                  // Field state:I
     877: bipush        16
     879: ior
     880: putfield      #6                  // Field state:I
     883: lconst_0
     884: lstore        10
     886: iconst_0
     887: istore        12
     889: aload         4
     891: ifnull        910
     894: aload         4
     896: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     901: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
     904: ifeq          910
     907: iconst_1
     908: istore        12
     910: aload_0
     911: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     914: ifnull        991
     917: aload_0
     918: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     921: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     926: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
     929: ifne          960
     932: aload_0
     933: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     936: invokeinterface #105,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     941: aload_0
     942: aconst_null
     943: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     946: aload_0
     947: dup
     948: getfield      #6                  // Field state:I
     951: bipush        -17
     953: iand
     954: putfield      #6                  // Field state:I
     957: goto          991
     960: aload_0
     961: getfield      #6                  // Field state:I
     964: bipush        16
     966: invokestatic  #81                 // Method org/xnio/Bits.allAreClear:(II)Z
     969: ifeq          988
     972: aload_0
     973: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
     976: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     981: invokevirtual #111                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     984: pop
     985: goto          991
     988: iconst_1
     989: istore        12
     991: iload         12
     993: ifeq          1019
     996: aload_0
     997: getfield      #6                  // Field state:I
    1000: iconst_4
    1001: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
    1004: ifeq          1019
    1007: aload_0
    1008: getfield      #5                  // Field invokingReadListenerHandshake:Z
    1011: ifne          1019
    1014: aload_0
    1015: iconst_0
    1016: invokespecial #1                  // Method runReadListener:(Z)V
    1019: lload         10
    1021: lreturn
    1022: aload         8
    1024: invokevirtual #117                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
    1027: getstatic     #124                // Field javax/net/ssl/SSLEngineResult$Status.CLOSED:Ljavax/net/ssl/SSLEngineResult$Status;
    1030: if_acmpne     1178
    1033: aload_0
    1034: invokevirtual #31                 // Method notifyReadClosed:()V
    1037: ldc2_w        #109                // long -1l
    1040: lstore        10
    1042: iconst_0
    1043: istore        12
    1045: aload         4
    1047: ifnull        1066
    1050: aload         4
    1052: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1057: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1060: ifeq          1066
    1063: iconst_1
    1064: istore        12
    1066: aload_0
    1067: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1070: ifnull        1147
    1073: aload_0
    1074: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1077: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1082: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1085: ifne          1116
    1088: aload_0
    1089: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1092: invokeinterface #105,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1097: aload_0
    1098: aconst_null
    1099: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1102: aload_0
    1103: dup
    1104: getfield      #6                  // Field state:I
    1107: bipush        -17
    1109: iand
    1110: putfield      #6                  // Field state:I
    1113: goto          1147
    1116: aload_0
    1117: getfield      #6                  // Field state:I
    1120: bipush        16
    1122: invokestatic  #81                 // Method org/xnio/Bits.allAreClear:(II)Z
    1125: ifeq          1144
    1128: aload_0
    1129: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1132: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1137: invokevirtual #111                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
    1140: pop
    1141: goto          1147
    1144: iconst_1
    1145: istore        12
    1147: iload         12
    1149: ifeq          1175
    1152: aload_0
    1153: getfield      #6                  // Field state:I
    1156: iconst_4
    1157: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
    1160: ifeq          1175
    1163: aload_0
    1164: getfield      #5                  // Field invokingReadListenerHandshake:Z
    1167: ifne          1175
    1170: aload_0
    1171: iconst_0
    1172: invokespecial #1                  // Method runReadListener:(Z)V
    1175: lload         10
    1177: lreturn
    1178: aload         8
    1180: invokevirtual #117                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
    1183: getstatic     #123                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_UNDERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
    1186: if_acmpne     1203
    1189: aload_0
    1190: dup
    1191: getfield      #6                  // Field state:I
    1194: bipush        -17
    1196: iand
    1197: putfield      #6                  // Field state:I
    1200: goto          1281
    1203: aload         8
    1205: invokevirtual #117                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
    1208: getstatic     #118                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_OVERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
    1211: if_acmpne     1224
    1214: new           #97                 // class java/io/IOException
    1217: dup
    1218: ldc           #125                // String overflow
    1220: invokespecial #126                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
    1223: athrow
    1224: aload_0
    1225: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1228: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1233: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1236: ifeq          1270
    1239: aload_0
    1240: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1243: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1248: invokevirtual #114                // Method java/nio/ByteBuffer.remaining:()I
    1251: iload         5
    1253: if_icmpeq     1270
    1256: aload_0
    1257: dup
    1258: getfield      #6                  // Field state:I
    1261: bipush        16
    1263: ior
    1264: putfield      #6                  // Field state:I
    1267: goto          1281
    1270: aload_0
    1271: dup
    1272: getfield      #6                  // Field state:I
    1275: bipush        -17
    1277: iand
    1278: putfield      #6                  // Field state:I
    1281: aload_1
    1282: ifnonnull     1424
    1285: lconst_0
    1286: lstore        10
    1288: iconst_0
    1289: istore        12
    1291: aload         4
    1293: ifnull        1312
    1296: aload         4
    1298: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1303: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1306: ifeq          1312
    1309: iconst_1
    1310: istore        12
    1312: aload_0
    1313: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1316: ifnull        1393
    1319: aload_0
    1320: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1323: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1328: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1331: ifne          1362
    1334: aload_0
    1335: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1338: invokeinterface #105,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1343: aload_0
    1344: aconst_null
    1345: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1348: aload_0
    1349: dup
    1350: getfield      #6                  // Field state:I
    1353: bipush        -17
    1355: iand
    1356: putfield      #6                  // Field state:I
    1359: goto          1393
    1362: aload_0
    1363: getfield      #6                  // Field state:I
    1366: bipush        16
    1368: invokestatic  #81                 // Method org/xnio/Bits.allAreClear:(II)Z
    1371: ifeq          1390
    1374: aload_0
    1375: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1378: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1383: invokevirtual #111                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
    1386: pop
    1387: goto          1393
    1390: iconst_1
    1391: istore        12
    1393: iload         12
    1395: ifeq          1421
    1398: aload_0
    1399: getfield      #6                  // Field state:I
    1402: iconst_4
    1403: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
    1406: ifeq          1421
    1409: aload_0
    1410: getfield      #5                  // Field invokingReadListenerHandshake:Z
    1413: ifne          1421
    1416: aload_0
    1417: iconst_0
    1418: invokespecial #1                  // Method runReadListener:(Z)V
    1421: lload         10
    1423: lreturn
    1424: lload         6
    1426: aload_1
    1427: invokestatic  #115                // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
    1430: lsub
    1431: lstore        10
    1433: iconst_0
    1434: istore        12
    1436: aload         4
    1438: ifnull        1457
    1441: aload         4
    1443: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1448: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1451: ifeq          1457
    1454: iconst_1
    1455: istore        12
    1457: aload_0
    1458: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1461: ifnull        1538
    1464: aload_0
    1465: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1468: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1473: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1476: ifne          1507
    1479: aload_0
    1480: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1483: invokeinterface #105,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1488: aload_0
    1489: aconst_null
    1490: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1493: aload_0
    1494: dup
    1495: getfield      #6                  // Field state:I
    1498: bipush        -17
    1500: iand
    1501: putfield      #6                  // Field state:I
    1504: goto          1538
    1507: aload_0
    1508: getfield      #6                  // Field state:I
    1511: bipush        16
    1513: invokestatic  #81                 // Method org/xnio/Bits.allAreClear:(II)Z
    1516: ifeq          1535
    1519: aload_0
    1520: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1523: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1528: invokevirtual #111                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
    1531: pop
    1532: goto          1538
    1535: iconst_1
    1536: istore        12
    1538: iload         12
    1540: ifeq          1566
    1543: aload_0
    1544: getfield      #6                  // Field state:I
    1547: iconst_4
    1548: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
    1551: ifeq          1566
    1554: aload_0
    1555: getfield      #5                  // Field invokingReadListenerHandshake:Z
    1558: ifne          1566
    1561: aload_0
    1562: iconst_0
    1563: invokespecial #1                  // Method runReadListener:(Z)V
    1566: lload         10
    1568: lreturn
    1569: astore        13
    1571: iconst_0
    1572: istore        14
    1574: aload         4
    1576: ifnull        1595
    1579: aload         4
    1581: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1586: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1589: ifeq          1595
    1592: iconst_1
    1593: istore        14
    1595: aload_0
    1596: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1599: ifnull        1676
    1602: aload_0
    1603: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1606: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1611: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
    1614: ifne          1645
    1617: aload_0
    1618: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1621: invokeinterface #105,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1626: aload_0
    1627: aconst_null
    1628: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1631: aload_0
    1632: dup
    1633: getfield      #6                  // Field state:I
    1636: bipush        -17
    1638: iand
    1639: putfield      #6                  // Field state:I
    1642: goto          1676
    1645: aload_0
    1646: getfield      #6                  // Field state:I
    1649: bipush        16
    1651: invokestatic  #81                 // Method org/xnio/Bits.allAreClear:(II)Z
    1654: ifeq          1673
    1657: aload_0
    1658: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
    1661: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
    1666: invokevirtual #111                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
    1669: pop
    1670: goto          1676
    1673: iconst_1
    1674: istore        14
    1676: iload         14
    1678: ifeq          1704
    1681: aload_0
    1682: getfield      #6                  // Field state:I
    1685: iconst_4
    1686: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
    1689: ifeq          1704
    1692: aload_0
    1693: getfield      #5                  // Field invokingReadListenerHandshake:Z
    1696: ifne          1704
    1699: aload_0
    1700: iconst_0
    1701: invokespecial #1                  // Method runReadListener:(Z)V
    1704: aload         13
    1706: athrow
    Exception table:
       from    to  target type
         156   176   179   Class java/io/IOException
         563   722   770   any
         770   772   770   any
         121   240  1569   any
         376   397  1569   any
         533   886  1569   any
        1022  1042  1569   any
        1178  1288  1569   any
        1424  1433  1569   any
        1569  1571  1569   any

  private long doWrap(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: sipush        4096
       7: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifeq          21
      13: new           #61                 // class java/nio/channels/ClosedChannelException
      16: dup
      17: invokespecial #62                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #9                  // Field outstandingTasks:I
      25: ifle          30
      28: lconst_0
      29: lreturn
      30: aload_0
      31: getfield      #6                  // Field state:I
      34: iconst_2
      35: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      38: ifeq          62
      41: aload_0
      42: aconst_null
      43: iconst_0
      44: iconst_0
      45: invokespecial #87                 // Method doUnwrap:([Ljava/nio/ByteBuffer;II)J
      48: pop2
      49: aload_0
      50: getfield      #6                  // Field state:I
      53: iconst_1
      54: invokestatic  #81                 // Method org/xnio/Bits.allAreClear:(II)Z
      57: ifeq          62
      60: lconst_0
      61: lreturn
      62: aload_0
      63: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      66: ifnull        127
      69: aload_0
      70: getfield      #17                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
      73: aload_0
      74: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      77: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      82: invokeinterface #127,  2          // InterfaceMethod org/xnio/conduits/StreamSinkConduit.write:(Ljava/nio/ByteBuffer;)I
      87: istore        4
      89: iload         4
      91: ifeq          109
      94: aload_0
      95: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      98: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     103: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
     106: ifeq          111
     109: lconst_0
     110: lreturn
     111: aload_0
     112: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     115: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     120: invokevirtual #128                // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     123: pop
     124: goto          140
     127: aload_0
     128: aload_0
     129: getfield      #22                 // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
     132: invokeinterface #106,  1          // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     137: putfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     140: aconst_null
     141: astore        4
     143: aload         4
     145: ifnull        170
     148: aload         4
     150: invokevirtual #129                // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     153: getstatic     #130                // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.NEED_WRAP:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     156: if_acmpne     222
     159: aload         4
     161: invokevirtual #117                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     164: getstatic     #118                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_OVERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
     167: if_acmpeq     222
     170: aload_1
     171: ifnonnull     198
     174: aload_0
     175: getfield      #21                 // Field engine:Ljavax/net/ssl/SSLEngine;
     178: getstatic     #131                // Field EMPTY_BUFFER:Ljava/nio/ByteBuffer;
     181: aload_0
     182: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     185: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     190: invokevirtual #132                // Method javax/net/ssl/SSLEngine.wrap:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
     193: astore        4
     195: goto          143
     198: aload_0
     199: getfield      #21                 // Field engine:Ljavax/net/ssl/SSLEngine;
     202: aload_1
     203: iload_2
     204: iload_3
     205: aload_0
     206: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     209: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     214: invokevirtual #133                // Method javax/net/ssl/SSLEngine.wrap:([Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
     217: astore        4
     219: goto          143
     222: aload_0
     223: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     226: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     231: invokevirtual #108                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     234: pop
     235: aload         4
     237: invokevirtual #117                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     240: getstatic     #123                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_UNDERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
     243: if_acmpne     256
     246: new           #97                 // class java/io/IOException
     249: dup
     250: ldc           #134                // String underflow
     252: invokespecial #126                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     255: athrow
     256: aload         4
     258: invokevirtual #117                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     261: getstatic     #118                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_OVERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
     264: if_acmpne     292
     267: aload_0
     268: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     271: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     276: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
     279: ifne          292
     282: new           #97                 // class java/io/IOException
     285: dup
     286: ldc           #125                // String overflow
     288: invokespecial #126                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     291: athrow
     292: aload_0
     293: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     296: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     301: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
     304: ifeq          326
     307: aload_0
     308: getfield      #17                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
     311: aload_0
     312: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     315: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     320: invokeinterface #127,  2          // InterfaceMethod org/xnio/conduits/StreamSinkConduit.write:(Ljava/nio/ByteBuffer;)I
     325: pop
     326: aload_0
     327: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     330: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     335: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
     338: ifeq          388
     341: aload         4
     343: invokevirtual #135                // Method javax/net/ssl/SSLEngineResult.bytesConsumed:()I
     346: i2l
     347: lstore        5
     349: aload_0
     350: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     353: ifnull        385
     356: aload_0
     357: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     360: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     365: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
     368: ifne          385
     371: aload_0
     372: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     375: invokeinterface #105,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     380: aload_0
     381: aconst_null
     382: putfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     385: lload         5
     387: lreturn
     388: aload_0
     389: aload         4
     391: invokespecial #122                // Method handleHandshakeResult:(Ljavax/net/ssl/SSLEngineResult;)Z
     394: ifne          439
     397: lconst_0
     398: lstore        5
     400: aload_0
     401: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     404: ifnull        436
     407: aload_0
     408: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     411: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     416: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
     419: ifne          436
     422: aload_0
     423: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     426: invokeinterface #105,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     431: aload_0
     432: aconst_null
     433: putfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     436: lload         5
     438: lreturn
     439: aload         4
     441: invokevirtual #117                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     444: getstatic     #124                // Field javax/net/ssl/SSLEngineResult$Status.CLOSED:Ljavax/net/ssl/SSLEngineResult$Status;
     447: if_acmpne     466
     450: aload_1
     451: ifnull        466
     454: aload_0
     455: invokevirtual #78                 // Method notifyWriteClosed:()V
     458: new           #61                 // class java/nio/channels/ClosedChannelException
     461: dup
     462: invokespecial #62                 // Method java/nio/channels/ClosedChannelException."<init>":()V
     465: athrow
     466: aload         4
     468: invokevirtual #135                // Method javax/net/ssl/SSLEngineResult.bytesConsumed:()I
     471: i2l
     472: lstore        5
     474: aload_0
     475: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     478: ifnull        510
     481: aload_0
     482: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     485: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     490: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
     493: ifne          510
     496: aload_0
     497: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     500: invokeinterface #105,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     505: aload_0
     506: aconst_null
     507: putfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     510: lload         5
     512: lreturn
     513: astore        7
     515: aload_0
     516: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     519: ifnull        551
     522: aload_0
     523: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     526: invokeinterface #102,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     531: invokevirtual #104                // Method java/nio/ByteBuffer.hasRemaining:()Z
     534: ifne          551
     537: aload_0
     538: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     541: invokeinterface #105,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     546: aload_0
     547: aconst_null
     548: putfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
     551: aload         7
     553: athrow
    Exception table:
       from    to  target type
         140   349   513   any
         388   400   513   any
         439   474   513   any
         513   515   513   any

  private boolean handleHandshakeResult(javax.net.ssl.SSLEngineResult) throws java.io.IOException;
    Code:
       0: getstatic     #136                // Field io/undertow/protocols/ssl/SslConduit$5.$SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus:[I
       3: aload_1
       4: invokevirtual #129                // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
       7: invokevirtual #137                // Method javax/net/ssl/SSLEngineResult$HandshakeStatus.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 4
                     1: 40
                     2: 66
                     3: 114
                     4: 161
               default: 195
          }
      40: aload_0
      41: dup
      42: getfield      #6                  // Field state:I
      45: sipush        2048
      48: ior
      49: putfield      #6                  // Field state:I
      52: aload_0
      53: invokespecial #138                // Method clearReadRequiresWrite:()V
      56: aload_0
      57: invokespecial #139                // Method clearWriteRequiresRead:()V
      60: aload_0
      61: invokespecial #140                // Method runTasks:()V
      64: iconst_0
      65: ireturn
      66: aload_0
      67: invokespecial #138                // Method clearReadRequiresWrite:()V
      70: aload_0
      71: dup
      72: getfield      #6                  // Field state:I
      75: sipush        2050
      78: ior
      79: putfield      #6                  // Field state:I
      82: aload_0
      83: getfield      #17                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
      86: invokeinterface #141,  1          // InterfaceMethod org/xnio/conduits/StreamSinkConduit.suspendWrites:()V
      91: aload_0
      92: getfield      #6                  // Field state:I
      95: bipush        8
      97: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
     100: ifeq          112
     103: aload_0
     104: getfield      #20                 // Field source:Lorg/xnio/conduits/StreamSourceConduit;
     107: invokeinterface #142,  1          // InterfaceMethod org/xnio/conduits/StreamSourceConduit.resumeReads:()V
     112: iconst_0
     113: ireturn
     114: aload_0
     115: invokespecial #139                // Method clearWriteRequiresRead:()V
     118: aload_0
     119: dup
     120: getfield      #6                  // Field state:I
     123: sipush        2049
     126: ior
     127: putfield      #6                  // Field state:I
     130: aload_0
     131: getfield      #20                 // Field source:Lorg/xnio/conduits/StreamSourceConduit;
     134: invokeinterface #143,  1          // InterfaceMethod org/xnio/conduits/StreamSourceConduit.suspendReads:()V
     139: aload_0
     140: getfield      #6                  // Field state:I
     143: iconst_4
     144: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
     147: ifeq          159
     150: aload_0
     151: getfield      #17                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
     154: invokeinterface #144,  1          // InterfaceMethod org/xnio/conduits/StreamSinkConduit.resumeWrites:()V
     159: iconst_0
     160: ireturn
     161: aload_0
     162: getfield      #6                  // Field state:I
     165: sipush        2048
     168: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
     171: ifeq          195
     174: aload_0
     175: dup
     176: getfield      #6                  // Field state:I
     179: sipush        -2049
     182: iand
     183: putfield      #6                  // Field state:I
     186: aload_0
     187: getfield      #14                 // Field handshakeCallback:Ljava/lang/Runnable;
     190: invokeinterface #145,  1          // InterfaceMethod java/lang/Runnable.run:()V
     195: aload_0
     196: invokespecial #138                // Method clearReadRequiresWrite:()V
     199: aload_0
     200: invokespecial #139                // Method clearWriteRequiresRead:()V
     203: iconst_1
     204: ireturn

  private void clearReadRequiresWrite();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_1
       5: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          59
      11: aload_0
      12: dup
      13: getfield      #6                  // Field state:I
      16: bipush        -2
      18: iand
      19: putfield      #6                  // Field state:I
      22: aload_0
      23: getfield      #6                  // Field state:I
      26: iconst_4
      27: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      30: ifeq          38
      33: aload_0
      34: iconst_0
      35: invokespecial #33                 // Method resumeReads:(Z)V
      38: aload_0
      39: getfield      #6                  // Field state:I
      42: bipush        8
      44: invokestatic  #81                 // Method org/xnio/Bits.allAreClear:(II)Z
      47: ifeq          59
      50: aload_0
      51: getfield      #17                 // Field sink:Lorg/xnio/conduits/StreamSinkConduit;
      54: invokeinterface #141,  1          // InterfaceMethod org/xnio/conduits/StreamSinkConduit.suspendWrites:()V
      59: return

  private void clearWriteRequiresRead();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: iconst_2
       5: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          58
      11: aload_0
      12: dup
      13: getfield      #6                  // Field state:I
      16: bipush        -3
      18: iand
      19: putfield      #6                  // Field state:I
      22: aload_0
      23: getfield      #6                  // Field state:I
      26: bipush        8
      28: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      31: ifeq          38
      34: aload_0
      35: invokevirtual #146                // Method wakeupWrites:()V
      38: aload_0
      39: getfield      #6                  // Field state:I
      42: iconst_4
      43: invokestatic  #81                 // Method org/xnio/Bits.allAreClear:(II)Z
      46: ifeq          58
      49: aload_0
      50: getfield      #20                 // Field source:Lorg/xnio/conduits/StreamSourceConduit;
      53: invokeinterface #143,  1          // InterfaceMethod org/xnio/conduits/StreamSourceConduit.suspendReads:()V
      58: return

  private void closed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: sipush        4096
       7: invokestatic  #32                 // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifeq          14
      13: return
      14: aload_0
      15: dup
      16: getfield      #6                  // Field state:I
      19: sipush        5728
      22: ior
      23: putfield      #6                  // Field state:I
      26: aload_0
      27: invokevirtual #31                 // Method notifyReadClosed:()V
      30: aload_0
      31: invokevirtual #78                 // Method notifyWriteClosed:()V
      34: aload_0
      35: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
      38: ifnull        55
      41: aload_0
      42: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
      45: invokeinterface #105,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      50: aload_0
      51: aconst_null
      52: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
      55: aload_0
      56: getfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
      59: ifnull        76
      62: aload_0
      63: getfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
      66: invokeinterface #105,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      71: aload_0
      72: aconst_null
      73: putfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
      76: aload_0
      77: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      80: ifnull        97
      83: aload_0
      84: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      87: invokeinterface #105,  1          // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      92: aload_0
      93: aconst_null
      94: putfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      97: aload_0
      98: getfield      #6                  // Field state:I
     101: sipush        256
     104: invokestatic  #81                 // Method org/xnio/Bits.allAreClear:(II)Z
     107: ifeq          117
     110: aload_0
     111: getfield      #21                 // Field engine:Ljavax/net/ssl/SSLEngine;
     114: invokevirtual #82                 // Method javax/net/ssl/SSLEngine.closeOutbound:()V
     117: aload_0
     118: getfield      #6                  // Field state:I
     121: sipush        128
     124: invokestatic  #81                 // Method org/xnio/Bits.allAreClear:(II)Z
     127: ifeq          150
     130: aload_0
     131: getfield      #21                 // Field engine:Ljavax/net/ssl/SSLEngine;
     134: invokevirtual #95                 // Method javax/net/ssl/SSLEngine.closeInbound:()V
     137: goto          150
     140: astore_1
     141: getstatic     #147                // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     144: aload_1
     145: invokeinterface #99,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
     150: aload_0
     151: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
     154: invokestatic  #148                // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     157: return
    Exception table:
       from    to  target type
         130   137   140   Class javax/net/ssl/SSLException

  private void runTasks();
    Code:
       0: aload_0
       1: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #15                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
       7: invokevirtual #71                 // Method org/xnio/conduits/ConduitStreamSinkChannel.suspendWrites:()V
      10: aload_0
      11: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
      14: invokevirtual #18                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      17: invokevirtual #35                 // Method org/xnio/conduits/ConduitStreamSourceChannel.suspendReads:()V
      20: new           #149                // class java/util/ArrayList
      23: dup
      24: invokespecial #150                // Method java/util/ArrayList."<init>":()V
      27: astore_1
      28: aload_0
      29: getfield      #21                 // Field engine:Ljavax/net/ssl/SSLEngine;
      32: invokevirtual #151                // Method javax/net/ssl/SSLEngine.getDelegatedTask:()Ljava/lang/Runnable;
      35: astore_2
      36: aload_2
      37: ifnull        59
      40: aload_1
      41: aload_2
      42: invokeinterface #152,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      47: pop
      48: aload_0
      49: getfield      #21                 // Field engine:Ljavax/net/ssl/SSLEngine;
      52: invokevirtual #151                // Method javax/net/ssl/SSLEngine.getDelegatedTask:()Ljava/lang/Runnable;
      55: astore_2
      56: goto          36
      59: aload_0
      60: dup
      61: astore_3
      62: monitorenter
      63: aload_0
      64: dup
      65: getfield      #9                  // Field outstandingTasks:I
      68: aload_1
      69: invokeinterface #153,  1          // InterfaceMethod java/util/List.size:()I
      74: iadd
      75: putfield      #9                  // Field outstandingTasks:I
      78: aload_1
      79: invokeinterface #154,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      84: astore        4
      86: aload         4
      88: invokeinterface #155,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      93: ifeq          128
      96: aload         4
      98: invokeinterface #156,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     103: checkcast     #157                // class java/lang/Runnable
     106: astore        5
     108: aload_0
     109: invokevirtual #158                // Method getWorker:()Lorg/xnio/XnioWorker;
     112: new           #159                // class io/undertow/protocols/ssl/SslConduit$4
     115: dup
     116: aload_0
     117: aload         5
     119: invokespecial #160                // Method io/undertow/protocols/ssl/SslConduit$4."<init>":(Lio/undertow/protocols/ssl/SslConduit;Ljava/lang/Runnable;)V
     122: invokevirtual #161                // Method org/xnio/XnioWorker.execute:(Ljava/lang/Runnable;)V
     125: goto          86
     128: aload_3
     129: monitorexit
     130: goto          140
     133: astore        6
     135: aload_3
     136: monitorexit
     137: aload         6
     139: athrow
     140: return
    Exception table:
       from    to  target type
          63   130   133   any
         133   137   133   any

  public javax.net.ssl.SSLEngine getSSLEngine();
    Code:
       0: aload_0
       1: getfield      #21                 // Field engine:Ljavax/net/ssl/SSLEngine;
       4: areturn

  public void close();
    Code:
       0: aload_0
       1: invokespecial #91                 // Method closed:()V
       4: return

  public java.lang.String toString();
    Code:
       0: new           #162                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #163                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #164                // String SslConduit{state=
       9: invokevirtual #165                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #6                  // Field state:I
      16: invokevirtual #166                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #167                // String , outstandingTasks=
      21: invokevirtual #165                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #9                  // Field outstandingTasks:I
      28: invokevirtual #166                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #168                // String , wrappedData=
      33: invokevirtual #165                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
      40: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #170                // String , dataToUnwrap=
      45: invokevirtual #165                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
      52: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #171                // String , unwrappedData=
      57: invokevirtual #165                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
      64: invokevirtual #169                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: bipush        125
      69: invokevirtual #172                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      72: invokevirtual #173                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: areturn

  static org.xnio.StreamConnection access$200(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: getfield      #12                 // Field delegate:Lorg/xnio/StreamConnection;
       4: areturn

  static io.undertow.protocols.ssl.SslConduit$SslReadReadyHandler access$300(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: getfield      #11                 // Field readReadyHandler:Lio/undertow/protocols/ssl/SslConduit$SslReadReadyHandler;
       4: areturn

  static io.undertow.protocols.ssl.SslConduit$SslWriteReadyHandler access$400(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: getfield      #10                 // Field writeReadyHandler:Lio/undertow/protocols/ssl/SslConduit$SslWriteReadyHandler;
       4: areturn

  static int access$500(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: getfield      #9                  // Field outstandingTasks:I
       4: ireturn

  static int access$506(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: dup
       2: getfield      #9                  // Field outstandingTasks:I
       5: iconst_1
       6: isub
       7: dup_x1
       8: putfield      #9                  // Field outstandingTasks:I
      11: ireturn

  static void access$600(io.undertow.protocols.ssl.SslConduit) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #8                  // Method doHandshake:()V
       4: return

  static io.undertow.protocols.ssl.UndertowSslConnection access$700(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: getfield      #7                  // Field connection:Lio/undertow/protocols/ssl/UndertowSslConnection;
       4: areturn

  static int access$800(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:I
       4: ireturn

  static int access$510(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: dup
       2: getfield      #9                  // Field outstandingTasks:I
       5: dup_x1
       6: iconst_1
       7: isub
       8: putfield      #9                  // Field outstandingTasks:I
      11: ireturn

  static boolean access$902(io.undertow.protocols.ssl.SslConduit, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #5                  // Field invokingReadListenerHandshake:Z
       6: ireturn

  static io.undertow.connector.PooledByteBuffer access$1000(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: getfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
       4: areturn

  static io.undertow.connector.PooledByteBuffer access$1100(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: getfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
       4: areturn

  static io.undertow.connector.PooledByteBuffer access$1102(io.undertow.protocols.ssl.SslConduit, io.undertow.connector.PooledByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field unwrappedData:Lio/undertow/connector/PooledByteBuffer;
       6: areturn

  static io.undertow.connector.PooledByteBuffer access$1002(io.undertow.protocols.ssl.SslConduit, io.undertow.connector.PooledByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field dataToUnwrap:Lio/undertow/connector/PooledByteBuffer;
       6: areturn

  static io.undertow.connector.PooledByteBuffer access$1200(io.undertow.protocols.ssl.SslConduit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field wrappedData:Lio/undertow/connector/PooledByteBuffer;
       4: areturn

  static void access$1300(io.undertow.protocols.ssl.SslConduit, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method runReadListener:(Z)V
       5: return

  static {};
    Code:
       0: iconst_0
       1: invokestatic  #174                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       4: putstatic     #131                // Field EMPTY_BUFFER:Ljava/nio/ByteBuffer;
       7: return
}
