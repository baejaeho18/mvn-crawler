Compiled from "HttpContinue.java"
final class io.undertow.server.protocol.http.HttpContinue$3 implements org.xnio.ChannelListener<org.xnio.channels.StreamSinkChannel> {
  final io.undertow.server.HttpServerExchange val$exchange;

  final io.undertow.io.IoCallback val$callback;

  io.undertow.server.protocol.http.HttpContinue$3(io.undertow.server.HttpServerExchange, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$callback:Lio/undertow/io/IoCallback;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void handleEvent(org.xnio.channels.StreamSinkChannel);
    Code:
       0: aload_1
       1: invokeinterface #4,  1            // InterfaceMethod org/xnio/channels/StreamSinkChannel.suspendWrites:()V
       6: aload_0
       7: getfield      #1                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
      10: new           #5                  // class io/undertow/server/protocol/http/HttpContinue$3$1
      13: dup
      14: aload_0
      15: invokespecial #6                  // Method io/undertow/server/protocol/http/HttpContinue$3$1."<init>":(Lio/undertow/server/protocol/http/HttpContinue$3;)V
      18: invokevirtual #7                  // Method io/undertow/server/HttpServerExchange.dispatch:(Lio/undertow/server/HttpHandler;)Lio/undertow/server/HttpServerExchange;
      21: pop
      22: return

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #8                  // class org/xnio/channels/StreamSinkChannel
       5: invokevirtual #9                  // Method handleEvent:(Lorg/xnio/channels/StreamSinkChannel;)V
       8: return
}
