Compiled from "AjpServerResponseConduit.java"
final class io.undertow.server.protocol.ajp.AjpServerResponseConduit extends io.undertow.conduits.AbstractFramedStreamSinkConduit {
  private static final org.jboss.logging.Logger log;

  private static final int DEFAULT_MAX_DATA_SIZE;

  private static final java.util.Map<io.undertow.util.HttpString, java.lang.Integer> HEADER_MAP;

  private static final java.nio.ByteBuffer FLUSH_PACKET;

  private static final int FLAG_START;

  private static final int FLAG_WRITE_RESUMED;

  private static final int FLAG_WRITE_READ_BODY_CHUNK_FROM_LISTENER;

  private static final int FLAG_WRITE_SHUTDOWN;

  private static final int FLAG_READS_DONE;

  private static final int FLAG_FLUSH_QUEUED;

  private static final java.nio.ByteBuffer CLOSE_FRAME_PERSISTENT;

  private static final java.nio.ByteBuffer CLOSE_FRAME_NON_PERSISTENT;

  private final io.undertow.connector.ByteBufferPool pool;

  private int state;

  private final io.undertow.server.HttpServerExchange exchange;

  private final io.undertow.conduits.ConduitListener<? super io.undertow.server.protocol.ajp.AjpServerResponseConduit> finishListener;

  private final boolean headRequest;

  io.undertow.server.protocol.ajp.AjpServerResponseConduit(org.xnio.conduits.StreamSinkConduit, io.undertow.connector.ByteBufferPool, io.undertow.server.HttpServerExchange, io.undertow.conduits.ConduitListener<? super io.undertow.server.protocol.ajp.AjpServerResponseConduit>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method io/undertow/conduits/AbstractFramedStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;)V
       5: aload_0
       6: iconst_1
       7: putfield      #4                  // Field state:I
      10: aload_0
      11: aload_2
      12: putfield      #7                  // Field pool:Lio/undertow/connector/ByteBufferPool;
      15: aload_0
      16: aload_3
      17: putfield      #8                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      20: aload_0
      21: aload         4
      23: putfield      #9                  // Field finishListener:Lio/undertow/conduits/ConduitListener;
      26: aload_0
      27: iload         5
      29: putfield      #10                 // Field headRequest:Z
      32: aload_0
      33: iconst_1
      34: putfield      #4                  // Field state:I
      37: return

  private static void putInt(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        8
       4: ishr
       5: sipush        255
       8: iand
       9: i2b
      10: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      13: pop
      14: aload_0
      15: iload_1
      16: sipush        255
      19: iand
      20: i2b
      21: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      24: pop
      25: return

  private static void putString(java.nio.ByteBuffer, java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method java/lang/String.length:()I
       4: istore_2
       5: aload_0
       6: iload_2
       7: invokestatic  #13                 // Method putInt:(Ljava/nio/ByteBuffer;I)V
      10: iconst_0
      11: istore_3
      12: iload_3
      13: iload_2
      14: if_icmpge     34
      17: aload_0
      18: aload_1
      19: iload_3
      20: invokevirtual #14                 // Method java/lang/String.charAt:(I)C
      23: i2b
      24: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      27: pop
      28: iinc          3, 1
      31: goto          12
      34: aload_0
      35: iconst_0
      36: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      39: pop
      40: return

  private void putHttpString(java.nio.ByteBuffer, io.undertow.util.HttpString);
    Code:
       0: aload_2
       1: invokevirtual #15                 // Method io/undertow/util/HttpString.length:()I
       4: istore_3
       5: aload_1
       6: iload_3
       7: invokestatic  #13                 // Method putInt:(Ljava/nio/ByteBuffer;I)V
      10: aload_2
      11: aload_1
      12: invokevirtual #16                 // Method io/undertow/util/HttpString.appendTo:(Ljava/nio/ByteBuffer;)V
      15: aload_1
      16: iconst_0
      17: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      20: pop
      21: return

  private void processAJPHeader();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: istore_1
       5: iload_1
       6: iconst_1
       7: invokestatic  #17                 // Method org/xnio/Bits.anyAreSet:(II)Z
      10: ifeq          631
      13: aconst_null
      14: astore_2
      15: aload_0
      16: getfield      #8                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      19: invokestatic  #18                 // Method io/undertow/server/Connectors.flattenCookies:(Lio/undertow/server/HttpServerExchange;)V
      22: aload_0
      23: getfield      #7                  // Field pool:Lio/undertow/connector/ByteBufferPool;
      26: invokeinterface #19,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      31: astore_3
      32: aload_3
      33: invokeinterface #20,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      38: astore        4
      40: aload         4
      42: bipush        65
      44: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      47: pop
      48: aload         4
      50: bipush        66
      52: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      55: pop
      56: aload         4
      58: iconst_0
      59: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      62: pop
      63: aload         4
      65: iconst_0
      66: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      69: pop
      70: aload         4
      72: iconst_4
      73: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      76: pop
      77: aload         4
      79: aload_0
      80: getfield      #8                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      83: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.getStatusCode:()I
      86: invokestatic  #13                 // Method putInt:(Ljava/nio/ByteBuffer;I)V
      89: aload_0
      90: getfield      #8                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      93: invokevirtual #22                 // Method io/undertow/server/HttpServerExchange.getReasonPhrase:()Ljava/lang/String;
      96: astore        5
      98: aload         5
     100: ifnonnull     115
     103: aload_0
     104: getfield      #8                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     107: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.getStatusCode:()I
     110: invokestatic  #23                 // Method io/undertow/util/StatusCodes.getReason:(I)Ljava/lang/String;
     113: astore        5
     115: aload         5
     117: invokevirtual #12                 // Method java/lang/String.length:()I
     120: iconst_4
     121: iadd
     122: aload         4
     124: invokevirtual #24                 // Method java/nio/ByteBuffer.remaining:()I
     127: if_icmple     147
     130: aload_3
     131: invokeinterface #25,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     136: getstatic     #26                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     139: aload         5
     141: invokeinterface #27,  2           // InterfaceMethod io/undertow/UndertowMessages.reasonPhraseToLargeForBuffer:(Ljava/lang/String;)Ljava/lang/IllegalStateException;
     146: athrow
     147: aload         4
     149: aload         5
     151: invokestatic  #28                 // Method putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     154: iconst_0
     155: istore        6
     157: aload_0
     158: getfield      #8                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     161: invokevirtual #29                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
     164: astore        7
     166: aload         7
     168: invokevirtual #30                 // Method io/undertow/util/HeaderMap.getHeaderNames:()Ljava/util/Collection;
     171: invokeinterface #31,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     176: astore        8
     178: aload         8
     180: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     185: ifeq          218
     188: aload         8
     190: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     195: checkcast     #34                 // class io/undertow/util/HttpString
     198: astore        9
     200: iload         6
     202: aload         7
     204: aload         9
     206: invokevirtual #35                 // Method io/undertow/util/HeaderMap.get:(Lio/undertow/util/HttpString;)Lio/undertow/util/HeaderValues;
     209: invokevirtual #36                 // Method io/undertow/util/HeaderValues.size:()I
     212: iadd
     213: istore        6
     215: goto          178
     218: aload         4
     220: iload         6
     222: invokestatic  #13                 // Method putInt:(Ljava/nio/ByteBuffer;I)V
     225: aload         7
     227: invokevirtual #30                 // Method io/undertow/util/HeaderMap.getHeaderNames:()Ljava/util/Collection;
     230: invokeinterface #31,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     235: astore        8
     237: aload         8
     239: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     244: ifeq          439
     247: aload         8
     249: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     254: checkcast     #34                 // class io/undertow/util/HttpString
     257: astore        9
     259: aload         7
     261: aload         9
     263: invokevirtual #35                 // Method io/undertow/util/HeaderMap.get:(Lio/undertow/util/HttpString;)Lio/undertow/util/HeaderValues;
     266: invokevirtual #37                 // Method io/undertow/util/HeaderValues.iterator:()Ljava/util/Iterator;
     269: astore        10
     271: aload         10
     273: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     278: ifeq          436
     281: aload         10
     283: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     288: checkcast     #38                 // class java/lang/String
     291: astore        11
     293: aload         4
     295: invokevirtual #24                 // Method java/nio/ByteBuffer.remaining:()I
     298: aload         9
     300: invokevirtual #15                 // Method io/undertow/util/HttpString.length:()I
     303: aload         11
     305: invokevirtual #12                 // Method java/lang/String.length:()I
     308: iadd
     309: bipush        6
     311: iadd
     312: if_icmpge     385
     315: aload         4
     317: invokevirtual #39                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     320: pop
     321: aload_2
     322: ifnonnull     337
     325: iconst_2
     326: anewarray     #40                 // class io/undertow/connector/PooledByteBuffer
     329: astore_2
     330: aload_2
     331: iconst_0
     332: aload_3
     333: aastore
     334: goto          360
     337: aload_2
     338: astore        12
     340: aload         12
     342: arraylength
     343: iconst_1
     344: iadd
     345: anewarray     #40                 // class io/undertow/connector/PooledByteBuffer
     348: astore_2
     349: aload         12
     351: iconst_0
     352: aload_2
     353: iconst_0
     354: aload         12
     356: arraylength
     357: invokestatic  #41                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     360: aload_0
     361: getfield      #7                  // Field pool:Lio/undertow/connector/ByteBufferPool;
     364: invokeinterface #19,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     369: astore_3
     370: aload_2
     371: aload_2
     372: arraylength
     373: iconst_1
     374: isub
     375: aload_3
     376: aastore
     377: aload_3
     378: invokeinterface #20,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     383: astore        4
     385: getstatic     #42                 // Field HEADER_MAP:Ljava/util/Map;
     388: aload         9
     390: invokeinterface #43,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     395: checkcast     #44                 // class java/lang/Integer
     398: astore        12
     400: aload         12
     402: ifnull        418
     405: aload         4
     407: aload         12
     409: invokevirtual #45                 // Method java/lang/Integer.intValue:()I
     412: invokestatic  #13                 // Method putInt:(Ljava/nio/ByteBuffer;I)V
     415: goto          426
     418: aload_0
     419: aload         4
     421: aload         9
     423: invokespecial #46                 // Method putHttpString:(Ljava/nio/ByteBuffer;Lio/undertow/util/HttpString;)V
     426: aload         4
     428: aload         11
     430: invokestatic  #28                 // Method putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     433: goto          271
     436: goto          237
     439: aload_2
     440: ifnonnull     514
     443: aload         4
     445: invokevirtual #47                 // Method java/nio/ByteBuffer.position:()I
     448: iconst_4
     449: isub
     450: istore        8
     452: aload         4
     454: iconst_2
     455: iload         8
     457: bipush        8
     459: ishr
     460: sipush        255
     463: iand
     464: i2b
     465: invokevirtual #48                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     468: pop
     469: aload         4
     471: iconst_3
     472: iload         8
     474: sipush        255
     477: iand
     478: i2b
     479: invokevirtual #48                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     482: pop
     483: aload         4
     485: invokevirtual #39                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     488: pop
     489: aload_0
     490: new           #49                 // class io/undertow/conduits/AbstractFramedStreamSinkConduit$PooledBufferFrameCallback
     493: dup
     494: aload_0
     495: aload_3
     496: invokespecial #50                 // Method io/undertow/conduits/AbstractFramedStreamSinkConduit$PooledBufferFrameCallback."<init>":(Lio/undertow/conduits/AbstractFramedStreamSinkConduit;Lio/undertow/connector/PooledByteBuffer;)V
     499: iconst_1
     500: anewarray     #51                 // class java/nio/ByteBuffer
     503: dup
     504: iconst_0
     505: aload         4
     507: aastore
     508: invokevirtual #52                 // Method queueFrame:(Lio/undertow/conduits/AbstractFramedStreamSinkConduit$FrameCallBack;[Ljava/nio/ByteBuffer;)V
     511: goto          620
     514: aload_2
     515: arraylength
     516: anewarray     #51                 // class java/nio/ByteBuffer
     519: astore        8
     521: iconst_0
     522: istore        9
     524: iload         9
     526: aload         8
     528: arraylength
     529: if_icmpge     552
     532: aload         8
     534: iload         9
     536: aload_2
     537: iload         9
     539: aaload
     540: invokeinterface #20,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     545: aastore
     546: iinc          9, 1
     549: goto          524
     552: aload         8
     554: invokestatic  #53                 // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
     557: ldc2_w        #54                 // long 4l
     560: lsub
     561: l2i
     562: istore        9
     564: aload         8
     566: iconst_0
     567: aaload
     568: iconst_2
     569: iload         9
     571: bipush        8
     573: ishr
     574: sipush        255
     577: iand
     578: i2b
     579: invokevirtual #48                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     582: pop
     583: aload         8
     585: iconst_0
     586: aaload
     587: iconst_3
     588: iload         9
     590: sipush        255
     593: iand
     594: i2b
     595: invokevirtual #48                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     598: pop
     599: aload         4
     601: invokevirtual #39                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     604: pop
     605: aload_0
     606: new           #56                 // class io/undertow/conduits/AbstractFramedStreamSinkConduit$PooledBuffersFrameCallback
     609: dup
     610: aload_0
     611: aload_2
     612: invokespecial #57                 // Method io/undertow/conduits/AbstractFramedStreamSinkConduit$PooledBuffersFrameCallback."<init>":(Lio/undertow/conduits/AbstractFramedStreamSinkConduit;[Lio/undertow/connector/PooledByteBuffer;)V
     615: aload         8
     617: invokevirtual #52                 // Method queueFrame:(Lio/undertow/conduits/AbstractFramedStreamSinkConduit$FrameCallBack;[Ljava/nio/ByteBuffer;)V
     620: aload_0
     621: dup
     622: getfield      #4                  // Field state:I
     625: bipush        -2
     627: iand
     628: putfield      #4                  // Field state:I
     631: return

  protected void queueCloseFrames();
    Code:
       0: aload_0
       1: invokespecial #58                 // Method processAJPHeader:()V
       4: aload_0
       5: getfield      #8                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       8: invokevirtual #59                 // Method io/undertow/server/HttpServerExchange.isPersistent:()Z
      11: ifeq          23
      14: getstatic     #60                 // Field CLOSE_FRAME_PERSISTENT:Ljava/nio/ByteBuffer;
      17: invokevirtual #61                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      20: goto          29
      23: getstatic     #62                 // Field CLOSE_FRAME_NON_PERSISTENT:Ljava/nio/ByteBuffer;
      26: invokevirtual #61                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      29: astore_1
      30: aload_0
      31: aconst_null
      32: iconst_1
      33: anewarray     #51                 // class java/nio/ByteBuffer
      36: dup
      37: iconst_0
      38: aload_1
      39: aastore
      40: invokevirtual #52                 // Method queueFrame:(Lio/undertow/conduits/AbstractFramedStreamSinkConduit$FrameCallBack;[Ljava/nio/ByteBuffer;)V
      43: return

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method queuedDataLength:()J
       4: lconst_0
       5: lcmp
       6: ifle          18
       9: aload_0
      10: invokevirtual #2                  // Method flushQueuedData:()Z
      13: ifne          18
      16: iconst_0
      17: ireturn
      18: aload_0
      19: invokespecial #58                 // Method processAJPHeader:()V
      22: aload_0
      23: getfield      #10                 // Field headRequest:Z
      26: ifeq          47
      29: aload_1
      30: invokevirtual #24                 // Method java/nio/ByteBuffer.remaining:()I
      33: istore_2
      34: aload_1
      35: aload_1
      36: invokevirtual #47                 // Method java/nio/ByteBuffer.position:()I
      39: iload_2
      40: iadd
      41: invokevirtual #64                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      44: pop
      45: iload_2
      46: ireturn
      47: aload_1
      48: invokevirtual #65                 // Method java/nio/ByteBuffer.limit:()I
      51: istore_2
      52: aload_0
      53: getfield      #8                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      56: invokevirtual #66                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      59: invokevirtual #67                 // Method io/undertow/server/ServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
      62: getstatic     #68                 // Field io/undertow/UndertowOptions.MAX_AJP_PACKET_SIZE:Lorg/xnio/Option;
      65: sipush        8192
      68: invokevirtual #69                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      71: bipush        8
      73: isub
      74: istore_3
      75: aload_1
      76: invokevirtual #24                 // Method java/nio/ByteBuffer.remaining:()I
      79: iload_3
      80: if_icmple     94
      83: aload_1
      84: aload_1
      85: invokevirtual #47                 // Method java/nio/ByteBuffer.position:()I
      88: iload_3
      89: iadd
      90: invokevirtual #70                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      93: pop
      94: aload_1
      95: invokevirtual #24                 // Method java/nio/ByteBuffer.remaining:()I
      98: istore        4
     100: aload_0
     101: aload_1
     102: invokespecial #71                 // Method createHeader:(Ljava/nio/ByteBuffer;)[Ljava/nio/ByteBuffer;
     105: astore        5
     107: iconst_0
     108: istore        6
     110: aload         5
     112: astore        7
     114: aload         7
     116: arraylength
     117: istore        8
     119: iconst_0
     120: istore        9
     122: iload         9
     124: iload         8
     126: if_icmpge     152
     129: aload         7
     131: iload         9
     133: aaload
     134: astore        10
     136: iload         6
     138: aload         10
     140: invokevirtual #24                 // Method java/nio/ByteBuffer.remaining:()I
     143: iadd
     144: istore        6
     146: iinc          9, 1
     149: goto          122
     152: iload         4
     154: istore        7
     156: lconst_0
     157: lstore        8
     159: aload_0
     160: aload         5
     162: iconst_0
     163: aload         5
     165: arraylength
     166: invokespecial #72                 // Method io/undertow/conduits/AbstractFramedStreamSinkConduit.write:([Ljava/nio/ByteBuffer;II)J
     169: lstore        8
     171: iload         6
     173: i2l
     174: lload         8
     176: lsub
     177: l2i
     178: istore        6
     180: lload         8
     182: ldc2_w        #73                 // long -1l
     185: lcmp
     186: ifne          197
     189: new           #75                 // class java/nio/channels/ClosedChannelException
     192: dup
     193: invokespecial #76                 // Method java/nio/channels/ClosedChannelException."<init>":()V
     196: athrow
     197: lload         8
     199: lconst_0
     200: lcmp
     201: ifne          310
     204: aload_0
     205: getfield      #7                  // Field pool:Lio/undertow/connector/ByteBufferPool;
     208: invokeinterface #19,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     213: astore        10
     215: aload_1
     216: invokevirtual #77                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     219: ifeq          237
     222: aload         10
     224: invokeinterface #20,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     229: aload_1
     230: invokevirtual #78                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     233: pop
     234: goto          215
     237: aload         10
     239: invokeinterface #20,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     244: invokevirtual #39                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     247: pop
     248: iconst_3
     249: anewarray     #51                 // class java/nio/ByteBuffer
     252: astore        11
     254: aload         11
     256: iconst_0
     257: aload         5
     259: iconst_0
     260: aaload
     261: aastore
     262: aload         11
     264: iconst_1
     265: aload         10
     267: invokeinterface #20,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     272: aastore
     273: aload         11
     275: iconst_2
     276: aload         5
     278: iconst_2
     279: aaload
     280: aastore
     281: aload_0
     282: new           #49                 // class io/undertow/conduits/AbstractFramedStreamSinkConduit$PooledBufferFrameCallback
     285: dup
     286: aload_0
     287: aload         10
     289: invokespecial #50                 // Method io/undertow/conduits/AbstractFramedStreamSinkConduit$PooledBufferFrameCallback."<init>":(Lio/undertow/conduits/AbstractFramedStreamSinkConduit;Lio/undertow/connector/PooledByteBuffer;)V
     292: aload         11
     294: invokevirtual #52                 // Method queueFrame:(Lio/undertow/conduits/AbstractFramedStreamSinkConduit$FrameCallBack;[Ljava/nio/ByteBuffer;)V
     297: iload         7
     299: istore        12
     301: aload_1
     302: iload_2
     303: invokevirtual #70                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     306: pop
     307: iload         12
     309: ireturn
     310: iload         6
     312: ifgt          159
     315: iload         7
     317: istore        10
     319: aload_1
     320: iload_2
     321: invokevirtual #70                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     324: pop
     325: iload         10
     327: ireturn
     328: astore_3
     329: aload_0
     330: getfield      #8                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     333: invokevirtual #66                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     336: invokestatic  #81                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     339: aload_3
     340: athrow
     341: astore        13
     343: aload_1
     344: iload_2
     345: invokevirtual #70                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     348: pop
     349: aload         13
     351: athrow
    Exception table:
       from    to  target type
          52   301   328   Class java/io/IOException
          52   301   328   Class java/lang/RuntimeException
         310   319   328   Class java/io/IOException
         310   319   328   Class java/lang/RuntimeException
          52   301   341   any
         310   319   341   any
         328   343   341   any

  private java.nio.ByteBuffer[] createHeader(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #24                 // Method java/nio/ByteBuffer.remaining:()I
       4: istore_2
       5: iload_2
       6: iconst_4
       7: iadd
       8: istore_3
       9: bipush        7
      11: newarray       byte
      13: astore        4
      15: aload         4
      17: iconst_0
      18: bipush        65
      20: bastore
      21: aload         4
      23: iconst_1
      24: bipush        66
      26: bastore
      27: aload         4
      29: iconst_2
      30: iload_3
      31: bipush        8
      33: ishr
      34: sipush        255
      37: iand
      38: i2b
      39: bastore
      40: aload         4
      42: iconst_3
      43: iload_3
      44: sipush        255
      47: iand
      48: i2b
      49: bastore
      50: aload         4
      52: iconst_4
      53: iconst_3
      54: bastore
      55: aload         4
      57: iconst_5
      58: iload_2
      59: bipush        8
      61: ishr
      62: sipush        255
      65: iand
      66: i2b
      67: bastore
      68: aload         4
      70: bipush        6
      72: iload_2
      73: sipush        255
      76: iand
      77: i2b
      78: bastore
      79: iconst_1
      80: newarray       byte
      82: astore        5
      84: aload         5
      86: iconst_0
      87: iconst_0
      88: bastore
      89: iconst_3
      90: anewarray     #51                 // class java/nio/ByteBuffer
      93: astore        6
      95: aload         6
      97: iconst_0
      98: aload         4
     100: invokestatic  #82                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     103: aastore
     104: aload         6
     106: iconst_1
     107: aload_1
     108: aastore
     109: aload         6
     111: iconst_2
     112: aload         5
     114: invokestatic  #82                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     117: aastore
     118: aload         6
     120: areturn

  public long write(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #83                 // Method write:([Ljava/nio/ByteBuffer;II)J
       8: lreturn

  public long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: lconst_0
       1: lstore        4
       3: iload_2
       4: istore        6
       6: iload         6
       8: iload_2
       9: iload_3
      10: iadd
      11: if_icmpge     59
      14: aload_1
      15: iload         6
      17: aaload
      18: invokevirtual #77                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      21: ifeq          53
      24: aload_0
      25: aload_1
      26: iload         6
      28: aaload
      29: invokevirtual #84                 // Method write:(Ljava/nio/ByteBuffer;)I
      32: istore        7
      34: iload         7
      36: ifne          42
      39: lload         4
      41: lreturn
      42: lload         4
      44: iload         7
      46: i2l
      47: ladd
      48: lstore        4
      50: goto          14
      53: iinc          6, 1
      56: goto          6
      59: lload         4
      61: lreturn

  public long transferFrom(java.nio.channels.FileChannel, long, long) throws java.io.IOException;
    Code:
       0: aload_1
       1: lload_2
       2: lload         4
       4: new           #85                 // class org/xnio/conduits/ConduitWritableByteChannel
       7: dup
       8: aload_0
       9: invokespecial #86                 // Method org/xnio/conduits/ConduitWritableByteChannel."<init>":(Lorg/xnio/conduits/StreamSinkConduit;)V
      12: invokevirtual #87                 // Method java/nio/channels/FileChannel.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J
      15: lreturn

  public long transferFrom(org.xnio.channels.StreamSourceChannel, long, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: lload_2
       2: aload         4
       4: new           #85                 // class org/xnio/conduits/ConduitWritableByteChannel
       7: dup
       8: aload_0
       9: invokespecial #86                 // Method org/xnio/conduits/ConduitWritableByteChannel."<init>":(Lorg/xnio/conduits/StreamSinkConduit;)V
      12: invokestatic  #88                 // Method org/xnio/IoUtils.transfer:(Ljava/nio/channels/ReadableByteChannel;JLjava/nio/ByteBuffer;Ljava/nio/channels/WritableByteChannel;)J
      15: lreturn

  protected void finished();
    Code:
       0: aload_0
       1: getfield      #9                  // Field finishListener:Lio/undertow/conduits/ConduitListener;
       4: ifnull        17
       7: aload_0
       8: getfield      #9                  // Field finishListener:Lio/undertow/conduits/ConduitListener;
      11: aload_0
      12: invokeinterface #89,  2           // InterfaceMethod io/undertow/conduits/ConduitListener.handleEvent:(Lorg/xnio/conduits/Conduit;)V
      17: return

  public void setWriteReadyHandler(org.xnio.conduits.WriteReadyHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field next:Lorg/xnio/conduits/Conduit;
       4: checkcast     #90                 // class org/xnio/conduits/StreamSinkConduit
       7: new           #91                 // class io/undertow/server/protocol/ajp/AjpServerResponseConduit$AjpServerWriteReadyHandler
      10: dup
      11: aload_0
      12: aload_1
      13: aconst_null
      14: invokespecial #92                 // Method io/undertow/server/protocol/ajp/AjpServerResponseConduit$AjpServerWriteReadyHandler."<init>":(Lio/undertow/server/protocol/ajp/AjpServerResponseConduit;Lorg/xnio/conduits/WriteReadyHandler;Lio/undertow/server/protocol/ajp/AjpServerResponseConduit$1;)V
      17: invokeinterface #93,  2           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.setWriteReadyHandler:(Lorg/xnio/conduits/WriteReadyHandler;)V
      22: return

  public void suspendWrites();
    Code:
       0: getstatic     #1                  // Field log:Lorg/jboss/logging/Logger;
       3: ldc           #94                 // String suspend
       5: invokevirtual #95                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
       8: aload_0
       9: dup
      10: getfield      #4                  // Field state:I
      13: bipush        -5
      15: iand
      16: putfield      #4                  // Field state:I
      19: aload_0
      20: getfield      #4                  // Field state:I
      23: bipush        8
      25: invokestatic  #96                 // Method org/xnio/Bits.allAreClear:(II)Z
      28: ifeq          43
      31: aload_0
      32: getfield      #3                  // Field next:Lorg/xnio/conduits/Conduit;
      35: checkcast     #90                 // class org/xnio/conduits/StreamSinkConduit
      38: invokeinterface #97,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.suspendWrites:()V
      43: return

  public void resumeWrites();
    Code:
       0: getstatic     #1                  // Field log:Lorg/jboss/logging/Logger;
       3: ldc           #98                 // String resume
       5: invokevirtual #95                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
       8: aload_0
       9: dup
      10: getfield      #4                  // Field state:I
      13: iconst_4
      14: ior
      15: putfield      #4                  // Field state:I
      18: aload_0
      19: getfield      #3                  // Field next:Lorg/xnio/conduits/Conduit;
      22: checkcast     #90                 // class org/xnio/conduits/StreamSinkConduit
      25: invokeinterface #99,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.resumeWrites:()V
      30: return

  public boolean flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #58                 // Method processAJPHeader:()V
       4: aload_0
       5: getfield      #4                  // Field state:I
       8: bipush        64
      10: invokestatic  #96                 // Method org/xnio/Bits.allAreClear:(II)Z
      13: ifeq          59
      16: aload_0
      17: invokevirtual #100                // Method isWritesTerminated:()Z
      20: ifne          59
      23: aload_0
      24: new           #101                // class io/undertow/server/protocol/ajp/AjpServerResponseConduit$1
      27: dup
      28: aload_0
      29: invokespecial #102                // Method io/undertow/server/protocol/ajp/AjpServerResponseConduit$1."<init>":(Lio/undertow/server/protocol/ajp/AjpServerResponseConduit;)V
      32: iconst_1
      33: anewarray     #51                 // class java/nio/ByteBuffer
      36: dup
      37: iconst_0
      38: getstatic     #103                // Field FLUSH_PACKET:Ljava/nio/ByteBuffer;
      41: invokevirtual #61                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      44: aastore
      45: invokevirtual #52                 // Method queueFrame:(Lio/undertow/conduits/AbstractFramedStreamSinkConduit$FrameCallBack;[Ljava/nio/ByteBuffer;)V
      48: aload_0
      49: dup
      50: getfield      #4                  // Field state:I
      53: bipush        64
      55: ior
      56: putfield      #4                  // Field state:I
      59: aload_0
      60: invokevirtual #2                  // Method flushQueuedData:()Z
      63: ireturn

  public boolean isWriteResumed();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: iconst_4
       5: invokestatic  #17                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ireturn

  public void wakeupWrites();
    Code:
       0: getstatic     #1                  // Field log:Lorg/jboss/logging/Logger;
       3: ldc           #104                // String wakeup
       5: invokevirtual #95                 // Method org/jboss/logging/Logger.trace:(Ljava/lang/Object;)V
       8: aload_0
       9: dup
      10: getfield      #4                  // Field state:I
      13: iconst_4
      14: ior
      15: putfield      #4                  // Field state:I
      18: aload_0
      19: getfield      #3                  // Field next:Lorg/xnio/conduits/Conduit;
      22: checkcast     #90                 // class org/xnio/conduits/StreamSinkConduit
      25: invokeinterface #105,  1          // InterfaceMethod org/xnio/conduits/StreamSinkConduit.wakeupWrites:()V
      30: return

  protected void doTerminateWrites() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #59                 // Method io/undertow/server/HttpServerExchange.isPersistent:()Z
       7: ifne          22
      10: aload_0
      11: getfield      #3                  // Field next:Lorg/xnio/conduits/Conduit;
      14: checkcast     #90                 // class org/xnio/conduits/StreamSinkConduit
      17: invokeinterface #106,  1          // InterfaceMethod org/xnio/conduits/StreamSinkConduit.terminateWrites:()V
      22: aload_0
      23: dup
      24: getfield      #4                  // Field state:I
      27: bipush        16
      29: ior
      30: putfield      #4                  // Field state:I
      33: goto          49
      36: astore_1
      37: aload_0
      38: getfield      #8                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      41: invokevirtual #66                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      44: invokestatic  #81                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      47: aload_1
      48: athrow
      49: return
    Exception table:
       from    to  target type
           0    33    36   Class java/io/IOException
           0    33    36   Class java/lang/RuntimeException

  public boolean isWriteShutdown();
    Code:
       0: aload_0
       1: invokespecial #107                // Method io/undertow/conduits/AbstractFramedStreamSinkConduit.isWriteShutdown:()Z
       4: ifne          19
       7: aload_0
       8: getfield      #4                  // Field state:I
      11: bipush        16
      13: invokestatic  #17                 // Method org/xnio/Bits.anyAreSet:(II)Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  boolean doGetRequestBodyChunk(java.nio.ByteBuffer, io.undertow.server.protocol.ajp.AjpServerRequestConduit) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #108                // Method isWriteShutdown:()Z
       4: ifeq          16
       7: getstatic     #26                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #109,  1          // InterfaceMethod io/undertow/UndertowMessages.channelIsClosed:()Ljava/nio/channels/ClosedChannelException;
      15: athrow
      16: aload_0
      17: aload_1
      18: invokespecial #110                // Method io/undertow/conduits/AbstractFramedStreamSinkConduit.write:(Ljava/nio/ByteBuffer;)I
      21: pop
      22: aload_1
      23: invokevirtual #77                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      26: ifeq          75
      29: aload_0
      30: dup
      31: getfield      #4                  // Field state:I
      34: bipush        8
      36: ior
      37: putfield      #4                  // Field state:I
      40: aload_0
      41: new           #111                // class io/undertow/server/protocol/ajp/AjpServerResponseConduit$2
      44: dup
      45: aload_0
      46: aload_2
      47: invokespecial #112                // Method io/undertow/server/protocol/ajp/AjpServerResponseConduit$2."<init>":(Lio/undertow/server/protocol/ajp/AjpServerResponseConduit;Lio/undertow/server/protocol/ajp/AjpServerRequestConduit;)V
      50: iconst_1
      51: anewarray     #51                 // class java/nio/ByteBuffer
      54: dup
      55: iconst_0
      56: aload_1
      57: aastore
      58: invokevirtual #52                 // Method queueFrame:(Lio/undertow/conduits/AbstractFramedStreamSinkConduit$FrameCallBack;[Ljava/nio/ByteBuffer;)V
      61: aload_0
      62: getfield      #3                  // Field next:Lorg/xnio/conduits/Conduit;
      65: checkcast     #90                 // class org/xnio/conduits/StreamSinkConduit
      68: invokeinterface #99,  1           // InterfaceMethod org/xnio/conduits/StreamSinkConduit.resumeWrites:()V
      73: iconst_0
      74: ireturn
      75: iconst_1
      76: ireturn

  static int access$100(io.undertow.server.protocol.ajp.AjpServerResponseConduit);
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: ireturn

  static int access$102(io.undertow.server.protocol.ajp.AjpServerResponseConduit, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #4                  // Field state:I
       6: ireturn

  static org.xnio.conduits.Conduit access$200(io.undertow.server.protocol.ajp.AjpServerResponseConduit);
    Code:
       0: aload_0
       1: getfield      #3                  // Field next:Lorg/xnio/conduits/Conduit;
       4: areturn

  static boolean access$300(io.undertow.server.protocol.ajp.AjpServerResponseConduit) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method flushQueuedData:()Z
       4: ireturn

  static org.jboss.logging.Logger access$400();
    Code:
       0: getstatic     #1                  // Field log:Lorg/jboss/logging/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #113                // String io.undertow.server.channel.ajp.response
       2: invokestatic  #114                // Method org/jboss/logging/Logger.getLogger:(Ljava/lang/String;)Lorg/jboss/logging/Logger;
       5: putstatic     #1                  // Field log:Lorg/jboss/logging/Logger;
       8: bipush        8
      10: invokestatic  #115                // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      13: putstatic     #103                // Field FLUSH_PACKET:Ljava/nio/ByteBuffer;
      16: new           #116                // class java/util/HashMap
      19: dup
      20: invokespecial #117                // Method java/util/HashMap."<init>":()V
      23: astore_0
      24: aload_0
      25: getstatic     #118                // Field io/undertow/util/Headers.CONTENT_TYPE:Lio/undertow/util/HttpString;
      28: ldc           #119                // int 40961
      30: invokestatic  #120                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: invokeinterface #121,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: aload_0
      40: getstatic     #122                // Field io/undertow/util/Headers.CONTENT_LANGUAGE:Lio/undertow/util/HttpString;
      43: ldc           #123                // int 40962
      45: invokestatic  #120                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      48: invokeinterface #121,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: aload_0
      55: getstatic     #124                // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      58: ldc           #125                // int 40963
      60: invokestatic  #120                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      63: invokeinterface #121,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: aload_0
      70: getstatic     #126                // Field io/undertow/util/Headers.DATE:Lio/undertow/util/HttpString;
      73: ldc           #127                // int 40964
      75: invokestatic  #120                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      78: invokeinterface #121,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: pop
      84: aload_0
      85: getstatic     #128                // Field io/undertow/util/Headers.LAST_MODIFIED:Lio/undertow/util/HttpString;
      88: ldc           #129                // int 40965
      90: invokestatic  #120                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      93: invokeinterface #121,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      98: pop
      99: aload_0
     100: getstatic     #130                // Field io/undertow/util/Headers.LOCATION:Lio/undertow/util/HttpString;
     103: ldc           #131                // int 40966
     105: invokestatic  #120                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     108: invokeinterface #121,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     113: pop
     114: aload_0
     115: getstatic     #132                // Field io/undertow/util/Headers.SET_COOKIE:Lio/undertow/util/HttpString;
     118: ldc           #133                // int 40967
     120: invokestatic  #120                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     123: invokeinterface #121,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     128: pop
     129: aload_0
     130: getstatic     #134                // Field io/undertow/util/Headers.SET_COOKIE2:Lio/undertow/util/HttpString;
     133: ldc           #135                // int 40968
     135: invokestatic  #120                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     138: invokeinterface #121,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     143: pop
     144: aload_0
     145: getstatic     #136                // Field io/undertow/util/Headers.SERVLET_ENGINE:Lio/undertow/util/HttpString;
     148: ldc           #137                // int 40969
     150: invokestatic  #120                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     153: invokeinterface #121,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     158: pop
     159: aload_0
     160: getstatic     #138                // Field io/undertow/util/Headers.STATUS:Lio/undertow/util/HttpString;
     163: ldc           #139                // int 40970
     165: invokestatic  #120                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     168: invokeinterface #121,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     173: pop
     174: aload_0
     175: getstatic     #140                // Field io/undertow/util/Headers.WWW_AUTHENTICATE:Lio/undertow/util/HttpString;
     178: ldc           #141                // int 40971
     180: invokestatic  #120                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     183: invokeinterface #121,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     188: pop
     189: aload_0
     190: invokestatic  #142                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     193: putstatic     #42                 // Field HEADER_MAP:Ljava/util/Map;
     196: getstatic     #103                // Field FLUSH_PACKET:Ljava/nio/ByteBuffer;
     199: bipush        65
     201: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     204: pop
     205: getstatic     #103                // Field FLUSH_PACKET:Ljava/nio/ByteBuffer;
     208: bipush        66
     210: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     213: pop
     214: getstatic     #103                // Field FLUSH_PACKET:Ljava/nio/ByteBuffer;
     217: iconst_0
     218: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     221: pop
     222: getstatic     #103                // Field FLUSH_PACKET:Ljava/nio/ByteBuffer;
     225: iconst_4
     226: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     229: pop
     230: getstatic     #103                // Field FLUSH_PACKET:Ljava/nio/ByteBuffer;
     233: iconst_3
     234: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     237: pop
     238: getstatic     #103                // Field FLUSH_PACKET:Ljava/nio/ByteBuffer;
     241: iconst_0
     242: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     245: pop
     246: getstatic     #103                // Field FLUSH_PACKET:Ljava/nio/ByteBuffer;
     249: iconst_0
     250: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     253: pop
     254: getstatic     #103                // Field FLUSH_PACKET:Ljava/nio/ByteBuffer;
     257: iconst_0
     258: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     261: pop
     262: getstatic     #103                // Field FLUSH_PACKET:Ljava/nio/ByteBuffer;
     265: invokevirtual #39                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     268: pop
     269: bipush        6
     271: newarray       byte
     273: invokestatic  #82                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     276: astore_0
     277: aload_0
     278: bipush        65
     280: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     283: pop
     284: aload_0
     285: bipush        66
     287: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     290: pop
     291: aload_0
     292: iconst_0
     293: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     296: pop
     297: aload_0
     298: iconst_2
     299: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     302: pop
     303: aload_0
     304: iconst_5
     305: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     308: pop
     309: aload_0
     310: iconst_1
     311: invokevirtual #11                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     314: pop
     315: aload_0
     316: invokevirtual #39                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     319: pop
     320: aload_0
     321: putstatic     #60                 // Field CLOSE_FRAME_PERSISTENT:Ljava/nio/ByteBuffer;
     324: bipush        6
     326: newarray       byte
     328: invokestatic  #82                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
     331: astore_0
     332: aload_0
     333: getstatic     #60                 // Field CLOSE_FRAME_PERSISTENT:Ljava/nio/ByteBuffer;
     336: invokevirtual #61                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
     339: invokevirtual #78                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     342: pop
     343: aload_0
     344: iconst_5
     345: iconst_0
     346: invokevirtual #48                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     349: pop
     350: aload_0
     351: invokevirtual #39                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     354: pop
     355: aload_0
     356: putstatic     #62                 // Field CLOSE_FRAME_NON_PERSISTENT:Ljava/nio/ByteBuffer;
     359: return
}
