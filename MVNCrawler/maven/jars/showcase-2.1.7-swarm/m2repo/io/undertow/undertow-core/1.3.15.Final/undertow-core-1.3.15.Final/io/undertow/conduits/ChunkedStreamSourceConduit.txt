Compiled from "ChunkedStreamSourceConduit.java"
public class io.undertow.conduits.ChunkedStreamSourceConduit extends org.xnio.conduits.AbstractStreamSourceConduit<org.xnio.conduits.StreamSourceConduit> {
  public static final io.undertow.util.AttachmentKey<io.undertow.util.HeaderMap> TRAILERS;

  private final io.undertow.conduits.ChunkedStreamSourceConduit$BufferWrapper bufferWrapper;

  private final io.undertow.conduits.ConduitListener<? super io.undertow.conduits.ChunkedStreamSourceConduit> finishListener;

  private final io.undertow.server.HttpServerExchange exchange;

  private boolean closed;

  private long remainingAllowed;

  private final io.undertow.conduits.ChunkReader chunkReader;

  public io.undertow.conduits.ChunkedStreamSourceConduit(org.xnio.conduits.StreamSourceConduit, org.xnio.conduits.PushBackStreamSourceConduit, io.undertow.connector.ByteBufferPool, io.undertow.conduits.ConduitListener<? super io.undertow.conduits.ChunkedStreamSourceConduit>, io.undertow.util.Attachable);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class io/undertow/conduits/ChunkedStreamSourceConduit$1
       5: dup
       6: aload_3
       7: aload_2
       8: invokespecial #2                  // Method io/undertow/conduits/ChunkedStreamSourceConduit$1."<init>":(Lio/undertow/connector/ByteBufferPool;Lorg/xnio/conduits/PushBackStreamSourceConduit;)V
      11: aload         4
      13: aload         5
      15: aconst_null
      16: invokespecial #3                  // Method "<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lio/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper;Lio/undertow/conduits/ConduitListener;Lio/undertow/util/Attachable;Lio/undertow/server/HttpServerExchange;)V
      19: return

  public io.undertow.conduits.ChunkedStreamSourceConduit(org.xnio.conduits.StreamSourceConduit, io.undertow.server.HttpServerExchange, io.undertow.conduits.ConduitListener<? super io.undertow.conduits.ChunkedStreamSourceConduit>);
    Code:
       0: aload_0
       1: aload_1
       2: new           #4                  // class io/undertow/conduits/ChunkedStreamSourceConduit$2
       5: dup
       6: aload_2
       7: invokespecial #5                  // Method io/undertow/conduits/ChunkedStreamSourceConduit$2."<init>":(Lio/undertow/server/HttpServerExchange;)V
      10: aload_3
      11: aload_2
      12: aload_2
      13: invokespecial #3                  // Method "<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lio/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper;Lio/undertow/conduits/ConduitListener;Lio/undertow/util/Attachable;Lio/undertow/server/HttpServerExchange;)V
      16: return

  protected io.undertow.conduits.ChunkedStreamSourceConduit(org.xnio.conduits.StreamSourceConduit, io.undertow.conduits.ChunkedStreamSourceConduit$BufferWrapper, io.undertow.conduits.ConduitListener<? super io.undertow.conduits.ChunkedStreamSourceConduit>, io.undertow.util.Attachable, io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method org/xnio/conduits/AbstractStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
       5: aload_0
       6: aload_2
       7: putfield      #7                  // Field bufferWrapper:Lio/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper;
      10: aload_0
      11: aload_3
      12: putfield      #8                  // Field finishListener:Lio/undertow/conduits/ConduitListener;
      15: aload_0
      16: ldc2_w        #10                 // long -9223372036854775808l
      19: putfield      #12                 // Field remainingAllowed:J
      22: aload_0
      23: new           #13                 // class io/undertow/conduits/ChunkReader
      26: dup
      27: aload         4
      29: getstatic     #14                 // Field io/undertow/server/protocol/http/HttpAttachments.REQUEST_TRAILERS:Lio/undertow/util/AttachmentKey;
      32: aload_3
      33: aload_0
      34: invokespecial #15                 // Method io/undertow/conduits/ChunkReader."<init>":(Lio/undertow/util/Attachable;Lio/undertow/util/AttachmentKey;Lio/undertow/conduits/ConduitListener;Lorg/xnio/conduits/Conduit;)V
      37: putfield      #16                 // Field chunkReader:Lio/undertow/conduits/ChunkReader;
      40: aload_0
      41: aload         5
      43: putfield      #17                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      46: return

  public long transferTo(long, long, java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload         5
       2: new           #18                 // class org/xnio/conduits/ConduitReadableByteChannel
       5: dup
       6: aload_0
       7: invokespecial #19                 // Method org/xnio/conduits/ConduitReadableByteChannel."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
      10: lload_1
      11: lload_3
      12: invokevirtual #20                 // Method java/nio/channels/FileChannel.transferFrom:(Ljava/nio/channels/ReadableByteChannel;JJ)J
      15: lreturn
      16: astore        6
      18: aload_0
      19: getfield      #17                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      22: invokevirtual #23                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      25: invokestatic  #24                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      28: aload         6
      30: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException
           0    15    16   Class java/lang/RuntimeException

  private void updateRemainingAllowed(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field remainingAllowed:J
       4: ldc2_w        #10                 // long -9223372036854775808l
       7: lcmp
       8: ifne          39
      11: aload_0
      12: getfield      #17                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      15: ifnonnull     19
      18: return
      19: aload_0
      20: getfield      #17                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      23: invokevirtual #25                 // Method io/undertow/server/HttpServerExchange.getMaxEntitySize:()J
      26: lstore_2
      27: lload_2
      28: lconst_0
      29: lcmp
      30: ifgt          34
      33: return
      34: aload_0
      35: lload_2
      36: putfield      #12                 // Field remainingAllowed:J
      39: aload_0
      40: dup
      41: getfield      #12                 // Field remainingAllowed:J
      44: iload_1
      45: i2l
      46: lsub
      47: putfield      #12                 // Field remainingAllowed:J
      50: aload_0
      51: getfield      #12                 // Field remainingAllowed:J
      54: lconst_0
      55: lcmp
      56: ifge          106
      59: aload_0
      60: getfield      #17                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      63: invokestatic  #26                 // Method io/undertow/server/Connectors.terminateRequest:(Lio/undertow/server/HttpServerExchange;)V
      66: aload_0
      67: iconst_1
      68: putfield      #27                 // Field closed:Z
      71: aload_0
      72: getfield      #17                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      75: iconst_0
      76: invokevirtual #28                 // Method io/undertow/server/HttpServerExchange.setPersistent:(Z)Lio/undertow/server/HttpServerExchange;
      79: pop
      80: aload_0
      81: getfield      #8                  // Field finishListener:Lio/undertow/conduits/ConduitListener;
      84: aload_0
      85: invokeinterface #29,  2           // InterfaceMethod io/undertow/conduits/ConduitListener.handleEvent:(Lorg/xnio/conduits/Conduit;)V
      90: getstatic     #30                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      93: aload_0
      94: getfield      #17                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      97: invokevirtual #25                 // Method io/undertow/server/HttpServerExchange.getMaxEntitySize:()J
     100: invokeinterface #31,  3           // InterfaceMethod io/undertow/UndertowMessages.requestEntityWasTooLarge:(J)Ljava/io/IOException;
     105: athrow
     106: return

  public long transferTo(long, java.nio.ByteBuffer, org.xnio.channels.StreamSinkChannel) throws java.io.IOException;
    Code:
       0: new           #18                 // class org/xnio/conduits/ConduitReadableByteChannel
       3: dup
       4: aload_0
       5: invokespecial #19                 // Method org/xnio/conduits/ConduitReadableByteChannel."<init>":(Lorg/xnio/conduits/StreamSourceConduit;)V
       8: lload_1
       9: aload_3
      10: aload         4
      12: invokestatic  #32                 // Method org/xnio/IoUtils.transfer:(Ljava/nio/channels/ReadableByteChannel;JLjava/nio/ByteBuffer;Ljava/nio/channels/WritableByteChannel;)J
      15: lreturn
      16: astore        5
      18: aload_0
      19: getfield      #17                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      22: invokevirtual #23                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      25: invokestatic  #24                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      28: aload         5
      30: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException
           0    15    16   Class java/lang/RuntimeException

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     35
       9: aload_1
      10: iload         4
      12: aaload
      13: invokevirtual #33                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      16: ifeq          29
      19: aload_0
      20: aload_1
      21: iload         4
      23: aaload
      24: invokevirtual #34                 // Method read:(Ljava/nio/ByteBuffer;)I
      27: i2l
      28: lreturn
      29: iinc          4, 1
      32: goto          3
      35: lconst_0
      36: lreturn

  public void terminateReads() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method isFinished:()Z
       4: ifne          29
       7: aload_0
       8: getfield      #17                 // Field exchange:Lio/undertow/server/HttpServerExchange;
      11: iconst_0
      12: invokevirtual #28                 // Method io/undertow/server/HttpServerExchange.setPersistent:(Z)Lio/undertow/server/HttpServerExchange;
      15: pop
      16: aload_0
      17: invokespecial #36                 // Method org/xnio/conduits/AbstractStreamSourceConduit.terminateReads:()V
      20: getstatic     #30                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      23: invokeinterface #37,  1           // InterfaceMethod io/undertow/UndertowMessages.chunkedChannelClosedMidChunk:()Ljava/io/IOException;
      28: athrow
      29: return

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field chunkReader:Lio/undertow/conduits/ChunkReader;
       4: invokevirtual #38                 // Method io/undertow/conduits/ChunkReader.getChunkRemaining:()J
       7: lstore_2
       8: lload_2
       9: ldc2_w        #39                 // long -1l
      12: lcmp
      13: ifne          18
      16: iconst_m1
      17: ireturn
      18: aload_0
      19: getfield      #27                 // Field closed:Z
      22: ifeq          33
      25: new           #41                 // class java/nio/channels/ClosedChannelException
      28: dup
      29: invokespecial #42                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      32: athrow
      33: aload_0
      34: getfield      #7                  // Field bufferWrapper:Lio/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper;
      37: invokeinterface #43,  1           // InterfaceMethod io/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper.allocate:()Lio/undertow/connector/PooledByteBuffer;
      42: astore        4
      44: aload         4
      46: invokeinterface #44,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      51: astore        5
      53: iconst_1
      54: istore        6
      56: aload_0
      57: getfield      #45                 // Field next:Lorg/xnio/conduits/Conduit;
      60: checkcast     #46                 // class org/xnio/conduits/StreamSourceConduit
      63: aload         5
      65: invokeinterface #47,  2           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.read:(Ljava/nio/ByteBuffer;)I
      70: istore        7
      72: aload         5
      74: invokevirtual #48                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      77: pop
      78: iload         7
      80: iconst_m1
      81: if_icmpne     92
      84: new           #41                 // class java/nio/channels/ClosedChannelException
      87: dup
      88: invokespecial #42                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      91: athrow
      92: iload         7
      94: ifne          151
      97: iconst_0
      98: istore        8
     100: lload_2
     101: lconst_0
     102: lcmp
     103: iflt          114
     106: aload_0
     107: getfield      #16                 // Field chunkReader:Lio/undertow/conduits/ChunkReader;
     110: lload_2
     111: invokevirtual #49                 // Method io/undertow/conduits/ChunkReader.setChunkRemaining:(J)V
     114: iload         6
     116: ifne          141
     119: aload         5
     121: invokevirtual #33                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     124: ifeq          141
     127: aload_0
     128: getfield      #7                  // Field bufferWrapper:Lio/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper;
     131: aload         4
     133: invokeinterface #50,  2           // InterfaceMethod io/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper.pushBack:(Lio/undertow/connector/PooledByteBuffer;)V
     138: goto          148
     141: aload         4
     143: invokeinterface #51,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     148: iload         8
     150: ireturn
     151: lload_2
     152: lconst_0
     153: lcmp
     154: ifne          228
     157: aload_0
     158: getfield      #16                 // Field chunkReader:Lio/undertow/conduits/ChunkReader;
     161: aload         5
     163: invokevirtual #52                 // Method io/undertow/conduits/ChunkReader.readChunk:(Ljava/nio/ByteBuffer;)J
     166: lstore_2
     167: lload_2
     168: lconst_0
     169: lcmp
     170: ifgt          228
     173: lload_2
     174: l2i
     175: istore        8
     177: lload_2
     178: lconst_0
     179: lcmp
     180: iflt          191
     183: aload_0
     184: getfield      #16                 // Field chunkReader:Lio/undertow/conduits/ChunkReader;
     187: lload_2
     188: invokevirtual #49                 // Method io/undertow/conduits/ChunkReader.setChunkRemaining:(J)V
     191: iload         6
     193: ifne          218
     196: aload         5
     198: invokevirtual #33                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     201: ifeq          218
     204: aload_0
     205: getfield      #7                  // Field bufferWrapper:Lio/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper;
     208: aload         4
     210: invokeinterface #50,  2           // InterfaceMethod io/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper.pushBack:(Lio/undertow/connector/PooledByteBuffer;)V
     215: goto          225
     218: aload         4
     220: invokeinterface #51,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     225: iload         8
     227: ireturn
     228: aload_1
     229: invokevirtual #53                 // Method java/nio/ByteBuffer.limit:()I
     232: istore        8
     234: iconst_0
     235: istore        9
     237: aload         5
     239: invokevirtual #54                 // Method java/nio/ByteBuffer.remaining:()I
     242: i2l
     243: lload_2
     244: invokestatic  #55                 // Method java/lang/Math.min:(JJ)J
     247: lstore        10
     249: aload_1
     250: invokevirtual #54                 // Method java/nio/ByteBuffer.remaining:()I
     253: istore        12
     255: lload         10
     257: iload         12
     259: i2l
     260: lcmp
     261: ifle          377
     264: aload         5
     266: invokevirtual #53                 // Method java/nio/ByteBuffer.limit:()I
     269: istore        13
     271: aload         5
     273: aload         5
     275: invokevirtual #56                 // Method java/nio/ByteBuffer.position:()I
     278: iload         12
     280: iadd
     281: invokevirtual #57                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     284: pop
     285: aload_1
     286: aload         5
     288: invokevirtual #58                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     291: pop
     292: aload         5
     294: iload         13
     296: invokevirtual #57                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     299: pop
     300: lload_2
     301: iload         12
     303: i2l
     304: lsub
     305: lstore_2
     306: aload_0
     307: iload         12
     309: invokespecial #59                 // Method updateRemainingAllowed:(I)V
     312: iconst_0
     313: istore        6
     315: iload         12
     317: istore        14
     319: aload_1
     320: iload         8
     322: invokevirtual #57                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     325: pop
     326: lload_2
     327: lconst_0
     328: lcmp
     329: iflt          340
     332: aload_0
     333: getfield      #16                 // Field chunkReader:Lio/undertow/conduits/ChunkReader;
     336: lload_2
     337: invokevirtual #49                 // Method io/undertow/conduits/ChunkReader.setChunkRemaining:(J)V
     340: iload         6
     342: ifne          367
     345: aload         5
     347: invokevirtual #33                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     350: ifeq          367
     353: aload_0
     354: getfield      #7                  // Field bufferWrapper:Lio/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper;
     357: aload         4
     359: invokeinterface #50,  2           // InterfaceMethod io/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper.pushBack:(Lio/undertow/connector/PooledByteBuffer;)V
     364: goto          374
     367: aload         4
     369: invokeinterface #51,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     374: iload         14
     376: ireturn
     377: aload         5
     379: invokevirtual #33                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     382: ifeq          459
     385: aload         5
     387: invokevirtual #53                 // Method java/nio/ByteBuffer.limit:()I
     390: istore        13
     392: aload         5
     394: iload         13
     396: i2l
     397: aload         5
     399: invokevirtual #56                 // Method java/nio/ByteBuffer.position:()I
     402: i2l
     403: lload         10
     405: ladd
     406: invokestatic  #55                 // Method java/lang/Math.min:(JJ)J
     409: l2i
     410: invokevirtual #57                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     413: pop
     414: aload_1
     415: aload         5
     417: invokevirtual #58                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     420: pop
     421: aload         5
     423: iload         13
     425: invokevirtual #57                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     428: pop
     429: goto          445
     432: astore        15
     434: aload         5
     436: iload         13
     438: invokevirtual #57                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     441: pop
     442: aload         15
     444: athrow
     445: iload         9
     447: i2l
     448: lload         10
     450: ladd
     451: l2i
     452: istore        9
     454: lload_2
     455: lload         10
     457: lsub
     458: lstore_2
     459: lload_2
     460: lconst_0
     461: lcmp
     462: ifle          580
     465: aload_1
     466: invokevirtual #53                 // Method java/nio/ByteBuffer.limit:()I
     469: istore        13
     471: lload_2
     472: aload_1
     473: invokevirtual #54                 // Method java/nio/ByteBuffer.remaining:()I
     476: i2l
     477: lcmp
     478: ifge          494
     481: aload_1
     482: aload_1
     483: invokevirtual #56                 // Method java/nio/ByteBuffer.position:()I
     486: i2l
     487: lload_2
     488: ladd
     489: l2i
     490: invokevirtual #57                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     493: pop
     494: iconst_0
     495: istore        14
     497: aload_0
     498: getfield      #45                 // Field next:Lorg/xnio/conduits/Conduit;
     501: checkcast     #46                 // class org/xnio/conduits/StreamSourceConduit
     504: aload_1
     505: invokeinterface #47,  2           // InterfaceMethod org/xnio/conduits/StreamSourceConduit.read:(Ljava/nio/ByteBuffer;)I
     510: istore        14
     512: iload         14
     514: ifle          530
     517: iload         9
     519: iload         14
     521: iadd
     522: istore        9
     524: lload_2
     525: iload         14
     527: i2l
     528: lsub
     529: lstore_2
     530: iload         14
     532: ifle          541
     535: lload_2
     536: lconst_0
     537: lcmp
     538: ifgt          497
     541: iload         14
     543: iconst_m1
     544: if_icmpne     555
     547: new           #41                 // class java/nio/channels/ClosedChannelException
     550: dup
     551: invokespecial #42                 // Method java/nio/channels/ClosedChannelException."<init>":()V
     554: athrow
     555: aload_1
     556: iload         13
     558: invokevirtual #57                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     561: pop
     562: goto          577
     565: astore        16
     567: aload_1
     568: iload         13
     570: invokevirtual #57                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     573: pop
     574: aload         16
     576: athrow
     577: goto          583
     580: iconst_0
     581: istore        6
     583: aload_0
     584: iload         9
     586: invokespecial #59                 // Method updateRemainingAllowed:(I)V
     589: iload         9
     591: istore        13
     593: aload_1
     594: iload         8
     596: invokevirtual #57                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     599: pop
     600: lload_2
     601: lconst_0
     602: lcmp
     603: iflt          614
     606: aload_0
     607: getfield      #16                 // Field chunkReader:Lio/undertow/conduits/ChunkReader;
     610: lload_2
     611: invokevirtual #49                 // Method io/undertow/conduits/ChunkReader.setChunkRemaining:(J)V
     614: iload         6
     616: ifne          641
     619: aload         5
     621: invokevirtual #33                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     624: ifeq          641
     627: aload_0
     628: getfield      #7                  // Field bufferWrapper:Lio/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper;
     631: aload         4
     633: invokeinterface #50,  2           // InterfaceMethod io/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper.pushBack:(Lio/undertow/connector/PooledByteBuffer;)V
     638: goto          648
     641: aload         4
     643: invokeinterface #51,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     648: iload         13
     650: ireturn
     651: astore        17
     653: aload_1
     654: iload         8
     656: invokevirtual #57                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     659: pop
     660: aload         17
     662: athrow
     663: astore        18
     665: lload_2
     666: lconst_0
     667: lcmp
     668: iflt          679
     671: aload_0
     672: getfield      #16                 // Field chunkReader:Lio/undertow/conduits/ChunkReader;
     675: lload_2
     676: invokevirtual #49                 // Method io/undertow/conduits/ChunkReader.setChunkRemaining:(J)V
     679: iload         6
     681: ifne          706
     684: aload         5
     686: invokevirtual #33                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     689: ifeq          706
     692: aload_0
     693: getfield      #7                  // Field bufferWrapper:Lio/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper;
     696: aload         4
     698: invokeinterface #50,  2           // InterfaceMethod io/undertow/conduits/ChunkedStreamSourceConduit$BufferWrapper.pushBack:(Lio/undertow/connector/PooledByteBuffer;)V
     703: goto          713
     706: aload         4
     708: invokeinterface #51,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     713: aload         18
     715: athrow
     716: astore_2
     717: aload_0
     718: getfield      #17                 // Field exchange:Lio/undertow/server/HttpServerExchange;
     721: invokevirtual #23                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     724: invokestatic  #24                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     727: aload_2
     728: athrow
    Exception table:
       from    to  target type
         414   421   432   any
         432   434   432   any
         471   555   565   any
         565   567   565   any
         234   319   651   any
         377   593   651   any
         651   653   651   any
          56   100   663   any
         151   177   663   any
         228   326   663   any
         377   600   663   any
         651   665   663   any
           0    17   716   Class java/io/IOException
           0    17   716   Class java/lang/RuntimeException
          18   148   716   Class java/io/IOException
          18   148   716   Class java/lang/RuntimeException
         151   225   716   Class java/io/IOException
         151   225   716   Class java/lang/RuntimeException
         228   374   716   Class java/io/IOException
         228   374   716   Class java/lang/RuntimeException
         377   648   716   Class java/io/IOException
         377   648   716   Class java/lang/RuntimeException
         651   716   716   Class java/io/IOException
         651   716   716   Class java/lang/RuntimeException

  public boolean isFinished();
    Code:
       0: aload_0
       1: getfield      #27                 // Field closed:Z
       4: ifne          21
       7: aload_0
       8: getfield      #16                 // Field chunkReader:Lio/undertow/conduits/ChunkReader;
      11: invokevirtual #38                 // Method io/undertow/conduits/ChunkReader.getChunkRemaining:()J
      14: ldc2_w        #39                 // long -1l
      17: lcmp
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  static {};
    Code:
       0: getstatic     #14                 // Field io/undertow/server/protocol/http/HttpAttachments.REQUEST_TRAILERS:Lio/undertow/util/AttachmentKey;
       3: putstatic     #60                 // Field TRAILERS:Lio/undertow/util/AttachmentKey;
       6: return
}
