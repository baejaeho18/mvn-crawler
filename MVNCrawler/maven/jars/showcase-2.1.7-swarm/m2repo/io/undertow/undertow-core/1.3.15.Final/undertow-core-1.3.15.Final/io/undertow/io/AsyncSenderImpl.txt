Compiled from "AsyncSenderImpl.java"
public class io.undertow.io.AsyncSenderImpl implements io.undertow.io.Sender {
  private org.xnio.channels.StreamSinkChannel channel;

  private final io.undertow.server.HttpServerExchange exchange;

  private java.nio.ByteBuffer[] buffer;

  private io.undertow.connector.PooledByteBuffer[] pooledBuffers;

  private java.nio.channels.FileChannel fileChannel;

  private io.undertow.io.IoCallback callback;

  private boolean inCallback;

  private org.xnio.ChannelListener<org.xnio.channels.StreamSinkChannel> writeListener;

  private io.undertow.io.AsyncSenderImpl$TransferTask transferTask;

  public io.undertow.io.AsyncSenderImpl(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #9                  // Field pooledBuffers:[Lio/undertow/connector/PooledByteBuffer;
       9: aload_0
      10: aload_1
      11: putfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      14: return

  public void send(java.nio.ByteBuffer, io.undertow.io.IoCallback);
    Code:
       0: aload_2
       1: ifnonnull     15
       4: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       7: ldc           #11                 // String callback
       9: invokeinterface #12,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_0
      16: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      19: invokevirtual #13                 // Method io/undertow/server/HttpServerExchange.isResponseComplete:()Z
      22: ifeq          34
      25: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      28: invokeinterface #14,  1           // InterfaceMethod io/undertow/UndertowMessages.responseComplete:()Ljava/lang/IllegalStateException;
      33: athrow
      34: aload_0
      35: getfield      #1                  // Field buffer:[Ljava/nio/ByteBuffer;
      38: ifnonnull     48
      41: aload_0
      42: getfield      #7                  // Field fileChannel:Ljava/nio/channels/FileChannel;
      45: ifnull        57
      48: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      51: invokeinterface #15,  1           // InterfaceMethod io/undertow/UndertowMessages.dataAlreadyQueued:()Ljava/lang/IllegalStateException;
      56: athrow
      57: aload_0
      58: getfield      #6                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      61: astore_3
      62: aload_3
      63: ifnonnull     142
      66: aload_2
      67: getstatic     #16                 // Field io/undertow/io/IoCallback.END_EXCHANGE:Lio/undertow/io/IoCallback;
      70: if_acmpne     116
      73: aload_0
      74: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      77: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getResponseContentLength:()J
      80: ldc2_w        #18                 // long -1l
      83: lcmp
      84: ifne          116
      87: aload_0
      88: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      91: invokevirtual #20                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      94: getstatic     #21                 // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
      97: invokevirtual #22                 // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
     100: ifne          116
     103: aload_0
     104: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     107: aload_1
     108: invokevirtual #23                 // Method java/nio/ByteBuffer.remaining:()I
     111: i2l
     112: invokevirtual #24                 // Method io/undertow/server/HttpServerExchange.setResponseContentLength:(J)Lio/undertow/server/HttpServerExchange;
     115: pop
     116: aload_0
     117: aload_0
     118: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     121: invokevirtual #25                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
     124: dup
     125: astore_3
     126: putfield      #6                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     129: aload_3
     130: ifnonnull     142
     133: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     136: invokeinterface #26,  1           // InterfaceMethod io/undertow/UndertowMessages.responseChannelAlreadyProvided:()Ljava/lang/IllegalStateException;
     141: athrow
     142: aload_0
     143: aload_2
     144: putfield      #5                  // Field callback:Lio/undertow/io/IoCallback;
     147: aload_0
     148: getfield      #27                 // Field inCallback:Z
     151: ifeq          167
     154: aload_0
     155: iconst_1
     156: anewarray     #28                 // class java/nio/ByteBuffer
     159: dup
     160: iconst_0
     161: aload_1
     162: aastore
     163: putfield      #1                  // Field buffer:[Ljava/nio/ByteBuffer;
     166: return
     167: aload_1
     168: invokevirtual #23                 // Method java/nio/ByteBuffer.remaining:()I
     171: ifne          186
     174: aload_2
     175: aload_0
     176: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     179: aload_0
     180: invokeinterface #29,  3           // InterfaceMethod io/undertow/io/IoCallback.onComplete:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;)V
     185: return
     186: aload_3
     187: aload_1
     188: invokeinterface #30,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
     193: istore        4
     195: iload         4
     197: ifne          250
     200: aload_0
     201: iconst_1
     202: anewarray     #28                 // class java/nio/ByteBuffer
     205: dup
     206: iconst_0
     207: aload_1
     208: aastore
     209: putfield      #1                  // Field buffer:[Ljava/nio/ByteBuffer;
     212: aload_0
     213: aload_2
     214: putfield      #5                  // Field callback:Lio/undertow/io/IoCallback;
     217: aload_0
     218: getfield      #31                 // Field writeListener:Lorg/xnio/ChannelListener;
     221: ifnonnull     228
     224: aload_0
     225: invokespecial #32                 // Method initWriteListener:()V
     228: aload_3
     229: invokeinterface #33,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
     234: aload_0
     235: getfield      #31                 // Field writeListener:Lorg/xnio/ChannelListener;
     238: invokeinterface #34,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     243: aload_3
     244: invokeinterface #35,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
     249: return
     250: aload_1
     251: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     254: ifne          167
     257: aload_0
     258: invokespecial #3                  // Method invokeOnComplete:()V
     261: goto          273
     264: astore        4
     266: aload_0
     267: aload_2
     268: aload         4
     270: invokespecial #2                  // Method invokeOnException:(Lio/undertow/io/IoCallback;Ljava/io/IOException;)V
     273: return
    Exception table:
       from    to  target type
         167   185   264   Class java/io/IOException
         186   249   264   Class java/io/IOException
         250   261   264   Class java/io/IOException

  public void send(java.nio.ByteBuffer[], io.undertow.io.IoCallback);
    Code:
       0: aload_2
       1: ifnonnull     15
       4: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       7: ldc           #11                 // String callback
       9: invokeinterface #12,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_0
      16: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      19: invokevirtual #13                 // Method io/undertow/server/HttpServerExchange.isResponseComplete:()Z
      22: ifeq          34
      25: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      28: invokeinterface #14,  1           // InterfaceMethod io/undertow/UndertowMessages.responseComplete:()Ljava/lang/IllegalStateException;
      33: athrow
      34: aload_0
      35: getfield      #1                  // Field buffer:[Ljava/nio/ByteBuffer;
      38: ifnull        50
      41: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      44: invokeinterface #15,  1           // InterfaceMethod io/undertow/UndertowMessages.dataAlreadyQueued:()Ljava/lang/IllegalStateException;
      49: athrow
      50: aload_0
      51: aload_2
      52: putfield      #5                  // Field callback:Lio/undertow/io/IoCallback;
      55: aload_0
      56: getfield      #27                 // Field inCallback:Z
      59: ifeq          68
      62: aload_0
      63: aload_1
      64: putfield      #1                  // Field buffer:[Ljava/nio/ByteBuffer;
      67: return
      68: aload_1
      69: invokestatic  #38                 // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
      72: lstore_3
      73: aload_0
      74: getfield      #6                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      77: astore        5
      79: aload         5
      81: ifnonnull     158
      84: aload_2
      85: getstatic     #16                 // Field io/undertow/io/IoCallback.END_EXCHANGE:Lio/undertow/io/IoCallback;
      88: if_acmpne     130
      91: aload_0
      92: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      95: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getResponseContentLength:()J
      98: ldc2_w        #18                 // long -1l
     101: lcmp
     102: ifne          130
     105: aload_0
     106: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     109: invokevirtual #20                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
     112: getstatic     #21                 // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
     115: invokevirtual #22                 // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
     118: ifne          130
     121: aload_0
     122: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     125: lload_3
     126: invokevirtual #24                 // Method io/undertow/server/HttpServerExchange.setResponseContentLength:(J)Lio/undertow/server/HttpServerExchange;
     129: pop
     130: aload_0
     131: aload_0
     132: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     135: invokevirtual #25                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
     138: dup
     139: astore        5
     141: putfield      #6                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     144: aload         5
     146: ifnonnull     158
     149: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     152: invokeinterface #26,  1           // InterfaceMethod io/undertow/UndertowMessages.responseChannelAlreadyProvided:()Ljava/lang/IllegalStateException;
     157: athrow
     158: lload_3
     159: lstore        6
     161: lconst_0
     162: lstore        8
     164: aload         5
     166: aload_1
     167: invokeinterface #39,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:([Ljava/nio/ByteBuffer;)J
     172: lstore        10
     174: lload         8
     176: lload         10
     178: ladd
     179: lstore        8
     181: lload         10
     183: lconst_0
     184: lcmp
     185: ifne          233
     188: aload_0
     189: aload_1
     190: putfield      #1                  // Field buffer:[Ljava/nio/ByteBuffer;
     193: aload_0
     194: aload_2
     195: putfield      #5                  // Field callback:Lio/undertow/io/IoCallback;
     198: aload_0
     199: getfield      #31                 // Field writeListener:Lorg/xnio/ChannelListener;
     202: ifnonnull     209
     205: aload_0
     206: invokespecial #32                 // Method initWriteListener:()V
     209: aload         5
     211: invokeinterface #33,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
     216: aload_0
     217: getfield      #31                 // Field writeListener:Lorg/xnio/ChannelListener;
     220: invokeinterface #34,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     225: aload         5
     227: invokeinterface #35,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
     232: return
     233: lload         8
     235: lload         6
     237: lcmp
     238: iflt          164
     241: aload_0
     242: invokespecial #3                  // Method invokeOnComplete:()V
     245: goto          257
     248: astore        10
     250: aload_0
     251: aload_2
     252: aload         10
     254: invokespecial #2                  // Method invokeOnException:(Lio/undertow/io/IoCallback;Ljava/io/IOException;)V
     257: return
    Exception table:
       from    to  target type
         164   232   248   Class java/io/IOException
         233   245   248   Class java/io/IOException

  public void transferFrom(java.nio.channels.FileChannel, io.undertow.io.IoCallback);
    Code:
       0: aload_2
       1: ifnonnull     15
       4: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       7: ldc           #11                 // String callback
       9: invokeinterface #12,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_0
      16: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      19: invokevirtual #13                 // Method io/undertow/server/HttpServerExchange.isResponseComplete:()Z
      22: ifeq          34
      25: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      28: invokeinterface #14,  1           // InterfaceMethod io/undertow/UndertowMessages.responseComplete:()Ljava/lang/IllegalStateException;
      33: athrow
      34: aload_0
      35: getfield      #7                  // Field fileChannel:Ljava/nio/channels/FileChannel;
      38: ifnonnull     48
      41: aload_0
      42: getfield      #1                  // Field buffer:[Ljava/nio/ByteBuffer;
      45: ifnull        57
      48: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      51: invokeinterface #15,  1           // InterfaceMethod io/undertow/UndertowMessages.dataAlreadyQueued:()Ljava/lang/IllegalStateException;
      56: athrow
      57: aload_0
      58: aload_2
      59: putfield      #5                  // Field callback:Lio/undertow/io/IoCallback;
      62: aload_0
      63: aload_1
      64: putfield      #7                  // Field fileChannel:Ljava/nio/channels/FileChannel;
      67: aload_0
      68: getfield      #27                 // Field inCallback:Z
      71: ifeq          75
      74: return
      75: aload_0
      76: getfield      #40                 // Field transferTask:Lio/undertow/io/AsyncSenderImpl$TransferTask;
      79: ifnonnull     94
      82: aload_0
      83: new           #41                 // class io/undertow/io/AsyncSenderImpl$TransferTask
      86: dup
      87: aload_0
      88: invokespecial #42                 // Method io/undertow/io/AsyncSenderImpl$TransferTask."<init>":(Lio/undertow/io/AsyncSenderImpl;)V
      91: putfield      #40                 // Field transferTask:Lio/undertow/io/AsyncSenderImpl$TransferTask;
      94: aload_0
      95: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      98: invokevirtual #43                 // Method io/undertow/server/HttpServerExchange.isInIoThread:()Z
     101: ifeq          117
     104: aload_0
     105: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     108: aload_0
     109: getfield      #40                 // Field transferTask:Lio/undertow/io/AsyncSenderImpl$TransferTask;
     112: invokevirtual #44                 // Method io/undertow/server/HttpServerExchange.dispatch:(Ljava/lang/Runnable;)Lio/undertow/server/HttpServerExchange;
     115: pop
     116: return
     117: aload_0
     118: getfield      #40                 // Field transferTask:Lio/undertow/io/AsyncSenderImpl$TransferTask;
     121: invokevirtual #45                 // Method io/undertow/io/AsyncSenderImpl$TransferTask.run:()V
     124: return

  public void send(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #16                 // Field io/undertow/io/IoCallback.END_EXCHANGE:Lio/undertow/io/IoCallback;
       5: invokevirtual #46                 // Method send:(Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)V
       8: return

  public void send(java.nio.ByteBuffer[]);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #16                 // Field io/undertow/io/IoCallback.END_EXCHANGE:Lio/undertow/io/IoCallback;
       5: invokevirtual #47                 // Method send:([Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)V
       8: return

  public void send(java.lang.String, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #48                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       5: aload_2
       6: invokevirtual #49                 // Method send:(Ljava/lang/String;Ljava/nio/charset/Charset;Lio/undertow/io/IoCallback;)V
       9: return

  public void send(java.lang.String, java.nio.charset.Charset, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #13                 // Method io/undertow/server/HttpServerExchange.isResponseComplete:()Z
       7: ifeq          19
      10: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      13: invokeinterface #14,  1           // InterfaceMethod io/undertow/UndertowMessages.responseComplete:()Ljava/lang/IllegalStateException;
      18: athrow
      19: aload_1
      20: aload_2
      21: invokevirtual #50                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      24: invokestatic  #51                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      27: astore        4
      29: aload         4
      31: invokevirtual #23                 // Method java/nio/ByteBuffer.remaining:()I
      34: ifne          51
      37: aload_3
      38: aload_0
      39: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      42: aload_0
      43: invokeinterface #29,  3           // InterfaceMethod io/undertow/io/IoCallback.onComplete:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;)V
      48: goto          192
      51: iconst_0
      52: istore        5
      54: aconst_null
      55: astore        6
      57: aload         4
      59: invokevirtual #36                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      62: ifeq          185
      65: aload_0
      66: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      69: invokevirtual #52                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      72: invokevirtual #53                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      75: invokeinterface #54,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      80: astore        7
      82: aload         6
      84: ifnonnull     134
      87: aload         4
      89: invokevirtual #23                 // Method java/nio/ByteBuffer.remaining:()I
      92: aload         7
      94: invokeinterface #55,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      99: invokevirtual #23                 // Method java/nio/ByteBuffer.remaining:()I
     102: iadd
     103: iconst_1
     104: isub
     105: aload         7
     107: invokeinterface #55,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     112: invokevirtual #23                 // Method java/nio/ByteBuffer.remaining:()I
     115: idiv
     116: istore        8
     118: aload_0
     119: iload         8
     121: anewarray     #56                 // class io/undertow/connector/PooledByteBuffer
     124: putfield      #9                  // Field pooledBuffers:[Lio/undertow/connector/PooledByteBuffer;
     127: iload         8
     129: anewarray     #28                 // class java/nio/ByteBuffer
     132: astore        6
     134: aload_0
     135: getfield      #9                  // Field pooledBuffers:[Lio/undertow/connector/PooledByteBuffer;
     138: iload         5
     140: aload         7
     142: aastore
     143: aload         6
     145: iload         5
     147: aload         7
     149: invokeinterface #55,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     154: aastore
     155: aload         7
     157: invokeinterface #55,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     162: aload         4
     164: invokestatic  #57                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
     167: pop
     168: aload         7
     170: invokeinterface #55,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     175: invokevirtual #58                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     178: pop
     179: iinc          5, 1
     182: goto          57
     185: aload_0
     186: aload         6
     188: aload_3
     189: invokevirtual #47                 // Method send:([Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)V
     192: return

  public void send(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #16                 // Field io/undertow/io/IoCallback.END_EXCHANGE:Lio/undertow/io/IoCallback;
       5: invokevirtual #59                 // Method send:(Ljava/lang/String;Lio/undertow/io/IoCallback;)V
       8: return

  public void send(java.lang.String, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #16                 // Field io/undertow/io/IoCallback.END_EXCHANGE:Lio/undertow/io/IoCallback;
       6: invokevirtual #49                 // Method send:(Ljava/lang/String;Ljava/nio/charset/Charset;Lio/undertow/io/IoCallback;)V
       9: return

  public void close(io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: getfield      #6                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
       4: astore_2
       5: aload_2
       6: ifnonnull     74
       9: aload_0
      10: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      13: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getResponseContentLength:()J
      16: ldc2_w        #18                 // long -1l
      19: lcmp
      20: ifne          48
      23: aload_0
      24: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      27: invokevirtual #20                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      30: getstatic     #21                 // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
      33: invokevirtual #22                 // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
      36: ifne          48
      39: aload_0
      40: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      43: lconst_0
      44: invokevirtual #24                 // Method io/undertow/server/HttpServerExchange.setResponseContentLength:(J)Lio/undertow/server/HttpServerExchange;
      47: pop
      48: aload_0
      49: aload_0
      50: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      53: invokevirtual #25                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
      56: dup
      57: astore_2
      58: putfield      #6                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      61: aload_2
      62: ifnonnull     74
      65: getstatic     #10                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      68: invokeinterface #26,  1           // InterfaceMethod io/undertow/UndertowMessages.responseChannelAlreadyProvided:()Ljava/lang/IllegalStateException;
      73: athrow
      74: aload_2
      75: invokeinterface #60,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.shutdownWrites:()V
      80: aload_2
      81: invokeinterface #61,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.flush:()Z
      86: ifne          130
      89: aload_2
      90: invokeinterface #33,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
      95: new           #62                 // class io/undertow/io/AsyncSenderImpl$1
      98: dup
      99: aload_0
     100: aload_1
     101: invokespecial #63                 // Method io/undertow/io/AsyncSenderImpl$1."<init>":(Lio/undertow/io/AsyncSenderImpl;Lio/undertow/io/IoCallback;)V
     104: new           #64                 // class io/undertow/io/AsyncSenderImpl$2
     107: dup
     108: aload_0
     109: aload_1
     110: invokespecial #65                 // Method io/undertow/io/AsyncSenderImpl$2."<init>":(Lio/undertow/io/AsyncSenderImpl;Lio/undertow/io/IoCallback;)V
     113: invokestatic  #66                 // Method org/xnio/ChannelListeners.flushingChannelListener:(Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;)Lorg/xnio/ChannelListener;
     116: invokeinterface #34,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     121: aload_2
     122: invokeinterface #35,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
     127: goto          145
     130: aload_1
     131: ifnull        145
     134: aload_1
     135: aload_0
     136: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     139: aload_0
     140: invokeinterface #29,  3           // InterfaceMethod io/undertow/io/IoCallback.onComplete:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;)V
     145: goto          159
     148: astore_2
     149: aload_1
     150: ifnull        159
     153: aload_0
     154: aload_1
     155: aload_2
     156: invokespecial #2                  // Method invokeOnException:(Lio/undertow/io/IoCallback;Ljava/io/IOException;)V
     159: return
    Exception table:
       from    to  target type
           0   145   148   Class java/io/IOException

  public void close();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #67                 // Method close:(Lio/undertow/io/IoCallback;)V
       5: return

  private void invokeOnComplete();
    Code:
       0: aload_0
       1: getfield      #9                  // Field pooledBuffers:[Lio/undertow/connector/PooledByteBuffer;
       4: ifnull        45
       7: aload_0
       8: getfield      #9                  // Field pooledBuffers:[Lio/undertow/connector/PooledByteBuffer;
      11: astore_1
      12: aload_1
      13: arraylength
      14: istore_2
      15: iconst_0
      16: istore_3
      17: iload_3
      18: iload_2
      19: if_icmpge     40
      22: aload_1
      23: iload_3
      24: aaload
      25: astore        4
      27: aload         4
      29: invokeinterface #68,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      34: iinc          3, 1
      37: goto          17
      40: aload_0
      41: aconst_null
      42: putfield      #9                  // Field pooledBuffers:[Lio/undertow/connector/PooledByteBuffer;
      45: aload_0
      46: getfield      #5                  // Field callback:Lio/undertow/io/IoCallback;
      49: astore_1
      50: aload_0
      51: aconst_null
      52: putfield      #1                  // Field buffer:[Ljava/nio/ByteBuffer;
      55: aload_0
      56: aconst_null
      57: putfield      #7                  // Field fileChannel:Ljava/nio/channels/FileChannel;
      60: aload_0
      61: aconst_null
      62: putfield      #5                  // Field callback:Lio/undertow/io/IoCallback;
      65: aload_0
      66: iconst_1
      67: putfield      #27                 // Field inCallback:Z
      70: aload_1
      71: aload_0
      72: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      75: aload_0
      76: invokeinterface #29,  3           // InterfaceMethod io/undertow/io/IoCallback.onComplete:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;)V
      81: aload_0
      82: iconst_0
      83: putfield      #27                 // Field inCallback:Z
      86: goto          99
      89: astore        5
      91: aload_0
      92: iconst_0
      93: putfield      #27                 // Field inCallback:Z
      96: aload         5
      98: athrow
      99: aload_0
     100: getfield      #6                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     103: astore_2
     104: aload_0
     105: getfield      #1                  // Field buffer:[Ljava/nio/ByteBuffer;
     108: ifnull        207
     111: aload_0
     112: getfield      #1                  // Field buffer:[Ljava/nio/ByteBuffer;
     115: invokestatic  #38                 // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
     118: lstore_3
     119: lload_3
     120: lstore        5
     122: lconst_0
     123: lstore        7
     125: aload_2
     126: aload_0
     127: getfield      #1                  // Field buffer:[Ljava/nio/ByteBuffer;
     130: invokeinterface #39,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:([Ljava/nio/ByteBuffer;)J
     135: lstore        9
     137: lload         7
     139: lload         9
     141: ladd
     142: lstore        7
     144: lload         9
     146: lconst_0
     147: lcmp
     148: ifne          184
     151: aload_0
     152: getfield      #31                 // Field writeListener:Lorg/xnio/ChannelListener;
     155: ifnonnull     162
     158: aload_0
     159: invokespecial #32                 // Method initWriteListener:()V
     162: aload_2
     163: invokeinterface #33,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
     168: aload_0
     169: getfield      #31                 // Field writeListener:Lorg/xnio/ChannelListener;
     172: invokeinterface #34,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     177: aload_2
     178: invokeinterface #35,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
     183: return
     184: lload         7
     186: lload         5
     188: lcmp
     189: iflt          125
     192: goto          204
     195: astore        9
     197: aload_0
     198: aload_1
     199: aload         9
     201: invokespecial #2                  // Method invokeOnException:(Lio/undertow/io/IoCallback;Ljava/io/IOException;)V
     204: goto          246
     207: aload_0
     208: getfield      #7                  // Field fileChannel:Ljava/nio/channels/FileChannel;
     211: ifnull        245
     214: aload_0
     215: getfield      #40                 // Field transferTask:Lio/undertow/io/AsyncSenderImpl$TransferTask;
     218: ifnonnull     233
     221: aload_0
     222: new           #41                 // class io/undertow/io/AsyncSenderImpl$TransferTask
     225: dup
     226: aload_0
     227: invokespecial #42                 // Method io/undertow/io/AsyncSenderImpl$TransferTask."<init>":(Lio/undertow/io/AsyncSenderImpl;)V
     230: putfield      #40                 // Field transferTask:Lio/undertow/io/AsyncSenderImpl$TransferTask;
     233: aload_0
     234: getfield      #40                 // Field transferTask:Lio/undertow/io/AsyncSenderImpl$TransferTask;
     237: iconst_0
     238: invokevirtual #69                 // Method io/undertow/io/AsyncSenderImpl$TransferTask.run:(Z)Z
     241: ifne          246
     244: return
     245: return
     246: goto          0
    Exception table:
       from    to  target type
          70    81    89   any
          89    91    89   any
         125   183   195   Class java/io/IOException
         184   192   195   Class java/io/IOException

  private void invokeOnException(io.undertow.io.IoCallback, java.io.IOException);
    Code:
       0: aload_0
       1: getfield      #9                  // Field pooledBuffers:[Lio/undertow/connector/PooledByteBuffer;
       4: ifnull        50
       7: aload_0
       8: getfield      #9                  // Field pooledBuffers:[Lio/undertow/connector/PooledByteBuffer;
      11: astore_3
      12: aload_3
      13: arraylength
      14: istore        4
      16: iconst_0
      17: istore        5
      19: iload         5
      21: iload         4
      23: if_icmpge     45
      26: aload_3
      27: iload         5
      29: aaload
      30: astore        6
      32: aload         6
      34: invokeinterface #68,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      39: iinc          5, 1
      42: goto          19
      45: aload_0
      46: aconst_null
      47: putfield      #9                  // Field pooledBuffers:[Lio/undertow/connector/PooledByteBuffer;
      50: aload_1
      51: aload_0
      52: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      55: aload_0
      56: aload_2
      57: invokeinterface #70,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
      62: return

  private void initWriteListener();
    Code:
       0: aload_0
       1: new           #71                 // class io/undertow/io/AsyncSenderImpl$3
       4: dup
       5: aload_0
       6: invokespecial #72                 // Method io/undertow/io/AsyncSenderImpl$3."<init>":(Lio/undertow/io/AsyncSenderImpl;)V
       9: putfield      #31                 // Field writeListener:Lorg/xnio/ChannelListener;
      12: return

  static java.nio.channels.FileChannel access$000(io.undertow.io.AsyncSenderImpl);
    Code:
       0: aload_0
       1: getfield      #7                  // Field fileChannel:Ljava/nio/channels/FileChannel;
       4: areturn

  static org.xnio.channels.StreamSinkChannel access$100(io.undertow.io.AsyncSenderImpl);
    Code:
       0: aload_0
       1: getfield      #6                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
       4: areturn

  static io.undertow.io.IoCallback access$200(io.undertow.io.AsyncSenderImpl);
    Code:
       0: aload_0
       1: getfield      #5                  // Field callback:Lio/undertow/io/IoCallback;
       4: areturn

  static io.undertow.server.HttpServerExchange access$300(io.undertow.io.AsyncSenderImpl);
    Code:
       0: aload_0
       1: getfield      #4                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: areturn

  static org.xnio.channels.StreamSinkChannel access$102(io.undertow.io.AsyncSenderImpl, org.xnio.channels.StreamSinkChannel);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #6                  // Field channel:Lorg/xnio/channels/StreamSinkChannel;
       6: areturn

  static void access$400(io.undertow.io.AsyncSenderImpl);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method invokeOnComplete:()V
       4: return

  static void access$500(io.undertow.io.AsyncSenderImpl, io.undertow.io.IoCallback, java.io.IOException);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method invokeOnException:(Lio/undertow/io/IoCallback;Ljava/io/IOException;)V
       6: return

  static java.nio.ByteBuffer[] access$600(io.undertow.io.AsyncSenderImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field buffer:[Ljava/nio/ByteBuffer;
       4: areturn
}
