Compiled from "LimitedBufferSlicePool.java"
public final class io.undertow.server.handlers.cache.LimitedBufferSlicePool {
  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater regionUpdater;

  private final java.util.Queue<io.undertow.server.handlers.cache.LimitedBufferSlicePool$Slice> sliceQueue;

  private final org.xnio.BufferAllocator<java.nio.ByteBuffer> allocator;

  private final int bufferSize;

  private final int buffersPerRegion;

  private final int maxRegions;

  private volatile int regionsUsed;

  public io.undertow.server.handlers.cache.LimitedBufferSlicePool(org.xnio.BufferAllocator<java.nio.ByteBuffer>, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentLinkedQueue
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      12: putfield      #4                  // Field sliceQueue:Ljava/util/Queue;
      15: iload_2
      16: ifgt          29
      19: new           #5                  // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #6                  // String Buffer size must be greater than zero
      25: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: iload_3
      30: iload_2
      31: if_icmpge     44
      34: new           #5                  // class java/lang/IllegalArgumentException
      37: dup
      38: ldc           #8                  // String Maximum region size must be greater than or equal to the buffer size
      40: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_0
      45: iload_3
      46: iload_2
      47: idiv
      48: putfield      #9                  // Field buffersPerRegion:I
      51: aload_0
      52: iload_2
      53: putfield      #10                 // Field bufferSize:I
      56: aload_0
      57: aload_1
      58: putfield      #11                 // Field allocator:Lorg/xnio/BufferAllocator;
      61: aload_0
      62: iload         4
      64: putfield      #12                 // Field maxRegions:I
      67: return

  public io.undertow.server.handlers.cache.LimitedBufferSlicePool(org.xnio.BufferAllocator<java.nio.ByteBuffer>, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iconst_0
       5: invokespecial #13                 // Method "<init>":(Lorg/xnio/BufferAllocator;III)V
       8: return

  public io.undertow.server.handlers.cache.LimitedBufferSlicePool(int, int);
    Code:
       0: aload_0
       1: getstatic     #14                 // Field org/xnio/BufferAllocator.DIRECT_BYTE_BUFFER_ALLOCATOR:Lorg/xnio/BufferAllocator;
       4: iload_1
       5: iload_2
       6: invokespecial #15                 // Method "<init>":(Lorg/xnio/BufferAllocator;II)V
       9: return

  public io.undertow.server.handlers.cache.LimitedBufferSlicePool$PooledByteBuffer allocate();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sliceQueue:Ljava/util/Queue;
       4: astore_1
       5: aload_1
       6: invokeinterface #16,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      11: checkcast     #17                 // class io/undertow/server/handlers/cache/LimitedBufferSlicePool$Slice
      14: astore_2
      15: aload_2
      16: ifnonnull     147
      19: aload_0
      20: getfield      #12                 // Field maxRegions:I
      23: ifle          40
      26: getstatic     #18                 // Field regionUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      29: aload_0
      30: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
      33: aload_0
      34: getfield      #12                 // Field maxRegions:I
      37: if_icmpge     147
      40: aload_0
      41: getfield      #10                 // Field bufferSize:I
      44: istore_3
      45: aload_0
      46: getfield      #9                  // Field buffersPerRegion:I
      49: istore        4
      51: aload_0
      52: getfield      #11                 // Field allocator:Lorg/xnio/BufferAllocator;
      55: iload         4
      57: iload_3
      58: imul
      59: invokeinterface #20,  2           // InterfaceMethod org/xnio/BufferAllocator.allocate:(I)Ljava/nio/Buffer;
      64: checkcast     #21                 // class java/nio/ByteBuffer
      67: astore        5
      69: iload_3
      70: istore        6
      72: iconst_1
      73: istore        7
      75: iload         7
      77: iload         4
      79: if_icmpge     115
      82: aload_1
      83: new           #17                 // class io/undertow/server/handlers/cache/LimitedBufferSlicePool$Slice
      86: dup
      87: aload_0
      88: aload         5
      90: iload         6
      92: iload_3
      93: aconst_null
      94: invokespecial #22                 // Method io/undertow/server/handlers/cache/LimitedBufferSlicePool$Slice."<init>":(Lio/undertow/server/handlers/cache/LimitedBufferSlicePool;Ljava/nio/ByteBuffer;IILio/undertow/server/handlers/cache/LimitedBufferSlicePool$1;)V
      97: invokeinterface #23,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
     102: pop
     103: iload         6
     105: iload_3
     106: iadd
     107: istore        6
     109: iinc          7, 1
     112: goto          75
     115: new           #17                 // class io/undertow/server/handlers/cache/LimitedBufferSlicePool$Slice
     118: dup
     119: aload_0
     120: aload         5
     122: iconst_0
     123: iload_3
     124: aconst_null
     125: invokespecial #22                 // Method io/undertow/server/handlers/cache/LimitedBufferSlicePool$Slice."<init>":(Lio/undertow/server/handlers/cache/LimitedBufferSlicePool;Ljava/nio/ByteBuffer;IILio/undertow/server/handlers/cache/LimitedBufferSlicePool$1;)V
     128: astore        7
     130: new           #24                 // class io/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer
     133: dup
     134: aload         7
     136: aload         7
     138: invokevirtual #25                 // Method io/undertow/server/handlers/cache/LimitedBufferSlicePool$Slice.slice:()Ljava/nio/ByteBuffer;
     141: aload_1
     142: aconst_null
     143: invokespecial #26                 // Method io/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer."<init>":(Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$Slice;Ljava/nio/ByteBuffer;Ljava/util/Queue;Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$1;)V
     146: areturn
     147: aload_2
     148: ifnonnull     153
     151: aconst_null
     152: areturn
     153: new           #24                 // class io/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer
     156: dup
     157: aload_2
     158: aload_2
     159: invokevirtual #25                 // Method io/undertow/server/handlers/cache/LimitedBufferSlicePool$Slice.slice:()Ljava/nio/ByteBuffer;
     162: aload_1
     163: aconst_null
     164: invokespecial #26                 // Method io/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer."<init>":(Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$Slice;Ljava/nio/ByteBuffer;Ljava/util/Queue;Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$1;)V
     167: areturn

  public boolean canAllocate(int);
    Code:
       0: aload_0
       1: getfield      #27                 // Field regionsUsed:I
       4: aload_0
       5: getfield      #12                 // Field maxRegions:I
       8: if_icmpge     13
      11: iconst_1
      12: ireturn
      13: aload_0
      14: getfield      #4                  // Field sliceQueue:Ljava/util/Queue;
      17: invokeinterface #28,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      22: ifeq          27
      25: iconst_0
      26: ireturn
      27: aload_0
      28: getfield      #4                  // Field sliceQueue:Ljava/util/Queue;
      31: invokeinterface #29,  1           // InterfaceMethod java/util/Queue.iterator:()Ljava/util/Iterator;
      36: astore_2
      37: iconst_0
      38: istore_3
      39: iload_3
      40: iload_1
      41: if_icmpge     75
      44: aload_2
      45: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifne          55
      53: iconst_0
      54: ireturn
      55: aload_2
      56: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: pop
      62: goto          69
      65: astore        4
      67: iconst_0
      68: ireturn
      69: iinc          3, 1
      72: goto          39
      75: iconst_1
      76: ireturn
    Exception table:
       from    to  target type
          55    62    65   Class java/util/NoSuchElementException

  static {};
    Code:
       0: ldc           #33                 // class io/undertow/server/handlers/cache/LimitedBufferSlicePool
       2: ldc           #34                 // String regionsUsed
       4: invokestatic  #35                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #18                 // Field regionUpdater:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
