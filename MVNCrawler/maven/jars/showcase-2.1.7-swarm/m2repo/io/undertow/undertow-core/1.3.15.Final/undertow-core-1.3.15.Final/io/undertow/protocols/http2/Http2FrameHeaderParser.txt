Compiled from "Http2FrameHeaderParser.java"
class io.undertow.protocols.http2.Http2FrameHeaderParser implements io.undertow.server.protocol.framed.FrameHeaderData {
  final byte[] header;

  int read;

  int length;

  int type;

  int flags;

  int streamId;

  io.undertow.protocols.http2.Http2PushBackParser parser;

  io.undertow.protocols.http2.Http2HeadersParser continuationParser;

  private static final int SECOND_RESERVED_MASK;

  private io.undertow.protocols.http2.Http2Channel http2Channel;

  public io.undertow.protocols.http2.Http2FrameHeaderParser(io.undertow.protocols.http2.Http2Channel, io.undertow.protocols.http2.Http2HeadersParser);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        9
       7: newarray       byte
       9: putfield      #3                  // Field header:[B
      12: aload_0
      13: iconst_0
      14: putfield      #4                  // Field read:I
      17: aload_0
      18: aconst_null
      19: putfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
      22: aload_0
      23: aconst_null
      24: putfield      #6                  // Field continuationParser:Lio/undertow/protocols/http2/Http2HeadersParser;
      27: aload_0
      28: aload_1
      29: putfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
      32: aload_0
      33: aload_2
      34: putfield      #6                  // Field continuationParser:Lio/undertow/protocols/http2/Http2HeadersParser;
      37: return

  public boolean handle(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
       4: ifnonnull     523
       7: aload_0
       8: aload_1
       9: invokespecial #8                  // Method parseFrameHeader:(Ljava/nio/ByteBuffer;)Z
      12: ifne          17
      15: iconst_0
      16: ireturn
      17: aload_0
      18: getfield      #9                  // Field type:I
      21: tableswitch   { // 0 to 9
                     0: 76
                     1: 119
                     2: 478
                     3: 191
                     4: 417
                     5: 255
                     6: 346
                     7: 302
                     8: 460
                     9: 209
               default: 521
          }
      76: aload_0
      77: getfield      #10                 // Field streamId:I
      80: ifne          101
      83: new           #11                 // class io/undertow/protocols/http2/ConnectionErrorException
      86: dup
      87: iconst_1
      88: getstatic     #12                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      91: iconst_0
      92: invokeinterface #13,  2           // InterfaceMethod io/undertow/UndertowMessages.streamIdMustNotBeZeroForFrameType:(I)Ljava/lang/String;
      97: invokespecial #14                 // Method io/undertow/protocols/http2/ConnectionErrorException."<init>":(ILjava/lang/String;)V
     100: athrow
     101: aload_0
     102: new           #15                 // class io/undertow/protocols/http2/Http2DataFrameParser
     105: dup
     106: aload_0
     107: getfield      #16                 // Field length:I
     110: invokespecial #17                 // Method io/undertow/protocols/http2/Http2DataFrameParser."<init>":(I)V
     113: putfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     116: goto          523
     119: aload_0
     120: getfield      #10                 // Field streamId:I
     123: ifne          144
     126: new           #11                 // class io/undertow/protocols/http2/ConnectionErrorException
     129: dup
     130: iconst_1
     131: getstatic     #12                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     134: iconst_1
     135: invokeinterface #13,  2           // InterfaceMethod io/undertow/UndertowMessages.streamIdMustNotBeZeroForFrameType:(I)Ljava/lang/String;
     140: invokespecial #14                 // Method io/undertow/protocols/http2/ConnectionErrorException."<init>":(ILjava/lang/String;)V
     143: athrow
     144: aload_0
     145: new           #18                 // class io/undertow/protocols/http2/Http2HeadersParser
     148: dup
     149: aload_0
     150: getfield      #16                 // Field length:I
     153: aload_0
     154: getfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
     157: invokevirtual #19                 // Method io/undertow/protocols/http2/Http2Channel.getDecoder:()Lio/undertow/protocols/http2/HpackDecoder;
     160: invokespecial #20                 // Method io/undertow/protocols/http2/Http2HeadersParser."<init>":(ILio/undertow/protocols/http2/HpackDecoder;)V
     163: putfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     166: aload_0
     167: getfield      #21                 // Field flags:I
     170: iconst_4
     171: invokestatic  #22                 // Method org/xnio/Bits.allAreClear:(II)Z
     174: ifeq          523
     177: aload_0
     178: aload_0
     179: getfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     182: checkcast     #18                 // class io/undertow/protocols/http2/Http2HeadersParser
     185: putfield      #6                  // Field continuationParser:Lio/undertow/protocols/http2/Http2HeadersParser;
     188: goto          523
     191: aload_0
     192: new           #23                 // class io/undertow/protocols/http2/Http2RstStreamParser
     195: dup
     196: aload_0
     197: getfield      #16                 // Field length:I
     200: invokespecial #24                 // Method io/undertow/protocols/http2/Http2RstStreamParser."<init>":(I)V
     203: putfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     206: goto          523
     209: aload_0
     210: getfield      #6                  // Field continuationParser:Lio/undertow/protocols/http2/Http2HeadersParser;
     213: ifnonnull     233
     216: aload_0
     217: getfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
     220: iconst_1
     221: invokevirtual #25                 // Method io/undertow/protocols/http2/Http2Channel.sendGoAway:(I)V
     224: getstatic     #12                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     227: invokeinterface #26,  1           // InterfaceMethod io/undertow/UndertowMessages.http2ContinuationFrameNotExpected:()Ljava/io/IOException;
     232: athrow
     233: aload_0
     234: aload_0
     235: getfield      #6                  // Field continuationParser:Lio/undertow/protocols/http2/Http2HeadersParser;
     238: putfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     241: aload_0
     242: getfield      #6                  // Field continuationParser:Lio/undertow/protocols/http2/Http2HeadersParser;
     245: aload_0
     246: getfield      #16                 // Field length:I
     249: invokevirtual #27                 // Method io/undertow/protocols/http2/Http2HeadersParser.moreData:(I)V
     252: goto          523
     255: aload_0
     256: new           #28                 // class io/undertow/protocols/http2/Http2PushPromiseParser
     259: dup
     260: aload_0
     261: getfield      #16                 // Field length:I
     264: aload_0
     265: getfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
     268: invokevirtual #19                 // Method io/undertow/protocols/http2/Http2Channel.getDecoder:()Lio/undertow/protocols/http2/HpackDecoder;
     271: invokespecial #29                 // Method io/undertow/protocols/http2/Http2PushPromiseParser."<init>":(ILio/undertow/protocols/http2/HpackDecoder;)V
     274: putfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     277: aload_0
     278: getfield      #21                 // Field flags:I
     281: iconst_4
     282: invokestatic  #22                 // Method org/xnio/Bits.allAreClear:(II)Z
     285: ifeq          523
     288: aload_0
     289: aload_0
     290: getfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     293: checkcast     #18                 // class io/undertow/protocols/http2/Http2HeadersParser
     296: putfield      #6                  // Field continuationParser:Lio/undertow/protocols/http2/Http2HeadersParser;
     299: goto          523
     302: aload_0
     303: getfield      #10                 // Field streamId:I
     306: ifeq          328
     309: new           #11                 // class io/undertow/protocols/http2/ConnectionErrorException
     312: dup
     313: iconst_1
     314: getstatic     #12                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     317: bipush        7
     319: invokeinterface #30,  2           // InterfaceMethod io/undertow/UndertowMessages.streamIdMustBeZeroForFrameType:(I)Ljava/lang/String;
     324: invokespecial #14                 // Method io/undertow/protocols/http2/ConnectionErrorException."<init>":(ILjava/lang/String;)V
     327: athrow
     328: aload_0
     329: new           #31                 // class io/undertow/protocols/http2/Http2GoAwayParser
     332: dup
     333: aload_0
     334: getfield      #16                 // Field length:I
     337: invokespecial #32                 // Method io/undertow/protocols/http2/Http2GoAwayParser."<init>":(I)V
     340: putfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     343: goto          523
     346: aload_0
     347: getfield      #16                 // Field length:I
     350: bipush        8
     352: if_icmpeq     373
     355: new           #11                 // class io/undertow/protocols/http2/ConnectionErrorException
     358: dup
     359: bipush        6
     361: getstatic     #12                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     364: invokeinterface #33,  1           // InterfaceMethod io/undertow/UndertowMessages.invalidPingSize:()Ljava/lang/String;
     369: invokespecial #14                 // Method io/undertow/protocols/http2/ConnectionErrorException."<init>":(ILjava/lang/String;)V
     372: athrow
     373: aload_0
     374: getfield      #10                 // Field streamId:I
     377: ifeq          399
     380: new           #11                 // class io/undertow/protocols/http2/ConnectionErrorException
     383: dup
     384: iconst_1
     385: getstatic     #12                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     388: bipush        6
     390: invokeinterface #30,  2           // InterfaceMethod io/undertow/UndertowMessages.streamIdMustBeZeroForFrameType:(I)Ljava/lang/String;
     395: invokespecial #14                 // Method io/undertow/protocols/http2/ConnectionErrorException."<init>":(ILjava/lang/String;)V
     398: athrow
     399: aload_0
     400: new           #34                 // class io/undertow/protocols/http2/Http2PingParser
     403: dup
     404: aload_0
     405: getfield      #16                 // Field length:I
     408: invokespecial #35                 // Method io/undertow/protocols/http2/Http2PingParser."<init>":(I)V
     411: putfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     414: goto          523
     417: aload_0
     418: getfield      #10                 // Field streamId:I
     421: ifeq          442
     424: new           #11                 // class io/undertow/protocols/http2/ConnectionErrorException
     427: dup
     428: iconst_1
     429: getstatic     #12                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     432: iconst_4
     433: invokeinterface #30,  2           // InterfaceMethod io/undertow/UndertowMessages.streamIdMustBeZeroForFrameType:(I)Ljava/lang/String;
     438: invokespecial #14                 // Method io/undertow/protocols/http2/ConnectionErrorException."<init>":(ILjava/lang/String;)V
     441: athrow
     442: aload_0
     443: new           #36                 // class io/undertow/protocols/http2/Http2SettingsParser
     446: dup
     447: aload_0
     448: getfield      #16                 // Field length:I
     451: invokespecial #37                 // Method io/undertow/protocols/http2/Http2SettingsParser."<init>":(I)V
     454: putfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     457: goto          523
     460: aload_0
     461: new           #38                 // class io/undertow/protocols/http2/Http2WindowUpdateParser
     464: dup
     465: aload_0
     466: getfield      #16                 // Field length:I
     469: invokespecial #39                 // Method io/undertow/protocols/http2/Http2WindowUpdateParser."<init>":(I)V
     472: putfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     475: goto          523
     478: aload_0
     479: getfield      #10                 // Field streamId:I
     482: ifne          503
     485: new           #11                 // class io/undertow/protocols/http2/ConnectionErrorException
     488: dup
     489: iconst_1
     490: getstatic     #12                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     493: iconst_2
     494: invokeinterface #13,  2           // InterfaceMethod io/undertow/UndertowMessages.streamIdMustNotBeZeroForFrameType:(I)Ljava/lang/String;
     499: invokespecial #14                 // Method io/undertow/protocols/http2/ConnectionErrorException."<init>":(ILjava/lang/String;)V
     502: athrow
     503: aload_0
     504: new           #40                 // class io/undertow/protocols/http2/Http2PriorityParser
     507: dup
     508: aload_0
     509: getfield      #16                 // Field length:I
     512: invokespecial #41                 // Method io/undertow/protocols/http2/Http2PriorityParser."<init>":(I)V
     515: putfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     518: goto          523
     521: iconst_1
     522: ireturn
     523: aload_0
     524: getfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     527: aload_1
     528: aload_0
     529: invokevirtual #42                 // Method io/undertow/protocols/http2/Http2PushBackParser.parse:(Ljava/nio/ByteBuffer;Lio/undertow/protocols/http2/Http2FrameHeaderParser;)V
     532: aload_0
     533: getfield      #6                  // Field continuationParser:Lio/undertow/protocols/http2/Http2HeadersParser;
     536: ifnull        555
     539: aload_0
     540: getfield      #21                 // Field flags:I
     543: iconst_4
     544: invokestatic  #43                 // Method org/xnio/Bits.anyAreSet:(II)Z
     547: ifeq          555
     550: aload_0
     551: aconst_null
     552: putfield      #6                  // Field continuationParser:Lio/undertow/protocols/http2/Http2HeadersParser;
     555: aload_0
     556: getfield      #5                  // Field parser:Lio/undertow/protocols/http2/Http2PushBackParser;
     559: invokevirtual #44                 // Method io/undertow/protocols/http2/Http2PushBackParser.isFinished:()Z
     562: ireturn

  private boolean parseFrameHeader(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #4                  // Field read:I
       4: bipush        9
       6: if_icmpge     39
       9: aload_1
      10: invokevirtual #45                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      13: ifeq          39
      16: aload_0
      17: getfield      #3                  // Field header:[B
      20: aload_0
      21: dup
      22: getfield      #4                  // Field read:I
      25: dup_x1
      26: iconst_1
      27: iadd
      28: putfield      #4                  // Field read:I
      31: aload_1
      32: invokevirtual #46                 // Method java/nio/ByteBuffer.get:()B
      35: bastore
      36: goto          0
      39: aload_0
      40: getfield      #4                  // Field read:I
      43: bipush        9
      45: if_icmpeq     50
      48: iconst_0
      49: ireturn
      50: aload_0
      51: aload_0
      52: getfield      #3                  // Field header:[B
      55: iconst_0
      56: baload
      57: sipush        255
      60: iand
      61: bipush        16
      63: ishl
      64: putfield      #16                 // Field length:I
      67: aload_0
      68: dup
      69: getfield      #16                 // Field length:I
      72: aload_0
      73: getfield      #3                  // Field header:[B
      76: iconst_1
      77: baload
      78: sipush        255
      81: iand
      82: bipush        8
      84: ishl
      85: iadd
      86: putfield      #16                 // Field length:I
      89: aload_0
      90: dup
      91: getfield      #16                 // Field length:I
      94: aload_0
      95: getfield      #3                  // Field header:[B
      98: iconst_2
      99: baload
     100: sipush        255
     103: iand
     104: iadd
     105: putfield      #16                 // Field length:I
     108: aload_0
     109: aload_0
     110: getfield      #3                  // Field header:[B
     113: iconst_3
     114: baload
     115: sipush        255
     118: iand
     119: putfield      #9                  // Field type:I
     122: aload_0
     123: aload_0
     124: getfield      #3                  // Field header:[B
     127: iconst_4
     128: baload
     129: sipush        255
     132: iand
     133: putfield      #21                 // Field flags:I
     136: aload_0
     137: aload_0
     138: getfield      #3                  // Field header:[B
     141: iconst_5
     142: baload
     143: sipush        -129
     146: iand
     147: sipush        255
     150: iand
     151: bipush        24
     153: ishl
     154: putfield      #10                 // Field streamId:I
     157: aload_0
     158: dup
     159: getfield      #10                 // Field streamId:I
     162: aload_0
     163: getfield      #3                  // Field header:[B
     166: bipush        6
     168: baload
     169: sipush        255
     172: iand
     173: bipush        16
     175: ishl
     176: iadd
     177: putfield      #10                 // Field streamId:I
     180: aload_0
     181: dup
     182: getfield      #10                 // Field streamId:I
     185: aload_0
     186: getfield      #3                  // Field header:[B
     189: bipush        7
     191: baload
     192: sipush        255
     195: iand
     196: bipush        8
     198: ishl
     199: iadd
     200: putfield      #10                 // Field streamId:I
     203: aload_0
     204: dup
     205: getfield      #10                 // Field streamId:I
     208: aload_0
     209: getfield      #3                  // Field header:[B
     212: bipush        8
     214: baload
     215: sipush        255
     218: iand
     219: iadd
     220: putfield      #10                 // Field streamId:I
     223: iconst_1
     224: ireturn

  public long getFrameLength();
    Code:
       0: aload_0
       1: getfield      #9                  // Field type:I
       4: ifeq          9
       7: lconst_0
       8: lreturn
       9: aload_0
      10: getfield      #16                 // Field length:I
      13: i2l
      14: lreturn

  public io.undertow.server.protocol.framed.AbstractFramedStreamSourceChannel<?, ?, ?> getExistingChannel();
    Code:
       0: aload_0
       1: getfield      #9                  // Field type:I
       4: ifeq          24
       7: aload_0
       8: getfield      #9                  // Field type:I
      11: bipush        9
      13: if_icmpeq     24
      16: aload_0
      17: getfield      #9                  // Field type:I
      20: iconst_2
      21: if_icmpne     157
      24: aload_0
      25: getfield      #21                 // Field flags:I
      28: iconst_1
      29: invokestatic  #43                 // Method org/xnio/Bits.anyAreSet:(II)Z
      32: ifeq          58
      35: aload_0
      36: getfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
      39: invokevirtual #48                 // Method io/undertow/protocols/http2/Http2Channel.getIncomingStreams:()Ljava/util/Map;
      42: aload_0
      43: getfield      #10                 // Field streamId:I
      46: invokestatic  #49                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      49: invokeinterface #50,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      54: checkcast     #51                 // class io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel
      57: areturn
      58: aload_0
      59: getfield      #9                  // Field type:I
      62: bipush        9
      64: if_icmpne     134
      67: aload_0
      68: getfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
      71: invokevirtual #48                 // Method io/undertow/protocols/http2/Http2Channel.getIncomingStreams:()Ljava/util/Map;
      74: aload_0
      75: getfield      #10                 // Field streamId:I
      78: invokestatic  #49                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      81: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      86: checkcast     #53                 // class io/undertow/protocols/http2/Http2StreamSourceChannel
      89: astore_1
      90: aload_1
      91: ifnull        132
      94: aload_1
      95: invokevirtual #54                 // Method io/undertow/protocols/http2/Http2StreamSourceChannel.isHeadersEndStream:()Z
      98: ifeq          132
     101: aload_0
     102: getfield      #21                 // Field flags:I
     105: iconst_4
     106: invokestatic  #43                 // Method org/xnio/Bits.anyAreSet:(II)Z
     109: ifeq          132
     112: aload_0
     113: getfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
     116: invokevirtual #48                 // Method io/undertow/protocols/http2/Http2Channel.getIncomingStreams:()Ljava/util/Map;
     119: aload_0
     120: getfield      #10                 // Field streamId:I
     123: invokestatic  #49                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     126: invokeinterface #50,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     131: pop
     132: aload_1
     133: areturn
     134: aload_0
     135: getfield      #7                  // Field http2Channel:Lio/undertow/protocols/http2/Http2Channel;
     138: invokevirtual #48                 // Method io/undertow/protocols/http2/Http2Channel.getIncomingStreams:()Ljava/util/Map;
     141: aload_0
     142: getfield      #10                 // Field streamId:I
     145: invokestatic  #49                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     148: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     153: checkcast     #51                 // class io/undertow/server/protocol/framed/AbstractFramedStreamSourceChannel
     156: areturn
     157: aconst_null
     158: areturn

  public io.undertow.protocols.http2.Http2HeadersParser getContinuationParser();
    Code:
       0: aload_0
       1: getfield      #6                  // Field continuationParser:Lio/undertow/protocols/http2/Http2HeadersParser;
       4: areturn
}
