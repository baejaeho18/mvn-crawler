Compiled from "SecureExchangeAttribute.java"
public class io.undertow.attribute.SecureExchangeAttribute implements io.undertow.attribute.ExchangeAttribute {
  public static final java.lang.String TOKEN;

  public static final io.undertow.attribute.ExchangeAttribute INSTANCE;

  public io.undertow.attribute.SecureExchangeAttribute();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.String readAttribute(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method io/undertow/server/HttpServerExchange.getProtocol:()Lio/undertow/util/HttpString;
       4: ldc           #3                  // String https
       6: invokevirtual #4                  // Method io/undertow/util/HttpString.equals:(Ljava/lang/Object;)Z
       9: invokestatic  #5                  // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
      12: areturn

  public void writeAttribute(io.undertow.server.HttpServerExchange, java.lang.String) throws io.undertow.attribute.ReadOnlyAttributeException;
    Code:
       0: new           #6                  // class io/undertow/attribute/ReadOnlyAttributeException
       3: dup
       4: ldc           #7                  // String secure
       6: aload_2
       7: invokespecial #8                  // Method io/undertow/attribute/ReadOnlyAttributeException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      10: athrow

  static {};
    Code:
       0: new           #9                  // class io/undertow/attribute/SecureExchangeAttribute
       3: dup
       4: invokespecial #10                 // Method "<init>":()V
       7: putstatic     #11                 // Field INSTANCE:Lio/undertow/attribute/ExchangeAttribute;
      10: return
}
