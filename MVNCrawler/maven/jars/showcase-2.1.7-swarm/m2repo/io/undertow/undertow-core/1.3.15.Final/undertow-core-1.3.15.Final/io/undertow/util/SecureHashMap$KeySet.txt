Compiled from "SecureHashMap.java"
final class io.undertow.util.SecureHashMap$KeySet extends java.util.AbstractSet<K> implements java.util.Set<K> {
  final io.undertow.util.SecureHashMap this$0;

  io.undertow.util.SecureHashMap$KeySet(io.undertow.util.SecureHashMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
       5: aload_0
       6: invokespecial #2                  // Method java/util/AbstractSet."<init>":()V
       9: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
       4: invokevirtual #3                  // Method io/undertow/util/SecureHashMap.clear:()V
       7: return

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
       4: aload_1
       5: invokevirtual #4                  // Method io/undertow/util/SecureHashMap.containsKey:(Ljava/lang/Object;)Z
       8: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
       4: aload_1
       5: aload_0
       6: getfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
       9: invokestatic  #5                  // Method io/undertow/util/SecureHashMap.access$300:(Lio/undertow/util/SecureHashMap;)Lio/undertow/util/SecureHashMap$Table;
      12: invokestatic  #6                  // Method io/undertow/util/SecureHashMap.access$400:(Lio/undertow/util/SecureHashMap;Ljava/lang/Object;Lio/undertow/util/SecureHashMap$Table;)Ljava/lang/Object;
      15: invokestatic  #7                  // Method io/undertow/util/SecureHashMap.access$500:()Ljava/lang/Object;
      18: if_acmpeq     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public java.util.Iterator<K> iterator();
    Code:
       0: new           #8                  // class io/undertow/util/SecureHashMap$KeyIterator
       3: dup
       4: aload_0
       5: getfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
       8: invokespecial #9                  // Method io/undertow/util/SecureHashMap$KeyIterator."<init>":(Lio/undertow/util/SecureHashMap;)V
      11: areturn

  public java.lang.Object[] toArray();
    Code:
       0: new           #10                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: invokevirtual #11                 // Method size:()I
       8: invokespecial #12                 // Method java/util/ArrayList."<init>":(I)V
      11: astore_1
      12: aload_1
      13: aload_0
      14: invokevirtual #13                 // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      17: pop
      18: aload_1
      19: invokevirtual #14                 // Method java/util/ArrayList.toArray:()[Ljava/lang/Object;
      22: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: new           #10                 // class java/util/ArrayList
       3: dup
       4: invokespecial #15                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: invokevirtual #13                 // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
      13: pop
      14: aload_2
      15: aload_1
      16: invokevirtual #16                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      19: areturn

  public boolean add(K);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
       4: aload_1
       5: aconst_null
       6: iconst_1
       7: aload_0
       8: getfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
      11: invokestatic  #5                  // Method io/undertow/util/SecureHashMap.access$300:(Lio/undertow/util/SecureHashMap;)Lio/undertow/util/SecureHashMap$Table;
      14: invokestatic  #17                 // Method io/undertow/util/SecureHashMap.access$600:(Lio/undertow/util/SecureHashMap;Ljava/lang/Object;Ljava/lang/Object;ZLio/undertow/util/SecureHashMap$Table;)Ljava/lang/Object;
      17: invokestatic  #7                  // Method io/undertow/util/SecureHashMap.access$500:()Ljava/lang/Object;
      20: if_acmpne     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
       4: invokevirtual #18                 // Method io/undertow/util/SecureHashMap.size:()I
       7: ireturn
}
