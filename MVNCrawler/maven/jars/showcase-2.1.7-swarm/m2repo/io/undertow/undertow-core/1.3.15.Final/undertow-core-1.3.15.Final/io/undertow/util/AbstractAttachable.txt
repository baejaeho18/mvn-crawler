Compiled from "AbstractAttachable.java"
public abstract class io.undertow.util.AbstractAttachable implements io.undertow.util.Attachable {
  private java.util.Map<io.undertow.util.AttachmentKey<?>, java.lang.Object> attachments;

  public io.undertow.util.AbstractAttachable();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public <T> T getAttachment(io.undertow.util.AttachmentKey<T>);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_0
       5: getfield      #2                  // Field attachments:Ljava/util/Map;
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_0
      14: getfield      #2                  // Field attachments:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: areturn

  public <T> java.util.List<T> getAttachmentList(io.undertow.util.AttachmentKey<? extends java.util.List<T>>);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_0
       5: getfield      #2                  // Field attachments:Ljava/util/Map;
       8: ifnonnull     15
      11: invokestatic  #4                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      14: areturn
      15: aload_0
      16: getfield      #2                  // Field attachments:Ljava/util/Map;
      19: aload_1
      20: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #5                  // class java/util/List
      28: astore_2
      29: aload_2
      30: ifnonnull     37
      33: invokestatic  #4                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      36: areturn
      37: aload_2
      38: areturn

  public <T> T putAttachment(io.undertow.util.AttachmentKey<T>, T);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: getstatic     #6                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       7: ldc           #7                  // String key
       9: invokeinterface #8,  2            // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_0
      16: getfield      #2                  // Field attachments:Ljava/util/Map;
      19: ifnonnull     30
      22: aload_0
      23: aload_0
      24: invokevirtual #9                  // Method createAttachmentMap:()Ljava/util/Map;
      27: putfield      #2                  // Field attachments:Ljava/util/Map;
      30: aload_0
      31: getfield      #2                  // Field attachments:Ljava/util/Map;
      34: aload_1
      35: aload_2
      36: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: areturn

  protected java.util.Map<io.undertow.util.AttachmentKey<?>, java.lang.Object> createAttachmentMap();
    Code:
       0: new           #11                 // class java/util/IdentityHashMap
       3: dup
       4: iconst_5
       5: invokespecial #12                 // Method java/util/IdentityHashMap."<init>":(I)V
       8: areturn

  public <T> T removeAttachment(io.undertow.util.AttachmentKey<T>);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_0
       5: getfield      #2                  // Field attachments:Ljava/util/Map;
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_0
      14: getfield      #2                  // Field attachments:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #13,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      23: areturn

  public <T> void addToAttachmentList(io.undertow.util.AttachmentKey<io.undertow.util.AttachmentList<T>>, T);
    Code:
       0: aload_1
       1: ifnull        84
       4: aload_0
       5: getfield      #2                  // Field attachments:Ljava/util/Map;
       8: ifnonnull     19
      11: aload_0
      12: aload_0
      13: invokevirtual #9                  // Method createAttachmentMap:()Ljava/util/Map;
      16: putfield      #2                  // Field attachments:Ljava/util/Map;
      19: aload_0
      20: getfield      #2                  // Field attachments:Ljava/util/Map;
      23: astore_3
      24: aload_3
      25: aload_1
      26: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #14                 // class io/undertow/util/AttachmentList
      34: astore        4
      36: aload         4
      38: ifnonnull     77
      41: new           #14                 // class io/undertow/util/AttachmentList
      44: dup
      45: aload_1
      46: checkcast     #15                 // class io/undertow/util/ListAttachmentKey
      49: invokevirtual #16                 // Method io/undertow/util/ListAttachmentKey.getValueClass:()Ljava/lang/Class;
      52: invokespecial #17                 // Method io/undertow/util/AttachmentList."<init>":(Ljava/lang/Class;)V
      55: astore        5
      57: aload_3
      58: aload_1
      59: aload         5
      61: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      66: pop
      67: aload         5
      69: aload_2
      70: invokevirtual #18                 // Method io/undertow/util/AttachmentList.add:(Ljava/lang/Object;)Z
      73: pop
      74: goto          84
      77: aload         4
      79: aload_2
      80: invokevirtual #18                 // Method io/undertow/util/AttachmentList.add:(Ljava/lang/Object;)Z
      83: pop
      84: return
}
