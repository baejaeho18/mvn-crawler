Compiled from "PathResourceManager.java"
public class io.undertow.server.handlers.resource.PathResourceManager implements io.undertow.server.handlers.resource.ResourceManager {
  private final java.util.List<io.undertow.server.handlers.resource.ResourceChangeListener> listeners;

  private org.xnio.FileSystemWatcher fileSystemWatcher;

  protected volatile java.lang.String base;

  private final long transferMinSize;

  private final boolean caseSensitive;

  private final boolean followLinks;

  private final java.util.TreeSet<java.lang.String> safePaths;

  public io.undertow.server.handlers.resource.PathResourceManager(java.nio.file.Path, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: iconst_1
       4: iconst_0
       5: aconst_null
       6: invokespecial #2                  // Method "<init>":(Ljava/nio/file/Path;JZZ[Ljava/lang/String;)V
       9: return

  public io.undertow.server.handlers.resource.PathResourceManager(java.nio.file.Path, long, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: iload         4
       5: iconst_0
       6: aconst_null
       7: invokespecial #2                  // Method "<init>":(Ljava/nio/file/Path;JZZ[Ljava/lang/String;)V
      10: return

  public io.undertow.server.handlers.resource.PathResourceManager(java.nio.file.Path, long, boolean, java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: iconst_1
       4: iload         4
       6: aload         5
       8: invokespecial #2                  // Method "<init>":(Ljava/nio/file/Path;JZZ[Ljava/lang/String;)V
      11: return

  protected io.undertow.server.handlers.resource.PathResourceManager(long, boolean, boolean, java.lang.String...);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/ArrayList
       8: dup
       9: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #1                  // Field listeners:Ljava/util/List;
      15: aload_0
      16: new           #6                  // class java/util/TreeSet
      19: dup
      20: invokespecial #7                  // Method java/util/TreeSet."<init>":()V
      23: putfield      #8                  // Field safePaths:Ljava/util/TreeSet;
      26: aload_0
      27: iload_3
      28: putfield      #9                  // Field caseSensitive:Z
      31: aload_0
      32: iload         4
      34: putfield      #10                 // Field followLinks:Z
      37: aload_0
      38: lload_1
      39: putfield      #11                 // Field transferMinSize:J
      42: aload_0
      43: getfield      #10                 // Field followLinks:Z
      46: ifeq          126
      49: aload         5
      51: ifnonnull     65
      54: getstatic     #12                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      57: ldc           #13                 // String safePaths
      59: invokeinterface #14,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      64: athrow
      65: aload         5
      67: astore        6
      69: aload         6
      71: arraylength
      72: istore        7
      74: iconst_0
      75: istore        8
      77: iload         8
      79: iload         7
      81: if_icmpge     113
      84: aload         6
      86: iload         8
      88: aaload
      89: astore        9
      91: aload         9
      93: ifnonnull     107
      96: getstatic     #12                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      99: ldc           #13                 // String safePaths
     101: invokeinterface #14,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     106: athrow
     107: iinc          8, 1
     110: goto          77
     113: aload_0
     114: getfield      #8                  // Field safePaths:Ljava/util/TreeSet;
     117: aload         5
     119: invokestatic  #15                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     122: invokevirtual #16                 // Method java/util/TreeSet.addAll:(Ljava/util/Collection;)Z
     125: pop
     126: return

  public io.undertow.server.handlers.resource.PathResourceManager(java.nio.file.Path, long, boolean, boolean, java.lang.String...);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/ArrayList
       8: dup
       9: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #1                  // Field listeners:Ljava/util/List;
      15: aload_0
      16: new           #6                  // class java/util/TreeSet
      19: dup
      20: invokespecial #7                  // Method java/util/TreeSet."<init>":()V
      23: putfield      #8                  // Field safePaths:Ljava/util/TreeSet;
      26: aload_1
      27: ifnonnull     41
      30: getstatic     #12                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      33: ldc           #17                 // String base
      35: invokeinterface #14,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      40: athrow
      41: aload_1
      42: invokeinterface #18,  1           // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;
      47: invokeinterface #19,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      52: astore        7
      54: aload         7
      56: ldc           #20                 // String /
      58: invokevirtual #21                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      61: ifne          86
      64: new           #22                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      71: aload         7
      73: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: bipush        47
      78: invokevirtual #25                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      81: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: astore        7
      86: aload_0
      87: aload         7
      89: putfield      #27                 // Field base:Ljava/lang/String;
      92: aload_0
      93: lload_2
      94: putfield      #11                 // Field transferMinSize:J
      97: aload_0
      98: iload         4
     100: putfield      #9                  // Field caseSensitive:Z
     103: aload_0
     104: iload         5
     106: putfield      #10                 // Field followLinks:Z
     109: aload_0
     110: getfield      #10                 // Field followLinks:Z
     113: ifeq          193
     116: aload         6
     118: ifnonnull     132
     121: getstatic     #12                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     124: ldc           #13                 // String safePaths
     126: invokeinterface #14,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     131: athrow
     132: aload         6
     134: astore        8
     136: aload         8
     138: arraylength
     139: istore        9
     141: iconst_0
     142: istore        10
     144: iload         10
     146: iload         9
     148: if_icmpge     180
     151: aload         8
     153: iload         10
     155: aaload
     156: astore        11
     158: aload         11
     160: ifnonnull     174
     163: getstatic     #12                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     166: ldc           #13                 // String safePaths
     168: invokeinterface #14,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     173: athrow
     174: iinc          10, 1
     177: goto          144
     180: aload_0
     181: getfield      #8                  // Field safePaths:Ljava/util/TreeSet;
     184: aload         6
     186: invokestatic  #15                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     189: invokevirtual #16                 // Method java/util/TreeSet.addAll:(Ljava/util/Collection;)Z
     192: pop
     193: return

  public java.nio.file.Path getBasePath();
    Code:
       0: aload_0
       1: getfield      #27                 // Field base:Ljava/lang/String;
       4: iconst_0
       5: anewarray     #28                 // class java/lang/String
       8: invokestatic  #29                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      11: areturn

  public io.undertow.server.handlers.resource.PathResourceManager setBase(java.nio.file.Path);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: getstatic     #12                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       7: ldc           #17                 // String base
       9: invokeinterface #14,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_1
      16: invokeinterface #18,  1           // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;
      21: invokeinterface #19,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      26: astore_2
      27: aload_2
      28: ldc           #20                 // String /
      30: invokevirtual #21                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      33: ifne          56
      36: new           #22                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      43: aload_2
      44: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: bipush        47
      49: invokevirtual #25                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      52: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: astore_2
      56: aload_0
      57: aload_2
      58: putfield      #27                 // Field base:Ljava/lang/String;
      61: aload_0
      62: areturn

  public io.undertow.server.handlers.resource.PathResourceManager setBase(java.io.File);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: getstatic     #12                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       7: ldc           #17                 // String base
       9: invokeinterface #14,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      14: athrow
      15: aload_1
      16: invokevirtual #30                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      19: astore_2
      20: aload_2
      21: ldc           #20                 // String /
      23: invokevirtual #21                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      26: ifne          49
      29: new           #22                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      36: aload_2
      37: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: bipush        47
      42: invokevirtual #25                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      45: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: astore_2
      49: aload_0
      50: aload_2
      51: putfield      #27                 // Field base:Ljava/lang/String;
      54: aload_0
      55: areturn

  public io.undertow.server.handlers.resource.Resource getResource(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #20                 // String /
       3: invokevirtual #31                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          18
       9: aload_1
      10: iconst_1
      11: invokevirtual #32                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      14: astore_2
      15: goto          20
      18: aload_1
      19: astore_2
      20: aload_0
      21: getfield      #27                 // Field base:Ljava/lang/String;
      24: iconst_1
      25: anewarray     #28                 // class java/lang/String
      28: dup
      29: iconst_0
      30: aload_2
      31: aastore
      32: invokestatic  #29                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      35: astore_3
      36: aload_3
      37: iconst_0
      38: anewarray     #33                 // class java/nio/file/LinkOption
      41: invokestatic  #34                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      44: ifeq          170
      47: aload_2
      48: ldc           #20                 // String /
      50: invokevirtual #21                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      53: ifeq          69
      56: aload_3
      57: iconst_0
      58: anewarray     #33                 // class java/nio/file/LinkOption
      61: invokestatic  #35                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      64: ifne          69
      67: aconst_null
      68: areturn
      69: aload_0
      70: getfield      #10                 // Field followLinks:Z
      73: ifeq          90
      76: aload_0
      77: getfield      #8                  // Field safePaths:Ljava/util/TreeSet;
      80: invokevirtual #36                 // Method java/util/TreeSet.isEmpty:()Z
      83: ifeq          90
      86: iconst_1
      87: goto          91
      90: iconst_0
      91: istore        4
      93: aload_0
      94: aload_0
      95: getfield      #27                 // Field base:Ljava/lang/String;
      98: aload_3
      99: invokespecial #37                 // Method getSymlinkBase:(Ljava/lang/String;Ljava/nio/file/Path;)Lio/undertow/server/handlers/resource/PathResourceManager$SymlinkResult;
     102: astore        5
     104: iload         4
     106: ifne          149
     109: aload         5
     111: ifnull        149
     114: aload         5
     116: getfield      #38                 // Field io/undertow/server/handlers/resource/PathResourceManager$SymlinkResult.requiresCheck:Z
     119: ifeq          149
     122: aload_0
     123: getfield      #10                 // Field followLinks:Z
     126: ifeq          170
     129: aload_0
     130: aload_3
     131: invokespecial #39                 // Method isSymlinkSafe:(Ljava/nio/file/Path;)Z
     134: ifeq          170
     137: aload_0
     138: aload_3
     139: aload_2
     140: aload         5
     142: getfield      #40                 // Field io/undertow/server/handlers/resource/PathResourceManager$SymlinkResult.path:Ljava/nio/file/Path;
     145: invokevirtual #41                 // Method getFileResource:(Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)Lio/undertow/server/handlers/resource/PathResource;
     148: areturn
     149: aload_0
     150: aload_3
     151: aload_2
     152: aload         5
     154: ifnonnull     161
     157: aconst_null
     158: goto          166
     161: aload         5
     163: getfield      #40                 // Field io/undertow/server/handlers/resource/PathResourceManager$SymlinkResult.path:Ljava/nio/file/Path;
     166: invokevirtual #41                 // Method getFileResource:(Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)Lio/undertow/server/handlers/resource/PathResource;
     169: areturn
     170: aconst_null
     171: areturn
     172: astore_3
     173: getstatic     #43                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     176: aload_3
     177: ldc           #44                 // String Invalid path %s
     179: iconst_0
     180: anewarray     #45                 // class java/lang/Object
     183: invokeinterface #46,  4           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V
     188: aconst_null
     189: areturn
    Exception table:
       from    to  target type
          20    68   172   Class java/lang/Exception
          69   148   172   Class java/lang/Exception
         149   169   172   Class java/lang/Exception
         170   171   172   Class java/lang/Exception

  public boolean isResourceChangeListenerSupported();
    Code:
       0: iconst_1
       1: ireturn

  public synchronized void registerResourceChangeListener(io.undertow.server.handlers.resource.ResourceChangeListener);
    Code:
       0: aload_0
       1: getfield      #1                  // Field listeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #47,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #48                 // Field fileSystemWatcher:Lorg/xnio/FileSystemWatcher;
      15: ifnonnull     81
      18: aload_0
      19: invokestatic  #49                 // Method org/xnio/Xnio.getInstance:()Lorg/xnio/Xnio;
      22: new           #22                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #50                 // String Watcher for
      31: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #27                 // Field base:Ljava/lang/String;
      38: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: getstatic     #51                 // Field org/xnio/OptionMap.EMPTY:Lorg/xnio/OptionMap;
      47: invokevirtual #52                 // Method org/xnio/Xnio.createFileSystemWatcher:(Ljava/lang/String;Lorg/xnio/OptionMap;)Lorg/xnio/FileSystemWatcher;
      50: putfield      #48                 // Field fileSystemWatcher:Lorg/xnio/FileSystemWatcher;
      53: aload_0
      54: getfield      #48                 // Field fileSystemWatcher:Lorg/xnio/FileSystemWatcher;
      57: new           #53                 // class java/io/File
      60: dup
      61: aload_0
      62: getfield      #27                 // Field base:Ljava/lang/String;
      65: invokespecial #54                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      68: new           #55                 // class io/undertow/server/handlers/resource/PathResourceManager$1
      71: dup
      72: aload_0
      73: invokespecial #56                 // Method io/undertow/server/handlers/resource/PathResourceManager$1."<init>":(Lio/undertow/server/handlers/resource/PathResourceManager;)V
      76: invokeinterface #57,  3           // InterfaceMethod org/xnio/FileSystemWatcher.watchPath:(Ljava/io/File;Lorg/xnio/FileChangeCallback;)V
      81: return

  public synchronized void removeResourceChangeListener(io.undertow.server.handlers.resource.ResourceChangeListener);
    Code:
       0: aload_0
       1: getfield      #1                  // Field listeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #58,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public long getTransferMinSize();
    Code:
       0: aload_0
       1: getfield      #11                 // Field transferMinSize:J
       4: lreturn

  public synchronized void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #48                 // Field fileSystemWatcher:Lorg/xnio/FileSystemWatcher;
       4: ifnull        16
       7: aload_0
       8: getfield      #48                 // Field fileSystemWatcher:Lorg/xnio/FileSystemWatcher;
      11: invokeinterface #59,  1           // InterfaceMethod org/xnio/FileSystemWatcher.close:()V
      16: return

  private io.undertow.server.handlers.resource.PathResourceManager$SymlinkResult getSymlinkBase(java.lang.String, java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokeinterface #60,  1           // InterfaceMethod java/nio/file/Path.getNameCount:()I
       6: istore_3
       7: aload_1
       8: iconst_0
       9: anewarray     #28                 // class java/lang/String
      12: invokestatic  #29                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      15: astore        4
      17: aload         4
      19: invokeinterface #60,  1           // InterfaceMethod java/nio/file/Path.getNameCount:()I
      24: istore        5
      26: aload_2
      27: astore        6
      29: iload_3
      30: iconst_1
      31: isub
      32: istore        7
      34: iload         7
      36: iflt          87
      39: aload         6
      41: invokestatic  #61                 // Method java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z
      44: ifeq          72
      47: new           #62                 // class io/undertow/server/handlers/resource/PathResourceManager$SymlinkResult
      50: dup
      51: iload         7
      53: iconst_1
      54: iadd
      55: iload         5
      57: if_icmple     64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: aload         6
      67: aconst_null
      68: invokespecial #63                 // Method io/undertow/server/handlers/resource/PathResourceManager$SymlinkResult."<init>":(ZLjava/nio/file/Path;Lio/undertow/server/handlers/resource/PathResourceManager$1;)V
      71: areturn
      72: aload         6
      74: invokeinterface #64,  1           // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;
      79: astore        6
      81: iinc          7, -1
      84: goto          34
      87: aconst_null
      88: areturn

  private boolean isFileSameCase(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: iconst_0
       2: anewarray     #33                 // class java/nio/file/LinkOption
       5: invokeinterface #65,  2           // InterfaceMethod java/nio/file/Path.toRealPath:([Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
      10: invokeinterface #19,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      15: astore_2
      16: aload_2
      17: aload_1
      18: invokeinterface #66,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
      23: invokeinterface #19,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      28: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      31: ireturn

  private boolean isSymlinkSafe(java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_1
       1: iconst_0
       2: anewarray     #33                 // class java/nio/file/LinkOption
       5: invokeinterface #65,  2           // InterfaceMethod java/nio/file/Path.toRealPath:([Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
      10: invokeinterface #19,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      15: astore_2
      16: aload_0
      17: getfield      #8                  // Field safePaths:Ljava/util/TreeSet;
      20: invokevirtual #68                 // Method java/util/TreeSet.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          186
      33: aload_3
      34: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #28                 // class java/lang/String
      42: astore        4
      44: aload         4
      46: invokevirtual #71                 // Method java/lang/String.length:()I
      49: ifle          183
      52: aload         4
      54: iconst_0
      55: invokevirtual #72                 // Method java/lang/String.charAt:(I)C
      58: bipush        47
      60: if_icmpne     94
      63: aload         4
      65: invokevirtual #71                 // Method java/lang/String.length:()I
      68: ifle          183
      71: aload_2
      72: invokevirtual #71                 // Method java/lang/String.length:()I
      75: aload         4
      77: invokevirtual #71                 // Method java/lang/String.length:()I
      80: if_icmplt     183
      83: aload_2
      84: aload         4
      86: invokevirtual #31                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      89: ifeq          183
      92: iconst_1
      93: ireturn
      94: new           #22                 // class java/lang/StringBuilder
      97: dup
      98: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     101: aload_0
     102: getfield      #27                 // Field base:Ljava/lang/String;
     105: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: bipush        47
     110: invokevirtual #25                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     113: aload         4
     115: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: astore        5
     123: aload         5
     125: iconst_0
     126: anewarray     #28                 // class java/lang/String
     129: invokestatic  #29                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
     132: astore        6
     134: aload         6
     136: iconst_0
     137: anewarray     #33                 // class java/nio/file/LinkOption
     140: invokeinterface #65,  2           // InterfaceMethod java/nio/file/Path.toRealPath:([Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
     145: invokeinterface #19,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
     150: astore        7
     152: aload         7
     154: invokevirtual #71                 // Method java/lang/String.length:()I
     157: ifle          183
     160: aload_2
     161: invokevirtual #71                 // Method java/lang/String.length:()I
     164: aload         7
     166: invokevirtual #71                 // Method java/lang/String.length:()I
     169: if_icmplt     183
     172: aload_2
     173: aload         7
     175: invokevirtual #31                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     178: ifeq          183
     181: iconst_1
     182: ireturn
     183: goto          24
     186: iconst_0
     187: ireturn

  protected io.undertow.server.handlers.resource.PathResource getFileResource(java.nio.file.Path, java.lang.String, java.nio.file.Path) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field caseSensitive:Z
       4: ifeq          163
       7: aload_3
       8: ifnull        142
      11: aload_3
      12: aload_1
      13: invokeinterface #73,  2           // InterfaceMethod java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
      18: invokeinterface #19,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      23: astore        4
      25: aload_1
      26: iconst_0
      27: anewarray     #33                 // class java/nio/file/LinkOption
      30: invokeinterface #65,  2           // InterfaceMethod java/nio/file/Path.toRealPath:([Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
      35: invokeinterface #19,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      40: astore        5
      42: aload_3
      43: iconst_0
      44: anewarray     #33                 // class java/nio/file/LinkOption
      47: invokeinterface #65,  2           // InterfaceMethod java/nio/file/Path.toRealPath:([Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
      52: invokeinterface #19,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      57: astore        6
      59: aload         5
      61: aload         6
      63: invokevirtual #31                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      66: ifne          71
      69: aconst_null
      70: areturn
      71: aload         5
      73: aload         6
      75: invokevirtual #71                 // Method java/lang/String.length:()I
      78: invokevirtual #32                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      81: astore        7
      83: aload         7
      85: ldc           #20                 // String /
      87: invokevirtual #31                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      90: ifeq          101
      93: aload         7
      95: iconst_1
      96: invokevirtual #32                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      99: astore        7
     101: aload         4
     103: ldc           #20                 // String /
     105: invokevirtual #31                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     108: ifeq          119
     111: aload         4
     113: iconst_1
     114: invokevirtual #32                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     117: astore        4
     119: aload         4
     121: aload         7
     123: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     126: ifeq          140
     129: new           #74                 // class io/undertow/server/handlers/resource/PathResource
     132: dup
     133: aload_1
     134: aload_0
     135: aload_2
     136: invokespecial #75                 // Method io/undertow/server/handlers/resource/PathResource."<init>":(Ljava/nio/file/Path;Lio/undertow/server/handlers/resource/PathResourceManager;Ljava/lang/String;)V
     139: areturn
     140: aconst_null
     141: areturn
     142: aload_0
     143: aload_1
     144: invokespecial #76                 // Method isFileSameCase:(Ljava/nio/file/Path;)Z
     147: ifeq          161
     150: new           #74                 // class io/undertow/server/handlers/resource/PathResource
     153: dup
     154: aload_1
     155: aload_0
     156: aload_2
     157: invokespecial #75                 // Method io/undertow/server/handlers/resource/PathResource."<init>":(Ljava/nio/file/Path;Lio/undertow/server/handlers/resource/PathResourceManager;Ljava/lang/String;)V
     160: areturn
     161: aconst_null
     162: areturn
     163: new           #74                 // class io/undertow/server/handlers/resource/PathResource
     166: dup
     167: aload_1
     168: aload_0
     169: aload_2
     170: invokespecial #75                 // Method io/undertow/server/handlers/resource/PathResource."<init>":(Ljava/nio/file/Path;Lio/undertow/server/handlers/resource/PathResourceManager;Ljava/lang/String;)V
     173: areturn

  static java.util.List access$000(io.undertow.server.handlers.resource.PathResourceManager);
    Code:
       0: aload_0
       1: getfield      #1                  // Field listeners:Ljava/util/List;
       4: areturn
}
