Compiled from "URLResource.java"
class io.undertow.server.handlers.resource.URLResource$1ServerTask implements java.lang.Runnable,io.undertow.io.IoCallback {
  private java.io.InputStream inputStream;

  private byte[] buffer;

  long toSkip;

  long remaining;

  final long val$start;

  final long val$end;

  final boolean val$range;

  final io.undertow.io.IoCallback val$completionCallback;

  final io.undertow.server.HttpServerExchange val$exchange;

  final io.undertow.io.Sender val$sender;

  final io.undertow.server.handlers.resource.URLResource this$0;

  io.undertow.server.handlers.resource.URLResource$1ServerTask();
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/server/handlers/resource/URLResource;
       5: aload_0
       6: lload_2
       7: putfield      #2                  // Field val$start:J
      10: aload_0
      11: lload         4
      13: putfield      #3                  // Field val$end:J
      16: aload_0
      17: iload         6
      19: putfield      #4                  // Field val$range:Z
      22: aload_0
      23: aload         7
      25: putfield      #5                  // Field val$completionCallback:Lio/undertow/io/IoCallback;
      28: aload_0
      29: aload         8
      31: putfield      #6                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
      34: aload_0
      35: aload         9
      37: putfield      #7                  // Field val$sender:Lio/undertow/io/Sender;
      40: aload_0
      41: invokespecial #8                  // Method java/lang/Object."<init>":()V
      44: aload_0
      45: aload_0
      46: getfield      #2                  // Field val$start:J
      49: putfield      #9                  // Field toSkip:J
      52: aload_0
      53: aload_0
      54: getfield      #3                  // Field val$end:J
      57: aload_0
      58: getfield      #2                  // Field val$start:J
      61: lsub
      62: lconst_1
      63: ladd
      64: putfield      #10                 // Field remaining:J
      67: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #4                  // Field val$range:Z
       4: ifeq          41
       7: aload_0
       8: getfield      #10                 // Field remaining:J
      11: lconst_0
      12: lcmp
      13: ifne          41
      16: aload_0
      17: getfield      #11                 // Field inputStream:Ljava/io/InputStream;
      20: invokestatic  #12                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      23: aload_0
      24: getfield      #5                  // Field val$completionCallback:Lio/undertow/io/IoCallback;
      27: aload_0
      28: getfield      #6                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
      31: aload_0
      32: getfield      #7                  // Field val$sender:Lio/undertow/io/Sender;
      35: invokeinterface #13,  3           // InterfaceMethod io/undertow/io/IoCallback.onComplete:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;)V
      40: return
      41: aload_0
      42: getfield      #11                 // Field inputStream:Ljava/io/InputStream;
      45: ifnonnull     87
      48: aload_0
      49: aload_0
      50: getfield      #1                  // Field this$0:Lio/undertow/server/handlers/resource/URLResource;
      53: invokestatic  #14                 // Method io/undertow/server/handlers/resource/URLResource.access$000:(Lio/undertow/server/handlers/resource/URLResource;)Ljava/net/URL;
      56: invokevirtual #15                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
      59: putfield      #11                 // Field inputStream:Ljava/io/InputStream;
      62: goto          78
      65: astore_1
      66: aload_0
      67: getfield      #6                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
      70: sipush        500
      73: invokevirtual #18                 // Method io/undertow/server/HttpServerExchange.setStatusCode:(I)Lio/undertow/server/HttpServerExchange;
      76: pop
      77: return
      78: aload_0
      79: sipush        1024
      82: newarray       byte
      84: putfield      #19                 // Field buffer:[B
      87: aload_0
      88: getfield      #11                 // Field inputStream:Ljava/io/InputStream;
      91: aload_0
      92: getfield      #19                 // Field buffer:[B
      95: invokevirtual #20                 // Method java/io/InputStream.read:([B)I
      98: istore_1
      99: iload_1
     100: iconst_m1
     101: if_icmpne     129
     104: aload_0
     105: getfield      #11                 // Field inputStream:Ljava/io/InputStream;
     108: invokestatic  #12                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     111: aload_0
     112: getfield      #5                  // Field val$completionCallback:Lio/undertow/io/IoCallback;
     115: aload_0
     116: getfield      #6                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
     119: aload_0
     120: getfield      #7                  // Field val$sender:Lio/undertow/io/Sender;
     123: invokeinterface #13,  3           // InterfaceMethod io/undertow/io/IoCallback.onComplete:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;)V
     128: return
     129: iconst_0
     130: istore_2
     131: iload_1
     132: istore_3
     133: aload_0
     134: getfield      #4                  // Field val$range:Z
     137: ifeq          232
     140: aload_0
     141: getfield      #9                  // Field toSkip:J
     144: lconst_0
     145: lcmp
     146: ifle          232
     149: aload_0
     150: getfield      #9                  // Field toSkip:J
     153: iload_1
     154: i2l
     155: lcmp
     156: ifle          212
     159: aload_0
     160: dup
     161: getfield      #9                  // Field toSkip:J
     164: iload_1
     165: i2l
     166: lsub
     167: putfield      #9                  // Field toSkip:J
     170: aload_0
     171: getfield      #11                 // Field inputStream:Ljava/io/InputStream;
     174: aload_0
     175: getfield      #19                 // Field buffer:[B
     178: invokevirtual #20                 // Method java/io/InputStream.read:([B)I
     181: istore_1
     182: iload_1
     183: iconst_m1
     184: if_icmpne     149
     187: aload_0
     188: getfield      #11                 // Field inputStream:Ljava/io/InputStream;
     191: invokestatic  #12                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     194: aload_0
     195: getfield      #5                  // Field val$completionCallback:Lio/undertow/io/IoCallback;
     198: aload_0
     199: getfield      #6                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
     202: aload_0
     203: getfield      #7                  // Field val$sender:Lio/undertow/io/Sender;
     206: invokeinterface #13,  3           // InterfaceMethod io/undertow/io/IoCallback.onComplete:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;)V
     211: return
     212: aload_0
     213: getfield      #9                  // Field toSkip:J
     216: l2i
     217: istore_2
     218: iload_3
     219: i2l
     220: aload_0
     221: getfield      #9                  // Field toSkip:J
     224: lsub
     225: l2i
     226: istore_3
     227: aload_0
     228: lconst_0
     229: putfield      #9                  // Field toSkip:J
     232: aload_0
     233: getfield      #4                  // Field val$range:Z
     236: ifeq          255
     239: iload_3
     240: i2l
     241: aload_0
     242: getfield      #10                 // Field remaining:J
     245: lcmp
     246: ifle          255
     249: aload_0
     250: getfield      #10                 // Field remaining:J
     253: l2i
     254: istore_3
     255: aload_0
     256: getfield      #7                  // Field val$sender:Lio/undertow/io/Sender;
     259: aload_0
     260: getfield      #19                 // Field buffer:[B
     263: iload_2
     264: iload_3
     265: invokestatic  #21                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
     268: aload_0
     269: invokeinterface #22,  3           // InterfaceMethod io/undertow/io/Sender.send:(Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)V
     274: goto          291
     277: astore_1
     278: aload_0
     279: aload_0
     280: getfield      #6                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
     283: aload_0
     284: getfield      #7                  // Field val$sender:Lio/undertow/io/Sender;
     287: aload_1
     288: invokevirtual #23                 // Method onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
     291: return
    Exception table:
       from    to  target type
          48    62    65   Class java/io/IOException
          87   128   277   Class java/io/IOException
         129   211   277   Class java/io/IOException
         212   274   277   Class java/io/IOException

  public void onComplete(io.undertow.server.HttpServerExchange, io.undertow.io.Sender);
    Code:
       0: aload_1
       1: invokevirtual #24                 // Method io/undertow/server/HttpServerExchange.isInIoThread:()Z
       4: ifeq          16
       7: aload_1
       8: aload_0
       9: invokevirtual #25                 // Method io/undertow/server/HttpServerExchange.dispatch:(Ljava/lang/Runnable;)Lio/undertow/server/HttpServerExchange;
      12: pop
      13: goto          20
      16: aload_0
      17: invokevirtual #26                 // Method run:()V
      20: return

  public void onException(io.undertow.server.HttpServerExchange, io.undertow.io.Sender, java.io.IOException);
    Code:
       0: getstatic     #27                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
       3: aload_3
       4: invokeinterface #28,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
       9: aload_0
      10: getfield      #11                 // Field inputStream:Ljava/io/InputStream;
      13: invokestatic  #12                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      16: aload_1
      17: invokevirtual #29                 // Method io/undertow/server/HttpServerExchange.isResponseStarted:()Z
      20: ifne          31
      23: aload_1
      24: sipush        500
      27: invokevirtual #18                 // Method io/undertow/server/HttpServerExchange.setStatusCode:(I)Lio/undertow/server/HttpServerExchange;
      30: pop
      31: aload_0
      32: getfield      #5                  // Field val$completionCallback:Lio/undertow/io/IoCallback;
      35: aload_1
      36: aload_2
      37: aload_3
      38: invokeinterface #30,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
      43: return
}
