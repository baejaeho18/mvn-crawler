Compiled from "HttpContinue.java"
final class io.undertow.server.protocol.http.HttpContinue$4 implements org.xnio.ChannelExceptionHandler<java.nio.channels.Channel> {
  final io.undertow.server.HttpServerExchange val$exchange;

  final io.undertow.io.IoCallback val$callback;

  io.undertow.server.protocol.http.HttpContinue$4(io.undertow.server.HttpServerExchange, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$callback:Lio/undertow/io/IoCallback;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void handleException(java.nio.channels.Channel, java.io.IOException);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$exchange:Lio/undertow/server/HttpServerExchange;
       4: new           #4                  // class io/undertow/server/protocol/http/HttpContinue$4$1
       7: dup
       8: aload_0
       9: aload_2
      10: invokespecial #5                  // Method io/undertow/server/protocol/http/HttpContinue$4$1."<init>":(Lio/undertow/server/protocol/http/HttpContinue$4;Ljava/io/IOException;)V
      13: invokevirtual #6                  // Method io/undertow/server/HttpServerExchange.dispatch:(Lio/undertow/server/HttpHandler;)Lio/undertow/server/HttpServerExchange;
      16: pop
      17: return
}
