Compiled from "SecureHashMap.java"
final class io.undertow.util.SecureHashMap$RowIterator extends io.undertow.util.SecureHashMap<K, V>.TableIterator {
  private final io.undertow.util.SecureHashMap$Table<K, V> table;

  final io.undertow.util.SecureHashMap$Item<K, V>[] row;

  private int idx;

  private io.undertow.util.SecureHashMap$Item<K, V> next;

  private io.undertow.util.SecureHashMap$Item<K, V> remove;

  final io.undertow.util.SecureHashMap this$0;

  io.undertow.util.SecureHashMap$RowIterator(io.undertow.util.SecureHashMap$Table<K, V>, io.undertow.util.SecureHashMap$Item<K, V>[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
       5: aload_0
       6: aload_1
       7: invokespecial #2                  // Method io/undertow/util/SecureHashMap$TableIterator."<init>":(Lio/undertow/util/SecureHashMap;)V
      10: aload_0
      11: aload_2
      12: putfield      #3                  // Field table:Lio/undertow/util/SecureHashMap$Table;
      15: aload_0
      16: aload_3
      17: putfield      #4                  // Field row:[Lio/undertow/util/SecureHashMap$Item;
      20: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #5                  // Field next:Lio/undertow/util/SecureHashMap$Item;
       4: ifnonnull     44
       7: aload_0
       8: getfield      #4                  // Field row:[Lio/undertow/util/SecureHashMap$Item;
      11: astore_1
      12: aload_1
      13: ifnull        25
      16: aload_0
      17: getfield      #6                  // Field idx:I
      20: aload_1
      21: arraylength
      22: if_icmpne     27
      25: iconst_0
      26: ireturn
      27: aload_0
      28: aload_1
      29: aload_0
      30: dup
      31: getfield      #6                  // Field idx:I
      34: dup_x1
      35: iconst_1
      36: iadd
      37: putfield      #6                  // Field idx:I
      40: aaload
      41: putfield      #5                  // Field next:Lio/undertow/util/SecureHashMap$Item;
      44: iconst_1
      45: ireturn

  V nextValue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field next:Lio/undertow/util/SecureHashMap$Item;
       4: ifnonnull     46
       7: aload_0
       8: getfield      #4                  // Field row:[Lio/undertow/util/SecureHashMap$Item;
      11: astore_2
      12: aload_2
      13: ifnull        25
      16: aload_0
      17: getfield      #6                  // Field idx:I
      20: aload_2
      21: arraylength
      22: if_icmpne     29
      25: invokestatic  #7                  // Method io/undertow/util/SecureHashMap.access$900:()Ljava/lang/Object;
      28: areturn
      29: aload_0
      30: aload_2
      31: aload_0
      32: dup
      33: getfield      #6                  // Field idx:I
      36: dup_x1
      37: iconst_1
      38: iadd
      39: putfield      #6                  // Field idx:I
      42: aaload
      43: putfield      #5                  // Field next:Lio/undertow/util/SecureHashMap$Item;
      46: aload_0
      47: getfield      #5                  // Field next:Lio/undertow/util/SecureHashMap$Item;
      50: getfield      #8                  // Field io/undertow/util/SecureHashMap$Item.value:Ljava/lang/Object;
      53: astore_1
      54: aload_1
      55: invokestatic  #9                  // Method io/undertow/util/SecureHashMap.access$500:()Ljava/lang/Object;
      58: if_acmpeq     0
      61: aload_0
      62: aconst_null
      63: putfield      #5                  // Field next:Lio/undertow/util/SecureHashMap$Item;
      66: aload_1
      67: areturn

  public io.undertow.util.SecureHashMap$Item<K, V> next();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method hasNext:()Z
       4: ifeq          43
       7: aload_0
       8: getfield      #5                  // Field next:Lio/undertow/util/SecureHashMap$Item;
      11: astore_1
      12: aload_0
      13: aload_0
      14: getfield      #5                  // Field next:Lio/undertow/util/SecureHashMap$Item;
      17: putfield      #11                 // Field remove:Lio/undertow/util/SecureHashMap$Item;
      20: aload_0
      21: aconst_null
      22: putfield      #5                  // Field next:Lio/undertow/util/SecureHashMap$Item;
      25: aload_1
      26: areturn
      27: astore_2
      28: aload_0
      29: aload_0
      30: getfield      #5                  // Field next:Lio/undertow/util/SecureHashMap$Item;
      33: putfield      #11                 // Field remove:Lio/undertow/util/SecureHashMap$Item;
      36: aload_0
      37: aconst_null
      38: putfield      #5                  // Field next:Lio/undertow/util/SecureHashMap$Item;
      41: aload_2
      42: athrow
      43: new           #12                 // class java/util/NoSuchElementException
      46: dup
      47: invokespecial #13                 // Method java/util/NoSuchElementException."<init>":()V
      50: athrow
    Exception table:
       from    to  target type
           7    12    27   any

  public void remove();
    Code:
       0: aload_0
       1: getfield      #11                 // Field remove:Lio/undertow/util/SecureHashMap$Item;
       4: astore_1
       5: aload_1
       6: ifnonnull     19
       9: new           #14                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #15                 // String next() not yet called
      15: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: invokestatic  #17                 // Method io/undertow/util/SecureHashMap.access$1000:()Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      22: aload_1
      23: invokestatic  #9                  // Method io/undertow/util/SecureHashMap.access$500:()Ljava/lang/Object;
      26: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: invokestatic  #9                  // Method io/undertow/util/SecureHashMap.access$500:()Ljava/lang/Object;
      32: if_acmpne     36
      35: return
      36: aload_0
      37: aconst_null
      38: putfield      #11                 // Field remove:Lio/undertow/util/SecureHashMap$Item;
      41: aload_0
      42: getfield      #1                  // Field this$0:Lio/undertow/util/SecureHashMap;
      45: aload_1
      46: aload_0
      47: getfield      #3                  // Field table:Lio/undertow/util/SecureHashMap$Table;
      50: invokestatic  #19                 // Method io/undertow/util/SecureHashMap.access$1100:(Lio/undertow/util/SecureHashMap;Lio/undertow/util/SecureHashMap$Item;Lio/undertow/util/SecureHashMap$Table;)Z
      53: pop
      54: return

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method next:()Lio/undertow/util/SecureHashMap$Item;
       4: areturn
}
