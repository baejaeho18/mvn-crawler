Compiled from "ChannelFunctionFileChannel.java"
public class io.undertow.websockets.core.function.ChannelFunctionFileChannel extends java.nio.channels.FileChannel {
  private final io.undertow.websockets.core.function.ChannelFunction[] functions;

  private final java.nio.channels.FileChannel channel;

  public io.undertow.websockets.core.function.ChannelFunctionFileChannel(java.nio.channels.FileChannel, io.undertow.websockets.core.function.ChannelFunction...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/nio/channels/FileChannel."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field channel:Ljava/nio/channels/FileChannel;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field functions:[Lio/undertow/websockets/core/function/ChannelFunction;
      14: return

  public long position() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Ljava/nio/channels/FileChannel;
       4: invokevirtual #4                  // Method java/nio/channels/FileChannel.position:()J
       7: lreturn

  public java.nio.channels.FileChannel position(long) throws java.io.IOException;
    Code:
       0: new           #5                  // class io/undertow/websockets/core/function/ChannelFunctionFileChannel
       3: dup
       4: aload_0
       5: getfield      #2                  // Field channel:Ljava/nio/channels/FileChannel;
       8: lload_1
       9: invokevirtual #6                  // Method java/nio/channels/FileChannel.position:(J)Ljava/nio/channels/FileChannel;
      12: aload_0
      13: getfield      #3                  // Field functions:[Lio/undertow/websockets/core/function/ChannelFunction;
      16: invokespecial #7                  // Method "<init>":(Ljava/nio/channels/FileChannel;[Lio/undertow/websockets/core/function/ChannelFunction;)V
      19: areturn

  public long size() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Ljava/nio/channels/FileChannel;
       4: invokevirtual #8                  // Method java/nio/channels/FileChannel.size:()J
       7: lreturn

  public java.nio.channels.FileChannel truncate(long) throws java.io.IOException;
    Code:
       0: new           #5                  // class io/undertow/websockets/core/function/ChannelFunctionFileChannel
       3: dup
       4: aload_0
       5: getfield      #2                  // Field channel:Ljava/nio/channels/FileChannel;
       8: lload_1
       9: invokevirtual #9                  // Method java/nio/channels/FileChannel.truncate:(J)Ljava/nio/channels/FileChannel;
      12: aload_0
      13: getfield      #3                  // Field functions:[Lio/undertow/websockets/core/function/ChannelFunction;
      16: invokespecial #7                  // Method "<init>":(Ljava/nio/channels/FileChannel;[Lio/undertow/websockets/core/function/ChannelFunction;)V
      19: areturn

  public void force(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Ljava/nio/channels/FileChannel;
       4: iload_1
       5: invokevirtual #10                 // Method java/nio/channels/FileChannel.force:(Z)V
       8: return

  public java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Ljava/nio/channels/FileChannel;
       4: aload_1
       5: lload_2
       6: lload         4
       8: invokevirtual #11                 // Method java/nio/channels/FileChannel.map:(Ljava/nio/channels/FileChannel$MapMode;JJ)Ljava/nio/MappedByteBuffer;
      11: areturn

  public java.nio.channels.FileLock lock(long, long, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Ljava/nio/channels/FileChannel;
       4: lload_1
       5: lload_3
       6: iload         5
       8: invokevirtual #12                 // Method java/nio/channels/FileChannel.lock:(JJZ)Ljava/nio/channels/FileLock;
      11: areturn

  public java.nio.channels.FileLock tryLock(long, long, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Ljava/nio/channels/FileChannel;
       4: lload_1
       5: lload_3
       6: iload         5
       8: invokevirtual #13                 // Method java/nio/channels/FileChannel.tryLock:(JJZ)Ljava/nio/channels/FileLock;
      11: areturn

  protected void implCloseChannel() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Ljava/nio/channels/FileChannel;
       4: invokevirtual #14                 // Method java/nio/channels/FileChannel.close:()V
       7: return

  public int write(java.nio.ByteBuffer, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method beforeWriting:(Ljava/nio/ByteBuffer;)V
       5: aload_0
       6: getfield      #2                  // Field channel:Ljava/nio/channels/FileChannel;
       9: aload_1
      10: lload_2
      11: invokevirtual #16                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;J)I
      14: ireturn

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #17                 // Method java/nio/ByteBuffer.position:()I
       4: istore_2
       5: aload_0
       6: getfield      #2                  // Field channel:Ljava/nio/channels/FileChannel;
       9: aload_1
      10: invokevirtual #18                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;)I
      13: istore_3
      14: iload_3
      15: ifle          25
      18: aload_0
      19: aload_1
      20: iload_2
      21: iload_3
      22: invokespecial #19                 // Method afterReading:(Ljava/nio/ByteBuffer;II)V
      25: iload_3
      26: ireturn

  public long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: newarray       int
       3: astore        4
       5: iconst_0
       6: istore        5
       8: iload         5
      10: aload         4
      12: arraylength
      13: if_icmpge     34
      16: aload         4
      18: iload         5
      20: aload_1
      21: iload         5
      23: aaload
      24: invokevirtual #17                 // Method java/nio/ByteBuffer.position:()I
      27: iastore
      28: iinc          5, 1
      31: goto          8
      34: aload_0
      35: getfield      #2                  // Field channel:Ljava/nio/channels/FileChannel;
      38: aload_1
      39: iload_2
      40: iload_3
      41: invokevirtual #20                 // Method java/nio/channels/FileChannel.read:([Ljava/nio/ByteBuffer;II)J
      44: lstore        5
      46: lload         5
      48: lconst_0
      49: lcmp
      50: ifle          90
      53: iload_2
      54: istore        7
      56: iload         7
      58: iload_3
      59: if_icmpge     90
      62: aload_1
      63: iload         7
      65: aaload
      66: astore        8
      68: aload_0
      69: aload         8
      71: aload         4
      73: iload         7
      75: iaload
      76: aload         8
      78: invokevirtual #17                 // Method java/nio/ByteBuffer.position:()I
      81: invokespecial #19                 // Method afterReading:(Ljava/nio/ByteBuffer;II)V
      84: iinc          7, 1
      87: goto          56
      90: lload         5
      92: lreturn

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method beforeWriting:(Ljava/nio/ByteBuffer;)V
       5: aload_0
       6: getfield      #2                  // Field channel:Ljava/nio/channels/FileChannel;
       9: aload_1
      10: invokevirtual #21                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;)I
      13: ireturn

  public long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
    Code:
       0: iload_2
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     23
       9: aload_0
      10: aload_1
      11: iload         4
      13: aaload
      14: invokespecial #15                 // Method beforeWriting:(Ljava/nio/ByteBuffer;)V
      17: iinc          4, 1
      20: goto          3
      23: aload_0
      24: getfield      #2                  // Field channel:Ljava/nio/channels/FileChannel;
      27: aload_1
      28: iload_2
      29: iload_3
      30: invokevirtual #22                 // Method java/nio/channels/FileChannel.write:([Ljava/nio/ByteBuffer;II)J
      33: lreturn

  public int read(java.nio.ByteBuffer, long) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #17                 // Method java/nio/ByteBuffer.position:()I
       4: istore        4
       6: aload_0
       7: getfield      #2                  // Field channel:Ljava/nio/channels/FileChannel;
      10: aload_1
      11: lload_2
      12: invokevirtual #23                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;J)I
      15: istore        5
      17: iload         5
      19: ifle          31
      22: aload_0
      23: aload_1
      24: iload         4
      26: iload         5
      28: invokespecial #19                 // Method afterReading:(Ljava/nio/ByteBuffer;II)V
      31: iload         5
      33: ireturn

  public long transferTo(long, long, java.nio.channels.WritableByteChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Ljava/nio/channels/FileChannel;
       4: lload_1
       5: lload_3
       6: new           #24                 // class io/undertow/websockets/core/function/ChannelFunctionWritableByteChannel
       9: dup
      10: aload         5
      12: aload_0
      13: getfield      #3                  // Field functions:[Lio/undertow/websockets/core/function/ChannelFunction;
      16: invokespecial #25                 // Method io/undertow/websockets/core/function/ChannelFunctionWritableByteChannel."<init>":(Ljava/nio/channels/WritableByteChannel;[Lio/undertow/websockets/core/function/ChannelFunction;)V
      19: invokevirtual #26                 // Method java/nio/channels/FileChannel.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J
      22: lreturn

  public long transferFrom(java.nio.channels.ReadableByteChannel, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Ljava/nio/channels/FileChannel;
       4: new           #27                 // class io/undertow/websockets/core/function/ChannelFunctionReadableByteChannel
       7: dup
       8: aload_0
       9: getfield      #2                  // Field channel:Ljava/nio/channels/FileChannel;
      12: aload_0
      13: getfield      #3                  // Field functions:[Lio/undertow/websockets/core/function/ChannelFunction;
      16: invokespecial #28                 // Method io/undertow/websockets/core/function/ChannelFunctionReadableByteChannel."<init>":(Ljava/nio/channels/ReadableByteChannel;[Lio/undertow/websockets/core/function/ChannelFunction;)V
      19: lload_2
      20: lload         4
      22: invokevirtual #29                 // Method java/nio/channels/FileChannel.transferFrom:(Ljava/nio/channels/ReadableByteChannel;JJ)J
      25: lreturn

  private void beforeWriting(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field functions:[Lio/undertow/websockets/core/function/ChannelFunction;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     52
      17: aload_2
      18: iload         4
      20: aaload
      21: astore        5
      23: aload_1
      24: invokevirtual #17                 // Method java/nio/ByteBuffer.position:()I
      27: istore        6
      29: aload         5
      31: aload_1
      32: iload         6
      34: aload_1
      35: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:()I
      38: iload         6
      40: isub
      41: invokeinterface #31,  4           // InterfaceMethod io/undertow/websockets/core/function/ChannelFunction.beforeWrite:(Ljava/nio/ByteBuffer;II)V
      46: iinc          4, 1
      49: goto          11
      52: return

  private void afterReading(java.nio.ByteBuffer, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field functions:[Lio/undertow/websockets/core/function/ChannelFunction;
       4: astore        4
       6: aload         4
       8: arraylength
       9: istore        5
      11: iconst_0
      12: istore        6
      14: iload         6
      16: iload         5
      18: if_icmpge     44
      21: aload         4
      23: iload         6
      25: aaload
      26: astore        7
      28: aload         7
      30: aload_1
      31: iload_2
      32: iload_3
      33: invokeinterface #32,  4           // InterfaceMethod io/undertow/websockets/core/function/ChannelFunction.afterRead:(Ljava/nio/ByteBuffer;II)V
      38: iinc          6, 1
      41: goto          14
      44: return

  public java.nio.channels.SeekableByteChannel truncate(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #33                 // Method truncate:(J)Ljava/nio/channels/FileChannel;
       5: areturn

  public java.nio.channels.SeekableByteChannel position(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #34                 // Method position:(J)Ljava/nio/channels/FileChannel;
       5: areturn
}
