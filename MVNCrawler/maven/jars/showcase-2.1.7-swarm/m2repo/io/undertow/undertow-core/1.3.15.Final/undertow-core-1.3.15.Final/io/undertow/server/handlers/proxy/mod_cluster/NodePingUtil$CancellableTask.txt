Compiled from "NodePingUtil.java"
class io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$CancellableTask {
  private final io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$PingCallback delegate;

  private volatile io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$State state;

  private volatile org.xnio.XnioExecutor$Key cancelKey;

  io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$CancellableTask(io.undertow.server.handlers.proxy.mod_cluster.NodePingUtil$PingCallback);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State.WAITING:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State;
       8: putfield      #3                  // Field state:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State;
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field delegate:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$PingCallback;
      16: return

  boolean isDone();
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State;
       4: getstatic     #2                  // Field io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State.WAITING:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State;
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  void setCancelKey(org.xnio.XnioExecutor$Key);
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State;
       4: getstatic     #2                  // Field io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State.WAITING:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State;
       7: if_acmpne     18
      10: aload_0
      11: aload_1
      12: putfield      #5                  // Field cancelKey:Lorg/xnio/XnioExecutor$Key;
      15: goto          25
      18: aload_1
      19: invokeinterface #6,  1            // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
      24: pop
      25: return

  void taskCompleted();
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State;
       4: getstatic     #2                  // Field io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State.WAITING:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State;
       7: if_acmpne     43
      10: aload_0
      11: getstatic     #7                  // Field io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State.DONE:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State;
      14: putfield      #3                  // Field state:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State;
      17: aload_0
      18: getfield      #5                  // Field cancelKey:Lorg/xnio/XnioExecutor$Key;
      21: ifnull        34
      24: aload_0
      25: getfield      #5                  // Field cancelKey:Lorg/xnio/XnioExecutor$Key;
      28: invokeinterface #6,  1            // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
      33: pop
      34: aload_0
      35: getfield      #4                  // Field delegate:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$PingCallback;
      38: invokeinterface #8,  1            // InterfaceMethod io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$PingCallback.completed:()V
      43: return

  void taskFailed();
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State;
       4: getstatic     #2                  // Field io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State.WAITING:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State;
       7: if_acmpne     43
      10: aload_0
      11: getstatic     #7                  // Field io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State.DONE:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State;
      14: putfield      #3                  // Field state:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State;
      17: aload_0
      18: getfield      #5                  // Field cancelKey:Lorg/xnio/XnioExecutor$Key;
      21: ifnull        34
      24: aload_0
      25: getfield      #5                  // Field cancelKey:Lorg/xnio/XnioExecutor$Key;
      28: invokeinterface #6,  1            // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
      33: pop
      34: aload_0
      35: getfield      #4                  // Field delegate:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$PingCallback;
      38: invokeinterface #9,  1            // InterfaceMethod io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$PingCallback.failed:()V
      43: return

  void cancel();
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State;
       4: getstatic     #2                  // Field io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State.WAITING:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State;
       7: if_acmpne     43
      10: aload_0
      11: getstatic     #10                 // Field io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State.CANCELLED:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State;
      14: putfield      #3                  // Field state:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$State;
      17: aload_0
      18: getfield      #5                  // Field cancelKey:Lorg/xnio/XnioExecutor$Key;
      21: ifnull        34
      24: aload_0
      25: getfield      #5                  // Field cancelKey:Lorg/xnio/XnioExecutor$Key;
      28: invokeinterface #6,  1            // InterfaceMethod org/xnio/XnioExecutor$Key.remove:()Z
      33: pop
      34: aload_0
      35: getfield      #4                  // Field delegate:Lio/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$PingCallback;
      38: invokeinterface #9,  1            // InterfaceMethod io/undertow/server/handlers/proxy/mod_cluster/NodePingUtil$PingCallback.failed:()V
      43: return
}
