Compiled from "DirectBufferCache.java"
public class io.undertow.server.handlers.cache.DirectBufferCache {
  private static final int SAMPLE_INTERVAL;

  private final io.undertow.server.handlers.cache.LimitedBufferSlicePool pool;

  private final java.util.concurrent.ConcurrentMap<java.lang.Object, io.undertow.server.handlers.cache.DirectBufferCache$CacheEntry> cache;

  private final io.undertow.util.ConcurrentDirectDeque<io.undertow.server.handlers.cache.DirectBufferCache$CacheEntry> accessQueue;

  private final int sliceSize;

  private final int maxAge;

  public io.undertow.server.handlers.cache.DirectBufferCache(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: getstatic     #3                  // Field org/xnio/BufferAllocator.DIRECT_BYTE_BUFFER_ALLOCATOR:Lorg/xnio/BufferAllocator;
       7: invokespecial #4                  // Method "<init>":(IIILorg/xnio/BufferAllocator;)V
      10: return

  public io.undertow.server.handlers.cache.DirectBufferCache(int, int, int, org.xnio.BufferAllocator<java.nio.ByteBuffer>);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: iconst_m1
       7: invokespecial #5                  // Method "<init>":(IIILorg/xnio/BufferAllocator;I)V
      10: return

  public io.undertow.server.handlers.cache.DirectBufferCache(int, int, int, org.xnio.BufferAllocator<java.nio.ByteBuffer>, int);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field sliceSize:I
       9: aload_0
      10: new           #7                  // class io/undertow/server/handlers/cache/LimitedBufferSlicePool
      13: dup
      14: aload         4
      16: iload_1
      17: iload_1
      18: iload_2
      19: imul
      20: iload_3
      21: iload_1
      22: iload_2
      23: imul
      24: idiv
      25: invokespecial #8                  // Method io/undertow/server/handlers/cache/LimitedBufferSlicePool."<init>":(Lorg/xnio/BufferAllocator;III)V
      28: putfield      #1                  // Field pool:Lio/undertow/server/handlers/cache/LimitedBufferSlicePool;
      31: aload_0
      32: new           #9                  // class java/util/concurrent/ConcurrentHashMap
      35: dup
      36: bipush        16
      38: invokespecial #10                 // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      41: putfield      #11                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
      44: aload_0
      45: invokestatic  #12                 // Method io/undertow/util/ConcurrentDirectDeque.newInstance:()Lio/undertow/util/ConcurrentDirectDeque;
      48: putfield      #13                 // Field accessQueue:Lio/undertow/util/ConcurrentDirectDeque;
      51: aload_0
      52: iload         5
      54: putfield      #14                 // Field maxAge:I
      57: return

  public io.undertow.server.handlers.cache.DirectBufferCache$CacheEntry add(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_0
       4: getfield      #14                 // Field maxAge:I
       7: invokevirtual #15                 // Method add:(Ljava/lang/Object;II)Lio/undertow/server/handlers/cache/DirectBufferCache$CacheEntry;
      10: areturn

  public io.undertow.server.handlers.cache.DirectBufferCache$CacheEntry add(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #17                 // class io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry
      13: astore        4
      15: aload         4
      17: ifnonnull     69
      20: new           #17                 // class io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry
      23: dup
      24: aload_1
      25: iload_2
      26: aload_0
      27: iload_3
      28: aconst_null
      29: invokespecial #18                 // Method io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry."<init>":(Ljava/lang/Object;ILio/undertow/server/handlers/cache/DirectBufferCache;ILio/undertow/server/handlers/cache/DirectBufferCache$1;)V
      32: astore        4
      34: aload_0
      35: getfield      #11                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
      38: aload_1
      39: aload         4
      41: invokeinterface #19,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #17                 // class io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry
      49: astore        5
      51: aload         5
      53: ifnull        63
      56: aload         5
      58: astore        4
      60: goto          69
      63: aload_0
      64: aload         4
      66: invokespecial #20                 // Method bumpAccess:(Lio/undertow/server/handlers/cache/DirectBufferCache$CacheEntry;)V
      69: aload         4
      71: areturn

  public io.undertow.server.handlers.cache.DirectBufferCache$CacheEntry get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #11                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #17                 // class io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry
      13: astore_2
      14: aload_2
      15: ifnonnull     20
      18: aconst_null
      19: areturn
      20: aload_2
      21: invokevirtual #21                 // Method io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry.getExpires:()J
      24: lstore_3
      25: lload_3
      26: ldc2_w        #22                 // long -1l
      29: lcmp
      30: ifeq          48
      33: invokestatic  #24                 // Method java/lang/System.currentTimeMillis:()J
      36: lload_3
      37: lcmp
      38: ifle          48
      41: aload_0
      42: aload_1
      43: invokevirtual #25                 // Method remove:(Ljava/lang/Object;)V
      46: aconst_null
      47: areturn
      48: aload_2
      49: invokevirtual #26                 // Method io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry.hit:()I
      52: iconst_5
      53: irem
      54: ifne          159
      57: aload_0
      58: aload_2
      59: invokespecial #20                 // Method bumpAccess:(Lio/undertow/server/handlers/cache/DirectBufferCache$CacheEntry;)V
      62: aload_2
      63: invokevirtual #28                 // Method io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry.allocate:()Z
      66: ifne          159
      69: aload_2
      70: invokevirtual #29                 // Method io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry.size:()I
      73: istore        5
      75: aload_0
      76: getfield      #13                 // Field accessQueue:Lio/undertow/util/ConcurrentDirectDeque;
      79: invokevirtual #30                 // Method io/undertow/util/ConcurrentDirectDeque.iterator:()Ljava/util/Iterator;
      82: astore        6
      84: aload         6
      86: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      91: ifeq          154
      94: aload         6
      96: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     101: checkcast     #17                 // class io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry
     104: astore        7
     106: aload         7
     108: aload_2
     109: if_acmpne     115
     112: goto          84
     115: aload         7
     117: invokevirtual #33                 // Method io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry.buffers:()[Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer;
     120: arraylength
     121: ifle          134
     124: iload         5
     126: aload         7
     128: invokevirtual #29                 // Method io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry.size:()I
     131: isub
     132: istore        5
     134: aload_0
     135: aload         7
     137: invokevirtual #34                 // Method io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry.key:()Ljava/lang/Object;
     140: invokevirtual #25                 // Method remove:(Ljava/lang/Object;)V
     143: iload         5
     145: ifgt          151
     148: goto          154
     151: goto          84
     154: aload_2
     155: invokevirtual #28                 // Method io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry.allocate:()Z
     158: pop
     159: aload_2
     160: areturn

  public java.util.Set<java.lang.Object> getAllKeys();
    Code:
       0: new           #35                 // class java/util/HashSet
       3: dup
       4: aload_0
       5: getfield      #11                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
       8: invokeinterface #36,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
      13: invokespecial #37                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      16: areturn

  private void bumpAccess(io.undertow.server.handlers.cache.DirectBufferCache$CacheEntry);
    Code:
       0: aload_1
       1: invokevirtual #38                 // Method io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry.claimToken:()Ljava/lang/Object;
       4: astore_2
       5: aload_2
       6: getstatic     #39                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
       9: if_acmpeq     60
      12: aload_2
      13: ifnull        24
      16: aload_0
      17: getfield      #13                 // Field accessQueue:Lio/undertow/util/ConcurrentDirectDeque;
      20: aload_2
      21: invokevirtual #40                 // Method io/undertow/util/ConcurrentDirectDeque.removeToken:(Ljava/lang/Object;)V
      24: aconst_null
      25: astore_3
      26: aload_0
      27: getfield      #13                 // Field accessQueue:Lio/undertow/util/ConcurrentDirectDeque;
      30: aload_1
      31: invokevirtual #41                 // Method io/undertow/util/ConcurrentDirectDeque.offerLastAndReturnToken:(Ljava/lang/Object;)Ljava/lang/Object;
      34: astore_3
      35: goto          40
      38: astore        4
      40: aload_1
      41: aload_3
      42: invokevirtual #43                 // Method io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry.setToken:(Ljava/lang/Object;)Z
      45: ifne          60
      48: aload_3
      49: ifnull        60
      52: aload_0
      53: getfield      #13                 // Field accessQueue:Lio/undertow/util/ConcurrentDirectDeque;
      56: aload_3
      57: invokevirtual #40                 // Method io/undertow/util/ConcurrentDirectDeque.removeToken:(Ljava/lang/Object;)V
      60: return
    Exception table:
       from    to  target type
          26    35    38   Class java/lang/Throwable

  public void remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #11                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #44,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #17                 // class io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry
      13: astore_2
      14: aload_2
      15: ifnull        40
      18: aload_2
      19: invokevirtual #45                 // Method io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry.clearToken:()Ljava/lang/Object;
      22: astore_3
      23: aload_3
      24: ifnull        35
      27: aload_0
      28: getfield      #13                 // Field accessQueue:Lio/undertow/util/ConcurrentDirectDeque;
      31: aload_3
      32: invokevirtual #40                 // Method io/undertow/util/ConcurrentDirectDeque.removeToken:(Ljava/lang/Object;)V
      35: aload_2
      36: invokevirtual #46                 // Method io/undertow/server/handlers/cache/DirectBufferCache$CacheEntry.dereference:()Z
      39: pop
      40: return

  static int access$100(io.undertow.server.handlers.cache.DirectBufferCache);
    Code:
       0: aload_0
       1: getfield      #2                  // Field sliceSize:I
       4: ireturn

  static io.undertow.server.handlers.cache.LimitedBufferSlicePool access$200(io.undertow.server.handlers.cache.DirectBufferCache);
    Code:
       0: aload_0
       1: getfield      #1                  // Field pool:Lio/undertow/server/handlers/cache/LimitedBufferSlicePool;
       4: areturn
}
