Compiled from "StuckThreadDetectionHandler.java"
class io.undertow.server.handlers.StuckThreadDetectionHandler$MonitoredThread {
  private final java.lang.Thread thread;

  private final java.lang.String requestUri;

  private final long start;

  private final java.util.concurrent.atomic.AtomicInteger state;

  public io.undertow.server.handlers.StuckThreadDetectionHandler$MonitoredThread(java.lang.Thread, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: getstatic     #3                  // Field io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThreadState.RUNNING:Lio/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThreadState;
      12: invokevirtual #4                  // Method io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThreadState.ordinal:()I
      15: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      18: putfield      #6                  // Field state:Ljava/util/concurrent/atomic/AtomicInteger;
      21: aload_0
      22: aload_1
      23: putfield      #7                  // Field thread:Ljava/lang/Thread;
      26: aload_0
      27: aload_2
      28: putfield      #8                  // Field requestUri:Ljava/lang/String;
      31: aload_0
      32: invokestatic  #9                  // Method java/lang/System.currentTimeMillis:()J
      35: putfield      #10                 // Field start:J
      38: return

  public java.lang.Thread getThread();
    Code:
       0: aload_0
       1: getfield      #7                  // Field thread:Ljava/lang/Thread;
       4: areturn

  public java.lang.String getRequestUri();
    Code:
       0: aload_0
       1: getfield      #8                  // Field requestUri:Ljava/lang/String;
       4: areturn

  public long getActiveTimeInMillis();
    Code:
       0: invokestatic  #9                  // Method java/lang/System.currentTimeMillis:()J
       3: aload_0
       4: getfield      #10                 // Field start:J
       7: lsub
       8: lreturn

  public java.util.Date getStartTime();
    Code:
       0: new           #11                 // class java/util/Date
       3: dup
       4: aload_0
       5: getfield      #10                 // Field start:J
       8: invokespecial #12                 // Method java/util/Date."<init>":(J)V
      11: areturn

  public boolean markAsStuckIfStillRunning();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:Ljava/util/concurrent/atomic/AtomicInteger;
       4: getstatic     #3                  // Field io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThreadState.RUNNING:Lio/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThreadState;
       7: invokevirtual #4                  // Method io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThreadState.ordinal:()I
      10: getstatic     #13                 // Field io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThreadState.STUCK:Lio/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThreadState;
      13: invokevirtual #4                  // Method io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThreadState.ordinal:()I
      16: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      19: ireturn

  public io.undertow.server.handlers.StuckThreadDetectionHandler$MonitoredThreadState markAsDone();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:Ljava/util/concurrent/atomic/AtomicInteger;
       4: getstatic     #15                 // Field io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThreadState.DONE:Lio/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThreadState;
       7: invokevirtual #4                  // Method io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThreadState.ordinal:()I
      10: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicInteger.getAndSet:(I)I
      13: istore_1
      14: invokestatic  #17                 // Method io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThreadState.values:()[Lio/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThreadState;
      17: iload_1
      18: aaload
      19: areturn

  boolean isMarkedAsStuck();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: getstatic     #13                 // Field io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThreadState.STUCK:Lio/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThreadState;
      10: invokevirtual #4                  // Method io/undertow/server/handlers/StuckThreadDetectionHandler$MonitoredThreadState.ordinal:()I
      13: if_icmpne     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn
}
