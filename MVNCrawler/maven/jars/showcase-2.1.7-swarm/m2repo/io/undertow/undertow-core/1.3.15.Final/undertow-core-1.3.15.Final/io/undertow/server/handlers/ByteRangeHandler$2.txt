Compiled from "ByteRangeHandler.java"
class io.undertow.server.handlers.ByteRangeHandler$2 implements io.undertow.server.ConduitWrapper<org.xnio.conduits.StreamSinkConduit> {
  final io.undertow.util.ByteRange val$range;

  final io.undertow.server.handlers.ByteRangeHandler this$0;

  io.undertow.server.handlers.ByteRangeHandler$2(io.undertow.server.handlers.ByteRangeHandler, io.undertow.util.ByteRange);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/undertow/server/handlers/ByteRangeHandler;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$range:Lio/undertow/util/ByteRange;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public org.xnio.conduits.StreamSinkConduit wrap(io.undertow.util.ConduitFactory<org.xnio.conduits.StreamSinkConduit>, io.undertow.server.HttpServerExchange);
    Code:
       0: aload_2
       1: invokevirtual #4                  // Method io/undertow/server/HttpServerExchange.getStatusCode:()I
       4: sipush        200
       7: if_icmpeq     20
      10: aload_1
      11: invokeinterface #6,  1            // InterfaceMethod io/undertow/util/ConduitFactory.create:()Lorg/xnio/conduits/Conduit;
      16: checkcast     #7                  // class org/xnio/conduits/StreamSinkConduit
      19: areturn
      20: aload_2
      21: invokevirtual #8                  // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
      24: getstatic     #9                  // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      27: invokevirtual #10                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      30: astore_3
      31: aload_3
      32: ifnonnull     45
      35: aload_1
      36: invokeinterface #6,  1            // InterfaceMethod io/undertow/util/ConduitFactory.create:()Lorg/xnio/conduits/Conduit;
      41: checkcast     #7                  // class org/xnio/conduits/StreamSinkConduit
      44: areturn
      45: aload_3
      46: invokestatic  #11                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      49: lstore        4
      51: aload_0
      52: getfield      #2                  // Field val$range:Lio/undertow/util/ByteRange;
      55: iconst_0
      56: invokevirtual #12                 // Method io/undertow/util/ByteRange.getStart:(I)J
      59: lstore        6
      61: aload_0
      62: getfield      #2                  // Field val$range:Lio/undertow/util/ByteRange;
      65: iconst_0
      66: invokevirtual #13                 // Method io/undertow/util/ByteRange.getEnd:(I)J
      69: lstore        8
      71: lload         6
      73: ldc2_w        #14                 // long -1l
      76: lcmp
      77: ifne          127
      80: lload         8
      82: lstore        10
      84: lload         10
      86: lconst_0
      87: lcmp
      88: iflt          101
      91: aload_2
      92: lload         10
      94: invokevirtual #16                 // Method io/undertow/server/HttpServerExchange.setResponseContentLength:(J)Lio/undertow/server/HttpServerExchange;
      97: pop
      98: goto          111
     101: aload_1
     102: invokeinterface #6,  1            // InterfaceMethod io/undertow/util/ConduitFactory.create:()Lorg/xnio/conduits/Conduit;
     107: checkcast     #7                  // class org/xnio/conduits/StreamSinkConduit
     110: areturn
     111: lload         4
     113: lload         8
     115: lsub
     116: lstore        6
     118: lload         4
     120: lconst_1
     121: lsub
     122: lstore        8
     124: goto          195
     127: lload         8
     129: ldc2_w        #14                 // long -1l
     132: lcmp
     133: ifne          179
     136: lload         4
     138: lload         6
     140: lsub
     141: lstore        10
     143: lload         10
     145: lconst_0
     146: lcmp
     147: iflt          160
     150: aload_2
     151: lload         10
     153: invokevirtual #16                 // Method io/undertow/server/HttpServerExchange.setResponseContentLength:(J)Lio/undertow/server/HttpServerExchange;
     156: pop
     157: goto          170
     160: aload_1
     161: invokeinterface #6,  1            // InterfaceMethod io/undertow/util/ConduitFactory.create:()Lorg/xnio/conduits/Conduit;
     166: checkcast     #7                  // class org/xnio/conduits/StreamSinkConduit
     169: areturn
     170: lload         4
     172: lconst_1
     173: lsub
     174: lstore        8
     176: goto          195
     179: lload         8
     181: lload         6
     183: lsub
     184: lconst_1
     185: ladd
     186: lstore        10
     188: aload_2
     189: lload         10
     191: invokevirtual #16                 // Method io/undertow/server/HttpServerExchange.setResponseContentLength:(J)Lio/undertow/server/HttpServerExchange;
     194: pop
     195: aload_2
     196: sipush        206
     199: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.setStatusCode:(I)Lio/undertow/server/HttpServerExchange;
     202: pop
     203: aload_2
     204: invokevirtual #8                  // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
     207: getstatic     #18                 // Field io/undertow/util/Headers.CONTENT_RANGE:Lio/undertow/util/HttpString;
     210: new           #19                 // class java/lang/StringBuilder
     213: dup
     214: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
     217: lload         6
     219: invokevirtual #21                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     222: ldc           #22                 // String -
     224: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     227: lload         8
     229: invokevirtual #21                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     232: ldc           #24                 // String /
     234: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     237: lload         4
     239: invokevirtual #21                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     242: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     245: invokevirtual #26                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     248: pop
     249: new           #27                 // class io/undertow/conduits/RangeStreamSinkConduit
     252: dup
     253: aload_1
     254: invokeinterface #6,  1            // InterfaceMethod io/undertow/util/ConduitFactory.create:()Lorg/xnio/conduits/Conduit;
     259: checkcast     #7                  // class org/xnio/conduits/StreamSinkConduit
     262: lload         6
     264: lload         8
     266: lload         4
     268: invokespecial #28                 // Method io/undertow/conduits/RangeStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;JJJ)V
     271: areturn

  public org.xnio.conduits.Conduit wrap(io.undertow.util.ConduitFactory, io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #29                 // Method wrap:(Lio/undertow/util/ConduitFactory;Lio/undertow/server/HttpServerExchange;)Lorg/xnio/conduits/StreamSinkConduit;
       6: areturn
}
