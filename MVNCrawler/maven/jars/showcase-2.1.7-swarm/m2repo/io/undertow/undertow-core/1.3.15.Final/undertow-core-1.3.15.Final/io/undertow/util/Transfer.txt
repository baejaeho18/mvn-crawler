Compiled from "Transfer.java"
public class io.undertow.util.Transfer {
  public io.undertow.util.Transfer();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static <I extends org.xnio.channels.StreamSourceChannel, O extends org.xnio.channels.StreamSinkChannel> void initiateTransfer(I, O, org.xnio.ChannelListener<? super I>, org.xnio.ChannelListener<? super O>, org.xnio.ChannelExceptionHandler<? super I>, org.xnio.ChannelExceptionHandler<? super O>, io.undertow.connector.ByteBufferPool);
    Code:
       0: aload         6
       2: ifnonnull     16
       5: getstatic     #3                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
       8: ldc           #4                  // String pool
      10: invokeinterface #5,  2            // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      15: athrow
      16: aload         6
      18: invokeinterface #6,  1            // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      23: astore        7
      25: iconst_1
      26: istore        8
      28: aload         7
      30: invokeinterface #7,  1            // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      35: astore        9
      37: aload_0
      38: aload         9
      40: invokeinterface #8,  2            // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
      45: i2l
      46: lstore        10
      48: aload         9
      50: invokevirtual #9                  // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      53: pop
      54: goto          80
      57: astore        12
      59: aload_0
      60: aload         4
      62: aload         12
      64: invokestatic  #11                 // Method org/xnio/ChannelListeners.invokeChannelExceptionHandler:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelExceptionHandler;Ljava/io/IOException;)V
      67: iload         8
      69: ifeq          79
      72: aload         7
      74: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      79: return
      80: lload         10
      82: lconst_0
      83: lcmp
      84: ifne          98
      87: aload         9
      89: invokevirtual #13                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      92: ifne          98
      95: goto          210
      98: lload         10
     100: ldc2_w        #14                 // long -1l
     103: lcmp
     104: ifne          135
     107: aload         9
     109: invokevirtual #13                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     112: ifne          135
     115: aload_0
     116: aload_1
     117: aload_2
     118: aload_3
     119: invokestatic  #1                  // Method done:(Lorg/xnio/channels/StreamSourceChannel;Lorg/xnio/channels/StreamSinkChannel;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;)V
     122: iload         8
     124: ifeq          134
     127: aload         7
     129: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     134: return
     135: aload         9
     137: invokevirtual #13                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     140: ifeq          190
     143: aload_1
     144: aload         9
     146: invokeinterface #16,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
     151: istore        12
     153: goto          179
     156: astore        13
     158: aload_1
     159: aload         5
     161: aload         13
     163: invokestatic  #11                 // Method org/xnio/ChannelListeners.invokeChannelExceptionHandler:(Ljava/nio/channels/Channel;Lorg/xnio/ChannelExceptionHandler;Ljava/io/IOException;)V
     166: iload         8
     168: ifeq          178
     171: aload         7
     173: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     178: return
     179: iload         12
     181: ifne          187
     184: goto          190
     187: goto          135
     190: aload         9
     192: invokevirtual #13                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     195: ifeq          201
     198: goto          210
     201: aload         9
     203: invokevirtual #17                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     206: pop
     207: goto          37
     210: aconst_null
     211: astore        12
     213: aload         9
     215: invokevirtual #13                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     218: ifeq          228
     221: aload         7
     223: astore        12
     225: iconst_0
     226: istore        8
     228: new           #18                 // class io/undertow/util/Transfer$TransferListener
     231: dup
     232: aload         6
     234: aload         12
     236: aload_0
     237: aload_1
     238: aload_2
     239: aload_3
     240: aload         5
     242: aload         4
     244: lload         10
     246: ldc2_w        #14                 // long -1l
     249: lcmp
     250: ifne          257
     253: iconst_1
     254: goto          258
     257: iconst_0
     258: invokespecial #19                 // Method io/undertow/util/Transfer$TransferListener."<init>":(Lio/undertow/connector/ByteBufferPool;Lio/undertow/connector/PooledByteBuffer;Lorg/xnio/channels/StreamSourceChannel;Lorg/xnio/channels/StreamSinkChannel;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelExceptionHandler;Lorg/xnio/ChannelExceptionHandler;Z)V
     261: astore        13
     263: aload_1
     264: invokeinterface #20,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
     269: aload         13
     271: invokeinterface #21,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     276: aload_0
     277: invokeinterface #22,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
     282: aload         13
     284: invokeinterface #21,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     289: aload         12
     291: ifnull        307
     294: aload         9
     296: invokevirtual #23                 // Method java/nio/ByteBuffer.capacity:()I
     299: aload         9
     301: invokevirtual #24                 // Method java/nio/ByteBuffer.remaining:()I
     304: if_icmpeq     313
     307: aload_0
     308: invokeinterface #25,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.resumeReads:()V
     313: aload         12
     315: ifnull        324
     318: aload_1
     319: invokeinterface #26,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
     324: iload         8
     326: ifeq          356
     329: aload         7
     331: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     336: goto          356
     339: astore        14
     341: iload         8
     343: ifeq          353
     346: aload         7
     348: invokeinterface #12,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     353: aload         14
     355: athrow
     356: return
    Exception table:
       from    to  target type
          37    54    57   Class java/io/IOException
         143   153   156   Class java/io/IOException
          28    67   339   any
          80   122   339   any
         135   166   339   any
         179   324   339   any
         339   341   339   any

  private static <I extends org.xnio.channels.StreamSourceChannel, O extends org.xnio.channels.StreamSinkChannel> void done(I, O, org.xnio.ChannelListener<? super I>, org.xnio.ChannelListener<? super O>);
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #27                 // Method org/xnio/channels/Channels.setReadListener:(Lorg/xnio/channels/SuspendableReadChannel;Lorg/xnio/ChannelListener;)V
       5: aload_2
       6: ifnonnull     18
       9: aload_0
      10: invokeinterface #28,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.suspendReads:()V
      15: goto          24
      18: aload_0
      19: invokeinterface #29,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.wakeupReads:()V
      24: aload_1
      25: aload_3
      26: invokestatic  #30                 // Method org/xnio/channels/Channels.setWriteListener:(Lorg/xnio/channels/SuspendableWriteChannel;Lorg/xnio/ChannelListener;)V
      29: aload_3
      30: ifnonnull     42
      33: aload_1
      34: invokeinterface #31,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.suspendWrites:()V
      39: goto          48
      42: aload_1
      43: invokeinterface #32,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.wakeupWrites:()V
      48: return

  static void access$000(org.xnio.channels.StreamSourceChannel, org.xnio.channels.StreamSinkChannel, org.xnio.ChannelListener, org.xnio.ChannelListener);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1                  // Method done:(Lorg/xnio/channels/StreamSourceChannel;Lorg/xnio/channels/StreamSinkChannel;Lorg/xnio/ChannelListener;Lorg/xnio/ChannelListener;)V
       7: return
}
