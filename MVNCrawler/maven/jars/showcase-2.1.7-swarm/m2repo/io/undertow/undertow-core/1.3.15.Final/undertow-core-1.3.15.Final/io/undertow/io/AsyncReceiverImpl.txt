Compiled from "AsyncReceiverImpl.java"
public class io.undertow.io.AsyncReceiverImpl implements io.undertow.io.Receiver {
  private static final io.undertow.io.Receiver$ErrorCallback END_EXCHANGE;

  public static final byte[] EMPTY_BYTE_ARRAY;

  private final io.undertow.server.HttpServerExchange exchange;

  private final org.xnio.channels.StreamSourceChannel channel;

  private int maxBufferSize;

  private boolean paused;

  private boolean done;

  public io.undertow.io.AsyncReceiverImpl(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field maxBufferSize:I
       9: aload_0
      10: iconst_0
      11: putfield      #1                  // Field paused:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field done:Z
      19: aload_0
      20: aload_1
      21: putfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      24: aload_0
      25: aload_1
      26: invokevirtual #6                  // Method io/undertow/server/HttpServerExchange.getRequestChannel:()Lorg/xnio/channels/StreamSourceChannel;
      29: putfield      #7                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      32: aload_0
      33: getfield      #7                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
      36: ifnonnull     48
      39: getstatic     #8                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      42: invokeinterface #9,  1            // InterfaceMethod io/undertow/UndertowMessages.requestChannelAlreadyProvided:()Ljava/lang/IllegalStateException;
      47: athrow
      48: return

  public void setMaxBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field maxBufferSize:I
       5: return

  public void receiveFullString(io.undertow.io.Receiver$FullStringCallback, io.undertow.io.Receiver$ErrorCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #10                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
       6: invokevirtual #11                 // Method receiveFullString:(Lio/undertow/io/Receiver$FullStringCallback;Lio/undertow/io/Receiver$ErrorCallback;Ljava/nio/charset/Charset;)V
       9: return

  public void receiveFullString(io.undertow.io.Receiver$FullStringCallback);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #12                 // Field END_EXCHANGE:Lio/undertow/io/Receiver$ErrorCallback;
       5: getstatic     #10                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
       8: invokevirtual #11                 // Method receiveFullString:(Lio/undertow/io/Receiver$FullStringCallback;Lio/undertow/io/Receiver$ErrorCallback;Ljava/nio/charset/Charset;)V
      11: return

  public void receivePartialString(io.undertow.io.Receiver$PartialStringCallback, io.undertow.io.Receiver$ErrorCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #10                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
       6: invokevirtual #13                 // Method receivePartialString:(Lio/undertow/io/Receiver$PartialStringCallback;Lio/undertow/io/Receiver$ErrorCallback;Ljava/nio/charset/Charset;)V
       9: return

  public void receivePartialString(io.undertow.io.Receiver$PartialStringCallback);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #12                 // Field END_EXCHANGE:Lio/undertow/io/Receiver$ErrorCallback;
       5: getstatic     #10                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
       8: invokevirtual #13                 // Method receivePartialString:(Lio/undertow/io/Receiver$PartialStringCallback;Lio/undertow/io/Receiver$ErrorCallback;Ljava/nio/charset/Charset;)V
      11: return

  public void receiveFullString(io.undertow.io.Receiver$FullStringCallback, io.undertow.io.Receiver$ErrorCallback, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: getfield      #4                  // Field done:Z
       4: ifeq          16
       7: getstatic     #8                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #14,  1           // InterfaceMethod io/undertow/UndertowMessages.requestBodyAlreadyRead:()Ljava/lang/IllegalStateException;
      15: athrow
      16: aload_2
      17: ifnonnull     26
      20: getstatic     #12                 // Field END_EXCHANGE:Lio/undertow/io/Receiver$ErrorCallback;
      23: goto          27
      26: aload_2
      27: astore        4
      29: aload_1
      30: ifnonnull     44
      33: getstatic     #8                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      36: ldc           #15                 // String callback
      38: invokeinterface #16,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      43: athrow
      44: aload_0
      45: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      48: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.isRequestComplete:()Z
      51: ifeq          67
      54: aload_1
      55: aload_0
      56: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      59: ldc           #18                 // String
      61: invokeinterface #19,  3           // InterfaceMethod io/undertow/io/Receiver$FullStringCallback.handle:(Lio/undertow/server/HttpServerExchange;Ljava/lang/String;)V
      66: return
      67: aload_0
      68: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      71: invokevirtual #20                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      74: getstatic     #21                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      77: invokevirtual #22                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      80: astore        5
      82: aload         5
      84: ifnull        137
      87: aload         5
      89: invokestatic  #23                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      92: lstore        6
      94: lload         6
      96: ldc2_w        #25                 // long 2147483647l
      99: lcmp
     100: ifle          122
     103: aload         4
     105: aload_0
     106: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     109: new           #27                 // class io/undertow/io/Receiver$RequestToLargeException
     112: dup
     113: invokespecial #28                 // Method io/undertow/io/Receiver$RequestToLargeException."<init>":()V
     116: invokeinterface #29,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     121: return
     122: new           #30                 // class java/io/ByteArrayOutputStream
     125: dup
     126: lload         6
     128: l2i
     129: invokespecial #31                 // Method java/io/ByteArrayOutputStream."<init>":(I)V
     132: astore        8
     134: goto          151
     137: ldc2_w        #32                 // long -1l
     140: lstore        6
     142: new           #30                 // class java/io/ByteArrayOutputStream
     145: dup
     146: invokespecial #34                 // Method java/io/ByteArrayOutputStream."<init>":()V
     149: astore        8
     151: aload_0
     152: getfield      #2                  // Field maxBufferSize:I
     155: ifle          188
     158: lload         6
     160: aload_0
     161: getfield      #2                  // Field maxBufferSize:I
     164: i2l
     165: lcmp
     166: ifle          188
     169: aload         4
     171: aload_0
     172: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     175: new           #27                 // class io/undertow/io/Receiver$RequestToLargeException
     178: dup
     179: invokespecial #28                 // Method io/undertow/io/Receiver$RequestToLargeException."<init>":()V
     182: invokeinterface #29,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     187: return
     188: aload_0
     189: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     192: invokevirtual #35                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     195: invokevirtual #36                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
     198: invokeinterface #37,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     203: astore        9
     205: aload         9
     207: invokeinterface #38,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     212: astore        10
     214: aload         10
     216: invokevirtual #39                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     219: pop
     220: aload_0
     221: getfield      #7                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
     224: aload         10
     226: invokeinterface #40,  2           // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
     231: istore        11
     233: iload         11
     235: iconst_m1
     236: if_icmpne     271
     239: aload_0
     240: iconst_1
     241: putfield      #4                  // Field done:Z
     244: aload_1
     245: aload_0
     246: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     249: aload         8
     251: aload_3
     252: invokevirtual #41                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;
     255: invokevirtual #42                 // Method java/io/ByteArrayOutputStream.toString:(Ljava/lang/String;)Ljava/lang/String;
     258: invokeinterface #19,  3           // InterfaceMethod io/undertow/io/Receiver$FullStringCallback.handle:(Lio/undertow/server/HttpServerExchange;Ljava/lang/String;)V
     263: aload         9
     265: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     270: return
     271: iload         11
     273: ifne          321
     276: aload_0
     277: getfield      #7                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
     280: invokeinterface #44,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
     285: new           #45                 // class io/undertow/io/AsyncReceiverImpl$2
     288: dup
     289: aload_0
     290: aload_1
     291: aload         8
     293: aload_3
     294: aload         4
     296: invokespecial #46                 // Method io/undertow/io/AsyncReceiverImpl$2."<init>":(Lio/undertow/io/AsyncReceiverImpl;Lio/undertow/io/Receiver$FullStringCallback;Ljava/io/ByteArrayOutputStream;Ljava/nio/charset/Charset;Lio/undertow/io/Receiver$ErrorCallback;)V
     299: invokeinterface #47,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     304: aload_0
     305: getfield      #7                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
     308: invokeinterface #48,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.resumeReads:()V
     313: aload         9
     315: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     320: return
     321: aload         10
     323: invokevirtual #49                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     326: pop
     327: aload         10
     329: invokevirtual #50                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     332: ifeq          348
     335: aload         8
     337: aload         10
     339: invokevirtual #51                 // Method java/nio/ByteBuffer.get:()B
     342: invokevirtual #52                 // Method java/io/ByteArrayOutputStream.write:(I)V
     345: goto          327
     348: aload_0
     349: getfield      #2                  // Field maxBufferSize:I
     352: ifle          393
     355: aload         8
     357: invokevirtual #53                 // Method java/io/ByteArrayOutputStream.size:()I
     360: aload_0
     361: getfield      #2                  // Field maxBufferSize:I
     364: if_icmple     393
     367: aload         4
     369: aload_0
     370: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     373: new           #27                 // class io/undertow/io/Receiver$RequestToLargeException
     376: dup
     377: invokespecial #28                 // Method io/undertow/io/Receiver$RequestToLargeException."<init>":()V
     380: invokeinterface #29,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     385: aload         9
     387: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     392: return
     393: goto          214
     396: astore        12
     398: aload         4
     400: aload_0
     401: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     404: aload         12
     406: invokeinterface #29,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     411: aload         9
     413: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     418: return
     419: astore        13
     421: aload         9
     423: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     428: aload         13
     430: athrow
    Exception table:
       from    to  target type
         214   263   396   Class java/io/IOException
         271   313   396   Class java/io/IOException
         321   385   396   Class java/io/IOException
         214   263   419   any
         271   313   419   any
         321   385   419   any
         393   411   419   any
         419   421   419   any

  public void receiveFullString(io.undertow.io.Receiver$FullStringCallback, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #12                 // Field END_EXCHANGE:Lio/undertow/io/Receiver$ErrorCallback;
       5: aload_2
       6: invokevirtual #11                 // Method receiveFullString:(Lio/undertow/io/Receiver$FullStringCallback;Lio/undertow/io/Receiver$ErrorCallback;Ljava/nio/charset/Charset;)V
       9: return

  public void receivePartialString(io.undertow.io.Receiver$PartialStringCallback, io.undertow.io.Receiver$ErrorCallback, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: getfield      #4                  // Field done:Z
       4: ifeq          16
       7: getstatic     #8                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #14,  1           // InterfaceMethod io/undertow/UndertowMessages.requestBodyAlreadyRead:()Ljava/lang/IllegalStateException;
      15: athrow
      16: aload_2
      17: ifnonnull     26
      20: getstatic     #12                 // Field END_EXCHANGE:Lio/undertow/io/Receiver$ErrorCallback;
      23: goto          27
      26: aload_2
      27: astore        4
      29: aload_1
      30: ifnonnull     44
      33: getstatic     #8                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      36: ldc           #15                 // String callback
      38: invokeinterface #16,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      43: athrow
      44: aload_0
      45: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      48: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.isRequestComplete:()Z
      51: ifeq          68
      54: aload_1
      55: aload_0
      56: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      59: ldc           #18                 // String
      61: iconst_1
      62: invokeinterface #55,  4           // InterfaceMethod io/undertow/io/Receiver$PartialStringCallback.handle:(Lio/undertow/server/HttpServerExchange;Ljava/lang/String;Z)V
      67: return
      68: aload_0
      69: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      72: invokevirtual #20                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      75: getstatic     #21                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      78: invokevirtual #22                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      81: astore        5
      83: aload         5
      85: ifnull        123
      88: aload         5
      90: invokestatic  #23                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      93: lstore        6
      95: lload         6
      97: ldc2_w        #25                 // long 2147483647l
     100: lcmp
     101: ifle          128
     104: aload         4
     106: aload_0
     107: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     110: new           #27                 // class io/undertow/io/Receiver$RequestToLargeException
     113: dup
     114: invokespecial #28                 // Method io/undertow/io/Receiver$RequestToLargeException."<init>":()V
     117: invokeinterface #29,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     122: return
     123: ldc2_w        #32                 // long -1l
     126: lstore        6
     128: aload_0
     129: getfield      #2                  // Field maxBufferSize:I
     132: ifle          165
     135: lload         6
     137: aload_0
     138: getfield      #2                  // Field maxBufferSize:I
     141: i2l
     142: lcmp
     143: ifle          165
     146: aload         4
     148: aload_0
     149: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     152: new           #27                 // class io/undertow/io/Receiver$RequestToLargeException
     155: dup
     156: invokespecial #28                 // Method io/undertow/io/Receiver$RequestToLargeException."<init>":()V
     159: invokeinterface #29,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     164: return
     165: aload_3
     166: invokevirtual #56                 // Method java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;
     169: astore        8
     171: aload_0
     172: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     175: invokevirtual #35                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     178: invokevirtual #36                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
     181: invokeinterface #37,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     186: astore        9
     188: aload         9
     190: invokeinterface #38,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     195: astore        10
     197: aload_0
     198: getfield      #7                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
     201: invokeinterface #44,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
     206: new           #57                 // class io/undertow/io/AsyncReceiverImpl$3
     209: dup
     210: aload_0
     211: aload_1
     212: aload         8
     214: aload         4
     216: invokespecial #58                 // Method io/undertow/io/AsyncReceiverImpl$3."<init>":(Lio/undertow/io/AsyncReceiverImpl;Lio/undertow/io/Receiver$PartialStringCallback;Ljava/nio/charset/CharsetDecoder;Lio/undertow/io/Receiver$ErrorCallback;)V
     219: invokeinterface #47,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     224: aload         10
     226: invokevirtual #39                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     229: pop
     230: aload_0
     231: getfield      #7                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
     234: aload         10
     236: invokeinterface #40,  2           // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
     241: istore        11
     243: iload         11
     245: iconst_m1
     246: if_icmpne     275
     249: aload_0
     250: iconst_1
     251: putfield      #4                  // Field done:Z
     254: aload_1
     255: aload_0
     256: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     259: ldc           #18                 // String
     261: iconst_1
     262: invokeinterface #55,  4           // InterfaceMethod io/undertow/io/Receiver$PartialStringCallback.handle:(Lio/undertow/server/HttpServerExchange;Ljava/lang/String;Z)V
     267: aload         9
     269: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     274: return
     275: iload         11
     277: ifne          297
     280: aload_0
     281: getfield      #7                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
     284: invokeinterface #48,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.resumeReads:()V
     289: aload         9
     291: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     296: return
     297: aload         10
     299: invokevirtual #49                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     302: pop
     303: aload         8
     305: aload         10
     307: invokevirtual #59                 // Method java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
     310: astore        12
     312: aload_1
     313: aload_0
     314: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     317: aload         12
     319: invokevirtual #60                 // Method java/nio/CharBuffer.toString:()Ljava/lang/String;
     322: iconst_0
     323: invokeinterface #55,  4           // InterfaceMethod io/undertow/io/Receiver$PartialStringCallback.handle:(Lio/undertow/server/HttpServerExchange;Ljava/lang/String;Z)V
     328: aload_0
     329: getfield      #1                  // Field paused:Z
     332: ifeq          343
     335: aload         9
     337: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     342: return
     343: goto          224
     346: astore        12
     348: aload         4
     350: aload_0
     351: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     354: aload         12
     356: invokeinterface #29,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     361: aload         9
     363: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     368: return
     369: astore        13
     371: aload         9
     373: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     378: aload         13
     380: athrow
    Exception table:
       from    to  target type
         224   267   346   Class java/io/IOException
         275   289   346   Class java/io/IOException
         297   335   346   Class java/io/IOException
         224   267   369   any
         275   289   369   any
         297   335   369   any
         343   361   369   any
         369   371   369   any

  public void receivePartialString(io.undertow.io.Receiver$PartialStringCallback, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #12                 // Field END_EXCHANGE:Lio/undertow/io/Receiver$ErrorCallback;
       5: aload_2
       6: invokevirtual #13                 // Method receivePartialString:(Lio/undertow/io/Receiver$PartialStringCallback;Lio/undertow/io/Receiver$ErrorCallback;Ljava/nio/charset/Charset;)V
       9: return

  public void receiveFullBytes(io.undertow.io.Receiver$FullBytesCallback, io.undertow.io.Receiver$ErrorCallback);
    Code:
       0: aload_0
       1: getfield      #4                  // Field done:Z
       4: ifeq          16
       7: getstatic     #8                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #14,  1           // InterfaceMethod io/undertow/UndertowMessages.requestBodyAlreadyRead:()Ljava/lang/IllegalStateException;
      15: athrow
      16: aload_2
      17: ifnonnull     26
      20: getstatic     #12                 // Field END_EXCHANGE:Lio/undertow/io/Receiver$ErrorCallback;
      23: goto          27
      26: aload_2
      27: astore_3
      28: aload_1
      29: ifnonnull     43
      32: getstatic     #8                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      35: ldc           #15                 // String callback
      37: invokeinterface #16,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      42: athrow
      43: aload_0
      44: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      47: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.isRequestComplete:()Z
      50: ifeq          67
      53: aload_1
      54: aload_0
      55: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      58: getstatic     #61                 // Field EMPTY_BYTE_ARRAY:[B
      61: invokeinterface #62,  3           // InterfaceMethod io/undertow/io/Receiver$FullBytesCallback.handle:(Lio/undertow/server/HttpServerExchange;[B)V
      66: return
      67: aload_0
      68: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      71: invokevirtual #20                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      74: getstatic     #21                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      77: invokevirtual #22                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      80: astore        4
      82: aload         4
      84: ifnull        136
      87: aload         4
      89: invokestatic  #23                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      92: lstore        5
      94: lload         5
      96: ldc2_w        #25                 // long 2147483647l
      99: lcmp
     100: ifle          121
     103: aload_3
     104: aload_0
     105: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     108: new           #27                 // class io/undertow/io/Receiver$RequestToLargeException
     111: dup
     112: invokespecial #28                 // Method io/undertow/io/Receiver$RequestToLargeException."<init>":()V
     115: invokeinterface #29,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     120: return
     121: new           #30                 // class java/io/ByteArrayOutputStream
     124: dup
     125: lload         5
     127: l2i
     128: invokespecial #31                 // Method java/io/ByteArrayOutputStream."<init>":(I)V
     131: astore        7
     133: goto          150
     136: ldc2_w        #32                 // long -1l
     139: lstore        5
     141: new           #30                 // class java/io/ByteArrayOutputStream
     144: dup
     145: invokespecial #34                 // Method java/io/ByteArrayOutputStream."<init>":()V
     148: astore        7
     150: aload_0
     151: getfield      #2                  // Field maxBufferSize:I
     154: ifle          186
     157: lload         5
     159: aload_0
     160: getfield      #2                  // Field maxBufferSize:I
     163: i2l
     164: lcmp
     165: ifle          186
     168: aload_3
     169: aload_0
     170: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     173: new           #27                 // class io/undertow/io/Receiver$RequestToLargeException
     176: dup
     177: invokespecial #28                 // Method io/undertow/io/Receiver$RequestToLargeException."<init>":()V
     180: invokeinterface #29,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     185: return
     186: aload_0
     187: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     190: invokevirtual #35                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     193: invokevirtual #36                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
     196: invokeinterface #37,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     201: astore        8
     203: aload         8
     205: invokeinterface #38,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     210: astore        9
     212: aload         9
     214: invokevirtual #39                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     217: pop
     218: aload_0
     219: getfield      #7                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
     222: aload         9
     224: invokeinterface #40,  2           // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
     229: istore        10
     231: iload         10
     233: iconst_m1
     234: if_icmpne     265
     237: aload_0
     238: iconst_1
     239: putfield      #4                  // Field done:Z
     242: aload_1
     243: aload_0
     244: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     247: aload         7
     249: invokevirtual #63                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     252: invokeinterface #62,  3           // InterfaceMethod io/undertow/io/Receiver$FullBytesCallback.handle:(Lio/undertow/server/HttpServerExchange;[B)V
     257: aload         8
     259: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     264: return
     265: iload         10
     267: ifne          313
     270: aload_0
     271: getfield      #7                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
     274: invokeinterface #44,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
     279: new           #64                 // class io/undertow/io/AsyncReceiverImpl$4
     282: dup
     283: aload_0
     284: aload_1
     285: aload         7
     287: aload_3
     288: invokespecial #65                 // Method io/undertow/io/AsyncReceiverImpl$4."<init>":(Lio/undertow/io/AsyncReceiverImpl;Lio/undertow/io/Receiver$FullBytesCallback;Ljava/io/ByteArrayOutputStream;Lio/undertow/io/Receiver$ErrorCallback;)V
     291: invokeinterface #47,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     296: aload_0
     297: getfield      #7                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
     300: invokeinterface #48,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.resumeReads:()V
     305: aload         8
     307: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     312: return
     313: aload         9
     315: invokevirtual #49                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     318: pop
     319: aload         9
     321: invokevirtual #50                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     324: ifeq          340
     327: aload         7
     329: aload         9
     331: invokevirtual #51                 // Method java/nio/ByteBuffer.get:()B
     334: invokevirtual #52                 // Method java/io/ByteArrayOutputStream.write:(I)V
     337: goto          319
     340: aload_0
     341: getfield      #2                  // Field maxBufferSize:I
     344: ifle          384
     347: aload         7
     349: invokevirtual #53                 // Method java/io/ByteArrayOutputStream.size:()I
     352: aload_0
     353: getfield      #2                  // Field maxBufferSize:I
     356: if_icmple     384
     359: aload_3
     360: aload_0
     361: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     364: new           #27                 // class io/undertow/io/Receiver$RequestToLargeException
     367: dup
     368: invokespecial #28                 // Method io/undertow/io/Receiver$RequestToLargeException."<init>":()V
     371: invokeinterface #29,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     376: aload         8
     378: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     383: return
     384: goto          212
     387: astore        11
     389: aload_3
     390: aload_0
     391: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     394: aload         11
     396: invokeinterface #29,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     401: aload         8
     403: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     408: return
     409: astore        12
     411: aload         8
     413: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     418: aload         12
     420: athrow
    Exception table:
       from    to  target type
         212   257   387   Class java/io/IOException
         265   305   387   Class java/io/IOException
         313   376   387   Class java/io/IOException
         212   257   409   any
         265   305   409   any
         313   376   409   any
         384   401   409   any
         409   411   409   any

  public void receiveFullBytes(io.undertow.io.Receiver$FullBytesCallback);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #12                 // Field END_EXCHANGE:Lio/undertow/io/Receiver$ErrorCallback;
       5: invokevirtual #66                 // Method receiveFullBytes:(Lio/undertow/io/Receiver$FullBytesCallback;Lio/undertow/io/Receiver$ErrorCallback;)V
       8: return

  public void receivePartialBytes(io.undertow.io.Receiver$PartialBytesCallback, io.undertow.io.Receiver$ErrorCallback);
    Code:
       0: aload_0
       1: getfield      #4                  // Field done:Z
       4: ifeq          16
       7: getstatic     #8                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      10: invokeinterface #14,  1           // InterfaceMethod io/undertow/UndertowMessages.requestBodyAlreadyRead:()Ljava/lang/IllegalStateException;
      15: athrow
      16: aload_2
      17: ifnonnull     26
      20: getstatic     #12                 // Field END_EXCHANGE:Lio/undertow/io/Receiver$ErrorCallback;
      23: goto          27
      26: aload_2
      27: astore_3
      28: aload_1
      29: ifnonnull     43
      32: getstatic     #8                  // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      35: ldc           #15                 // String callback
      37: invokeinterface #16,  2           // InterfaceMethod io/undertow/UndertowMessages.argumentCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      42: athrow
      43: aload_0
      44: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      47: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.isRequestComplete:()Z
      50: ifeq          68
      53: aload_1
      54: aload_0
      55: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      58: getstatic     #61                 // Field EMPTY_BYTE_ARRAY:[B
      61: iconst_1
      62: invokeinterface #67,  4           // InterfaceMethod io/undertow/io/Receiver$PartialBytesCallback.handle:(Lio/undertow/server/HttpServerExchange;[BZ)V
      67: return
      68: aload_0
      69: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      72: invokevirtual #20                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      75: getstatic     #21                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      78: invokevirtual #22                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      81: astore        4
      83: aload         4
      85: ifnull        122
      88: aload         4
      90: invokestatic  #23                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      93: lstore        5
      95: lload         5
      97: ldc2_w        #25                 // long 2147483647l
     100: lcmp
     101: ifle          127
     104: aload_3
     105: aload_0
     106: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     109: new           #27                 // class io/undertow/io/Receiver$RequestToLargeException
     112: dup
     113: invokespecial #28                 // Method io/undertow/io/Receiver$RequestToLargeException."<init>":()V
     116: invokeinterface #29,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     121: return
     122: ldc2_w        #32                 // long -1l
     125: lstore        5
     127: aload_0
     128: getfield      #2                  // Field maxBufferSize:I
     131: ifle          163
     134: lload         5
     136: aload_0
     137: getfield      #2                  // Field maxBufferSize:I
     140: i2l
     141: lcmp
     142: ifle          163
     145: aload_3
     146: aload_0
     147: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     150: new           #27                 // class io/undertow/io/Receiver$RequestToLargeException
     153: dup
     154: invokespecial #28                 // Method io/undertow/io/Receiver$RequestToLargeException."<init>":()V
     157: invokeinterface #29,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     162: return
     163: aload_0
     164: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     167: invokevirtual #35                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     170: invokevirtual #36                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
     173: invokeinterface #37,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     178: astore        7
     180: aload         7
     182: invokeinterface #38,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     187: astore        8
     189: aload_0
     190: getfield      #7                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
     193: invokeinterface #44,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.getReadSetter:()Lorg/xnio/ChannelListener$Setter;
     198: new           #68                 // class io/undertow/io/AsyncReceiverImpl$5
     201: dup
     202: aload_0
     203: aload_1
     204: aload_3
     205: invokespecial #69                 // Method io/undertow/io/AsyncReceiverImpl$5."<init>":(Lio/undertow/io/AsyncReceiverImpl;Lio/undertow/io/Receiver$PartialBytesCallback;Lio/undertow/io/Receiver$ErrorCallback;)V
     208: invokeinterface #47,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     213: aload         8
     215: invokevirtual #39                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     218: pop
     219: aload_0
     220: getfield      #7                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
     223: aload         8
     225: invokeinterface #40,  2           // InterfaceMethod org/xnio/channels/StreamSourceChannel.read:(Ljava/nio/ByteBuffer;)I
     230: istore        9
     232: iload         9
     234: iconst_m1
     235: if_icmpne     265
     238: aload_0
     239: iconst_1
     240: putfield      #4                  // Field done:Z
     243: aload_1
     244: aload_0
     245: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     248: getstatic     #61                 // Field EMPTY_BYTE_ARRAY:[B
     251: iconst_1
     252: invokeinterface #67,  4           // InterfaceMethod io/undertow/io/Receiver$PartialBytesCallback.handle:(Lio/undertow/server/HttpServerExchange;[BZ)V
     257: aload         7
     259: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     264: return
     265: iload         9
     267: ifne          287
     270: aload_0
     271: getfield      #7                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
     274: invokeinterface #48,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.resumeReads:()V
     279: aload         7
     281: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     286: return
     287: aload         8
     289: invokevirtual #49                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     292: pop
     293: aload         8
     295: invokevirtual #70                 // Method java/nio/ByteBuffer.remaining:()I
     298: newarray       byte
     300: astore        10
     302: aload         8
     304: aload         10
     306: invokevirtual #71                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
     309: pop
     310: aload_1
     311: aload_0
     312: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     315: aload         10
     317: iconst_0
     318: invokeinterface #67,  4           // InterfaceMethod io/undertow/io/Receiver$PartialBytesCallback.handle:(Lio/undertow/server/HttpServerExchange;[BZ)V
     323: aload_0
     324: getfield      #1                  // Field paused:Z
     327: ifeq          338
     330: aload         7
     332: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     337: return
     338: goto          213
     341: astore        10
     343: aload_3
     344: aload_0
     345: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     348: aload         10
     350: invokeinterface #29,  3           // InterfaceMethod io/undertow/io/Receiver$ErrorCallback.error:(Lio/undertow/server/HttpServerExchange;Ljava/io/IOException;)V
     355: aload         7
     357: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     362: return
     363: astore        11
     365: aload         7
     367: invokeinterface #43,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     372: aload         11
     374: athrow
    Exception table:
       from    to  target type
         213   257   341   Class java/io/IOException
         265   279   341   Class java/io/IOException
         287   330   341   Class java/io/IOException
         213   257   363   any
         265   279   363   any
         287   330   363   any
         338   355   363   any
         363   365   363   any

  public void receivePartialBytes(io.undertow.io.Receiver$PartialBytesCallback);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #12                 // Field END_EXCHANGE:Lio/undertow/io/Receiver$ErrorCallback;
       5: invokevirtual #72                 // Method receivePartialBytes:(Lio/undertow/io/Receiver$PartialBytesCallback;Lio/undertow/io/Receiver$ErrorCallback;)V
       8: return

  public void pause();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #1                  // Field paused:Z
       5: aload_0
       6: getfield      #7                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
       9: invokeinterface #73,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.suspendReads:()V
      14: return

  public void resume();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #1                  // Field paused:Z
       5: aload_0
       6: getfield      #7                  // Field channel:Lorg/xnio/channels/StreamSourceChannel;
       9: invokeinterface #74,  1           // InterfaceMethod org/xnio/channels/StreamSourceChannel.wakeupReads:()V
      14: return

  static boolean access$000(io.undertow.io.AsyncReceiverImpl);
    Code:
       0: aload_0
       1: getfield      #4                  // Field done:Z
       4: ireturn

  static io.undertow.server.HttpServerExchange access$100(io.undertow.io.AsyncReceiverImpl);
    Code:
       0: aload_0
       1: getfield      #3                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: areturn

  static boolean access$002(io.undertow.io.AsyncReceiverImpl, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #4                  // Field done:Z
       6: ireturn

  static int access$200(io.undertow.io.AsyncReceiverImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxBufferSize:I
       4: ireturn

  static boolean access$300(io.undertow.io.AsyncReceiverImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field paused:Z
       4: ireturn

  static {};
    Code:
       0: new           #75                 // class io/undertow/io/AsyncReceiverImpl$1
       3: dup
       4: invokespecial #76                 // Method io/undertow/io/AsyncReceiverImpl$1."<init>":()V
       7: putstatic     #12                 // Field END_EXCHANGE:Lio/undertow/io/Receiver$ErrorCallback;
      10: iconst_0
      11: newarray       byte
      13: putstatic     #61                 // Field EMPTY_BYTE_ARRAY:[B
      16: return
}
