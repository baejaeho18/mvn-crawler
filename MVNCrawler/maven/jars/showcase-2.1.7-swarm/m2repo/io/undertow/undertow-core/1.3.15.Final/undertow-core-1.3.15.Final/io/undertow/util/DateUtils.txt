Compiled from "DateUtils.java"
public class io.undertow.util.DateUtils {
  private static final java.util.Locale LOCALE_US;

  private static final java.util.TimeZone GMT_ZONE;

  private static final java.lang.String RFC1123_PATTERN;

  private static final java.util.concurrent.atomic.AtomicReference<java.lang.String> cachedDateString;

  private static final java.lang.ThreadLocal<java.text.SimpleDateFormat> RFC1123_PATTERN_FORMAT;

  private static final java.lang.Runnable INVALIDATE_TASK;

  private static final java.lang.String RFC1036_PATTERN;

  private static final java.lang.String ASCITIME_PATTERN;

  private static final java.lang.String OLD_COOKIE_PATTERN;

  private static final java.lang.String COMMON_LOG_PATTERN;

  private static final java.lang.ThreadLocal<java.text.SimpleDateFormat> COMMON_LOG_PATTERN_FORMAT;

  public static java.lang.String toDateString(java.util.Date);
    Code:
       0: getstatic     #3                  // Field RFC1123_PATTERN_FORMAT:Ljava/lang/ThreadLocal;
       3: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #5                  // class java/text/SimpleDateFormat
       9: astore_1
      10: aload_1
      11: getstatic     #6                  // Field GMT_ZONE:Ljava/util/TimeZone;
      14: invokevirtual #7                  // Method java/text/SimpleDateFormat.setTimeZone:(Ljava/util/TimeZone;)V
      17: aload_1
      18: aload_0
      19: invokevirtual #8                  // Method java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      22: areturn

  public static java.lang.String toOldCookieDateString(java.util.Date);
    Code:
       0: new           #5                  // class java/text/SimpleDateFormat
       3: dup
       4: ldc           #10                 // String EEE, dd-MMM-yyyy HH:mm:ss z
       6: getstatic     #2                  // Field LOCALE_US:Ljava/util/Locale;
       9: invokespecial #11                 // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;Ljava/util/Locale;)V
      12: astore_1
      13: aload_1
      14: getstatic     #6                  // Field GMT_ZONE:Ljava/util/TimeZone;
      17: invokevirtual #7                  // Method java/text/SimpleDateFormat.setTimeZone:(Ljava/util/TimeZone;)V
      20: aload_1
      21: aload_0
      22: invokevirtual #8                  // Method java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      25: areturn

  public static java.lang.String toCommonLogFormat(java.util.Date);
    Code:
       0: getstatic     #12                 // Field COMMON_LOG_PATTERN_FORMAT:Ljava/lang/ThreadLocal;
       3: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #5                  // class java/text/SimpleDateFormat
       9: aload_0
      10: invokevirtual #8                  // Method java/text/SimpleDateFormat.format:(Ljava/util/Date;)Ljava/lang/String;
      13: areturn

  public static java.util.Date parseDate(java.lang.String);
    Code:
       0: aload_0
       1: bipush        59
       3: invokevirtual #13                 // Method java/lang/String.indexOf:(I)I
       6: istore_1
       7: iload_1
       8: iflt          20
      11: aload_0
      12: iconst_0
      13: iload_1
      14: invokevirtual #14                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      17: goto          21
      20: aload_0
      21: astore_2
      22: new           #15                 // class java/text/ParsePosition
      25: dup
      26: iconst_0
      27: invokespecial #16                 // Method java/text/ParsePosition."<init>":(I)V
      30: astore_3
      31: getstatic     #3                  // Field RFC1123_PATTERN_FORMAT:Ljava/lang/ThreadLocal;
      34: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      37: checkcast     #5                  // class java/text/SimpleDateFormat
      40: astore        4
      42: aload         4
      44: getstatic     #6                  // Field GMT_ZONE:Ljava/util/TimeZone;
      47: invokevirtual #7                  // Method java/text/SimpleDateFormat.setTimeZone:(Ljava/util/TimeZone;)V
      50: aload         4
      52: aload_2
      53: aload_3
      54: invokevirtual #17                 // Method java/text/SimpleDateFormat.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;
      57: astore        5
      59: aload         5
      61: ifnull        78
      64: aload_3
      65: invokevirtual #18                 // Method java/text/ParsePosition.getIndex:()I
      68: aload_2
      69: invokevirtual #19                 // Method java/lang/String.length:()I
      72: if_icmpne     78
      75: aload         5
      77: areturn
      78: new           #15                 // class java/text/ParsePosition
      81: dup
      82: iconst_0
      83: invokespecial #16                 // Method java/text/ParsePosition."<init>":(I)V
      86: astore_3
      87: new           #5                  // class java/text/SimpleDateFormat
      90: dup
      91: ldc           #20                 // String EEEEEEEEE, dd-MMM-yy HH:mm:ss z
      93: getstatic     #2                  // Field LOCALE_US:Ljava/util/Locale;
      96: invokespecial #11                 // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;Ljava/util/Locale;)V
      99: astore        4
     101: aload         4
     103: getstatic     #6                  // Field GMT_ZONE:Ljava/util/TimeZone;
     106: invokevirtual #7                  // Method java/text/SimpleDateFormat.setTimeZone:(Ljava/util/TimeZone;)V
     109: aload         4
     111: aload_2
     112: aload_3
     113: invokevirtual #17                 // Method java/text/SimpleDateFormat.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;
     116: astore        5
     118: aload         5
     120: ifnull        137
     123: aload_3
     124: invokevirtual #18                 // Method java/text/ParsePosition.getIndex:()I
     127: aload_2
     128: invokevirtual #19                 // Method java/lang/String.length:()I
     131: if_icmpne     137
     134: aload         5
     136: areturn
     137: new           #15                 // class java/text/ParsePosition
     140: dup
     141: iconst_0
     142: invokespecial #16                 // Method java/text/ParsePosition."<init>":(I)V
     145: astore_3
     146: new           #5                  // class java/text/SimpleDateFormat
     149: dup
     150: ldc           #21                 // String EEE MMM d HH:mm:ss yyyyy
     152: getstatic     #2                  // Field LOCALE_US:Ljava/util/Locale;
     155: invokespecial #11                 // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;Ljava/util/Locale;)V
     158: astore        4
     160: aload         4
     162: getstatic     #6                  // Field GMT_ZONE:Ljava/util/TimeZone;
     165: invokevirtual #7                  // Method java/text/SimpleDateFormat.setTimeZone:(Ljava/util/TimeZone;)V
     168: aload         4
     170: aload_2
     171: aload_3
     172: invokevirtual #17                 // Method java/text/SimpleDateFormat.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;
     175: astore        5
     177: aload         5
     179: ifnull        196
     182: aload_3
     183: invokevirtual #18                 // Method java/text/ParsePosition.getIndex:()I
     186: aload_2
     187: invokevirtual #19                 // Method java/lang/String.length:()I
     190: if_icmpne     196
     193: aload         5
     195: areturn
     196: new           #15                 // class java/text/ParsePosition
     199: dup
     200: iconst_0
     201: invokespecial #16                 // Method java/text/ParsePosition."<init>":(I)V
     204: astore_3
     205: new           #5                  // class java/text/SimpleDateFormat
     208: dup
     209: ldc           #10                 // String EEE, dd-MMM-yyyy HH:mm:ss z
     211: getstatic     #2                  // Field LOCALE_US:Ljava/util/Locale;
     214: invokespecial #11                 // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;Ljava/util/Locale;)V
     217: astore        4
     219: aload         4
     221: getstatic     #6                  // Field GMT_ZONE:Ljava/util/TimeZone;
     224: invokevirtual #7                  // Method java/text/SimpleDateFormat.setTimeZone:(Ljava/util/TimeZone;)V
     227: aload         4
     229: aload_2
     230: aload_3
     231: invokevirtual #17                 // Method java/text/SimpleDateFormat.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;
     234: astore        5
     236: aload         5
     238: ifnull        255
     241: aload_3
     242: invokevirtual #18                 // Method java/text/ParsePosition.getIndex:()I
     245: aload_2
     246: invokevirtual #19                 // Method java/lang/String.length:()I
     249: if_icmpne     255
     252: aload         5
     254: areturn
     255: aconst_null
     256: areturn

  public static boolean handleIfModifiedSince(io.undertow.server.HttpServerExchange, java.util.Date);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
       4: getstatic     #23                 // Field io/undertow/util/Headers.IF_MODIFIED_SINCE:Lio/undertow/util/HttpString;
       7: invokevirtual #24                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      10: aload_1
      11: invokestatic  #25                 // Method handleIfModifiedSince:(Ljava/lang/String;Ljava/util/Date;)Z
      14: ireturn

  public static boolean handleIfModifiedSince(java.lang.String, java.util.Date);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_0
       7: ifnonnull     12
      10: iconst_1
      11: ireturn
      12: aload_0
      13: invokestatic  #26                 // Method parseDate:(Ljava/lang/String;)Ljava/util/Date;
      16: astore_2
      17: aload_2
      18: ifnonnull     23
      21: iconst_1
      22: ireturn
      23: aload_1
      24: invokevirtual #27                 // Method java/util/Date.getTime:()J
      27: aload_2
      28: invokevirtual #27                 // Method java/util/Date.getTime:()J
      31: ldc2_w        #28                 // long 999l
      34: ladd
      35: lcmp
      36: ifle          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  public static boolean handleIfUnmodifiedSince(io.undertow.server.HttpServerExchange, java.util.Date);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
       4: getstatic     #30                 // Field io/undertow/util/Headers.IF_UNMODIFIED_SINCE:Lio/undertow/util/HttpString;
       7: invokevirtual #24                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
      10: aload_1
      11: invokestatic  #25                 // Method handleIfModifiedSince:(Ljava/lang/String;Ljava/util/Date;)Z
      14: ireturn

  public static boolean handleIfUnmodifiedSince(java.lang.String, java.util.Date);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_0
       7: ifnonnull     12
      10: iconst_1
      11: ireturn
      12: aload_0
      13: invokestatic  #26                 // Method parseDate:(Ljava/lang/String;)Ljava/util/Date;
      16: astore_2
      17: aload_2
      18: ifnonnull     23
      21: iconst_1
      22: ireturn
      23: aload_1
      24: invokevirtual #27                 // Method java/util/Date.getTime:()J
      27: aload_2
      28: invokevirtual #27                 // Method java/util/Date.getTime:()J
      31: ldc2_w        #28                 // long 999l
      34: ladd
      35: lcmp
      36: ifge          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  public static void addDateHeaderIfRequired(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
       4: astore_1
       5: aload_0
       6: invokevirtual #32                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
       9: invokevirtual #33                 // Method io/undertow/server/ServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
      12: getstatic     #34                 // Field io/undertow/UndertowOptions.ALWAYS_SET_DATE:Lorg/xnio/Option;
      15: iconst_1
      16: invokevirtual #35                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      19: ifeq          128
      22: aload_1
      23: getstatic     #36                 // Field io/undertow/util/Headers.DATE:Lio/undertow/util/HttpString;
      26: invokevirtual #37                 // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
      29: ifne          128
      32: getstatic     #1                  // Field cachedDateString:Ljava/util/concurrent/atomic/AtomicReference;
      35: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      38: checkcast     #39                 // class java/lang/String
      41: astore_2
      42: aload_2
      43: ifnull        58
      46: aload_1
      47: getstatic     #36                 // Field io/undertow/util/Headers.DATE:Lio/undertow/util/HttpString;
      50: aload_2
      51: invokevirtual #40                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
      54: pop
      55: goto          128
      58: invokestatic  #41                 // Method java/lang/System.currentTimeMillis:()J
      61: lstore_3
      62: lload_3
      63: ldc2_w        #42                 // long 1000l
      66: lrem
      67: lstore        5
      69: ldc2_w        #42                 // long 1000l
      72: lload         5
      74: lsub
      75: lstore        7
      77: new           #44                 // class java/util/Date
      80: dup
      81: lload_3
      82: invokespecial #45                 // Method java/util/Date."<init>":(J)V
      85: invokestatic  #46                 // Method toDateString:(Ljava/util/Date;)Ljava/lang/String;
      88: astore_2
      89: getstatic     #1                  // Field cachedDateString:Ljava/util/concurrent/atomic/AtomicReference;
      92: aconst_null
      93: aload_2
      94: invokevirtual #47                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      97: ifeq          119
     100: aload_0
     101: invokevirtual #32                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
     104: invokevirtual #48                 // Method io/undertow/server/ServerConnection.getIoThread:()Lorg/xnio/XnioIoThread;
     107: getstatic     #49                 // Field INVALIDATE_TASK:Ljava/lang/Runnable;
     110: lload         7
     112: getstatic     #50                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     115: invokevirtual #51                 // Method org/xnio/XnioIoThread.executeAfter:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lorg/xnio/XnioExecutor$Key;
     118: pop
     119: aload_1
     120: getstatic     #36                 // Field io/undertow/util/Headers.DATE:Lio/undertow/util/HttpString;
     123: aload_2
     124: invokevirtual #40                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     127: pop
     128: return

  private io.undertow.util.DateUtils();
    Code:
       0: aload_0
       1: invokespecial #52                 // Method java/lang/Object."<init>":()V
       4: return

  static java.util.Locale access$000();
    Code:
       0: getstatic     #2                  // Field LOCALE_US:Ljava/util/Locale;
       3: areturn

  static java.util.concurrent.atomic.AtomicReference access$100();
    Code:
       0: getstatic     #1                  // Field cachedDateString:Ljava/util/concurrent/atomic/AtomicReference;
       3: areturn

  static {};
    Code:
       0: getstatic     #53                 // Field java/util/Locale.US:Ljava/util/Locale;
       3: putstatic     #2                  // Field LOCALE_US:Ljava/util/Locale;
       6: ldc           #54                 // String GMT
       8: invokestatic  #55                 // Method java/util/TimeZone.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;
      11: putstatic     #6                  // Field GMT_ZONE:Ljava/util/TimeZone;
      14: new           #56                 // class java/util/concurrent/atomic/AtomicReference
      17: dup
      18: invokespecial #57                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      21: putstatic     #1                  // Field cachedDateString:Ljava/util/concurrent/atomic/AtomicReference;
      24: new           #58                 // class io/undertow/util/DateUtils$1
      27: dup
      28: invokespecial #59                 // Method io/undertow/util/DateUtils$1."<init>":()V
      31: putstatic     #3                  // Field RFC1123_PATTERN_FORMAT:Ljava/lang/ThreadLocal;
      34: new           #60                 // class io/undertow/util/DateUtils$2
      37: dup
      38: invokespecial #61                 // Method io/undertow/util/DateUtils$2."<init>":()V
      41: putstatic     #49                 // Field INVALIDATE_TASK:Ljava/lang/Runnable;
      44: new           #62                 // class io/undertow/util/DateUtils$3
      47: dup
      48: invokespecial #63                 // Method io/undertow/util/DateUtils$3."<init>":()V
      51: putstatic     #12                 // Field COMMON_LOG_PATTERN_FORMAT:Ljava/lang/ThreadLocal;
      54: return
}
