Compiled from "AjpClientRequestClientStreamSinkChannel.java"
public class io.undertow.protocols.ajp.AjpClientRequestClientStreamSinkChannel extends io.undertow.protocols.ajp.AbstractAjpClientStreamSinkChannel {
  private final org.xnio.ChannelListener<io.undertow.protocols.ajp.AjpClientRequestClientStreamSinkChannel> finishListener;

  private static final int DEFAULT_MAX_DATA_SIZE;

  private final io.undertow.util.HeaderMap headers;

  private final java.lang.String path;

  private final io.undertow.util.HttpString method;

  private final io.undertow.util.HttpString protocol;

  private final io.undertow.util.Attachable attachable;

  private boolean firstFrameWritten;

  private long dataSize;

  private int requestedChunkSize;

  private io.undertow.server.protocol.framed.SendFrameHeader header;

  private boolean discardMode;

  io.undertow.protocols.ajp.AjpClientRequestClientStreamSinkChannel(io.undertow.protocols.ajp.AjpClientChannel, org.xnio.ChannelListener<io.undertow.protocols.ajp.AjpClientRequestClientStreamSinkChannel>, io.undertow.util.HeaderMap, java.lang.String, io.undertow.util.HttpString, io.undertow.util.HttpString, io.undertow.util.Attachable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method io/undertow/protocols/ajp/AbstractAjpClientStreamSinkChannel."<init>":(Lio/undertow/protocols/ajp/AjpClientChannel;)V
       5: aload_0
       6: iconst_0
       7: putfield      #3                  // Field firstFrameWritten:Z
      10: aload_0
      11: iconst_m1
      12: putfield      #4                  // Field requestedChunkSize:I
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field discardMode:Z
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field finishListener:Lorg/xnio/ChannelListener;
      25: aload_0
      26: aload_3
      27: putfield      #7                  // Field headers:Lio/undertow/util/HeaderMap;
      30: aload_0
      31: aload         4
      33: putfield      #8                  // Field path:Ljava/lang/String;
      36: aload_0
      37: aload         5
      39: putfield      #9                  // Field method:Lio/undertow/util/HttpString;
      42: aload_0
      43: aload         6
      45: putfield      #10                 // Field protocol:Lio/undertow/util/HttpString;
      48: aload_0
      49: aload         7
      51: putfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
      54: return

  private io.undertow.server.protocol.framed.SendFrameHeader createFrameHeaderImpl();
    Code:
       0: aload_0
       1: getfield      #5                  // Field discardMode:Z
       4: ifeq          44
       7: aload_0
       8: invokevirtual #12                 // Method getBuffer:()Ljava/nio/ByteBuffer;
      11: invokevirtual #13                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      14: pop
      15: aload_0
      16: invokevirtual #12                 // Method getBuffer:()Ljava/nio/ByteBuffer;
      19: invokevirtual #14                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      22: pop
      23: new           #15                 // class io/undertow/server/protocol/framed/SendFrameHeader
      26: dup
      27: new           #16                 // class io/undertow/util/ImmediatePooledByteBuffer
      30: dup
      31: iconst_0
      32: newarray       byte
      34: invokestatic  #17                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      37: invokespecial #18                 // Method io/undertow/util/ImmediatePooledByteBuffer."<init>":(Ljava/nio/ByteBuffer;)V
      40: invokespecial #19                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(Lio/undertow/connector/PooledByteBuffer;)V
      43: areturn
      44: aload_0
      45: invokevirtual #20                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      48: checkcast     #21                 // class io/undertow/protocols/ajp/AjpClientChannel
      51: invokevirtual #22                 // Method io/undertow/protocols/ajp/AjpClientChannel.getBufferPool:()Lio/undertow/connector/ByteBufferPool;
      54: invokeinterface #23,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      59: astore_1
      60: aload_1
      61: invokeinterface #24,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      66: astore_2
      67: aload_0
      68: invokevirtual #12                 // Method getBuffer:()Ljava/nio/ByteBuffer;
      71: astore_3
      72: aload_3
      73: invokevirtual #25                 // Method java/nio/ByteBuffer.remaining:()I
      76: istore        4
      78: aload_0
      79: getfield      #3                  // Field firstFrameWritten:Z
      82: ifne          103
      85: aload_0
      86: getfield      #4                  // Field requestedChunkSize:I
      89: ifne          103
      92: new           #15                 // class io/undertow/server/protocol/framed/SendFrameHeader
      95: dup
      96: iload         4
      98: aconst_null
      99: invokespecial #26                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(ILio/undertow/connector/PooledByteBuffer;)V
     102: areturn
     103: aload_0
     104: invokevirtual #20                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
     107: checkcast     #21                 // class io/undertow/protocols/ajp/AjpClientChannel
     110: invokevirtual #27                 // Method io/undertow/protocols/ajp/AjpClientChannel.getSettings:()Lorg/xnio/OptionMap;
     113: getstatic     #28                 // Field io/undertow/UndertowOptions.MAX_AJP_PACKET_SIZE:Lorg/xnio/Option;
     116: sipush        8192
     119: invokevirtual #30                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
     122: bipush        6
     124: isub
     125: istore        5
     127: aload_0
     128: getfield      #3                  // Field firstFrameWritten:Z
     131: ifne          1090
     134: aload_0
     135: getfield      #7                  // Field headers:Lio/undertow/util/HeaderMap;
     138: getstatic     #31                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
     141: invokevirtual #32                 // Method io/undertow/util/HeaderMap.getFirst:(Lio/undertow/util/HttpString;)Ljava/lang/String;
     144: astore        6
     146: aload         6
     148: ifnull        186
     151: aload_0
     152: aload         6
     154: invokestatic  #33                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     157: putfield      #34                 // Field dataSize:J
     160: aload_0
     161: iload         5
     163: putfield      #4                  // Field requestedChunkSize:I
     166: iload         4
     168: i2l
     169: aload_0
     170: getfield      #34                 // Field dataSize:J
     173: lcmp
     174: ifle          265
     177: getstatic     #35                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     180: invokeinterface #36,  1           // InterfaceMethod io/undertow/UndertowMessages.fixedLengthOverflow:()Ljava/lang/IllegalStateException;
     185: athrow
     186: aload_0
     187: invokevirtual #37                 // Method isWritesShutdown:()Z
     190: ifeq          236
     193: aload_0
     194: getfield      #7                  // Field headers:Lio/undertow/util/HeaderMap;
     197: getstatic     #38                 // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
     200: invokevirtual #39                 // Method io/undertow/util/HeaderMap.contains:(Lio/undertow/util/HttpString;)Z
     203: ifne          236
     206: aload_0
     207: getfield      #7                  // Field headers:Lio/undertow/util/HeaderMap;
     210: getstatic     #31                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
     213: iload         4
     215: i2l
     216: invokevirtual #40                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;J)Lio/undertow/util/HeaderMap;
     219: pop
     220: aload_0
     221: iload         4
     223: i2l
     224: putfield      #34                 // Field dataSize:J
     227: aload_0
     228: iload         5
     230: putfield      #4                  // Field requestedChunkSize:I
     233: goto          265
     236: aload_0
     237: getfield      #7                  // Field headers:Lio/undertow/util/HeaderMap;
     240: getstatic     #38                 // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
     243: getstatic     #41                 // Field io/undertow/util/Headers.CHUNKED:Lio/undertow/util/HttpString;
     246: invokevirtual #42                 // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
     249: invokevirtual #43                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     252: pop
     253: aload_0
     254: ldc2_w        #44                 // long -1l
     257: putfield      #34                 // Field dataSize:J
     260: aload_0
     261: iconst_0
     262: putfield      #4                  // Field requestedChunkSize:I
     265: aload_0
     266: iconst_1
     267: putfield      #3                  // Field firstFrameWritten:Z
     270: aload_0
     271: getfield      #8                  // Field path:Ljava/lang/String;
     274: bipush        63
     276: invokevirtual #46                 // Method java/lang/String.indexOf:(I)I
     279: istore        9
     281: iload         9
     283: iconst_m1
     284: if_icmpne     299
     287: aload_0
     288: getfield      #8                  // Field path:Ljava/lang/String;
     291: astore        7
     293: aconst_null
     294: astore        8
     296: goto          324
     299: aload_0
     300: getfield      #8                  // Field path:Ljava/lang/String;
     303: iconst_0
     304: iload         9
     306: invokevirtual #47                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     309: astore        7
     311: aload_0
     312: getfield      #8                  // Field path:Ljava/lang/String;
     315: iload         9
     317: iconst_1
     318: iadd
     319: invokevirtual #48                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     322: astore        8
     324: aload_2
     325: bipush        18
     327: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     330: pop
     331: aload_2
     332: bipush        52
     334: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     337: pop
     338: aload_2
     339: iconst_0
     340: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     343: pop
     344: aload_2
     345: iconst_0
     346: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     349: pop
     350: aload_2
     351: iconst_2
     352: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     355: pop
     356: iconst_0
     357: istore        10
     359: getstatic     #50                 // Field io/undertow/protocols/ajp/AjpConstants.HTTP_METHODS_MAP:Ljava/util/Map;
     362: aload_0
     363: getfield      #9                  // Field method:Lio/undertow/util/HttpString;
     366: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     371: checkcast     #52                 // class java/lang/Integer
     374: astore        11
     376: aload         11
     378: ifnonnull     392
     381: sipush        255
     384: invokestatic  #53                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     387: astore        11
     389: iconst_1
     390: istore        10
     392: aload_2
     393: aload         11
     395: invokevirtual #54                 // Method java/lang/Integer.intValue:()I
     398: i2b
     399: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     402: pop
     403: aload_2
     404: aload_0
     405: getfield      #10                 // Field protocol:Lio/undertow/util/HttpString;
     408: invokestatic  #55                 // Method io/undertow/protocols/ajp/AjpUtils.putHttpString:(Ljava/nio/ByteBuffer;Lio/undertow/util/HttpString;)V
     411: aload_2
     412: aload         7
     414: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     417: aload_2
     418: aload_0
     419: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     422: getstatic     #57                 // Field io/undertow/client/ProxiedRequestAttachments.REMOTE_ADDRESS:Lio/undertow/util/AttachmentKey;
     425: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     430: checkcast     #59                 // class java/lang/String
     433: invokestatic  #60                 // Method io/undertow/protocols/ajp/AjpUtils.notNull:(Ljava/lang/String;)Ljava/lang/String;
     436: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     439: aload_2
     440: aload_0
     441: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     444: getstatic     #61                 // Field io/undertow/client/ProxiedRequestAttachments.REMOTE_HOST:Lio/undertow/util/AttachmentKey;
     447: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     452: checkcast     #59                 // class java/lang/String
     455: invokestatic  #60                 // Method io/undertow/protocols/ajp/AjpUtils.notNull:(Ljava/lang/String;)Ljava/lang/String;
     458: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     461: aload_2
     462: aload_0
     463: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     466: getstatic     #62                 // Field io/undertow/client/ProxiedRequestAttachments.SERVER_NAME:Lio/undertow/util/AttachmentKey;
     469: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     474: checkcast     #59                 // class java/lang/String
     477: invokestatic  #60                 // Method io/undertow/protocols/ajp/AjpUtils.notNull:(Ljava/lang/String;)Ljava/lang/String;
     480: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     483: aload_2
     484: aload_0
     485: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     488: getstatic     #63                 // Field io/undertow/client/ProxiedRequestAttachments.SERVER_PORT:Lio/undertow/util/AttachmentKey;
     491: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     496: checkcast     #52                 // class java/lang/Integer
     499: invokestatic  #64                 // Method io/undertow/protocols/ajp/AjpUtils.notNull:(Ljava/lang/Integer;)I
     502: invokestatic  #65                 // Method io/undertow/protocols/ajp/AjpUtils.putInt:(Ljava/nio/ByteBuffer;I)V
     505: aload_2
     506: aload_0
     507: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     510: getstatic     #66                 // Field io/undertow/client/ProxiedRequestAttachments.IS_SSL:Lio/undertow/util/AttachmentKey;
     513: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     518: checkcast     #67                 // class java/lang/Boolean
     521: invokestatic  #68                 // Method io/undertow/protocols/ajp/AjpUtils.notNull:(Ljava/lang/Boolean;)Z
     524: ifeq          531
     527: iconst_1
     528: goto          532
     531: iconst_0
     532: i2b
     533: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     536: pop
     537: iconst_0
     538: istore        12
     540: aload_0
     541: getfield      #7                  // Field headers:Lio/undertow/util/HeaderMap;
     544: astore        13
     546: aload         13
     548: invokevirtual #69                 // Method io/undertow/util/HeaderMap.getHeaderNames:()Ljava/util/Collection;
     551: invokeinterface #70,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     556: astore        14
     558: aload         14
     560: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     565: ifeq          598
     568: aload         14
     570: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     575: checkcast     #73                 // class io/undertow/util/HttpString
     578: astore        15
     580: iload         12
     582: aload         13
     584: aload         15
     586: invokevirtual #74                 // Method io/undertow/util/HeaderMap.get:(Lio/undertow/util/HttpString;)Lio/undertow/util/HeaderValues;
     589: invokevirtual #75                 // Method io/undertow/util/HeaderValues.size:()I
     592: iadd
     593: istore        12
     595: goto          558
     598: aload_2
     599: iload         12
     601: invokestatic  #65                 // Method io/undertow/protocols/ajp/AjpUtils.putInt:(Ljava/nio/ByteBuffer;I)V
     604: aload         13
     606: invokevirtual #69                 // Method io/undertow/util/HeaderMap.getHeaderNames:()Ljava/util/Collection;
     609: invokeinterface #70,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     614: astore        14
     616: aload         14
     618: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     623: ifeq          722
     626: aload         14
     628: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     633: checkcast     #73                 // class io/undertow/util/HttpString
     636: astore        15
     638: aload         13
     640: aload         15
     642: invokevirtual #74                 // Method io/undertow/util/HeaderMap.get:(Lio/undertow/util/HttpString;)Lio/undertow/util/HeaderValues;
     645: invokevirtual #76                 // Method io/undertow/util/HeaderValues.iterator:()Ljava/util/Iterator;
     648: astore        16
     650: aload         16
     652: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     657: ifeq          719
     660: aload         16
     662: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     667: checkcast     #59                 // class java/lang/String
     670: astore        17
     672: getstatic     #77                 // Field io/undertow/protocols/ajp/AjpConstants.HEADER_MAP:Ljava/util/Map;
     675: aload         15
     677: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     682: checkcast     #52                 // class java/lang/Integer
     685: astore        18
     687: aload         18
     689: ifnull        704
     692: aload_2
     693: aload         18
     695: invokevirtual #54                 // Method java/lang/Integer.intValue:()I
     698: invokestatic  #65                 // Method io/undertow/protocols/ajp/AjpUtils.putInt:(Ljava/nio/ByteBuffer;I)V
     701: goto          710
     704: aload_2
     705: aload         15
     707: invokestatic  #55                 // Method io/undertow/protocols/ajp/AjpUtils.putHttpString:(Ljava/nio/ByteBuffer;Lio/undertow/util/HttpString;)V
     710: aload_2
     711: aload         17
     713: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     716: goto          650
     719: goto          616
     722: aload         8
     724: ifnull        739
     727: aload_2
     728: iconst_5
     729: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     732: pop
     733: aload_2
     734: aload         8
     736: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     739: aload_0
     740: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     743: getstatic     #78                 // Field io/undertow/client/ProxiedRequestAttachments.REMOTE_USER:Lio/undertow/util/AttachmentKey;
     746: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     751: checkcast     #59                 // class java/lang/String
     754: astore        14
     756: aload         14
     758: ifnull        773
     761: aload_2
     762: iconst_3
     763: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     766: pop
     767: aload_2
     768: aload         14
     770: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     773: aload_0
     774: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     777: getstatic     #79                 // Field io/undertow/client/ProxiedRequestAttachments.AUTH_TYPE:Lio/undertow/util/AttachmentKey;
     780: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     785: checkcast     #59                 // class java/lang/String
     788: astore        15
     790: aload         15
     792: ifnull        807
     795: aload_2
     796: iconst_4
     797: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     800: pop
     801: aload_2
     802: aload         15
     804: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     807: aload_0
     808: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     811: getstatic     #80                 // Field io/undertow/client/ProxiedRequestAttachments.ROUTE:Lio/undertow/util/AttachmentKey;
     814: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     819: checkcast     #59                 // class java/lang/String
     822: astore        16
     824: aload         16
     826: ifnull        842
     829: aload_2
     830: bipush        6
     832: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     835: pop
     836: aload_2
     837: aload         16
     839: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     842: aload_0
     843: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     846: getstatic     #81                 // Field io/undertow/client/ProxiedRequestAttachments.SSL_CERT:Lio/undertow/util/AttachmentKey;
     849: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     854: checkcast     #59                 // class java/lang/String
     857: astore        17
     859: aload         17
     861: ifnull        877
     864: aload_2
     865: bipush        7
     867: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     870: pop
     871: aload_2
     872: aload         17
     874: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     877: aload_0
     878: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     881: getstatic     #82                 // Field io/undertow/client/ProxiedRequestAttachments.SSL_CYPHER:Lio/undertow/util/AttachmentKey;
     884: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     889: checkcast     #59                 // class java/lang/String
     892: astore        18
     894: aload         18
     896: ifnull        912
     899: aload_2
     900: bipush        8
     902: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     905: pop
     906: aload_2
     907: aload         18
     909: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     912: aload_0
     913: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     916: getstatic     #83                 // Field io/undertow/client/ProxiedRequestAttachments.SSL_SESSION_ID:Lio/undertow/util/AttachmentKey;
     919: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     924: checkcast     #84                 // class "[B"
     927: astore        19
     929: aload         19
     931: ifnull        951
     934: aload_2
     935: bipush        9
     937: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     940: pop
     941: aload_2
     942: aload         19
     944: iconst_0
     945: invokestatic  #85                 // Method io/undertow/util/FlexBase64.encodeString:([BZ)Ljava/lang/String;
     948: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     951: aload_0
     952: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     955: getstatic     #86                 // Field io/undertow/client/ProxiedRequestAttachments.SSL_KEY_SIZE:Lio/undertow/util/AttachmentKey;
     958: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     963: checkcast     #52                 // class java/lang/Integer
     966: astore        20
     968: aload         20
     970: ifnull        989
     973: aload_2
     974: bipush        11
     976: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     979: pop
     980: aload_2
     981: aload         20
     983: invokevirtual #87                 // Method java/lang/Integer.toString:()Ljava/lang/String;
     986: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
     989: aload_0
     990: getfield      #11                 // Field attachable:Lio/undertow/util/Attachable;
     993: getstatic     #88                 // Field io/undertow/client/ProxiedRequestAttachments.SECRET:Lio/undertow/util/AttachmentKey;
     996: invokeinterface #58,  2           // InterfaceMethod io/undertow/util/Attachable.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
    1001: checkcast     #59                 // class java/lang/String
    1004: astore        21
    1006: aload         21
    1008: ifnull        1024
    1011: aload_2
    1012: bipush        12
    1014: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1017: pop
    1018: aload_2
    1019: aload         21
    1021: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
    1024: iload         10
    1026: ifeq          1047
    1029: aload_2
    1030: bipush        13
    1032: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1035: pop
    1036: aload_2
    1037: aload_0
    1038: getfield      #9                  // Field method:Lio/undertow/util/HttpString;
    1041: invokevirtual #42                 // Method io/undertow/util/HttpString.toString:()Ljava/lang/String;
    1044: invokestatic  #56                 // Method io/undertow/protocols/ajp/AjpUtils.putString:(Ljava/nio/ByteBuffer;Ljava/lang/String;)V
    1047: aload_2
    1048: iconst_m1
    1049: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1052: pop
    1053: aload_2
    1054: invokevirtual #89                 // Method java/nio/ByteBuffer.position:()I
    1057: iconst_4
    1058: isub
    1059: istore        22
    1061: aload_2
    1062: iconst_2
    1063: iload         22
    1065: bipush        8
    1067: ishr
    1068: sipush        255
    1071: iand
    1072: i2b
    1073: invokevirtual #90                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
    1076: pop
    1077: aload_2
    1078: iconst_3
    1079: iload         22
    1081: sipush        255
    1084: iand
    1085: i2b
    1086: invokevirtual #90                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
    1089: pop
    1090: aload_0
    1091: getfield      #34                 // Field dataSize:J
    1094: lconst_0
    1095: lcmp
    1096: ifne          1113
    1099: aload_2
    1100: invokevirtual #14                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
    1103: pop
    1104: new           #15                 // class io/undertow/server/protocol/framed/SendFrameHeader
    1107: dup
    1108: aload_1
    1109: invokespecial #19                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(Lio/undertow/connector/PooledByteBuffer;)V
    1112: areturn
    1113: aload_0
    1114: getfield      #4                  // Field requestedChunkSize:I
    1117: ifle          1371
    1120: aload_0
    1121: invokevirtual #37                 // Method isWritesShutdown:()Z
    1124: ifeq          1184
    1127: iload         4
    1129: ifne          1184
    1132: aload_2
    1133: bipush        18
    1135: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1138: pop
    1139: aload_2
    1140: bipush        52
    1142: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1145: pop
    1146: aload_2
    1147: iconst_0
    1148: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1151: pop
    1152: aload_2
    1153: iconst_2
    1154: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1157: pop
    1158: aload_2
    1159: iconst_0
    1160: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1163: pop
    1164: aload_2
    1165: iconst_0
    1166: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1169: pop
    1170: aload_2
    1171: invokevirtual #14                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
    1174: pop
    1175: new           #15                 // class io/undertow/server/protocol/framed/SendFrameHeader
    1178: dup
    1179: aload_1
    1180: invokespecial #19                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(Lio/undertow/connector/PooledByteBuffer;)V
    1183: areturn
    1184: iload         4
    1186: istore        6
    1188: iload         6
    1190: iload         5
    1192: invokestatic  #91                 // Method java/lang/Math.min:(II)I
    1195: istore        6
    1197: iload         6
    1199: aload_0
    1200: getfield      #4                  // Field requestedChunkSize:I
    1203: invokestatic  #91                 // Method java/lang/Math.min:(II)I
    1206: istore        6
    1208: iload         6
    1210: iconst_2
    1211: iadd
    1212: istore        7
    1214: aload_2
    1215: bipush        18
    1217: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1220: pop
    1221: aload_2
    1222: bipush        52
    1224: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1227: pop
    1228: aload_2
    1229: iload         7
    1231: bipush        8
    1233: ishr
    1234: sipush        255
    1237: iand
    1238: i2b
    1239: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1242: pop
    1243: aload_2
    1244: iload         7
    1246: sipush        255
    1249: iand
    1250: i2b
    1251: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1254: pop
    1255: aload_2
    1256: iload         6
    1258: bipush        8
    1260: ishr
    1261: sipush        255
    1264: iand
    1265: i2b
    1266: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1269: pop
    1270: aload_2
    1271: iload         6
    1273: sipush        255
    1276: iand
    1277: i2b
    1278: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1281: pop
    1282: aload_0
    1283: iconst_0
    1284: putfield      #4                  // Field requestedChunkSize:I
    1287: iload         6
    1289: iload         4
    1291: if_icmpge     1342
    1294: aload_3
    1295: aload_0
    1296: invokevirtual #12                 // Method getBuffer:()Ljava/nio/ByteBuffer;
    1299: invokevirtual #89                 // Method java/nio/ByteBuffer.position:()I
    1302: iload         6
    1304: iadd
    1305: invokevirtual #92                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
    1308: pop
    1309: aload_2
    1310: invokevirtual #14                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
    1313: pop
    1314: new           #15                 // class io/undertow/server/protocol/framed/SendFrameHeader
    1317: dup
    1318: iload         4
    1320: iload         6
    1322: isub
    1323: aload_1
    1324: aload_0
    1325: getfield      #34                 // Field dataSize:J
    1328: lconst_0
    1329: lcmp
    1330: ifge          1337
    1333: iconst_1
    1334: goto          1338
    1337: iconst_0
    1338: invokespecial #93                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(ILio/undertow/connector/PooledByteBuffer;Z)V
    1341: areturn
    1342: aload_2
    1343: invokevirtual #14                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
    1346: pop
    1347: new           #15                 // class io/undertow/server/protocol/framed/SendFrameHeader
    1350: dup
    1351: iconst_0
    1352: aload_1
    1353: aload_0
    1354: getfield      #34                 // Field dataSize:J
    1357: lconst_0
    1358: lcmp
    1359: ifge          1366
    1362: iconst_1
    1363: goto          1367
    1366: iconst_0
    1367: invokespecial #93                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(ILio/undertow/connector/PooledByteBuffer;Z)V
    1370: areturn
    1371: aload_2
    1372: invokevirtual #14                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
    1375: pop
    1376: aload_2
    1377: invokevirtual #25                 // Method java/nio/ByteBuffer.remaining:()I
    1380: ifne          1401
    1383: aload_1
    1384: invokeinterface #94,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
    1389: new           #15                 // class io/undertow/server/protocol/framed/SendFrameHeader
    1392: dup
    1393: iload         4
    1395: aconst_null
    1396: iconst_1
    1397: invokespecial #93                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(ILio/undertow/connector/PooledByteBuffer;Z)V
    1400: areturn
    1401: aload_3
    1402: aload_3
    1403: invokevirtual #89                 // Method java/nio/ByteBuffer.position:()I
    1406: invokevirtual #92                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
    1409: pop
    1410: new           #15                 // class io/undertow/server/protocol/framed/SendFrameHeader
    1413: dup
    1414: iload         4
    1416: aload_1
    1417: iconst_1
    1418: invokespecial #93                 // Method io/undertow/server/protocol/framed/SendFrameHeader."<init>":(ILio/undertow/connector/PooledByteBuffer;Z)V
    1421: areturn

  io.undertow.server.protocol.framed.SendFrameHeader generateSendFrameHeader();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #95                 // Method createFrameHeaderImpl:()Lio/undertow/server/protocol/framed/SendFrameHeader;
       5: putfield      #96                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
       8: aload_0
       9: getfield      #96                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      12: areturn

  void chunkRequested(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field requestedChunkSize:I
       5: aload_0
       6: invokevirtual #20                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       9: checkcast     #21                 // class io/undertow/protocols/ajp/AjpClientChannel
      12: invokevirtual #97                 // Method io/undertow/protocols/ajp/AjpClientChannel.recalculateHeldFrames:()V
      15: return

  public void startDiscard();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field discardMode:Z
       5: aload_0
       6: invokevirtual #20                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
       9: checkcast     #21                 // class io/undertow/protocols/ajp/AjpClientChannel
      12: invokevirtual #97                 // Method io/undertow/protocols/ajp/AjpClientChannel.recalculateHeldFrames:()V
      15: goto          23
      18: astore_1
      19: aload_0
      20: invokevirtual #99                 // Method markBroken:()V
      23: return
    Exception table:
       from    to  target type
           5    15    18   Class java/io/IOException

  protected final io.undertow.server.protocol.framed.SendFrameHeader createFrameHeader();
    Code:
       0: aload_0
       1: getfield      #96                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
       4: astore_1
       5: aload_0
       6: aconst_null
       7: putfield      #96                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
      10: aload_1
      11: areturn

  protected void handleFlushComplete(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #100                // Method io/undertow/protocols/ajp/AbstractAjpClientStreamSinkChannel.handleFlushComplete:(Z)V
       5: iload_1
       6: ifeq          19
       9: aload_0
      10: invokevirtual #20                 // Method getChannel:()Lio/undertow/server/protocol/framed/AbstractFramedChannel;
      13: checkcast     #21                 // class io/undertow/protocols/ajp/AjpClientChannel
      16: invokevirtual #101                // Method io/undertow/protocols/ajp/AjpClientChannel.sinkDone:()V
      19: iload_1
      20: ifeq          40
      23: aload_0
      24: getfield      #6                  // Field finishListener:Lorg/xnio/ChannelListener;
      27: ifnull        40
      30: aload_0
      31: getfield      #6                  // Field finishListener:Lorg/xnio/ChannelListener;
      34: aload_0
      35: invokeinterface #102,  2          // InterfaceMethod org/xnio/ChannelListener.handleEvent:(Ljava/nio/channels/Channel;)V
      40: return

  public void clearHeader();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #96                 // Field header:Lio/undertow/server/protocol/framed/SendFrameHeader;
       5: return
}
