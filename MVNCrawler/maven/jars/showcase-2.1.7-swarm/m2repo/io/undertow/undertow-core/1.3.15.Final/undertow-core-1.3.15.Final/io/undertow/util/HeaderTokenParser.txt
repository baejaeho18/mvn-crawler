Compiled from "HeaderTokenParser.java"
public class io.undertow.util.HeaderTokenParser<E extends io.undertow.util.HeaderToken> {
  private static final char EQUALS;

  private static final char COMMA;

  private static final char QUOTE;

  private static final char ESCAPE;

  private final java.util.Map<java.lang.String, E> expectedTokens;

  public io.undertow.util.HeaderTokenParser(java.util.Map<java.lang.String, E>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field expectedTokens:Ljava/util/Map;
       9: return

  public java.util.Map<E, java.lang.String> parseHeader(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method java/lang/String.toCharArray:()[C
       4: astore_2
       5: new           #4                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #5                  // Method java/util/LinkedHashMap."<init>":()V
      12: astore_3
      13: getstatic     #6                  // Field io/undertow/util/HeaderTokenParser$SearchingFor.START_OF_NAME:Lio/undertow/util/HeaderTokenParser$SearchingFor;
      16: astore        4
      18: iconst_0
      19: istore        5
      21: aconst_null
      22: astore        6
      24: iconst_0
      25: istore        7
      27: iconst_0
      28: istore        8
      30: iconst_0
      31: istore        9
      33: iconst_0
      34: istore        10
      36: iload         10
      38: aload_2
      39: arraylength
      40: if_icmpge     449
      43: getstatic     #7                  // Field io/undertow/util/HeaderTokenParser$1.$SwitchMap$io$undertow$util$HeaderTokenParser$SearchingFor:[I
      46: aload         4
      48: invokevirtual #8                  // Method io/undertow/util/HeaderTokenParser$SearchingFor.ordinal:()I
      51: iaload
      52: tableswitch   { // 1 to 5
                     1: 88
                     2: 119
                     3: 181
                     4: 236
                     5: 395
               default: 443
          }
      88: aload_2
      89: iload         10
      91: caload
      92: bipush        44
      94: if_icmpeq     443
      97: aload_2
      98: iload         10
     100: caload
     101: invokestatic  #10                 // Method java/lang/Character.isWhitespace:(C)Z
     104: ifne          443
     107: iload         10
     109: istore        5
     111: getstatic     #11                 // Field io/undertow/util/HeaderTokenParser$SearchingFor.EQUALS_SIGN:Lio/undertow/util/HeaderTokenParser$SearchingFor;
     114: astore        4
     116: goto          443
     119: aload_2
     120: iload         10
     122: caload
     123: bipush        61
     125: if_icmpne     443
     128: aload_2
     129: iload         5
     131: iload         10
     133: iload         5
     135: isub
     136: invokestatic  #12                 // Method java/lang/String.valueOf:([CII)Ljava/lang/String;
     139: astore        11
     141: aload_0
     142: getfield      #2                  // Field expectedTokens:Ljava/util/Map;
     145: aload         11
     147: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     152: checkcast     #14                 // class io/undertow/util/HeaderToken
     155: astore        6
     157: aload         6
     159: ifnonnull     173
     162: getstatic     #15                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     165: aload         11
     167: invokeinterface #16,  2           // InterfaceMethod io/undertow/UndertowMessages.unexpectedTokenInHeader:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
     172: athrow
     173: getstatic     #17                 // Field io/undertow/util/HeaderTokenParser$SearchingFor.START_OF_VALUE:Lio/undertow/util/HeaderTokenParser$SearchingFor;
     176: astore        4
     178: goto          443
     181: aload_2
     182: iload         10
     184: caload
     185: invokestatic  #10                 // Method java/lang/Character.isWhitespace:(C)Z
     188: ifne          443
     191: aload_2
     192: iload         10
     194: caload
     195: bipush        34
     197: if_icmpne     224
     200: aload         6
     202: invokeinterface #18,  1           // InterfaceMethod io/undertow/util/HeaderToken.isAllowQuoted:()Z
     207: ifeq          224
     210: iload         10
     212: iconst_1
     213: iadd
     214: istore        7
     216: getstatic     #19                 // Field io/undertow/util/HeaderTokenParser$SearchingFor.LAST_QUOTE:Lio/undertow/util/HeaderTokenParser$SearchingFor;
     219: astore        4
     221: goto          443
     224: iload         10
     226: istore        7
     228: getstatic     #20                 // Field io/undertow/util/HeaderTokenParser$SearchingFor.END_OF_VALUE:Lio/undertow/util/HeaderTokenParser$SearchingFor;
     231: astore        4
     233: goto          443
     236: aload_2
     237: iload         10
     239: caload
     240: bipush        92
     242: if_icmpne     254
     245: iinc          8, 1
     248: iconst_1
     249: istore        9
     251: goto          443
     254: aload_2
     255: iload         10
     257: caload
     258: bipush        34
     260: if_icmpne     389
     263: iload         8
     265: iconst_2
     266: irem
     267: ifne          389
     270: aload_2
     271: iload         7
     273: iload         10
     275: iload         7
     277: isub
     278: invokestatic  #12                 // Method java/lang/String.valueOf:([CII)Ljava/lang/String;
     281: astore        11
     283: iload         9
     285: ifeq          367
     288: new           #21                 // class java/lang/StringBuilder
     291: dup
     292: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
     295: astore        12
     297: iconst_0
     298: istore        13
     300: iconst_0
     301: istore        14
     303: iload         14
     305: aload         11
     307: invokevirtual #23                 // Method java/lang/String.length:()I
     310: if_icmpge     357
     313: aload         11
     315: iload         14
     317: invokevirtual #24                 // Method java/lang/String.charAt:(I)C
     320: istore        15
     322: iload         15
     324: bipush        92
     326: if_icmpne     340
     329: iload         13
     331: ifne          340
     334: iconst_1
     335: istore        13
     337: goto          351
     340: iconst_0
     341: istore        13
     343: aload         12
     345: iload         15
     347: invokevirtual #25                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     350: pop
     351: iinc          14, 1
     354: goto          303
     357: aload         12
     359: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     362: astore        11
     364: iconst_0
     365: istore        9
     367: aload_3
     368: aload         6
     370: aload         11
     372: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     377: pop
     378: getstatic     #6                  // Field io/undertow/util/HeaderTokenParser$SearchingFor.START_OF_NAME:Lio/undertow/util/HeaderTokenParser$SearchingFor;
     381: astore        4
     383: iconst_0
     384: istore        8
     386: goto          443
     389: iconst_0
     390: istore        8
     392: goto          443
     395: aload_2
     396: iload         10
     398: caload
     399: bipush        44
     401: if_icmpeq     414
     404: aload_2
     405: iload         10
     407: caload
     408: invokestatic  #10                 // Method java/lang/Character.isWhitespace:(C)Z
     411: ifeq          443
     414: aload_2
     415: iload         7
     417: iload         10
     419: iload         7
     421: isub
     422: invokestatic  #12                 // Method java/lang/String.valueOf:([CII)Ljava/lang/String;
     425: astore        11
     427: aload_3
     428: aload         6
     430: aload         11
     432: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     437: pop
     438: getstatic     #6                  // Field io/undertow/util/HeaderTokenParser$SearchingFor.START_OF_NAME:Lio/undertow/util/HeaderTokenParser$SearchingFor;
     441: astore        4
     443: iinc          10, 1
     446: goto          36
     449: aload         4
     451: getstatic     #20                 // Field io/undertow/util/HeaderTokenParser$SearchingFor.END_OF_VALUE:Lio/undertow/util/HeaderTokenParser$SearchingFor;
     454: if_acmpne     484
     457: aload_2
     458: iload         7
     460: aload_2
     461: arraylength
     462: iload         7
     464: isub
     465: invokestatic  #12                 // Method java/lang/String.valueOf:([CII)Ljava/lang/String;
     468: astore        10
     470: aload_3
     471: aload         6
     473: aload         10
     475: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     480: pop
     481: goto          501
     484: aload         4
     486: getstatic     #6                  // Field io/undertow/util/HeaderTokenParser$SearchingFor.START_OF_NAME:Lio/undertow/util/HeaderTokenParser$SearchingFor;
     489: if_acmpeq     501
     492: getstatic     #15                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
     495: invokeinterface #28,  1           // InterfaceMethod io/undertow/UndertowMessages.invalidHeader:()Ljava/lang/IllegalArgumentException;
     500: athrow
     501: aload_3
     502: areturn
}
