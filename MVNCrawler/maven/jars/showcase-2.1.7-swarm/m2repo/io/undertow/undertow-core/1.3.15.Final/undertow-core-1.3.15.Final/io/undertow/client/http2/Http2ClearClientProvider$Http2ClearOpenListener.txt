Compiled from "Http2ClearClientProvider.java"
class io.undertow.client.http2.Http2ClearClientProvider$Http2ClearOpenListener implements org.xnio.ChannelListener<org.xnio.StreamConnection> {
  private final io.undertow.connector.ByteBufferPool bufferPool;

  private final org.xnio.OptionMap options;

  private final io.undertow.client.ClientCallback<io.undertow.client.ClientConnection> listener;

  private final java.lang.String defaultHost;

  public io.undertow.client.http2.Http2ClearClientProvider$Http2ClearOpenListener(io.undertow.connector.ByteBufferPool, org.xnio.OptionMap, io.undertow.client.ClientCallback<io.undertow.client.ClientConnection>, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field options:Lorg/xnio/OptionMap;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field listener:Lio/undertow/client/ClientCallback;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field defaultHost:Ljava/lang/String;
      25: return

  public void handleEvent(org.xnio.StreamConnection);
    Code:
       0: aload_0
       1: getfield      #3                  // Field options:Lorg/xnio/OptionMap;
       4: getstatic     #6                  // Field io/undertow/UndertowOptions.ENABLE_STATISTICS:Lorg/xnio/Option;
       7: iconst_0
       8: invokevirtual #7                  // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;Z)Z
      11: ifeq          86
      14: new           #8                  // class io/undertow/client/http2/Http2ClearClientProvider$ClientStatisticsImpl
      17: dup
      18: aconst_null
      19: invokespecial #9                  // Method io/undertow/client/http2/Http2ClearClientProvider$ClientStatisticsImpl."<init>":(Lio/undertow/client/http2/Http2ClearClientProvider$1;)V
      22: astore_2
      23: aload_1
      24: invokevirtual #10                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      27: new           #11                 // class io/undertow/conduits/BytesSentStreamSinkConduit
      30: dup
      31: aload_1
      32: invokevirtual #10                 // Method org/xnio/StreamConnection.getSinkChannel:()Lorg/xnio/conduits/ConduitStreamSinkChannel;
      35: invokevirtual #12                 // Method org/xnio/conduits/ConduitStreamSinkChannel.getConduit:()Lorg/xnio/conduits/StreamSinkConduit;
      38: new           #13                 // class io/undertow/client/http2/Http2ClearClientProvider$Http2ClearOpenListener$1
      41: dup
      42: aload_0
      43: aload_2
      44: invokespecial #14                 // Method io/undertow/client/http2/Http2ClearClientProvider$Http2ClearOpenListener$1."<init>":(Lio/undertow/client/http2/Http2ClearClientProvider$Http2ClearOpenListener;Lio/undertow/client/http2/Http2ClearClientProvider$ClientStatisticsImpl;)V
      47: invokespecial #15                 // Method io/undertow/conduits/BytesSentStreamSinkConduit."<init>":(Lorg/xnio/conduits/StreamSinkConduit;Lio/undertow/conduits/ByteActivityCallback;)V
      50: invokevirtual #16                 // Method org/xnio/conduits/ConduitStreamSinkChannel.setConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
      53: aload_1
      54: invokevirtual #17                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      57: new           #18                 // class io/undertow/conduits/BytesReceivedStreamSourceConduit
      60: dup
      61: aload_1
      62: invokevirtual #17                 // Method org/xnio/StreamConnection.getSourceChannel:()Lorg/xnio/conduits/ConduitStreamSourceChannel;
      65: invokevirtual #19                 // Method org/xnio/conduits/ConduitStreamSourceChannel.getConduit:()Lorg/xnio/conduits/StreamSourceConduit;
      68: new           #20                 // class io/undertow/client/http2/Http2ClearClientProvider$Http2ClearOpenListener$2
      71: dup
      72: aload_0
      73: aload_2
      74: invokespecial #21                 // Method io/undertow/client/http2/Http2ClearClientProvider$Http2ClearOpenListener$2."<init>":(Lio/undertow/client/http2/Http2ClearClientProvider$Http2ClearOpenListener;Lio/undertow/client/http2/Http2ClearClientProvider$ClientStatisticsImpl;)V
      77: invokespecial #22                 // Method io/undertow/conduits/BytesReceivedStreamSourceConduit."<init>":(Lorg/xnio/conduits/StreamSourceConduit;Lio/undertow/conduits/ByteActivityCallback;)V
      80: invokevirtual #23                 // Method org/xnio/conduits/ConduitStreamSourceChannel.setConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
      83: goto          88
      86: aconst_null
      87: astore_2
      88: new           #24                 // class io/undertow/protocols/http2/Http2Channel
      91: dup
      92: aload_1
      93: aconst_null
      94: aload_0
      95: getfield      #2                  // Field bufferPool:Lio/undertow/connector/ByteBufferPool;
      98: aconst_null
      99: iconst_1
     100: iconst_1
     101: aload_0
     102: getfield      #3                  // Field options:Lorg/xnio/OptionMap;
     105: invokespecial #25                 // Method io/undertow/protocols/http2/Http2Channel."<init>":(Lorg/xnio/StreamConnection;Ljava/lang/String;Lio/undertow/connector/ByteBufferPool;Lio/undertow/connector/PooledByteBuffer;ZZLorg/xnio/OptionMap;)V
     108: astore_3
     109: new           #26                 // class io/undertow/client/http2/Http2ClientConnection
     112: dup
     113: aload_3
     114: iconst_1
     115: aload_0
     116: getfield      #5                  // Field defaultHost:Ljava/lang/String;
     119: aload_2
     120: invokespecial #27                 // Method io/undertow/client/http2/Http2ClientConnection."<init>":(Lio/undertow/protocols/http2/Http2Channel;ZLjava/lang/String;Lio/undertow/client/ClientStatistics;)V
     123: astore        4
     125: aload_0
     126: getfield      #4                  // Field listener:Lio/undertow/client/ClientCallback;
     129: aload         4
     131: invokeinterface #28,  2           // InterfaceMethod io/undertow/client/ClientCallback.completed:(Ljava/lang/Object;)V
     136: return

  public void handleEvent(java.nio.channels.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #29                 // class org/xnio/StreamConnection
       5: invokevirtual #30                 // Method handleEvent:(Lorg/xnio/StreamConnection;)V
       8: return
}
