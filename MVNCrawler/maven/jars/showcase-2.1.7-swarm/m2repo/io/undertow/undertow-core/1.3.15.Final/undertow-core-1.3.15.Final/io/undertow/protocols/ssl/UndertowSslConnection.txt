Compiled from "UndertowSslConnection.java"
class io.undertow.protocols.ssl.UndertowSslConnection extends org.xnio.ssl.SslConnection {
  private static final java.util.Set<org.xnio.Option<?>> SUPPORTED_OPTIONS;

  private final org.xnio.StreamConnection delegate;

  private final io.undertow.protocols.ssl.SslConduit sslConduit;

  private final org.xnio.ChannelListener$SimpleSetter<org.xnio.ssl.SslConnection> handshakeSetter;

  private final javax.net.ssl.SSLEngine engine;

  io.undertow.protocols.ssl.UndertowSslConnection(org.xnio.StreamConnection, javax.net.ssl.SSLEngine, io.undertow.connector.ByteBufferPool);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method org/xnio/StreamConnection.getIoThread:()Lorg/xnio/XnioIoThread;
       5: invokespecial #3                  // Method org/xnio/ssl/SslConnection."<init>":(Lorg/xnio/XnioIoThread;)V
       8: aload_0
       9: new           #4                  // class org/xnio/ChannelListener$SimpleSetter
      12: dup
      13: invokespecial #5                  // Method org/xnio/ChannelListener$SimpleSetter."<init>":()V
      16: putfield      #1                  // Field handshakeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
      19: aload_0
      20: aload_1
      21: putfield      #6                  // Field delegate:Lorg/xnio/StreamConnection;
      24: aload_0
      25: aload_2
      26: putfield      #7                  // Field engine:Ljavax/net/ssl/SSLEngine;
      29: aload_0
      30: new           #8                  // class io/undertow/protocols/ssl/SslConduit
      33: dup
      34: aload_0
      35: aload_1
      36: aload_2
      37: aload_3
      38: new           #9                  // class io/undertow/protocols/ssl/UndertowSslConnection$HandshakeCallback
      41: dup
      42: aload_0
      43: aconst_null
      44: invokespecial #10                 // Method io/undertow/protocols/ssl/UndertowSslConnection$HandshakeCallback."<init>":(Lio/undertow/protocols/ssl/UndertowSslConnection;Lio/undertow/protocols/ssl/UndertowSslConnection$1;)V
      47: invokespecial #11                 // Method io/undertow/protocols/ssl/SslConduit."<init>":(Lio/undertow/protocols/ssl/UndertowSslConnection;Lorg/xnio/StreamConnection;Ljavax/net/ssl/SSLEngine;Lio/undertow/connector/ByteBufferPool;Ljava/lang/Runnable;)V
      50: putfield      #12                 // Field sslConduit:Lio/undertow/protocols/ssl/SslConduit;
      53: aload_0
      54: aload_0
      55: getfield      #12                 // Field sslConduit:Lio/undertow/protocols/ssl/SslConduit;
      58: invokevirtual #13                 // Method setSourceConduit:(Lorg/xnio/conduits/StreamSourceConduit;)V
      61: aload_0
      62: aload_0
      63: getfield      #12                 // Field sslConduit:Lio/undertow/protocols/ssl/SslConduit;
      66: invokevirtual #14                 // Method setSinkConduit:(Lorg/xnio/conduits/StreamSinkConduit;)V
      69: return

  public void startHandshake() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field sslConduit:Lio/undertow/protocols/ssl/SslConduit;
       4: invokevirtual #15                 // Method io/undertow/protocols/ssl/SslConduit.startHandshake:()V
       7: return

  public javax.net.ssl.SSLSession getSslSession();
    Code:
       0: aload_0
       1: getfield      #12                 // Field sslConduit:Lio/undertow/protocols/ssl/SslConduit;
       4: invokevirtual #16                 // Method io/undertow/protocols/ssl/SslConduit.getSslSession:()Ljavax/net/ssl/SSLSession;
       7: areturn

  public org.xnio.ChannelListener$Setter<? extends org.xnio.ssl.SslConnection> getHandshakeSetter();
    Code:
       0: aload_0
       1: getfield      #1                  // Field handshakeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  protected void notifyWriteClosed();
    Code:
       0: aload_0
       1: getfield      #12                 // Field sslConduit:Lio/undertow/protocols/ssl/SslConduit;
       4: invokevirtual #17                 // Method io/undertow/protocols/ssl/SslConduit.notifyWriteClosed:()V
       7: return

  protected void notifyReadClosed();
    Code:
       0: aload_0
       1: getfield      #12                 // Field sslConduit:Lio/undertow/protocols/ssl/SslConduit;
       4: invokevirtual #18                 // Method io/undertow/protocols/ssl/SslConduit.notifyReadClosed:()V
       7: return

  public java.net.SocketAddress getPeerAddress();
    Code:
       0: aload_0
       1: getfield      #6                  // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #19                 // Method org/xnio/StreamConnection.getPeerAddress:()Ljava/net/SocketAddress;
       7: areturn

  public java.net.SocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #6                  // Field delegate:Lorg/xnio/StreamConnection;
       4: invokevirtual #20                 // Method org/xnio/StreamConnection.getLocalAddress:()Ljava/net/SocketAddress;
       7: areturn

  public javax.net.ssl.SSLEngine getSSLEngine();
    Code:
       0: aload_0
       1: getfield      #12                 // Field sslConduit:Lio/undertow/protocols/ssl/SslConduit;
       4: invokevirtual #21                 // Method io/undertow/protocols/ssl/SslConduit.getSSLEngine:()Ljavax/net/ssl/SSLEngine;
       7: areturn

  public <T> T setOption(org.xnio.Option<T>, T) throws java.lang.IllegalArgumentException, java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #22                 // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
       4: if_acmpne     130
       7: aload_1
       8: aload_0
       9: getfield      #7                  // Field engine:Ljavax/net/ssl/SSLEngine;
      12: invokevirtual #23                 // Method javax/net/ssl/SSLEngine.getNeedClientAuth:()Z
      15: ifeq          24
      18: getstatic     #24                 // Field org/xnio/SslClientAuthMode.REQUIRED:Lorg/xnio/SslClientAuthMode;
      21: goto          43
      24: aload_0
      25: getfield      #7                  // Field engine:Ljavax/net/ssl/SSLEngine;
      28: invokevirtual #25                 // Method javax/net/ssl/SSLEngine.getWantClientAuth:()Z
      31: ifeq          40
      34: getstatic     #26                 // Field org/xnio/SslClientAuthMode.REQUESTED:Lorg/xnio/SslClientAuthMode;
      37: goto          43
      40: getstatic     #27                 // Field org/xnio/SslClientAuthMode.NOT_REQUESTED:Lorg/xnio/SslClientAuthMode;
      43: invokevirtual #28                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      46: astore_3
      47: aload_0
      48: getfield      #7                  // Field engine:Ljavax/net/ssl/SSLEngine;
      51: aload_2
      52: getstatic     #24                 // Field org/xnio/SslClientAuthMode.REQUIRED:Lorg/xnio/SslClientAuthMode;
      55: if_acmpne     62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: invokevirtual #29                 // Method javax/net/ssl/SSLEngine.setNeedClientAuth:(Z)V
      66: aload_0
      67: getfield      #7                  // Field engine:Ljavax/net/ssl/SSLEngine;
      70: aload_2
      71: getstatic     #26                 // Field org/xnio/SslClientAuthMode.REQUESTED:Lorg/xnio/SslClientAuthMode;
      74: if_acmpne     81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: invokevirtual #30                 // Method javax/net/ssl/SSLEngine.setWantClientAuth:(Z)V
      85: aload_3
      86: areturn
      87: astore        4
      89: aload_0
      90: getfield      #7                  // Field engine:Ljavax/net/ssl/SSLEngine;
      93: aload_2
      94: getstatic     #24                 // Field org/xnio/SslClientAuthMode.REQUIRED:Lorg/xnio/SslClientAuthMode;
      97: if_acmpne     104
     100: iconst_1
     101: goto          105
     104: iconst_0
     105: invokevirtual #29                 // Method javax/net/ssl/SSLEngine.setNeedClientAuth:(Z)V
     108: aload_0
     109: getfield      #7                  // Field engine:Ljavax/net/ssl/SSLEngine;
     112: aload_2
     113: getstatic     #26                 // Field org/xnio/SslClientAuthMode.REQUESTED:Lorg/xnio/SslClientAuthMode;
     116: if_acmpne     123
     119: iconst_1
     120: goto          124
     123: iconst_0
     124: invokevirtual #30                 // Method javax/net/ssl/SSLEngine.setWantClientAuth:(Z)V
     127: aload         4
     129: athrow
     130: aload_1
     131: getstatic     #31                 // Field org/xnio/Options.SECURE:Lorg/xnio/Option;
     134: if_acmpne     145
     137: new           #32                 // class java/lang/IllegalArgumentException
     140: dup
     141: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":()V
     144: athrow
     145: aload_0
     146: getfield      #6                  // Field delegate:Lorg/xnio/StreamConnection;
     149: aload_1
     150: aload_2
     151: invokevirtual #34                 // Method org/xnio/StreamConnection.setOption:(Lorg/xnio/Option;Ljava/lang/Object;)Ljava/lang/Object;
     154: areturn
    Exception table:
       from    to  target type
           7    47    87   any
          87    89    87   any

  public <T> T getOption(org.xnio.Option<T>) throws java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #22                 // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
       4: if_acmpne     47
       7: aload_1
       8: aload_0
       9: getfield      #7                  // Field engine:Ljavax/net/ssl/SSLEngine;
      12: invokevirtual #23                 // Method javax/net/ssl/SSLEngine.getNeedClientAuth:()Z
      15: ifeq          24
      18: getstatic     #24                 // Field org/xnio/SslClientAuthMode.REQUIRED:Lorg/xnio/SslClientAuthMode;
      21: goto          43
      24: aload_0
      25: getfield      #7                  // Field engine:Ljavax/net/ssl/SSLEngine;
      28: invokevirtual #25                 // Method javax/net/ssl/SSLEngine.getWantClientAuth:()Z
      31: ifeq          40
      34: getstatic     #26                 // Field org/xnio/SslClientAuthMode.REQUESTED:Lorg/xnio/SslClientAuthMode;
      37: goto          43
      40: getstatic     #27                 // Field org/xnio/SslClientAuthMode.NOT_REQUESTED:Lorg/xnio/SslClientAuthMode;
      43: invokevirtual #28                 // Method org/xnio/Option.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      46: areturn
      47: aload_1
      48: getstatic     #31                 // Field org/xnio/Options.SECURE:Lorg/xnio/Option;
      51: if_acmpne     60
      54: getstatic     #35                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      57: goto          68
      60: aload_0
      61: getfield      #6                  // Field delegate:Lorg/xnio/StreamConnection;
      64: aload_1
      65: invokevirtual #36                 // Method org/xnio/StreamConnection.getOption:(Lorg/xnio/Option;)Ljava/lang/Object;
      68: areturn

  public boolean supportsOption(org.xnio.Option<?>);
    Code:
       0: getstatic     #37                 // Field SUPPORTED_OPTIONS:Ljava/util/Set;
       3: aload_1
       4: invokeinterface #38,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       9: ifne          23
      12: aload_0
      13: getfield      #6                  // Field delegate:Lorg/xnio/StreamConnection;
      16: aload_1
      17: invokevirtual #39                 // Method org/xnio/StreamConnection.supportsOption:(Lorg/xnio/Option;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  protected boolean readClosed();
    Code:
       0: aload_0
       1: invokespecial #40                 // Method org/xnio/ssl/SslConnection.readClosed:()Z
       4: ireturn

  protected boolean writeClosed();
    Code:
       0: aload_0
       1: invokespecial #41                 // Method org/xnio/ssl/SslConnection.writeClosed:()Z
       4: ireturn

  protected void closeAction();
    Code:
       0: aload_0
       1: getfield      #12                 // Field sslConduit:Lio/undertow/protocols/ssl/SslConduit;
       4: invokevirtual #42                 // Method io/undertow/protocols/ssl/SslConduit.close:()V
       7: return

  static org.xnio.ChannelListener$SimpleSetter access$100(io.undertow.protocols.ssl.UndertowSslConnection);
    Code:
       0: aload_0
       1: getfield      #1                  // Field handshakeSetter:Lorg/xnio/ChannelListener$SimpleSetter;
       4: areturn

  static {};
    Code:
       0: invokestatic  #43                 // Method org/xnio/Option.setBuilder:()Lorg/xnio/Option$SetBuilder;
       3: getstatic     #31                 // Field org/xnio/Options.SECURE:Lorg/xnio/Option;
       6: getstatic     #22                 // Field org/xnio/Options.SSL_CLIENT_AUTH_MODE:Lorg/xnio/Option;
       9: invokevirtual #44                 // Method org/xnio/Option$SetBuilder.add:(Lorg/xnio/Option;Lorg/xnio/Option;)Lorg/xnio/Option$SetBuilder;
      12: invokevirtual #45                 // Method org/xnio/Option$SetBuilder.create:()Ljava/util/Set;
      15: putstatic     #37                 // Field SUPPORTED_OPTIONS:Ljava/util/Set;
      18: return
}
