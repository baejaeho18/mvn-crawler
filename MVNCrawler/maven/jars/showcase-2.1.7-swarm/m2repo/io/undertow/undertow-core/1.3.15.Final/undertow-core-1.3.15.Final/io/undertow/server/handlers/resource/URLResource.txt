Compiled from "URLResource.java"
public class io.undertow.server.handlers.resource.URLResource implements io.undertow.server.handlers.resource.Resource,io.undertow.server.handlers.resource.RangeAwareResource {
  private final java.net.URL url;

  private final java.net.URLConnection connection;

  private final java.lang.String path;

  public io.undertow.server.handlers.resource.URLResource(java.net.URL, java.net.URLConnection, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #1                  // Field url:Ljava/net/URL;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field connection:Ljava/net/URLConnection;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field path:Ljava/lang/String;
      19: return

  public java.lang.String getPath();
    Code:
       0: aload_0
       1: getfield      #4                  // Field path:Ljava/lang/String;
       4: areturn

  public java.util.Date getLastModified();
    Code:
       0: new           #5                  // class java/util/Date
       3: dup
       4: aload_0
       5: getfield      #3                  // Field connection:Ljava/net/URLConnection;
       8: invokevirtual #6                  // Method java/net/URLConnection.getLastModified:()J
      11: invokespecial #7                  // Method java/util/Date."<init>":(J)V
      14: areturn

  public java.lang.String getLastModifiedString();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getLastModified:()Ljava/util/Date;
       4: invokestatic  #9                  // Method io/undertow/util/DateUtils.toDateString:(Ljava/util/Date;)Ljava/lang/String;
       7: areturn

  public io.undertow.util.ETag getETag();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #1                  // Field url:Ljava/net/URL;
       4: invokevirtual #10                 // Method java/net/URL.getPath:()Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: ldc           #11                 // String /
      11: invokevirtual #12                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      14: ifeq          29
      17: aload_1
      18: iconst_0
      19: aload_1
      20: invokevirtual #13                 // Method java/lang/String.length:()I
      23: iconst_1
      24: isub
      25: invokevirtual #14                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      28: astore_1
      29: aload_1
      30: ldc           #11                 // String /
      32: invokevirtual #15                 // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
      35: istore_2
      36: iload_2
      37: iconst_m1
      38: if_icmpeq     49
      41: aload_1
      42: iload_2
      43: iconst_1
      44: iadd
      45: invokevirtual #16                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      48: astore_1
      49: aload_1
      50: areturn

  public boolean isDirectory();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getFilePath:()Ljava/nio/file/Path;
       4: astore_1
       5: aload_1
       6: ifnull        18
       9: aload_1
      10: iconst_0
      11: anewarray     #18                 // class java/nio/file/LinkOption
      14: invokestatic  #19                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      17: ireturn
      18: aload_0
      19: getfield      #1                  // Field url:Ljava/net/URL;
      22: invokevirtual #10                 // Method java/net/URL.getPath:()Ljava/lang/String;
      25: ldc           #11                 // String /
      27: invokevirtual #12                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      30: ifeq          35
      33: iconst_1
      34: ireturn
      35: iconst_0
      36: ireturn

  public java.util.List<io.undertow.server.handlers.resource.Resource> list();
    Code:
       0: new           #20                 // class java/util/LinkedList
       3: dup
       4: invokespecial #21                 // Method java/util/LinkedList."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #17                 // Method getFilePath:()Ljava/nio/file/Path;
      12: astore_2
      13: aload_2
      14: ifnull        182
      17: aload_2
      18: invokestatic  #22                 // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;
      21: astore_3
      22: aconst_null
      23: astore        4
      25: aload_3
      26: invokeinterface #23,  1           // InterfaceMethod java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;
      31: astore        5
      33: aload         5
      35: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          93
      43: aload         5
      45: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #26                 // class java/nio/file/Path
      53: astore        6
      55: aload_1
      56: new           #27                 // class io/undertow/server/handlers/resource/URLResource
      59: dup
      60: aload         6
      62: invokeinterface #28,  1           // InterfaceMethod java/nio/file/Path.toUri:()Ljava/net/URI;
      67: invokevirtual #29                 // Method java/net/URI.toURL:()Ljava/net/URL;
      70: aload_0
      71: getfield      #3                  // Field connection:Ljava/net/URLConnection;
      74: aload         6
      76: invokeinterface #30,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
      81: invokespecial #31                 // Method "<init>":(Ljava/net/URL;Ljava/net/URLConnection;Ljava/lang/String;)V
      84: invokeinterface #32,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      89: pop
      90: goto          33
      93: aload_3
      94: ifnull        182
      97: aload         4
      99: ifnull        123
     102: aload_3
     103: invokeinterface #33,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     108: goto          182
     111: astore        5
     113: aload         4
     115: aload         5
     117: invokevirtual #35                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     120: goto          182
     123: aload_3
     124: invokeinterface #33,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     129: goto          182
     132: astore        5
     134: aload         5
     136: astore        4
     138: aload         5
     140: athrow
     141: astore        7
     143: aload_3
     144: ifnull        179
     147: aload         4
     149: ifnull        173
     152: aload_3
     153: invokeinterface #33,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     158: goto          179
     161: astore        8
     163: aload         4
     165: aload         8
     167: invokevirtual #35                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     170: goto          179
     173: aload_3
     174: invokeinterface #33,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
     179: aload         7
     181: athrow
     182: goto          195
     185: astore_3
     186: new           #37                 // class java/lang/RuntimeException
     189: dup
     190: aload_3
     191: invokespecial #38                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     194: athrow
     195: aload_1
     196: areturn
    Exception table:
       from    to  target type
         102   108   111   Class java/lang/Throwable
          25    93   132   Class java/lang/Throwable
          25    93   141   any
         152   158   161   Class java/lang/Throwable
         132   143   141   any
          13   182   185   Class java/io/IOException

  public java.lang.String getContentType(io.undertow.util.MimeMappings);
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method getName:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: bipush        46
       8: invokevirtual #40                 // Method java/lang/String.lastIndexOf:(I)I
      11: istore_3
      12: iload_3
      13: iconst_m1
      14: if_icmpeq     39
      17: iload_3
      18: aload_2
      19: invokevirtual #13                 // Method java/lang/String.length:()I
      22: iconst_1
      23: isub
      24: if_icmpeq     39
      27: aload_1
      28: aload_2
      29: iload_3
      30: iconst_1
      31: iadd
      32: invokevirtual #16                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      35: invokevirtual #41                 // Method io/undertow/util/MimeMappings.getMimeType:(Ljava/lang/String;)Ljava/lang/String;
      38: areturn
      39: aconst_null
      40: areturn

  public void serve(io.undertow.io.Sender, io.undertow.server.HttpServerExchange, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc2_w        #42                 // long -1l
       6: ldc2_w        #42                 // long -1l
       9: iconst_0
      10: aload_3
      11: invokevirtual #44                 // Method serveImpl:(Lio/undertow/io/Sender;Lio/undertow/server/HttpServerExchange;JJZLio/undertow/io/IoCallback;)V
      14: return

  public void serveImpl(io.undertow.io.Sender, io.undertow.server.HttpServerExchange, long, long, boolean, io.undertow.io.IoCallback);
    Code:
       0: new           #45                 // class io/undertow/server/handlers/resource/URLResource$1ServerTask
       3: dup
       4: aload_0
       5: lload_3
       6: lload         5
       8: iload         7
      10: aload         8
      12: aload_2
      13: aload_1
      14: invokespecial #46                 // Method io/undertow/server/handlers/resource/URLResource$1ServerTask."<init>":(Lio/undertow/server/handlers/resource/URLResource;JJZLio/undertow/io/IoCallback;Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;)V
      17: astore        9
      19: aload_2
      20: invokevirtual #47                 // Method io/undertow/server/HttpServerExchange.isInIoThread:()Z
      23: ifeq          36
      26: aload_2
      27: aload         9
      29: invokevirtual #48                 // Method io/undertow/server/HttpServerExchange.dispatch:(Ljava/lang/Runnable;)Lio/undertow/server/HttpServerExchange;
      32: pop
      33: goto          41
      36: aload         9
      38: invokevirtual #49                 // Method io/undertow/server/handlers/resource/URLResource$1ServerTask.run:()V
      41: return

  public java.lang.Long getContentLength();
    Code:
       0: aload_0
       1: getfield      #3                  // Field connection:Ljava/net/URLConnection;
       4: invokevirtual #50                 // Method java/net/URLConnection.getContentLength:()I
       7: i2l
       8: invokestatic  #51                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      11: areturn

  public java.lang.String getCacheKey();
    Code:
       0: aload_0
       1: getfield      #1                  // Field url:Ljava/net/URL;
       4: invokevirtual #52                 // Method java/net/URL.toString:()Ljava/lang/String;
       7: areturn

  public java.io.File getFile();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getFilePath:()Ljava/nio/file/Path;
       4: astore_1
       5: aload_1
       6: ifnull        18
       9: aload_1
      10: invokeinterface #53,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      15: goto          19
      18: aconst_null
      19: areturn

  public java.nio.file.Path getFilePath();
    Code:
       0: aload_0
       1: getfield      #1                  // Field url:Ljava/net/URL;
       4: invokevirtual #54                 // Method java/net/URL.getProtocol:()Ljava/lang/String;
       7: ldc           #55                 // String file
       9: invokevirtual #56                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: ifeq          29
      15: aload_0
      16: getfield      #1                  // Field url:Ljava/net/URL;
      19: invokevirtual #57                 // Method java/net/URL.toURI:()Ljava/net/URI;
      22: invokestatic  #58                 // Method java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;
      25: areturn
      26: astore_1
      27: aconst_null
      28: areturn
      29: aconst_null
      30: areturn
    Exception table:
       from    to  target type
          15    25    26   Class java/net/URISyntaxException

  public java.io.File getResourceManagerRoot();
    Code:
       0: aconst_null
       1: areturn

  public java.nio.file.Path getResourceManagerRootPath();
    Code:
       0: aconst_null
       1: areturn

  public java.net.URL getUrl();
    Code:
       0: aload_0
       1: getfield      #1                  // Field url:Ljava/net/URL;
       4: areturn

  public void serveRange(io.undertow.io.Sender, io.undertow.server.HttpServerExchange, long, long, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: lload_3
       4: lload         5
       6: iconst_1
       7: aload         7
       9: invokevirtual #44                 // Method serveImpl:(Lio/undertow/io/Sender;Lio/undertow/server/HttpServerExchange;JJZLio/undertow/io/IoCallback;)V
      12: return

  public boolean isRangeSupported();
    Code:
       0: iconst_1
       1: ireturn

  static java.net.URL access$000(io.undertow.server.handlers.resource.URLResource);
    Code:
       0: aload_0
       1: getfield      #1                  // Field url:Ljava/net/URL;
       4: areturn
}
