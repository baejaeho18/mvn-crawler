Compiled from "UndertowOptions.java"
public class io.undertow.UndertowOptions {
  public static final org.xnio.Option<java.lang.Integer> MAX_HEADER_SIZE;

  public static final int DEFAULT_MAX_HEADER_SIZE;

  public static final org.xnio.Option<java.lang.Long> MAX_ENTITY_SIZE;

  public static final org.xnio.Option<java.lang.Long> MULTIPART_MAX_ENTITY_SIZE;

  public static final long DEFAULT_MAX_ENTITY_SIZE;

  public static final org.xnio.Option<java.lang.Boolean> BUFFER_PIPELINED_DATA;

  public static final org.xnio.Option<java.lang.Integer> IDLE_TIMEOUT;

  public static final org.xnio.Option<java.lang.Integer> REQUEST_PARSE_TIMEOUT;

  public static final org.xnio.Option<java.lang.Integer> NO_REQUEST_TIMEOUT;

  public static final org.xnio.Option<java.lang.Integer> MAX_PARAMETERS;

  public static final org.xnio.Option<java.lang.Integer> MAX_HEADERS;

  public static final org.xnio.Option<java.lang.Integer> MAX_COOKIES;

  public static final org.xnio.Option<java.lang.Boolean> ALLOW_ENCODED_SLASH;

  public static final org.xnio.Option<java.lang.Boolean> DECODE_URL;

  public static final org.xnio.Option<java.lang.String> URL_CHARSET;

  public static final org.xnio.Option<java.lang.Boolean> ALWAYS_SET_KEEP_ALIVE;

  public static final org.xnio.Option<java.lang.Boolean> ALWAYS_SET_DATE;

  public static final org.xnio.Option<java.lang.Integer> MAX_BUFFERED_REQUEST_SIZE;

  public static final org.xnio.Option<java.lang.Boolean> RECORD_REQUEST_START_TIME;

  public static final org.xnio.Option<java.lang.Boolean> ALLOW_EQUALS_IN_COOKIE_VALUE;

  public static final org.xnio.Option<java.lang.Boolean> ENABLE_SPDY;

  public static final org.xnio.Option<java.lang.Boolean> ENABLE_HTTP2;

  public static final org.xnio.Option<java.lang.Boolean> ENABLE_STATISTICS;

  public static final org.xnio.Option<java.lang.Boolean> ENABLE_CONNECTOR_STATISTICS;

  public static final org.xnio.Option<java.lang.Boolean> ALLOW_UNKNOWN_PROTOCOLS;

  public static final org.xnio.Option<java.lang.Integer> HTTP2_SETTINGS_HEADER_TABLE_SIZE;

  public static final int HTTP2_SETTINGS_HEADER_TABLE_SIZE_DEFAULT;

  public static final org.xnio.Option<java.lang.Boolean> HTTP2_SETTINGS_ENABLE_PUSH;

  public static final org.xnio.Option<java.lang.Integer> HTTP2_SETTINGS_MAX_CONCURRENT_STREAMS;

  public static final org.xnio.Option<java.lang.Integer> HTTP2_SETTINGS_INITIAL_WINDOW_SIZE;

  public static final org.xnio.Option<java.lang.Integer> HTTP2_SETTINGS_MAX_FRAME_SIZE;

  public static final org.xnio.Option<java.lang.Integer> HTTP2_SETTINGS_MAX_HEADER_LIST_SIZE;

  public static final org.xnio.Option<java.lang.Integer> HTTP2_HUFFMAN_CACHE_SIZE;

  public static final org.xnio.Option<java.lang.Integer> MAX_CONCURRENT_REQUESTS_PER_CONNECTION;

  public static final org.xnio.Option<java.lang.Integer> MAX_QUEUED_READ_BUFFERS;

  public static final org.xnio.Option<java.lang.Integer> MAX_AJP_PACKET_SIZE;

  private io.undertow.UndertowOptions();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: ldc           #2                  // class io/undertow/UndertowOptions
       2: ldc           #3                  // String MAX_HEADER_SIZE
       4: ldc           #4                  // class java/lang/Integer
       6: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
       9: putstatic     #6                  // Field MAX_HEADER_SIZE:Lorg/xnio/Option;
      12: ldc           #2                  // class io/undertow/UndertowOptions
      14: ldc           #7                  // String MAX_ENTITY_SIZE
      16: ldc           #8                  // class java/lang/Long
      18: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
      21: putstatic     #9                  // Field MAX_ENTITY_SIZE:Lorg/xnio/Option;
      24: ldc           #2                  // class io/undertow/UndertowOptions
      26: ldc           #10                 // String MULTIPART_MAX_ENTITY_SIZE
      28: ldc           #8                  // class java/lang/Long
      30: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
      33: putstatic     #11                 // Field MULTIPART_MAX_ENTITY_SIZE:Lorg/xnio/Option;
      36: ldc           #2                  // class io/undertow/UndertowOptions
      38: ldc           #12                 // String BUFFER_PIPELINED_DATA
      40: ldc           #13                 // class java/lang/Boolean
      42: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
      45: putstatic     #14                 // Field BUFFER_PIPELINED_DATA:Lorg/xnio/Option;
      48: ldc           #2                  // class io/undertow/UndertowOptions
      50: ldc           #15                 // String IDLE_TIMEOUT
      52: ldc           #4                  // class java/lang/Integer
      54: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
      57: putstatic     #16                 // Field IDLE_TIMEOUT:Lorg/xnio/Option;
      60: ldc           #2                  // class io/undertow/UndertowOptions
      62: ldc           #17                 // String REQUEST_PARSE_TIMEOUT
      64: ldc           #4                  // class java/lang/Integer
      66: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
      69: putstatic     #18                 // Field REQUEST_PARSE_TIMEOUT:Lorg/xnio/Option;
      72: ldc           #2                  // class io/undertow/UndertowOptions
      74: ldc           #19                 // String NO_REQUEST_TIMEOUT
      76: ldc           #4                  // class java/lang/Integer
      78: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
      81: putstatic     #20                 // Field NO_REQUEST_TIMEOUT:Lorg/xnio/Option;
      84: ldc           #2                  // class io/undertow/UndertowOptions
      86: ldc           #21                 // String MAX_PARAMETERS
      88: ldc           #4                  // class java/lang/Integer
      90: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
      93: putstatic     #22                 // Field MAX_PARAMETERS:Lorg/xnio/Option;
      96: ldc           #2                  // class io/undertow/UndertowOptions
      98: ldc           #23                 // String MAX_HEADERS
     100: ldc           #4                  // class java/lang/Integer
     102: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     105: putstatic     #24                 // Field MAX_HEADERS:Lorg/xnio/Option;
     108: ldc           #2                  // class io/undertow/UndertowOptions
     110: ldc           #25                 // String MAX_COOKIES
     112: ldc           #4                  // class java/lang/Integer
     114: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     117: putstatic     #26                 // Field MAX_COOKIES:Lorg/xnio/Option;
     120: ldc           #2                  // class io/undertow/UndertowOptions
     122: ldc           #27                 // String ALLOW_ENCODED_SLASH
     124: ldc           #13                 // class java/lang/Boolean
     126: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     129: putstatic     #28                 // Field ALLOW_ENCODED_SLASH:Lorg/xnio/Option;
     132: ldc           #2                  // class io/undertow/UndertowOptions
     134: ldc           #29                 // String DECODE_URL
     136: ldc           #13                 // class java/lang/Boolean
     138: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     141: putstatic     #30                 // Field DECODE_URL:Lorg/xnio/Option;
     144: ldc           #2                  // class io/undertow/UndertowOptions
     146: ldc           #31                 // String URL_CHARSET
     148: ldc           #32                 // class java/lang/String
     150: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     153: putstatic     #33                 // Field URL_CHARSET:Lorg/xnio/Option;
     156: ldc           #2                  // class io/undertow/UndertowOptions
     158: ldc           #34                 // String ALWAYS_SET_KEEP_ALIVE
     160: ldc           #13                 // class java/lang/Boolean
     162: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     165: putstatic     #35                 // Field ALWAYS_SET_KEEP_ALIVE:Lorg/xnio/Option;
     168: ldc           #2                  // class io/undertow/UndertowOptions
     170: ldc           #36                 // String ALWAYS_SET_DATE
     172: ldc           #13                 // class java/lang/Boolean
     174: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     177: putstatic     #37                 // Field ALWAYS_SET_DATE:Lorg/xnio/Option;
     180: ldc           #2                  // class io/undertow/UndertowOptions
     182: ldc           #38                 // String MAX_BUFFERED_REQUEST_SIZE
     184: ldc           #4                  // class java/lang/Integer
     186: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     189: putstatic     #39                 // Field MAX_BUFFERED_REQUEST_SIZE:Lorg/xnio/Option;
     192: ldc           #2                  // class io/undertow/UndertowOptions
     194: ldc           #40                 // String RECORD_REQUEST_START_TIME
     196: ldc           #13                 // class java/lang/Boolean
     198: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     201: putstatic     #41                 // Field RECORD_REQUEST_START_TIME:Lorg/xnio/Option;
     204: ldc           #2                  // class io/undertow/UndertowOptions
     206: ldc           #42                 // String ALLOW_EQUALS_IN_COOKIE_VALUE
     208: ldc           #13                 // class java/lang/Boolean
     210: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     213: putstatic     #43                 // Field ALLOW_EQUALS_IN_COOKIE_VALUE:Lorg/xnio/Option;
     216: ldc           #2                  // class io/undertow/UndertowOptions
     218: ldc           #44                 // String ENABLE_SPDY
     220: ldc           #13                 // class java/lang/Boolean
     222: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     225: putstatic     #45                 // Field ENABLE_SPDY:Lorg/xnio/Option;
     228: ldc           #2                  // class io/undertow/UndertowOptions
     230: ldc           #46                 // String ENABLE_HTTP2
     232: ldc           #13                 // class java/lang/Boolean
     234: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     237: putstatic     #47                 // Field ENABLE_HTTP2:Lorg/xnio/Option;
     240: ldc           #2                  // class io/undertow/UndertowOptions
     242: ldc           #48                 // String ENABLE_STATISTICS
     244: ldc           #13                 // class java/lang/Boolean
     246: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     249: putstatic     #49                 // Field ENABLE_STATISTICS:Lorg/xnio/Option;
     252: getstatic     #49                 // Field ENABLE_STATISTICS:Lorg/xnio/Option;
     255: putstatic     #50                 // Field ENABLE_CONNECTOR_STATISTICS:Lorg/xnio/Option;
     258: ldc           #2                  // class io/undertow/UndertowOptions
     260: ldc           #51                 // String ALLOW_UNKNOWN_PROTOCOLS
     262: ldc           #13                 // class java/lang/Boolean
     264: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     267: putstatic     #52                 // Field ALLOW_UNKNOWN_PROTOCOLS:Lorg/xnio/Option;
     270: ldc           #2                  // class io/undertow/UndertowOptions
     272: ldc           #53                 // String HTTP2_SETTINGS_HEADER_TABLE_SIZE
     274: ldc           #4                  // class java/lang/Integer
     276: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     279: putstatic     #54                 // Field HTTP2_SETTINGS_HEADER_TABLE_SIZE:Lorg/xnio/Option;
     282: ldc           #2                  // class io/undertow/UndertowOptions
     284: ldc           #55                 // String HTTP2_SETTINGS_ENABLE_PUSH
     286: ldc           #13                 // class java/lang/Boolean
     288: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     291: putstatic     #56                 // Field HTTP2_SETTINGS_ENABLE_PUSH:Lorg/xnio/Option;
     294: ldc           #2                  // class io/undertow/UndertowOptions
     296: ldc           #57                 // String HTTP2_SETTINGS_MAX_CONCURRENT_STREAMS
     298: ldc           #4                  // class java/lang/Integer
     300: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     303: putstatic     #58                 // Field HTTP2_SETTINGS_MAX_CONCURRENT_STREAMS:Lorg/xnio/Option;
     306: ldc           #2                  // class io/undertow/UndertowOptions
     308: ldc           #59                 // String HTTP2_SETTINGS_INITIAL_WINDOW_SIZE
     310: ldc           #4                  // class java/lang/Integer
     312: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     315: putstatic     #60                 // Field HTTP2_SETTINGS_INITIAL_WINDOW_SIZE:Lorg/xnio/Option;
     318: ldc           #2                  // class io/undertow/UndertowOptions
     320: ldc           #61                 // String HTTP2_SETTINGS_MAX_FRAME_SIZE
     322: ldc           #4                  // class java/lang/Integer
     324: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     327: putstatic     #62                 // Field HTTP2_SETTINGS_MAX_FRAME_SIZE:Lorg/xnio/Option;
     330: ldc           #2                  // class io/undertow/UndertowOptions
     332: ldc           #63                 // String HTTP2_SETTINGS_MAX_HEADER_LIST_SIZE
     334: ldc           #4                  // class java/lang/Integer
     336: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     339: putstatic     #64                 // Field HTTP2_SETTINGS_MAX_HEADER_LIST_SIZE:Lorg/xnio/Option;
     342: ldc           #2                  // class io/undertow/UndertowOptions
     344: ldc           #65                 // String HTTP2_HUFFMAN_CACHE_SIZE
     346: ldc           #4                  // class java/lang/Integer
     348: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     351: putstatic     #66                 // Field HTTP2_HUFFMAN_CACHE_SIZE:Lorg/xnio/Option;
     354: ldc           #2                  // class io/undertow/UndertowOptions
     356: ldc           #67                 // String MAX_CONCURRENT_REQUESTS_PER_CONNECTION
     358: ldc           #4                  // class java/lang/Integer
     360: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     363: putstatic     #68                 // Field MAX_CONCURRENT_REQUESTS_PER_CONNECTION:Lorg/xnio/Option;
     366: ldc           #2                  // class io/undertow/UndertowOptions
     368: ldc           #69                 // String MAX_QUEUED_READ_BUFFERS
     370: ldc           #4                  // class java/lang/Integer
     372: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     375: putstatic     #70                 // Field MAX_QUEUED_READ_BUFFERS:Lorg/xnio/Option;
     378: ldc           #2                  // class io/undertow/UndertowOptions
     380: ldc           #71                 // String MAX_AJP_PACKET_SIZE
     382: ldc           #4                  // class java/lang/Integer
     384: invokestatic  #5                  // Method org/xnio/Option.simple:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Class;)Lorg/xnio/Option;
     387: putstatic     #72                 // Field MAX_AJP_PACKET_SIZE:Lorg/xnio/Option;
     390: return
}
