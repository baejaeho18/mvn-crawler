Compiled from "LimitedBufferSlicePool.java"
public final class io.undertow.server.handlers.cache.LimitedBufferSlicePool$PooledByteBuffer {
  private final io.undertow.server.handlers.cache.LimitedBufferSlicePool$Slice region;

  private final java.util.Queue<io.undertow.server.handlers.cache.LimitedBufferSlicePool$Slice> slices;

  volatile java.nio.ByteBuffer buffer;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<io.undertow.server.handlers.cache.LimitedBufferSlicePool$PooledByteBuffer, java.nio.ByteBuffer> bufferUpdater;

  private io.undertow.server.handlers.cache.LimitedBufferSlicePool$PooledByteBuffer(io.undertow.server.handlers.cache.LimitedBufferSlicePool$Slice, java.nio.ByteBuffer, java.util.Queue<io.undertow.server.handlers.cache.LimitedBufferSlicePool$Slice>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field region:Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$Slice;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field buffer:Ljava/nio/ByteBuffer;
      14: aload_0
      15: aload_3
      16: putfield      #5                  // Field slices:Ljava/util/Queue;
      19: return

  public void free();
    Code:
       0: getstatic     #6                  // Field bufferUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aconst_null
       5: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: ifnull        25
      11: aload_0
      12: getfield      #5                  // Field slices:Ljava/util/Queue;
      15: aload_0
      16: getfield      #3                  // Field region:Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$Slice;
      19: invokeinterface #8,  2            // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      24: pop
      25: return

  public java.nio.ByteBuffer getBuffer();
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffer:Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_1
       6: ifnonnull     17
       9: new           #9                  // class java/lang/IllegalStateException
      12: dup
      13: invokespecial #10                 // Method java/lang/IllegalStateException."<init>":()V
      16: athrow
      17: aload_1
      18: areturn

  public java.lang.String toString();
    Code:
       0: new           #11                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #13                 // String Pooled buffer
       9: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #4                  // Field buffer:Ljava/nio/ByteBuffer;
      16: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  io.undertow.server.handlers.cache.LimitedBufferSlicePool$PooledByteBuffer(io.undertow.server.handlers.cache.LimitedBufferSlicePool$Slice, java.nio.ByteBuffer, java.util.Queue, io.undertow.server.handlers.cache.LimitedBufferSlicePool$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method "<init>":(Lio/undertow/server/handlers/cache/LimitedBufferSlicePool$Slice;Ljava/nio/ByteBuffer;Ljava/util/Queue;)V
       7: return

  static {};
    Code:
       0: ldc           #17                 // class io/undertow/server/handlers/cache/LimitedBufferSlicePool$PooledByteBuffer
       2: ldc           #18                 // class java/nio/ByteBuffer
       4: ldc           #19                 // String buffer
       6: invokestatic  #20                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #6                  // Field bufferUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: return
}
