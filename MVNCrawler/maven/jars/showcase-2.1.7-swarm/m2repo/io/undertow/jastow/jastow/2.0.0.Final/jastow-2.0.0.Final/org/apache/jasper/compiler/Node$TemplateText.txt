Compiled from "Node.java"
public class org.apache.jasper.compiler.Node$TemplateText extends org.apache.jasper.compiler.Node {
  private java.util.ArrayList<java.lang.Integer> extraSmap;

  public org.apache.jasper.compiler.Node$TemplateText(java.lang.String, org.apache.jasper.compiler.Mark, org.apache.jasper.compiler.Node);
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: aload_1
       4: aload_2
       5: aload_3
       6: invokespecial #1                  // Method org/apache/jasper/compiler/Node."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/jasper/compiler/Mark;Lorg/apache/jasper/compiler/Node;)V
       9: aload_0
      10: aconst_null
      11: putfield      #2                  // Field extraSmap:Ljava/util/ArrayList;
      14: return

  public void accept(org.apache.jasper.compiler.Node$Visitor) throws org.apache.jasper.JasperException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #3                  // Method org/apache/jasper/compiler/Node$Visitor.visit:(Lorg/apache/jasper/compiler/Node$TemplateText;)V
       5: return

  public void ltrim();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #4                  // Field text:Ljava/lang/String;
       7: invokevirtual #5                  // Method java/lang/String.length:()I
      10: if_icmpge     32
      13: aload_0
      14: getfield      #4                  // Field text:Ljava/lang/String;
      17: iload_1
      18: invokevirtual #6                  // Method java/lang/String.charAt:(I)C
      21: bipush        32
      23: if_icmpgt     32
      26: iinc          1, 1
      29: goto          2
      32: aload_0
      33: aload_0
      34: getfield      #4                  // Field text:Ljava/lang/String;
      37: iload_1
      38: invokevirtual #7                  // Method java/lang/String.substring:(I)Ljava/lang/String;
      41: putfield      #4                  // Field text:Ljava/lang/String;
      44: return

  public void setText(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field text:Ljava/lang/String;
       5: return

  public void rtrim();
    Code:
       0: aload_0
       1: getfield      #4                  // Field text:Ljava/lang/String;
       4: invokevirtual #5                  // Method java/lang/String.length:()I
       7: istore_1
       8: iload_1
       9: ifle          33
      12: aload_0
      13: getfield      #4                  // Field text:Ljava/lang/String;
      16: iload_1
      17: iconst_1
      18: isub
      19: invokevirtual #6                  // Method java/lang/String.charAt:(I)C
      22: bipush        32
      24: if_icmpgt     33
      27: iinc          1, -1
      30: goto          8
      33: aload_0
      34: aload_0
      35: getfield      #4                  // Field text:Ljava/lang/String;
      38: iconst_0
      39: iload_1
      40: invokevirtual #8                  // Method java/lang/String.substring:(II)Ljava/lang/String;
      43: putfield      #4                  // Field text:Ljava/lang/String;
      46: return

  public boolean isAllSpace();
    Code:
       0: iconst_1
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iload_2
       5: aload_0
       6: getfield      #4                  // Field text:Ljava/lang/String;
       9: invokevirtual #5                  // Method java/lang/String.length:()I
      12: if_icmpge     40
      15: aload_0
      16: getfield      #4                  // Field text:Ljava/lang/String;
      19: iload_2
      20: invokevirtual #6                  // Method java/lang/String.charAt:(I)C
      23: invokestatic  #9                  // Method java/lang/Character.isWhitespace:(C)Z
      26: ifne          34
      29: iconst_0
      30: istore_1
      31: goto          40
      34: iinc          2, 1
      37: goto          4
      40: iload_1
      41: ireturn

  public void addSmap(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field extraSmap:Ljava/util/ArrayList;
       4: ifnonnull     18
       7: aload_0
       8: new           #10                 // class java/util/ArrayList
      11: dup
      12: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #2                  // Field extraSmap:Ljava/util/ArrayList;
      18: aload_0
      19: getfield      #2                  // Field extraSmap:Ljava/util/ArrayList;
      22: new           #12                 // class java/lang/Integer
      25: dup
      26: iload_1
      27: invokespecial #13                 // Method java/lang/Integer."<init>":(I)V
      30: invokevirtual #14                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      33: pop
      34: return

  public java.util.ArrayList<java.lang.Integer> getExtraSmap();
    Code:
       0: aload_0
       1: getfield      #2                  // Field extraSmap:Ljava/util/ArrayList;
       4: areturn

  public void setInnerClassName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method org/apache/jasper/compiler/Node.setInnerClassName:(Ljava/lang/String;)V
       5: return

  public java.lang.String getInnerClassName();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method org/apache/jasper/compiler/Node.getInnerClassName:()Ljava/lang/String;
       4: areturn

  public org.apache.jasper.compiler.Node$Root getRoot();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method org/apache/jasper/compiler/Node.getRoot:()Lorg/apache/jasper/compiler/Node$Root;
       4: areturn

  public void setEndJavaLine(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #18                 // Method org/apache/jasper/compiler/Node.setEndJavaLine:(I)V
       5: return

  public int getEndJavaLine();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method org/apache/jasper/compiler/Node.getEndJavaLine:()I
       4: ireturn

  public void setBeginJavaLine(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #20                 // Method org/apache/jasper/compiler/Node.setBeginJavaLine:(I)V
       5: return

  public int getBeginJavaLine();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method org/apache/jasper/compiler/Node.getBeginJavaLine:()I
       4: ireturn

  public org.apache.jasper.compiler.Node getParent();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method org/apache/jasper/compiler/Node.getParent:()Lorg/apache/jasper/compiler/Node;
       4: areturn

  public org.apache.jasper.compiler.Mark getStart();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method org/apache/jasper/compiler/Node.getStart:()Lorg/apache/jasper/compiler/Mark;
       4: areturn

  public java.lang.String getText();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method org/apache/jasper/compiler/Node.getText:()Ljava/lang/String;
       4: areturn

  public void setBody(org.apache.jasper.compiler.Node$Nodes);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method org/apache/jasper/compiler/Node.setBody:(Lorg/apache/jasper/compiler/Node$Nodes;)V
       5: return

  public org.apache.jasper.compiler.Node$Nodes getBody();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method org/apache/jasper/compiler/Node.getBody:()Lorg/apache/jasper/compiler/Node$Nodes;
       4: areturn

  public org.apache.jasper.compiler.Node$Nodes getNamedAttributeNodes();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method org/apache/jasper/compiler/Node.getNamedAttributeNodes:()Lorg/apache/jasper/compiler/Node$Nodes;
       4: areturn

  public org.apache.jasper.compiler.Node$NamedAttribute getNamedAttributeNode(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #28                 // Method org/apache/jasper/compiler/Node.getNamedAttributeNode:(Ljava/lang/String;)Lorg/apache/jasper/compiler/Node$NamedAttribute;
       5: areturn

  public java.lang.String getTextAttribute(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #29                 // Method org/apache/jasper/compiler/Node.getTextAttribute:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String getAttributeValue(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #30                 // Method org/apache/jasper/compiler/Node.getAttributeValue:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public void setAttributes(org.xml.sax.Attributes);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #31                 // Method org/apache/jasper/compiler/Node.setAttributes:(Lorg/xml/sax/Attributes;)V
       5: return

  public org.xml.sax.Attributes getNonTaglibXmlnsAttributes();
    Code:
       0: aload_0
       1: invokespecial #32                 // Method org/apache/jasper/compiler/Node.getNonTaglibXmlnsAttributes:()Lorg/xml/sax/Attributes;
       4: areturn

  public org.xml.sax.Attributes getTaglibAttributes();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method org/apache/jasper/compiler/Node.getTaglibAttributes:()Lorg/xml/sax/Attributes;
       4: areturn

  public org.xml.sax.Attributes getAttributes();
    Code:
       0: aload_0
       1: invokespecial #34                 // Method org/apache/jasper/compiler/Node.getAttributes:()Lorg/xml/sax/Attributes;
       4: areturn

  public java.lang.String getLocalName();
    Code:
       0: aload_0
       1: invokespecial #35                 // Method org/apache/jasper/compiler/Node.getLocalName:()Ljava/lang/String;
       4: areturn

  public java.lang.String getQName();
    Code:
       0: aload_0
       1: invokespecial #36                 // Method org/apache/jasper/compiler/Node.getQName:()Ljava/lang/String;
       4: areturn
}
