Compiled from "XMLEncodingDetector.java"
final class org.apache.jasper.xmlparser.XMLEncodingDetector$RewindableInputStream extends java.io.InputStream {
  private java.io.InputStream fInputStream;

  private byte[] fData;

  private int fEndOffset;

  private int fOffset;

  private int fLength;

  private int fMark;

  final org.apache.jasper.xmlparser.XMLEncodingDetector this$0;

  public org.apache.jasper.xmlparser.XMLEncodingDetector$RewindableInputStream(org.apache.jasper.xmlparser.XMLEncodingDetector, java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/jasper/xmlparser/XMLEncodingDetector;
       5: aload_0
       6: invokespecial #3                  // Method java/io/InputStream."<init>":()V
       9: aload_0
      10: bipush        64
      12: newarray       byte
      14: putfield      #4                  // Field fData:[B
      17: aload_0
      18: aload_2
      19: putfield      #5                  // Field fInputStream:Ljava/io/InputStream;
      22: aload_0
      23: iconst_m1
      24: putfield      #6                  // Field fEndOffset:I
      27: aload_0
      28: iconst_0
      29: putfield      #7                  // Field fOffset:I
      32: aload_0
      33: iconst_0
      34: putfield      #8                  // Field fLength:I
      37: aload_0
      38: iconst_0
      39: putfield      #9                  // Field fMark:I
      42: return

  public int read() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #7                  // Field fOffset:I
       6: aload_0
       7: getfield      #8                  // Field fLength:I
      10: if_icmpge     34
      13: aload_0
      14: getfield      #4                  // Field fData:[B
      17: aload_0
      18: dup
      19: getfield      #7                  // Field fOffset:I
      22: dup_x1
      23: iconst_1
      24: iadd
      25: putfield      #7                  // Field fOffset:I
      28: baload
      29: sipush        255
      32: iand
      33: ireturn
      34: aload_0
      35: getfield      #7                  // Field fOffset:I
      38: aload_0
      39: getfield      #6                  // Field fEndOffset:I
      42: if_icmpne     47
      45: iconst_m1
      46: ireturn
      47: aload_0
      48: getfield      #7                  // Field fOffset:I
      51: aload_0
      52: getfield      #4                  // Field fData:[B
      55: arraylength
      56: if_icmpne     87
      59: aload_0
      60: getfield      #7                  // Field fOffset:I
      63: iconst_1
      64: ishl
      65: newarray       byte
      67: astore_2
      68: aload_0
      69: getfield      #4                  // Field fData:[B
      72: iconst_0
      73: aload_2
      74: iconst_0
      75: aload_0
      76: getfield      #7                  // Field fOffset:I
      79: invokestatic  #10                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      82: aload_0
      83: aload_2
      84: putfield      #4                  // Field fData:[B
      87: aload_0
      88: getfield      #5                  // Field fInputStream:Ljava/io/InputStream;
      91: invokevirtual #11                 // Method java/io/InputStream.read:()I
      94: istore_1
      95: iload_1
      96: iconst_m1
      97: if_icmpne     110
     100: aload_0
     101: aload_0
     102: getfield      #7                  // Field fOffset:I
     105: putfield      #6                  // Field fEndOffset:I
     108: iconst_m1
     109: ireturn
     110: aload_0
     111: getfield      #4                  // Field fData:[B
     114: aload_0
     115: dup
     116: getfield      #8                  // Field fLength:I
     119: dup_x1
     120: iconst_1
     121: iadd
     122: putfield      #8                  // Field fLength:I
     125: iload_1
     126: i2b
     127: bastore
     128: aload_0
     129: dup
     130: getfield      #7                  // Field fOffset:I
     133: iconst_1
     134: iadd
     135: putfield      #7                  // Field fOffset:I
     138: iload_1
     139: sipush        255
     142: iand
     143: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field fLength:I
       4: aload_0
       5: getfield      #7                  // Field fOffset:I
       8: isub
       9: istore        4
      11: iload         4
      13: ifne          59
      16: aload_0
      17: getfield      #7                  // Field fOffset:I
      20: aload_0
      21: getfield      #6                  // Field fEndOffset:I
      24: if_icmpne     29
      27: iconst_m1
      28: ireturn
      29: aload_0
      30: invokevirtual #12                 // Method read:()I
      33: istore        5
      35: iload         5
      37: iconst_m1
      38: if_icmpne     51
      41: aload_0
      42: aload_0
      43: getfield      #7                  // Field fOffset:I
      46: putfield      #6                  // Field fEndOffset:I
      49: iconst_m1
      50: ireturn
      51: aload_1
      52: iload_2
      53: iload         5
      55: i2b
      56: bastore
      57: iconst_1
      58: ireturn
      59: iload_3
      60: iload         4
      62: if_icmpge     71
      65: iload_3
      66: ifgt          74
      69: iconst_0
      70: ireturn
      71: iload         4
      73: istore_3
      74: aload_1
      75: ifnull        92
      78: aload_0
      79: getfield      #4                  // Field fData:[B
      82: aload_0
      83: getfield      #7                  // Field fOffset:I
      86: aload_1
      87: iload_2
      88: iload_3
      89: invokestatic  #10                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      92: aload_0
      93: dup
      94: getfield      #7                  // Field fOffset:I
      97: iload_3
      98: iadd
      99: putfield      #7                  // Field fOffset:I
     102: iload_3
     103: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifgt          8
       6: lconst_0
       7: lreturn
       8: aload_0
       9: getfield      #8                  // Field fLength:I
      12: aload_0
      13: getfield      #7                  // Field fOffset:I
      16: isub
      17: istore_3
      18: iload_3
      19: ifne          44
      22: aload_0
      23: getfield      #7                  // Field fOffset:I
      26: aload_0
      27: getfield      #6                  // Field fEndOffset:I
      30: if_icmpne     35
      33: lconst_0
      34: lreturn
      35: aload_0
      36: getfield      #5                  // Field fInputStream:Ljava/io/InputStream;
      39: lload_1
      40: invokevirtual #13                 // Method java/io/InputStream.skip:(J)J
      43: lreturn
      44: lload_1
      45: iload_3
      46: i2l
      47: lcmp
      48: ifgt          65
      51: aload_0
      52: dup
      53: getfield      #7                  // Field fOffset:I
      56: i2l
      57: lload_1
      58: ladd
      59: l2i
      60: putfield      #7                  // Field fOffset:I
      63: lload_1
      64: lreturn
      65: aload_0
      66: dup
      67: getfield      #7                  // Field fOffset:I
      70: iload_3
      71: iadd
      72: putfield      #7                  // Field fOffset:I
      75: aload_0
      76: getfield      #7                  // Field fOffset:I
      79: aload_0
      80: getfield      #6                  // Field fEndOffset:I
      83: if_icmpne     89
      86: iload_3
      87: i2l
      88: lreturn
      89: lload_1
      90: iload_3
      91: i2l
      92: lsub
      93: lstore_1
      94: aload_0
      95: getfield      #5                  // Field fInputStream:Ljava/io/InputStream;
      98: lload_1
      99: invokevirtual #13                 // Method java/io/InputStream.skip:(J)J
     102: iload_3
     103: i2l
     104: ladd
     105: lreturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field fLength:I
       4: aload_0
       5: getfield      #7                  // Field fOffset:I
       8: isub
       9: istore_1
      10: iload_1
      11: ifne          29
      14: aload_0
      15: getfield      #7                  // Field fOffset:I
      18: aload_0
      19: getfield      #6                  // Field fEndOffset:I
      22: if_icmpne     27
      25: iconst_m1
      26: ireturn
      27: iconst_0
      28: ireturn
      29: iload_1
      30: ireturn

  public synchronized void mark(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field fOffset:I
       5: putfield      #9                  // Field fMark:I
       8: return

  public synchronized void reset();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field fMark:I
       5: putfield      #7                  // Field fOffset:I
       8: return

  public boolean markSupported();
    Code:
       0: iconst_1
       1: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field fInputStream:Ljava/io/InputStream;
       4: ifnull        19
       7: aload_0
       8: getfield      #5                  // Field fInputStream:Ljava/io/InputStream;
      11: invokevirtual #14                 // Method java/io/InputStream.close:()V
      14: aload_0
      15: aconst_null
      16: putfield      #5                  // Field fInputStream:Ljava/io/InputStream;
      19: return
}
