Compiled from "Util.java"
public class org.apache.jasper.tagplugins.jstl.Util$ImportResponseWrapper extends javax.servlet.http.HttpServletResponseWrapper {
  private final java.io.StringWriter sw;

  private final java.io.ByteArrayOutputStream bos;

  private final javax.servlet.ServletOutputStream sos;

  private boolean isWriterUsed;

  private boolean isStreamUsed;

  private int status;

  private java.lang.String charEncoding;

  public org.apache.jasper.tagplugins.jstl.Util$ImportResponseWrapper(javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method javax/servlet/http/HttpServletResponseWrapper."<init>":(Ljavax/servlet/http/HttpServletResponse;)V
       5: aload_0
       6: new           #3                  // class java/io/StringWriter
       9: dup
      10: invokespecial #4                  // Method java/io/StringWriter."<init>":()V
      13: putfield      #5                  // Field sw:Ljava/io/StringWriter;
      16: aload_0
      17: new           #6                  // class java/io/ByteArrayOutputStream
      20: dup
      21: invokespecial #7                  // Method java/io/ByteArrayOutputStream."<init>":()V
      24: putfield      #1                  // Field bos:Ljava/io/ByteArrayOutputStream;
      27: aload_0
      28: new           #8                  // class org/apache/jasper/tagplugins/jstl/Util$ImportResponseWrapper$1
      31: dup
      32: aload_0
      33: invokespecial #9                  // Method org/apache/jasper/tagplugins/jstl/Util$ImportResponseWrapper$1."<init>":(Lorg/apache/jasper/tagplugins/jstl/Util$ImportResponseWrapper;)V
      36: putfield      #10                 // Field sos:Ljavax/servlet/ServletOutputStream;
      39: aload_0
      40: sipush        200
      43: putfield      #11                 // Field status:I
      46: return

  public java.io.PrintWriter getWriter();
    Code:
       0: aload_0
       1: getfield      #12                 // Field isStreamUsed:Z
       4: ifeq          17
       7: new           #13                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #14                 // String Unexpected internal error during &lt;import&gt: Target servlet called getWriter(), then getOutputStream()
      13: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iconst_1
      19: putfield      #16                 // Field isWriterUsed:Z
      22: new           #17                 // class java/io/PrintWriter
      25: dup
      26: aload_0
      27: getfield      #5                  // Field sw:Ljava/io/StringWriter;
      30: invokespecial #18                 // Method java/io/PrintWriter."<init>":(Ljava/io/Writer;)V
      33: areturn

  public javax.servlet.ServletOutputStream getOutputStream();
    Code:
       0: aload_0
       1: getfield      #16                 // Field isWriterUsed:Z
       4: ifeq          16
       7: getstatic     #19                 // Field org/apache/jasper/JasperMessages.MESSAGES:Lorg/apache/jasper/JasperMessages;
      10: invokeinterface #20,  1           // InterfaceMethod org/apache/jasper/JasperMessages.usedWriterAfterOutputStream:()Ljava/lang/IllegalStateException;
      15: athrow
      16: aload_0
      17: iconst_1
      18: putfield      #12                 // Field isStreamUsed:Z
      21: aload_0
      22: getfield      #10                 // Field sos:Ljavax/servlet/ServletOutputStream;
      25: areturn

  public void setContentType(java.lang.String);
    Code:
       0: return

  public void setLocale(java.util.Locale);
    Code:
       0: return

  public void setStatus(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field status:I
       5: return

  public int getStatus();
    Code:
       0: aload_0
       1: getfield      #11                 // Field status:I
       4: ireturn

  public java.lang.String getCharEncoding();
    Code:
       0: aload_0
       1: getfield      #21                 // Field charEncoding:Ljava/lang/String;
       4: areturn

  public void setCharEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field charEncoding:Ljava/lang/String;
       5: return

  public java.lang.String getString() throws java.io.UnsupportedEncodingException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field isWriterUsed:Z
       4: ifeq          15
       7: aload_0
       8: getfield      #5                  // Field sw:Ljava/io/StringWriter;
      11: invokevirtual #22                 // Method java/io/StringWriter.toString:()Ljava/lang/String;
      14: areturn
      15: aload_0
      16: getfield      #12                 // Field isStreamUsed:Z
      19: ifeq          63
      22: aload_0
      23: getfield      #21                 // Field charEncoding:Ljava/lang/String;
      26: ifnull        53
      29: aload_0
      30: getfield      #21                 // Field charEncoding:Ljava/lang/String;
      33: ldc           #23                 // String
      35: invokevirtual #24                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      38: ifne          53
      41: aload_0
      42: getfield      #1                  // Field bos:Ljava/io/ByteArrayOutputStream;
      45: aload_0
      46: getfield      #21                 // Field charEncoding:Ljava/lang/String;
      49: invokevirtual #25                 // Method java/io/ByteArrayOutputStream.toString:(Ljava/lang/String;)Ljava/lang/String;
      52: areturn
      53: aload_0
      54: getfield      #1                  // Field bos:Ljava/io/ByteArrayOutputStream;
      57: ldc           #26                 // String ISO-8859-1
      59: invokevirtual #25                 // Method java/io/ByteArrayOutputStream.toString:(Ljava/lang/String;)Ljava/lang/String;
      62: areturn
      63: ldc           #23                 // String
      65: areturn

  static java.io.ByteArrayOutputStream access$000(org.apache.jasper.tagplugins.jstl.Util$ImportResponseWrapper);
    Code:
       0: aload_0
       1: getfield      #1                  // Field bos:Ljava/io/ByteArrayOutputStream;
       4: areturn
}
