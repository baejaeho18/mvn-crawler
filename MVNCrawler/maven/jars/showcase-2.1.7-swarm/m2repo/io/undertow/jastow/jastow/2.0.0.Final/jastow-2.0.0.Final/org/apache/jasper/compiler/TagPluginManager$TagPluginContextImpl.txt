Compiled from "TagPluginManager.java"
class org.apache.jasper.compiler.TagPluginManager$TagPluginContextImpl implements org.apache.jasper.compiler.tagplugin.TagPluginContext {
  private final org.apache.jasper.compiler.Node$CustomTag node;

  private final org.apache.jasper.compiler.PageInfo pageInfo;

  private final java.util.HashMap<java.lang.String, java.lang.Object> pluginAttributes;

  private org.apache.jasper.compiler.Node$Nodes curNodes;

  org.apache.jasper.compiler.TagPluginManager$TagPluginContextImpl(org.apache.jasper.compiler.Node$CustomTag, org.apache.jasper.compiler.PageInfo);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field node:Lorg/apache/jasper/compiler/Node$CustomTag;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field pageInfo:Lorg/apache/jasper/compiler/PageInfo;
      14: aload_0
      15: new           #4                  // class org/apache/jasper/compiler/Node$Nodes
      18: dup
      19: invokespecial #5                  // Method org/apache/jasper/compiler/Node$Nodes."<init>":()V
      22: putfield      #6                  // Field curNodes:Lorg/apache/jasper/compiler/Node$Nodes;
      25: aload_1
      26: aload_0
      27: getfield      #6                  // Field curNodes:Lorg/apache/jasper/compiler/Node$Nodes;
      30: invokevirtual #7                  // Method org/apache/jasper/compiler/Node$CustomTag.setAtETag:(Lorg/apache/jasper/compiler/Node$Nodes;)V
      33: aload_0
      34: new           #4                  // class org/apache/jasper/compiler/Node$Nodes
      37: dup
      38: invokespecial #5                  // Method org/apache/jasper/compiler/Node$Nodes."<init>":()V
      41: putfield      #6                  // Field curNodes:Lorg/apache/jasper/compiler/Node$Nodes;
      44: aload_1
      45: aload_0
      46: getfield      #6                  // Field curNodes:Lorg/apache/jasper/compiler/Node$Nodes;
      49: invokevirtual #8                  // Method org/apache/jasper/compiler/Node$CustomTag.setAtSTag:(Lorg/apache/jasper/compiler/Node$Nodes;)V
      52: aload_1
      53: iconst_1
      54: invokevirtual #9                  // Method org/apache/jasper/compiler/Node$CustomTag.setUseTagPlugin:(Z)V
      57: aload_0
      58: new           #10                 // class java/util/HashMap
      61: dup
      62: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      65: putfield      #12                 // Field pluginAttributes:Ljava/util/HashMap;
      68: return

  public org.apache.jasper.compiler.tagplugin.TagPluginContext getParentContext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field node:Lorg/apache/jasper/compiler/Node$CustomTag;
       4: invokevirtual #13                 // Method org/apache/jasper/compiler/Node$CustomTag.getParent:()Lorg/apache/jasper/compiler/Node;
       7: astore_1
       8: aload_1
       9: instanceof    #14                 // class org/apache/jasper/compiler/Node$CustomTag
      12: ifne          17
      15: aconst_null
      16: areturn
      17: aload_1
      18: checkcast     #14                 // class org/apache/jasper/compiler/Node$CustomTag
      21: invokevirtual #15                 // Method org/apache/jasper/compiler/Node$CustomTag.getTagPluginContext:()Lorg/apache/jasper/compiler/tagplugin/TagPluginContext;
      24: areturn

  public void setPluginAttribute(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #12                 // Field pluginAttributes:Ljava/util/HashMap;
       4: aload_1
       5: aload_2
       6: invokevirtual #16                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: return

  public java.lang.Object getPluginAttribute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #12                 // Field pluginAttributes:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #17                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public boolean isScriptless();
    Code:
       0: aload_0
       1: getfield      #2                  // Field node:Lorg/apache/jasper/compiler/Node$CustomTag;
       4: invokevirtual #18                 // Method org/apache/jasper/compiler/Node$CustomTag.getChildInfo:()Lorg/apache/jasper/compiler/Node$ChildInfo;
       7: invokevirtual #19                 // Method org/apache/jasper/compiler/Node$ChildInfo.isScriptless:()Z
      10: ireturn

  public boolean isConstantAttribute(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method getNodeAttribute:(Ljava/lang/String;)Lorg/apache/jasper/compiler/Node$JspAttribute;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: iconst_0
      11: ireturn
      12: aload_2
      13: invokevirtual #21                 // Method org/apache/jasper/compiler/Node$JspAttribute.isLiteral:()Z
      16: ireturn

  public java.lang.String getConstantAttribute(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method getNodeAttribute:(Ljava/lang/String;)Lorg/apache/jasper/compiler/Node$JspAttribute;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_2
      13: invokevirtual #22                 // Method org/apache/jasper/compiler/Node$JspAttribute.getValue:()Ljava/lang/String;
      16: areturn

  public boolean isAttributeSpecified(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method getNodeAttribute:(Ljava/lang/String;)Lorg/apache/jasper/compiler/Node$JspAttribute;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public java.lang.String getTemporaryVariableName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field node:Lorg/apache/jasper/compiler/Node$CustomTag;
       4: invokevirtual #23                 // Method org/apache/jasper/compiler/Node$CustomTag.getRoot:()Lorg/apache/jasper/compiler/Node$Root;
       7: invokevirtual #24                 // Method org/apache/jasper/compiler/Node$Root.nextTemporaryVariableName:()Ljava/lang/String;
      10: areturn

  public void generateImport(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field pageInfo:Lorg/apache/jasper/compiler/PageInfo;
       4: aload_1
       5: invokevirtual #25                 // Method org/apache/jasper/compiler/PageInfo.addImport:(Ljava/lang/String;)V
       8: return

  public void generateDeclaration(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field pageInfo:Lorg/apache/jasper/compiler/PageInfo;
       4: aload_1
       5: invokevirtual #26                 // Method org/apache/jasper/compiler/PageInfo.isPluginDeclared:(Ljava/lang/String;)Z
       8: ifeq          12
      11: return
      12: aload_0
      13: getfield      #6                  // Field curNodes:Lorg/apache/jasper/compiler/Node$Nodes;
      16: new           #27                 // class org/apache/jasper/compiler/Node$Declaration
      19: dup
      20: aload_2
      21: aload_0
      22: getfield      #2                  // Field node:Lorg/apache/jasper/compiler/Node$CustomTag;
      25: invokevirtual #28                 // Method org/apache/jasper/compiler/Node$CustomTag.getStart:()Lorg/apache/jasper/compiler/Mark;
      28: aconst_null
      29: invokespecial #29                 // Method org/apache/jasper/compiler/Node$Declaration."<init>":(Ljava/lang/String;Lorg/apache/jasper/compiler/Mark;Lorg/apache/jasper/compiler/Node;)V
      32: invokevirtual #30                 // Method org/apache/jasper/compiler/Node$Nodes.add:(Lorg/apache/jasper/compiler/Node;)V
      35: return

  public void generateJavaSource(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field curNodes:Lorg/apache/jasper/compiler/Node$Nodes;
       4: new           #31                 // class org/apache/jasper/compiler/Node$Scriptlet
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field node:Lorg/apache/jasper/compiler/Node$CustomTag;
      13: invokevirtual #28                 // Method org/apache/jasper/compiler/Node$CustomTag.getStart:()Lorg/apache/jasper/compiler/Mark;
      16: aconst_null
      17: invokespecial #32                 // Method org/apache/jasper/compiler/Node$Scriptlet."<init>":(Ljava/lang/String;Lorg/apache/jasper/compiler/Mark;Lorg/apache/jasper/compiler/Node;)V
      20: invokevirtual #30                 // Method org/apache/jasper/compiler/Node$Nodes.add:(Lorg/apache/jasper/compiler/Node;)V
      23: return

  public void generateAttribute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field curNodes:Lorg/apache/jasper/compiler/Node$Nodes;
       4: new           #33                 // class org/apache/jasper/compiler/Node$AttributeGenerator
       7: dup
       8: aload_0
       9: getfield      #2                  // Field node:Lorg/apache/jasper/compiler/Node$CustomTag;
      12: invokevirtual #28                 // Method org/apache/jasper/compiler/Node$CustomTag.getStart:()Lorg/apache/jasper/compiler/Mark;
      15: aload_1
      16: aload_0
      17: getfield      #2                  // Field node:Lorg/apache/jasper/compiler/Node$CustomTag;
      20: invokespecial #34                 // Method org/apache/jasper/compiler/Node$AttributeGenerator."<init>":(Lorg/apache/jasper/compiler/Mark;Ljava/lang/String;Lorg/apache/jasper/compiler/Node$CustomTag;)V
      23: invokevirtual #30                 // Method org/apache/jasper/compiler/Node$Nodes.add:(Lorg/apache/jasper/compiler/Node;)V
      26: return

  public void dontUseTagPlugin();
    Code:
       0: aload_0
       1: getfield      #2                  // Field node:Lorg/apache/jasper/compiler/Node$CustomTag;
       4: iconst_0
       5: invokevirtual #9                  // Method org/apache/jasper/compiler/Node$CustomTag.setUseTagPlugin:(Z)V
       8: return

  public void generateBody();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field node:Lorg/apache/jasper/compiler/Node$CustomTag;
       5: invokevirtual #35                 // Method org/apache/jasper/compiler/Node$CustomTag.getAtETag:()Lorg/apache/jasper/compiler/Node$Nodes;
       8: putfield      #6                  // Field curNodes:Lorg/apache/jasper/compiler/Node$Nodes;
      11: return

  public boolean isTagFile();
    Code:
       0: aload_0
       1: getfield      #3                  // Field pageInfo:Lorg/apache/jasper/compiler/PageInfo;
       4: invokevirtual #36                 // Method org/apache/jasper/compiler/PageInfo.isTagFile:()Z
       7: ireturn

  private org.apache.jasper.compiler.Node$JspAttribute getNodeAttribute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field node:Lorg/apache/jasper/compiler/Node$CustomTag;
       4: invokevirtual #37                 // Method org/apache/jasper/compiler/Node$CustomTag.getJspAttributes:()[Lorg/apache/jasper/compiler/Node$JspAttribute;
       7: astore_2
       8: iconst_0
       9: istore_3
      10: aload_2
      11: ifnull        43
      14: iload_3
      15: aload_2
      16: arraylength
      17: if_icmpge     43
      20: aload_2
      21: iload_3
      22: aaload
      23: invokevirtual #38                 // Method org/apache/jasper/compiler/Node$JspAttribute.getName:()Ljava/lang/String;
      26: aload_1
      27: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      30: ifeq          37
      33: aload_2
      34: iload_3
      35: aaload
      36: areturn
      37: iinc          3, 1
      40: goto          10
      43: aconst_null
      44: areturn
}
