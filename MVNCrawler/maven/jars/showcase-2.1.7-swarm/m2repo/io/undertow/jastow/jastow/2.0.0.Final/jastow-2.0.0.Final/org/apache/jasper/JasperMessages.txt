Compiled from "JasperMessages.java"
public interface org.apache.jasper.JasperMessages {
  public static final org.apache.jasper.JasperMessages MESSAGES;

  public abstract java.lang.IllegalStateException noJavaCompiler();

  public abstract java.lang.String failedClassCompilation();

  public abstract java.lang.String failedClassLoading();

  public abstract java.lang.IllegalStateException noOutputFolder();

  public abstract java.lang.IllegalStateException badOutputFolderUrl(java.lang.Throwable);

  public abstract java.io.IOException invalidByteRead(int);

  public abstract java.io.IOException markNotSupportedInUtf8Reader();

  public abstract java.lang.String errorUtf8ExpectedByte(int, int);

  public abstract java.lang.String errorUtf8InvalidByte(int, int);

  public abstract java.lang.String errorUtf8InvalidHighSurrogate(java.lang.String);

  public abstract java.lang.String unsupportedByteOrderForEncoding(java.lang.String);

  public abstract java.lang.String invalidEncodingDeclared(java.lang.String);

  public abstract java.lang.String unsupportedXmlVersion(java.lang.String);

  public abstract java.lang.String noXmlVersion();

  public abstract java.lang.String requiredSpaceBeforeVersionInTextDeclaration();

  public abstract java.lang.String requiredSpaceBeforeVersionInXmlDeclaration();

  public abstract java.lang.String requiredSpaceBeforeEncodingInTextDeclaration();

  public abstract java.lang.String requiredSpaceBeforeEncodingInXmlDeclaration();

  public abstract java.lang.String requiredEncodingDeclaration();

  public abstract java.lang.String requiredVersionDeclaration();

  public abstract java.lang.String requiredSpaceBeforeStandaloneInXmlDeclaration();

  public abstract java.lang.String invalidStandaloneDeclaration(java.lang.String);

  public abstract java.lang.String invalidPseudoAttribute();

  public abstract java.lang.String missingPseudoAttribute();

  public abstract java.lang.String malformedXmlDeclaration();

  public abstract java.lang.String missingPseudoAttributeName();

  public abstract java.lang.String missingEqualsInTextDeclaration(java.lang.String);

  public abstract java.lang.String missingEqualsInXmlDeclaration(java.lang.String);

  public abstract java.lang.String missingQuoteInTextDeclaration(java.lang.String);

  public abstract java.lang.String missingQuoteInXmlDeclaration(java.lang.String);

  public abstract java.lang.String invalidCharInTextDeclaration(java.lang.String);

  public abstract java.lang.String invalidCharInXmlDeclaration(java.lang.String);

  public abstract java.lang.String missingClosingQuoteInTextDeclaration(java.lang.String);

  public abstract java.lang.String missingClosingQuoteInXmlDeclaration(java.lang.String);

  public abstract java.lang.String invalidCharInProcessingInstruction(java.lang.String);

  public abstract java.lang.String invalidCharInContent(java.lang.String);

  public abstract java.lang.String fileNotFound(java.lang.String);

  public abstract java.lang.String unavailable();

  public abstract java.lang.String jspExceptionWithDetails(java.lang.String, int, java.lang.String);

  public abstract java.lang.String jspInfo();

  public abstract java.lang.NullPointerException nullAttributeName();

  public abstract java.lang.String failedSettingBeanIndexedProperty();

  public abstract java.lang.String cannotFindBeanProperty(java.lang.String, java.lang.String);

  public abstract java.lang.String cannotSetBeanProperty(java.lang.String, java.lang.String, java.lang.String);

  public abstract java.lang.String nullBean();

  public abstract java.lang.String cannotFindBeanInfo(java.lang.String);

  public abstract java.lang.String cannotGetBeanProperty(java.lang.String, java.lang.String);

  public abstract java.lang.String errorConvertingBeanProperty(java.lang.String, java.lang.String, java.lang.String, java.lang.String);

  public abstract java.lang.IllegalArgumentException noRegisteredPropertyEditor();

  public abstract java.lang.IllegalStateException cannotClearWithNoBuffer();

  public abstract java.io.IOException cannotClearAfterFlush();

  public abstract java.io.IOException bufferOverflow();

  public abstract java.lang.IllegalStateException errorFlushingData(java.lang.Throwable);

  public abstract java.lang.IllegalStateException illegalClearAfterFlush(java.lang.Throwable);

  public abstract java.lang.IllegalStateException cannotUseSessionScope();

  public abstract java.lang.IllegalArgumentException invalidScope();

  public abstract java.lang.IllegalArgumentException missingEscaping(java.lang.String, java.lang.String);

  public abstract java.lang.String badScopeForUseBean();

  public abstract java.lang.String malformedLibraryVersionNumber();

  public abstract java.lang.String needAlternateEncoding(java.lang.String);

  public abstract java.lang.String errorInJspFile(int, java.lang.String);

  public abstract java.lang.String errorInJavaFile(int);

  public abstract java.lang.String failedClassCompilation(java.lang.String);

  public abstract java.lang.String invalidUseBeanAttributeClass(java.lang.String);

  public abstract java.lang.String cannotFindSetterMethod(java.lang.String);

  public abstract java.lang.String errorIntrospectingTagHandler(java.lang.String);

  public abstract java.lang.String invalidTagFileDirectory(java.lang.String);

  public abstract java.lang.String invalidImplicitTld(java.lang.String);

  public abstract java.lang.String invalidImplicitTldVersion(java.lang.String);

  public abstract java.lang.String errorDisplayingJspExtract();

  public abstract java.lang.String errorReadingFile(java.lang.String);

  public abstract java.lang.String errorParsingFile(java.lang.String);

  public abstract java.lang.String invalidJspTextSubelements();

  public abstract java.lang.String unterminatedTag(java.lang.String);

  public abstract java.lang.String invalidEmptyTagSubelements(java.lang.String);

  public abstract java.lang.String errorAddingTagLibraries(java.lang.String);

  public abstract java.lang.String nestedJspRoot();

  public abstract java.lang.String invalidDirectiveInTagFile(java.lang.String);

  public abstract java.lang.String invalidScriptingElement();

  public abstract java.lang.String invalidActionInTagFile(java.lang.String);

  public abstract java.lang.String invalidStandardAction(java.lang.String);

  public abstract java.lang.String unknownTag(java.lang.String, java.lang.String);

  public abstract java.lang.String errorLoadingTagHandler(java.lang.String, java.lang.String);

  public abstract java.lang.String invalidScriptingBody(java.lang.String);

  public abstract java.lang.String unterminatedQuotes();

  public abstract java.lang.String unquotedAttributeValue();

  public abstract java.lang.String invalidRecursiveInclude(java.lang.String);

  public abstract java.lang.String invalidInclude(java.lang.String);

  public abstract java.lang.String invalidScope(java.lang.String);

  public abstract java.lang.String duplicateAttribute(java.lang.String);

  public abstract java.lang.String missingMandatoryAttribute(java.lang.String, java.lang.String);

  public abstract java.lang.String invalidAttribute(java.lang.String, java.lang.String);

  public abstract java.lang.String invalidTagFileName(java.lang.String);

  public abstract java.lang.String unsupportedEncoding(java.lang.String);

  public abstract java.lang.String unsupportedPageDirectiveLanguage();

  public abstract java.lang.String unsupportedTagDirectiveLanguage();

  public abstract java.lang.String invalidPageDirectiveBufferSize();

  public abstract java.lang.String invalidPageDirectiveSession();

  public abstract java.lang.String invalidPageDirectiveAutoFlush();

  public abstract java.lang.String invalidPageDirectiveIsThreadSafe();

  public abstract java.lang.String invalidPageDirectiveIsErrorPage();

  public abstract java.lang.String invalidPageDirectiveIsElIgnored();

  public abstract java.lang.String invalidTagDirectiveIsElIgnored();

  public abstract java.lang.String invalidPageDirectiveDeferredSyntaxAllowedAsLiteral();

  public abstract java.lang.String invalidTagDirectiveDeferredSyntaxAllowedAsLiteral();

  public abstract java.lang.String invalidPageDirectiveTrimDirectiveWhitespaces();

  public abstract java.lang.String invalidTagDirectiveTrimDirectiveWhitespaces();

  public abstract java.lang.String encodingConflict(java.lang.String, java.lang.String);

  public abstract java.lang.String cannotFindVariableNameFromAttribute(java.lang.String);

  public abstract java.lang.String wrongRootElement(java.lang.String, java.lang.String);

  public abstract java.lang.String invalidTagPlugin(java.lang.String);

  public abstract java.lang.String duplicateTagLibraryFunctionName(java.lang.String, java.lang.String);

  public abstract java.lang.String missingRequiredTagLibraryElement(java.lang.String, java.lang.String);

  public abstract java.lang.String unresolvableAbsoluteUri(java.lang.String);

  public abstract java.lang.String errorAccessingJar(java.lang.String);

  public abstract java.lang.String missingJar(java.lang.String);

  public abstract java.lang.String errorLoadingTagExtraInfo(java.lang.String);

  public abstract java.lang.String errorLoadingTagLibraryValidator(java.lang.String);

  public abstract java.lang.String invalidBodyContentInTagDirective(java.lang.String);

  public abstract java.lang.String invalidConflictingTagDirectiveAttributeValues(java.lang.String, java.lang.String, java.lang.String);

  public abstract java.lang.String cannotUseValueTypeWithoutDeferredValue();

  public abstract java.lang.String cannotUseMethodSignatureWithoutDeferredMethod();

  public abstract java.lang.String cannotUseBothDeferredValueAndMethod();

  public abstract java.lang.String cannotUseFragmentWithType();

  public abstract java.lang.String cannotUseFragmentWithRtexprValue();

  public abstract java.lang.String invalidTagFileJspVersion(java.lang.String);

  public abstract java.lang.String mustSpecifyVariableDirectiveEitherName();

  public abstract java.lang.String mustNotSpecifyVariableDirectiveBothName();

  public abstract java.lang.String mustNotSpecifyVariableDirectiveBothOrNoneName();

  public abstract java.lang.String invalidDuplicateNames(java.lang.String, java.lang.String, int);

  public abstract java.lang.String cannotFindAttribute(java.lang.String);

  public abstract java.lang.String invalidAttributeFound(int, java.lang.String);

  public abstract java.lang.String invalidDirectiveInPage(java.lang.String);

  public abstract java.lang.String invalidDirective();

  public abstract java.lang.String invalidAttributePrefix(java.lang.String);

  public abstract java.lang.String missingEqual();

  public abstract java.lang.String missingQuote();

  public abstract java.lang.String unterminatedAttribute(java.lang.String);

  public abstract java.lang.String errorIncluding(java.lang.String);

  public abstract java.lang.String prefixAlreadyInUse(java.lang.String, java.lang.String, int);

  public abstract java.lang.String prefixRedefinition(java.lang.String, java.lang.String, java.lang.String);

  public abstract java.lang.String missingParamAction();

  public abstract java.lang.String invalidEmptyBodyTag(java.lang.String);

  public abstract java.lang.String invalidTagBody(java.lang.String);

  public abstract java.lang.String invalidJspAttribute();

  public abstract java.lang.String invalidJspBody();

  public abstract java.lang.String invalidJspFallback();

  public abstract java.lang.String invalidJspParams();

  public abstract java.lang.String invalidJspParam();

  public abstract java.lang.String invalidJspOutput();

  public abstract java.lang.String invalidStandardAction();

  public abstract java.lang.String unknownTagPrefix(java.lang.String, java.lang.String);

  public abstract java.lang.String badContent();

  public abstract java.lang.String invalidTemplateTextBody(java.lang.String);

  public abstract java.lang.String invalidTagInTemplateTextBody();

  public abstract java.lang.String unbalancedEndTag(java.lang.String);

  public abstract java.lang.String invalidJspAttributeNesting();

  public abstract java.lang.String invalidJspBodyNesting();

  public abstract java.lang.String invalidBodyContentType();

  public abstract java.lang.String invalidConflictingPageDirectiveAttribute(java.lang.String, java.lang.String, java.lang.String);

  public abstract java.lang.String invalidDuplicatePageDirectiveAttribute(java.lang.String);

  public abstract java.lang.String invalidConflictingPageDirectiveAutoFlushBuffer();

  public abstract java.lang.String invalidDuplicateTagDirectiveAttribute(java.lang.String);

  public abstract java.lang.String pageEncodingConflictJspPropertyGroup(java.lang.String, java.lang.String);

  public abstract java.lang.String pageEncodingConflictProlog(java.lang.String, java.lang.String);

  public abstract java.lang.String invalidJspVersionNumber(java.lang.String);

  public abstract java.lang.String invalidTaglibDirectiveMissingLocation();

  public abstract java.lang.String invalidTaglibDirectiveConflictingLocation();

  public abstract java.lang.String invalidEmptyJspParams();

  public abstract java.lang.String invalidSetProperty();

  public abstract java.lang.String invalidSetPropertyEitherParam();

  public abstract java.lang.String missingUseBeanType();

  public abstract java.lang.String duplicateUseBeanName(java.lang.String);

  public abstract java.lang.String cannotAccessSessionScopeWithUseBean();

  public abstract java.lang.String cannotUseBothAttributeAndTypeInUseBean();

  public abstract java.lang.String missingPluginType();

  public abstract java.lang.String badPluginType(java.lang.String);

  public abstract java.lang.String missingPluginCode();

  public abstract java.lang.String invalidDeferredExpressionInTemplateText();

  public abstract java.lang.String missingTagInfo(java.lang.String);

  public abstract java.lang.String invalidSimpleTagBodyContent(java.lang.String);

  public abstract java.lang.String unimplementedDynamicAttributes(java.lang.String);

  public abstract java.lang.String invalidTeiWithVariableSubelements(java.lang.String);

  public abstract java.lang.String missingMandatoryAttributes();

  public abstract java.lang.String missingMandatoryNameAttribute();

  public abstract java.lang.String invalidJspOutputBody();

  public abstract java.lang.String invalidJspOutputConflict(java.lang.String, java.lang.String, java.lang.String);

  public abstract java.lang.String errorJspOutputDoctype();

  public abstract java.lang.String errorJspOutputMissingDoctype();

  public abstract java.lang.String missingVarAttribute();

  public abstract java.lang.String errorBothVarAttributes();

  public abstract java.lang.String errorUsingBothElTypes();

  public abstract java.lang.String errorUsingLiteralValueWithDeferredVoidReturnTyep(java.lang.String);

  public abstract java.lang.String unknownAttributeType(java.lang.String, java.lang.String);

  public abstract java.lang.String errorCoercingAttributeValue(java.lang.String, java.lang.String, java.lang.String);

  public abstract java.lang.String noExpressionAllowedForAttribute(java.lang.String);

  public abstract java.lang.String invalidExpression(java.lang.String);

  public abstract java.lang.String invalidAttributeForTag(java.lang.String, java.lang.String);

  public abstract java.lang.String noExpressionAllowedForAttributeInAction(java.lang.String, java.lang.String);

  public abstract java.lang.String missingFunctionPrefix(java.lang.String);

  public abstract java.lang.String unknownFunctionPrefix(java.lang.String);

  public abstract java.lang.String unknownFunction(java.lang.String);

  public abstract java.lang.String invalidFunctionSignature(java.lang.String, java.lang.String);

  public abstract java.lang.String invalidFunctionSignatureMissingParent(java.lang.String, java.lang.String);

  public abstract java.lang.String missingFunctionClass(java.lang.String, java.lang.String);

  public abstract java.lang.String missingSignatureClass(java.lang.String, java.lang.String);

  public abstract java.lang.String missingMethodInClass(java.lang.String, java.lang.String, java.lang.String);

  public abstract java.lang.String errorValidatingTag(java.lang.String);

  public abstract java.lang.String errorValidatingTaglibrary(java.lang.String, java.lang.String);

  public abstract java.lang.String jspException(java.lang.String, int);

  public abstract java.lang.String securityExceptionLoadingClass(java.lang.String);

  public abstract java.lang.String stacktrace();

  public abstract java.lang.String backgroundCompilationFailed();

  public abstract java.lang.String errorInitializingSecurity();

  public abstract java.lang.String errorUnquotingAttributeValue();

  public abstract java.lang.IllegalArgumentException invalidNegativeSmapPosition(int);

  public abstract java.lang.IllegalArgumentException undefinedPosition();

  public abstract java.lang.IllegalArgumentException unknownFileName(java.lang.String);

  public abstract java.lang.String tagFileProcessorAttrName();

  public abstract java.lang.String tagFileProcessorVarNameGiven();

  public abstract java.lang.String tagFileProcessorVarNameFrom();

  public abstract java.lang.String tagFileProcessorVarAlias();

  public abstract java.lang.String tagFileProcessorTagDynamic();

  public abstract java.lang.NullPointerException elResolverNullContext();

  public abstract java.lang.String errorResolvingVariable(java.lang.String, java.lang.String);

  public abstract java.lang.String legacyVariableResolver();

  public abstract java.lang.String streamClosed();

  public abstract java.lang.IllegalArgumentException nullCharBufferTextArgument();

  public abstract java.lang.IllegalArgumentException nullCharBufferCharactersArgument();

  public abstract java.lang.IllegalArgumentException nullCharBufferWriterArgument();

  public abstract java.lang.IllegalArgumentException invalidCharBufferStartPosition();

  public abstract java.lang.IllegalArgumentException invalidCharBufferLength();

  public abstract java.lang.IllegalStateException noInstanceManager();

  public abstract java.lang.IllegalArgumentException nullElContextListener();

  public abstract java.lang.IllegalArgumentException nullServletContext();

  public abstract java.lang.IllegalArgumentException nullJspContext();

  public abstract java.lang.IllegalArgumentException nullElResolver();

  public abstract java.lang.IllegalStateException cannotAddElResolver();

  public abstract java.lang.IllegalArgumentException invalidNegativeBufferSize();

  public abstract java.lang.IllegalStateException pageNeedsSession();

  public abstract java.lang.NullPointerException nullThrowable();

  public abstract java.lang.RuntimeException invalidFunctionMapping(java.lang.String);

  public abstract java.lang.String invalidRequestParameterValue(java.lang.String, java.lang.String);

  public abstract java.lang.String reservedPiTarget();

  public abstract java.lang.String requiredWhiteSpaceAfterPiTarget();

  public abstract java.lang.String invalidContextAndUrlValues();

  public abstract java.lang.IllegalStateException usedOutputStreamAfterWriter();

  public abstract java.lang.IllegalStateException usedWriterAfterOutputStream();

  public abstract java.lang.String forbiddenHttpMethod();

  public abstract java.lang.IllegalArgumentException invalidImportStatement();

  public abstract java.lang.IllegalArgumentException invalidStringLiteral(java.lang.String);

  public abstract java.lang.String errorInJspFileLineColumn(int, int);

  public abstract java.lang.IllegalArgumentException invalidQuoting(java.lang.String);

  static {};
    Code:
       0: ldc           #1                  // class org/apache/jasper/JasperMessages
       2: invokestatic  #2                  // Method org/jboss/logging/Messages.getBundle:(Ljava/lang/Class;)Ljava/lang/Object;
       5: checkcast     #1                  // class org/apache/jasper/JasperMessages
       8: putstatic     #3                  // Field MESSAGES:Lorg/apache/jasper/JasperMessages;
      11: return
}
