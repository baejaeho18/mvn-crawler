Compiled from "JspWriterImpl.java"
public class org.apache.jasper.runtime.JspWriterImpl extends javax.servlet.jsp.JspWriter {
  private java.io.Writer out;

  private javax.servlet.ServletResponse response;

  private char[] cb;

  private int nextChar;

  private boolean flushed;

  private boolean closed;

  public org.apache.jasper.runtime.JspWriterImpl();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field org/apache/jasper/Constants.DEFAULT_BUFFER_SIZE:I
       4: iconst_1
       5: invokespecial #2                  // Method javax/servlet/jsp/JspWriter."<init>":(IZ)V
       8: aload_0
       9: iconst_0
      10: putfield      #3                  // Field flushed:Z
      13: aload_0
      14: iconst_0
      15: putfield      #4                  // Field closed:Z
      18: return

  public org.apache.jasper.runtime.JspWriterImpl(javax.servlet.ServletResponse, int, boolean);
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: invokespecial #2                  // Method javax/servlet/jsp/JspWriter."<init>":(IZ)V
       6: aload_0
       7: iconst_0
       8: putfield      #3                  // Field flushed:Z
      11: aload_0
      12: iconst_0
      13: putfield      #4                  // Field closed:Z
      16: iload_2
      17: ifge          29
      20: getstatic     #5                  // Field org/apache/jasper/JasperMessages.MESSAGES:Lorg/apache/jasper/JasperMessages;
      23: invokeinterface #6,  1            // InterfaceMethod org/apache/jasper/JasperMessages.invalidNegativeBufferSize:()Ljava/lang/IllegalArgumentException;
      28: athrow
      29: aload_0
      30: aload_1
      31: putfield      #7                  // Field response:Ljavax/servlet/ServletResponse;
      34: aload_0
      35: iload_2
      36: ifne          43
      39: aconst_null
      40: goto          46
      43: iload_2
      44: newarray       char
      46: putfield      #8                  // Field cb:[C
      49: aload_0
      50: iconst_0
      51: putfield      #9                  // Field nextChar:I
      54: return

  void init(javax.servlet.ServletResponse, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field response:Ljavax/servlet/ServletResponse;
       5: iload_2
       6: ifle          32
       9: aload_0
      10: getfield      #8                  // Field cb:[C
      13: ifnull        25
      16: iload_2
      17: aload_0
      18: getfield      #8                  // Field cb:[C
      21: arraylength
      22: if_icmple     32
      25: aload_0
      26: iload_2
      27: newarray       char
      29: putfield      #8                  // Field cb:[C
      32: aload_0
      33: iconst_0
      34: putfield      #9                  // Field nextChar:I
      37: aload_0
      38: iload_3
      39: putfield      #10                 // Field autoFlush:Z
      42: aload_0
      43: iload_2
      44: putfield      #11                 // Field bufferSize:I
      47: return

  void recycle();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #3                  // Field flushed:Z
       5: aload_0
       6: iconst_0
       7: putfield      #4                  // Field closed:Z
      10: aload_0
      11: aconst_null
      12: putfield      #12                 // Field out:Ljava/io/Writer;
      15: aload_0
      16: iconst_0
      17: putfield      #9                  // Field nextChar:I
      20: aload_0
      21: aconst_null
      22: putfield      #7                  // Field response:Ljavax/servlet/ServletResponse;
      25: return

  protected final void flushBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field bufferSize:I
       4: ifne          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #3                  // Field flushed:Z
      13: aload_0
      14: invokespecial #13                 // Method ensureOpen:()V
      17: aload_0
      18: getfield      #9                  // Field nextChar:I
      21: ifne          25
      24: return
      25: aload_0
      26: invokespecial #14                 // Method initOut:()V
      29: aload_0
      30: getfield      #12                 // Field out:Ljava/io/Writer;
      33: aload_0
      34: getfield      #8                  // Field cb:[C
      37: iconst_0
      38: aload_0
      39: getfield      #9                  // Field nextChar:I
      42: invokevirtual #15                 // Method java/io/Writer.write:([CII)V
      45: aload_0
      46: iconst_0
      47: putfield      #9                  // Field nextChar:I
      50: return

  private void initOut() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field out:Ljava/io/Writer;
       4: ifnonnull     20
       7: aload_0
       8: aload_0
       9: getfield      #7                  // Field response:Ljavax/servlet/ServletResponse;
      12: invokeinterface #16,  1           // InterfaceMethod javax/servlet/ServletResponse.getWriter:()Ljava/io/PrintWriter;
      17: putfield      #12                 // Field out:Ljava/io/Writer;
      20: return

  public final void clear() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field bufferSize:I
       4: ifne          23
       7: aload_0
       8: getfield      #12                 // Field out:Ljava/io/Writer;
      11: ifnull        23
      14: getstatic     #5                  // Field org/apache/jasper/JasperMessages.MESSAGES:Lorg/apache/jasper/JasperMessages;
      17: invokeinterface #17,  1           // InterfaceMethod org/apache/jasper/JasperMessages.cannotClearWithNoBuffer:()Ljava/lang/IllegalStateException;
      22: athrow
      23: aload_0
      24: getfield      #3                  // Field flushed:Z
      27: ifeq          39
      30: getstatic     #5                  // Field org/apache/jasper/JasperMessages.MESSAGES:Lorg/apache/jasper/JasperMessages;
      33: invokeinterface #18,  1           // InterfaceMethod org/apache/jasper/JasperMessages.cannotClearAfterFlush:()Ljava/io/IOException;
      38: athrow
      39: aload_0
      40: invokespecial #13                 // Method ensureOpen:()V
      43: aload_0
      44: iconst_0
      45: putfield      #9                  // Field nextChar:I
      48: return

  public void clearBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field bufferSize:I
       4: ifne          16
       7: getstatic     #5                  // Field org/apache/jasper/JasperMessages.MESSAGES:Lorg/apache/jasper/JasperMessages;
      10: invokeinterface #17,  1           // InterfaceMethod org/apache/jasper/JasperMessages.cannotClearWithNoBuffer:()Ljava/lang/IllegalStateException;
      15: athrow
      16: aload_0
      17: invokespecial #13                 // Method ensureOpen:()V
      20: aload_0
      21: iconst_0
      22: putfield      #9                  // Field nextChar:I
      25: return

  private final void bufferOverflow() throws java.io.IOException;
    Code:
       0: getstatic     #5                  // Field org/apache/jasper/JasperMessages.MESSAGES:Lorg/apache/jasper/JasperMessages;
       3: invokeinterface #19,  1           // InterfaceMethod org/apache/jasper/JasperMessages.bufferOverflow:()Ljava/io/IOException;
       8: athrow

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method flushBuffer:()V
       4: aload_0
       5: getfield      #12                 // Field out:Ljava/io/Writer;
       8: ifnull        18
      11: aload_0
      12: getfield      #12                 // Field out:Ljava/io/Writer;
      15: invokevirtual #21                 // Method java/io/Writer.flush:()V
      18: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field response:Ljavax/servlet/ServletResponse;
       4: ifnull        14
       7: aload_0
       8: getfield      #4                  // Field closed:Z
      11: ifeq          15
      14: return
      15: aload_0
      16: invokevirtual #22                 // Method flush:()V
      19: aload_0
      20: getfield      #12                 // Field out:Ljava/io/Writer;
      23: ifnull        33
      26: aload_0
      27: getfield      #12                 // Field out:Ljava/io/Writer;
      30: invokevirtual #23                 // Method java/io/Writer.close:()V
      33: aload_0
      34: aconst_null
      35: putfield      #12                 // Field out:Ljava/io/Writer;
      38: aload_0
      39: iconst_1
      40: putfield      #4                  // Field closed:Z
      43: return

  public int getRemaining();
    Code:
       0: aload_0
       1: getfield      #11                 // Field bufferSize:I
       4: aload_0
       5: getfield      #9                  // Field nextChar:I
       8: isub
       9: ireturn

  private void ensureOpen() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field response:Ljavax/servlet/ServletResponse;
       4: ifnull        14
       7: aload_0
       8: getfield      #4                  // Field closed:Z
      11: ifeq          30
      14: new           #24                 // class java/io/IOException
      17: dup
      18: getstatic     #5                  // Field org/apache/jasper/JasperMessages.MESSAGES:Lorg/apache/jasper/JasperMessages;
      21: invokeinterface #25,  1           // InterfaceMethod org/apache/jasper/JasperMessages.streamClosed:()Ljava/lang/String;
      26: invokespecial #26                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #13                 // Method ensureOpen:()V
       4: aload_0
       5: getfield      #11                 // Field bufferSize:I
       8: ifne          26
      11: aload_0
      12: invokespecial #14                 // Method initOut:()V
      15: aload_0
      16: getfield      #12                 // Field out:Ljava/io/Writer;
      19: iload_1
      20: invokevirtual #27                 // Method java/io/Writer.write:(I)V
      23: goto          73
      26: aload_0
      27: getfield      #9                  // Field nextChar:I
      30: aload_0
      31: getfield      #11                 // Field bufferSize:I
      34: if_icmplt     55
      37: aload_0
      38: getfield      #10                 // Field autoFlush:Z
      41: ifeq          51
      44: aload_0
      45: invokevirtual #20                 // Method flushBuffer:()V
      48: goto          55
      51: aload_0
      52: invokespecial #28                 // Method bufferOverflow:()V
      55: aload_0
      56: getfield      #8                  // Field cb:[C
      59: aload_0
      60: dup
      61: getfield      #9                  // Field nextChar:I
      64: dup_x1
      65: iconst_1
      66: iadd
      67: putfield      #9                  // Field nextChar:I
      70: iload_1
      71: i2c
      72: castore
      73: return

  private static int min(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: if_icmpge     7
       5: iload_0
       6: ireturn
       7: iload_1
       8: ireturn

  public void write(char[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #13                 // Method ensureOpen:()V
       4: aload_0
       5: getfield      #11                 // Field bufferSize:I
       8: ifne          26
      11: aload_0
      12: invokespecial #14                 // Method initOut:()V
      15: aload_0
      16: getfield      #12                 // Field out:Ljava/io/Writer;
      19: aload_1
      20: iload_2
      21: iload_3
      22: invokevirtual #15                 // Method java/io/Writer.write:([CII)V
      25: return
      26: iload_2
      27: iflt          54
      30: iload_2
      31: aload_1
      32: arraylength
      33: if_icmpgt     54
      36: iload_3
      37: iflt          54
      40: iload_2
      41: iload_3
      42: iadd
      43: aload_1
      44: arraylength
      45: if_icmpgt     54
      48: iload_2
      49: iload_3
      50: iadd
      51: ifge          62
      54: new           #29                 // class java/lang/IndexOutOfBoundsException
      57: dup
      58: invokespecial #30                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      61: athrow
      62: iload_3
      63: ifne          67
      66: return
      67: iload_3
      68: aload_0
      69: getfield      #11                 // Field bufferSize:I
      72: if_icmplt     108
      75: aload_0
      76: getfield      #10                 // Field autoFlush:Z
      79: ifeq          89
      82: aload_0
      83: invokevirtual #20                 // Method flushBuffer:()V
      86: goto          93
      89: aload_0
      90: invokespecial #28                 // Method bufferOverflow:()V
      93: aload_0
      94: invokespecial #14                 // Method initOut:()V
      97: aload_0
      98: getfield      #12                 // Field out:Ljava/io/Writer;
     101: aload_1
     102: iload_2
     103: iload_3
     104: invokevirtual #15                 // Method java/io/Writer.write:([CII)V
     107: return
     108: iload_2
     109: istore        4
     111: iload_2
     112: iload_3
     113: iadd
     114: istore        5
     116: iload         4
     118: iload         5
     120: if_icmpge     208
     123: aload_0
     124: getfield      #11                 // Field bufferSize:I
     127: aload_0
     128: getfield      #9                  // Field nextChar:I
     131: isub
     132: iload         5
     134: iload         4
     136: isub
     137: invokestatic  #31                 // Method min:(II)I
     140: istore        6
     142: aload_1
     143: iload         4
     145: aload_0
     146: getfield      #8                  // Field cb:[C
     149: aload_0
     150: getfield      #9                  // Field nextChar:I
     153: iload         6
     155: invokestatic  #32                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     158: iload         4
     160: iload         6
     162: iadd
     163: istore        4
     165: aload_0
     166: dup
     167: getfield      #9                  // Field nextChar:I
     170: iload         6
     172: iadd
     173: putfield      #9                  // Field nextChar:I
     176: aload_0
     177: getfield      #9                  // Field nextChar:I
     180: aload_0
     181: getfield      #11                 // Field bufferSize:I
     184: if_icmplt     205
     187: aload_0
     188: getfield      #10                 // Field autoFlush:Z
     191: ifeq          201
     194: aload_0
     195: invokevirtual #20                 // Method flushBuffer:()V
     198: goto          205
     201: aload_0
     202: invokespecial #28                 // Method bufferOverflow:()V
     205: goto          116
     208: return

  public void write(char[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #33                 // Method write:([CII)V
       8: return

  public void write(java.lang.String, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #13                 // Method ensureOpen:()V
       4: aload_0
       5: getfield      #11                 // Field bufferSize:I
       8: ifne          26
      11: aload_0
      12: invokespecial #14                 // Method initOut:()V
      15: aload_0
      16: getfield      #12                 // Field out:Ljava/io/Writer;
      19: aload_1
      20: iload_2
      21: iload_3
      22: invokevirtual #34                 // Method java/io/Writer.write:(Ljava/lang/String;II)V
      25: return
      26: iload_2
      27: istore        4
      29: iload_2
      30: iload_3
      31: iadd
      32: istore        5
      34: iload         4
      36: iload         5
      38: if_icmpge     129
      41: aload_0
      42: getfield      #11                 // Field bufferSize:I
      45: aload_0
      46: getfield      #9                  // Field nextChar:I
      49: isub
      50: iload         5
      52: iload         4
      54: isub
      55: invokestatic  #31                 // Method min:(II)I
      58: istore        6
      60: aload_1
      61: iload         4
      63: iload         4
      65: iload         6
      67: iadd
      68: aload_0
      69: getfield      #8                  // Field cb:[C
      72: aload_0
      73: getfield      #9                  // Field nextChar:I
      76: invokevirtual #35                 // Method java/lang/String.getChars:(II[CI)V
      79: iload         4
      81: iload         6
      83: iadd
      84: istore        4
      86: aload_0
      87: dup
      88: getfield      #9                  // Field nextChar:I
      91: iload         6
      93: iadd
      94: putfield      #9                  // Field nextChar:I
      97: aload_0
      98: getfield      #9                  // Field nextChar:I
     101: aload_0
     102: getfield      #11                 // Field bufferSize:I
     105: if_icmplt     126
     108: aload_0
     109: getfield      #10                 // Field autoFlush:Z
     112: ifeq          122
     115: aload_0
     116: invokevirtual #20                 // Method flushBuffer:()V
     119: goto          126
     122: aload_0
     123: invokespecial #28                 // Method bufferOverflow:()V
     126: goto          34
     129: return

  public void newLine() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #36                 // Method java/lang/System.lineSeparator:()Ljava/lang/String;
       4: invokevirtual #37                 // Method write:(Ljava/lang/String;)V
       7: return

  public void print(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          10
       5: ldc           #38                 // String true
       7: goto          12
      10: ldc           #39                 // String false
      12: invokevirtual #37                 // Method write:(Ljava/lang/String;)V
      15: return

  public void print(char) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #40                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;
       5: invokevirtual #37                 // Method write:(Ljava/lang/String;)V
       8: return

  public void print(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #41                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
       5: invokevirtual #37                 // Method write:(Ljava/lang/String;)V
       8: return

  public void print(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #42                 // Method java/lang/String.valueOf:(J)Ljava/lang/String;
       5: invokevirtual #37                 // Method write:(Ljava/lang/String;)V
       8: return

  public void print(float) throws java.io.IOException;
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #43                 // Method java/lang/String.valueOf:(F)Ljava/lang/String;
       5: invokevirtual #37                 // Method write:(Ljava/lang/String;)V
       8: return

  public void print(double) throws java.io.IOException;
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #44                 // Method java/lang/String.valueOf:(D)Ljava/lang/String;
       5: invokevirtual #37                 // Method write:(Ljava/lang/String;)V
       8: return

  public void print(char[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method write:([C)V
       5: return

  public void print(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     7
       4: ldc           #46                 // String null
       6: astore_1
       7: aload_0
       8: aload_1
       9: invokevirtual #37                 // Method write:(Ljava/lang/String;)V
      12: return

  public void print(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #47                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       5: invokevirtual #37                 // Method write:(Ljava/lang/String;)V
       8: return

  public void println() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method newLine:()V
       4: return

  public void println(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #49                 // Method print:(Z)V
       5: aload_0
       6: invokevirtual #50                 // Method println:()V
       9: return

  public void println(char) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #51                 // Method print:(C)V
       5: aload_0
       6: invokevirtual #50                 // Method println:()V
       9: return

  public void println(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #52                 // Method print:(I)V
       5: aload_0
       6: invokevirtual #50                 // Method println:()V
       9: return

  public void println(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #53                 // Method print:(J)V
       5: aload_0
       6: invokevirtual #50                 // Method println:()V
       9: return

  public void println(float) throws java.io.IOException;
    Code:
       0: aload_0
       1: fload_1
       2: invokevirtual #54                 // Method print:(F)V
       5: aload_0
       6: invokevirtual #50                 // Method println:()V
       9: return

  public void println(double) throws java.io.IOException;
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #55                 // Method print:(D)V
       5: aload_0
       6: invokevirtual #50                 // Method println:()V
       9: return

  public void println(char[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method print:([C)V
       5: aload_0
       6: invokevirtual #50                 // Method println:()V
       9: return

  public void println(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #57                 // Method print:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #50                 // Method println:()V
       9: return

  public void println(java.lang.Object) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #58                 // Method print:(Ljava/lang/Object;)V
       5: aload_0
       6: invokevirtual #50                 // Method println:()V
       9: return
}
