Compiled from "CrawlerSessionManagerHandler.java"
public class io.undertow.servlet.handlers.CrawlerSessionManagerHandler implements io.undertow.server.HttpHandler {
  private static final java.lang.String SESSION_ATTRIBUTE_NAME;

  private final java.util.Map<java.lang.String, java.lang.String> clientIpSessionId;

  private final java.util.Map<java.lang.String, java.lang.String> sessionIdClientIp;

  private final io.undertow.servlet.api.CrawlerSessionManagerConfig config;

  private final java.util.regex.Pattern uaPattern;

  private final io.undertow.server.HttpHandler next;

  public io.undertow.servlet.handlers.CrawlerSessionManagerHandler(io.undertow.servlet.api.CrawlerSessionManagerConfig, io.undertow.server.HttpHandler);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field clientIpSessionId:Ljava/util/Map;
      15: aload_0
      16: new           #6                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #3                  // Field sessionIdClientIp:Ljava/util/Map;
      26: aload_0
      27: aload_1
      28: putfield      #1                  // Field config:Lio/undertow/servlet/api/CrawlerSessionManagerConfig;
      31: aload_0
      32: aload_2
      33: putfield      #8                  // Field next:Lio/undertow/server/HttpHandler;
      36: aload_0
      37: aload_1
      38: invokevirtual #9                  // Method io/undertow/servlet/api/CrawlerSessionManagerConfig.getCrawlerUserAgents:()Ljava/lang/String;
      41: invokestatic  #10                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      44: putfield      #11                 // Field uaPattern:Ljava/util/regex/Pattern;
      47: return

  public void handleRequest(io.undertow.server.HttpServerExchange) throws java.lang.Exception;
    Code:
       0: iconst_0
       1: istore_2
       2: aconst_null
       3: astore_3
       4: aconst_null
       5: astore        4
       7: aload_1
       8: getstatic     #12                 // Field io/undertow/servlet/handlers/ServletRequestContext.ATTACHMENT_KEY:Lio/undertow/util/AttachmentKey;
      11: invokevirtual #13                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      14: checkcast     #14                 // class io/undertow/servlet/handlers/ServletRequestContext
      17: astore        5
      19: aload         5
      21: invokevirtual #15                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalRequest:()Lio/undertow/servlet/spec/HttpServletRequestImpl;
      24: iconst_0
      25: invokevirtual #16                 // Method io/undertow/servlet/spec/HttpServletRequestImpl.getSession:(Z)Ljavax/servlet/http/HttpSession;
      28: ifnonnull     229
      31: aload_1
      32: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
      35: getstatic     #18                 // Field io/undertow/util/Headers.USER_AGENT:Lio/undertow/util/HttpString;
      38: invokevirtual #19                 // Method io/undertow/util/HeaderMap.get:(Lio/undertow/util/HttpString;)Lio/undertow/util/HeaderValues;
      41: invokevirtual #20                 // Method io/undertow/util/HeaderValues.iterator:()Ljava/util/Iterator;
      44: astore        6
      46: aconst_null
      47: astore        7
      49: aload         6
      51: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      56: ifeq          71
      59: aload         6
      61: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #23                 // class java/lang/String
      69: astore        7
      71: aload         7
      73: ifnull        146
      76: aload         6
      78: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      83: ifne          146
      86: aload_0
      87: getfield      #11                 // Field uaPattern:Ljava/util/regex/Pattern;
      90: aload         7
      92: invokevirtual #24                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      95: invokevirtual #25                 // Method java/util/regex/Matcher.matches:()Z
      98: ifeq          146
     101: iconst_1
     102: istore_2
     103: getstatic     #26                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     106: invokeinterface #27,  1           // InterfaceMethod io/undertow/UndertowLogger.isDebugEnabled:()Z
     111: ifeq          146
     114: getstatic     #26                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     117: new           #28                 // class java/lang/StringBuilder
     120: dup
     121: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     124: aload_1
     125: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     128: ldc           #31                 // String : Bot found. UserAgent=
     130: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: aload         7
     135: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: invokeinterface #34,  2           // InterfaceMethod io/undertow/UndertowLogger.debug:(Ljava/lang/Object;)V
     146: iload_2
     147: ifeq          229
     150: aload         5
     152: invokevirtual #35                 // Method io/undertow/servlet/handlers/ServletRequestContext.getServletRequest:()Ljavax/servlet/ServletRequest;
     155: invokeinterface #36,  1           // InterfaceMethod javax/servlet/ServletRequest.getRemoteAddr:()Ljava/lang/String;
     160: astore        4
     162: aload_0
     163: getfield      #4                  // Field clientIpSessionId:Ljava/util/Map;
     166: aload         4
     168: invokeinterface #37,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     173: checkcast     #23                 // class java/lang/String
     176: astore_3
     177: aload_3
     178: ifnull        229
     181: aload         5
     183: aload_3
     184: invokevirtual #38                 // Method io/undertow/servlet/handlers/ServletRequestContext.setOverridenSessionId:(Ljava/lang/String;)V
     187: getstatic     #26                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     190: invokeinterface #27,  1           // InterfaceMethod io/undertow/UndertowLogger.isDebugEnabled:()Z
     195: ifeq          229
     198: getstatic     #26                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     201: new           #28                 // class java/lang/StringBuilder
     204: dup
     205: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     208: aload_1
     209: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     212: ldc           #39                 // String : SessionID=
     214: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     217: aload_3
     218: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     221: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     224: invokeinterface #34,  2           // InterfaceMethod io/undertow/UndertowLogger.debug:(Ljava/lang/Object;)V
     229: iload_2
     230: ifeq          257
     233: aload_3
     234: astore        6
     236: aload         4
     238: astore        7
     240: aload_1
     241: new           #40                 // class io/undertow/servlet/handlers/CrawlerSessionManagerHandler$1
     244: dup
     245: aload_0
     246: aload         6
     248: aload         7
     250: invokespecial #41                 // Method io/undertow/servlet/handlers/CrawlerSessionManagerHandler$1."<init>":(Lio/undertow/servlet/handlers/CrawlerSessionManagerHandler;Ljava/lang/String;Ljava/lang/String;)V
     253: invokevirtual #42                 // Method io/undertow/server/HttpServerExchange.addExchangeCompleteListener:(Lio/undertow/server/ExchangeCompletionListener;)Lio/undertow/server/HttpServerExchange;
     256: pop
     257: aload_0
     258: getfield      #8                  // Field next:Lio/undertow/server/HttpHandler;
     261: aload_1
     262: invokeinterface #43,  2           // InterfaceMethod io/undertow/server/HttpHandler.handleRequest:(Lio/undertow/server/HttpServerExchange;)V
     267: return

  static java.util.Map access$000(io.undertow.servlet.handlers.CrawlerSessionManagerHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field clientIpSessionId:Ljava/util/Map;
       4: areturn

  static java.util.Map access$100(io.undertow.servlet.handlers.CrawlerSessionManagerHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field sessionIdClientIp:Ljava/util/Map;
       4: areturn

  static java.lang.String access$200();
    Code:
       0: getstatic     #2                  // Field SESSION_ATTRIBUTE_NAME:Ljava/lang/String;
       3: areturn

  static io.undertow.servlet.api.CrawlerSessionManagerConfig access$300(io.undertow.servlet.handlers.CrawlerSessionManagerHandler);
    Code:
       0: aload_0
       1: getfield      #1                  // Field config:Lio/undertow/servlet/api/CrawlerSessionManagerConfig;
       4: areturn

  static {};
    Code:
       0: new           #28                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #44                 // String listener_
       9: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: ldc           #45                 // class io/undertow/servlet/handlers/CrawlerSessionManagerHandler
      14: invokevirtual #46                 // Method java/lang/Class.getName:()Ljava/lang/String;
      17: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: putstatic     #2                  // Field SESSION_ATTRIBUTE_NAME:Ljava/lang/String;
      26: return
}
