Compiled from "ServletOutputStreamImpl.java"
public class io.undertow.servlet.spec.ServletOutputStreamImpl extends javax.servlet.ServletOutputStream implements io.undertow.io.BufferWritableOutputStream {
  private final io.undertow.servlet.handlers.ServletRequestContext servletRequestContext;

  private io.undertow.connector.PooledByteBuffer pooledBuffer;

  private java.nio.ByteBuffer buffer;

  private java.lang.Integer bufferSize;

  private org.xnio.channels.StreamSinkChannel channel;

  private long written;

  private int state;

  private io.undertow.servlet.spec.AsyncContextImpl asyncContext;

  private javax.servlet.WriteListener listener;

  private io.undertow.servlet.spec.ServletOutputStreamImpl$WriteChannelListener internalListener;

  private java.nio.ByteBuffer[] buffersToWrite;

  private java.nio.channels.FileChannel pendingFile;

  private static final int FLAG_CLOSED;

  private static final int FLAG_WRITE_STARTED;

  private static final int FLAG_READY;

  private static final int FLAG_DELEGATE_SHUTDOWN;

  private static final int FLAG_IN_CALLBACK;

  private static final int MAX_BUFFERS_TO_ALLOCATE;

  private io.undertow.servlet.core.CompositeThreadSetupAction threadSetupAction;

  public io.undertow.servlet.spec.ServletOutputStreamImpl(io.undertow.servlet.handlers.ServletRequestContext);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method javax/servlet/ServletOutputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #13                 // Method io/undertow/servlet/handlers/ServletRequestContext.getDeployment:()Lio/undertow/servlet/api/Deployment;
       9: invokeinterface #14,  1           // InterfaceMethod io/undertow/servlet/api/Deployment.getThreadSetupAction:()Lio/undertow/servlet/core/CompositeThreadSetupAction;
      14: putfield      #2                  // Field threadSetupAction:Lio/undertow/servlet/core/CompositeThreadSetupAction;
      17: aload_0
      18: aload_1
      19: putfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      22: return

  public io.undertow.servlet.spec.ServletOutputStreamImpl(io.undertow.servlet.handlers.ServletRequestContext, int);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method javax/servlet/ServletOutputStream."<init>":()V
       4: aload_0
       5: iload_2
       6: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       9: putfield      #16                 // Field bufferSize:Ljava/lang/Integer;
      12: aload_0
      13: aload_1
      14: putfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      17: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: newarray       byte
       4: dup
       5: iconst_0
       6: iload_1
       7: i2b
       8: bastore
       9: iconst_0
      10: iconst_1
      11: invokevirtual #17                 // Method write:([BII)V
      14: return

  public void write(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #17                 // Method write:([BII)V
       8: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field state:I
       4: iconst_1
       5: invokestatic  #19                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifne          24
      11: aload_0
      12: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      15: invokevirtual #20                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      18: invokevirtual #21                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.isTreatAsCommitted:()Z
      21: ifeq          33
      24: getstatic     #22                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      27: invokeinterface #23,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.streamIsClosed:()Ljava/io/IOException;
      32: athrow
      33: iload_3
      34: iconst_1
      35: if_icmpge     39
      38: return
      39: aload_0
      40: getfield      #1                  // Field listener:Ljavax/servlet/WriteListener;
      43: ifnonnull     567
      46: aload_0
      47: invokespecial #24                 // Method buffer:()Ljava/nio/ByteBuffer;
      50: astore        4
      52: aload         4
      54: invokevirtual #25                 // Method java/nio/ByteBuffer.remaining:()I
      57: iload_3
      58: if_icmpge     536
      61: aload_0
      62: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      65: astore        5
      67: aload         5
      69: ifnonnull     89
      72: aload_0
      73: aload_0
      74: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      77: invokevirtual #26                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
      80: invokevirtual #27                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
      83: dup
      84: astore        5
      86: putfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      89: aload_0
      90: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      93: invokevirtual #26                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
      96: invokevirtual #28                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      99: invokevirtual #29                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
     102: astore        6
     104: bipush        7
     106: anewarray     #30                 // class java/nio/ByteBuffer
     109: astore        7
     111: bipush        6
     113: anewarray     #31                 // class io/undertow/connector/PooledByteBuffer
     116: astore        8
     118: aload         7
     120: iconst_0
     121: aload         4
     123: aastore
     124: iconst_0
     125: istore        9
     127: aload         4
     129: invokevirtual #25                 // Method java/nio/ByteBuffer.remaining:()I
     132: istore        10
     134: aload         4
     136: aload_1
     137: iload         9
     139: iload_2
     140: iadd
     141: iload         10
     143: invokevirtual #32                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     146: pop
     147: aload         4
     149: invokevirtual #33                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     152: pop
     153: iload         9
     155: iload         10
     157: iadd
     158: istore        9
     160: iconst_1
     161: istore        11
     163: iconst_0
     164: istore        12
     166: iload         12
     168: bipush        6
     170: if_icmpge     298
     173: aload         6
     175: invokeinterface #34,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
     180: astore        13
     182: aload         8
     184: iload         11
     186: iconst_1
     187: isub
     188: aload         13
     190: aastore
     191: aload         7
     193: iload         11
     195: iinc          11, 1
     198: aload         13
     200: invokeinterface #35,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     205: aastore
     206: aload         13
     208: invokeinterface #35,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
     213: astore        14
     215: iload_3
     216: iload         9
     218: isub
     219: istore        15
     221: iload         15
     223: aload         14
     225: invokevirtual #25                 // Method java/nio/ByteBuffer.remaining:()I
     228: if_icmple     267
     231: aload         14
     233: invokevirtual #25                 // Method java/nio/ByteBuffer.remaining:()I
     236: istore        10
     238: aload         14
     240: aload_1
     241: iload         9
     243: iload_2
     244: iadd
     245: iload         10
     247: invokevirtual #32                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     250: pop
     251: aload         14
     253: invokevirtual #33                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     256: pop
     257: iload         9
     259: iload         10
     261: iadd
     262: istore        9
     264: goto          292
     267: aload         14
     269: aload_1
     270: iload         9
     272: iload_2
     273: iadd
     274: iload         15
     276: invokevirtual #32                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     279: pop
     280: iload_3
     281: istore        9
     283: aload         14
     285: invokevirtual #33                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     288: pop
     289: goto          298
     292: iinc          12, 1
     295: goto          166
     298: aload         5
     300: aload         7
     302: iconst_0
     303: iload         11
     305: invokestatic  #36                 // Method org/xnio/channels/Channels.writeBlocking:(Ljava/nio/channels/GatheringByteChannel;[Ljava/nio/ByteBuffer;II)J
     308: pop2
     309: iload         9
     311: iload_3
     312: if_icmpge     441
     315: iconst_0
     316: istore        11
     318: iconst_0
     319: istore        12
     321: iload         12
     323: bipush        7
     325: if_icmpge     427
     328: aload         7
     330: iload         12
     332: aaload
     333: astore        13
     335: aload         13
     337: invokevirtual #37                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     340: pop
     341: iinc          11, 1
     344: iload_3
     345: iload         9
     347: isub
     348: istore        14
     350: iload         14
     352: aload         13
     354: invokevirtual #25                 // Method java/nio/ByteBuffer.remaining:()I
     357: if_icmple     396
     360: aload         13
     362: invokevirtual #25                 // Method java/nio/ByteBuffer.remaining:()I
     365: istore        10
     367: aload         13
     369: aload_1
     370: iload         9
     372: iload_2
     373: iadd
     374: iload         10
     376: invokevirtual #32                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     379: pop
     380: aload         13
     382: invokevirtual #33                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     385: pop
     386: iload         9
     388: iload         10
     390: iadd
     391: istore        9
     393: goto          421
     396: aload         13
     398: aload_1
     399: iload         9
     401: iload_2
     402: iadd
     403: iload         14
     405: invokevirtual #32                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     408: pop
     409: iload_3
     410: istore        9
     412: aload         13
     414: invokevirtual #33                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     417: pop
     418: goto          427
     421: iinc          12, 1
     424: goto          321
     427: aload         5
     429: aload         7
     431: iconst_0
     432: iload         11
     434: invokestatic  #36                 // Method org/xnio/channels/Channels.writeBlocking:(Ljava/nio/channels/GatheringByteChannel;[Ljava/nio/ByteBuffer;II)J
     437: pop2
     438: goto          309
     441: aload         4
     443: invokevirtual #37                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     446: pop
     447: iconst_0
     448: istore        9
     450: iload         9
     452: aload         8
     454: arraylength
     455: if_icmpge     486
     458: aload         8
     460: iload         9
     462: aaload
     463: astore        10
     465: aload         10
     467: ifnonnull     473
     470: goto          486
     473: aload         10
     475: invokeinterface #38,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     480: iinc          9, 1
     483: goto          450
     486: goto          533
     489: astore        16
     491: iconst_0
     492: istore        17
     494: iload         17
     496: aload         8
     498: arraylength
     499: if_icmpge     530
     502: aload         8
     504: iload         17
     506: aaload
     507: astore        18
     509: aload         18
     511: ifnonnull     517
     514: goto          530
     517: aload         18
     519: invokeinterface #38,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     524: iinc          17, 1
     527: goto          494
     530: aload         16
     532: athrow
     533: goto          558
     536: aload         4
     538: aload_1
     539: iload_2
     540: iload_3
     541: invokevirtual #32                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     544: pop
     545: aload         4
     547: invokevirtual #25                 // Method java/nio/ByteBuffer.remaining:()I
     550: ifne          558
     553: aload_0
     554: iconst_0
     555: invokespecial #39                 // Method writeBufferBlocking:(Z)V
     558: aload_0
     559: iload_3
     560: i2l
     561: invokevirtual #40                 // Method updateWritten:(J)V
     564: goto          798
     567: aload_0
     568: getfield      #8                  // Field state:I
     571: iconst_4
     572: invokestatic  #41                 // Method org/xnio/Bits.anyAreClear:(II)Z
     575: ifeq          587
     578: getstatic     #22                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
     581: invokeinterface #42,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.streamNotReady:()Ljava/lang/IllegalStateException;
     586: athrow
     587: aload_0
     588: invokespecial #24                 // Method buffer:()Ljava/nio/ByteBuffer;
     591: astore        4
     593: aload         4
     595: invokevirtual #25                 // Method java/nio/ByteBuffer.remaining:()I
     598: iload_3
     599: if_icmple     614
     602: aload         4
     604: aload_1
     605: iload_2
     606: iload_3
     607: invokevirtual #32                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     610: pop
     611: goto          778
     614: aload         4
     616: invokevirtual #33                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     619: pop
     620: aload_1
     621: iload_2
     622: iload_3
     623: invokestatic  #43                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
     626: astore        5
     628: iconst_2
     629: anewarray     #30                 // class java/nio/ByteBuffer
     632: dup
     633: iconst_0
     634: aload         4
     636: aastore
     637: dup
     638: iconst_1
     639: aload         5
     641: aastore
     642: astore        6
     644: aload         6
     646: invokestatic  #44                 // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
     649: lstore        7
     651: lconst_0
     652: lstore        11
     654: aload_0
     655: invokespecial #45                 // Method createChannel:()V
     658: aload_0
     659: dup
     660: getfield      #8                  // Field state:I
     663: iconst_2
     664: ior
     665: putfield      #8                  // Field state:I
     668: aload_0
     669: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     672: aload         6
     674: invokeinterface #46,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:([Ljava/nio/ByteBuffer;)J
     679: lstore        9
     681: lload         11
     683: lload         9
     685: ladd
     686: lstore        11
     688: lload         9
     690: lconst_0
     691: lcmp
     692: ifne          764
     695: aload         5
     697: invokevirtual #25                 // Method java/nio/ByteBuffer.remaining:()I
     700: invokestatic  #47                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     703: astore        13
     705: aload         13
     707: aload         5
     709: invokevirtual #48                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     712: pop
     713: aload         13
     715: invokevirtual #33                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     718: pop
     719: aload_0
     720: iconst_2
     721: anewarray     #30                 // class java/nio/ByteBuffer
     724: dup
     725: iconst_0
     726: aload         4
     728: aastore
     729: dup
     730: iconst_1
     731: aload         13
     733: aastore
     734: putfield      #7                  // Field buffersToWrite:[Ljava/nio/ByteBuffer;
     737: aload_0
     738: dup
     739: getfield      #8                  // Field state:I
     742: bipush        -5
     744: iand
     745: putfield      #8                  // Field state:I
     748: aload_0
     749: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     752: invokeinterface #49,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
     757: aload_0
     758: iload_3
     759: i2l
     760: invokevirtual #50                 // Method updateWrittenAsync:(J)V
     763: return
     764: lload         11
     766: lload         7
     768: lcmp
     769: iflt          668
     772: aload         4
     774: invokevirtual #37                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     777: pop
     778: aload_0
     779: iload_3
     780: i2l
     781: invokevirtual #50                 // Method updateWrittenAsync:(J)V
     784: goto          798
     787: astore        19
     789: aload_0
     790: iload_3
     791: i2l
     792: invokevirtual #50                 // Method updateWrittenAsync:(J)V
     795: aload         19
     797: athrow
     798: return
    Exception table:
       from    to  target type
         118   447   489   any
         489   491   489   any
         587   757   787   any
         764   778   787   any
         787   789   787   any

  public void write(java.nio.ByteBuffer[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field state:I
       4: iconst_1
       5: invokestatic  #19                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifne          24
      11: aload_0
      12: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      15: invokevirtual #20                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      18: invokevirtual #21                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.isTreatAsCommitted:()Z
      21: ifeq          33
      24: getstatic     #22                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      27: invokeinterface #23,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.streamIsClosed:()Ljava/io/IOException;
      32: athrow
      33: iconst_0
      34: istore_2
      35: aload_1
      36: astore_3
      37: aload_3
      38: arraylength
      39: istore        4
      41: iconst_0
      42: istore        5
      44: iload         5
      46: iload         4
      48: if_icmpge     71
      51: aload_3
      52: iload         5
      54: aaload
      55: astore        6
      57: iload_2
      58: aload         6
      60: invokevirtual #25                 // Method java/nio/ByteBuffer.remaining:()I
      63: iadd
      64: istore_2
      65: iinc          5, 1
      68: goto          44
      71: iload_2
      72: iconst_1
      73: if_icmpge     77
      76: return
      77: aload_0
      78: getfield      #1                  // Field listener:Ljavax/servlet/WriteListener;
      81: ifnonnull     290
      84: aload_0
      85: getfield      #51                 // Field written:J
      88: lconst_0
      89: lcmp
      90: ifne          155
      93: iload_2
      94: i2l
      95: aload_0
      96: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      99: invokevirtual #20                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
     102: invokevirtual #52                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.getContentLength:()J
     105: lcmp
     106: ifne          155
     109: aload_0
     110: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     113: ifnonnull     130
     116: aload_0
     117: aload_0
     118: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     121: invokevirtual #26                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
     124: invokevirtual #27                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
     127: putfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     130: aload_0
     131: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     134: aload_1
     135: iconst_0
     136: aload_1
     137: arraylength
     138: invokestatic  #36                 // Method org/xnio/channels/Channels.writeBlocking:(Ljava/nio/channels/GatheringByteChannel;[Ljava/nio/ByteBuffer;II)J
     141: pop2
     142: aload_0
     143: dup
     144: getfield      #8                  // Field state:I
     147: iconst_2
     148: ior
     149: putfield      #8                  // Field state:I
     152: goto          281
     155: aload_0
     156: invokespecial #24                 // Method buffer:()Ljava/nio/ByteBuffer;
     159: astore_3
     160: iload_2
     161: aload_3
     162: invokevirtual #25                 // Method java/nio/ByteBuffer.remaining:()I
     165: if_icmpge     180
     168: aload_3
     169: aload_1
     170: iconst_0
     171: aload_1
     172: arraylength
     173: invokestatic  #53                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)I
     176: pop
     177: goto          281
     180: aload_0
     181: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     184: ifnonnull     201
     187: aload_0
     188: aload_0
     189: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     192: invokevirtual #26                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
     195: invokevirtual #27                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
     198: putfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     201: aload_3
     202: invokevirtual #54                 // Method java/nio/ByteBuffer.position:()I
     205: ifne          223
     208: aload_0
     209: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     212: aload_1
     213: iconst_0
     214: aload_1
     215: arraylength
     216: invokestatic  #36                 // Method org/xnio/channels/Channels.writeBlocking:(Ljava/nio/channels/GatheringByteChannel;[Ljava/nio/ByteBuffer;II)J
     219: pop2
     220: goto          271
     223: aload_1
     224: arraylength
     225: iconst_1
     226: iadd
     227: anewarray     #30                 // class java/nio/ByteBuffer
     230: astore        4
     232: aload_3
     233: invokevirtual #33                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     236: pop
     237: aload         4
     239: iconst_0
     240: aload_3
     241: aastore
     242: aload_1
     243: iconst_0
     244: aload         4
     246: iconst_1
     247: aload_1
     248: arraylength
     249: invokestatic  #55                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     252: aload_0
     253: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     256: aload         4
     258: iconst_0
     259: aload         4
     261: arraylength
     262: invokestatic  #36                 // Method org/xnio/channels/Channels.writeBlocking:(Ljava/nio/channels/GatheringByteChannel;[Ljava/nio/ByteBuffer;II)J
     265: pop2
     266: aload_3
     267: invokevirtual #37                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     270: pop
     271: aload_0
     272: dup
     273: getfield      #8                  // Field state:I
     276: iconst_2
     277: ior
     278: putfield      #8                  // Field state:I
     281: aload_0
     282: iload_2
     283: i2l
     284: invokevirtual #40                 // Method updateWritten:(J)V
     287: goto          518
     290: aload_0
     291: getfield      #8                  // Field state:I
     294: iconst_4
     295: invokestatic  #41                 // Method org/xnio/Bits.anyAreClear:(II)Z
     298: ifeq          310
     301: getstatic     #22                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
     304: invokeinterface #42,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.streamNotReady:()Ljava/lang/IllegalStateException;
     309: athrow
     310: aload_0
     311: invokespecial #24                 // Method buffer:()Ljava/nio/ByteBuffer;
     314: astore_3
     315: aload_3
     316: invokevirtual #25                 // Method java/nio/ByteBuffer.remaining:()I
     319: iload_2
     320: if_icmple     335
     323: aload_3
     324: aload_1
     325: iconst_0
     326: aload_1
     327: arraylength
     328: invokestatic  #53                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)I
     331: pop
     332: goto          498
     335: aload_1
     336: arraylength
     337: iconst_1
     338: iadd
     339: anewarray     #30                 // class java/nio/ByteBuffer
     342: astore        4
     344: aload_3
     345: invokevirtual #33                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     348: pop
     349: aload         4
     351: iconst_0
     352: aload_3
     353: aastore
     354: aload_1
     355: iconst_0
     356: aload         4
     358: iconst_1
     359: aload_1
     360: arraylength
     361: invokestatic  #55                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     364: aload         4
     366: invokestatic  #44                 // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
     369: lstore        5
     371: lconst_0
     372: lstore        9
     374: aload_0
     375: invokespecial #45                 // Method createChannel:()V
     378: aload_0
     379: dup
     380: getfield      #8                  // Field state:I
     383: iconst_2
     384: ior
     385: putfield      #8                  // Field state:I
     388: aload_0
     389: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     392: aload         4
     394: invokeinterface #46,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:([Ljava/nio/ByteBuffer;)J
     399: lstore        7
     401: lload         9
     403: lload         7
     405: ladd
     406: lstore        9
     408: lload         7
     410: lconst_0
     411: lcmp
     412: ifne          485
     415: aload_1
     416: invokestatic  #44                 // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
     419: l2i
     420: invokestatic  #47                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     423: astore        11
     425: aload         11
     427: aload_1
     428: iconst_0
     429: aload_1
     430: arraylength
     431: invokestatic  #53                 // Method org/xnio/Buffers.copy:(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)I
     434: pop
     435: aload         11
     437: invokevirtual #33                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     440: pop
     441: aload_0
     442: iconst_2
     443: anewarray     #30                 // class java/nio/ByteBuffer
     446: dup
     447: iconst_0
     448: aload_3
     449: aastore
     450: dup
     451: iconst_1
     452: aload         11
     454: aastore
     455: putfield      #7                  // Field buffersToWrite:[Ljava/nio/ByteBuffer;
     458: aload_0
     459: dup
     460: getfield      #8                  // Field state:I
     463: bipush        -5
     465: iand
     466: putfield      #8                  // Field state:I
     469: aload_0
     470: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     473: invokeinterface #49,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
     478: aload_0
     479: iload_2
     480: i2l
     481: invokevirtual #50                 // Method updateWrittenAsync:(J)V
     484: return
     485: lload         9
     487: lload         5
     489: lcmp
     490: iflt          388
     493: aload_3
     494: invokevirtual #37                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     497: pop
     498: aload_0
     499: iload_2
     500: i2l
     501: invokevirtual #50                 // Method updateWrittenAsync:(J)V
     504: goto          518
     507: astore        12
     509: aload_0
     510: iload_2
     511: i2l
     512: invokevirtual #50                 // Method updateWrittenAsync:(J)V
     515: aload         12
     517: athrow
     518: return
    Exception table:
       from    to  target type
         310   478   507   any
         485   498   507   any
         507   509   507   any

  public void write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: anewarray     #30                 // class java/nio/ByteBuffer
       5: dup
       6: iconst_0
       7: aload_1
       8: aastore
       9: invokevirtual #56                 // Method write:([Ljava/nio/ByteBuffer;)V
      12: return

  void updateWritten(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #51                 // Field written:J
       5: lload_1
       6: ladd
       7: putfield      #51                 // Field written:J
      10: aload_0
      11: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      14: invokevirtual #20                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      17: invokevirtual #52                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.getContentLength:()J
      20: lstore_3
      21: lload_3
      22: ldc2_w        #57                 // long -1l
      25: lcmp
      26: ifeq          42
      29: aload_0
      30: getfield      #51                 // Field written:J
      33: lload_3
      34: lcmp
      35: iflt          42
      38: aload_0
      39: invokevirtual #59                 // Method close:()V
      42: return

  void updateWrittenAsync(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #51                 // Field written:J
       5: lload_1
       6: ladd
       7: putfield      #51                 // Field written:J
      10: aload_0
      11: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      14: invokevirtual #20                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      17: invokevirtual #52                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.getContentLength:()J
      20: lstore_3
      21: lload_3
      22: ldc2_w        #57                 // long -1l
      25: lcmp
      26: ifeq          126
      29: aload_0
      30: getfield      #51                 // Field written:J
      33: lload_3
      34: lcmp
      35: iflt          126
      38: aload_0
      39: dup
      40: getfield      #8                  // Field state:I
      43: iconst_1
      44: ior
      45: putfield      #8                  // Field state:I
      48: aload_0
      49: getfield      #7                  // Field buffersToWrite:[Ljava/nio/ByteBuffer;
      52: ifnonnull     126
      55: aload_0
      56: getfield      #5                  // Field pendingFile:Ljava/nio/channels/FileChannel;
      59: ifnonnull     126
      62: aload_0
      63: iconst_1
      64: invokespecial #60                 // Method flushBufferAsync:(Z)Z
      67: ifeq          126
      70: aload_0
      71: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      74: invokeinterface #61,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.shutdownWrites:()V
      79: aload_0
      80: dup
      81: getfield      #8                  // Field state:I
      84: bipush        8
      86: ior
      87: putfield      #8                  // Field state:I
      90: aload_0
      91: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      94: invokeinterface #62,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.flush:()Z
      99: pop
     100: aload_0
     101: getfield      #4                  // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     104: ifnull        126
     107: aload_0
     108: getfield      #4                  // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     111: invokeinterface #38,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     116: aload_0
     117: aconst_null
     118: putfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
     121: aload_0
     122: aconst_null
     123: putfield      #4                  // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     126: return

  private boolean flushBufferAsync(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field buffersToWrite:[Ljava/nio/ByteBuffer;
       4: astore_2
       5: aload_2
       6: ifnonnull     41
       9: aload_0
      10: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      13: astore_3
      14: aload_3
      15: ifnull        25
      18: aload_3
      19: invokevirtual #54                 // Method java/nio/ByteBuffer.position:()I
      22: ifne          27
      25: iconst_1
      26: ireturn
      27: aload_3
      28: invokevirtual #33                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      31: pop
      32: iconst_1
      33: anewarray     #30                 // class java/nio/ByteBuffer
      36: dup
      37: iconst_0
      38: aload_3
      39: aastore
      40: astore_2
      41: aload_2
      42: invokestatic  #44                 // Method org/xnio/Buffers.remaining:([Ljava/nio/Buffer;)J
      45: lstore_3
      46: lload_3
      47: lconst_0
      48: lcmp
      49: ifne          62
      52: aload_0
      53: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      56: invokevirtual #37                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      59: pop
      60: iconst_1
      61: ireturn
      62: aload_0
      63: dup
      64: getfield      #8                  // Field state:I
      67: iconst_2
      68: ior
      69: putfield      #8                  // Field state:I
      72: aload_0
      73: invokespecial #45                 // Method createChannel:()V
      76: lconst_0
      77: lstore        7
      79: iload_1
      80: ifeq          98
      83: aload_0
      84: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      87: aload_2
      88: invokeinterface #63,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.writeFinal:([Ljava/nio/ByteBuffer;)J
      93: lstore        5
      95: goto          110
      98: aload_0
      99: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     102: aload_2
     103: invokeinterface #46,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:([Ljava/nio/ByteBuffer;)J
     108: lstore        5
     110: lload         7
     112: lload         5
     114: ladd
     115: lstore        7
     117: lload         5
     119: lconst_0
     120: lcmp
     121: ifne          151
     124: aload_0
     125: aload_0
     126: getfield      #8                  // Field state:I
     129: bipush        -5
     131: iand
     132: putfield      #8                  // Field state:I
     135: aload_0
     136: aload_2
     137: putfield      #7                  // Field buffersToWrite:[Ljava/nio/ByteBuffer;
     140: aload_0
     141: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     144: invokeinterface #49,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
     149: iconst_0
     150: ireturn
     151: lload         7
     153: lload_3
     154: lcmp
     155: iflt          79
     158: aload_0
     159: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
     162: invokevirtual #37                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     165: pop
     166: iconst_1
     167: ireturn

  java.nio.ByteBuffer underlyingBuffer();
    Code:
       0: aload_0
       1: getfield      #8                  // Field state:I
       4: iconst_1
       5: invokestatic  #19                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifeq          13
      11: aconst_null
      12: areturn
      13: aload_0
      14: invokespecial #24                 // Method buffer:()Ljava/nio/ByteBuffer;
      17: areturn

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
       4: invokevirtual #64                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalRequest:()Lio/undertow/servlet/spec/HttpServletRequestImpl;
       7: invokevirtual #65                 // Method io/undertow/servlet/spec/HttpServletRequestImpl.getDispatcherType:()Ljavax/servlet/DispatcherType;
      10: getstatic     #66                 // Field javax/servlet/DispatcherType.INCLUDE:Ljavax/servlet/DispatcherType;
      13: if_acmpeq     29
      16: aload_0
      17: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      20: invokevirtual #20                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      23: invokevirtual #21                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.isTreatAsCommitted:()Z
      26: ifeq          30
      29: return
      30: aload_0
      31: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      34: invokevirtual #13                 // Method io/undertow/servlet/handlers/ServletRequestContext.getDeployment:()Lio/undertow/servlet/api/Deployment;
      37: invokeinterface #67,  1           // InterfaceMethod io/undertow/servlet/api/Deployment.getDeploymentInfo:()Lio/undertow/servlet/api/DeploymentInfo;
      42: invokevirtual #68                 // Method io/undertow/servlet/api/DeploymentInfo.isIgnoreFlush:()Z
      45: ifeq          88
      48: aload_0
      49: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      52: invokevirtual #26                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
      55: invokevirtual #69                 // Method io/undertow/server/HttpServerExchange.isRequestComplete:()Z
      58: ifeq          88
      61: aload_0
      62: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      65: invokevirtual #20                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      68: ldc           #71                 // String Transfer-Encoding
      70: invokevirtual #72                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      73: ifnonnull     88
      76: aload_0
      77: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      80: invokevirtual #20                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      83: iconst_1
      84: invokevirtual #73                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.setIgnoredFlushPerformed:(Z)V
      87: return
      88: aload_0
      89: invokevirtual #74                 // Method flushInternal:()V
      92: return

  public void flushInternal() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field listener:Ljavax/servlet/WriteListener;
       4: ifnonnull     72
       7: aload_0
       8: getfield      #8                  // Field state:I
      11: iconst_1
      12: invokestatic  #19                 // Method org/xnio/Bits.anyAreSet:(II)Z
      15: ifeq          19
      18: return
      19: aload_0
      20: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      23: ifnull        41
      26: aload_0
      27: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      30: invokevirtual #54                 // Method java/nio/ByteBuffer.position:()I
      33: ifeq          41
      36: aload_0
      37: iconst_0
      38: invokespecial #39                 // Method writeBufferBlocking:(Z)V
      41: aload_0
      42: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      45: ifnonnull     62
      48: aload_0
      49: aload_0
      50: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      53: invokevirtual #26                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
      56: invokevirtual #27                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
      59: putfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      62: aload_0
      63: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      66: invokestatic  #75                 // Method org/xnio/channels/Channels.flushBlocking:(Lorg/xnio/channels/SuspendableWriteChannel;)V
      69: goto          193
      72: aload_0
      73: getfield      #8                  // Field state:I
      76: iconst_4
      77: invokestatic  #41                 // Method org/xnio/Bits.anyAreClear:(II)Z
      80: ifeq          84
      83: return
      84: aload_0
      85: invokespecial #45                 // Method createChannel:()V
      88: aload_0
      89: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      92: ifnull        105
      95: aload_0
      96: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      99: invokevirtual #54                 // Method java/nio/ByteBuffer.position:()I
     102: ifne          116
     105: aload_0
     106: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     109: invokeinterface #62,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.flush:()Z
     114: pop
     115: return
     116: aload_0
     117: dup
     118: getfield      #8                  // Field state:I
     121: iconst_2
     122: ior
     123: putfield      #8                  // Field state:I
     126: aload_0
     127: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
     130: invokevirtual #33                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     133: pop
     134: aload_0
     135: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     138: aload_0
     139: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
     142: invokeinterface #76,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
     147: i2l
     148: lstore_1
     149: aload_0
     150: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
     153: invokevirtual #77                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     156: ifeq          165
     159: lload_1
     160: lconst_0
     161: lcmp
     162: ifne          134
     165: aload_0
     166: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
     169: invokevirtual #77                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     172: ifne          185
     175: aload_0
     176: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     179: invokeinterface #62,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.flush:()Z
     184: pop
     185: aload_0
     186: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
     189: invokevirtual #78                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     192: pop
     193: return

  public void transferFrom(java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field state:I
       4: iconst_1
       5: invokestatic  #19                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifne          24
      11: aload_0
      12: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      15: invokevirtual #20                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      18: invokevirtual #21                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.isTreatAsCommitted:()Z
      21: ifeq          33
      24: getstatic     #22                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      27: invokeinterface #23,  1           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.streamIsClosed:()Ljava/io/IOException;
      32: athrow
      33: aload_0
      34: getfield      #1                  // Field listener:Ljavax/servlet/WriteListener;
      37: ifnonnull     116
      40: aload_0
      41: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      44: ifnull        62
      47: aload_0
      48: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      51: invokevirtual #54                 // Method java/nio/ByteBuffer.position:()I
      54: ifeq          62
      57: aload_0
      58: iconst_0
      59: invokespecial #39                 // Method writeBufferBlocking:(Z)V
      62: aload_0
      63: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      66: ifnonnull     83
      69: aload_0
      70: aload_0
      71: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      74: invokevirtual #26                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
      77: invokevirtual #27                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
      80: putfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      83: aload_1
      84: invokevirtual #79                 // Method java/nio/channels/FileChannel.position:()J
      87: lstore_2
      88: aload_1
      89: invokevirtual #80                 // Method java/nio/channels/FileChannel.size:()J
      92: lload_2
      93: lsub
      94: lstore        4
      96: aload_0
      97: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     100: aload_1
     101: lload_2
     102: lload         4
     104: invokestatic  #81                 // Method org/xnio/channels/Channels.transferBlocking:(Lorg/xnio/channels/StreamSinkChannel;Ljava/nio/channels/FileChannel;JJ)V
     107: aload_0
     108: lload         4
     110: invokevirtual #40                 // Method updateWritten:(J)V
     113: goto          257
     116: aload_0
     117: dup
     118: getfield      #8                  // Field state:I
     121: iconst_2
     122: ior
     123: putfield      #8                  // Field state:I
     126: aload_0
     127: invokespecial #45                 // Method createChannel:()V
     130: lconst_0
     131: lstore_2
     132: aload_1
     133: invokevirtual #80                 // Method java/nio/channels/FileChannel.size:()J
     136: lstore        4
     138: aload_1
     139: invokevirtual #79                 // Method java/nio/channels/FileChannel.position:()J
     142: lstore_2
     143: lload         4
     145: lload_2
     146: lsub
     147: lconst_0
     148: lcmp
     149: ifle          229
     152: aload_0
     153: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     156: aload_0
     157: getfield      #5                  // Field pendingFile:Ljava/nio/channels/FileChannel;
     160: lload_2
     161: lload         4
     163: lload_2
     164: lsub
     165: invokeinterface #82,  6           // InterfaceMethod org/xnio/channels/StreamSinkChannel.transferFrom:(Ljava/nio/channels/FileChannel;JJ)J
     170: lstore        6
     172: lload         6
     174: lconst_0
     175: lcmp
     176: ifgt          221
     179: aload_0
     180: dup
     181: getfield      #8                  // Field state:I
     184: bipush        -5
     186: iand
     187: putfield      #8                  // Field state:I
     190: aload_0
     191: aload_1
     192: putfield      #5                  // Field pendingFile:Ljava/nio/channels/FileChannel;
     195: aload_1
     196: lload_2
     197: invokevirtual #83                 // Method java/nio/channels/FileChannel.position:(J)Ljava/nio/channels/FileChannel;
     200: pop
     201: aload_0
     202: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     205: invokeinterface #49,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
     210: aload_0
     211: lload_2
     212: aload_1
     213: invokevirtual #79                 // Method java/nio/channels/FileChannel.position:()J
     216: lsub
     217: invokevirtual #50                 // Method updateWrittenAsync:(J)V
     220: return
     221: lload_2
     222: lload         6
     224: ladd
     225: lstore_2
     226: goto          143
     229: aload_0
     230: lload_2
     231: aload_1
     232: invokevirtual #79                 // Method java/nio/channels/FileChannel.position:()J
     235: lsub
     236: invokevirtual #50                 // Method updateWrittenAsync:(J)V
     239: goto          257
     242: astore        8
     244: aload_0
     245: lload_2
     246: aload_1
     247: invokevirtual #79                 // Method java/nio/channels/FileChannel.position:()J
     250: lsub
     251: invokevirtual #50                 // Method updateWrittenAsync:(J)V
     254: aload         8
     256: athrow
     257: return
    Exception table:
       from    to  target type
         132   210   242   any
         221   229   242   any
         242   244   242   any

  private void writeBufferBlocking(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
       4: ifnonnull     21
       7: aload_0
       8: aload_0
       9: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      12: invokevirtual #26                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
      15: invokevirtual #27                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
      18: putfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      21: aload_0
      22: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      25: invokevirtual #33                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      28: pop
      29: aload_0
      30: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      33: invokevirtual #77                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      36: ifeq          96
      39: iload_1
      40: ifeq          60
      43: aload_0
      44: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      47: aload_0
      48: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      51: invokeinterface #84,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.writeFinal:(Ljava/nio/ByteBuffer;)I
      56: pop
      57: goto          74
      60: aload_0
      61: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      64: aload_0
      65: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      68: invokeinterface #76,  2           // InterfaceMethod org/xnio/channels/StreamSinkChannel.write:(Ljava/nio/ByteBuffer;)I
      73: pop
      74: aload_0
      75: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      78: invokevirtual #77                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      81: ifeq          29
      84: aload_0
      85: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      88: invokeinterface #85,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.awaitWritable:()V
      93: goto          29
      96: aload_0
      97: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
     100: invokevirtual #37                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     103: pop
     104: aload_0
     105: dup
     106: getfield      #8                  // Field state:I
     109: iconst_2
     110: ior
     111: putfield      #8                  // Field state:I
     114: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
       4: invokevirtual #64                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalRequest:()Lio/undertow/servlet/spec/HttpServletRequestImpl;
       7: invokevirtual #65                 // Method io/undertow/servlet/spec/HttpServletRequestImpl.getDispatcherType:()Ljavax/servlet/DispatcherType;
      10: getstatic     #66                 // Field javax/servlet/DispatcherType.INCLUDE:Ljavax/servlet/DispatcherType;
      13: if_acmpeq     29
      16: aload_0
      17: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      20: invokevirtual #20                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      23: invokevirtual #21                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.isTreatAsCommitted:()Z
      26: ifeq          30
      29: return
      30: aload_0
      31: getfield      #1                  // Field listener:Ljavax/servlet/WriteListener;
      34: ifnonnull     314
      37: aload_0
      38: getfield      #8                  // Field state:I
      41: iconst_1
      42: invokestatic  #19                 // Method org/xnio/Bits.anyAreSet:(II)Z
      45: ifeq          49
      48: return
      49: aload_0
      50: dup
      51: getfield      #8                  // Field state:I
      54: iconst_1
      55: ior
      56: putfield      #8                  // Field state:I
      59: aload_0
      60: dup
      61: getfield      #8                  // Field state:I
      64: bipush        -5
      66: iand
      67: putfield      #8                  // Field state:I
      70: aload_0
      71: getfield      #8                  // Field state:I
      74: iconst_2
      75: invokestatic  #86                 // Method org/xnio/Bits.allAreClear:(II)Z
      78: ifeq          174
      81: aload_0
      82: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      85: ifnonnull     174
      88: aload_0
      89: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      92: invokevirtual #20                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      95: ldc           #87                 // String Content-Length
      97: invokevirtual #72                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.getHeader:(Ljava/lang/String;)Ljava/lang/String;
     100: ifnonnull     174
     103: aload_0
     104: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     107: invokevirtual #20                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
     110: ldc           #71                 // String Transfer-Encoding
     112: invokevirtual #72                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.getHeader:(Ljava/lang/String;)Ljava/lang/String;
     115: ifnonnull     174
     118: aload_0
     119: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
     122: ifnonnull     147
     125: aload_0
     126: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     129: invokevirtual #26                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
     132: invokevirtual #88                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
     135: getstatic     #89                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
     138: ldc           #90                 // String 0
     140: invokevirtual #91                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     143: pop
     144: goto          174
     147: aload_0
     148: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     151: invokevirtual #26                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
     154: invokevirtual #88                 // Method io/undertow/server/HttpServerExchange.getResponseHeaders:()Lio/undertow/util/HeaderMap;
     157: getstatic     #89                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
     160: aload_0
     161: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
     164: invokevirtual #54                 // Method java/nio/ByteBuffer.position:()I
     167: invokestatic  #92                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
     170: invokevirtual #91                 // Method io/undertow/util/HeaderMap.put:(Lio/undertow/util/HttpString;Ljava/lang/String;)Lio/undertow/util/HeaderMap;
     173: pop
     174: aload_0
     175: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
     178: ifnull        186
     181: aload_0
     182: iconst_1
     183: invokespecial #39                 // Method writeBufferBlocking:(Z)V
     186: aload_0
     187: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     190: ifnonnull     207
     193: aload_0
     194: aload_0
     195: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     198: invokevirtual #26                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
     201: invokevirtual #27                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
     204: putfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     207: aload_0
     208: dup
     209: getfield      #8                  // Field state:I
     212: bipush        8
     214: ior
     215: putfield      #8                  // Field state:I
     218: aload_0
     219: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     222: astore_1
     223: aload_1
     224: ifnull        237
     227: aload_1
     228: invokeinterface #61,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.shutdownWrites:()V
     233: aload_1
     234: invokestatic  #75                 // Method org/xnio/channels/Channels.flushBlocking:(Lorg/xnio/channels/SuspendableWriteChannel;)V
     237: aload_0
     238: getfield      #4                  // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     241: ifnull        261
     244: aload_0
     245: getfield      #4                  // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     248: invokeinterface #38,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     253: aload_0
     254: aconst_null
     255: putfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
     258: goto          311
     261: aload_0
     262: aconst_null
     263: putfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
     266: goto          311
     269: astore_1
     270: aload_0
     271: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     274: invokestatic  #94                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
     277: aload_1
     278: athrow
     279: astore_2
     280: aload_0
     281: getfield      #4                  // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     284: ifnull        304
     287: aload_0
     288: getfield      #4                  // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     291: invokeinterface #38,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     296: aload_0
     297: aconst_null
     298: putfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
     301: goto          309
     304: aload_0
     305: aconst_null
     306: putfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
     309: aload_2
     310: athrow
     311: goto          318
     314: aload_0
     315: invokevirtual #95                 // Method closeAsync:()V
     318: return
    Exception table:
       from    to  target type
         174   237   269   Class java/io/IOException
         174   237   279   any
         269   280   279   any

  public void closeAsync() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field state:I
       4: iconst_1
       5: invokestatic  #19                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ifne          24
      11: aload_0
      12: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      15: invokevirtual #20                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      18: invokevirtual #21                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.isTreatAsCommitted:()Z
      21: ifeq          25
      24: return
      25: aload_0
      26: dup
      27: getfield      #8                  // Field state:I
      30: iconst_1
      31: ior
      32: putfield      #8                  // Field state:I
      35: aload_0
      36: dup
      37: getfield      #8                  // Field state:I
      40: bipush        -5
      42: iand
      43: putfield      #8                  // Field state:I
      46: aload_0
      47: getfield      #8                  // Field state:I
      50: iconst_2
      51: invokestatic  #86                 // Method org/xnio/Bits.allAreClear:(II)Z
      54: ifeq          127
      57: aload_0
      58: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      61: ifnonnull     127
      64: aload_0
      65: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      68: invokevirtual #20                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      71: ldc           #71                 // String Transfer-Encoding
      73: invokevirtual #72                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      76: ifnonnull     127
      79: aload_0
      80: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      83: ifnonnull     104
      86: aload_0
      87: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      90: invokevirtual #20                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      93: getstatic     #89                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
      96: ldc           #90                 // String 0
      98: invokevirtual #96                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.setHeader:(Lio/undertow/util/HttpString;Ljava/lang/String;)V
     101: goto          127
     104: aload_0
     105: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
     108: invokevirtual #20                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
     111: getstatic     #89                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
     114: aload_0
     115: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
     118: invokevirtual #54                 // Method java/nio/ByteBuffer.position:()I
     121: invokestatic  #92                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
     124: invokevirtual #96                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.setHeader:(Lio/undertow/util/HttpString;Ljava/lang/String;)V
     127: aload_0
     128: invokespecial #45                 // Method createChannel:()V
     131: aload_0
     132: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
     135: ifnull        176
     138: aload_0
     139: iconst_1
     140: invokespecial #60                 // Method flushBufferAsync:(Z)Z
     143: ifne          147
     146: return
     147: aload_0
     148: getfield      #4                  // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     151: ifnull        171
     154: aload_0
     155: getfield      #4                  // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     158: invokeinterface #38,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     163: aload_0
     164: aconst_null
     165: putfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
     168: goto          176
     171: aload_0
     172: aconst_null
     173: putfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
     176: aload_0
     177: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     180: invokeinterface #61,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.shutdownWrites:()V
     185: aload_0
     186: dup
     187: getfield      #8                  // Field state:I
     190: bipush        8
     192: ior
     193: putfield      #8                  // Field state:I
     196: aload_0
     197: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     200: invokeinterface #62,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.flush:()Z
     205: ifne          217
     208: aload_0
     209: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
     212: invokeinterface #49,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.resumeWrites:()V
     217: goto          249
     220: astore_1
     221: aload_0
     222: getfield      #4                  // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     225: ifnull        247
     228: aload_0
     229: getfield      #4                  // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     232: invokeinterface #38,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
     237: aload_0
     238: aconst_null
     239: putfield      #4                  // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
     242: aload_0
     243: aconst_null
     244: putfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
     247: aload_1
     248: athrow
     249: return
    Exception table:
       from    to  target type
          25   146   220   Class java/io/IOException
         147   217   220   Class java/io/IOException

  private void createChannel();
    Code:
       0: aload_0
       1: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
       4: ifnonnull     46
       7: aload_0
       8: aload_0
       9: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      12: invokevirtual #26                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
      15: invokevirtual #27                 // Method io/undertow/server/HttpServerExchange.getResponseChannel:()Lorg/xnio/channels/StreamSinkChannel;
      18: putfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      21: aload_0
      22: getfield      #10                 // Field internalListener:Lio/undertow/servlet/spec/ServletOutputStreamImpl$WriteChannelListener;
      25: ifnull        46
      28: aload_0
      29: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      32: invokeinterface #97,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
      37: aload_0
      38: getfield      #10                 // Field internalListener:Lio/undertow/servlet/spec/ServletOutputStreamImpl$WriteChannelListener;
      41: invokeinterface #98,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
      46: return

  private java.nio.ByteBuffer buffer();
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_1
       6: ifnull        11
       9: aload_1
      10: areturn
      11: aload_0
      12: getfield      #16                 // Field bufferSize:Ljava/lang/Integer;
      15: ifnull        37
      18: aload_0
      19: aload_0
      20: getfield      #16                 // Field bufferSize:Ljava/lang/Integer;
      23: invokevirtual #99                 // Method java/lang/Integer.intValue:()I
      26: invokestatic  #100                // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      29: putfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      32: aload_0
      33: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      36: areturn
      37: aload_0
      38: aload_0
      39: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      42: invokevirtual #26                 // Method io/undertow/servlet/handlers/ServletRequestContext.getExchange:()Lio/undertow/server/HttpServerExchange;
      45: invokevirtual #28                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
      48: invokevirtual #29                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      51: invokeinterface #34,  1           // InterfaceMethod io/undertow/connector/ByteBufferPool.allocate:()Lio/undertow/connector/PooledByteBuffer;
      56: putfield      #4                  // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
      59: aload_0
      60: aload_0
      61: getfield      #4                  // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
      64: invokeinterface #35,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.getBuffer:()Ljava/nio/ByteBuffer;
      69: putfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      72: aload_0
      73: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      76: areturn

  public void resetBuffer();
    Code:
       0: aload_0
       1: getfield      #8                  // Field state:I
       4: iconst_2
       5: invokestatic  #86                 // Method org/xnio/Bits.allAreClear:(II)Z
       8: ifeq          45
      11: aload_0
      12: getfield      #4                  // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
      15: ifnull        32
      18: aload_0
      19: getfield      #4                  // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
      22: invokeinterface #38,  1           // InterfaceMethod io/undertow/connector/PooledByteBuffer.close:()V
      27: aload_0
      28: aconst_null
      29: putfield      #4                  // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
      32: aload_0
      33: aconst_null
      34: putfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      37: aload_0
      38: lconst_0
      39: putfield      #51                 // Field written:J
      42: goto          54
      45: getstatic     #22                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      48: invokeinterface #101,  1          // InterfaceMethod io/undertow/servlet/UndertowServletMessages.responseAlreadyCommited:()Ljava/lang/IllegalStateException;
      53: athrow
      54: return

  public void setBufferSize(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
       4: ifnonnull     20
       7: aload_0
       8: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      11: invokevirtual #20                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalResponse:()Lio/undertow/servlet/spec/HttpServletResponseImpl;
      14: invokevirtual #21                 // Method io/undertow/servlet/spec/HttpServletResponseImpl.isTreatAsCommitted:()Z
      17: ifeq          29
      20: getstatic     #22                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      23: invokeinterface #102,  1          // InterfaceMethod io/undertow/servlet/UndertowServletMessages.contentHasBeenWritten:()Ljava/lang/IllegalStateException;
      28: athrow
      29: aload_0
      30: iload_1
      31: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: putfield      #16                 // Field bufferSize:Ljava/lang/Integer;
      37: return

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #8                  // Field state:I
       4: iconst_1
       5: invokestatic  #19                 // Method org/xnio/Bits.anyAreSet:(II)Z
       8: ireturn

  public boolean isReady();
    Code:
       0: aload_0
       1: getfield      #1                  // Field listener:Ljavax/servlet/WriteListener;
       4: ifnonnull     16
       7: getstatic     #22                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      10: invokeinterface #103,  1          // InterfaceMethod io/undertow/servlet/UndertowServletMessages.streamNotInAsyncMode:()Ljava/lang/IllegalStateException;
      15: athrow
      16: aload_0
      17: getfield      #8                  // Field state:I
      20: iconst_4
      21: invokestatic  #19                 // Method org/xnio/Bits.anyAreSet:(II)Z
      24: ireturn

  public void setWriteListener(javax.servlet.WriteListener);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: getstatic     #22                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
       7: invokeinterface #104,  1          // InterfaceMethod io/undertow/servlet/UndertowServletMessages.listenerCannotBeNull:()Ljava/lang/NullPointerException;
      12: athrow
      13: aload_0
      14: getfield      #1                  // Field listener:Ljavax/servlet/WriteListener;
      17: ifnull        29
      20: getstatic     #22                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      23: invokeinterface #105,  1          // InterfaceMethod io/undertow/servlet/UndertowServletMessages.listenerAlreadySet:()Ljava/lang/IllegalStateException;
      28: athrow
      29: aload_0
      30: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
      33: invokevirtual #64                 // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalRequest:()Lio/undertow/servlet/spec/HttpServletRequestImpl;
      36: astore_2
      37: aload_2
      38: invokeinterface #106,  1          // InterfaceMethod javax/servlet/ServletRequest.isAsyncStarted:()Z
      43: ifne          55
      46: getstatic     #22                 // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      49: invokeinterface #107,  1          // InterfaceMethod io/undertow/servlet/UndertowServletMessages.asyncNotStarted:()Ljava/lang/IllegalStateException;
      54: athrow
      55: aload_0
      56: aload_2
      57: invokeinterface #108,  1          // InterfaceMethod javax/servlet/ServletRequest.getAsyncContext:()Ljavax/servlet/AsyncContext;
      62: checkcast     #109                // class io/undertow/servlet/spec/AsyncContextImpl
      65: putfield      #3                  // Field asyncContext:Lio/undertow/servlet/spec/AsyncContextImpl;
      68: aload_0
      69: aload_1
      70: putfield      #1                  // Field listener:Ljavax/servlet/WriteListener;
      73: aload_0
      74: new           #110                // class io/undertow/servlet/spec/ServletOutputStreamImpl$WriteChannelListener
      77: dup
      78: aload_0
      79: aconst_null
      80: invokespecial #111                // Method io/undertow/servlet/spec/ServletOutputStreamImpl$WriteChannelListener."<init>":(Lio/undertow/servlet/spec/ServletOutputStreamImpl;Lio/undertow/servlet/spec/ServletOutputStreamImpl$1;)V
      83: putfield      #10                 // Field internalListener:Lio/undertow/servlet/spec/ServletOutputStreamImpl$WriteChannelListener;
      86: aload_0
      87: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      90: ifnull        111
      93: aload_0
      94: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
      97: invokeinterface #97,  1           // InterfaceMethod org/xnio/channels/StreamSinkChannel.getWriteSetter:()Lorg/xnio/ChannelListener$Setter;
     102: aload_0
     103: getfield      #10                 // Field internalListener:Lio/undertow/servlet/spec/ServletOutputStreamImpl$WriteChannelListener;
     106: invokeinterface #98,  2           // InterfaceMethod org/xnio/ChannelListener$Setter.set:(Lorg/xnio/ChannelListener;)V
     111: aload_0
     112: getfield      #3                  // Field asyncContext:Lio/undertow/servlet/spec/AsyncContextImpl;
     115: new           #112                // class io/undertow/servlet/spec/ServletOutputStreamImpl$1
     118: dup
     119: aload_0
     120: invokespecial #113                // Method io/undertow/servlet/spec/ServletOutputStreamImpl$1."<init>":(Lio/undertow/servlet/spec/ServletOutputStreamImpl;)V
     123: invokevirtual #114                // Method io/undertow/servlet/spec/AsyncContextImpl.addAsyncTask:(Ljava/lang/Runnable;)V
     126: return

  io.undertow.servlet.handlers.ServletRequestContext getServletRequestContext();
    Code:
       0: aload_0
       1: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
       4: areturn

  static org.xnio.channels.StreamSinkChannel access$100(io.undertow.servlet.spec.ServletOutputStreamImpl);
    Code:
       0: aload_0
       1: getfield      #11                 // Field channel:Lorg/xnio/channels/StreamSinkChannel;
       4: areturn

  static io.undertow.servlet.spec.ServletOutputStreamImpl$WriteChannelListener access$200(io.undertow.servlet.spec.ServletOutputStreamImpl);
    Code:
       0: aload_0
       1: getfield      #10                 // Field internalListener:Lio/undertow/servlet/spec/ServletOutputStreamImpl$WriteChannelListener;
       4: areturn

  static io.undertow.servlet.handlers.ServletRequestContext access$300(io.undertow.servlet.spec.ServletOutputStreamImpl);
    Code:
       0: aload_0
       1: getfield      #9                  // Field servletRequestContext:Lio/undertow/servlet/handlers/ServletRequestContext;
       4: areturn

  static int access$400(io.undertow.servlet.spec.ServletOutputStreamImpl);
    Code:
       0: aload_0
       1: getfield      #8                  // Field state:I
       4: ireturn

  static java.nio.ByteBuffer[] access$500(io.undertow.servlet.spec.ServletOutputStreamImpl);
    Code:
       0: aload_0
       1: getfield      #7                  // Field buffersToWrite:[Ljava/nio/ByteBuffer;
       4: areturn

  static java.nio.ByteBuffer[] access$502(io.undertow.servlet.spec.ServletOutputStreamImpl, java.nio.ByteBuffer[]);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #7                  // Field buffersToWrite:[Ljava/nio/ByteBuffer;
       6: areturn

  static java.nio.ByteBuffer access$600(io.undertow.servlet.spec.ServletOutputStreamImpl);
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
       4: areturn

  static java.nio.channels.FileChannel access$700(io.undertow.servlet.spec.ServletOutputStreamImpl);
    Code:
       0: aload_0
       1: getfield      #5                  // Field pendingFile:Ljava/nio/channels/FileChannel;
       4: areturn

  static java.nio.channels.FileChannel access$702(io.undertow.servlet.spec.ServletOutputStreamImpl, java.nio.channels.FileChannel);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #5                  // Field pendingFile:Ljava/nio/channels/FileChannel;
       6: areturn

  static io.undertow.connector.PooledByteBuffer access$800(io.undertow.servlet.spec.ServletOutputStreamImpl);
    Code:
       0: aload_0
       1: getfield      #4                  // Field pooledBuffer:Lio/undertow/connector/PooledByteBuffer;
       4: areturn

  static java.nio.ByteBuffer access$602(io.undertow.servlet.spec.ServletOutputStreamImpl, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
       6: areturn

  static int access$402(io.undertow.servlet.spec.ServletOutputStreamImpl, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #8                  // Field state:I
       6: ireturn

  static io.undertow.servlet.spec.AsyncContextImpl access$900(io.undertow.servlet.spec.ServletOutputStreamImpl);
    Code:
       0: aload_0
       1: getfield      #3                  // Field asyncContext:Lio/undertow/servlet/spec/AsyncContextImpl;
       4: areturn

  static io.undertow.servlet.core.CompositeThreadSetupAction access$1000(io.undertow.servlet.spec.ServletOutputStreamImpl);
    Code:
       0: aload_0
       1: getfield      #2                  // Field threadSetupAction:Lio/undertow/servlet/core/CompositeThreadSetupAction;
       4: areturn

  static javax.servlet.WriteListener access$1100(io.undertow.servlet.spec.ServletOutputStreamImpl);
    Code:
       0: aload_0
       1: getfield      #1                  // Field listener:Ljavax/servlet/WriteListener;
       4: areturn
}
