Compiled from "BlockingWriterSenderImpl.java"
public class io.undertow.servlet.core.BlockingWriterSenderImpl implements io.undertow.io.Sender {
  public static final int BUFFER_SIZE;

  private final java.nio.charset.CharsetDecoder charsetDecoder;

  private final io.undertow.server.HttpServerExchange exchange;

  private final java.io.PrintWriter writer;

  private java.nio.channels.FileChannel pendingFile;

  private boolean inCall;

  private java.lang.String next;

  private io.undertow.io.IoCallback queuedCallback;

  public io.undertow.servlet.core.BlockingWriterSenderImpl(io.undertow.server.HttpServerExchange, java.io.PrintWriter, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field writer:Ljava/io/PrintWriter;
      14: aload_0
      15: aload_3
      16: invokestatic  #4                  // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      19: invokevirtual #5                  // Method java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;
      22: putfield      #6                  // Field charsetDecoder:Ljava/nio/charset/CharsetDecoder;
      25: return

  public void send(java.nio.ByteBuffer, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: getfield      #7                  // Field inCall:Z
       4: ifeq          21
       7: aload_0
       8: iconst_1
       9: anewarray     #8                  // class java/nio/ByteBuffer
      12: dup
      13: iconst_0
      14: aload_1
      15: aastore
      16: aload_2
      17: invokespecial #9                  // Method queue:([Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)V
      20: return
      21: aload_0
      22: aload_1
      23: aload_2
      24: invokespecial #10                 // Method writeBuffer:(Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)Z
      27: ifeq          35
      30: aload_0
      31: aload_2
      32: invokespecial #11                 // Method invokeOnComplete:(Lio/undertow/io/IoCallback;)V
      35: return

  public void send(java.nio.ByteBuffer[], io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: getfield      #7                  // Field inCall:Z
       4: ifeq          14
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #9                  // Method queue:([Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)V
      13: return
      14: aload_1
      15: astore_3
      16: aload_3
      17: arraylength
      18: istore        4
      20: iconst_0
      21: istore        5
      23: iload         5
      25: iload         4
      27: if_icmpge     53
      30: aload_3
      31: iload         5
      33: aaload
      34: astore        6
      36: aload_0
      37: aload         6
      39: aload_2
      40: invokespecial #10                 // Method writeBuffer:(Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)Z
      43: ifne          47
      46: return
      47: iinc          5, 1
      50: goto          23
      53: aload_0
      54: aload_2
      55: invokespecial #11                 // Method invokeOnComplete:(Lio/undertow/io/IoCallback;)V
      58: return

  public void send(java.lang.String, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: getfield      #7                  // Field inCall:Z
       4: ifeq          14
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #12                 // Method queue:(Ljava/lang/String;Lio/undertow/io/IoCallback;)V
      13: return
      14: aload_0
      15: getfield      #3                  // Field writer:Ljava/io/PrintWriter;
      18: aload_1
      19: invokevirtual #13                 // Method java/io/PrintWriter.write:(Ljava/lang/String;)V
      22: aload_0
      23: getfield      #3                  // Field writer:Ljava/io/PrintWriter;
      26: invokevirtual #14                 // Method java/io/PrintWriter.checkError:()Z
      29: ifeq          53
      32: aload_2
      33: aload_0
      34: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      37: aload_0
      38: new           #15                 // class java/io/IOException
      41: dup
      42: invokespecial #16                 // Method java/io/IOException."<init>":()V
      45: invokeinterface #17,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
      50: goto          58
      53: aload_0
      54: aload_2
      55: invokespecial #11                 // Method invokeOnComplete:(Lio/undertow/io/IoCallback;)V
      58: return

  public void send(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #18                 // Field io/undertow/io/IoCallback.END_EXCHANGE:Lio/undertow/io/IoCallback;
       5: invokevirtual #19                 // Method send:(Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)V
       8: return

  public void send(java.nio.ByteBuffer[]);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #18                 // Field io/undertow/io/IoCallback.END_EXCHANGE:Lio/undertow/io/IoCallback;
       5: invokevirtual #20                 // Method send:([Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)V
       8: return

  public void send(java.lang.String, java.nio.charset.Charset, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: getfield      #7                  // Field inCall:Z
       4: ifeq          28
       7: aload_0
       8: iconst_1
       9: anewarray     #8                  // class java/nio/ByteBuffer
      12: dup
      13: iconst_0
      14: aload_1
      15: aload_2
      16: invokevirtual #21                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      19: invokestatic  #22                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      22: aastore
      23: aload_3
      24: invokespecial #9                  // Method queue:([Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)V
      27: return
      28: aload_0
      29: getfield      #3                  // Field writer:Ljava/io/PrintWriter;
      32: aload_1
      33: invokevirtual #13                 // Method java/io/PrintWriter.write:(Ljava/lang/String;)V
      36: aload_0
      37: getfield      #3                  // Field writer:Ljava/io/PrintWriter;
      40: invokevirtual #14                 // Method java/io/PrintWriter.checkError:()Z
      43: ifeq          67
      46: aload_3
      47: aload_0
      48: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      51: aload_0
      52: new           #15                 // class java/io/IOException
      55: dup
      56: invokespecial #16                 // Method java/io/IOException."<init>":()V
      59: invokeinterface #17,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
      64: goto          72
      67: aload_0
      68: aload_3
      69: invokespecial #11                 // Method invokeOnComplete:(Lio/undertow/io/IoCallback;)V
      72: return

  public void send(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #18                 // Field io/undertow/io/IoCallback.END_EXCHANGE:Lio/undertow/io/IoCallback;
       5: invokevirtual #23                 // Method send:(Ljava/lang/String;Lio/undertow/io/IoCallback;)V
       8: return

  public void send(java.lang.String, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #18                 // Field io/undertow/io/IoCallback.END_EXCHANGE:Lio/undertow/io/IoCallback;
       6: invokevirtual #24                 // Method send:(Ljava/lang/String;Ljava/nio/charset/Charset;Lio/undertow/io/IoCallback;)V
       9: return

  public void transferFrom(java.nio.channels.FileChannel, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: getfield      #7                  // Field inCall:Z
       4: ifeq          14
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #25                 // Method queue:(Ljava/nio/channels/FileChannel;Lio/undertow/io/IoCallback;)V
      13: return
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokespecial #26                 // Method performTransfer:(Ljava/nio/channels/FileChannel;Lio/undertow/io/IoCallback;)V
      20: return

  private void performTransfer(java.nio.channels.FileChannel, io.undertow.io.IoCallback);
    Code:
       0: sipush        128
       3: invokestatic  #28                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       6: astore_3
       7: aload_1
       8: invokevirtual #29                 // Method java/nio/channels/FileChannel.position:()J
      11: lstore        4
      13: aload_1
      14: invokevirtual #30                 // Method java/nio/channels/FileChannel.size:()J
      17: lstore        6
      19: lload         6
      21: lload         4
      23: lsub
      24: lconst_0
      25: lcmp
      26: ifle          75
      29: aload_1
      30: aload_3
      31: invokevirtual #31                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;)I
      34: istore        8
      36: iload         8
      38: ifgt          44
      41: goto          75
      44: lload         4
      46: iload         8
      48: i2l
      49: ladd
      50: lstore        4
      52: aload_3
      53: invokevirtual #32                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      56: pop
      57: aload_0
      58: aload_3
      59: aload_2
      60: invokespecial #10                 // Method writeBuffer:(Ljava/nio/ByteBuffer;Lio/undertow/io/IoCallback;)Z
      63: ifne          67
      66: return
      67: aload_3
      68: invokevirtual #33                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      71: pop
      72: goto          19
      75: lload         4
      77: lload         6
      79: lcmp
      80: ifeq          93
      83: new           #34                 // class java/io/EOFException
      86: dup
      87: ldc           #35                 // String Unexpected EOF reading file
      89: invokespecial #36                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      92: athrow
      93: goto          111
      96: astore        4
      98: aload_2
      99: aload_0
     100: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     103: aload_0
     104: aload         4
     106: invokeinterface #17,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
     111: aload_0
     112: aload_2
     113: invokespecial #11                 // Method invokeOnComplete:(Lio/undertow/io/IoCallback;)V
     116: return
    Exception table:
       from    to  target type
           7    66    96   Class java/io/IOException
          67    93    96   Class java/io/IOException

  public void close(io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: getfield      #3                  // Field writer:Ljava/io/PrintWriter;
       4: invokevirtual #37                 // Method java/io/PrintWriter.close:()V
       7: aload_0
       8: aload_1
       9: invokespecial #11                 // Method invokeOnComplete:(Lio/undertow/io/IoCallback;)V
      12: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: getstatic     #38                 // Field io/undertow/servlet/handlers/ServletRequestContext.ATTACHMENT_KEY:Lio/undertow/util/AttachmentKey;
       7: invokevirtual #39                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
      10: checkcast     #40                 // class io/undertow/servlet/handlers/ServletRequestContext
      13: invokevirtual #41                 // Method io/undertow/servlet/handlers/ServletRequestContext.getDispatcherType:()Ljavax/servlet/DispatcherType;
      16: getstatic     #42                 // Field javax/servlet/DispatcherType.INCLUDE:Ljavax/servlet/DispatcherType;
      19: if_acmpeq     29
      22: aload_0
      23: getfield      #3                  // Field writer:Ljava/io/PrintWriter;
      26: invokestatic  #43                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      29: return

  private boolean writeBuffer(java.nio.ByteBuffer, io.undertow.io.IoCallback);
    Code:
       0: new           #44                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_0
      10: getfield      #6                  // Field charsetDecoder:Ljava/nio/charset/CharsetDecoder;
      13: aload_1
      14: invokevirtual #46                 // Method java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
      17: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      20: pop
      21: goto          41
      24: astore        4
      26: aload_2
      27: aload_0
      28: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      31: aload_0
      32: aload         4
      34: invokeinterface #17,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
      39: iconst_0
      40: ireturn
      41: aload_3
      42: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: astore        4
      47: aload_0
      48: getfield      #3                  // Field writer:Ljava/io/PrintWriter;
      51: aload         4
      53: invokevirtual #13                 // Method java/io/PrintWriter.write:(Ljava/lang/String;)V
      56: aload_0
      57: getfield      #3                  // Field writer:Ljava/io/PrintWriter;
      60: invokevirtual #14                 // Method java/io/PrintWriter.checkError:()Z
      63: ifeq          86
      66: aload_2
      67: aload_0
      68: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      71: aload_0
      72: new           #15                 // class java/io/IOException
      75: dup
      76: invokespecial #16                 // Method java/io/IOException."<init>":()V
      79: invokeinterface #17,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
      84: iconst_0
      85: ireturn
      86: iconst_1
      87: ireturn
    Exception table:
       from    to  target type
           8    21    24   Class java/nio/charset/CharacterCodingException

  private void invokeOnComplete(io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #7                  // Field inCall:Z
       5: aload_1
       6: aload_0
       7: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      10: aload_0
      11: invokeinterface #50,  3           // InterfaceMethod io/undertow/io/IoCallback.onComplete:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;)V
      16: aload_0
      17: iconst_0
      18: putfield      #7                  // Field inCall:Z
      21: goto          32
      24: astore_2
      25: aload_0
      26: iconst_0
      27: putfield      #7                  // Field inCall:Z
      30: aload_2
      31: athrow
      32: aload_0
      33: getfield      #51                 // Field next:Ljava/lang/String;
      36: ifnull        135
      39: aload_0
      40: getfield      #51                 // Field next:Ljava/lang/String;
      43: astore_2
      44: aload_0
      45: getfield      #52                 // Field queuedCallback:Lio/undertow/io/IoCallback;
      48: astore_3
      49: aload_0
      50: aconst_null
      51: putfield      #51                 // Field next:Ljava/lang/String;
      54: aload_0
      55: aconst_null
      56: putfield      #52                 // Field queuedCallback:Lio/undertow/io/IoCallback;
      59: aload_0
      60: getfield      #3                  // Field writer:Ljava/io/PrintWriter;
      63: aload_2
      64: invokevirtual #13                 // Method java/io/PrintWriter.write:(Ljava/lang/String;)V
      67: aload_0
      68: getfield      #3                  // Field writer:Ljava/io/PrintWriter;
      71: invokevirtual #14                 // Method java/io/PrintWriter.checkError:()Z
      74: ifeq          98
      77: aload_3
      78: aload_0
      79: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      82: aload_0
      83: new           #15                 // class java/io/IOException
      86: dup
      87: invokespecial #16                 // Method java/io/IOException."<init>":()V
      90: invokeinterface #17,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
      95: goto          132
      98: aload_0
      99: iconst_1
     100: putfield      #7                  // Field inCall:Z
     103: aload_3
     104: aload_0
     105: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
     108: aload_0
     109: invokeinterface #50,  3           // InterfaceMethod io/undertow/io/IoCallback.onComplete:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;)V
     114: aload_0
     115: iconst_0
     116: putfield      #7                  // Field inCall:Z
     119: goto          132
     122: astore        4
     124: aload_0
     125: iconst_0
     126: putfield      #7                  // Field inCall:Z
     129: aload         4
     131: athrow
     132: goto          32
     135: return
    Exception table:
       from    to  target type
           5    16    24   any
         103   114   122   any
         122   124   122   any

  private void queue(java.nio.ByteBuffer[], io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: getfield      #51                 // Field next:Ljava/lang/String;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #53                 // Field pendingFile:Ljava/nio/channels/FileChannel;
      11: ifnull        23
      14: getstatic     #54                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      17: invokeinterface #55,  1           // InterfaceMethod io/undertow/UndertowMessages.dataAlreadyQueued:()Ljava/lang/IllegalStateException;
      22: athrow
      23: new           #44                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
      30: astore_3
      31: aload_1
      32: astore        4
      34: aload         4
      36: arraylength
      37: istore        5
      39: iconst_0
      40: istore        6
      42: iload         6
      44: iload         5
      46: if_icmpge     95
      49: aload         4
      51: iload         6
      53: aaload
      54: astore        7
      56: aload_3
      57: aload_0
      58: getfield      #6                  // Field charsetDecoder:Ljava/nio/charset/CharsetDecoder;
      61: aload         7
      63: invokevirtual #46                 // Method java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;
      66: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      69: pop
      70: goto          89
      73: astore        8
      75: aload_2
      76: aload_0
      77: getfield      #2                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      80: aload_0
      81: aload         8
      83: invokeinterface #17,  4           // InterfaceMethod io/undertow/io/IoCallback.onException:(Lio/undertow/server/HttpServerExchange;Lio/undertow/io/Sender;Ljava/io/IOException;)V
      88: return
      89: iinc          6, 1
      92: goto          42
      95: aload_0
      96: aload_3
      97: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: putfield      #51                 // Field next:Ljava/lang/String;
     103: aload_0
     104: aload_2
     105: putfield      #52                 // Field queuedCallback:Lio/undertow/io/IoCallback;
     108: return
    Exception table:
       from    to  target type
          56    70    73   Class java/nio/charset/CharacterCodingException

  private void queue(java.lang.String, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: getfield      #51                 // Field next:Ljava/lang/String;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #53                 // Field pendingFile:Ljava/nio/channels/FileChannel;
      11: ifnull        23
      14: getstatic     #54                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      17: invokeinterface #55,  1           // InterfaceMethod io/undertow/UndertowMessages.dataAlreadyQueued:()Ljava/lang/IllegalStateException;
      22: athrow
      23: aload_0
      24: aload_1
      25: putfield      #51                 // Field next:Ljava/lang/String;
      28: aload_0
      29: aload_2
      30: putfield      #52                 // Field queuedCallback:Lio/undertow/io/IoCallback;
      33: return

  private void queue(java.nio.channels.FileChannel, io.undertow.io.IoCallback);
    Code:
       0: aload_0
       1: getfield      #51                 // Field next:Ljava/lang/String;
       4: ifnonnull     14
       7: aload_0
       8: getfield      #53                 // Field pendingFile:Ljava/nio/channels/FileChannel;
      11: ifnull        23
      14: getstatic     #54                 // Field io/undertow/UndertowMessages.MESSAGES:Lio/undertow/UndertowMessages;
      17: invokeinterface #55,  1           // InterfaceMethod io/undertow/UndertowMessages.dataAlreadyQueued:()Ljava/lang/IllegalStateException;
      22: athrow
      23: aload_0
      24: aload_1
      25: putfield      #53                 // Field pendingFile:Ljava/nio/channels/FileChannel;
      28: aload_0
      29: aload_2
      30: putfield      #52                 // Field queuedCallback:Lio/undertow/io/IoCallback;
      33: return
}
