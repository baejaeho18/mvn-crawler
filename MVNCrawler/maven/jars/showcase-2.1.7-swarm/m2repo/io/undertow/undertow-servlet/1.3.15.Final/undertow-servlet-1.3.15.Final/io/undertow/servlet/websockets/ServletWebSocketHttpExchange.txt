Compiled from "ServletWebSocketHttpExchange.java"
public class io.undertow.servlet.websockets.ServletWebSocketHttpExchange implements io.undertow.websockets.spi.WebSocketHttpExchange {
  private final javax.servlet.http.HttpServletRequest request;

  private final javax.servlet.http.HttpServletResponse response;

  private final io.undertow.server.HttpServerExchange exchange;

  private final java.util.Set<io.undertow.websockets.core.WebSocketChannel> peerConnections;

  public io.undertow.servlet.websockets.ServletWebSocketHttpExchange(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.util.Set<io.undertow.websockets.core.WebSocketChannel>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field request:Ljavax/servlet/http/HttpServletRequest;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field response:Ljavax/servlet/http/HttpServletResponse;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field peerConnections:Ljava/util/Set;
      19: aload_0
      20: invokestatic  #5                  // Method io/undertow/servlet/websockets/SecurityActions.requireCurrentServletRequestContext:()Lio/undertow/servlet/handlers/ServletRequestContext;
      23: invokevirtual #6                  // Method io/undertow/servlet/handlers/ServletRequestContext.getOriginalRequest:()Lio/undertow/servlet/spec/HttpServletRequestImpl;
      26: invokevirtual #7                  // Method io/undertow/servlet/spec/HttpServletRequestImpl.getExchange:()Lio/undertow/server/HttpServerExchange;
      29: putfield      #8                  // Field exchange:Lio/undertow/server/HttpServerExchange;
      32: return

  public <T> void putAttachment(io.undertow.util.AttachmentKey<T>, T);
    Code:
       0: aload_0
       1: getfield      #8                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: aload_1
       5: aload_2
       6: invokevirtual #9                  // Method io/undertow/server/HttpServerExchange.putAttachment:(Lio/undertow/util/AttachmentKey;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: return

  public <T> T getAttachment(io.undertow.util.AttachmentKey<T>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: aload_1
       5: invokevirtual #10                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
       8: areturn

  public java.lang.String getRequestHeader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field request:Ljavax/servlet/http/HttpServletRequest;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      10: areturn

  public java.util.Map<java.lang.String, java.util.List<java.lang.String>> getRequestHeaders();
    Code:
       0: new           #12                 // class java/util/TreeMap
       3: dup
       4: getstatic     #13                 // Field java/lang/String.CASE_INSENSITIVE_ORDER:Ljava/util/Comparator;
       7: invokespecial #14                 // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
      10: astore_1
      11: aload_0
      12: getfield      #2                  // Field request:Ljavax/servlet/http/HttpServletRequest;
      15: invokeinterface #15,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeaderNames:()Ljava/util/Enumeration;
      20: astore_2
      21: aload_2
      22: invokeinterface #16,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      27: ifeq          102
      30: aload_2
      31: invokeinterface #17,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      36: checkcast     #18                 // class java/lang/String
      39: astore_3
      40: aload_0
      41: getfield      #2                  // Field request:Ljavax/servlet/http/HttpServletRequest;
      44: aload_3
      45: invokeinterface #19,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getHeaders:(Ljava/lang/String;)Ljava/util/Enumeration;
      50: astore        4
      52: new           #20                 // class java/util/ArrayList
      55: dup
      56: invokespecial #21                 // Method java/util/ArrayList."<init>":()V
      59: astore        5
      61: aload_1
      62: aload_3
      63: aload         5
      65: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      70: pop
      71: aload         4
      73: invokeinterface #16,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      78: ifeq          99
      81: aload         5
      83: aload         4
      85: invokeinterface #17,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      90: invokeinterface #23,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      95: pop
      96: goto          71
      99: goto          21
     102: aload_1
     103: invokestatic  #24                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     106: areturn

  public java.lang.String getResponseHeader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field response:Ljavax/servlet/http/HttpServletResponse;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      10: areturn

  public java.util.Map<java.lang.String, java.util.List<java.lang.String>> getResponseHeaders();
    Code:
       0: new           #26                 // class java/util/HashMap
       3: dup
       4: invokespecial #27                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #3                  // Field response:Ljavax/servlet/http/HttpServletResponse;
      12: invokeinterface #28,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.getHeaderNames:()Ljava/util/Collection;
      17: astore_2
      18: aload_2
      19: invokeinterface #29,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      24: astore_3
      25: aload_3
      26: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          75
      34: aload_3
      35: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #18                 // class java/lang/String
      43: astore        4
      45: aload_1
      46: aload         4
      48: new           #20                 // class java/util/ArrayList
      51: dup
      52: aload_0
      53: getfield      #3                  // Field response:Ljavax/servlet/http/HttpServletResponse;
      56: aload         4
      58: invokeinterface #32,  2           // InterfaceMethod javax/servlet/http/HttpServletResponse.getHeaders:(Ljava/lang/String;)Ljava/util/Collection;
      63: invokespecial #33                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      66: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      71: pop
      72: goto          25
      75: aload_1
      76: invokestatic  #24                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      79: areturn

  public void setResponseHeaders(java.util.Map<java.lang.String, java.util.List<java.lang.String>>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field response:Ljavax/servlet/http/HttpServletResponse;
       4: invokeinterface #28,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.getHeaderNames:()Ljava/util/Collection;
       9: invokeinterface #29,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          48
      24: aload_2
      25: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #18                 // class java/lang/String
      33: astore_3
      34: aload_0
      35: getfield      #3                  // Field response:Ljavax/servlet/http/HttpServletResponse;
      38: aload_3
      39: aconst_null
      40: invokeinterface #34,  3           // InterfaceMethod javax/servlet/http/HttpServletResponse.setHeader:(Ljava/lang/String;Ljava/lang/String;)V
      45: goto          15
      48: aload_1
      49: invokeinterface #35,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      54: invokeinterface #36,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      59: astore_2
      60: aload_2
      61: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      66: ifeq          143
      69: aload_2
      70: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #37                 // class java/util/Map$Entry
      78: astore_3
      79: aload_3
      80: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      85: checkcast     #39                 // class java/util/List
      88: invokeinterface #40,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      93: astore        4
      95: aload         4
      97: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     102: ifeq          140
     105: aload         4
     107: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     112: checkcast     #18                 // class java/lang/String
     115: astore        5
     117: aload_0
     118: getfield      #3                  // Field response:Ljavax/servlet/http/HttpServletResponse;
     121: aload_3
     122: invokeinterface #41,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     127: checkcast     #18                 // class java/lang/String
     130: aload         5
     132: invokeinterface #42,  3           // InterfaceMethod javax/servlet/http/HttpServletResponse.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     137: goto          95
     140: goto          60
     143: return

  public void setResponseHeader(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field response:Ljavax/servlet/http/HttpServletResponse;
       4: aload_1
       5: aload_2
       6: invokeinterface #34,  3           // InterfaceMethod javax/servlet/http/HttpServletResponse.setHeader:(Ljava/lang/String;Ljava/lang/String;)V
      11: return

  public void upgradeChannel(io.undertow.server.HttpUpgradeListener);
    Code:
       0: aload_0
       1: getfield      #8                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: aload_1
       5: invokevirtual #43                 // Method io/undertow/server/HttpServerExchange.upgradeChannel:(Lio/undertow/server/HttpUpgradeListener;)Lio/undertow/server/HttpServerExchange;
       8: pop
       9: return

  public org.xnio.IoFuture<java.lang.Void> sendData(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #3                  // Field response:Ljavax/servlet/http/HttpServletResponse;
       4: invokeinterface #44,  1           // InterfaceMethod javax/servlet/http/HttpServletResponse.getOutputStream:()Ljavax/servlet/ServletOutputStream;
       9: astore_2
      10: aload_1
      11: invokevirtual #45                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      14: ifeq          28
      17: aload_2
      18: aload_1
      19: invokevirtual #46                 // Method java/nio/ByteBuffer.get:()B
      22: invokevirtual #47                 // Method javax/servlet/ServletOutputStream.write:(I)V
      25: goto          10
      28: new           #48                 // class org/xnio/FinishedIoFuture
      31: dup
      32: aconst_null
      33: invokespecial #49                 // Method org/xnio/FinishedIoFuture."<init>":(Ljava/lang/Object;)V
      36: areturn
      37: astore_2
      38: new           #51                 // class org/xnio/FutureResult
      41: dup
      42: invokespecial #52                 // Method org/xnio/FutureResult."<init>":()V
      45: astore_3
      46: aload_3
      47: aload_2
      48: invokevirtual #53                 // Method org/xnio/FutureResult.setException:(Ljava/io/IOException;)Z
      51: pop
      52: aload_3
      53: invokevirtual #54                 // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
      56: areturn
    Exception table:
       from    to  target type
           0    36    37   Class java/io/IOException

  public org.xnio.IoFuture<byte[]> readRequestData();
    Code:
       0: new           #55                 // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #56                 // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #2                  // Field request:Ljavax/servlet/http/HttpServletRequest;
      12: invokeinterface #57,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getInputStream:()Ljavax/servlet/ServletInputStream;
      17: astore_2
      18: sipush        1024
      21: newarray       byte
      23: astore_3
      24: aload_2
      25: aload_3
      26: invokevirtual #58                 // Method javax/servlet/ServletInputStream.read:([B)I
      29: dup
      30: istore        4
      32: iconst_m1
      33: if_icmpeq     47
      36: aload_1
      37: aload_3
      38: iconst_0
      39: iload         4
      41: invokevirtual #59                 // Method java/io/ByteArrayOutputStream.write:([BII)V
      44: goto          24
      47: new           #48                 // class org/xnio/FinishedIoFuture
      50: dup
      51: aload_1
      52: invokevirtual #60                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      55: invokespecial #49                 // Method org/xnio/FinishedIoFuture."<init>":(Ljava/lang/Object;)V
      58: areturn
      59: astore_2
      60: new           #51                 // class org/xnio/FutureResult
      63: dup
      64: invokespecial #52                 // Method org/xnio/FutureResult."<init>":()V
      67: astore_3
      68: aload_3
      69: aload_2
      70: invokevirtual #53                 // Method org/xnio/FutureResult.setException:(Ljava/io/IOException;)Z
      73: pop
      74: aload_3
      75: invokevirtual #54                 // Method org/xnio/FutureResult.getIoFuture:()Lorg/xnio/IoFuture;
      78: areturn
    Exception table:
       from    to  target type
           8    58    59   Class java/io/IOException

  public void endExchange();
    Code:
       0: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #8                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #61                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
       7: invokestatic  #62                 // Method org/xnio/IoUtils.safeClose:(Ljava/io/Closeable;)V
      10: return

  public java.lang.String getRequestScheme();
    Code:
       0: aload_0
       1: getfield      #2                  // Field request:Ljavax/servlet/http/HttpServletRequest;
       4: invokeinterface #63,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getScheme:()Ljava/lang/String;
       9: areturn

  public java.lang.String getRequestURI();
    Code:
       0: new           #64                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #2                  // Field request:Ljavax/servlet/http/HttpServletRequest;
      11: invokeinterface #66,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRequestURI:()Ljava/lang/String;
      16: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #2                  // Field request:Ljavax/servlet/http/HttpServletRequest;
      23: invokeinterface #68,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
      28: ifnonnull     36
      31: ldc           #69                 // String
      33: goto          63
      36: new           #64                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #70                 // String ?
      45: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #2                  // Field request:Ljavax/servlet/http/HttpServletRequest;
      52: invokeinterface #68,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
      57: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: areturn

  public io.undertow.connector.ByteBufferPool getBufferPool();
    Code:
       0: aload_0
       1: getfield      #8                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #61                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
       7: invokevirtual #72                 // Method io/undertow/server/ServerConnection.getByteBufferPool:()Lio/undertow/connector/ByteBufferPool;
      10: areturn

  public java.lang.String getQueryString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field request:Ljavax/servlet/http/HttpServletRequest;
       4: invokeinterface #68,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
       9: areturn

  public java.lang.Object getSession();
    Code:
       0: aload_0
       1: getfield      #2                  // Field request:Ljavax/servlet/http/HttpServletRequest;
       4: iconst_0
       5: invokeinterface #73,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getSession:(Z)Ljavax/servlet/http/HttpSession;
      10: areturn

  public java.util.Map<java.lang.String, java.util.List<java.lang.String>> getRequestParameters();
    Code:
       0: new           #26                 // class java/util/HashMap
       3: dup
       4: invokespecial #27                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #2                  // Field request:Ljavax/servlet/http/HttpServletRequest;
      12: invokeinterface #74,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getParameterMap:()Ljava/util/Map;
      17: invokeinterface #35,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      22: invokeinterface #36,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      27: astore_2
      28: aload_2
      29: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          82
      37: aload_2
      38: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #37                 // class java/util/Map$Entry
      46: astore_3
      47: aload_1
      48: aload_3
      49: invokeinterface #41,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      54: new           #20                 // class java/util/ArrayList
      57: dup
      58: aload_3
      59: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      64: checkcast     #75                 // class "[Ljava/lang/Object;"
      67: invokestatic  #76                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      70: invokespecial #33                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      73: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: goto          28
      82: aload_1
      83: areturn

  public java.security.Principal getUserPrincipal();
    Code:
       0: aload_0
       1: getfield      #2                  // Field request:Ljavax/servlet/http/HttpServletRequest;
       4: invokeinterface #77,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getUserPrincipal:()Ljava/security/Principal;
       9: areturn

  public boolean isUserInRole(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field request:Ljavax/servlet/http/HttpServletRequest;
       4: aload_1
       5: invokeinterface #78,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.isUserInRole:(Ljava/lang/String;)Z
      10: ireturn

  public java.util.Set<io.undertow.websockets.core.WebSocketChannel> getPeerConnections();
    Code:
       0: aload_0
       1: getfield      #4                  // Field peerConnections:Ljava/util/Set;
       4: areturn

  public org.xnio.OptionMap getOptions();
    Code:
       0: aload_0
       1: getfield      #8                  // Field exchange:Lio/undertow/server/HttpServerExchange;
       4: invokevirtual #61                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
       7: invokevirtual #79                 // Method io/undertow/server/ServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
      10: areturn
}
