Compiled from "FilterInfo.java"
public class io.undertow.servlet.api.FilterInfo implements java.lang.Cloneable {
  private final java.lang.Class<? extends javax.servlet.Filter> filterClass;

  private final java.lang.String name;

  private volatile io.undertow.servlet.api.InstanceFactory<? extends javax.servlet.Filter> instanceFactory;

  private final java.util.Map<java.lang.String, java.lang.String> initParams;

  private volatile boolean asyncSupported;

  public io.undertow.servlet.api.FilterInfo(java.lang.String, java.lang.Class<? extends javax.servlet.Filter>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field initParams:Ljava/util/Map;
      15: aload_1
      16: ifnonnull     30
      19: getstatic     #5                  // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      22: ldc           #6                  // String name
      24: invokeinterface #7,  2            // InterfaceMethod io/undertow/servlet/UndertowServletMessages.paramCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      29: athrow
      30: aload_2
      31: ifnonnull     48
      34: getstatic     #5                  // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      37: ldc           #8                  // String filterClass
      39: ldc           #9                  // String Filter
      41: aload_1
      42: invokeinterface #10,  4           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.paramCannotBeNull:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      47: athrow
      48: ldc           #11                 // class javax/servlet/Filter
      50: aload_2
      51: invokevirtual #12                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      54: ifne          68
      57: getstatic     #5                  // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      60: aload_1
      61: aload_2
      62: invokeinterface #13,  3           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.filterMustImplementFilter:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/IllegalArgumentException;
      67: athrow
      68: aload_2
      69: iconst_0
      70: anewarray     #14                 // class java/lang/Class
      73: invokevirtual #15                 // Method java/lang/Class.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      76: astore_3
      77: aload_3
      78: iconst_1
      79: invokevirtual #16                 // Method java/lang/reflect/Constructor.setAccessible:(Z)V
      82: aload_0
      83: new           #17                 // class io/undertow/servlet/util/ConstructorInstanceFactory
      86: dup
      87: aload_3
      88: invokespecial #18                 // Method io/undertow/servlet/util/ConstructorInstanceFactory."<init>":(Ljava/lang/reflect/Constructor;)V
      91: putfield      #19                 // Field instanceFactory:Lio/undertow/servlet/api/InstanceFactory;
      94: aload_0
      95: aload_1
      96: putfield      #20                 // Field name:Ljava/lang/String;
      99: aload_0
     100: aload_2
     101: putfield      #21                 // Field filterClass:Ljava/lang/Class;
     104: goto          120
     107: astore_3
     108: getstatic     #5                  // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
     111: ldc           #9                  // String Filter
     113: aload_2
     114: invokeinterface #23,  3           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.componentMustHaveDefaultConstructor:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/IllegalArgumentException;
     119: athrow
     120: return
    Exception table:
       from    to  target type
          68   104   107   Class java/lang/NoSuchMethodException

  public io.undertow.servlet.api.FilterInfo(java.lang.String, java.lang.Class<? extends javax.servlet.Filter>, io.undertow.servlet.api.InstanceFactory<? extends javax.servlet.Filter>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field initParams:Ljava/util/Map;
      15: aload_1
      16: ifnonnull     30
      19: getstatic     #5                  // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      22: ldc           #6                  // String name
      24: invokeinterface #7,  2            // InterfaceMethod io/undertow/servlet/UndertowServletMessages.paramCannotBeNull:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      29: athrow
      30: aload_2
      31: ifnonnull     48
      34: getstatic     #5                  // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      37: ldc           #8                  // String filterClass
      39: ldc           #9                  // String Filter
      41: aload_1
      42: invokeinterface #10,  4           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.paramCannotBeNull:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/IllegalArgumentException;
      47: athrow
      48: ldc           #11                 // class javax/servlet/Filter
      50: aload_2
      51: invokevirtual #12                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      54: ifne          68
      57: getstatic     #5                  // Field io/undertow/servlet/UndertowServletMessages.MESSAGES:Lio/undertow/servlet/UndertowServletMessages;
      60: aload_1
      61: aload_2
      62: invokeinterface #13,  3           // InterfaceMethod io/undertow/servlet/UndertowServletMessages.filterMustImplementFilter:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/IllegalArgumentException;
      67: athrow
      68: aload_0
      69: aload_3
      70: putfield      #19                 // Field instanceFactory:Lio/undertow/servlet/api/InstanceFactory;
      73: aload_0
      74: aload_1
      75: putfield      #20                 // Field name:Ljava/lang/String;
      78: aload_0
      79: aload_2
      80: putfield      #21                 // Field filterClass:Ljava/lang/Class;
      83: return

  public void validate();
    Code:
       0: return

  public io.undertow.servlet.api.FilterInfo clone();
    Code:
       0: new           #24                 // class io/undertow/servlet/api/FilterInfo
       3: dup
       4: aload_0
       5: getfield      #20                 // Field name:Ljava/lang/String;
       8: aload_0
       9: getfield      #21                 // Field filterClass:Ljava/lang/Class;
      12: aload_0
      13: getfield      #19                 // Field instanceFactory:Lio/undertow/servlet/api/InstanceFactory;
      16: invokespecial #25                 // Method "<init>":(Ljava/lang/String;Ljava/lang/Class;Lio/undertow/servlet/api/InstanceFactory;)V
      19: aload_0
      20: getfield      #26                 // Field asyncSupported:Z
      23: invokevirtual #27                 // Method setAsyncSupported:(Z)Lio/undertow/servlet/api/FilterInfo;
      26: astore_1
      27: aload_1
      28: getfield      #4                  // Field initParams:Ljava/util/Map;
      31: aload_0
      32: getfield      #4                  // Field initParams:Ljava/util/Map;
      35: invokeinterface #28,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      40: aload_1
      41: areturn

  public java.lang.Class<? extends javax.servlet.Filter> getFilterClass();
    Code:
       0: aload_0
       1: getfield      #21                 // Field filterClass:Ljava/lang/Class;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #20                 // Field name:Ljava/lang/String;
       4: areturn

  public io.undertow.servlet.api.InstanceFactory<? extends javax.servlet.Filter> getInstanceFactory();
    Code:
       0: aload_0
       1: getfield      #19                 // Field instanceFactory:Lio/undertow/servlet/api/InstanceFactory;
       4: areturn

  public void setInstanceFactory(io.undertow.servlet.api.InstanceFactory<? extends javax.servlet.Filter>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field instanceFactory:Lio/undertow/servlet/api/InstanceFactory;
       5: return

  public io.undertow.servlet.api.FilterInfo addInitParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field initParams:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #29,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public java.util.Map<java.lang.String, java.lang.String> getInitParams();
    Code:
       0: aload_0
       1: getfield      #4                  // Field initParams:Ljava/util/Map;
       4: invokestatic  #30                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: areturn

  public boolean isAsyncSupported();
    Code:
       0: aload_0
       1: getfield      #26                 // Field asyncSupported:Z
       4: ireturn

  public io.undertow.servlet.api.FilterInfo setAsyncSupported(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #26                 // Field asyncSupported:Z
       5: aload_0
       6: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method clone:()Lio/undertow/servlet/api/FilterInfo;
       4: areturn
}
