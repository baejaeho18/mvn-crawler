Compiled from "SavedRequest.java"
public class io.undertow.servlet.util.SavedRequest implements java.io.Serializable {
  private static final java.lang.String SESSION_KEY;

  private final byte[] data;

  private final int dataLength;

  private final io.undertow.util.HttpString method;

  private final java.lang.String requestPath;

  private final java.util.HashMap<io.undertow.util.HttpString, java.util.List<java.lang.String>> headerMap;

  public io.undertow.servlet.util.SavedRequest(byte[], int, io.undertow.util.HttpString, java.lang.String, io.undertow.util.HeaderMap);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field headerMap:Ljava/util/HashMap;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field data:[B
      20: aload_0
      21: iload_2
      22: putfield      #6                  // Field dataLength:I
      25: aload_0
      26: aload_3
      27: putfield      #7                  // Field method:Lio/undertow/util/HttpString;
      30: aload_0
      31: aload         4
      33: putfield      #8                  // Field requestPath:Ljava/lang/String;
      36: aload         5
      38: invokevirtual #9                  // Method io/undertow/util/HeaderMap.iterator:()Ljava/util/Iterator;
      41: astore        6
      43: aload         6
      45: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifeq          90
      53: aload         6
      55: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      60: checkcast     #12                 // class io/undertow/util/HeaderValues
      63: astore        7
      65: aload_0
      66: getfield      #4                  // Field headerMap:Ljava/util/HashMap;
      69: aload         7
      71: invokevirtual #13                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
      74: new           #14                 // class java/util/ArrayList
      77: dup
      78: aload         7
      80: invokespecial #15                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      83: invokevirtual #16                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      86: pop
      87: goto          43
      90: return

  public static void trySaveRequest(io.undertow.server.HttpServerExchange);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method io/undertow/server/HttpServerExchange.getConnection:()Lio/undertow/server/ServerConnection;
       4: invokevirtual #18                 // Method io/undertow/server/ServerConnection.getUndertowOptions:()Lorg/xnio/OptionMap;
       7: getstatic     #19                 // Field io/undertow/UndertowOptions.MAX_BUFFERED_REQUEST_SIZE:Lorg/xnio/Option;
      10: sipush        16384
      13: invokevirtual #20                 // Method org/xnio/OptionMap.get:(Lorg/xnio/Option;I)I
      16: istore_1
      17: iload_1
      18: ifle          332
      21: aload_0
      22: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.isRequestComplete:()Z
      25: ifne          332
      28: aload_0
      29: invokevirtual #22                 // Method io/undertow/server/HttpServerExchange.getRequestContentLength:()J
      32: lstore_2
      33: lload_2
      34: iload_1
      35: i2l
      36: lcmp
      37: ifle          55
      40: getstatic     #23                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      43: ldc           #24                 // String Request to %s was to large to save
      45: aload_0
      46: invokevirtual #25                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
      49: invokeinterface #26,  3           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      54: return
      55: iload_1
      56: newarray       byte
      58: astore        4
      60: iconst_0
      61: istore        5
      63: iconst_0
      64: istore        6
      66: aload_0
      67: invokevirtual #27                 // Method io/undertow/server/HttpServerExchange.getInputStream:()Ljava/io/InputStream;
      70: astore        7
      72: aload         7
      74: aload         4
      76: iload         5
      78: aload         4
      80: arraylength
      81: iload         5
      83: isub
      84: invokevirtual #28                 // Method java/io/InputStream.read:([BII)I
      87: dup
      88: istore        6
      90: ifle          121
      93: iload         5
      95: iload         6
      97: iadd
      98: istore        5
     100: iload         5
     102: iload_1
     103: if_icmpne     72
     106: getstatic     #23                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
     109: ldc           #24                 // String Request to %s was to large to save
     111: aload_0
     112: invokevirtual #25                 // Method io/undertow/server/HttpServerExchange.getRequestURI:()Ljava/lang/String;
     115: invokeinterface #26,  3           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
     120: return
     121: new           #29                 // class io/undertow/util/HeaderMap
     124: dup
     125: invokespecial #30                 // Method io/undertow/util/HeaderMap."<init>":()V
     128: astore        8
     130: aload_0
     131: invokevirtual #31                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     134: invokevirtual #9                  // Method io/undertow/util/HeaderMap.iterator:()Ljava/util/Iterator;
     137: astore        9
     139: aload         9
     141: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     146: ifeq          222
     149: aload         9
     151: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     156: checkcast     #12                 // class io/undertow/util/HeaderValues
     159: astore        10
     161: aload         10
     163: invokevirtual #13                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
     166: getstatic     #32                 // Field io/undertow/util/Headers.CONTENT_LENGTH:Lio/undertow/util/HttpString;
     169: invokevirtual #33                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
     172: ifne          139
     175: aload         10
     177: invokevirtual #13                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
     180: getstatic     #34                 // Field io/undertow/util/Headers.TRANSFER_ENCODING:Lio/undertow/util/HttpString;
     183: invokevirtual #33                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
     186: ifne          139
     189: aload         10
     191: invokevirtual #13                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
     194: getstatic     #35                 // Field io/undertow/util/Headers.CONNECTION:Lio/undertow/util/HttpString;
     197: invokevirtual #33                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
     200: ifeq          206
     203: goto          139
     206: aload         8
     208: aload         10
     210: invokevirtual #13                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
     213: aload         10
     215: invokevirtual #36                 // Method io/undertow/util/HeaderMap.putAll:(Lio/undertow/util/HttpString;Ljava/util/Collection;)Lio/undertow/util/HeaderMap;
     218: pop
     219: goto          139
     222: new           #37                 // class io/undertow/servlet/util/SavedRequest
     225: dup
     226: aload         4
     228: iload         5
     230: aload_0
     231: invokevirtual #38                 // Method io/undertow/server/HttpServerExchange.getRequestMethod:()Lio/undertow/util/HttpString;
     234: aload_0
     235: invokevirtual #39                 // Method io/undertow/server/HttpServerExchange.getRelativePath:()Ljava/lang/String;
     238: aload_0
     239: invokevirtual #31                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     242: invokespecial #40                 // Method "<init>":([BILio/undertow/util/HttpString;Ljava/lang/String;Lio/undertow/util/HeaderMap;)V
     245: astore        9
     247: aload_0
     248: getstatic     #41                 // Field io/undertow/servlet/handlers/ServletRequestContext.ATTACHMENT_KEY:Lio/undertow/util/AttachmentKey;
     251: invokevirtual #42                 // Method io/undertow/server/HttpServerExchange.getAttachment:(Lio/undertow/util/AttachmentKey;)Ljava/lang/Object;
     254: checkcast     #43                 // class io/undertow/servlet/handlers/ServletRequestContext
     257: astore        10
     259: aload         10
     261: invokevirtual #44                 // Method io/undertow/servlet/handlers/ServletRequestContext.getCurrentServletContext:()Lio/undertow/servlet/spec/ServletContextImpl;
     264: aload_0
     265: iconst_1
     266: invokevirtual #45                 // Method io/undertow/servlet/spec/ServletContextImpl.getSession:(Lio/undertow/server/HttpServerExchange;Z)Lio/undertow/servlet/spec/HttpSessionImpl;
     269: astore        11
     271: invokestatic  #46                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
     274: ifnonnull     287
     277: aload         11
     279: invokevirtual #47                 // Method io/undertow/servlet/spec/HttpSessionImpl.getSession:()Lio/undertow/server/session/Session;
     282: astore        12
     284: goto          304
     287: new           #48                 // class io/undertow/servlet/spec/HttpSessionImpl$UnwrapSessionAction
     290: dup
     291: aload         11
     293: invokespecial #49                 // Method io/undertow/servlet/spec/HttpSessionImpl$UnwrapSessionAction."<init>":(Ljavax/servlet/http/HttpSession;)V
     296: invokestatic  #50                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
     299: checkcast     #51                 // class io/undertow/server/session/Session
     302: astore        12
     304: aload         12
     306: getstatic     #52                 // Field SESSION_KEY:Ljava/lang/String;
     309: aload         9
     311: invokeinterface #53,  3           // InterfaceMethod io/undertow/server/session/Session.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
     316: pop
     317: goto          332
     320: astore        8
     322: getstatic     #55                 // Field io/undertow/UndertowLogger.REQUEST_IO_LOGGER:Lio/undertow/UndertowLogger;
     325: aload         8
     327: invokeinterface #56,  2           // InterfaceMethod io/undertow/UndertowLogger.ioException:(Ljava/io/IOException;)V
     332: return
    Exception table:
       from    to  target type
          72   120   320   Class java/io/IOException
         121   317   320   Class java/io/IOException

  public static void tryRestoreRequest(io.undertow.server.HttpServerExchange, javax.servlet.http.HttpSession);
    Code:
       0: aload_1
       1: instanceof    #57                 // class io/undertow/servlet/spec/HttpSessionImpl
       4: ifeq          262
       7: invokestatic  #46                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
      10: ifnonnull     24
      13: aload_1
      14: checkcast     #57                 // class io/undertow/servlet/spec/HttpSessionImpl
      17: invokevirtual #47                 // Method io/undertow/servlet/spec/HttpSessionImpl.getSession:()Lio/undertow/server/session/Session;
      20: astore_2
      21: goto          39
      24: new           #48                 // class io/undertow/servlet/spec/HttpSessionImpl$UnwrapSessionAction
      27: dup
      28: aload_1
      29: invokespecial #49                 // Method io/undertow/servlet/spec/HttpSessionImpl$UnwrapSessionAction."<init>":(Ljavax/servlet/http/HttpSession;)V
      32: invokestatic  #50                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      35: checkcast     #51                 // class io/undertow/server/session/Session
      38: astore_2
      39: aload_2
      40: getstatic     #52                 // Field SESSION_KEY:Ljava/lang/String;
      43: invokeinterface #58,  2           // InterfaceMethod io/undertow/server/session/Session.getAttribute:(Ljava/lang/String;)Ljava/lang/Object;
      48: checkcast     #37                 // class io/undertow/servlet/util/SavedRequest
      51: astore_3
      52: aload_3
      53: ifnull        262
      56: aload_3
      57: getfield      #8                  // Field requestPath:Ljava/lang/String;
      60: aload_0
      61: invokevirtual #39                 // Method io/undertow/server/HttpServerExchange.getRelativePath:()Ljava/lang/String;
      64: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      67: ifeq          262
      70: aload_0
      71: invokevirtual #21                 // Method io/undertow/server/HttpServerExchange.isRequestComplete:()Z
      74: ifeq          262
      77: getstatic     #23                 // Field io/undertow/UndertowLogger.REQUEST_LOGGER:Lio/undertow/UndertowLogger;
      80: ldc           #60                 // String restoring request body for request to %s
      82: aload_3
      83: getfield      #8                  // Field requestPath:Ljava/lang/String;
      86: invokeinterface #26,  3           // InterfaceMethod io/undertow/UndertowLogger.debugf:(Ljava/lang/String;Ljava/lang/Object;)V
      91: aload_0
      92: aload_3
      93: getfield      #7                  // Field method:Lio/undertow/util/HttpString;
      96: invokevirtual #61                 // Method io/undertow/server/HttpServerExchange.setRequestMethod:(Lio/undertow/util/HttpString;)Lio/undertow/server/HttpServerExchange;
      99: pop
     100: aload_0
     101: iconst_1
     102: anewarray     #62                 // class io/undertow/connector/PooledByteBuffer
     105: dup
     106: iconst_0
     107: new           #63                 // class io/undertow/util/ImmediatePooledByteBuffer
     110: dup
     111: aload_3
     112: getfield      #5                  // Field data:[B
     115: iconst_0
     116: aload_3
     117: getfield      #6                  // Field dataLength:I
     120: invokestatic  #64                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
     123: invokespecial #65                 // Method io/undertow/util/ImmediatePooledByteBuffer."<init>":(Ljava/nio/ByteBuffer;)V
     126: aastore
     127: invokestatic  #66                 // Method io/undertow/server/Connectors.ungetRequestBytes:(Lio/undertow/server/HttpServerExchange;[Lio/undertow/connector/PooledByteBuffer;)V
     130: aload_2
     131: getstatic     #52                 // Field SESSION_KEY:Ljava/lang/String;
     134: invokeinterface #67,  2           // InterfaceMethod io/undertow/server/session/Session.removeAttribute:(Ljava/lang/String;)Ljava/lang/Object;
     139: pop
     140: aload_0
     141: invokevirtual #31                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     144: invokevirtual #9                  // Method io/undertow/util/HeaderMap.iterator:()Ljava/util/Iterator;
     147: astore        4
     149: aload         4
     151: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     156: ifeq          195
     159: aload         4
     161: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     166: checkcast     #12                 // class io/undertow/util/HeaderValues
     169: astore        5
     171: aload         5
     173: invokevirtual #13                 // Method io/undertow/util/HeaderValues.getHeaderName:()Lio/undertow/util/HttpString;
     176: getstatic     #35                 // Field io/undertow/util/Headers.CONNECTION:Lio/undertow/util/HttpString;
     179: invokevirtual #33                 // Method io/undertow/util/HttpString.equals:(Lio/undertow/util/HttpString;)Z
     182: ifne          192
     185: aload         4
     187: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.remove:()V
     192: goto          149
     195: aload_3
     196: getfield      #4                  // Field headerMap:Ljava/util/HashMap;
     199: invokevirtual #69                 // Method java/util/HashMap.entrySet:()Ljava/util/Set;
     202: invokeinterface #70,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     207: astore        5
     209: aload         5
     211: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     216: ifeq          262
     219: aload         5
     221: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     226: checkcast     #71                 // class java/util/Map$Entry
     229: astore        6
     231: aload_0
     232: invokevirtual #31                 // Method io/undertow/server/HttpServerExchange.getRequestHeaders:()Lio/undertow/util/HeaderMap;
     235: aload         6
     237: invokeinterface #72,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     242: checkcast     #73                 // class io/undertow/util/HttpString
     245: aload         6
     247: invokeinterface #74,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     252: checkcast     #75                 // class java/util/Collection
     255: invokevirtual #36                 // Method io/undertow/util/HeaderMap.putAll:(Lio/undertow/util/HttpString;Ljava/util/Collection;)Lio/undertow/util/HeaderMap;
     258: pop
     259: goto          209
     262: return

  static {};
    Code:
       0: ldc           #37                 // class io/undertow/servlet/util/SavedRequest
       2: invokevirtual #76                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: putstatic     #52                 // Field SESSION_KEY:Ljava/lang/String;
       8: return
}
