Compiled from "OpenSSLPrivateKeyDecoder.java"
public class org.cryptacular.asn.OpenSSLPrivateKeyDecoder extends org.cryptacular.asn.AbstractPrivateKeyDecoder<org.bouncycastle.crypto.params.AsymmetricKeyParameter> {
  public org.cryptacular.asn.OpenSSLPrivateKeyDecoder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/cryptacular/asn/AbstractPrivateKeyDecoder."<init>":()V
       4: return

  protected byte[] decryptKey(byte[], char[]);
    Code:
       0: new           #2                  // class java/lang/String
       3: dup
       4: aload_1
       5: getstatic     #3                  // Field org/cryptacular/util/ByteUtil.ASCII_CHARSET:Ljava/nio/charset/Charset;
       8: invokespecial #4                  // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      11: astore_3
      12: aload_3
      13: ldc           #5                  // String DEK-Info:
      15: invokevirtual #6                  // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      18: istore        4
      20: aload_3
      21: bipush        10
      23: iload         4
      25: invokevirtual #7                  // Method java/lang/String.indexOf:(II)I
      28: istore        5
      30: aload_3
      31: iload         4
      33: bipush        10
      35: iadd
      36: iload         5
      38: invokevirtual #8                  // Method java/lang/String.substring:(II)Ljava/lang/String;
      41: ldc           #9                  // String ,
      43: invokevirtual #10                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      46: astore        6
      48: aload         6
      50: iconst_0
      51: aaload
      52: astore        7
      54: aload         6
      56: iconst_1
      57: aaload
      58: invokestatic  #11                 // Method org/cryptacular/util/CodecUtil.hex:(Ljava/lang/CharSequence;)[B
      61: astore        8
      63: aload_1
      64: invokestatic  #12                 // Method org/cryptacular/util/PemUtil.decode:([B)[B
      67: astore        9
      69: new           #13                 // class org/cryptacular/pbe/OpenSSLEncryptionScheme
      72: dup
      73: aload         7
      75: invokestatic  #14                 // Method org/cryptacular/pbe/OpenSSLAlgorithm.fromAlgorithmId:(Ljava/lang/String;)Lorg/cryptacular/pbe/OpenSSLAlgorithm;
      78: aload         8
      80: aload_2
      81: invokespecial #15                 // Method org/cryptacular/pbe/OpenSSLEncryptionScheme."<init>":(Lorg/cryptacular/pbe/OpenSSLAlgorithm;[B[C)V
      84: aload         9
      86: invokevirtual #16                 // Method org/cryptacular/pbe/OpenSSLEncryptionScheme.decrypt:([B)[B
      89: areturn

  protected org.bouncycastle.crypto.params.AsymmetricKeyParameter decodeASN1(byte[]);
    Code:
       0: aload_1
       1: invokestatic  #17                 // Method org/bouncycastle/asn1/ASN1Primitive.fromByteArray:([B)Lorg/bouncycastle/asn1/ASN1Primitive;
       4: astore_2
       5: goto          19
       8: astore_3
       9: new           #19                 // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #20                 // String Invalid encoded key
      15: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_2
      20: instanceof    #22                 // class org/bouncycastle/asn1/ASN1ObjectIdentifier
      23: ifeq          131
      26: aload_2
      27: invokestatic  #23                 // Method org/bouncycastle/asn1/ASN1ObjectIdentifier.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      30: astore        4
      32: aload_1
      33: iconst_1
      34: baload
      35: istore        5
      37: aload_1
      38: arraylength
      39: iload         5
      41: isub
      42: iconst_2
      43: isub
      44: newarray       byte
      46: astore        6
      48: aload_1
      49: iload         5
      51: iconst_2
      52: iadd
      53: aload         6
      55: iconst_0
      56: aload         6
      58: arraylength
      59: invokestatic  #24                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      62: aload         6
      64: invokestatic  #25                 // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      67: astore        7
      69: aload         4
      71: invokestatic  #26                 // Method org/bouncycastle/jcajce/provider/asymmetric/util/ECUtil.getNamedCurveByOid:(Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;)Lorg/bouncycastle/asn1/x9/X9ECParameters;
      74: astore        8
      76: new           #27                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
      79: dup
      80: aload         7
      82: iconst_0
      83: invokevirtual #28                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      86: invokestatic  #29                 // Method org/bouncycastle/asn1/ASN1Integer.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Integer;
      89: invokevirtual #30                 // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
      92: new           #31                 // class org/bouncycastle/crypto/params/ECDomainParameters
      95: dup
      96: aload         8
      98: invokevirtual #32                 // Method org/bouncycastle/asn1/x9/X9ECParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
     101: aload         8
     103: invokevirtual #33                 // Method org/bouncycastle/asn1/x9/X9ECParameters.getG:()Lorg/bouncycastle/math/ec/ECPoint;
     106: aload         8
     108: invokevirtual #34                 // Method org/bouncycastle/asn1/x9/X9ECParameters.getN:()Ljava/math/BigInteger;
     111: aload         8
     113: invokevirtual #35                 // Method org/bouncycastle/asn1/x9/X9ECParameters.getH:()Ljava/math/BigInteger;
     116: aload         8
     118: invokevirtual #36                 // Method org/bouncycastle/asn1/x9/X9ECParameters.getSeed:()[B
     121: invokespecial #37                 // Method org/bouncycastle/crypto/params/ECDomainParameters."<init>":(Lorg/bouncycastle/math/ec/ECCurve;Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;Ljava/math/BigInteger;[B)V
     124: invokespecial #38                 // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters."<init>":(Ljava/math/BigInteger;Lorg/bouncycastle/crypto/params/ECDomainParameters;)V
     127: astore_3
     128: goto          431
     131: aload_2
     132: invokestatic  #25                 // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
     135: astore        4
     137: aload         4
     139: invokevirtual #39                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
     142: bipush        9
     144: if_icmpne     257
     147: new           #40                 // class org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters
     150: dup
     151: aload         4
     153: iconst_1
     154: invokevirtual #28                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     157: invokestatic  #29                 // Method org/bouncycastle/asn1/ASN1Integer.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Integer;
     160: invokevirtual #30                 // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
     163: aload         4
     165: iconst_2
     166: invokevirtual #28                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     169: invokestatic  #29                 // Method org/bouncycastle/asn1/ASN1Integer.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Integer;
     172: invokevirtual #30                 // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
     175: aload         4
     177: iconst_3
     178: invokevirtual #28                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     181: invokestatic  #29                 // Method org/bouncycastle/asn1/ASN1Integer.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Integer;
     184: invokevirtual #30                 // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
     187: aload         4
     189: iconst_4
     190: invokevirtual #28                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     193: invokestatic  #29                 // Method org/bouncycastle/asn1/ASN1Integer.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Integer;
     196: invokevirtual #30                 // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
     199: aload         4
     201: iconst_5
     202: invokevirtual #28                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     205: invokestatic  #29                 // Method org/bouncycastle/asn1/ASN1Integer.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Integer;
     208: invokevirtual #30                 // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
     211: aload         4
     213: bipush        6
     215: invokevirtual #28                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     218: invokestatic  #29                 // Method org/bouncycastle/asn1/ASN1Integer.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Integer;
     221: invokevirtual #30                 // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
     224: aload         4
     226: bipush        7
     228: invokevirtual #28                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     231: invokestatic  #29                 // Method org/bouncycastle/asn1/ASN1Integer.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Integer;
     234: invokevirtual #30                 // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
     237: aload         4
     239: bipush        8
     241: invokevirtual #28                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     244: invokestatic  #29                 // Method org/bouncycastle/asn1/ASN1Integer.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Integer;
     247: invokevirtual #30                 // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
     250: invokespecial #41                 // Method org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V
     253: astore_3
     254: goto          431
     257: aload         4
     259: invokevirtual #39                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
     262: bipush        6
     264: if_icmpne     333
     267: new           #42                 // class org/bouncycastle/crypto/params/DSAPrivateKeyParameters
     270: dup
     271: aload         4
     273: iconst_5
     274: invokevirtual #28                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     277: invokestatic  #29                 // Method org/bouncycastle/asn1/ASN1Integer.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Integer;
     280: invokevirtual #30                 // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
     283: new           #43                 // class org/bouncycastle/crypto/params/DSAParameters
     286: dup
     287: aload         4
     289: iconst_1
     290: invokevirtual #28                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     293: invokestatic  #29                 // Method org/bouncycastle/asn1/ASN1Integer.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Integer;
     296: invokevirtual #30                 // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
     299: aload         4
     301: iconst_2
     302: invokevirtual #28                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     305: invokestatic  #29                 // Method org/bouncycastle/asn1/ASN1Integer.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Integer;
     308: invokevirtual #30                 // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
     311: aload         4
     313: iconst_3
     314: invokevirtual #28                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     317: invokestatic  #29                 // Method org/bouncycastle/asn1/ASN1Integer.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Integer;
     320: invokevirtual #30                 // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
     323: invokespecial #44                 // Method org/bouncycastle/crypto/params/DSAParameters."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V
     326: invokespecial #45                 // Method org/bouncycastle/crypto/params/DSAPrivateKeyParameters."<init>":(Ljava/math/BigInteger;Lorg/bouncycastle/crypto/params/DSAParameters;)V
     329: astore_3
     330: goto          431
     333: aload         4
     335: invokevirtual #39                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
     338: iconst_4
     339: if_icmpne     421
     342: aload         4
     344: iconst_2
     345: invokevirtual #28                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     348: invokestatic  #46                 // Method org/bouncycastle/asn1/ASN1TaggedObject.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1TaggedObject;
     351: invokevirtual #47                 // Method org/bouncycastle/asn1/ASN1TaggedObject.getObject:()Lorg/bouncycastle/asn1/ASN1Primitive;
     354: invokestatic  #48                 // Method org/bouncycastle/asn1/x9/X9ECParameters.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x9/X9ECParameters;
     357: astore        5
     359: new           #27                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
     362: dup
     363: new           #49                 // class java/math/BigInteger
     366: dup
     367: aload         4
     369: iconst_1
     370: invokevirtual #28                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     373: invokestatic  #50                 // Method org/bouncycastle/asn1/ASN1OctetString.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1OctetString;
     376: invokevirtual #51                 // Method org/bouncycastle/asn1/ASN1OctetString.getOctets:()[B
     379: invokespecial #52                 // Method java/math/BigInteger."<init>":([B)V
     382: new           #31                 // class org/bouncycastle/crypto/params/ECDomainParameters
     385: dup
     386: aload         5
     388: invokevirtual #32                 // Method org/bouncycastle/asn1/x9/X9ECParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
     391: aload         5
     393: invokevirtual #33                 // Method org/bouncycastle/asn1/x9/X9ECParameters.getG:()Lorg/bouncycastle/math/ec/ECPoint;
     396: aload         5
     398: invokevirtual #34                 // Method org/bouncycastle/asn1/x9/X9ECParameters.getN:()Ljava/math/BigInteger;
     401: aload         5
     403: invokevirtual #35                 // Method org/bouncycastle/asn1/x9/X9ECParameters.getH:()Ljava/math/BigInteger;
     406: aload         5
     408: invokevirtual #36                 // Method org/bouncycastle/asn1/x9/X9ECParameters.getSeed:()[B
     411: invokespecial #37                 // Method org/bouncycastle/crypto/params/ECDomainParameters."<init>":(Lorg/bouncycastle/math/ec/ECCurve;Lorg/bouncycastle/math/ec/ECPoint;Ljava/math/BigInteger;Ljava/math/BigInteger;[B)V
     414: invokespecial #38                 // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters."<init>":(Ljava/math/BigInteger;Lorg/bouncycastle/crypto/params/ECDomainParameters;)V
     417: astore_3
     418: goto          431
     421: new           #19                 // class java/lang/IllegalArgumentException
     424: dup
     425: ldc           #53                 // String Invalid OpenSSL traditional private key format.
     427: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     430: athrow
     431: aload_3
     432: areturn
    Exception table:
       from    to  target type
           0     5     8   Class java/lang/Exception

  protected java.lang.Object decodeASN1(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #54                 // Method decodeASN1:([B)Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
       5: areturn
}
