Compiled from "CiphertextHeader.java"
public class org.cryptacular.CiphertextHeader {
  private final byte[] nonce;

  private java.lang.String keyName;

  private int length;

  public org.cryptacular.CiphertextHeader(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":([BLjava/lang/String;)V
       6: return

  public org.cryptacular.CiphertextHeader(byte[], java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field nonce:[B
       9: aload_0
      10: bipush        8
      12: aload_1
      13: arraylength
      14: iadd
      15: putfield      #4                  // Field length:I
      18: aload_2
      19: ifnull        43
      22: aload_0
      23: dup
      24: getfield      #4                  // Field length:I
      27: iconst_4
      28: aload_2
      29: invokevirtual #5                  // Method java/lang/String.getBytes:()[B
      32: arraylength
      33: iadd
      34: iadd
      35: putfield      #4                  // Field length:I
      38: aload_0
      39: aload_2
      40: putfield      #6                  // Field keyName:Ljava/lang/String;
      43: return

  public int getLength();
    Code:
       0: aload_0
       1: getfield      #4                  // Field length:I
       4: ireturn

  public byte[] getNonce();
    Code:
       0: aload_0
       1: getfield      #3                  // Field nonce:[B
       4: areturn

  public java.lang.String getKeyName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field keyName:Ljava/lang/String;
       4: areturn

  public byte[] encode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field length:I
       4: invokestatic  #7                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       7: astore_1
       8: aload_1
       9: getstatic     #8                  // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
      12: invokevirtual #9                  // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      15: pop
      16: aload_1
      17: aload_0
      18: getfield      #4                  // Field length:I
      21: invokevirtual #10                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      24: pop
      25: aload_1
      26: aload_0
      27: getfield      #3                  // Field nonce:[B
      30: arraylength
      31: invokevirtual #10                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      34: pop
      35: aload_1
      36: aload_0
      37: getfield      #3                  // Field nonce:[B
      40: invokevirtual #11                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      43: pop
      44: aload_0
      45: getfield      #6                  // Field keyName:Ljava/lang/String;
      48: ifnull        72
      51: aload_0
      52: getfield      #6                  // Field keyName:Ljava/lang/String;
      55: invokevirtual #5                  // Method java/lang/String.getBytes:()[B
      58: astore_2
      59: aload_1
      60: aload_2
      61: arraylength
      62: invokevirtual #10                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      65: pop
      66: aload_1
      67: aload_2
      68: invokevirtual #11                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      71: pop
      72: aload_1
      73: invokevirtual #12                 // Method java/nio/ByteBuffer.array:()[B
      76: areturn

  public static org.cryptacular.CiphertextHeader decode(byte[]);
    Code:
       0: aload_0
       1: invokestatic  #13                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_1
       6: getstatic     #8                  // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
       9: invokevirtual #9                  // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      12: pop
      13: aload_1
      14: invokevirtual #14                 // Method java/nio/ByteBuffer.getInt:()I
      17: istore_2
      18: aload_1
      19: invokevirtual #14                 // Method java/nio/ByteBuffer.getInt:()I
      22: newarray       byte
      24: astore_3
      25: aload_1
      26: aload_3
      27: invokevirtual #15                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      30: pop
      31: aconst_null
      32: astore        4
      34: iload_2
      35: aload_3
      36: arraylength
      37: bipush        8
      39: iadd
      40: if_icmple     69
      43: aload_1
      44: invokevirtual #14                 // Method java/nio/ByteBuffer.getInt:()I
      47: newarray       byte
      49: astore        5
      51: aload_1
      52: aload         5
      54: invokevirtual #15                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      57: pop
      58: new           #16                 // class java/lang/String
      61: dup
      62: aload         5
      64: invokespecial #17                 // Method java/lang/String."<init>":([B)V
      67: astore        4
      69: new           #18                 // class org/cryptacular/CiphertextHeader
      72: dup
      73: aload_3
      74: aload         4
      76: invokespecial #1                  // Method "<init>":([BLjava/lang/String;)V
      79: areturn

  public static org.cryptacular.CiphertextHeader decode(java.io.InputStream);
    Code:
       0: aload_0
       1: invokestatic  #19                 // Method org/cryptacular/util/ByteUtil.readInt:(Ljava/io/InputStream;)I
       4: istore_1
       5: aload_0
       6: invokestatic  #19                 // Method org/cryptacular/util/ByteUtil.readInt:(Ljava/io/InputStream;)I
       9: newarray       byte
      11: astore_2
      12: aload_0
      13: aload_2
      14: invokevirtual #20                 // Method java/io/InputStream.read:([B)I
      17: pop
      18: goto          33
      21: astore_3
      22: new           #22                 // class java/lang/RuntimeException
      25: dup
      26: ldc           #23                 // String Error reading from stream
      28: aload_3
      29: invokespecial #24                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      32: athrow
      33: aconst_null
      34: astore_3
      35: iload_1
      36: aload_2
      37: arraylength
      38: bipush        8
      40: iadd
      41: if_icmple     86
      44: aload_0
      45: invokestatic  #19                 // Method org/cryptacular/util/ByteUtil.readInt:(Ljava/io/InputStream;)I
      48: newarray       byte
      50: astore        4
      52: aload_0
      53: aload         4
      55: invokevirtual #20                 // Method java/io/InputStream.read:([B)I
      58: pop
      59: goto          76
      62: astore        5
      64: new           #22                 // class java/lang/RuntimeException
      67: dup
      68: ldc           #23                 // String Error reading from stream
      70: aload         5
      72: invokespecial #24                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      75: athrow
      76: new           #16                 // class java/lang/String
      79: dup
      80: aload         4
      82: invokespecial #17                 // Method java/lang/String."<init>":([B)V
      85: astore_3
      86: new           #18                 // class org/cryptacular/CiphertextHeader
      89: dup
      90: aload_2
      91: aload_3
      92: invokespecial #1                  // Method "<init>":([BLjava/lang/String;)V
      95: areturn
    Exception table:
       from    to  target type
          12    18    21   Class java/io/IOException
          52    59    62   Class java/io/IOException
}
