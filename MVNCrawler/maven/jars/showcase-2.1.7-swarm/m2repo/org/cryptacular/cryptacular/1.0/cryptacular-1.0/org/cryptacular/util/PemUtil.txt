Compiled from "PemUtil.java"
public final class org.cryptacular.util.PemUtil {
  public static final int LINE_LENGTH;

  public static final java.lang.String HEADER_BEGIN;

  public static final java.lang.String FOOTER_END;

  public static final java.lang.String PROC_TYPE;

  public static final java.lang.String DEK_INFO;

  private org.cryptacular.util.PemUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean isPem(byte[]);
    Code:
       0: new           #2                  // class java/lang/String
       3: dup
       4: aload_0
       5: iconst_0
       6: bipush        10
       8: getstatic     #3                  // Field org/cryptacular/util/ByteUtil.ASCII_CHARSET:Ljava/nio/charset/Charset;
      11: invokespecial #4                  // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
      14: invokevirtual #5                  // Method java/lang/String.trim:()Ljava/lang/String;
      17: astore_1
      18: aload_1
      19: ldc           #6                  // String -----BEGIN
      21: invokevirtual #7                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      24: ifne          77
      27: aload_1
      28: ldc           #8                  // String Proc-Type:
      30: invokevirtual #7                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      33: ifne          77
      36: iconst_0
      37: istore_2
      38: iload_2
      39: bipush        64
      41: if_icmpge     77
      44: aload_0
      45: iload_2
      46: baload
      47: invokestatic  #9                  // Method isBase64Char:(B)Z
      50: ifne          71
      53: iload_2
      54: bipush        61
      56: if_icmple     69
      59: aload_0
      60: iload_2
      61: baload
      62: bipush        61
      64: if_icmpeq     71
      67: iconst_0
      68: ireturn
      69: iconst_0
      70: ireturn
      71: iinc          2, 1
      74: goto          38
      77: iconst_1
      78: ireturn

  public static boolean isBase64Char(byte);
    Code:
       0: iload_0
       1: bipush        47
       3: if_icmplt     36
       6: iload_0
       7: bipush        122
       9: if_icmpgt     36
      12: iload_0
      13: bipush        57
      15: if_icmple     24
      18: iload_0
      19: bipush        65
      21: if_icmplt     36
      24: iload_0
      25: bipush        90
      27: if_icmple     42
      30: iload_0
      31: bipush        97
      33: if_icmpge     42
      36: iload_0
      37: bipush        43
      39: if_icmpne     46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  public static byte[] decode(byte[]);
    Code:
       0: new           #2                  // class java/lang/String
       3: dup
       4: aload_0
       5: getstatic     #3                  // Field org/cryptacular/util/ByteUtil.ASCII_CHARSET:Ljava/nio/charset/Charset;
       8: invokespecial #10                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      11: invokestatic  #11                 // Method decode:(Ljava/lang/String;)[B
      14: areturn

  public static byte[] decode(java.lang.String);
    Code:
       0: sipush        128
       3: invokestatic  #12                 // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
       6: astore_1
       7: aload_0
       8: invokestatic  #13                 // Method java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
      11: astore_2
      12: aload_0
      13: invokevirtual #14                 // Method java/lang/String.length:()I
      16: invokestatic  #12                 // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
      19: astore_3
      20: aload_2
      21: invokevirtual #15                 // Method java/nio/CharBuffer.hasRemaining:()Z
      24: ifeq          78
      27: aload_2
      28: invokevirtual #16                 // Method java/nio/CharBuffer.get:()C
      31: istore        4
      33: iload         4
      35: bipush        13
      37: if_icmpne     53
      40: aload_2
      41: invokevirtual #16                 // Method java/nio/CharBuffer.get:()C
      44: pop
      45: aload_1
      46: aload_3
      47: invokestatic  #17                 // Method writeLine:(Ljava/nio/CharBuffer;Ljava/nio/CharBuffer;)V
      50: goto          20
      53: iload         4
      55: bipush        10
      57: if_icmpne     68
      60: aload_1
      61: aload_3
      62: invokestatic  #17                 // Method writeLine:(Ljava/nio/CharBuffer;Ljava/nio/CharBuffer;)V
      65: goto          20
      68: aload_1
      69: iload         4
      71: invokevirtual #18                 // Method java/nio/CharBuffer.put:(C)Ljava/nio/CharBuffer;
      74: pop
      75: goto          20
      78: aload_1
      79: invokevirtual #15                 // Method java/nio/CharBuffer.hasRemaining:()Z
      82: ifeq          90
      85: aload_1
      86: aload_3
      87: invokestatic  #17                 // Method writeLine:(Ljava/nio/CharBuffer;Ljava/nio/CharBuffer;)V
      90: aload_3
      91: invokevirtual #19                 // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
      94: pop
      95: aload_3
      96: invokestatic  #20                 // Method org/cryptacular/util/CodecUtil.b64:(Ljava/lang/CharSequence;)[B
      99: areturn

  private static void writeLine(java.nio.CharBuffer, java.nio.CharBuffer);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
       4: invokevirtual #21                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: astore_2
       8: aload_2
       9: ldc           #6                  // String -----BEGIN
      11: invokevirtual #7                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      14: ifne          60
      17: aload_2
      18: ldc           #22                 // String -----END
      20: invokevirtual #7                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      23: ifne          60
      26: aload_2
      27: ldc           #8                  // String Proc-Type:
      29: invokevirtual #7                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      32: ifne          60
      35: aload_2
      36: ldc           #23                 // String DEK-Info:
      38: invokevirtual #7                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      41: ifne          60
      44: aload_2
      45: invokevirtual #5                  // Method java/lang/String.trim:()Ljava/lang/String;
      48: invokevirtual #14                 // Method java/lang/String.length:()I
      51: ifeq          60
      54: aload_1
      55: aload_0
      56: invokevirtual #24                 // Method java/nio/CharBuffer.put:(Ljava/nio/CharBuffer;)Ljava/nio/CharBuffer;
      59: pop
      60: aload_0
      61: invokevirtual #25                 // Method java/nio/CharBuffer.clear:()Ljava/nio/Buffer;
      64: pop
      65: return
}
