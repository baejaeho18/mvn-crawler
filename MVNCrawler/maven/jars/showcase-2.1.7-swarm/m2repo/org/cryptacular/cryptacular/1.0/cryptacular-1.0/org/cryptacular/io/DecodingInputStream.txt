Compiled from "DecodingInputStream.java"
public class org.cryptacular.io.DecodingInputStream extends java.io.FilterInputStream {
  private final org.cryptacular.codec.Decoder decoder;

  private final java.io.InputStreamReader reader;

  private java.nio.CharBuffer input;

  private java.nio.ByteBuffer output;

  public org.cryptacular.io.DecodingInputStream(java.io.InputStream, org.cryptacular.codec.Decoder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method java/io/FilterInputStream."<init>":(Ljava/io/InputStream;)V
       5: aload_2
       6: ifnonnull     19
       9: new           #2                  // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #3                  // String Decoder cannot be null.
      15: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field decoder:Lorg/cryptacular/codec/Decoder;
      24: aload_0
      25: new           #6                  // class java/io/InputStreamReader
      28: dup
      29: aload_1
      30: invokespecial #7                  // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
      33: putfield      #8                  // Field reader:Ljava/io/InputStreamReader;
      36: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: newarray       byte
       4: invokevirtual #9                  // Method read:([B)I
       7: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #10                 // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_3
       2: iload_2
       3: isub
       4: invokespecial #11                 // Method prepareInputBuffer:(I)V
       7: aload_0
       8: invokespecial #12                 // Method prepareOutputBuffer:()V
      11: aload_0
      12: getfield      #8                  // Field reader:Ljava/io/InputStreamReader;
      15: aload_0
      16: getfield      #13                 // Field input:Ljava/nio/CharBuffer;
      19: invokevirtual #14                 // Method java/io/InputStreamReader.read:(Ljava/nio/CharBuffer;)I
      22: ifge          50
      25: aload_0
      26: getfield      #5                  // Field decoder:Lorg/cryptacular/codec/Decoder;
      29: aload_0
      30: getfield      #15                 // Field output:Ljava/nio/ByteBuffer;
      33: invokeinterface #16,  2           // InterfaceMethod org/cryptacular/codec/Decoder.finalize:(Ljava/nio/ByteBuffer;)V
      38: aload_0
      39: getfield      #15                 // Field output:Ljava/nio/ByteBuffer;
      42: invokevirtual #17                 // Method java/nio/ByteBuffer.position:()I
      45: ifne          75
      48: iconst_m1
      49: ireturn
      50: aload_0
      51: getfield      #13                 // Field input:Ljava/nio/CharBuffer;
      54: invokevirtual #18                 // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
      57: pop
      58: aload_0
      59: getfield      #5                  // Field decoder:Lorg/cryptacular/codec/Decoder;
      62: aload_0
      63: getfield      #13                 // Field input:Ljava/nio/CharBuffer;
      66: aload_0
      67: getfield      #15                 // Field output:Ljava/nio/ByteBuffer;
      70: invokeinterface #19,  3           // InterfaceMethod org/cryptacular/codec/Decoder.decode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)V
      75: aload_0
      76: getfield      #15                 // Field output:Ljava/nio/ByteBuffer;
      79: invokevirtual #20                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      82: pop
      83: aload_0
      84: getfield      #15                 // Field output:Ljava/nio/ByteBuffer;
      87: aload_1
      88: iload_2
      89: aload_0
      90: getfield      #15                 // Field output:Ljava/nio/ByteBuffer;
      93: invokevirtual #21                 // Method java/nio/ByteBuffer.limit:()I
      96: invokevirtual #22                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      99: pop
     100: aload_0
     101: getfield      #15                 // Field output:Ljava/nio/ByteBuffer;
     104: invokevirtual #17                 // Method java/nio/ByteBuffer.position:()I
     107: ireturn

  public static org.cryptacular.io.DecodingInputStream base64(java.io.InputStream);
    Code:
       0: new           #23                 // class org/cryptacular/io/DecodingInputStream
       3: dup
       4: aload_0
       5: new           #24                 // class org/cryptacular/codec/Base64Decoder
       8: dup
       9: invokespecial #25                 // Method org/cryptacular/codec/Base64Decoder."<init>":()V
      12: invokespecial #26                 // Method "<init>":(Ljava/io/InputStream;Lorg/cryptacular/codec/Decoder;)V
      15: areturn

  public static org.cryptacular.io.DecodingInputStream hex(java.io.InputStream);
    Code:
       0: new           #23                 // class org/cryptacular/io/DecodingInputStream
       3: dup
       4: aload_0
       5: new           #27                 // class org/cryptacular/codec/HexDecoder
       8: dup
       9: invokespecial #28                 // Method org/cryptacular/codec/HexDecoder."<init>":()V
      12: invokespecial #26                 // Method "<init>":(Ljava/io/InputStream;Lorg/cryptacular/codec/Decoder;)V
      15: areturn

  private void prepareInputBuffer(int);
    Code:
       0: aload_0
       1: getfield      #13                 // Field input:Ljava/nio/CharBuffer;
       4: ifnull        18
       7: aload_0
       8: getfield      #13                 // Field input:Ljava/nio/CharBuffer;
      11: invokevirtual #29                 // Method java/nio/CharBuffer.capacity:()I
      14: iload_1
      15: if_icmpge     29
      18: aload_0
      19: iload_1
      20: invokestatic  #30                 // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
      23: putfield      #13                 // Field input:Ljava/nio/CharBuffer;
      26: goto          37
      29: aload_0
      30: getfield      #13                 // Field input:Ljava/nio/CharBuffer;
      33: invokevirtual #31                 // Method java/nio/CharBuffer.clear:()Ljava/nio/Buffer;
      36: pop
      37: return

  private void prepareOutputBuffer();
    Code:
       0: aload_0
       1: getfield      #5                  // Field decoder:Lorg/cryptacular/codec/Decoder;
       4: aload_0
       5: getfield      #13                 // Field input:Ljava/nio/CharBuffer;
       8: invokevirtual #29                 // Method java/nio/CharBuffer.capacity:()I
      11: invokeinterface #32,  2           // InterfaceMethod org/cryptacular/codec/Decoder.outputSize:(I)I
      16: istore_1
      17: aload_0
      18: getfield      #15                 // Field output:Ljava/nio/ByteBuffer;
      21: ifnull        35
      24: aload_0
      25: getfield      #15                 // Field output:Ljava/nio/ByteBuffer;
      28: invokevirtual #33                 // Method java/nio/ByteBuffer.capacity:()I
      31: iload_1
      32: if_icmpge     46
      35: aload_0
      36: iload_1
      37: invokestatic  #34                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      40: putfield      #15                 // Field output:Ljava/nio/ByteBuffer;
      43: goto          54
      46: aload_0
      47: getfield      #15                 // Field output:Ljava/nio/ByteBuffer;
      50: invokevirtual #35                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      53: pop
      54: return
}
