Compiled from "EncryptedNonce.java"
public class org.cryptacular.generator.sp80038a.EncryptedNonce implements org.cryptacular.generator.Nonce {
  private final org.bouncycastle.crypto.BlockCipher cipher;

  private final javax.crypto.SecretKey key;

  public org.cryptacular.generator.sp80038a.EncryptedNonce(org.cryptacular.spec.Spec<org.bouncycastle.crypto.BlockCipher>, javax.crypto.SecretKey);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1,  1            // InterfaceMethod org/cryptacular/spec/Spec.newInstance:()Ljava/lang/Object;
       7: checkcast     #2                  // class org/bouncycastle/crypto/BlockCipher
      10: aload_2
      11: invokespecial #3                  // Method "<init>":(Lorg/bouncycastle/crypto/BlockCipher;Ljavax/crypto/SecretKey;)V
      14: return

  public org.cryptacular.generator.sp80038a.EncryptedNonce(org.bouncycastle.crypto.BlockCipher, javax.crypto.SecretKey);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       9: aload_0
      10: aload_2
      11: putfield      #6                  // Field key:Ljavax/crypto/SecretKey;
      14: return

  public byte[] generate() throws org.cryptacular.generator.LimitException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       4: invokeinterface #7,  1            // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
       9: newarray       byte
      11: astore_1
      12: aload_1
      13: arraylength
      14: invokestatic  #8                  // Method org/cryptacular/util/NonceUtil.timestampNonce:(I)[B
      17: astore_2
      18: aload_0
      19: getfield      #5                  // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      22: dup
      23: astore_3
      24: monitorenter
      25: aload_0
      26: getfield      #5                  // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      29: iconst_1
      30: new           #9                  // class org/bouncycastle/crypto/params/KeyParameter
      33: dup
      34: aload_0
      35: getfield      #6                  // Field key:Ljavax/crypto/SecretKey;
      38: invokeinterface #10,  1           // InterfaceMethod javax/crypto/SecretKey.getEncoded:()[B
      43: invokespecial #11                 // Method org/bouncycastle/crypto/params/KeyParameter."<init>":([B)V
      46: invokeinterface #12,  3           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
      51: aload_0
      52: getfield      #5                  // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      55: aload_2
      56: iconst_0
      57: aload_1
      58: iconst_0
      59: invokeinterface #13,  5           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      64: pop
      65: aload_0
      66: getfield      #5                  // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      69: invokeinterface #14,  1           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.reset:()V
      74: aload_3
      75: monitorexit
      76: goto          86
      79: astore        4
      81: aload_3
      82: monitorexit
      83: aload         4
      85: athrow
      86: aload_1
      87: areturn
    Exception table:
       from    to  target type
          25    76    79   any
          79    83    79   any

  public int getLength();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       4: invokeinterface #7,  1            // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
       9: ireturn
}
