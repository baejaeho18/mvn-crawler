Compiled from "BufferedBlockCipherSpec.java"
public class org.cryptacular.spec.BufferedBlockCipherSpec implements org.cryptacular.spec.Spec<org.bouncycastle.crypto.BufferedBlockCipher> {
  public static final java.util.regex.Pattern FORMAT;

  private final java.lang.String algorithm;

  private final java.lang.String mode;

  private final java.lang.String padding;

  public org.cryptacular.spec.BufferedBlockCipherSpec(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public org.cryptacular.spec.BufferedBlockCipherSpec(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public org.cryptacular.spec.BufferedBlockCipherSpec(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field algorithm:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field mode:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #5                  // Field padding:Ljava/lang/String;
      19: return

  public java.lang.String getAlgorithm();
    Code:
       0: aload_0
       1: getfield      #3                  // Field algorithm:Ljava/lang/String;
       4: areturn

  public java.lang.String getMode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field mode:Ljava/lang/String;
       4: areturn

  public java.lang.String getPadding();
    Code:
       0: aload_0
       1: getfield      #5                  // Field padding:Ljava/lang/String;
       4: areturn

  public org.cryptacular.spec.BlockCipherSpec getBlockCipherSpec();
    Code:
       0: new           #6                  // class org/cryptacular/spec/BlockCipherSpec
       3: dup
       4: aload_0
       5: getfield      #3                  // Field algorithm:Ljava/lang/String;
       8: invokespecial #7                  // Method org/cryptacular/spec/BlockCipherSpec."<init>":(Ljava/lang/String;)V
      11: areturn

  public org.bouncycastle.crypto.BufferedBlockCipher newInstance();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getBlockCipherSpec:()Lorg/cryptacular/spec/BlockCipherSpec;
       4: invokevirtual #9                  // Method org/cryptacular/spec/BlockCipherSpec.newInstance:()Lorg/bouncycastle/crypto/BlockCipher;
       7: astore_1
       8: aload_0
       9: getfield      #4                  // Field mode:Ljava/lang/String;
      12: astore_2
      13: iconst_m1
      14: istore_3
      15: aload_2
      16: invokevirtual #10                 // Method java/lang/String.hashCode:()I
      19: lookupswitch  { // 3
                 66500: 52
                 66623: 80
                 78155: 66
               default: 91
          }
      52: aload_2
      53: ldc           #11                 // String CBC
      55: invokevirtual #12                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      58: ifeq          91
      61: iconst_0
      62: istore_3
      63: goto          91
      66: aload_2
      67: ldc           #13                 // String OFB
      69: invokevirtual #12                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      72: ifeq          91
      75: iconst_1
      76: istore_3
      77: goto          91
      80: aload_2
      81: ldc           #14                 // String CFB
      83: invokevirtual #12                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      86: ifeq          91
      89: iconst_2
      90: istore_3
      91: iload_3
      92: tableswitch   { // 0 to 2
                     0: 120
                     1: 132
                     2: 150
               default: 168
          }
     120: new           #15                 // class org/bouncycastle/crypto/modes/CBCBlockCipher
     123: dup
     124: aload_1
     125: invokespecial #16                 // Method org/bouncycastle/crypto/modes/CBCBlockCipher."<init>":(Lorg/bouncycastle/crypto/BlockCipher;)V
     128: astore_1
     129: goto          168
     132: new           #17                 // class org/bouncycastle/crypto/modes/OFBBlockCipher
     135: dup
     136: aload_1
     137: aload_1
     138: invokeinterface #18,  1           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
     143: invokespecial #19                 // Method org/bouncycastle/crypto/modes/OFBBlockCipher."<init>":(Lorg/bouncycastle/crypto/BlockCipher;I)V
     146: astore_1
     147: goto          168
     150: new           #20                 // class org/bouncycastle/crypto/modes/CFBBlockCipher
     153: dup
     154: aload_1
     155: aload_1
     156: invokeinterface #18,  1           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
     161: invokespecial #21                 // Method org/bouncycastle/crypto/modes/CFBBlockCipher."<init>":(Lorg/bouncycastle/crypto/BlockCipher;I)V
     164: astore_1
     165: goto          168
     168: aload_0
     169: getfield      #5                  // Field padding:Ljava/lang/String;
     172: ifnull        191
     175: new           #22                 // class org/bouncycastle/crypto/paddings/PaddedBufferedBlockCipher
     178: dup
     179: aload_1
     180: aload_0
     181: getfield      #5                  // Field padding:Ljava/lang/String;
     184: invokestatic  #23                 // Method getPadding:(Ljava/lang/String;)Lorg/bouncycastle/crypto/paddings/BlockCipherPadding;
     187: invokespecial #24                 // Method org/bouncycastle/crypto/paddings/PaddedBufferedBlockCipher."<init>":(Lorg/bouncycastle/crypto/BlockCipher;Lorg/bouncycastle/crypto/paddings/BlockCipherPadding;)V
     190: areturn
     191: new           #25                 // class org/bouncycastle/crypto/BufferedBlockCipher
     194: dup
     195: aload_1
     196: invokespecial #26                 // Method org/bouncycastle/crypto/BufferedBlockCipher."<init>":(Lorg/bouncycastle/crypto/BlockCipher;)V
     199: areturn

  public java.lang.String toString();
    Code:
       0: new           #27                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #3                  // Field algorithm:Ljava/lang/String;
      11: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: bipush        47
      16: invokevirtual #30                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #4                  // Field mode:Ljava/lang/String;
      23: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: bipush        47
      28: invokevirtual #30                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #5                  // Field padding:Ljava/lang/String;
      35: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: areturn

  public static org.cryptacular.spec.BufferedBlockCipherSpec parse(java.lang.String);
    Code:
       0: getstatic     #32                 // Field FORMAT:Ljava/util/regex/Pattern;
       3: aload_0
       4: invokevirtual #33                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: astore_1
       8: aload_1
       9: invokevirtual #34                 // Method java/util/regex/Matcher.matches:()Z
      12: ifne          42
      15: new           #35                 // class java/lang/IllegalArgumentException
      18: dup
      19: new           #27                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #36                 // String Invalid specification
      28: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #37                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: new           #38                 // class org/cryptacular/spec/BufferedBlockCipherSpec
      45: dup
      46: aload_1
      47: ldc           #39                 // String alg
      49: invokevirtual #40                 // Method java/util/regex/Matcher.group:(Ljava/lang/String;)Ljava/lang/String;
      52: aload_1
      53: ldc           #41                 // String mode
      55: invokevirtual #40                 // Method java/util/regex/Matcher.group:(Ljava/lang/String;)Ljava/lang/String;
      58: aload_1
      59: ldc           #42                 // String padding
      61: invokevirtual #40                 // Method java/util/regex/Matcher.group:(Ljava/lang/String;)Ljava/lang/String;
      64: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      67: areturn

  private static org.bouncycastle.crypto.paddings.BlockCipherPadding getPadding(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #43                 // String Padding
       3: invokevirtual #44                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
       6: istore_2
       7: iload_2
       8: iconst_m1
       9: if_icmple     22
      12: aload_0
      13: iconst_0
      14: iload_2
      15: invokevirtual #45                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      18: astore_1
      19: goto          24
      22: aload_0
      23: astore_1
      24: ldc           #46                 // String ISO7816d4
      26: aload_1
      27: invokevirtual #47                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      30: ldc           #48                 // String ISO7816
      32: aload_1
      33: invokevirtual #47                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      36: ior
      37: ifeq          51
      40: new           #49                 // class org/bouncycastle/crypto/paddings/ISO7816d4Padding
      43: dup
      44: invokespecial #50                 // Method org/bouncycastle/crypto/paddings/ISO7816d4Padding."<init>":()V
      47: astore_3
      48: goto          214
      51: ldc           #51                 // String ISO10126
      53: aload_1
      54: invokevirtual #47                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      57: ifne          69
      60: ldc           #52                 // String ISO10126-2
      62: aload_1
      63: invokevirtual #47                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      66: ifeq          80
      69: new           #53                 // class org/bouncycastle/crypto/paddings/ISO10126d2Padding
      72: dup
      73: invokespecial #54                 // Method org/bouncycastle/crypto/paddings/ISO10126d2Padding."<init>":()V
      76: astore_3
      77: goto          214
      80: ldc           #55                 // String PKCS7
      82: aload_1
      83: invokevirtual #47                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      86: ifne          98
      89: ldc           #56                 // String PKCS5
      91: aload_1
      92: invokevirtual #47                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      95: ifeq          109
      98: new           #57                 // class org/bouncycastle/crypto/paddings/PKCS7Padding
     101: dup
     102: invokespecial #58                 // Method org/bouncycastle/crypto/paddings/PKCS7Padding."<init>":()V
     105: astore_3
     106: goto          214
     109: ldc           #59                 // String TBC
     111: aload_1
     112: invokevirtual #47                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     115: ifeq          129
     118: new           #60                 // class org/bouncycastle/crypto/paddings/TBCPadding
     121: dup
     122: invokespecial #61                 // Method org/bouncycastle/crypto/paddings/TBCPadding."<init>":()V
     125: astore_3
     126: goto          214
     129: ldc           #62                 // String X923
     131: aload_1
     132: invokevirtual #47                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     135: ifeq          149
     138: new           #63                 // class org/bouncycastle/crypto/paddings/X923Padding
     141: dup
     142: invokespecial #64                 // Method org/bouncycastle/crypto/paddings/X923Padding."<init>":()V
     145: astore_3
     146: goto          214
     149: ldc           #65                 // String NULL
     151: aload_1
     152: invokevirtual #47                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     155: ifne          176
     158: ldc           #66                 // String Zero
     160: aload_1
     161: invokevirtual #47                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     164: ifne          176
     167: ldc           #67                 // String None
     169: aload_1
     170: invokevirtual #47                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     173: ifeq          187
     176: new           #68                 // class org/bouncycastle/crypto/paddings/ZeroBytePadding
     179: dup
     180: invokespecial #69                 // Method org/bouncycastle/crypto/paddings/ZeroBytePadding."<init>":()V
     183: astore_3
     184: goto          214
     187: new           #35                 // class java/lang/IllegalArgumentException
     190: dup
     191: new           #27                 // class java/lang/StringBuilder
     194: dup
     195: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
     198: ldc           #70                 // String Invalid padding
     200: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: aload_0
     204: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     207: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     210: invokespecial #37                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     213: athrow
     214: aload_3
     215: areturn

  public java.lang.Object newInstance();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method newInstance:()Lorg/bouncycastle/crypto/BufferedBlockCipher;
       4: areturn

  static {};
    Code:
       0: ldc           #72                 // String (?<alg>[A-Za-z0-9_-]+)/(?<mode>\\w+)/(?<padding>\\w+)
       2: invokestatic  #73                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #32                 // Field FORMAT:Ljava/util/regex/Pattern;
       8: return
}
