Compiled from "AbstractWrappedECKey.java"
public abstract class org.cryptacular.adapter.AbstractWrappedECKey<T extends org.bouncycastle.crypto.params.ECKeyParameters> extends org.cryptacular.adapter.AbstractWrappedKey<T> {
  private static final java.lang.String ALGORITHM;

  public org.cryptacular.adapter.AbstractWrappedECKey(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/cryptacular/adapter/AbstractWrappedKey."<init>":(Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;)V
       5: return

  public java.security.spec.ECParameterSpec getParams();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
       4: checkcast     #3                  // class org/bouncycastle/crypto/params/ECKeyParameters
       7: invokevirtual #4                  // Method org/bouncycastle/crypto/params/ECKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
      10: astore_1
      11: new           #5                  // class java/security/spec/ECParameterSpec
      14: dup
      15: aload_1
      16: invokevirtual #6                  // Method org/bouncycastle/crypto/params/ECDomainParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      19: aload_1
      20: invokevirtual #7                  // Method org/bouncycastle/crypto/params/ECDomainParameters.getSeed:()[B
      23: invokestatic  #8                  // Method org/bouncycastle/jcajce/provider/asymmetric/util/EC5Util.convertCurve:(Lorg/bouncycastle/math/ec/ECCurve;[B)Ljava/security/spec/EllipticCurve;
      26: new           #9                  // class java/security/spec/ECPoint
      29: dup
      30: aload_1
      31: invokevirtual #10                 // Method org/bouncycastle/crypto/params/ECDomainParameters.getG:()Lorg/bouncycastle/math/ec/ECPoint;
      34: invokevirtual #11                 // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
      37: invokevirtual #12                 // Method org/bouncycastle/math/ec/ECPoint.getXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      40: invokevirtual #13                 // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      43: aload_1
      44: invokevirtual #10                 // Method org/bouncycastle/crypto/params/ECDomainParameters.getG:()Lorg/bouncycastle/math/ec/ECPoint;
      47: invokevirtual #11                 // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
      50: invokevirtual #14                 // Method org/bouncycastle/math/ec/ECPoint.getYCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      53: invokevirtual #13                 // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      56: invokespecial #15                 // Method java/security/spec/ECPoint."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;)V
      59: aload_1
      60: invokevirtual #16                 // Method org/bouncycastle/crypto/params/ECDomainParameters.getN:()Ljava/math/BigInteger;
      63: aload_1
      64: invokevirtual #17                 // Method org/bouncycastle/crypto/params/ECDomainParameters.getH:()Ljava/math/BigInteger;
      67: invokevirtual #18                 // Method java/math/BigInteger.intValue:()I
      70: invokespecial #19                 // Method java/security/spec/ECParameterSpec."<init>":(Ljava/security/spec/EllipticCurve;Ljava/security/spec/ECPoint;Ljava/math/BigInteger;I)V
      73: areturn

  public java.lang.String getAlgorithm();
    Code:
       0: ldc           #20                 // String EC
       2: areturn
}
