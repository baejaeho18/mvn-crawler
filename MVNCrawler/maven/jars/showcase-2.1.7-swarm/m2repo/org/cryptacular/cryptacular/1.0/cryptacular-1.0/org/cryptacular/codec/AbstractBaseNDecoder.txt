Compiled from "AbstractBaseNDecoder.java"
public abstract class org.cryptacular.codec.AbstractBaseNDecoder implements org.cryptacular.codec.Decoder {
  private final char[] block;

  private final byte[] table;

  private int blockPos;

  public org.cryptacular.codec.AbstractBaseNDecoder(byte[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method getBlockLength:()I
       9: aload_0
      10: invokevirtual #3                  // Method getBitsPerChar:()I
      13: idiv
      14: newarray       char
      16: putfield      #4                  // Field block:[C
      19: aload_0
      20: aload_1
      21: putfield      #5                  // Field table:[B
      24: return

  public void decode(java.nio.CharBuffer, java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #6                  // Method java/nio/CharBuffer.hasRemaining:()Z
       4: ifeq          59
       7: aload_1
       8: invokevirtual #7                  // Method java/nio/CharBuffer.get:()C
      11: istore_3
      12: iload_3
      13: invokestatic  #8                  // Method java/lang/Character.isWhitespace:(C)Z
      16: ifeq          22
      19: goto          0
      22: aload_0
      23: getfield      #4                  // Field block:[C
      26: aload_0
      27: dup
      28: getfield      #9                  // Field blockPos:I
      31: dup_x1
      32: iconst_1
      33: iadd
      34: putfield      #9                  // Field blockPos:I
      37: iload_3
      38: castore
      39: aload_0
      40: getfield      #9                  // Field blockPos:I
      43: aload_0
      44: getfield      #4                  // Field block:[C
      47: arraylength
      48: if_icmpne     0
      51: aload_0
      52: aload_2
      53: invokespecial #10                 // Method writeOutput:(Ljava/nio/ByteBuffer;)V
      56: goto          0
      59: return

  public void finalize(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #9                  // Field blockPos:I
       4: ifle          12
       7: aload_0
       8: aload_1
       9: invokespecial #10                 // Method writeOutput:(Ljava/nio/ByteBuffer;)V
      12: return

  public int outputSize(int);
    Code:
       0: iload_1
       1: aload_0
       2: invokevirtual #3                  // Method getBitsPerChar:()I
       5: imul
       6: bipush        8
       8: idiv
       9: ireturn

  protected abstract int getBlockLength();

  protected abstract int getBitsPerChar();

  private void writeOutput(java.nio.ByteBuffer);
    Code:
       0: lconst_0
       1: lstore        4
       3: aload_0
       4: invokevirtual #2                  // Method getBlockLength:()I
       7: istore        6
       9: aload_0
      10: getfield      #4                  // Field block:[C
      13: astore        7
      15: aload         7
      17: arraylength
      18: istore        8
      20: iconst_0
      21: istore        9
      23: iload         9
      25: iload         8
      27: if_icmpge     117
      30: aload         7
      32: iload         9
      34: caload
      35: istore        10
      37: iload         10
      39: bipush        61
      41: if_icmpne     47
      44: goto          117
      47: aload_0
      48: getfield      #5                  // Field table:[B
      51: iload         10
      53: bipush        127
      55: iand
      56: baload
      57: i2l
      58: lstore_2
      59: lload_2
      60: lconst_0
      61: lcmp
      62: ifge          93
      65: new           #11                 // class java/lang/IllegalArgumentException
      68: dup
      69: new           #12                 // class java/lang/StringBuilder
      72: dup
      73: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      76: ldc           #14                 // String Invalid character
      78: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: iload         10
      83: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      86: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      92: athrow
      93: iload         6
      95: aload_0
      96: invokevirtual #3                  // Method getBitsPerChar:()I
      99: isub
     100: istore        6
     102: lload         4
     104: lload_2
     105: iload         6
     107: lshl
     108: lor
     109: lstore        4
     111: iinc          9, 1
     114: goto          23
     117: iload         6
     119: aload_0
     120: invokevirtual #3                  // Method getBitsPerChar:()I
     123: iadd
     124: iconst_1
     125: isub
     126: istore        7
     128: aload_0
     129: invokevirtual #2                  // Method getBlockLength:()I
     132: istore        8
     134: iload         8
     136: iload         7
     138: if_icmple     166
     141: iinc          8, -8
     144: aload_1
     145: lload         4
     147: ldc2_w        #19                 // long 255l
     150: iload         8
     152: lshl
     153: land
     154: iload         8
     156: lshr
     157: l2i
     158: i2b
     159: invokevirtual #21                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     162: pop
     163: goto          134
     166: aload_0
     167: iconst_0
     168: putfield      #9                  // Field blockPos:I
     171: return
}
