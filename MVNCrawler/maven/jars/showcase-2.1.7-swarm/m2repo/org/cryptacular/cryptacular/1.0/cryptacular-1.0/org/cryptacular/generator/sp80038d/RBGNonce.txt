Compiled from "RBGNonce.java"
public class org.cryptacular.generator.sp80038d.RBGNonce implements org.cryptacular.generator.Nonce {
  private final byte[] fixed;

  private final int randomLength;

  private final org.bouncycastle.crypto.prng.drbg.SP80090DRBG rbg;

  public org.cryptacular.generator.sp80038d.RBGNonce();
    Code:
       0: aload_0
       1: bipush        12
       3: invokespecial #1                  // Method "<init>":(I)V
       6: return

  public org.cryptacular.generator.sp80038d.RBGNonce(int);
    Code:
       0: aload_0
       1: aconst_null
       2: iload_1
       3: invokespecial #2                  // Method "<init>":(Ljava/lang/String;I)V
       6: return

  public org.cryptacular.generator.sp80038d.RBGNonce(java.lang.String, int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: iload_2
       5: bipush        12
       7: if_icmpge     20
      10: new           #4                  // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #5                  // String Must specify at least 12 bytes (96 bits) for random part.
      16: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: iload_2
      22: putfield      #7                  // Field randomLength:I
      25: aload_1
      26: ifnull        40
      29: aload_0
      30: aload_1
      31: invokestatic  #8                  // Method org/cryptacular/util/ByteUtil.toBytes:(Ljava/lang/String;)[B
      34: putfield      #9                  // Field fixed:[B
      37: goto          47
      40: aload_0
      41: iconst_0
      42: newarray       byte
      44: putfield      #9                  // Field fixed:[B
      47: aload_0
      48: aload_0
      49: getfield      #7                  // Field randomLength:I
      52: aload_0
      53: getfield      #9                  // Field fixed:[B
      56: invokestatic  #10                 // Method newRBG:(I[B)Lorg/bouncycastle/crypto/prng/drbg/SP80090DRBG;
      59: putfield      #11                 // Field rbg:Lorg/bouncycastle/crypto/prng/drbg/SP80090DRBG;
      62: return

  public byte[] generate() throws org.cryptacular.generator.LimitException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field randomLength:I
       4: newarray       byte
       6: astore_1
       7: aload_0
       8: getfield      #11                 // Field rbg:Lorg/bouncycastle/crypto/prng/drbg/SP80090DRBG;
      11: dup
      12: astore_2
      13: monitorenter
      14: aload_0
      15: getfield      #11                 // Field rbg:Lorg/bouncycastle/crypto/prng/drbg/SP80090DRBG;
      18: aload_1
      19: aconst_null
      20: iconst_0
      21: invokeinterface #12,  4           // InterfaceMethod org/bouncycastle/crypto/prng/drbg/SP80090DRBG.generate:([B[BZ)I
      26: pop
      27: aload_2
      28: monitorexit
      29: goto          37
      32: astore_3
      33: aload_2
      34: monitorexit
      35: aload_3
      36: athrow
      37: aload_0
      38: invokevirtual #13                 // Method getLength:()I
      41: newarray       byte
      43: astore_2
      44: aload_0
      45: getfield      #9                  // Field fixed:[B
      48: iconst_0
      49: aload_2
      50: iconst_0
      51: aload_0
      52: getfield      #9                  // Field fixed:[B
      55: arraylength
      56: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      59: aload_1
      60: iconst_0
      61: aload_2
      62: aload_0
      63: getfield      #9                  // Field fixed:[B
      66: arraylength
      67: aload_1
      68: arraylength
      69: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      72: aload_2
      73: areturn
    Exception table:
       from    to  target type
          14    29    32   any
          32    35    32   any

  public int getLength();
    Code:
       0: aload_0
       1: getfield      #9                  // Field fixed:[B
       4: arraylength
       5: aload_0
       6: getfield      #7                  // Field randomLength:I
       9: iadd
      10: ireturn

  private static org.bouncycastle.crypto.prng.drbg.SP80090DRBG newRBG(int, byte[]);
    Code:
       0: new           #15                 // class org/bouncycastle/crypto/prng/drbg/HashSP800DRBG
       3: dup
       4: new           #16                 // class org/bouncycastle/crypto/digests/SHA256Digest
       7: dup
       8: invokespecial #17                 // Method org/bouncycastle/crypto/digests/SHA256Digest."<init>":()V
      11: iload_0
      12: new           #18                 // class org/cryptacular/generator/sp80038d/RBGNonce$1
      15: dup
      16: iload_0
      17: invokespecial #19                 // Method org/cryptacular/generator/sp80038d/RBGNonce$1."<init>":(I)V
      20: aload_1
      21: bipush        8
      23: invokestatic  #20                 // Method org/cryptacular/util/NonceUtil.timestampNonce:(I)[B
      26: invokespecial #21                 // Method org/bouncycastle/crypto/prng/drbg/HashSP800DRBG."<init>":(Lorg/bouncycastle/crypto/Digest;ILorg/bouncycastle/crypto/prng/EntropySource;[B[B)V
      29: areturn
}
