Compiled from "HexDecoder.java"
public class org.cryptacular.codec.HexDecoder implements org.cryptacular.codec.Decoder {
  private static final byte[] DECODING_TABLE;

  private int count;

  public org.cryptacular.codec.HexDecoder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void decode(java.nio.CharBuffer, java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: iconst_0
       2: invokevirtual #2                  // Method java/nio/CharBuffer.get:(I)C
       5: bipush        48
       7: if_icmpne     31
      10: aload_1
      11: iconst_1
      12: invokevirtual #2                  // Method java/nio/CharBuffer.get:(I)C
      15: bipush        120
      17: if_icmpne     31
      20: aload_1
      21: aload_1
      22: invokevirtual #3                  // Method java/nio/CharBuffer.position:()I
      25: iconst_2
      26: iadd
      27: invokevirtual #4                  // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;
      30: pop
      31: iconst_0
      32: istore_3
      33: aload_1
      34: invokevirtual #5                  // Method java/nio/CharBuffer.hasRemaining:()Z
      37: ifeq          111
      40: aload_1
      41: invokevirtual #6                  // Method java/nio/CharBuffer.get:()C
      44: istore        5
      46: iload         5
      48: bipush        58
      50: if_icmpeq     33
      53: iload         5
      55: invokestatic  #7                  // Method java/lang/Character.isWhitespace:(C)Z
      58: ifeq          64
      61: goto          33
      64: aload_0
      65: dup
      66: getfield      #8                  // Field count:I
      69: dup_x1
      70: iconst_1
      71: iadd
      72: putfield      #8                  // Field count:I
      75: iconst_1
      76: iand
      77: ifne          89
      80: iload         5
      82: invokestatic  #9                  // Method lookup:(C)B
      85: istore_3
      86: goto          33
      89: iload         5
      91: invokestatic  #9                  // Method lookup:(C)B
      94: istore        4
      96: aload_2
      97: iload_3
      98: iconst_4
      99: ishl
     100: iload         4
     102: ior
     103: i2b
     104: invokevirtual #10                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     107: pop
     108: goto          33
     111: return

  public void finalize(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #8                  // Field count:I
       5: return

  public int outputSize(int);
    Code:
       0: iload_1
       1: iconst_2
       2: idiv
       3: ireturn

  private static byte lookup(char);
    Code:
       0: getstatic     #11                 // Field DECODING_TABLE:[B
       3: iload_0
       4: bipush        127
       6: iand
       7: baload
       8: istore_1
       9: iload_1
      10: ifge          40
      13: new           #12                 // class java/lang/IllegalArgumentException
      16: dup
      17: new           #13                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #15                 // String Invalid hex character
      26: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: iload_0
      30: invokevirtual #17                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      33: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: iload_1
      41: ireturn

  static {};
    Code:
       0: sipush        128
       3: newarray       byte
       5: putstatic     #11                 // Field DECODING_TABLE:[B
       8: getstatic     #11                 // Field DECODING_TABLE:[B
      11: iconst_m1
      12: invokestatic  #20                 // Method java/util/Arrays.fill:([BB)V
      15: iconst_0
      16: istore_0
      17: iload_0
      18: bipush        10
      20: if_icmpge     39
      23: getstatic     #11                 // Field DECODING_TABLE:[B
      26: iload_0
      27: bipush        48
      29: iadd
      30: iload_0
      31: i2b
      32: bastore
      33: iinc          0, 1
      36: goto          17
      39: iconst_0
      40: istore_0
      41: iload_0
      42: bipush        6
      44: if_icmpge     79
      47: getstatic     #11                 // Field DECODING_TABLE:[B
      50: iload_0
      51: bipush        65
      53: iadd
      54: bipush        10
      56: iload_0
      57: iadd
      58: i2b
      59: bastore
      60: getstatic     #11                 // Field DECODING_TABLE:[B
      63: iload_0
      64: bipush        97
      66: iadd
      67: bipush        10
      69: iload_0
      70: iadd
      71: i2b
      72: bastore
      73: iinc          0, 1
      76: goto          41
      79: return
}
