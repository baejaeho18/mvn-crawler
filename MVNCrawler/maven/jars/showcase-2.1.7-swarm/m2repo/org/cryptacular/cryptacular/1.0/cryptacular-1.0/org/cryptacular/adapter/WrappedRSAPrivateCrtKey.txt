Compiled from "WrappedRSAPrivateCrtKey.java"
public class org.cryptacular.adapter.WrappedRSAPrivateCrtKey extends org.cryptacular.adapter.AbstractWrappedRSAKey<org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters> implements java.security.interfaces.RSAPrivateCrtKey {
  public org.cryptacular.adapter.WrappedRSAPrivateCrtKey(org.bouncycastle.crypto.params.RSAPrivateCrtKeyParameters);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/cryptacular/adapter/AbstractWrappedRSAKey."<init>":(Lorg/bouncycastle/crypto/params/RSAKeyParameters;)V
       5: return

  public java.math.BigInteger getPublicExponent();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
       4: checkcast     #3                  // class org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters
       7: invokevirtual #4                  // Method org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters.getPublicExponent:()Ljava/math/BigInteger;
      10: areturn

  public java.math.BigInteger getPrimeP();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
       4: checkcast     #3                  // class org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters
       7: invokevirtual #5                  // Method org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters.getP:()Ljava/math/BigInteger;
      10: areturn

  public java.math.BigInteger getPrimeQ();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
       4: checkcast     #3                  // class org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters
       7: invokevirtual #6                  // Method org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters.getQ:()Ljava/math/BigInteger;
      10: areturn

  public java.math.BigInteger getPrimeExponentP();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
       4: checkcast     #3                  // class org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters
       7: invokevirtual #7                  // Method org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters.getDP:()Ljava/math/BigInteger;
      10: areturn

  public java.math.BigInteger getPrimeExponentQ();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
       4: checkcast     #3                  // class org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters
       7: invokevirtual #8                  // Method org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters.getDQ:()Ljava/math/BigInteger;
      10: areturn

  public java.math.BigInteger getCrtCoefficient();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
       4: checkcast     #3                  // class org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters
       7: invokevirtual #9                  // Method org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters.getQInv:()Ljava/math/BigInteger;
      10: areturn

  public java.math.BigInteger getPrivateExponent();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
       4: checkcast     #3                  // class org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters
       7: invokevirtual #10                 // Method org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters.getExponent:()Ljava/math/BigInteger;
      10: areturn
}
