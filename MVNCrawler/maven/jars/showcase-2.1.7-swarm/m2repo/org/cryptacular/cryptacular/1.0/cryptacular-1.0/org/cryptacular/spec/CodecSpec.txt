Compiled from "CodecSpec.java"
public class org.cryptacular.spec.CodecSpec implements org.cryptacular.spec.Spec<org.cryptacular.codec.Codec> {
  public static final org.cryptacular.spec.CodecSpec HEX;

  public static final org.cryptacular.spec.CodecSpec BASE64;

  private java.lang.String encoding;

  public org.cryptacular.spec.CodecSpec(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String Encoding cannot be null.
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #5                  // Field encoding:Ljava/lang/String;
      23: return

  public java.lang.String getAlgorithm();
    Code:
       0: aload_0
       1: getfield      #5                  // Field encoding:Ljava/lang/String;
       4: areturn

  public org.cryptacular.codec.Codec newInstance();
    Code:
       0: ldc           #6                  // String Hex
       2: aload_0
       3: getfield      #5                  // Field encoding:Ljava/lang/String;
       6: invokevirtual #7                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       9: ifeq          23
      12: new           #8                  // class org/cryptacular/codec/HexCodec
      15: dup
      16: invokespecial #9                  // Method org/cryptacular/codec/HexCodec."<init>":()V
      19: astore_1
      20: goto          68
      23: ldc           #10                 // String Base64
      25: aload_0
      26: getfield      #5                  // Field encoding:Ljava/lang/String;
      29: invokevirtual #7                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      32: ifne          47
      35: ldc           #11                 // String Base-64
      37: aload_0
      38: getfield      #5                  // Field encoding:Ljava/lang/String;
      41: invokevirtual #7                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      44: ifeq          58
      47: new           #12                 // class org/cryptacular/codec/Base64Codec
      50: dup
      51: invokespecial #13                 // Method org/cryptacular/codec/Base64Codec."<init>":()V
      54: astore_1
      55: goto          68
      58: new           #2                  // class java/lang/IllegalArgumentException
      61: dup
      62: ldc           #14                 // String Invalid encoding.
      64: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: aload_1
      69: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field encoding:Ljava/lang/String;
       4: areturn

  public java.lang.Object newInstance();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method newInstance:()Lorg/cryptacular/codec/Codec;
       4: areturn

  static {};
    Code:
       0: new           #16                 // class org/cryptacular/spec/CodecSpec
       3: dup
       4: ldc           #6                  // String Hex
       6: invokespecial #17                 // Method "<init>":(Ljava/lang/String;)V
       9: putstatic     #18                 // Field HEX:Lorg/cryptacular/spec/CodecSpec;
      12: new           #16                 // class org/cryptacular/spec/CodecSpec
      15: dup
      16: ldc           #10                 // String Base64
      18: invokespecial #17                 // Method "<init>":(Ljava/lang/String;)V
      21: putstatic     #19                 // Field BASE64:Lorg/cryptacular/spec/CodecSpec;
      24: return
}
