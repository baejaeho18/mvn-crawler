Compiled from "AbstractBaseNEncoder.java"
public abstract class org.cryptacular.codec.AbstractBaseNEncoder implements org.cryptacular.codec.Encoder {
  private static final java.lang.String NEWLINE;

  protected final int lineLength;

  private final char[] charset;

  private final int blockLength;

  private final int bitsPerChar;

  private final long initialBitMask;

  private long block;

  private int remaining;

  private int outCount;

  public org.cryptacular.codec.AbstractBaseNEncoder(char[], int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method getBlockLength:()I
       9: putfield      #3                  // Field blockLength:I
      12: aload_0
      13: aload_0
      14: invokevirtual #4                  // Method getBitsPerChar:()I
      17: putfield      #5                  // Field bitsPerChar:I
      20: aload_0
      21: aload_0
      22: getfield      #3                  // Field blockLength:I
      25: putfield      #6                  // Field remaining:I
      28: aload_0
      29: aload_1
      30: putfield      #7                  // Field charset:[C
      33: lconst_0
      34: lstore_3
      35: iconst_1
      36: istore        5
      38: iload         5
      40: aload_0
      41: getfield      #5                  // Field bitsPerChar:I
      44: if_icmpgt     65
      47: lload_3
      48: lconst_1
      49: aload_0
      50: getfield      #3                  // Field blockLength:I
      53: iload         5
      55: isub
      56: lshl
      57: lor
      58: lstore_3
      59: iinc          5, 1
      62: goto          38
      65: aload_0
      66: lload_3
      67: putfield      #8                  // Field initialBitMask:J
      70: aload_0
      71: iload_2
      72: putfield      #9                  // Field lineLength:I
      75: return

  public void encode(java.nio.ByteBuffer, java.nio.CharBuffer);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       4: ifeq          57
       7: aload_0
       8: dup
       9: getfield      #6                  // Field remaining:I
      12: bipush        8
      14: isub
      15: putfield      #6                  // Field remaining:I
      18: aload_0
      19: dup
      20: getfield      #11                 // Field block:J
      23: aload_1
      24: invokevirtual #12                 // Method java/nio/ByteBuffer.get:()B
      27: i2l
      28: ldc2_w        #13                 // long 255l
      31: land
      32: aload_0
      33: getfield      #6                  // Field remaining:I
      36: lshl
      37: lor
      38: putfield      #11                 // Field block:J
      41: aload_0
      42: getfield      #6                  // Field remaining:I
      45: ifne          0
      48: aload_0
      49: aload_2
      50: iconst_0
      51: invokespecial #15                 // Method writeOutput:(Ljava/nio/CharBuffer;I)V
      54: goto          0
      57: return

  public void finalize(java.nio.CharBuffer);
    Code:
       0: aload_0
       1: getfield      #6                  // Field remaining:I
       4: aload_0
       5: getfield      #3                  // Field blockLength:I
       8: if_icmpge     55
      11: aload_0
      12: getfield      #6                  // Field remaining:I
      15: aload_0
      16: getfield      #5                  // Field bitsPerChar:I
      19: idiv
      20: aload_0
      21: getfield      #5                  // Field bitsPerChar:I
      24: imul
      25: istore_2
      26: aload_0
      27: aload_1
      28: iload_2
      29: invokespecial #15                 // Method writeOutput:(Ljava/nio/CharBuffer;I)V
      32: iload_2
      33: istore_3
      34: iload_3
      35: ifle          55
      38: aload_1
      39: bipush        61
      41: invokevirtual #16                 // Method java/nio/CharBuffer.put:(C)Ljava/nio/CharBuffer;
      44: pop
      45: iload_3
      46: aload_0
      47: getfield      #5                  // Field bitsPerChar:I
      50: isub
      51: istore_3
      52: goto          34
      55: aload_0
      56: getfield      #9                  // Field lineLength:I
      59: ifle          77
      62: aload_1
      63: invokevirtual #17                 // Method java/nio/CharBuffer.position:()I
      66: ifle          77
      69: aload_1
      70: getstatic     #18                 // Field NEWLINE:Ljava/lang/String;
      73: invokevirtual #19                 // Method java/nio/CharBuffer.append:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
      76: pop
      77: aload_0
      78: iconst_0
      79: putfield      #20                 // Field outCount:I
      82: return

  public int outputSize(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #3                  // Field blockLength:I
       5: bipush        8
       7: idiv
       8: iadd
       9: iconst_1
      10: isub
      11: bipush        8
      13: imul
      14: aload_0
      15: getfield      #5                  // Field bitsPerChar:I
      18: idiv
      19: istore_2
      20: aload_0
      21: getfield      #9                  // Field lineLength:I
      24: ifle          45
      27: iload_2
      28: iload_2
      29: aload_0
      30: getfield      #9                  // Field lineLength:I
      33: idiv
      34: iconst_1
      35: iadd
      36: getstatic     #18                 // Field NEWLINE:Ljava/lang/String;
      39: invokevirtual #21                 // Method java/lang/String.length:()I
      42: imul
      43: iadd
      44: istore_2
      45: iload_2
      46: ireturn

  protected abstract int getBlockLength();

  protected abstract int getBitsPerChar();

  private void writeOutput(java.nio.CharBuffer, int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field blockLength:I
       4: istore_3
       5: aload_0
       6: getfield      #8                  // Field initialBitMask:J
       9: lstore        4
      11: iload_3
      12: iload_2
      13: if_icmple     96
      16: iload_3
      17: aload_0
      18: getfield      #5                  // Field bitsPerChar:I
      21: isub
      22: istore_3
      23: aload_0
      24: getfield      #11                 // Field block:J
      27: lload         4
      29: land
      30: iload_3
      31: lshr
      32: l2i
      33: istore        6
      35: aload_1
      36: aload_0
      37: getfield      #7                  // Field charset:[C
      40: iload         6
      42: caload
      43: invokevirtual #16                 // Method java/nio/CharBuffer.put:(C)Ljava/nio/CharBuffer;
      46: pop
      47: aload_0
      48: dup
      49: getfield      #20                 // Field outCount:I
      52: iconst_1
      53: iadd
      54: putfield      #20                 // Field outCount:I
      57: aload_0
      58: getfield      #9                  // Field lineLength:I
      61: ifle          84
      64: aload_0
      65: getfield      #20                 // Field outCount:I
      68: aload_0
      69: getfield      #9                  // Field lineLength:I
      72: irem
      73: ifne          84
      76: aload_1
      77: getstatic     #18                 // Field NEWLINE:Ljava/lang/String;
      80: invokevirtual #22                 // Method java/nio/CharBuffer.put:(Ljava/lang/String;)Ljava/nio/CharBuffer;
      83: pop
      84: lload         4
      86: aload_0
      87: getfield      #5                  // Field bitsPerChar:I
      90: lshr
      91: lstore        4
      93: goto          11
      96: aload_0
      97: lconst_0
      98: putfield      #11                 // Field block:J
     101: aload_0
     102: aload_0
     103: getfield      #3                  // Field blockLength:I
     106: putfield      #6                  // Field remaining:I
     109: return

  static {};
    Code:
       0: invokestatic  #23                 // Method java/lang/System.lineSeparator:()Ljava/lang/String;
       3: putstatic     #18                 // Field NEWLINE:Ljava/lang/String;
       6: return
}
