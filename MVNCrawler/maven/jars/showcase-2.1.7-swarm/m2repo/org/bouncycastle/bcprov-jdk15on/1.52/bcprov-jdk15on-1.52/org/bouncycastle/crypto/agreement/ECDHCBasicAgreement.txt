public class org.bouncycastle.crypto.agreement.ECDHCBasicAgreement implements org.bouncycastle.crypto.BasicAgreement {
  org.bouncycastle.crypto.params.ECPrivateKeyParameters key;

  public org.bouncycastle.crypto.agreement.ECDHCBasicAgreement();
    Code:
       0: aload_0
       1: invokespecial #75                 // Method java/lang/Object."<init>":()V
       4: return

  public void init(org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #40                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
       5: putfield      #73                 // Field key:Lorg/bouncycastle/crypto/params/ECPrivateKeyParameters;
       8: return

  public int getFieldSize();
    Code:
       0: aload_0
       1: getfield      #73                 // Field key:Lorg/bouncycastle/crypto/params/ECPrivateKeyParameters;
       4: invokevirtual #82                 // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
       7: invokevirtual #80                 // Method org/bouncycastle/crypto/params/ECDomainParameters.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      10: invokevirtual #85                 // Method org/bouncycastle/math/ec/ECCurve.getFieldSize:()I
      13: bipush        7
      15: iadd
      16: bipush        8
      18: idiv
      19: ireturn

  public java.math.BigInteger calculateAgreement(org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_1
       1: checkcast     #41                 // class org/bouncycastle/crypto/params/ECPublicKeyParameters
       4: astore_2
       5: aload_2
       6: invokevirtual #83                 // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getParameters:()Lorg/bouncycastle/crypto/params/ECDomainParameters;
       9: astore_3
      10: aload_3
      11: invokevirtual #78                 // Method org/bouncycastle/crypto/params/ECDomainParameters.getH:()Ljava/math/BigInteger;
      14: aload_0
      15: getfield      #73                 // Field key:Lorg/bouncycastle/crypto/params/ECPrivateKeyParameters;
      18: invokevirtual #81                 // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters.getD:()Ljava/math/BigInteger;
      21: invokevirtual #77                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      24: aload_3
      25: invokevirtual #79                 // Method org/bouncycastle/crypto/params/ECDomainParameters.getN:()Ljava/math/BigInteger;
      28: invokevirtual #76                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      31: astore        4
      33: aload_2
      34: invokevirtual #84                 // Method org/bouncycastle/crypto/params/ECPublicKeyParameters.getQ:()Lorg/bouncycastle/math/ec/ECPoint;
      37: aload         4
      39: invokevirtual #90                 // Method org/bouncycastle/math/ec/ECPoint.multiply:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
      42: invokevirtual #89                 // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
      45: astore        5
      47: aload         5
      49: invokevirtual #87                 // Method org/bouncycastle/math/ec/ECPoint.isInfinity:()Z
      52: ifeq          65
      55: new           #34                 // class java/lang/IllegalStateException
      58: dup
      59: ldc           #1                  // String Infinity is not a valid agreement value for ECDHC
      61: invokespecial #74                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: aload         5
      67: invokevirtual #88                 // Method org/bouncycastle/math/ec/ECPoint.getAffineXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      70: invokevirtual #86                 // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      73: areturn
}
