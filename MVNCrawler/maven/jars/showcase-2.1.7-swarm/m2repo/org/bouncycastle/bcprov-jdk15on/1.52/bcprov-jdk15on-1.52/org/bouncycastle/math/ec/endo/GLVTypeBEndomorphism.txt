public class org.bouncycastle.math.ec.endo.GLVTypeBEndomorphism implements org.bouncycastle.math.ec.endo.GLVEndomorphism {
  protected final org.bouncycastle.math.ec.ECCurve curve;

  protected final org.bouncycastle.math.ec.endo.GLVTypeBParameters parameters;

  protected final org.bouncycastle.math.ec.ECPointMap pointMap;

  public org.bouncycastle.math.ec.endo.GLVTypeBEndomorphism(org.bouncycastle.math.ec.ECCurve, org.bouncycastle.math.ec.endo.GLVTypeBParameters);
    Code:
       0: aload_0
       1: invokespecial #85                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #82                 // Field curve:Lorg/bouncycastle/math/ec/ECCurve;
       9: aload_0
      10: aload_2
      11: putfield      #84                 // Field parameters:Lorg/bouncycastle/math/ec/endo/GLVTypeBParameters;
      14: aload_0
      15: new           #41                 // class org/bouncycastle/math/ec/ScaleXPointMap
      18: dup
      19: aload_1
      20: aload_2
      21: invokevirtual #98                 // Method org/bouncycastle/math/ec/endo/GLVTypeBParameters.getBeta:()Ljava/math/BigInteger;
      24: invokevirtual #94                 // Method org/bouncycastle/math/ec/ECCurve.fromBigInteger:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECFieldElement;
      27: invokespecial #95                 // Method org/bouncycastle/math/ec/ScaleXPointMap."<init>":(Lorg/bouncycastle/math/ec/ECFieldElement;)V
      30: putfield      #83                 // Field pointMap:Lorg/bouncycastle/math/ec/ECPointMap;
      33: return

  public java.math.BigInteger[] decomposeScalar(java.math.BigInteger);
    Code:
       0: aload_0
       1: getfield      #84                 // Field parameters:Lorg/bouncycastle/math/ec/endo/GLVTypeBParameters;
       4: invokevirtual #97                 // Method org/bouncycastle/math/ec/endo/GLVTypeBParameters.getBits:()I
       7: istore_2
       8: aload_0
       9: aload_1
      10: aload_0
      11: getfield      #84                 // Field parameters:Lorg/bouncycastle/math/ec/endo/GLVTypeBParameters;
      14: invokevirtual #99                 // Method org/bouncycastle/math/ec/endo/GLVTypeBParameters.getG1:()Ljava/math/BigInteger;
      17: iload_2
      18: invokevirtual #96                 // Method calculateB:(Ljava/math/BigInteger;Ljava/math/BigInteger;I)Ljava/math/BigInteger;
      21: astore_3
      22: aload_0
      23: aload_1
      24: aload_0
      25: getfield      #84                 // Field parameters:Lorg/bouncycastle/math/ec/endo/GLVTypeBParameters;
      28: invokevirtual #100                // Method org/bouncycastle/math/ec/endo/GLVTypeBParameters.getG2:()Ljava/math/BigInteger;
      31: iload_2
      32: invokevirtual #96                 // Method calculateB:(Ljava/math/BigInteger;Ljava/math/BigInteger;I)Ljava/math/BigInteger;
      35: astore        4
      37: aload_0
      38: getfield      #84                 // Field parameters:Lorg/bouncycastle/math/ec/endo/GLVTypeBParameters;
      41: invokevirtual #101                // Method org/bouncycastle/math/ec/endo/GLVTypeBParameters.getV1:()[Ljava/math/BigInteger;
      44: astore        5
      46: aload_0
      47: getfield      #84                 // Field parameters:Lorg/bouncycastle/math/ec/endo/GLVTypeBParameters;
      50: invokevirtual #102                // Method org/bouncycastle/math/ec/endo/GLVTypeBParameters.getV2:()[Ljava/math/BigInteger;
      53: astore        6
      55: aload_1
      56: aload_3
      57: aload         5
      59: iconst_0
      60: aaload
      61: invokevirtual #92                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      64: aload         4
      66: aload         6
      68: iconst_0
      69: aaload
      70: invokevirtual #92                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      73: invokevirtual #91                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      76: invokevirtual #93                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      79: astore        7
      81: aload_3
      82: aload         5
      84: iconst_1
      85: aaload
      86: invokevirtual #92                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      89: aload         4
      91: aload         6
      93: iconst_1
      94: aaload
      95: invokevirtual #92                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      98: invokevirtual #91                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     101: invokevirtual #89                 // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
     104: astore        8
     106: iconst_2
     107: anewarray     #38                 // class java/math/BigInteger
     110: dup
     111: iconst_0
     112: aload         7
     114: aastore
     115: dup
     116: iconst_1
     117: aload         8
     119: aastore
     120: areturn

  public org.bouncycastle.math.ec.ECPointMap getPointMap();
    Code:
       0: aload_0
       1: getfield      #83                 // Field pointMap:Lorg/bouncycastle/math/ec/ECPointMap;
       4: areturn

  public boolean hasEfficientPointMap();
    Code:
       0: iconst_1
       1: ireturn

  protected java.math.BigInteger calculateB(java.math.BigInteger, java.math.BigInteger, int);
    Code:
       0: aload_2
       1: invokevirtual #86                 // Method java/math/BigInteger.signum:()I
       4: ifge          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: istore        4
      14: aload_1
      15: aload_2
      16: invokevirtual #88                 // Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
      19: invokevirtual #92                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      22: astore        5
      24: aload         5
      26: iload_3
      27: iconst_1
      28: isub
      29: invokevirtual #87                 // Method java/math/BigInteger.testBit:(I)Z
      32: istore        6
      34: aload         5
      36: iload_3
      37: invokevirtual #90                 // Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
      40: astore        5
      42: iload         6
      44: ifeq          57
      47: aload         5
      49: getstatic     #81                 // Field org/bouncycastle/math/ec/ECConstants.ONE:Ljava/math/BigInteger;
      52: invokevirtual #91                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      55: astore        5
      57: iload         4
      59: ifeq          70
      62: aload         5
      64: invokevirtual #89                 // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
      67: goto          72
      70: aload         5
      72: areturn
}
