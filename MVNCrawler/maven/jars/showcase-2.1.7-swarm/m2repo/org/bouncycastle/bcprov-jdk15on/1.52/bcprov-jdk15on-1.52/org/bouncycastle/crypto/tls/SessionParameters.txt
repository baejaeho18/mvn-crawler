public final class org.bouncycastle.crypto.tls.SessionParameters {
  private int cipherSuite;

  private short compressionAlgorithm;

  private byte[] masterSecret;

  private org.bouncycastle.crypto.tls.Certificate peerCertificate;

  private byte[] pskIdentity;

  private byte[] srpIdentity;

  private byte[] encodedServerExtensions;

  private org.bouncycastle.crypto.tls.SessionParameters(int, short, byte[], org.bouncycastle.crypto.tls.Certificate, byte[], byte[], byte[]);
    Code:
       0: aload_0
       1: invokespecial #76                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #72                 // Field pskIdentity:[B
       9: aload_0
      10: aconst_null
      11: putfield      #73                 // Field srpIdentity:[B
      14: aload_0
      15: iload_1
      16: putfield      #68                 // Field cipherSuite:I
      19: aload_0
      20: iload_2
      21: putfield      #69                 // Field compressionAlgorithm:S
      24: aload_0
      25: aload_3
      26: invokestatic  #79                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
      29: putfield      #71                 // Field masterSecret:[B
      32: aload_0
      33: aload         4
      35: putfield      #74                 // Field peerCertificate:Lorg/bouncycastle/crypto/tls/Certificate;
      38: aload_0
      39: aload         5
      41: invokestatic  #79                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
      44: putfield      #72                 // Field pskIdentity:[B
      47: aload_0
      48: aload         6
      50: invokestatic  #79                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
      53: putfield      #73                 // Field srpIdentity:[B
      56: aload_0
      57: aload         7
      59: putfield      #70                 // Field encodedServerExtensions:[B
      62: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #71                 // Field masterSecret:[B
       4: ifnull        15
       7: aload_0
       8: getfield      #71                 // Field masterSecret:[B
      11: iconst_0
      12: invokestatic  #80                 // Method org/bouncycastle/util/Arrays.fill:([BB)V
      15: return

  public org.bouncycastle.crypto.tls.SessionParameters copy();
    Code:
       0: new           #43                 // class org/bouncycastle/crypto/tls/SessionParameters
       3: dup
       4: aload_0
       5: getfield      #68                 // Field cipherSuite:I
       8: aload_0
       9: getfield      #69                 // Field compressionAlgorithm:S
      12: aload_0
      13: getfield      #71                 // Field masterSecret:[B
      16: aload_0
      17: getfield      #74                 // Field peerCertificate:Lorg/bouncycastle/crypto/tls/Certificate;
      20: aload_0
      21: getfield      #72                 // Field pskIdentity:[B
      24: aload_0
      25: getfield      #73                 // Field srpIdentity:[B
      28: aload_0
      29: getfield      #70                 // Field encodedServerExtensions:[B
      32: invokespecial #77                 // Method "<init>":(IS[BLorg/bouncycastle/crypto/tls/Certificate;[B[B[B)V
      35: areturn

  public int getCipherSuite();
    Code:
       0: aload_0
       1: getfield      #68                 // Field cipherSuite:I
       4: ireturn

  public short getCompressionAlgorithm();
    Code:
       0: aload_0
       1: getfield      #69                 // Field compressionAlgorithm:S
       4: ireturn

  public byte[] getMasterSecret();
    Code:
       0: aload_0
       1: getfield      #71                 // Field masterSecret:[B
       4: areturn

  public org.bouncycastle.crypto.tls.Certificate getPeerCertificate();
    Code:
       0: aload_0
       1: getfield      #74                 // Field peerCertificate:Lorg/bouncycastle/crypto/tls/Certificate;
       4: areturn

  public byte[] getPskIdentity();
    Code:
       0: aload_0
       1: getfield      #72                 // Field pskIdentity:[B
       4: areturn

  public byte[] getPSKIdentity();
    Code:
       0: aload_0
       1: getfield      #72                 // Field pskIdentity:[B
       4: areturn

  public byte[] getSRPIdentity();
    Code:
       0: aload_0
       1: getfield      #73                 // Field srpIdentity:[B
       4: areturn

  public java.util.Hashtable readServerExtensions() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #70                 // Field encodedServerExtensions:[B
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: new           #40                 // class java/io/ByteArrayInputStream
      12: dup
      13: aload_0
      14: getfield      #70                 // Field encodedServerExtensions:[B
      17: invokespecial #75                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      20: astore_1
      21: aload_1
      22: invokestatic  #78                 // Method org/bouncycastle/crypto/tls/TlsProtocol.readExtensions:(Ljava/io/ByteArrayInputStream;)Ljava/util/Hashtable;
      25: areturn

  org.bouncycastle.crypto.tls.SessionParameters(int, short, byte[], org.bouncycastle.crypto.tls.Certificate, byte[], byte[], byte[], org.bouncycastle.crypto.tls.SessionParameters$1);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokespecial #77                 // Method "<init>":(IS[BLorg/bouncycastle/crypto/tls/Certificate;[B[B[B)V
      15: return
}
