public class org.bouncycastle.crypto.digests.SM3Digest extends org.bouncycastle.crypto.digests.GeneralDigest {
  private static final int DIGEST_LENGTH;

  private static final int BLOCK_SIZE;

  private int[] V;

  private int[] inwords;

  private int xOff;

  private int[] W;

  private int[] W1;

  private static final int[] T;

  public org.bouncycastle.crypto.digests.SM3Digest();
    Code:
       0: aload_0
       1: invokespecial #96                 // Method org/bouncycastle/crypto/digests/GeneralDigest."<init>":()V
       4: aload_0
       5: bipush        8
       7: newarray       int
       9: putfield      #91                 // Field V:[I
      12: aload_0
      13: bipush        16
      15: newarray       int
      17: putfield      #94                 // Field inwords:[I
      20: aload_0
      21: bipush        68
      23: newarray       int
      25: putfield      #92                 // Field W:[I
      28: aload_0
      29: bipush        64
      31: newarray       int
      33: putfield      #93                 // Field W1:[I
      36: aload_0
      37: invokevirtual #102                // Method reset:()V
      40: return

  public org.bouncycastle.crypto.digests.SM3Digest(org.bouncycastle.crypto.digests.SM3Digest);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #98                 // Method org/bouncycastle/crypto/digests/GeneralDigest."<init>":(Lorg/bouncycastle/crypto/digests/GeneralDigest;)V
       5: aload_0
       6: bipush        8
       8: newarray       int
      10: putfield      #91                 // Field V:[I
      13: aload_0
      14: bipush        16
      16: newarray       int
      18: putfield      #94                 // Field inwords:[I
      21: aload_0
      22: bipush        68
      24: newarray       int
      26: putfield      #92                 // Field W:[I
      29: aload_0
      30: bipush        64
      32: newarray       int
      34: putfield      #93                 // Field W1:[I
      37: aload_0
      38: aload_1
      39: invokespecial #110                // Method copyIn:(Lorg/bouncycastle/crypto/digests/SM3Digest;)V
      42: return

  private void copyIn(org.bouncycastle.crypto.digests.SM3Digest);
    Code:
       0: aload_1
       1: getfield      #91                 // Field V:[I
       4: iconst_0
       5: aload_0
       6: getfield      #91                 // Field V:[I
       9: iconst_0
      10: aload_0
      11: getfield      #91                 // Field V:[I
      14: arraylength
      15: invokestatic  #95                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      18: aload_1
      19: getfield      #94                 // Field inwords:[I
      22: iconst_0
      23: aload_0
      24: getfield      #94                 // Field inwords:[I
      27: iconst_0
      28: aload_0
      29: getfield      #94                 // Field inwords:[I
      32: arraylength
      33: invokestatic  #95                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      36: aload_0
      37: aload_1
      38: getfield      #89                 // Field xOff:I
      41: putfield      #89                 // Field xOff:I
      44: return

  public java.lang.String getAlgorithmName();
    Code:
       0: ldc           #11                 // String SM3
       2: areturn

  public int getDigestSize();
    Code:
       0: bipush        32
       2: ireturn

  public org.bouncycastle.util.Memoable copy();
    Code:
       0: new           #59                 // class org/bouncycastle/crypto/digests/SM3Digest
       3: dup
       4: aload_0
       5: invokespecial #109                // Method "<init>":(Lorg/bouncycastle/crypto/digests/SM3Digest;)V
       8: areturn

  public void reset(org.bouncycastle.util.Memoable);
    Code:
       0: aload_1
       1: checkcast     #59                 // class org/bouncycastle/crypto/digests/SM3Digest
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokespecial #99                 // Method org/bouncycastle/crypto/digests/GeneralDigest.copyIn:(Lorg/bouncycastle/crypto/digests/GeneralDigest;)V
      10: aload_0
      11: aload_2
      12: invokespecial #110                // Method copyIn:(Lorg/bouncycastle/crypto/digests/SM3Digest;)V
      15: return

  public void reset();
    Code:
       0: aload_0
       1: invokespecial #97                 // Method org/bouncycastle/crypto/digests/GeneralDigest.reset:()V
       4: aload_0
       5: getfield      #91                 // Field V:[I
       8: iconst_0
       9: ldc           #8                  // int 1937774191
      11: iastore
      12: aload_0
      13: getfield      #91                 // Field V:[I
      16: iconst_1
      17: ldc           #7                  // int 1226093241
      19: iastore
      20: aload_0
      21: getfield      #91                 // Field V:[I
      24: iconst_2
      25: ldc           #6                  // int 388252375
      27: iastore
      28: aload_0
      29: getfield      #91                 // Field V:[I
      32: iconst_3
      33: ldc           #3                  // int -628488704
      35: iastore
      36: aload_0
      37: getfield      #91                 // Field V:[I
      40: iconst_4
      41: ldc           #1                  // int -1452330820
      43: iastore
      44: aload_0
      45: getfield      #91                 // Field V:[I
      48: iconst_5
      49: ldc           #5                  // int 372324522
      51: iastore
      52: aload_0
      53: getfield      #91                 // Field V:[I
      56: bipush        6
      58: ldc           #4                  // int -477237683
      60: iastore
      61: aload_0
      62: getfield      #91                 // Field V:[I
      65: bipush        7
      67: ldc           #2                  // int -1325724082
      69: iastore
      70: aload_0
      71: iconst_0
      72: putfield      #89                 // Field xOff:I
      75: return

  public int doFinal(byte[], int);
    Code:
       0: aload_0
       1: invokevirtual #100                // Method finish:()V
       4: aload_0
       5: getfield      #91                 // Field V:[I
       8: iconst_0
       9: iaload
      10: aload_1
      11: iload_2
      12: iconst_0
      13: iadd
      14: invokestatic  #111                // Method org/bouncycastle/util/Pack.intToBigEndian:(I[BI)V
      17: aload_0
      18: getfield      #91                 // Field V:[I
      21: iconst_1
      22: iaload
      23: aload_1
      24: iload_2
      25: iconst_4
      26: iadd
      27: invokestatic  #111                // Method org/bouncycastle/util/Pack.intToBigEndian:(I[BI)V
      30: aload_0
      31: getfield      #91                 // Field V:[I
      34: iconst_2
      35: iaload
      36: aload_1
      37: iload_2
      38: bipush        8
      40: iadd
      41: invokestatic  #111                // Method org/bouncycastle/util/Pack.intToBigEndian:(I[BI)V
      44: aload_0
      45: getfield      #91                 // Field V:[I
      48: iconst_3
      49: iaload
      50: aload_1
      51: iload_2
      52: bipush        12
      54: iadd
      55: invokestatic  #111                // Method org/bouncycastle/util/Pack.intToBigEndian:(I[BI)V
      58: aload_0
      59: getfield      #91                 // Field V:[I
      62: iconst_4
      63: iaload
      64: aload_1
      65: iload_2
      66: bipush        16
      68: iadd
      69: invokestatic  #111                // Method org/bouncycastle/util/Pack.intToBigEndian:(I[BI)V
      72: aload_0
      73: getfield      #91                 // Field V:[I
      76: iconst_5
      77: iaload
      78: aload_1
      79: iload_2
      80: bipush        20
      82: iadd
      83: invokestatic  #111                // Method org/bouncycastle/util/Pack.intToBigEndian:(I[BI)V
      86: aload_0
      87: getfield      #91                 // Field V:[I
      90: bipush        6
      92: iaload
      93: aload_1
      94: iload_2
      95: bipush        24
      97: iadd
      98: invokestatic  #111                // Method org/bouncycastle/util/Pack.intToBigEndian:(I[BI)V
     101: aload_0
     102: getfield      #91                 // Field V:[I
     105: bipush        7
     107: iaload
     108: aload_1
     109: iload_2
     110: bipush        28
     112: iadd
     113: invokestatic  #111                // Method org/bouncycastle/util/Pack.intToBigEndian:(I[BI)V
     116: aload_0
     117: invokevirtual #102                // Method reset:()V
     120: bipush        32
     122: ireturn

  protected void processWord(byte[], int);
    Code:
       0: aload_1
       1: iload_2
       2: baload
       3: sipush        255
       6: iand
       7: bipush        24
       9: ishl
      10: aload_1
      11: iinc          2, 1
      14: iload_2
      15: baload
      16: sipush        255
      19: iand
      20: bipush        16
      22: ishl
      23: ior
      24: aload_1
      25: iinc          2, 1
      28: iload_2
      29: baload
      30: sipush        255
      33: iand
      34: bipush        8
      36: ishl
      37: ior
      38: aload_1
      39: iinc          2, 1
      42: iload_2
      43: baload
      44: sipush        255
      47: iand
      48: ior
      49: istore_3
      50: aload_0
      51: getfield      #94                 // Field inwords:[I
      54: aload_0
      55: getfield      #89                 // Field xOff:I
      58: iload_3
      59: iastore
      60: aload_0
      61: dup
      62: getfield      #89                 // Field xOff:I
      65: iconst_1
      66: iadd
      67: putfield      #89                 // Field xOff:I
      70: aload_0
      71: getfield      #89                 // Field xOff:I
      74: bipush        16
      76: if_icmplt     83
      79: aload_0
      80: invokevirtual #101                // Method processBlock:()V
      83: return

  protected void processLength(long);
    Code:
       0: aload_0
       1: getfield      #89                 // Field xOff:I
       4: bipush        14
       6: if_icmple     33
       9: aload_0
      10: getfield      #94                 // Field inwords:[I
      13: aload_0
      14: getfield      #89                 // Field xOff:I
      17: iconst_0
      18: iastore
      19: aload_0
      20: dup
      21: getfield      #89                 // Field xOff:I
      24: iconst_1
      25: iadd
      26: putfield      #89                 // Field xOff:I
      29: aload_0
      30: invokevirtual #101                // Method processBlock:()V
      33: aload_0
      34: getfield      #89                 // Field xOff:I
      37: bipush        14
      39: if_icmpge     65
      42: aload_0
      43: getfield      #94                 // Field inwords:[I
      46: aload_0
      47: getfield      #89                 // Field xOff:I
      50: iconst_0
      51: iastore
      52: aload_0
      53: dup
      54: getfield      #89                 // Field xOff:I
      57: iconst_1
      58: iadd
      59: putfield      #89                 // Field xOff:I
      62: goto          33
      65: aload_0
      66: getfield      #94                 // Field inwords:[I
      69: aload_0
      70: dup
      71: getfield      #89                 // Field xOff:I
      74: dup_x1
      75: iconst_1
      76: iadd
      77: putfield      #89                 // Field xOff:I
      80: lload_1
      81: bipush        32
      83: lushr
      84: l2i
      85: iastore
      86: aload_0
      87: getfield      #94                 // Field inwords:[I
      90: aload_0
      91: dup
      92: getfield      #89                 // Field xOff:I
      95: dup_x1
      96: iconst_1
      97: iadd
      98: putfield      #89                 // Field xOff:I
     101: lload_1
     102: l2i
     103: iastore
     104: return

  private int P0(int);
    Code:
       0: iload_1
       1: bipush        9
       3: ishl
       4: iload_1
       5: bipush        23
       7: iushr
       8: ior
       9: istore_2
      10: iload_1
      11: bipush        17
      13: ishl
      14: iload_1
      15: bipush        15
      17: iushr
      18: ior
      19: istore_3
      20: iload_1
      21: iload_2
      22: ixor
      23: iload_3
      24: ixor
      25: ireturn

  private int P1(int);
    Code:
       0: iload_1
       1: bipush        15
       3: ishl
       4: iload_1
       5: bipush        17
       7: iushr
       8: ior
       9: istore_2
      10: iload_1
      11: bipush        23
      13: ishl
      14: iload_1
      15: bipush        9
      17: iushr
      18: ior
      19: istore_3
      20: iload_1
      21: iload_2
      22: ixor
      23: iload_3
      24: ixor
      25: ireturn

  private int FF0(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: ixor
       3: iload_3
       4: ixor
       5: ireturn

  private int FF1(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: iand
       3: iload_1
       4: iload_3
       5: iand
       6: ior
       7: iload_2
       8: iload_3
       9: iand
      10: ior
      11: ireturn

  private int GG0(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: ixor
       3: iload_3
       4: ixor
       5: ireturn

  private int GG1(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: iand
       3: iload_1
       4: iconst_m1
       5: ixor
       6: iload_3
       7: iand
       8: ior
       9: ireturn

  protected void processBlock();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: bipush        16
       5: if_icmpge     26
       8: aload_0
       9: getfield      #92                 // Field W:[I
      12: iload_1
      13: aload_0
      14: getfield      #94                 // Field inwords:[I
      17: iload_1
      18: iaload
      19: iastore
      20: iinc          1, 1
      23: goto          2
      26: bipush        16
      28: istore_1
      29: iload_1
      30: bipush        68
      32: if_icmpge     128
      35: aload_0
      36: getfield      #92                 // Field W:[I
      39: iload_1
      40: iconst_3
      41: isub
      42: iaload
      43: istore_2
      44: iload_2
      45: bipush        15
      47: ishl
      48: iload_2
      49: bipush        17
      51: iushr
      52: ior
      53: istore_3
      54: aload_0
      55: getfield      #92                 // Field W:[I
      58: iload_1
      59: bipush        13
      61: isub
      62: iaload
      63: istore        4
      65: iload         4
      67: bipush        7
      69: ishl
      70: iload         4
      72: bipush        25
      74: iushr
      75: ior
      76: istore        5
      78: aload_0
      79: getfield      #92                 // Field W:[I
      82: iload_1
      83: aload_0
      84: aload_0
      85: getfield      #92                 // Field W:[I
      88: iload_1
      89: bipush        16
      91: isub
      92: iaload
      93: aload_0
      94: getfield      #92                 // Field W:[I
      97: iload_1
      98: bipush        9
     100: isub
     101: iaload
     102: ixor
     103: iload_3
     104: ixor
     105: invokespecial #104                // Method P1:(I)I
     108: iload         5
     110: ixor
     111: aload_0
     112: getfield      #92                 // Field W:[I
     115: iload_1
     116: bipush        6
     118: isub
     119: iaload
     120: ixor
     121: iastore
     122: iinc          1, 1
     125: goto          29
     128: iconst_0
     129: istore_1
     130: iload_1
     131: bipush        64
     133: if_icmpge     163
     136: aload_0
     137: getfield      #93                 // Field W1:[I
     140: iload_1
     141: aload_0
     142: getfield      #92                 // Field W:[I
     145: iload_1
     146: iaload
     147: aload_0
     148: getfield      #92                 // Field W:[I
     151: iload_1
     152: iconst_4
     153: iadd
     154: iaload
     155: ixor
     156: iastore
     157: iinc          1, 1
     160: goto          130
     163: aload_0
     164: getfield      #91                 // Field V:[I
     167: iconst_0
     168: iaload
     169: istore_1
     170: aload_0
     171: getfield      #91                 // Field V:[I
     174: iconst_1
     175: iaload
     176: istore_2
     177: aload_0
     178: getfield      #91                 // Field V:[I
     181: iconst_2
     182: iaload
     183: istore_3
     184: aload_0
     185: getfield      #91                 // Field V:[I
     188: iconst_3
     189: iaload
     190: istore        4
     192: aload_0
     193: getfield      #91                 // Field V:[I
     196: iconst_4
     197: iaload
     198: istore        5
     200: aload_0
     201: getfield      #91                 // Field V:[I
     204: iconst_5
     205: iaload
     206: istore        6
     208: aload_0
     209: getfield      #91                 // Field V:[I
     212: bipush        6
     214: iaload
     215: istore        7
     217: aload_0
     218: getfield      #91                 // Field V:[I
     221: bipush        7
     223: iaload
     224: istore        8
     226: iconst_0
     227: istore        9
     229: iload         9
     231: bipush        16
     233: if_icmpge     383
     236: iload_1
     237: bipush        12
     239: ishl
     240: iload_1
     241: bipush        20
     243: iushr
     244: ior
     245: istore        10
     247: iload         10
     249: iload         5
     251: iadd
     252: getstatic     #90                 // Field T:[I
     255: iload         9
     257: iaload
     258: iadd
     259: istore        11
     261: iload         11
     263: bipush        7
     265: ishl
     266: iload         11
     268: bipush        25
     270: iushr
     271: ior
     272: istore        12
     274: iload         12
     276: iload         10
     278: ixor
     279: istore        13
     281: aload_0
     282: iload_1
     283: iload_2
     284: iload_3
     285: invokespecial #105                // Method FF0:(III)I
     288: iload         4
     290: iadd
     291: iload         13
     293: iadd
     294: aload_0
     295: getfield      #93                 // Field W1:[I
     298: iload         9
     300: iaload
     301: iadd
     302: istore        14
     304: aload_0
     305: iload         5
     307: iload         6
     309: iload         7
     311: invokespecial #107                // Method GG0:(III)I
     314: iload         8
     316: iadd
     317: iload         12
     319: iadd
     320: aload_0
     321: getfield      #92                 // Field W:[I
     324: iload         9
     326: iaload
     327: iadd
     328: istore        15
     330: iload_3
     331: istore        4
     333: iload_2
     334: bipush        9
     336: ishl
     337: iload_2
     338: bipush        23
     340: iushr
     341: ior
     342: istore_3
     343: iload_1
     344: istore_2
     345: iload         14
     347: istore_1
     348: iload         7
     350: istore        8
     352: iload         6
     354: bipush        19
     356: ishl
     357: iload         6
     359: bipush        13
     361: iushr
     362: ior
     363: istore        7
     365: iload         5
     367: istore        6
     369: aload_0
     370: iload         15
     372: invokespecial #103                // Method P0:(I)I
     375: istore        5
     377: iinc          9, 1
     380: goto          229
     383: bipush        16
     385: istore        9
     387: iload         9
     389: bipush        64
     391: if_icmpge     541
     394: iload_1
     395: bipush        12
     397: ishl
     398: iload_1
     399: bipush        20
     401: iushr
     402: ior
     403: istore        10
     405: iload         10
     407: iload         5
     409: iadd
     410: getstatic     #90                 // Field T:[I
     413: iload         9
     415: iaload
     416: iadd
     417: istore        11
     419: iload         11
     421: bipush        7
     423: ishl
     424: iload         11
     426: bipush        25
     428: iushr
     429: ior
     430: istore        12
     432: iload         12
     434: iload         10
     436: ixor
     437: istore        13
     439: aload_0
     440: iload_1
     441: iload_2
     442: iload_3
     443: invokespecial #106                // Method FF1:(III)I
     446: iload         4
     448: iadd
     449: iload         13
     451: iadd
     452: aload_0
     453: getfield      #93                 // Field W1:[I
     456: iload         9
     458: iaload
     459: iadd
     460: istore        14
     462: aload_0
     463: iload         5
     465: iload         6
     467: iload         7
     469: invokespecial #108                // Method GG1:(III)I
     472: iload         8
     474: iadd
     475: iload         12
     477: iadd
     478: aload_0
     479: getfield      #92                 // Field W:[I
     482: iload         9
     484: iaload
     485: iadd
     486: istore        15
     488: iload_3
     489: istore        4
     491: iload_2
     492: bipush        9
     494: ishl
     495: iload_2
     496: bipush        23
     498: iushr
     499: ior
     500: istore_3
     501: iload_1
     502: istore_2
     503: iload         14
     505: istore_1
     506: iload         7
     508: istore        8
     510: iload         6
     512: bipush        19
     514: ishl
     515: iload         6
     517: bipush        13
     519: iushr
     520: ior
     521: istore        7
     523: iload         5
     525: istore        6
     527: aload_0
     528: iload         15
     530: invokespecial #103                // Method P0:(I)I
     533: istore        5
     535: iinc          9, 1
     538: goto          387
     541: aload_0
     542: getfield      #91                 // Field V:[I
     545: iconst_0
     546: dup2
     547: iaload
     548: iload_1
     549: ixor
     550: iastore
     551: aload_0
     552: getfield      #91                 // Field V:[I
     555: iconst_1
     556: dup2
     557: iaload
     558: iload_2
     559: ixor
     560: iastore
     561: aload_0
     562: getfield      #91                 // Field V:[I
     565: iconst_2
     566: dup2
     567: iaload
     568: iload_3
     569: ixor
     570: iastore
     571: aload_0
     572: getfield      #91                 // Field V:[I
     575: iconst_3
     576: dup2
     577: iaload
     578: iload         4
     580: ixor
     581: iastore
     582: aload_0
     583: getfield      #91                 // Field V:[I
     586: iconst_4
     587: dup2
     588: iaload
     589: iload         5
     591: ixor
     592: iastore
     593: aload_0
     594: getfield      #91                 // Field V:[I
     597: iconst_5
     598: dup2
     599: iaload
     600: iload         6
     602: ixor
     603: iastore
     604: aload_0
     605: getfield      #91                 // Field V:[I
     608: bipush        6
     610: dup2
     611: iaload
     612: iload         7
     614: ixor
     615: iastore
     616: aload_0
     617: getfield      #91                 // Field V:[I
     620: bipush        7
     622: dup2
     623: iaload
     624: iload         8
     626: ixor
     627: iastore
     628: aload_0
     629: iconst_0
     630: putfield      #89                 // Field xOff:I
     633: return

  static {};
    Code:
       0: bipush        64
       2: newarray       int
       4: putstatic     #90                 // Field T:[I
       7: iconst_0
       8: istore_0
       9: iload_0
      10: bipush        16
      12: if_icmpge     39
      15: ldc           #9                  // int 2043430169
      17: istore_1
      18: getstatic     #90                 // Field T:[I
      21: iload_0
      22: iload_1
      23: iload_0
      24: ishl
      25: iload_1
      26: bipush        32
      28: iload_0
      29: isub
      30: iushr
      31: ior
      32: iastore
      33: iinc          0, 1
      36: goto          9
      39: bipush        16
      41: istore_0
      42: iload_0
      43: bipush        64
      45: if_icmpge     77
      48: iload_0
      49: bipush        32
      51: irem
      52: istore_1
      53: ldc           #10                 // int 2055708042
      55: istore_2
      56: getstatic     #90                 // Field T:[I
      59: iload_0
      60: iload_2
      61: iload_1
      62: ishl
      63: iload_2
      64: bipush        32
      66: iload_1
      67: isub
      68: iushr
      69: ior
      70: iastore
      71: iinc          0, 1
      74: goto          42
      77: return
}
