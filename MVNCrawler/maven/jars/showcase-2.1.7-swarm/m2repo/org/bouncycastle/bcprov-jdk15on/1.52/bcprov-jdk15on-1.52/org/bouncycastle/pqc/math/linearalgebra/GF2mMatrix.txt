public class org.bouncycastle.pqc.math.linearalgebra.GF2mMatrix extends org.bouncycastle.pqc.math.linearalgebra.Matrix {
  protected org.bouncycastle.pqc.math.linearalgebra.GF2mField field;

  protected int[][] matrix;

  public org.bouncycastle.pqc.math.linearalgebra.GF2mMatrix(org.bouncycastle.pqc.math.linearalgebra.GF2mField, byte[]);
    Code:
       0: aload_0
       1: invokespecial #138                // Method org/bouncycastle/pqc/math/linearalgebra/Matrix."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #115                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
       9: bipush        8
      11: istore_3
      12: iconst_1
      13: istore        4
      15: aload_1
      16: invokevirtual #123                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.getDegree:()I
      19: iload_3
      20: if_icmple     32
      23: iinc          4, 1
      26: iinc          3, 8
      29: goto          15
      32: aload_2
      33: arraylength
      34: iconst_5
      35: if_icmpge     48
      38: new           #68                 // class java/lang/IllegalArgumentException
      41: dup
      42: ldc           #3                  // String  Error: given array is not encoded matrix over GF(2^m)
      44: invokespecial #117                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: aload_2
      50: iconst_3
      51: baload
      52: sipush        255
      55: iand
      56: bipush        24
      58: ishl
      59: aload_2
      60: iconst_2
      61: baload
      62: sipush        255
      65: iand
      66: bipush        16
      68: ishl
      69: ixor
      70: aload_2
      71: iconst_1
      72: baload
      73: sipush        255
      76: iand
      77: bipush        8
      79: ishl
      80: ixor
      81: aload_2
      82: iconst_0
      83: baload
      84: sipush        255
      87: iand
      88: ixor
      89: putfield      #113                // Field numRows:I
      92: iload         4
      94: aload_0
      95: getfield      #113                // Field numRows:I
      98: imul
      99: istore        5
     101: aload_0
     102: getfield      #113                // Field numRows:I
     105: ifle          118
     108: aload_2
     109: arraylength
     110: iconst_4
     111: isub
     112: iload         5
     114: irem
     115: ifeq          128
     118: new           #68                 // class java/lang/IllegalArgumentException
     121: dup
     122: ldc           #3                  // String  Error: given array is not encoded matrix over GF(2^m)
     124: invokespecial #117                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     127: athrow
     128: aload_0
     129: aload_2
     130: arraylength
     131: iconst_4
     132: isub
     133: iload         5
     135: idiv
     136: putfield      #112                // Field numColumns:I
     139: aload_0
     140: aload_0
     141: getfield      #113                // Field numRows:I
     144: aload_0
     145: getfield      #112                // Field numColumns:I
     148: multianewarray #66,  2            // class "[[I"
     152: putfield      #114                // Field matrix:[[I
     155: iconst_4
     156: istore        4
     158: iconst_0
     159: istore        6
     161: iload         6
     163: aload_0
     164: getfield      #113                // Field numRows:I
     167: if_icmpge     266
     170: iconst_0
     171: istore        7
     173: iload         7
     175: aload_0
     176: getfield      #112                // Field numColumns:I
     179: if_icmpge     260
     182: iconst_0
     183: istore        8
     185: iload         8
     187: iload_3
     188: if_icmpge     224
     191: aload_0
     192: getfield      #114                // Field matrix:[[I
     195: iload         6
     197: aaload
     198: iload         7
     200: dup2
     201: iaload
     202: aload_2
     203: iload         4
     205: iinc          4, 1
     208: baload
     209: sipush        255
     212: iand
     213: iload         8
     215: ishl
     216: ixor
     217: iastore
     218: iinc          8, 8
     221: goto          185
     224: aload_0
     225: getfield      #115                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
     228: aload_0
     229: getfield      #114                // Field matrix:[[I
     232: iload         6
     234: aaload
     235: iload         7
     237: iaload
     238: invokevirtual #126                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.isElementOfThisField:(I)Z
     241: ifne          254
     244: new           #68                 // class java/lang/IllegalArgumentException
     247: dup
     248: ldc           #3                  // String  Error: given array is not encoded matrix over GF(2^m)
     250: invokespecial #117                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     253: athrow
     254: iinc          7, 1
     257: goto          173
     260: iinc          6, 1
     263: goto          161
     266: return

  public org.bouncycastle.pqc.math.linearalgebra.GF2mMatrix(org.bouncycastle.pqc.math.linearalgebra.GF2mMatrix);
    Code:
       0: aload_0
       1: invokespecial #138                // Method org/bouncycastle/pqc/math/linearalgebra/Matrix."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #113                // Field numRows:I
       9: putfield      #113                // Field numRows:I
      12: aload_0
      13: aload_1
      14: getfield      #112                // Field numColumns:I
      17: putfield      #112                // Field numColumns:I
      20: aload_0
      21: aload_1
      22: getfield      #115                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      25: putfield      #115                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      28: aload_0
      29: aload_0
      30: getfield      #113                // Field numRows:I
      33: anewarray     #65                 // class "[I"
      36: putfield      #114                // Field matrix:[[I
      39: iconst_0
      40: istore_2
      41: iload_2
      42: aload_0
      43: getfield      #113                // Field numRows:I
      46: if_icmpge     70
      49: aload_0
      50: getfield      #114                // Field matrix:[[I
      53: iload_2
      54: aload_1
      55: getfield      #114                // Field matrix:[[I
      58: iload_2
      59: aaload
      60: invokestatic  #137                // Method org/bouncycastle/pqc/math/linearalgebra/IntUtils.clone:([I)[I
      63: aastore
      64: iinc          2, 1
      67: goto          41
      70: return

  protected org.bouncycastle.pqc.math.linearalgebra.GF2mMatrix(org.bouncycastle.pqc.math.linearalgebra.GF2mField, int[][]);
    Code:
       0: aload_0
       1: invokespecial #138                // Method org/bouncycastle/pqc/math/linearalgebra/Matrix."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #115                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
       9: aload_0
      10: aload_2
      11: putfield      #114                // Field matrix:[[I
      14: aload_0
      15: aload_2
      16: arraylength
      17: putfield      #113                // Field numRows:I
      20: aload_0
      21: aload_2
      22: iconst_0
      23: aaload
      24: arraylength
      25: putfield      #112                // Field numColumns:I
      28: return

  public byte[] getEncoded();
    Code:
       0: bipush        8
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: getfield      #115                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
       9: invokevirtual #123                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.getDegree:()I
      12: iload_1
      13: if_icmple     25
      16: iinc          2, 1
      19: iinc          1, 8
      22: goto          5
      25: aload_0
      26: getfield      #113                // Field numRows:I
      29: aload_0
      30: getfield      #112                // Field numColumns:I
      33: imul
      34: iload_2
      35: imul
      36: iconst_4
      37: iadd
      38: newarray       byte
      40: astore_3
      41: aload_3
      42: iconst_0
      43: aload_0
      44: getfield      #113                // Field numRows:I
      47: sipush        255
      50: iand
      51: i2b
      52: bastore
      53: aload_3
      54: iconst_1
      55: aload_0
      56: getfield      #113                // Field numRows:I
      59: bipush        8
      61: iushr
      62: sipush        255
      65: iand
      66: i2b
      67: bastore
      68: aload_3
      69: iconst_2
      70: aload_0
      71: getfield      #113                // Field numRows:I
      74: bipush        16
      76: iushr
      77: sipush        255
      80: iand
      81: i2b
      82: bastore
      83: aload_3
      84: iconst_3
      85: aload_0
      86: getfield      #113                // Field numRows:I
      89: bipush        24
      91: iushr
      92: sipush        255
      95: iand
      96: i2b
      97: bastore
      98: iconst_4
      99: istore_2
     100: iconst_0
     101: istore        4
     103: iload         4
     105: aload_0
     106: getfield      #113                // Field numRows:I
     109: if_icmpge     171
     112: iconst_0
     113: istore        5
     115: iload         5
     117: aload_0
     118: getfield      #112                // Field numColumns:I
     121: if_icmpge     165
     124: iconst_0
     125: istore        6
     127: iload         6
     129: iload_1
     130: if_icmpge     159
     133: aload_3
     134: iload_2
     135: iinc          2, 1
     138: aload_0
     139: getfield      #114                // Field matrix:[[I
     142: iload         4
     144: aaload
     145: iload         5
     147: iaload
     148: iload         6
     150: iushr
     151: i2b
     152: bastore
     153: iinc          6, 8
     156: goto          127
     159: iinc          5, 1
     162: goto          115
     165: iinc          4, 1
     168: goto          103
     171: aload_3
     172: areturn

  public boolean isZero();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #113                // Field numRows:I
       7: if_icmpge     45
      10: iconst_0
      11: istore_2
      12: iload_2
      13: aload_0
      14: getfield      #112                // Field numColumns:I
      17: if_icmpge     39
      20: aload_0
      21: getfield      #114                // Field matrix:[[I
      24: iload_1
      25: aaload
      26: iload_2
      27: iaload
      28: ifeq          33
      31: iconst_0
      32: ireturn
      33: iinc          2, 1
      36: goto          12
      39: iinc          1, 1
      42: goto          2
      45: iconst_1
      46: ireturn

  public org.bouncycastle.pqc.math.linearalgebra.Matrix computeInverse();
    Code:
       0: aload_0
       1: getfield      #113                // Field numRows:I
       4: aload_0
       5: getfield      #112                // Field numColumns:I
       8: if_icmpeq     21
      11: new           #67                 // class java/lang/ArithmeticException
      14: dup
      15: ldc           #7                  // String Matrix is not invertible.
      17: invokespecial #116                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #113                // Field numRows:I
      25: aload_0
      26: getfield      #113                // Field numRows:I
      29: multianewarray #66,  2            // class "[[I"
      33: astore_1
      34: aload_0
      35: getfield      #113                // Field numRows:I
      38: iconst_1
      39: isub
      40: istore_2
      41: iload_2
      42: iflt          63
      45: aload_1
      46: iload_2
      47: aload_0
      48: getfield      #114                // Field matrix:[[I
      51: iload_2
      52: aaload
      53: invokestatic  #137                // Method org/bouncycastle/pqc/math/linearalgebra/IntUtils.clone:([I)[I
      56: aastore
      57: iinc          2, -1
      60: goto          41
      63: aload_0
      64: getfield      #113                // Field numRows:I
      67: aload_0
      68: getfield      #113                // Field numRows:I
      71: multianewarray #66,  2            // class "[[I"
      75: astore_2
      76: aload_0
      77: getfield      #113                // Field numRows:I
      80: iconst_1
      81: isub
      82: istore_3
      83: iload_3
      84: iflt          99
      87: aload_2
      88: iload_3
      89: aaload
      90: iload_3
      91: iconst_1
      92: iastore
      93: iinc          3, -1
      96: goto          83
      99: iconst_0
     100: istore_3
     101: iload_3
     102: aload_0
     103: getfield      #113                // Field numRows:I
     106: if_icmpge     308
     109: aload_1
     110: iload_3
     111: aaload
     112: iload_3
     113: iaload
     114: ifne          187
     117: iconst_0
     118: istore        4
     120: iload_3
     121: iconst_1
     122: iadd
     123: istore        5
     125: iload         5
     127: aload_0
     128: getfield      #113                // Field numRows:I
     131: if_icmpge     172
     134: aload_1
     135: iload         5
     137: aaload
     138: iload_3
     139: iaload
     140: ifeq          166
     143: iconst_1
     144: istore        4
     146: aload_1
     147: iload_3
     148: iload         5
     150: invokestatic  #135                // Method swapColumns:([[III)V
     153: aload_2
     154: iload_3
     155: iload         5
     157: invokestatic  #135                // Method swapColumns:([[III)V
     160: aload_0
     161: getfield      #113                // Field numRows:I
     164: istore        5
     166: iinc          5, 1
     169: goto          125
     172: iload         4
     174: ifne          187
     177: new           #67                 // class java/lang/ArithmeticException
     180: dup
     181: ldc           #7                  // String Matrix is not invertible.
     183: invokespecial #116                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
     186: athrow
     187: aload_1
     188: iload_3
     189: aaload
     190: iload_3
     191: iaload
     192: istore        4
     194: aload_0
     195: getfield      #115                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
     198: iload         4
     200: invokevirtual #125                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.inverse:(I)I
     203: istore        5
     205: aload_0
     206: aload_1
     207: iload_3
     208: aaload
     209: iload         5
     211: invokespecial #132                // Method multRowWithElementThis:([II)V
     214: aload_0
     215: aload_2
     216: iload_3
     217: aaload
     218: iload         5
     220: invokespecial #132                // Method multRowWithElementThis:([II)V
     223: iconst_0
     224: istore        6
     226: iload         6
     228: aload_0
     229: getfield      #113                // Field numRows:I
     232: if_icmpge     302
     235: iload         6
     237: iload_3
     238: if_icmpeq     296
     241: aload_1
     242: iload         6
     244: aaload
     245: iload_3
     246: iaload
     247: istore        4
     249: iload         4
     251: ifeq          296
     254: aload_0
     255: aload_1
     256: iload_3
     257: aaload
     258: iload         4
     260: invokespecial #133                // Method multRowWithElement:([II)[I
     263: astore        7
     265: aload_0
     266: aload_2
     267: iload_3
     268: aaload
     269: iload         4
     271: invokespecial #133                // Method multRowWithElement:([II)[I
     274: astore        8
     276: aload_0
     277: aload         7
     279: aload_1
     280: iload         6
     282: aaload
     283: invokespecial #134                // Method addToRow:([I[I)V
     286: aload_0
     287: aload         8
     289: aload_2
     290: iload         6
     292: aaload
     293: invokespecial #134                // Method addToRow:([I[I)V
     296: iinc          6, 1
     299: goto          226
     302: iinc          3, 1
     305: goto          101
     308: new           #72                 // class org/bouncycastle/pqc/math/linearalgebra/GF2mMatrix
     311: dup
     312: aload_0
     313: getfield      #115                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
     316: aload_2
     317: invokespecial #136                // Method "<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;[[I)V
     320: areturn

  private static void swapColumns(int[][], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: aaload
       3: astore_3
       4: aload_0
       5: iload_1
       6: aload_0
       7: iload_2
       8: aaload
       9: aastore
      10: aload_0
      11: iload_2
      12: aload_3
      13: aastore
      14: return

  private void multRowWithElementThis(int[], int);
    Code:
       0: aload_1
       1: arraylength
       2: iconst_1
       3: isub
       4: istore_3
       5: iload_3
       6: iflt          29
       9: aload_1
      10: iload_3
      11: aload_0
      12: getfield      #115                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      15: aload_1
      16: iload_3
      17: iaload
      18: iload_2
      19: invokevirtual #128                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.mult:(II)I
      22: iastore
      23: iinc          3, -1
      26: goto          5
      29: return

  private int[] multRowWithElement(int[], int);
    Code:
       0: aload_1
       1: arraylength
       2: newarray       int
       4: astore_3
       5: aload_1
       6: arraylength
       7: iconst_1
       8: isub
       9: istore        4
      11: iload         4
      13: iflt          38
      16: aload_3
      17: iload         4
      19: aload_0
      20: getfield      #115                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      23: aload_1
      24: iload         4
      26: iaload
      27: iload_2
      28: invokevirtual #128                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.mult:(II)I
      31: iastore
      32: iinc          4, -1
      35: goto          11
      38: aload_3
      39: areturn

  private void addToRow(int[], int[]);
    Code:
       0: aload_2
       1: arraylength
       2: iconst_1
       3: isub
       4: istore_3
       5: iload_3
       6: iflt          31
       9: aload_2
      10: iload_3
      11: aload_0
      12: getfield      #115                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      15: aload_1
      16: iload_3
      17: iaload
      18: aload_2
      19: iload_3
      20: iaload
      21: invokevirtual #127                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.add:(II)I
      24: iastore
      25: iinc          3, -1
      28: goto          5
      31: return

  public org.bouncycastle.pqc.math.linearalgebra.Matrix rightMultiply(org.bouncycastle.pqc.math.linearalgebra.Matrix);
    Code:
       0: new           #69                 // class java/lang/RuntimeException
       3: dup
       4: ldc           #8                  // String Not implemented.
       6: invokespecial #118                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.bouncycastle.pqc.math.linearalgebra.Matrix rightMultiply(org.bouncycastle.pqc.math.linearalgebra.Permutation);
    Code:
       0: new           #69                 // class java/lang/RuntimeException
       3: dup
       4: ldc           #8                  // String Not implemented.
       6: invokespecial #118                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.bouncycastle.pqc.math.linearalgebra.Vector leftMultiply(org.bouncycastle.pqc.math.linearalgebra.Vector);
    Code:
       0: new           #69                 // class java/lang/RuntimeException
       3: dup
       4: ldc           #8                  // String Not implemented.
       6: invokespecial #118                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.bouncycastle.pqc.math.linearalgebra.Vector rightMultiply(org.bouncycastle.pqc.math.linearalgebra.Vector);
    Code:
       0: new           #69                 // class java/lang/RuntimeException
       3: dup
       4: ldc           #8                  // String Not implemented.
       6: invokespecial #118                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: instanceof    #72                 // class org/bouncycastle/pqc/math/linearalgebra/GF2mMatrix
       8: ifne          13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: checkcast     #72                 // class org/bouncycastle/pqc/math/linearalgebra/GF2mMatrix
      17: astore_2
      18: aload_0
      19: getfield      #115                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      22: aload_2
      23: getfield      #115                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      26: invokevirtual #129                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.equals:(Ljava/lang/Object;)Z
      29: ifeq          54
      32: aload_2
      33: getfield      #113                // Field numRows:I
      36: aload_0
      37: getfield      #112                // Field numColumns:I
      40: if_icmpne     54
      43: aload_2
      44: getfield      #112                // Field numColumns:I
      47: aload_0
      48: getfield      #112                // Field numColumns:I
      51: if_icmpeq     56
      54: iconst_0
      55: ireturn
      56: iconst_0
      57: istore_3
      58: iload_3
      59: aload_0
      60: getfield      #113                // Field numRows:I
      63: if_icmpge     113
      66: iconst_0
      67: istore        4
      69: iload         4
      71: aload_0
      72: getfield      #112                // Field numColumns:I
      75: if_icmpge     107
      78: aload_0
      79: getfield      #114                // Field matrix:[[I
      82: iload_3
      83: aaload
      84: iload         4
      86: iaload
      87: aload_2
      88: getfield      #114                // Field matrix:[[I
      91: iload_3
      92: aaload
      93: iload         4
      95: iaload
      96: if_icmpeq     101
      99: iconst_0
     100: ireturn
     101: iinc          4, 1
     104: goto          69
     107: iinc          3, 1
     110: goto          58
     113: iconst_1
     114: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #115                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
       4: invokevirtual #124                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.hashCode:()I
       7: bipush        31
       9: imul
      10: aload_0
      11: getfield      #113                // Field numRows:I
      14: iadd
      15: bipush        31
      17: imul
      18: aload_0
      19: getfield      #112                // Field numColumns:I
      22: iadd
      23: istore_1
      24: iconst_0
      25: istore_2
      26: iload_2
      27: aload_0
      28: getfield      #113                // Field numRows:I
      31: if_icmpge     70
      34: iconst_0
      35: istore_3
      36: iload_3
      37: aload_0
      38: getfield      #112                // Field numColumns:I
      41: if_icmpge     64
      44: iload_1
      45: bipush        31
      47: imul
      48: aload_0
      49: getfield      #114                // Field matrix:[[I
      52: iload_2
      53: aaload
      54: iload_3
      55: iaload
      56: iadd
      57: istore_1
      58: iinc          3, 1
      61: goto          36
      64: iinc          2, 1
      67: goto          26
      70: iload_1
      71: ireturn

  public java.lang.String toString();
    Code:
       0: new           #70                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #119                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #113                // Field numRows:I
      11: invokevirtual #121                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      14: ldc           #5                  // String  x
      16: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #112                // Field numColumns:I
      23: invokevirtual #121                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: ldc           #4                  // String  Matrix over
      28: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #115                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      35: invokevirtual #130                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.toString:()Ljava/lang/String;
      38: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #6                  // String : \n
      43: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #120                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: astore_1
      50: iconst_0
      51: istore_2
      52: iload_2
      53: aload_0
      54: getfield      #113                // Field numRows:I
      57: if_icmpge     140
      60: iconst_0
      61: istore_3
      62: iload_3
      63: aload_0
      64: getfield      #112                // Field numColumns:I
      67: if_icmpge     114
      70: new           #70                 // class java/lang/StringBuilder
      73: dup
      74: invokespecial #119                // Method java/lang/StringBuilder."<init>":()V
      77: aload_1
      78: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_0
      82: getfield      #115                // Field field:Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;
      85: aload_0
      86: getfield      #114                // Field matrix:[[I
      89: iload_2
      90: aaload
      91: iload_3
      92: iaload
      93: invokevirtual #131                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.elementToStr:(I)Ljava/lang/String;
      96: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: ldc           #2                  // String  :
     101: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: invokevirtual #120                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: astore_1
     108: iinc          3, 1
     111: goto          62
     114: new           #70                 // class java/lang/StringBuilder
     117: dup
     118: invokespecial #119                // Method java/lang/StringBuilder."<init>":()V
     121: aload_1
     122: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: ldc           #1                  // String \n
     127: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: invokevirtual #120                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     133: astore_1
     134: iinc          2, 1
     137: goto          52
     140: aload_1
     141: areturn
}
