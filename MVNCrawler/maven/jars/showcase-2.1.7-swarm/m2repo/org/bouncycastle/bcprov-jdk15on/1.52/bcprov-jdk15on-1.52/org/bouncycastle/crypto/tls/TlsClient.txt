public interface org.bouncycastle.crypto.tls.TlsClient extends org.bouncycastle.crypto.tls.TlsPeer {
  public abstract void init(org.bouncycastle.crypto.tls.TlsClientContext);

  public abstract org.bouncycastle.crypto.tls.TlsSession getSessionToResume();

  public abstract org.bouncycastle.crypto.tls.ProtocolVersion getClientHelloRecordLayerVersion();

  public abstract org.bouncycastle.crypto.tls.ProtocolVersion getClientVersion();

  public abstract boolean isFallback();

  public abstract int[] getCipherSuites();

  public abstract short[] getCompressionMethods();

  public abstract java.util.Hashtable getClientExtensions() throws java.io.IOException;

  public abstract void notifyServerVersion(org.bouncycastle.crypto.tls.ProtocolVersion) throws java.io.IOException;

  public abstract void notifySessionID(byte[]);

  public abstract void notifySelectedCipherSuite(int);

  public abstract void notifySelectedCompressionMethod(short);

  public abstract void processServerExtensions(java.util.Hashtable) throws java.io.IOException;

  public abstract void processServerSupplementalData(java.util.Vector) throws java.io.IOException;

  public abstract org.bouncycastle.crypto.tls.TlsKeyExchange getKeyExchange() throws java.io.IOException;

  public abstract org.bouncycastle.crypto.tls.TlsAuthentication getAuthentication() throws java.io.IOException;

  public abstract java.util.Vector getClientSupplementalData() throws java.io.IOException;

  public abstract void notifyNewSessionTicket(org.bouncycastle.crypto.tls.NewSessionTicket) throws java.io.IOException;
}
