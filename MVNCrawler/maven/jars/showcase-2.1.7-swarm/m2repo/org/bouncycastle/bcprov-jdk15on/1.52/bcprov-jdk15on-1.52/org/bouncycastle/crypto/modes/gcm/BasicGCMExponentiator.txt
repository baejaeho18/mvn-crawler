public class org.bouncycastle.crypto.modes.gcm.BasicGCMExponentiator implements org.bouncycastle.crypto.modes.gcm.GCMExponentiator {
  private int[] x;

  public org.bouncycastle.crypto.modes.gcm.BasicGCMExponentiator();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method java/lang/Object."<init>":()V
       4: return

  public void init(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #39                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.asInts:([B)[I
       5: putfield      #36                 // Field x:[I
       8: return

  public void exponentiateX(long, byte[]);
    Code:
       0: invokestatic  #38                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.oneAsInts:()[I
       3: astore        4
       5: lload_1
       6: lconst_0
       7: lcmp
       8: ifle          52
      11: aload_0
      12: getfield      #36                 // Field x:[I
      15: invokestatic  #42                 // Method org/bouncycastle/util/Arrays.clone:([I)[I
      18: astore        5
      20: lload_1
      21: lconst_1
      22: land
      23: lconst_0
      24: lcmp
      25: ifeq          35
      28: aload         4
      30: aload         5
      32: invokestatic  #41                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.multiply:([I[I)V
      35: aload         5
      37: aload         5
      39: invokestatic  #41                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.multiply:([I[I)V
      42: lload_1
      43: iconst_1
      44: lushr
      45: lstore_1
      46: lload_1
      47: lconst_0
      48: lcmp
      49: ifgt          20
      52: aload         4
      54: aload_3
      55: invokestatic  #40                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.asBytes:([I[B)V
      58: return
}
