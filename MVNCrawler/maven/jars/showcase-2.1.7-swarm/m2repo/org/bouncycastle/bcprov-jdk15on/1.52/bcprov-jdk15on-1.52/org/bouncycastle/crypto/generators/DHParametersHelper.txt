class org.bouncycastle.crypto.generators.DHParametersHelper {
  private static final java.math.BigInteger ONE;

  private static final java.math.BigInteger TWO;

  org.bouncycastle.crypto.generators.DHParametersHelper();
    Code:
       0: aload_0
       1: invokespecial #55                 // Method java/lang/Object."<init>":()V
       4: return

  static java.math.BigInteger[] generateSafePrimes(int, int, java.security.SecureRandom);
    Code:
       0: iload_0
       1: iconst_1
       2: isub
       3: istore        5
       5: iload_0
       6: iconst_2
       7: iushr
       8: istore        6
      10: new           #26                 // class java/math/BigInteger
      13: dup
      14: iload         5
      16: iconst_2
      17: aload_2
      18: invokespecial #60                 // Method java/math/BigInteger."<init>":(IILjava/util/Random;)V
      21: astore        4
      23: aload         4
      25: iconst_1
      26: invokevirtual #58                 // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      29: getstatic     #53                 // Field ONE:Ljava/math/BigInteger;
      32: invokevirtual #61                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      35: astore_3
      36: aload_3
      37: iload_1
      38: invokevirtual #56                 // Method java/math/BigInteger.isProbablePrime:(I)Z
      41: ifne          47
      44: goto          10
      47: iload_1
      48: iconst_2
      49: if_icmple     66
      52: aload         4
      54: iload_1
      55: iconst_2
      56: isub
      57: invokevirtual #56                 // Method java/math/BigInteger.isProbablePrime:(I)Z
      60: ifne          66
      63: goto          10
      66: aload_3
      67: invokestatic  #64                 // Method org/bouncycastle/math/ec/WNafUtil.getNafWeight:(Ljava/math/BigInteger;)I
      70: iload         6
      72: if_icmpge     78
      75: goto          10
      78: iconst_2
      79: anewarray     #26                 // class java/math/BigInteger
      82: dup
      83: iconst_0
      84: aload_3
      85: aastore
      86: dup
      87: iconst_1
      88: aload         4
      90: aastore
      91: areturn

  static java.math.BigInteger selectGenerator(java.math.BigInteger, java.math.BigInteger, java.security.SecureRandom);
    Code:
       0: aload_0
       1: getstatic     #54                 // Field TWO:Ljava/math/BigInteger;
       4: invokevirtual #62                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
       7: astore_3
       8: getstatic     #54                 // Field TWO:Ljava/math/BigInteger;
      11: aload_3
      12: aload_2
      13: invokestatic  #65                 // Method org/bouncycastle/util/BigIntegers.createRandomInRange:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/security/SecureRandom;)Ljava/math/BigInteger;
      16: astore        5
      18: aload         5
      20: getstatic     #54                 // Field TWO:Ljava/math/BigInteger;
      23: aload_0
      24: invokevirtual #63                 // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      27: astore        4
      29: aload         4
      31: getstatic     #53                 // Field ONE:Ljava/math/BigInteger;
      34: invokevirtual #57                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      37: ifne          8
      40: aload         4
      42: areturn

  static {};
    Code:
       0: lconst_1
       1: invokestatic  #59                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       4: putstatic     #53                 // Field ONE:Ljava/math/BigInteger;
       7: ldc2_w        #23                 // long 2l
      10: invokestatic  #59                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      13: putstatic     #54                 // Field TWO:Ljava/math/BigInteger;
      16: return
}
