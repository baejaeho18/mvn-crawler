public class org.bouncycastle.crypto.engines.RC6Engine implements org.bouncycastle.crypto.BlockCipher {
  private static final int wordSize;

  private static final int bytesPerWord;

  private static final int _noRounds;

  private int[] _S;

  private static final int P32;

  private static final int Q32;

  private static final int LGW;

  private boolean forEncryption;

  public org.bouncycastle.crypto.engines.RC6Engine();
    Code:
       0: aload_0
       1: invokespecial #101                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #97                 // Field _S:[I
       9: return

  public java.lang.String getAlgorithmName();
    Code:
       0: ldc           #3                  // String RC6
       2: areturn

  public int getBlockSize();
    Code:
       0: bipush        16
       2: ireturn

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_2
       1: instanceof    #73                 // class org/bouncycastle/crypto/params/KeyParameter
       4: ifne          40
       7: new           #65                 // class java/lang/IllegalArgumentException
      10: dup
      11: new           #68                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #103                // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #6                  // String invalid parameter passed to RC6 init -
      20: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_2
      24: invokevirtual #102                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #98                 // Method java/lang/Class.getName:()Ljava/lang/String;
      30: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #99                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_2
      41: checkcast     #73                 // class org/bouncycastle/crypto/params/KeyParameter
      44: astore_3
      45: aload_0
      46: iload_1
      47: putfield      #96                 // Field forEncryption:Z
      50: aload_0
      51: aload_3
      52: invokevirtual #116                // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
      55: invokespecial #112                // Method setKey:([B)V
      58: return

  public int processBlock(byte[], int, byte[], int);
    Code:
       0: aload_0
       1: invokevirtual #108                // Method getBlockSize:()I
       4: istore        5
       6: aload_0
       7: getfield      #97                 // Field _S:[I
      10: ifnonnull     23
      13: new           #66                 // class java/lang/IllegalStateException
      16: dup
      17: ldc           #4                  // String RC6 engine not initialised
      19: invokespecial #100                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: iload_2
      24: iload         5
      26: iadd
      27: aload_1
      28: arraylength
      29: if_icmple     42
      32: new           #70                 // class org/bouncycastle/crypto/DataLengthException
      35: dup
      36: ldc           #5                  // String input buffer too short
      38: invokespecial #106                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: iload         4
      44: iload         5
      46: iadd
      47: aload_3
      48: arraylength
      49: if_icmple     62
      52: new           #71                 // class org/bouncycastle/crypto/OutputLengthException
      55: dup
      56: ldc           #7                  // String output buffer too short
      58: invokespecial #107                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: aload_0
      63: getfield      #96                 // Field forEncryption:Z
      66: ifeq          81
      69: aload_0
      70: aload_1
      71: iload_2
      72: aload_3
      73: iload         4
      75: invokespecial #115                // Method encryptBlock:([BI[BI)I
      78: goto          90
      81: aload_0
      82: aload_1
      83: iload_2
      84: aload_3
      85: iload         4
      87: invokespecial #114                // Method decryptBlock:([BI[BI)I
      90: ireturn

  public void reset();
    Code:
       0: return

  private void setKey(byte[]);
    Code:
       0: aload_1
       1: arraylength
       2: iconst_3
       3: iadd
       4: iconst_4
       5: idiv
       6: istore_2
       7: iload_2
       8: ifne          13
      11: iconst_1
      12: istore_2
      13: aload_1
      14: arraylength
      15: iconst_4
      16: iadd
      17: iconst_1
      18: isub
      19: iconst_4
      20: idiv
      21: newarray       int
      23: astore_3
      24: aload_1
      25: arraylength
      26: iconst_1
      27: isub
      28: istore        4
      30: iload         4
      32: iflt          65
      35: aload_3
      36: iload         4
      38: iconst_4
      39: idiv
      40: aload_3
      41: iload         4
      43: iconst_4
      44: idiv
      45: iaload
      46: bipush        8
      48: ishl
      49: aload_1
      50: iload         4
      52: baload
      53: sipush        255
      56: iand
      57: iadd
      58: iastore
      59: iinc          4, -1
      62: goto          30
      65: aload_0
      66: bipush        44
      68: newarray       int
      70: putfield      #97                 // Field _S:[I
      73: aload_0
      74: getfield      #97                 // Field _S:[I
      77: iconst_0
      78: ldc           #2                  // int -1209970333
      80: iastore
      81: iconst_1
      82: istore        4
      84: iload         4
      86: aload_0
      87: getfield      #97                 // Field _S:[I
      90: arraylength
      91: if_icmpge     119
      94: aload_0
      95: getfield      #97                 // Field _S:[I
      98: iload         4
     100: aload_0
     101: getfield      #97                 // Field _S:[I
     104: iload         4
     106: iconst_1
     107: isub
     108: iaload
     109: ldc           #1                  // int -1640531527
     111: iadd
     112: iastore
     113: iinc          4, 1
     116: goto          84
     119: aload_3
     120: arraylength
     121: aload_0
     122: getfield      #97                 // Field _S:[I
     125: arraylength
     126: if_icmple     138
     129: iconst_3
     130: aload_3
     131: arraylength
     132: imul
     133: istore        4
     135: goto          147
     138: iconst_3
     139: aload_0
     140: getfield      #97                 // Field _S:[I
     143: arraylength
     144: imul
     145: istore        4
     147: iconst_0
     148: istore        5
     150: iconst_0
     151: istore        6
     153: iconst_0
     154: istore        7
     156: iconst_0
     157: istore        8
     159: iconst_0
     160: istore        9
     162: iload         9
     164: iload         4
     166: if_icmpge     250
     169: aload_0
     170: getfield      #97                 // Field _S:[I
     173: iload         7
     175: aload_0
     176: aload_0
     177: getfield      #97                 // Field _S:[I
     180: iload         7
     182: iaload
     183: iload         5
     185: iadd
     186: iload         6
     188: iadd
     189: iconst_3
     190: invokespecial #109                // Method rotateLeft:(II)I
     193: dup_x2
     194: iastore
     195: istore        5
     197: aload_3
     198: iload         8
     200: aload_0
     201: aload_3
     202: iload         8
     204: iaload
     205: iload         5
     207: iadd
     208: iload         6
     210: iadd
     211: iload         5
     213: iload         6
     215: iadd
     216: invokespecial #109                // Method rotateLeft:(II)I
     219: dup_x2
     220: iastore
     221: istore        6
     223: iload         7
     225: iconst_1
     226: iadd
     227: aload_0
     228: getfield      #97                 // Field _S:[I
     231: arraylength
     232: irem
     233: istore        7
     235: iload         8
     237: iconst_1
     238: iadd
     239: aload_3
     240: arraylength
     241: irem
     242: istore        8
     244: iinc          9, 1
     247: goto          162
     250: return

  private int encryptBlock(byte[], int, byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #113                // Method bytesToWord:([BI)I
       6: istore        5
       8: aload_0
       9: aload_1
      10: iload_2
      11: iconst_4
      12: iadd
      13: invokespecial #113                // Method bytesToWord:([BI)I
      16: istore        6
      18: aload_0
      19: aload_1
      20: iload_2
      21: bipush        8
      23: iadd
      24: invokespecial #113                // Method bytesToWord:([BI)I
      27: istore        7
      29: aload_0
      30: aload_1
      31: iload_2
      32: bipush        12
      34: iadd
      35: invokespecial #113                // Method bytesToWord:([BI)I
      38: istore        8
      40: iload         6
      42: aload_0
      43: getfield      #97                 // Field _S:[I
      46: iconst_0
      47: iaload
      48: iadd
      49: istore        6
      51: iload         8
      53: aload_0
      54: getfield      #97                 // Field _S:[I
      57: iconst_1
      58: iaload
      59: iadd
      60: istore        8
      62: iconst_1
      63: istore        9
      65: iload         9
      67: bipush        20
      69: if_icmpgt     208
      72: iconst_0
      73: istore        10
      75: iconst_0
      76: istore        11
      78: iload         6
      80: iconst_2
      81: iload         6
      83: imul
      84: iconst_1
      85: iadd
      86: imul
      87: istore        10
      89: aload_0
      90: iload         10
      92: iconst_5
      93: invokespecial #109                // Method rotateLeft:(II)I
      96: istore        10
      98: iload         8
     100: iconst_2
     101: iload         8
     103: imul
     104: iconst_1
     105: iadd
     106: imul
     107: istore        11
     109: aload_0
     110: iload         11
     112: iconst_5
     113: invokespecial #109                // Method rotateLeft:(II)I
     116: istore        11
     118: iload         5
     120: iload         10
     122: ixor
     123: istore        5
     125: aload_0
     126: iload         5
     128: iload         11
     130: invokespecial #109                // Method rotateLeft:(II)I
     133: istore        5
     135: iload         5
     137: aload_0
     138: getfield      #97                 // Field _S:[I
     141: iconst_2
     142: iload         9
     144: imul
     145: iaload
     146: iadd
     147: istore        5
     149: iload         7
     151: iload         11
     153: ixor
     154: istore        7
     156: aload_0
     157: iload         7
     159: iload         10
     161: invokespecial #109                // Method rotateLeft:(II)I
     164: istore        7
     166: iload         7
     168: aload_0
     169: getfield      #97                 // Field _S:[I
     172: iconst_2
     173: iload         9
     175: imul
     176: iconst_1
     177: iadd
     178: iaload
     179: iadd
     180: istore        7
     182: iload         5
     184: istore        12
     186: iload         6
     188: istore        5
     190: iload         7
     192: istore        6
     194: iload         8
     196: istore        7
     198: iload         12
     200: istore        8
     202: iinc          9, 1
     205: goto          65
     208: iload         5
     210: aload_0
     211: getfield      #97                 // Field _S:[I
     214: bipush        42
     216: iaload
     217: iadd
     218: istore        5
     220: iload         7
     222: aload_0
     223: getfield      #97                 // Field _S:[I
     226: bipush        43
     228: iaload
     229: iadd
     230: istore        7
     232: aload_0
     233: iload         5
     235: aload_3
     236: iload         4
     238: invokespecial #111                // Method wordToBytes:(I[BI)V
     241: aload_0
     242: iload         6
     244: aload_3
     245: iload         4
     247: iconst_4
     248: iadd
     249: invokespecial #111                // Method wordToBytes:(I[BI)V
     252: aload_0
     253: iload         7
     255: aload_3
     256: iload         4
     258: bipush        8
     260: iadd
     261: invokespecial #111                // Method wordToBytes:(I[BI)V
     264: aload_0
     265: iload         8
     267: aload_3
     268: iload         4
     270: bipush        12
     272: iadd
     273: invokespecial #111                // Method wordToBytes:(I[BI)V
     276: bipush        16
     278: ireturn

  private int decryptBlock(byte[], int, byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #113                // Method bytesToWord:([BI)I
       6: istore        5
       8: aload_0
       9: aload_1
      10: iload_2
      11: iconst_4
      12: iadd
      13: invokespecial #113                // Method bytesToWord:([BI)I
      16: istore        6
      18: aload_0
      19: aload_1
      20: iload_2
      21: bipush        8
      23: iadd
      24: invokespecial #113                // Method bytesToWord:([BI)I
      27: istore        7
      29: aload_0
      30: aload_1
      31: iload_2
      32: bipush        12
      34: iadd
      35: invokespecial #113                // Method bytesToWord:([BI)I
      38: istore        8
      40: iload         7
      42: aload_0
      43: getfield      #97                 // Field _S:[I
      46: bipush        43
      48: iaload
      49: isub
      50: istore        7
      52: iload         5
      54: aload_0
      55: getfield      #97                 // Field _S:[I
      58: bipush        42
      60: iaload
      61: isub
      62: istore        5
      64: bipush        20
      66: istore        9
      68: iload         9
      70: iconst_1
      71: if_icmplt     210
      74: iconst_0
      75: istore        10
      77: iconst_0
      78: istore        11
      80: iload         8
      82: istore        12
      84: iload         7
      86: istore        8
      88: iload         6
      90: istore        7
      92: iload         5
      94: istore        6
      96: iload         12
      98: istore        5
     100: iload         6
     102: iconst_2
     103: iload         6
     105: imul
     106: iconst_1
     107: iadd
     108: imul
     109: istore        10
     111: aload_0
     112: iload         10
     114: iconst_5
     115: invokespecial #109                // Method rotateLeft:(II)I
     118: istore        10
     120: iload         8
     122: iconst_2
     123: iload         8
     125: imul
     126: iconst_1
     127: iadd
     128: imul
     129: istore        11
     131: aload_0
     132: iload         11
     134: iconst_5
     135: invokespecial #109                // Method rotateLeft:(II)I
     138: istore        11
     140: iload         7
     142: aload_0
     143: getfield      #97                 // Field _S:[I
     146: iconst_2
     147: iload         9
     149: imul
     150: iconst_1
     151: iadd
     152: iaload
     153: isub
     154: istore        7
     156: aload_0
     157: iload         7
     159: iload         10
     161: invokespecial #110                // Method rotateRight:(II)I
     164: istore        7
     166: iload         7
     168: iload         11
     170: ixor
     171: istore        7
     173: iload         5
     175: aload_0
     176: getfield      #97                 // Field _S:[I
     179: iconst_2
     180: iload         9
     182: imul
     183: iaload
     184: isub
     185: istore        5
     187: aload_0
     188: iload         5
     190: iload         11
     192: invokespecial #110                // Method rotateRight:(II)I
     195: istore        5
     197: iload         5
     199: iload         10
     201: ixor
     202: istore        5
     204: iinc          9, -1
     207: goto          68
     210: iload         8
     212: aload_0
     213: getfield      #97                 // Field _S:[I
     216: iconst_1
     217: iaload
     218: isub
     219: istore        8
     221: iload         6
     223: aload_0
     224: getfield      #97                 // Field _S:[I
     227: iconst_0
     228: iaload
     229: isub
     230: istore        6
     232: aload_0
     233: iload         5
     235: aload_3
     236: iload         4
     238: invokespecial #111                // Method wordToBytes:(I[BI)V
     241: aload_0
     242: iload         6
     244: aload_3
     245: iload         4
     247: iconst_4
     248: iadd
     249: invokespecial #111                // Method wordToBytes:(I[BI)V
     252: aload_0
     253: iload         7
     255: aload_3
     256: iload         4
     258: bipush        8
     260: iadd
     261: invokespecial #111                // Method wordToBytes:(I[BI)V
     264: aload_0
     265: iload         8
     267: aload_3
     268: iload         4
     270: bipush        12
     272: iadd
     273: invokespecial #111                // Method wordToBytes:(I[BI)V
     276: bipush        16
     278: ireturn

  private int rotateLeft(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: ishl
       3: iload_1
       4: iload_2
       5: ineg
       6: iushr
       7: ior
       8: ireturn

  private int rotateRight(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: iushr
       3: iload_1
       4: iload_2
       5: ineg
       6: ishl
       7: ior
       8: ireturn

  private int bytesToWord(byte[], int);
    Code:
       0: iconst_0
       1: istore_3
       2: iconst_3
       3: istore        4
       5: iload         4
       7: iflt          32
      10: iload_3
      11: bipush        8
      13: ishl
      14: aload_1
      15: iload         4
      17: iload_2
      18: iadd
      19: baload
      20: sipush        255
      23: iand
      24: iadd
      25: istore_3
      26: iinc          4, -1
      29: goto          5
      32: iload_3
      33: ireturn

  private void wordToBytes(int, byte[], int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iconst_4
       6: if_icmpge     28
       9: aload_2
      10: iload         4
      12: iload_3
      13: iadd
      14: iload_1
      15: i2b
      16: bastore
      17: iload_1
      18: bipush        8
      20: iushr
      21: istore_1
      22: iinc          4, 1
      25: goto          3
      28: return
}
