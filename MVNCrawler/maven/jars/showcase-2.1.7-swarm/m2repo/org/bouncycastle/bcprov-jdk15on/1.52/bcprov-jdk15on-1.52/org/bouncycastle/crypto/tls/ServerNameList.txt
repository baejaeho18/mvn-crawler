public class org.bouncycastle.crypto.tls.ServerNameList {
  protected java.util.Vector serverNameList;

  public org.bouncycastle.crypto.tls.ServerNameList(java.util.Vector);
    Code:
       0: aload_0
       1: invokespecial #81                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnull        15
       8: aload_1
       9: invokevirtual #84                 // Method java/util/Vector.isEmpty:()Z
      12: ifeq          25
      15: new           #37                 // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #1                  // String \'serverNameList\' must not be null or empty
      21: invokespecial #80                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_0
      26: aload_1
      27: putfield      #74                 // Field serverNameList:Ljava/util/Vector;
      30: return

  public java.util.Vector getServerNameList();
    Code:
       0: aload_0
       1: getfield      #74                 // Field serverNameList:Ljava/util/Vector;
       4: areturn

  public void encode(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: new           #35                 // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #78                 // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: aload_0
      12: getfield      #74                 // Field serverNameList:Ljava/util/Vector;
      15: invokevirtual #82                 // Method java/util/Vector.size:()I
      18: if_icmpge     46
      21: aload_0
      22: getfield      #74                 // Field serverNameList:Ljava/util/Vector;
      25: iload_3
      26: invokevirtual #85                 // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      29: checkcast     #40                 // class org/bouncycastle/crypto/tls/ServerName
      32: astore        4
      34: aload         4
      36: aload_2
      37: invokevirtual #87                 // Method org/bouncycastle/crypto/tls/ServerName.encode:(Ljava/io/OutputStream;)V
      40: iinc          3, 1
      43: goto          10
      46: aload_2
      47: invokevirtual #77                 // Method java/io/ByteArrayOutputStream.size:()I
      50: invokestatic  #91                 // Method org/bouncycastle/crypto/tls/TlsUtils.checkUint16:(I)V
      53: aload_2
      54: invokevirtual #77                 // Method java/io/ByteArrayOutputStream.size:()I
      57: aload_1
      58: invokestatic  #94                 // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint16:(ILjava/io/OutputStream;)V
      61: aload_2
      62: aload_1
      63: invokevirtual #79                 // Method java/io/ByteArrayOutputStream.writeTo:(Ljava/io/OutputStream;)V
      66: return

  public static org.bouncycastle.crypto.tls.ServerNameList parse(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #93                 // Method org/bouncycastle/crypto/tls/TlsUtils.readUint16:(Ljava/io/InputStream;)I
       4: istore_1
       5: iload_1
       6: iconst_1
       7: if_icmpge     20
      10: new           #42                 // class org/bouncycastle/crypto/tls/TlsFatalAlert
      13: dup
      14: bipush        50
      16: invokespecial #90                 // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      19: athrow
      20: iload_1
      21: aload_0
      22: invokestatic  #92                 // Method org/bouncycastle/crypto/tls/TlsUtils.readFully:(ILjava/io/InputStream;)[B
      25: astore_2
      26: new           #34                 // class java/io/ByteArrayInputStream
      29: dup
      30: aload_2
      31: invokespecial #76                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      34: astore_3
      35: new           #39                 // class java/util/Vector
      38: dup
      39: invokespecial #83                 // Method java/util/Vector."<init>":()V
      42: astore        4
      44: aload_3
      45: invokevirtual #75                 // Method java/io/ByteArrayInputStream.available:()I
      48: ifle          67
      51: aload_3
      52: invokestatic  #88                 // Method org/bouncycastle/crypto/tls/ServerName.parse:(Ljava/io/InputStream;)Lorg/bouncycastle/crypto/tls/ServerName;
      55: astore        5
      57: aload         4
      59: aload         5
      61: invokevirtual #86                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      64: goto          44
      67: new           #41                 // class org/bouncycastle/crypto/tls/ServerNameList
      70: dup
      71: aload         4
      73: invokespecial #89                 // Method "<init>":(Ljava/util/Vector;)V
      76: areturn
}
