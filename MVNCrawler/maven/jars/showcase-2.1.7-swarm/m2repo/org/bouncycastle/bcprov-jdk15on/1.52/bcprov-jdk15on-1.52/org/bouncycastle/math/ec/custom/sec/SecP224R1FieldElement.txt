public class org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement extends org.bouncycastle.math.ec.ECFieldElement {
  public static final java.math.BigInteger Q;

  protected int[] x;

  public org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokespecial #143                // Method org/bouncycastle/math/ec/ECFieldElement."<init>":()V
       4: aload_1
       5: ifnull        25
       8: aload_1
       9: invokevirtual #141                // Method java/math/BigInteger.signum:()I
      12: iflt          25
      15: aload_1
      16: getstatic     #137                // Field Q:Ljava/math/BigInteger;
      19: invokevirtual #142                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      22: iflt          35
      25: new           #76                 // class java/lang/IllegalArgumentException
      28: dup
      29: ldc           #2                  // String x value invalid for SecP224R1FieldElement
      31: invokespecial #138                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: aload_1
      37: invokestatic  #153                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.fromBigInteger:(Ljava/math/BigInteger;)[I
      40: putfield      #136                // Field x:[I
      43: return

  public org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement();
    Code:
       0: aload_0
       1: invokespecial #143                // Method org/bouncycastle/math/ec/ECFieldElement."<init>":()V
       4: aload_0
       5: invokestatic  #163                // Method org/bouncycastle/math/raw/Nat224.create:()[I
       8: putfield      #136                // Field x:[I
      11: return

  protected org.bouncycastle.math.ec.custom.sec.SecP224R1FieldElement(int[]);
    Code:
       0: aload_0
       1: invokespecial #143                // Method org/bouncycastle/math/ec/ECFieldElement."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #136                // Field x:[I
       9: return

  public boolean isZero();
    Code:
       0: aload_0
       1: getfield      #136                // Field x:[I
       4: invokestatic  #165                // Method org/bouncycastle/math/raw/Nat224.isZero:([I)Z
       7: ireturn

  public boolean isOne();
    Code:
       0: aload_0
       1: getfield      #136                // Field x:[I
       4: invokestatic  #164                // Method org/bouncycastle/math/raw/Nat224.isOne:([I)Z
       7: ireturn

  public boolean testBitZero();
    Code:
       0: aload_0
       1: getfield      #136                // Field x:[I
       4: iconst_0
       5: invokestatic  #166                // Method org/bouncycastle/math/raw/Nat224.getBit:([II)I
       8: iconst_1
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.math.BigInteger toBigInteger();
    Code:
       0: aload_0
       1: getfield      #136                // Field x:[I
       4: invokestatic  #169                // Method org/bouncycastle/math/raw/Nat224.toBigInteger:([I)Ljava/math/BigInteger;
       7: areturn

  public java.lang.String getFieldName();
    Code:
       0: ldc           #1                  // String SecP224R1Field
       2: areturn

  public int getFieldSize();
    Code:
       0: getstatic     #137                // Field Q:Ljava/math/BigInteger;
       3: invokevirtual #139                // Method java/math/BigInteger.bitLength:()I
       6: ireturn

  public org.bouncycastle.math.ec.ECFieldElement add(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: invokestatic  #163                // Method org/bouncycastle/math/raw/Nat224.create:()[I
       3: astore_2
       4: aload_0
       5: getfield      #136                // Field x:[I
       8: aload_1
       9: checkcast     #81                 // class org/bouncycastle/math/ec/custom/sec/SecP224R1FieldElement
      12: getfield      #136                // Field x:[I
      15: aload_2
      16: invokestatic  #150                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.add:([I[I[I)V
      19: new           #81                 // class org/bouncycastle/math/ec/custom/sec/SecP224R1FieldElement
      22: dup
      23: aload_2
      24: invokespecial #154                // Method "<init>":([I)V
      27: areturn

  public org.bouncycastle.math.ec.ECFieldElement addOne();
    Code:
       0: invokestatic  #163                // Method org/bouncycastle/math/raw/Nat224.create:()[I
       3: astore_1
       4: aload_0
       5: getfield      #136                // Field x:[I
       8: aload_1
       9: invokestatic  #146                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.addOne:([I[I)V
      12: new           #81                 // class org/bouncycastle/math/ec/custom/sec/SecP224R1FieldElement
      15: dup
      16: aload_1
      17: invokespecial #154                // Method "<init>":([I)V
      20: areturn

  public org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: invokestatic  #163                // Method org/bouncycastle/math/raw/Nat224.create:()[I
       3: astore_2
       4: aload_0
       5: getfield      #136                // Field x:[I
       8: aload_1
       9: checkcast     #81                 // class org/bouncycastle/math/ec/custom/sec/SecP224R1FieldElement
      12: getfield      #136                // Field x:[I
      15: aload_2
      16: invokestatic  #152                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.subtract:([I[I[I)V
      19: new           #81                 // class org/bouncycastle/math/ec/custom/sec/SecP224R1FieldElement
      22: dup
      23: aload_2
      24: invokespecial #154                // Method "<init>":([I)V
      27: areturn

  public org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: invokestatic  #163                // Method org/bouncycastle/math/raw/Nat224.create:()[I
       3: astore_2
       4: aload_0
       5: getfield      #136                // Field x:[I
       8: aload_1
       9: checkcast     #81                 // class org/bouncycastle/math/ec/custom/sec/SecP224R1FieldElement
      12: getfield      #136                // Field x:[I
      15: aload_2
      16: invokestatic  #151                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.multiply:([I[I[I)V
      19: new           #81                 // class org/bouncycastle/math/ec/custom/sec/SecP224R1FieldElement
      22: dup
      23: aload_2
      24: invokespecial #154                // Method "<init>":([I)V
      27: areturn

  public org.bouncycastle.math.ec.ECFieldElement divide(org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: invokestatic  #163                // Method org/bouncycastle/math/raw/Nat224.create:()[I
       3: astore_2
       4: getstatic     #135                // Field org/bouncycastle/math/ec/custom/sec/SecP224R1Field.P:[I
       7: aload_1
       8: checkcast     #81                 // class org/bouncycastle/math/ec/custom/sec/SecP224R1FieldElement
      11: getfield      #136                // Field x:[I
      14: aload_2
      15: invokestatic  #161                // Method org/bouncycastle/math/raw/Mod.invert:([I[I[I)V
      18: aload_2
      19: aload_0
      20: getfield      #136                // Field x:[I
      23: aload_2
      24: invokestatic  #151                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.multiply:([I[I[I)V
      27: new           #81                 // class org/bouncycastle/math/ec/custom/sec/SecP224R1FieldElement
      30: dup
      31: aload_2
      32: invokespecial #154                // Method "<init>":([I)V
      35: areturn

  public org.bouncycastle.math.ec.ECFieldElement negate();
    Code:
       0: invokestatic  #163                // Method org/bouncycastle/math/raw/Nat224.create:()[I
       3: astore_1
       4: aload_0
       5: getfield      #136                // Field x:[I
       8: aload_1
       9: invokestatic  #147                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.negate:([I[I)V
      12: new           #81                 // class org/bouncycastle/math/ec/custom/sec/SecP224R1FieldElement
      15: dup
      16: aload_1
      17: invokespecial #154                // Method "<init>":([I)V
      20: areturn

  public org.bouncycastle.math.ec.ECFieldElement square();
    Code:
       0: invokestatic  #163                // Method org/bouncycastle/math/raw/Nat224.create:()[I
       3: astore_1
       4: aload_0
       5: getfield      #136                // Field x:[I
       8: aload_1
       9: invokestatic  #148                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.square:([I[I)V
      12: new           #81                 // class org/bouncycastle/math/ec/custom/sec/SecP224R1FieldElement
      15: dup
      16: aload_1
      17: invokespecial #154                // Method "<init>":([I)V
      20: areturn

  public org.bouncycastle.math.ec.ECFieldElement invert();
    Code:
       0: invokestatic  #163                // Method org/bouncycastle/math/raw/Nat224.create:()[I
       3: astore_1
       4: getstatic     #135                // Field org/bouncycastle/math/ec/custom/sec/SecP224R1Field.P:[I
       7: aload_0
       8: getfield      #136                // Field x:[I
      11: aload_1
      12: invokestatic  #161                // Method org/bouncycastle/math/raw/Mod.invert:([I[I[I)V
      15: new           #81                 // class org/bouncycastle/math/ec/custom/sec/SecP224R1FieldElement
      18: dup
      19: aload_1
      20: invokespecial #154                // Method "<init>":([I)V
      23: areturn

  public org.bouncycastle.math.ec.ECFieldElement sqrt();
    Code:
       0: aload_0
       1: getfield      #136                // Field x:[I
       4: astore_1
       5: aload_1
       6: invokestatic  #165                // Method org/bouncycastle/math/raw/Nat224.isZero:([I)Z
       9: ifne          19
      12: aload_1
      13: invokestatic  #164                // Method org/bouncycastle/math/raw/Nat224.isOne:([I)Z
      16: ifeq          21
      19: aload_0
      20: areturn
      21: invokestatic  #163                // Method org/bouncycastle/math/raw/Nat224.create:()[I
      24: astore_2
      25: aload_1
      26: aload_2
      27: invokestatic  #147                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.negate:([I[I)V
      30: getstatic     #135                // Field org/bouncycastle/math/ec/custom/sec/SecP224R1Field.P:[I
      33: invokestatic  #160                // Method org/bouncycastle/math/raw/Mod.random:([I)[I
      36: astore_3
      37: invokestatic  #163                // Method org/bouncycastle/math/raw/Nat224.create:()[I
      40: astore        4
      42: aload_1
      43: invokestatic  #155                // Method isSquare:([I)Z
      46: ifne          51
      49: aconst_null
      50: areturn
      51: aload_2
      52: aload_3
      53: aload         4
      55: invokestatic  #156                // Method trySqrt:([I[I[I)Z
      58: ifne          69
      61: aload_3
      62: aload_3
      63: invokestatic  #146                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.addOne:([I[I)V
      66: goto          51
      69: aload         4
      71: aload_3
      72: invokestatic  #148                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.square:([I[I)V
      75: aload_1
      76: aload_3
      77: invokestatic  #168                // Method org/bouncycastle/math/raw/Nat224.eq:([I[I)Z
      80: ifeq          95
      83: new           #81                 // class org/bouncycastle/math/ec/custom/sec/SecP224R1FieldElement
      86: dup
      87: aload         4
      89: invokespecial #154                // Method "<init>":([I)V
      92: goto          96
      95: aconst_null
      96: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #81                 // class org/bouncycastle/math/ec/custom/sec/SecP224R1FieldElement
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #81                 // class org/bouncycastle/math/ec/custom/sec/SecP224R1FieldElement
      20: astore_2
      21: aload_0
      22: getfield      #136                // Field x:[I
      25: aload_2
      26: getfield      #136                // Field x:[I
      29: invokestatic  #168                // Method org/bouncycastle/math/raw/Nat224.eq:([I[I)Z
      32: ireturn

  public int hashCode();
    Code:
       0: getstatic     #137                // Field Q:Ljava/math/BigInteger;
       3: invokevirtual #140                // Method java/math/BigInteger.hashCode:()I
       6: aload_0
       7: getfield      #136                // Field x:[I
      10: iconst_0
      11: bipush        7
      13: invokestatic  #170                // Method org/bouncycastle/util/Arrays.hashCode:([III)I
      16: ixor
      17: ireturn

  private static boolean isSquare(int[]);
    Code:
       0: invokestatic  #163                // Method org/bouncycastle/math/raw/Nat224.create:()[I
       3: astore_1
       4: invokestatic  #163                // Method org/bouncycastle/math/raw/Nat224.create:()[I
       7: astore_2
       8: aload_0
       9: aload_1
      10: invokestatic  #167                // Method org/bouncycastle/math/raw/Nat224.copy:([I[I)V
      13: iconst_0
      14: istore_3
      15: iload_3
      16: bipush        7
      18: if_icmpge     46
      21: aload_1
      22: aload_2
      23: invokestatic  #167                // Method org/bouncycastle/math/raw/Nat224.copy:([I[I)V
      26: aload_1
      27: iconst_1
      28: iload_3
      29: ishl
      30: aload_1
      31: invokestatic  #145                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.squareN:([II[I)V
      34: aload_1
      35: aload_2
      36: aload_1
      37: invokestatic  #151                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.multiply:([I[I[I)V
      40: iinc          3, 1
      43: goto          15
      46: aload_1
      47: bipush        95
      49: aload_1
      50: invokestatic  #145                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.squareN:([II[I)V
      53: aload_1
      54: invokestatic  #164                // Method org/bouncycastle/math/raw/Nat224.isOne:([I)Z
      57: ireturn

  private static void RM(int[], int[], int[], int[], int[], int[], int[]);
    Code:
       0: aload         4
       2: aload_2
       3: aload         6
       5: invokestatic  #151                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.multiply:([I[I[I)V
       8: aload         6
      10: aload_0
      11: aload         6
      13: invokestatic  #151                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.multiply:([I[I[I)V
      16: aload_3
      17: aload_1
      18: aload         5
      20: invokestatic  #151                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.multiply:([I[I[I)V
      23: aload         5
      25: aload         6
      27: aload         5
      29: invokestatic  #150                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.add:([I[I[I)V
      32: aload_3
      33: aload_2
      34: aload         6
      36: invokestatic  #151                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.multiply:([I[I[I)V
      39: aload         5
      41: aload_3
      42: invokestatic  #167                // Method org/bouncycastle/math/raw/Nat224.copy:([I[I)V
      45: aload         4
      47: aload_1
      48: aload         4
      50: invokestatic  #151                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.multiply:([I[I[I)V
      53: aload         4
      55: aload         6
      57: aload         4
      59: invokestatic  #150                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.add:([I[I[I)V
      62: aload         4
      64: aload         5
      66: invokestatic  #148                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.square:([I[I)V
      69: aload         5
      71: aload_0
      72: aload         5
      74: invokestatic  #151                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.multiply:([I[I[I)V
      77: return

  private static void RP(int[], int[], int[], int[], int[]);
    Code:
       0: aload_0
       1: aload_3
       2: invokestatic  #167                // Method org/bouncycastle/math/raw/Nat224.copy:([I[I)V
       5: invokestatic  #163                // Method org/bouncycastle/math/raw/Nat224.create:()[I
       8: astore        5
      10: invokestatic  #163                // Method org/bouncycastle/math/raw/Nat224.create:()[I
      13: astore        6
      15: iconst_0
      16: istore        7
      18: iload         7
      20: bipush        7
      22: if_icmpge     81
      25: aload_1
      26: aload         5
      28: invokestatic  #167                // Method org/bouncycastle/math/raw/Nat224.copy:([I[I)V
      31: aload_2
      32: aload         6
      34: invokestatic  #167                // Method org/bouncycastle/math/raw/Nat224.copy:([I[I)V
      37: iconst_1
      38: iload         7
      40: ishl
      41: istore        8
      43: iinc          8, -1
      46: iload         8
      48: iflt          62
      51: aload_1
      52: aload_2
      53: aload_3
      54: aload         4
      56: invokestatic  #157                // Method RS:([I[I[I[I)V
      59: goto          43
      62: aload_0
      63: aload         5
      65: aload         6
      67: aload_1
      68: aload_2
      69: aload_3
      70: aload         4
      72: invokestatic  #159                // Method RM:([I[I[I[I[I[I[I)V
      75: iinc          7, 1
      78: goto          18
      81: return

  private static void RS(int[], int[], int[], int[]);
    Code:
       0: aload_1
       1: aload_0
       2: aload_1
       3: invokestatic  #151                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.multiply:([I[I[I)V
       6: aload_1
       7: aload_1
       8: invokestatic  #149                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.twice:([I[I)V
      11: aload_0
      12: aload_3
      13: invokestatic  #148                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.square:([I[I)V
      16: aload_2
      17: aload_3
      18: aload_0
      19: invokestatic  #150                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.add:([I[I[I)V
      22: aload_2
      23: aload_3
      24: aload_2
      25: invokestatic  #151                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.multiply:([I[I[I)V
      28: bipush        7
      30: aload_2
      31: iconst_2
      32: iconst_0
      33: invokestatic  #162                // Method org/bouncycastle/math/raw/Nat.shiftUpBits:(I[III)I
      36: istore        4
      38: iload         4
      40: aload_2
      41: invokestatic  #144                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.reduce32:(I[I)V
      44: return

  private static boolean trySqrt(int[], int[], int[]);
    Code:
       0: invokestatic  #163                // Method org/bouncycastle/math/raw/Nat224.create:()[I
       3: astore_3
       4: aload_1
       5: aload_3
       6: invokestatic  #167                // Method org/bouncycastle/math/raw/Nat224.copy:([I[I)V
       9: invokestatic  #163                // Method org/bouncycastle/math/raw/Nat224.create:()[I
      12: astore        4
      14: aload         4
      16: iconst_0
      17: iconst_1
      18: iastore
      19: invokestatic  #163                // Method org/bouncycastle/math/raw/Nat224.create:()[I
      22: astore        5
      24: aload_0
      25: aload_3
      26: aload         4
      28: aload         5
      30: aload_2
      31: invokestatic  #158                // Method RP:([I[I[I[I[I)V
      34: invokestatic  #163                // Method org/bouncycastle/math/raw/Nat224.create:()[I
      37: astore        6
      39: invokestatic  #163                // Method org/bouncycastle/math/raw/Nat224.create:()[I
      42: astore        7
      44: iconst_1
      45: istore        8
      47: iload         8
      49: bipush        96
      51: if_icmpge     107
      54: aload_3
      55: aload         6
      57: invokestatic  #167                // Method org/bouncycastle/math/raw/Nat224.copy:([I[I)V
      60: aload         4
      62: aload         7
      64: invokestatic  #167                // Method org/bouncycastle/math/raw/Nat224.copy:([I[I)V
      67: aload_3
      68: aload         4
      70: aload         5
      72: aload_2
      73: invokestatic  #157                // Method RS:([I[I[I[I)V
      76: aload_3
      77: invokestatic  #165                // Method org/bouncycastle/math/raw/Nat224.isZero:([I)Z
      80: ifeq          101
      83: getstatic     #135                // Field org/bouncycastle/math/ec/custom/sec/SecP224R1Field.P:[I
      86: aload         7
      88: aload_2
      89: invokestatic  #161                // Method org/bouncycastle/math/raw/Mod.invert:([I[I[I)V
      92: aload_2
      93: aload         6
      95: aload_2
      96: invokestatic  #151                // Method org/bouncycastle/math/ec/custom/sec/SecP224R1Field.multiply:([I[I[I)V
      99: iconst_1
     100: ireturn
     101: iinc          8, 1
     104: goto          47
     107: iconst_0
     108: ireturn

  static {};
    Code:
       0: getstatic     #134                // Field org/bouncycastle/math/ec/custom/sec/SecP224R1Curve.q:Ljava/math/BigInteger;
       3: putstatic     #137                // Field Q:Ljava/math/BigInteger;
       6: return
}
