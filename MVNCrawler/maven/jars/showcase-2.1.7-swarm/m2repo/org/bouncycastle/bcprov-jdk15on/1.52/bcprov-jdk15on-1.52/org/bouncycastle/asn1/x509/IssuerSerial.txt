public class org.bouncycastle.asn1.x509.IssuerSerial extends org.bouncycastle.asn1.ASN1Object {
  org.bouncycastle.asn1.x509.GeneralNames issuer;

  org.bouncycastle.asn1.ASN1Integer serial;

  org.bouncycastle.asn1.DERBitString issuerUID;

  public static org.bouncycastle.asn1.x509.IssuerSerial getInstance(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #40                 // class org/bouncycastle/asn1/x509/IssuerSerial
       4: ifeq          12
       7: aload_0
       8: checkcast     #40                 // class org/bouncycastle/asn1/x509/IssuerSerial
      11: areturn
      12: aload_0
      13: ifnull        28
      16: new           #40                 // class org/bouncycastle/asn1/x509/IssuerSerial
      19: dup
      20: aload_0
      21: invokestatic  #107                // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      24: invokespecial #114                // Method "<init>":(Lorg/bouncycastle/asn1/ASN1Sequence;)V
      27: areturn
      28: aconst_null
      29: areturn

  public static org.bouncycastle.asn1.x509.IssuerSerial getInstance(org.bouncycastle.asn1.ASN1TaggedObject, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #108                // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Lorg/bouncycastle/asn1/ASN1TaggedObject;Z)Lorg/bouncycastle/asn1/ASN1Sequence;
       5: invokestatic  #116                // Method getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/IssuerSerial;
       8: areturn

  private org.bouncycastle.asn1.x509.IssuerSerial(org.bouncycastle.asn1.ASN1Sequence);
    Code:
       0: aload_0
       1: invokespecial #104                // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_1
       5: invokevirtual #105                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
       8: iconst_2
       9: if_icmpeq     50
      12: aload_1
      13: invokevirtual #105                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      16: iconst_3
      17: if_icmpeq     50
      20: new           #30                 // class java/lang/IllegalArgumentException
      23: dup
      24: new           #31                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #1                  // String Bad sequence size:
      33: invokevirtual #99                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_1
      37: invokevirtual #105                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      40: invokevirtual #98                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #95                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: aload_1
      52: iconst_0
      53: invokevirtual #106                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      56: invokestatic  #113                // Method org/bouncycastle/asn1/x509/GeneralNames.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/GeneralNames;
      59: putfield      #94                 // Field issuer:Lorg/bouncycastle/asn1/x509/GeneralNames;
      62: aload_0
      63: aload_1
      64: iconst_1
      65: invokevirtual #106                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      68: invokestatic  #103                // Method org/bouncycastle/asn1/ASN1Integer.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Integer;
      71: putfield      #92                 // Field serial:Lorg/bouncycastle/asn1/ASN1Integer;
      74: aload_1
      75: invokevirtual #105                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      78: iconst_3
      79: if_icmpne     94
      82: aload_0
      83: aload_1
      84: iconst_2
      85: invokevirtual #106                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      88: invokestatic  #109                // Method org/bouncycastle/asn1/DERBitString.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/DERBitString;
      91: putfield      #93                 // Field issuerUID:Lorg/bouncycastle/asn1/DERBitString;
      94: return

  public org.bouncycastle.asn1.x509.IssuerSerial(org.bouncycastle.asn1.x500.X500Name, java.math.BigInteger);
    Code:
       0: aload_0
       1: new           #39                 // class org/bouncycastle/asn1/x509/GeneralNames
       4: dup
       5: new           #38                 // class org/bouncycastle/asn1/x509/GeneralName
       8: dup
       9: aload_1
      10: invokespecial #111                // Method org/bouncycastle/asn1/x509/GeneralName."<init>":(Lorg/bouncycastle/asn1/x500/X500Name;)V
      13: invokespecial #112                // Method org/bouncycastle/asn1/x509/GeneralNames."<init>":(Lorg/bouncycastle/asn1/x509/GeneralName;)V
      16: new           #33                 // class org/bouncycastle/asn1/ASN1Integer
      19: dup
      20: aload_2
      21: invokespecial #102                // Method org/bouncycastle/asn1/ASN1Integer."<init>":(Ljava/math/BigInteger;)V
      24: invokespecial #115                // Method "<init>":(Lorg/bouncycastle/asn1/x509/GeneralNames;Lorg/bouncycastle/asn1/ASN1Integer;)V
      27: return

  public org.bouncycastle.asn1.x509.IssuerSerial(org.bouncycastle.asn1.x509.GeneralNames, java.math.BigInteger);
    Code:
       0: aload_0
       1: aload_1
       2: new           #33                 // class org/bouncycastle/asn1/ASN1Integer
       5: dup
       6: aload_2
       7: invokespecial #102                // Method org/bouncycastle/asn1/ASN1Integer."<init>":(Ljava/math/BigInteger;)V
      10: invokespecial #115                // Method "<init>":(Lorg/bouncycastle/asn1/x509/GeneralNames;Lorg/bouncycastle/asn1/ASN1Integer;)V
      13: return

  public org.bouncycastle.asn1.x509.IssuerSerial(org.bouncycastle.asn1.x509.GeneralNames, org.bouncycastle.asn1.ASN1Integer);
    Code:
       0: aload_0
       1: invokespecial #104                // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #94                 // Field issuer:Lorg/bouncycastle/asn1/x509/GeneralNames;
       9: aload_0
      10: aload_2
      11: putfield      #92                 // Field serial:Lorg/bouncycastle/asn1/ASN1Integer;
      14: return

  public org.bouncycastle.asn1.x509.GeneralNames getIssuer();
    Code:
       0: aload_0
       1: getfield      #94                 // Field issuer:Lorg/bouncycastle/asn1/x509/GeneralNames;
       4: areturn

  public org.bouncycastle.asn1.ASN1Integer getSerial();
    Code:
       0: aload_0
       1: getfield      #92                 // Field serial:Lorg/bouncycastle/asn1/ASN1Integer;
       4: areturn

  public org.bouncycastle.asn1.DERBitString getIssuerUID();
    Code:
       0: aload_0
       1: getfield      #93                 // Field issuerUID:Lorg/bouncycastle/asn1/DERBitString;
       4: areturn

  public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive();
    Code:
       0: new           #32                 // class org/bouncycastle/asn1/ASN1EncodableVector
       3: dup
       4: invokespecial #100                // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #94                 // Field issuer:Lorg/bouncycastle/asn1/x509/GeneralNames;
      13: invokevirtual #101                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      16: aload_1
      17: aload_0
      18: getfield      #92                 // Field serial:Lorg/bouncycastle/asn1/ASN1Integer;
      21: invokevirtual #101                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      24: aload_0
      25: getfield      #93                 // Field issuerUID:Lorg/bouncycastle/asn1/DERBitString;
      28: ifnull        39
      31: aload_1
      32: aload_0
      33: getfield      #93                 // Field issuerUID:Lorg/bouncycastle/asn1/DERBitString;
      36: invokevirtual #101                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      39: new           #37                 // class org/bouncycastle/asn1/DERSequence
      42: dup
      43: aload_1
      44: invokespecial #110                // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
      47: areturn
}
