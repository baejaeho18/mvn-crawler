public class org.bouncycastle.crypto.modes.SICBlockCipher extends org.bouncycastle.crypto.StreamBlockCipher implements org.bouncycastle.crypto.SkippingStreamCipher {
  private final org.bouncycastle.crypto.BlockCipher cipher;

  private final int blockSize;

  private byte[] IV;

  private byte[] counter;

  private byte[] counterOut;

  private int byteCount;

  public org.bouncycastle.crypto.modes.SICBlockCipher(org.bouncycastle.crypto.BlockCipher);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #120                // Method org/bouncycastle/crypto/StreamBlockCipher."<init>":(Lorg/bouncycastle/crypto/BlockCipher;)V
       5: aload_0
       6: aload_1
       7: putfield      #113                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      10: aload_0
      11: aload_0
      12: getfield      #113                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      15: invokeinterface #133,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      20: putfield      #108                // Field blockSize:I
      23: aload_0
      24: aload_0
      25: getfield      #108                // Field blockSize:I
      28: newarray       byte
      30: putfield      #110                // Field IV:[B
      33: aload_0
      34: aload_0
      35: getfield      #108                // Field blockSize:I
      38: newarray       byte
      40: putfield      #111                // Field counter:[B
      43: aload_0
      44: aload_0
      45: getfield      #108                // Field blockSize:I
      48: newarray       byte
      50: putfield      #112                // Field counterOut:[B
      53: aload_0
      54: iconst_0
      55: putfield      #109                // Field byteCount:I
      58: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_2
       1: instanceof    #70                 // class org/bouncycastle/crypto/params/ParametersWithIV
       4: ifeq          62
       7: aload_2
       8: checkcast     #70                 // class org/bouncycastle/crypto/params/ParametersWithIV
      11: astore_3
      12: aload_3
      13: invokevirtual #130                // Method org/bouncycastle/crypto/params/ParametersWithIV.getIV:()[B
      16: astore        4
      18: aload         4
      20: iconst_0
      21: aload_0
      22: getfield      #110                // Field IV:[B
      25: iconst_0
      26: aload_0
      27: getfield      #110                // Field IV:[B
      30: arraylength
      31: invokestatic  #119                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      34: aload_3
      35: invokevirtual #131                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      38: ifnull        55
      41: aload_0
      42: getfield      #113                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      45: iconst_1
      46: aload_3
      47: invokevirtual #131                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      50: invokeinterface #137,  3          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
      55: aload_0
      56: invokevirtual #123                // Method reset:()V
      59: goto          72
      62: new           #61                 // class java/lang/IllegalArgumentException
      65: dup
      66: ldc           #2                  // String SIC mode requires ParametersWithIV
      68: invokespecial #114                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: return

  public java.lang.String getAlgorithmName();
    Code:
       0: new           #63                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #116                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #113                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      11: invokeinterface #136,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getAlgorithmName:()Ljava/lang/String;
      16: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #1                  // String /SIC
      21: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #117                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public int getBlockSize();
    Code:
       0: aload_0
       1: getfield      #113                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       4: invokeinterface #133,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
       9: ireturn

  public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_0
       4: getfield      #108                // Field blockSize:I
       7: aload_3
       8: iload         4
      10: invokevirtual #129                // Method processBytes:([BII[BI)I
      13: pop
      14: aload_0
      15: getfield      #108                // Field blockSize:I
      18: ireturn

  protected byte calculateByte(byte) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #109                // Field byteCount:I
       4: ifne          47
       7: aload_0
       8: getfield      #113                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      11: aload_0
      12: getfield      #111                // Field counter:[B
      15: iconst_0
      16: aload_0
      17: getfield      #112                // Field counterOut:[B
      20: iconst_0
      21: invokeinterface #135,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      26: pop
      27: aload_0
      28: getfield      #112                // Field counterOut:[B
      31: aload_0
      32: dup
      33: getfield      #109                // Field byteCount:I
      36: dup_x1
      37: iconst_1
      38: iadd
      39: putfield      #109                // Field byteCount:I
      42: baload
      43: iload_1
      44: ixor
      45: i2b
      46: ireturn
      47: aload_0
      48: getfield      #112                // Field counterOut:[B
      51: aload_0
      52: dup
      53: getfield      #109                // Field byteCount:I
      56: dup_x1
      57: iconst_1
      58: iadd
      59: putfield      #109                // Field byteCount:I
      62: baload
      63: iload_1
      64: ixor
      65: i2b
      66: istore_2
      67: aload_0
      68: getfield      #109                // Field byteCount:I
      71: aload_0
      72: getfield      #111                // Field counter:[B
      75: arraylength
      76: if_icmpne     88
      79: aload_0
      80: iconst_0
      81: putfield      #109                // Field byteCount:I
      84: aload_0
      85: invokespecial #122                // Method incrementCounter:()V
      88: iload_2
      89: ireturn

  private void incrementCounterPow2(int);
    Code:
       0: aload_0
       1: getfield      #111                // Field counter:[B
       4: arraylength
       5: iconst_1
       6: iload_1
       7: iadd
       8: isub
       9: istore_2
      10: iload_2
      11: iflt          35
      14: aload_0
      15: getfield      #111                // Field counter:[B
      18: iload_2
      19: dup2
      20: baload
      21: iconst_1
      22: iadd
      23: i2b
      24: dup_x2
      25: bastore
      26: ifne          35
      29: iinc          2, -1
      32: goto          10
      35: return

  private void incrementCounter(int);
    Code:
       0: aload_0
       1: getfield      #111                // Field counter:[B
       4: aload_0
       5: getfield      #111                // Field counter:[B
       8: arraylength
       9: iconst_1
      10: isub
      11: baload
      12: istore_2
      13: aload_0
      14: getfield      #111                // Field counter:[B
      17: aload_0
      18: getfield      #111                // Field counter:[B
      21: arraylength
      22: iconst_1
      23: isub
      24: dup2
      25: baload
      26: iload_1
      27: iadd
      28: i2b
      29: bastore
      30: iload_2
      31: ifeq          55
      34: aload_0
      35: getfield      #111                // Field counter:[B
      38: aload_0
      39: getfield      #111                // Field counter:[B
      42: arraylength
      43: iconst_1
      44: isub
      45: baload
      46: iload_2
      47: if_icmpge     55
      50: aload_0
      51: iconst_1
      52: invokespecial #126                // Method incrementCounterPow2:(I)V
      55: return

  private void incrementCounter();
    Code:
       0: aload_0
       1: getfield      #111                // Field counter:[B
       4: arraylength
       5: iconst_1
       6: isub
       7: istore_1
       8: iload_1
       9: iflt          33
      12: aload_0
      13: getfield      #111                // Field counter:[B
      16: iload_1
      17: dup2
      18: baload
      19: iconst_1
      20: iadd
      21: i2b
      22: dup_x2
      23: bastore
      24: ifne          33
      27: iinc          1, -1
      30: goto          8
      33: return

  private void decrementCounterPow2(int);
    Code:
       0: aload_0
       1: getfield      #111                // Field counter:[B
       4: iload_1
       5: baload
       6: ifne          56
       9: iconst_0
      10: istore_2
      11: aload_0
      12: getfield      #111                // Field counter:[B
      15: arraylength
      16: iconst_1
      17: iload_1
      18: iadd
      19: isub
      20: istore_3
      21: iload_3
      22: ifle          42
      25: aload_0
      26: getfield      #111                // Field counter:[B
      29: iload_3
      30: baload
      31: ifeq          36
      34: iconst_1
      35: istore_2
      36: iinc          3, -1
      39: goto          21
      42: iload_2
      43: ifne          56
      46: new           #62                 // class java/lang/IllegalStateException
      49: dup
      50: ldc           #3                  // String attempt to reduce counter past zero.
      52: invokespecial #115                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: getfield      #111                // Field counter:[B
      60: arraylength
      61: iconst_1
      62: iload_1
      63: iadd
      64: isub
      65: istore_2
      66: iload_2
      67: iflt          92
      70: aload_0
      71: getfield      #111                // Field counter:[B
      74: iload_2
      75: dup2
      76: baload
      77: iconst_1
      78: isub
      79: i2b
      80: dup_x2
      81: bastore
      82: iconst_m1
      83: if_icmpne     92
      86: iinc          2, -1
      89: goto          66
      92: return

  private void decrementCounter();
    Code:
       0: aload_0
       1: getfield      #111                // Field counter:[B
       4: iconst_0
       5: baload
       6: ifne          54
       9: iconst_0
      10: istore_1
      11: aload_0
      12: getfield      #111                // Field counter:[B
      15: arraylength
      16: iconst_1
      17: isub
      18: istore_2
      19: iload_2
      20: ifle          40
      23: aload_0
      24: getfield      #111                // Field counter:[B
      27: iload_2
      28: baload
      29: ifeq          34
      32: iconst_1
      33: istore_1
      34: iinc          2, -1
      37: goto          19
      40: iload_1
      41: ifne          54
      44: new           #62                 // class java/lang/IllegalStateException
      47: dup
      48: ldc           #3                  // String attempt to reduce counter past zero.
      50: invokespecial #115                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_0
      55: getfield      #111                // Field counter:[B
      58: arraylength
      59: iconst_1
      60: isub
      61: istore_1
      62: iload_1
      63: iflt          88
      66: aload_0
      67: getfield      #111                // Field counter:[B
      70: iload_1
      71: dup2
      72: baload
      73: iconst_1
      74: isub
      75: i2b
      76: dup_x2
      77: bastore
      78: iconst_m1
      79: if_icmpne     88
      82: iinc          1, -1
      85: goto          62
      88: return

  private void adjustCounter(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: iflt          118
       6: lload_1
       7: aload_0
       8: getfield      #109                // Field byteCount:I
      11: i2l
      12: ladd
      13: aload_0
      14: getfield      #108                // Field blockSize:I
      17: i2l
      18: ldiv
      19: lstore_3
      20: lload_3
      21: ldc2_w        #59                 // long 255l
      24: lcmp
      25: ifle          89
      28: lload_3
      29: lstore        5
      31: iconst_5
      32: istore        7
      34: iload         7
      36: iconst_1
      37: if_icmplt     79
      40: lconst_1
      41: bipush        8
      43: iload         7
      45: imul
      46: lshl
      47: lstore        8
      49: lload         5
      51: lload         8
      53: lcmp
      54: iflt          73
      57: aload_0
      58: iload         7
      60: invokespecial #126                // Method incrementCounterPow2:(I)V
      63: lload         5
      65: lload         8
      67: lsub
      68: lstore        5
      70: goto          49
      73: iinc          7, -1
      76: goto          34
      79: aload_0
      80: lload         5
      82: l2i
      83: invokespecial #125                // Method incrementCounter:(I)V
      86: goto          95
      89: aload_0
      90: lload_3
      91: l2i
      92: invokespecial #125                // Method incrementCounter:(I)V
      95: aload_0
      96: lload_1
      97: aload_0
      98: getfield      #109                // Field byteCount:I
     101: i2l
     102: ladd
     103: aload_0
     104: getfield      #108                // Field blockSize:I
     107: i2l
     108: lload_3
     109: lmul
     110: lsub
     111: l2i
     112: putfield      #109                // Field byteCount:I
     115: goto          288
     118: lload_1
     119: lneg
     120: aload_0
     121: getfield      #109                // Field byteCount:I
     124: i2l
     125: lsub
     126: aload_0
     127: getfield      #108                // Field blockSize:I
     130: i2l
     131: ldiv
     132: lstore_3
     133: lload_3
     134: ldc2_w        #59                 // long 255l
     137: lcmp
     138: ifle          219
     141: lload_3
     142: lstore        5
     144: iconst_5
     145: istore        7
     147: iload         7
     149: iconst_1
     150: if_icmplt     192
     153: lconst_1
     154: bipush        8
     156: iload         7
     158: imul
     159: lshl
     160: lstore        8
     162: lload         5
     164: lload         8
     166: lcmp
     167: ifle          186
     170: aload_0
     171: iload         7
     173: invokespecial #124                // Method decrementCounterPow2:(I)V
     176: lload         5
     178: lload         8
     180: lsub
     181: lstore        5
     183: goto          162
     186: iinc          7, -1
     189: goto          147
     192: lconst_0
     193: lstore        7
     195: lload         7
     197: lload         5
     199: lcmp
     200: ifeq          216
     203: aload_0
     204: invokespecial #121                // Method decrementCounter:()V
     207: lload         7
     209: lconst_1
     210: ladd
     211: lstore        7
     213: goto          195
     216: goto          242
     219: lconst_0
     220: lstore        5
     222: lload         5
     224: lload_3
     225: lcmp
     226: ifeq          242
     229: aload_0
     230: invokespecial #121                // Method decrementCounter:()V
     233: lload         5
     235: lconst_1
     236: ladd
     237: lstore        5
     239: goto          222
     242: aload_0
     243: getfield      #109                // Field byteCount:I
     246: i2l
     247: lload_1
     248: ladd
     249: aload_0
     250: getfield      #108                // Field blockSize:I
     253: i2l
     254: lload_3
     255: lmul
     256: ladd
     257: l2i
     258: istore        5
     260: iload         5
     262: iflt          273
     265: aload_0
     266: iconst_0
     267: putfield      #109                // Field byteCount:I
     270: goto          288
     273: aload_0
     274: invokespecial #121                // Method decrementCounter:()V
     277: aload_0
     278: aload_0
     279: getfield      #108                // Field blockSize:I
     282: iload         5
     284: iadd
     285: putfield      #109                // Field byteCount:I
     288: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #110                // Field IV:[B
       4: iconst_0
       5: aload_0
       6: getfield      #111                // Field counter:[B
       9: iconst_0
      10: aload_0
      11: getfield      #111                // Field counter:[B
      14: arraylength
      15: invokestatic  #119                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      18: aload_0
      19: getfield      #113                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
      22: invokeinterface #134,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.reset:()V
      27: aload_0
      28: iconst_0
      29: putfield      #109                // Field byteCount:I
      32: return

  public long skip(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #128                // Method adjustCounter:(J)V
       5: aload_0
       6: getfield      #113                // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       9: aload_0
      10: getfield      #111                // Field counter:[B
      13: iconst_0
      14: aload_0
      15: getfield      #112                // Field counterOut:[B
      18: iconst_0
      19: invokeinterface #135,  5          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      24: pop
      25: lload_1
      26: lreturn

  public long seekTo(long);
    Code:
       0: aload_0
       1: invokevirtual #123                // Method reset:()V
       4: aload_0
       5: lload_1
       6: invokevirtual #127                // Method skip:(J)J
       9: lreturn

  public long getPosition();
    Code:
       0: aload_0
       1: getfield      #110                // Field IV:[B
       4: arraylength
       5: newarray       byte
       7: astore_1
       8: aload_0
       9: getfield      #111                // Field counter:[B
      12: iconst_0
      13: aload_1
      14: iconst_0
      15: aload_1
      16: arraylength
      17: invokestatic  #119                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      20: aload_1
      21: arraylength
      22: iconst_1
      23: isub
      24: istore_2
      25: iload_2
      26: iconst_1
      27: if_icmplt     80
      30: aload_1
      31: iload_2
      32: baload
      33: sipush        255
      36: iand
      37: aload_0
      38: getfield      #110                // Field IV:[B
      41: iload_2
      42: baload
      43: sipush        255
      46: iand
      47: isub
      48: istore_3
      49: iload_3
      50: ifge          69
      53: aload_1
      54: iload_2
      55: iconst_1
      56: isub
      57: dup2
      58: baload
      59: iconst_1
      60: isub
      61: i2b
      62: bastore
      63: iinc_w        3, 256
      69: aload_1
      70: iload_2
      71: iload_3
      72: i2b
      73: bastore
      74: iinc          2, -1
      77: goto          25
      80: aload_1
      81: aload_1
      82: arraylength
      83: bipush        8
      85: isub
      86: invokestatic  #132                // Method org/bouncycastle/util/Pack.bigEndianToLong:([BI)J
      89: aload_0
      90: getfield      #108                // Field blockSize:I
      93: i2l
      94: lmul
      95: aload_0
      96: getfield      #109                // Field byteCount:I
      99: i2l
     100: ladd
     101: lreturn
}
