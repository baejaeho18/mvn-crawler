class org.bouncycastle.crypto.generators.CramerShoupParametersGenerator$ParametersHelper {
  private static final java.math.BigInteger TWO;

  private org.bouncycastle.crypto.generators.CramerShoupParametersGenerator$ParametersHelper();
    Code:
       0: aload_0
       1: invokespecial #53                 // Method java/lang/Object."<init>":()V
       4: return

  static java.math.BigInteger[] generateSafePrimes(int, int, java.security.SecureRandom);
    Code:
       0: iload_0
       1: iconst_1
       2: isub
       3: istore        5
       5: new           #25                 // class java/math/BigInteger
       8: dup
       9: iload         5
      11: iconst_2
      12: aload_2
      13: invokespecial #58                 // Method java/math/BigInteger."<init>":(IILjava/util/Random;)V
      16: astore        4
      18: aload         4
      20: iconst_1
      21: invokevirtual #56                 // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      24: invokestatic  #62                 // Method org/bouncycastle/crypto/generators/CramerShoupParametersGenerator.access$000:()Ljava/math/BigInteger;
      27: invokevirtual #59                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      30: astore_3
      31: aload_3
      32: iload_1
      33: invokevirtual #54                 // Method java/math/BigInteger.isProbablePrime:(I)Z
      36: ifeq          5
      39: iload_1
      40: iconst_2
      41: if_icmple     56
      44: aload         4
      46: iload_1
      47: invokevirtual #54                 // Method java/math/BigInteger.isProbablePrime:(I)Z
      50: ifeq          5
      53: goto          56
      56: iconst_2
      57: anewarray     #25                 // class java/math/BigInteger
      60: dup
      61: iconst_0
      62: aload_3
      63: aastore
      64: dup
      65: iconst_1
      66: aload         4
      68: aastore
      69: areturn

  static java.math.BigInteger selectGenerator(java.math.BigInteger, java.security.SecureRandom);
    Code:
       0: aload_0
       1: getstatic     #52                 // Field TWO:Ljava/math/BigInteger;
       4: invokevirtual #60                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
       7: astore_2
       8: getstatic     #52                 // Field TWO:Ljava/math/BigInteger;
      11: aload_2
      12: aload_1
      13: invokestatic  #63                 // Method org/bouncycastle/util/BigIntegers.createRandomInRange:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/security/SecureRandom;)Ljava/math/BigInteger;
      16: astore        4
      18: aload         4
      20: getstatic     #52                 // Field TWO:Ljava/math/BigInteger;
      23: aload_0
      24: invokevirtual #61                 // Method java/math/BigInteger.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      27: astore_3
      28: aload_3
      29: invokestatic  #62                 // Method org/bouncycastle/crypto/generators/CramerShoupParametersGenerator.access$000:()Ljava/math/BigInteger;
      32: invokevirtual #55                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      35: ifne          8
      38: aload_3
      39: areturn

  static {};
    Code:
       0: ldc2_w        #22                 // long 2l
       3: invokestatic  #57                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       6: putstatic     #52                 // Field TWO:Ljava/math/BigInteger;
       9: return
}
