public class org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder {
  private int version;

  private final org.bouncycastle.asn1.dvcs.ServiceType service;

  private org.bouncycastle.asn1.dvcs.DVCSRequestInformation initialInfo;

  private java.math.BigInteger nonce;

  private org.bouncycastle.asn1.dvcs.DVCSTime requestTime;

  private org.bouncycastle.asn1.x509.GeneralNames requester;

  private org.bouncycastle.asn1.x509.PolicyInformation requestPolicy;

  private org.bouncycastle.asn1.x509.GeneralNames dvcs;

  private org.bouncycastle.asn1.x509.GeneralNames dataLocations;

  private org.bouncycastle.asn1.x509.Extensions extensions;

  private static final int DEFAULT_VERSION;

  private static final int TAG_REQUESTER;

  private static final int TAG_REQUEST_POLICY;

  private static final int TAG_DVCS;

  private static final int TAG_DATA_LOCATIONS;

  private static final int TAG_EXTENSIONS;

  public org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder(org.bouncycastle.asn1.dvcs.ServiceType);
    Code:
       0: aload_0
       1: invokespecial #157                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #146                // Field version:I
       9: aload_0
      10: aload_1
      11: putfield      #150                // Field service:Lorg/bouncycastle/asn1/dvcs/ServiceType;
      14: return

  public org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder(org.bouncycastle.asn1.dvcs.DVCSRequestInformation);
    Code:
       0: aload_0
       1: invokespecial #157                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #146                // Field version:I
       9: aload_0
      10: aload_1
      11: putfield      #148                // Field initialInfo:Lorg/bouncycastle/asn1/dvcs/DVCSRequestInformation;
      14: aload_0
      15: aload_1
      16: invokevirtual #170                // Method org/bouncycastle/asn1/dvcs/DVCSRequestInformation.getService:()Lorg/bouncycastle/asn1/dvcs/ServiceType;
      19: putfield      #150                // Field service:Lorg/bouncycastle/asn1/dvcs/ServiceType;
      22: aload_0
      23: aload_1
      24: invokevirtual #167                // Method org/bouncycastle/asn1/dvcs/DVCSRequestInformation.getVersion:()I
      27: putfield      #146                // Field version:I
      30: aload_0
      31: aload_1
      32: invokevirtual #168                // Method org/bouncycastle/asn1/dvcs/DVCSRequestInformation.getNonce:()Ljava/math/BigInteger;
      35: putfield      #147                // Field nonce:Ljava/math/BigInteger;
      38: aload_0
      39: aload_1
      40: invokevirtual #169                // Method org/bouncycastle/asn1/dvcs/DVCSRequestInformation.getRequestTime:()Lorg/bouncycastle/asn1/dvcs/DVCSTime;
      43: putfield      #149                // Field requestTime:Lorg/bouncycastle/asn1/dvcs/DVCSTime;
      46: aload_0
      47: aload_1
      48: invokevirtual #173                // Method org/bouncycastle/asn1/dvcs/DVCSRequestInformation.getRequestPolicy:()Lorg/bouncycastle/asn1/x509/PolicyInformation;
      51: putfield      #155                // Field requestPolicy:Lorg/bouncycastle/asn1/x509/PolicyInformation;
      54: aload_0
      55: aload_1
      56: invokevirtual #171                // Method org/bouncycastle/asn1/dvcs/DVCSRequestInformation.getDVCS:()Lorg/bouncycastle/asn1/x509/GeneralNames;
      59: putfield      #153                // Field dvcs:Lorg/bouncycastle/asn1/x509/GeneralNames;
      62: aload_0
      63: aload_1
      64: invokevirtual #172                // Method org/bouncycastle/asn1/dvcs/DVCSRequestInformation.getDataLocations:()Lorg/bouncycastle/asn1/x509/GeneralNames;
      67: putfield      #152                // Field dataLocations:Lorg/bouncycastle/asn1/x509/GeneralNames;
      70: return

  public org.bouncycastle.asn1.dvcs.DVCSRequestInformation build();
    Code:
       0: new           #77                 // class org/bouncycastle/asn1/ASN1EncodableVector
       3: dup
       4: invokespecial #161                // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #146                // Field version:I
      12: iconst_1
      13: if_icmpeq     32
      16: aload_1
      17: new           #78                 // class org/bouncycastle/asn1/ASN1Integer
      20: dup
      21: aload_0
      22: getfield      #146                // Field version:I
      25: i2l
      26: invokespecial #163                // Method org/bouncycastle/asn1/ASN1Integer."<init>":(J)V
      29: invokevirtual #162                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      32: aload_1
      33: aload_0
      34: getfield      #150                // Field service:Lorg/bouncycastle/asn1/dvcs/ServiceType;
      37: invokevirtual #162                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      40: aload_0
      41: getfield      #147                // Field nonce:Ljava/math/BigInteger;
      44: ifnull        62
      47: aload_1
      48: new           #78                 // class org/bouncycastle/asn1/ASN1Integer
      51: dup
      52: aload_0
      53: getfield      #147                // Field nonce:Ljava/math/BigInteger;
      56: invokespecial #164                // Method org/bouncycastle/asn1/ASN1Integer."<init>":(Ljava/math/BigInteger;)V
      59: invokevirtual #162                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      62: aload_0
      63: getfield      #149                // Field requestTime:Lorg/bouncycastle/asn1/dvcs/DVCSTime;
      66: ifnull        77
      69: aload_1
      70: aload_0
      71: getfield      #149                // Field requestTime:Lorg/bouncycastle/asn1/dvcs/DVCSTime;
      74: invokevirtual #162                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      77: iconst_5
      78: newarray       int
      80: dup
      81: iconst_0
      82: iconst_0
      83: iastore
      84: dup
      85: iconst_1
      86: iconst_1
      87: iastore
      88: dup
      89: iconst_2
      90: iconst_2
      91: iastore
      92: dup
      93: iconst_3
      94: iconst_3
      95: iastore
      96: dup
      97: iconst_4
      98: iconst_4
      99: iastore
     100: astore_2
     101: iconst_5
     102: anewarray     #76                 // class org/bouncycastle/asn1/ASN1Encodable
     105: dup
     106: iconst_0
     107: aload_0
     108: getfield      #154                // Field requester:Lorg/bouncycastle/asn1/x509/GeneralNames;
     111: aastore
     112: dup
     113: iconst_1
     114: aload_0
     115: getfield      #155                // Field requestPolicy:Lorg/bouncycastle/asn1/x509/PolicyInformation;
     118: aastore
     119: dup
     120: iconst_2
     121: aload_0
     122: getfield      #153                // Field dvcs:Lorg/bouncycastle/asn1/x509/GeneralNames;
     125: aastore
     126: dup
     127: iconst_3
     128: aload_0
     129: getfield      #152                // Field dataLocations:Lorg/bouncycastle/asn1/x509/GeneralNames;
     132: aastore
     133: dup
     134: iconst_4
     135: aload_0
     136: getfield      #151                // Field extensions:Lorg/bouncycastle/asn1/x509/Extensions;
     139: aastore
     140: astore_3
     141: iconst_0
     142: istore        4
     144: iload         4
     146: aload_2
     147: arraylength
     148: if_icmpge     190
     151: aload_2
     152: iload         4
     154: iaload
     155: istore        5
     157: aload_3
     158: iload         4
     160: aaload
     161: astore        6
     163: aload         6
     165: ifnull        184
     168: aload_1
     169: new           #80                 // class org/bouncycastle/asn1/DERTaggedObject
     172: dup
     173: iconst_0
     174: iload         5
     176: aload         6
     178: invokespecial #166                // Method org/bouncycastle/asn1/DERTaggedObject."<init>":(ZILorg/bouncycastle/asn1/ASN1Encodable;)V
     181: invokevirtual #162                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
     184: iinc          4, 1
     187: goto          144
     190: new           #79                 // class org/bouncycastle/asn1/DERSequence
     193: dup
     194: aload_1
     195: invokespecial #165                // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
     198: invokestatic  #174                // Method org/bouncycastle/asn1/dvcs/DVCSRequestInformation.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/dvcs/DVCSRequestInformation;
     201: areturn

  public void setVersion(int);
    Code:
       0: aload_0
       1: getfield      #148                // Field initialInfo:Lorg/bouncycastle/asn1/dvcs/DVCSRequestInformation;
       4: ifnull        17
       7: new           #72                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #4                  // String cannot change version in existing DVCSRequestInformation
      13: invokespecial #156                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iload_1
      19: putfield      #146                // Field version:I
      22: return

  public void setNonce(java.math.BigInteger);
    Code:
       0: aload_0
       1: getfield      #148                // Field initialInfo:Lorg/bouncycastle/asn1/dvcs/DVCSRequestInformation;
       4: ifnull        84
       7: aload_0
       8: getfield      #148                // Field initialInfo:Lorg/bouncycastle/asn1/dvcs/DVCSRequestInformation;
      11: invokevirtual #168                // Method org/bouncycastle/asn1/dvcs/DVCSRequestInformation.getNonce:()Ljava/math/BigInteger;
      14: ifnonnull     25
      17: aload_0
      18: aload_1
      19: putfield      #147                // Field nonce:Ljava/math/BigInteger;
      22: goto          84
      25: aload_0
      26: getfield      #148                // Field initialInfo:Lorg/bouncycastle/asn1/dvcs/DVCSRequestInformation;
      29: invokevirtual #168                // Method org/bouncycastle/asn1/dvcs/DVCSRequestInformation.getNonce:()Ljava/math/BigInteger;
      32: invokevirtual #159                // Method java/math/BigInteger.toByteArray:()[B
      35: astore_2
      36: aload_1
      37: invokestatic  #179                // Method org/bouncycastle/util/BigIntegers.asUnsignedByteArray:(Ljava/math/BigInteger;)[B
      40: astore_3
      41: aload_2
      42: arraylength
      43: aload_3
      44: arraylength
      45: iadd
      46: newarray       byte
      48: astore        4
      50: aload_2
      51: iconst_0
      52: aload         4
      54: iconst_0
      55: aload_2
      56: arraylength
      57: invokestatic  #158                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      60: aload_3
      61: iconst_0
      62: aload         4
      64: aload_2
      65: arraylength
      66: aload_3
      67: arraylength
      68: invokestatic  #158                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      71: aload_0
      72: new           #75                 // class java/math/BigInteger
      75: dup
      76: aload         4
      78: invokespecial #160                // Method java/math/BigInteger."<init>":([B)V
      81: putfield      #147                // Field nonce:Ljava/math/BigInteger;
      84: aload_0
      85: aload_1
      86: putfield      #147                // Field nonce:Ljava/math/BigInteger;
      89: return

  public void setRequestTime(org.bouncycastle.asn1.dvcs.DVCSTime);
    Code:
       0: aload_0
       1: getfield      #148                // Field initialInfo:Lorg/bouncycastle/asn1/dvcs/DVCSRequestInformation;
       4: ifnull        17
       7: new           #72                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #3                  // String cannot change request time in existing DVCSRequestInformation
      13: invokespecial #156                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #149                // Field requestTime:Lorg/bouncycastle/asn1/dvcs/DVCSTime;
      22: return

  public void setRequester(org.bouncycastle.asn1.x509.GeneralName);
    Code:
       0: aload_0
       1: new           #83                 // class org/bouncycastle/asn1/x509/GeneralNames
       4: dup
       5: aload_1
       6: invokespecial #178                // Method org/bouncycastle/asn1/x509/GeneralNames."<init>":(Lorg/bouncycastle/asn1/x509/GeneralName;)V
       9: invokevirtual #177                // Method setRequester:(Lorg/bouncycastle/asn1/x509/GeneralNames;)V
      12: return

  public void setRequester(org.bouncycastle.asn1.x509.GeneralNames);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #154                // Field requester:Lorg/bouncycastle/asn1/x509/GeneralNames;
       5: return

  public void setRequestPolicy(org.bouncycastle.asn1.x509.PolicyInformation);
    Code:
       0: aload_0
       1: getfield      #148                // Field initialInfo:Lorg/bouncycastle/asn1/dvcs/DVCSRequestInformation;
       4: ifnull        17
       7: new           #72                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #2                  // String cannot change request policy in existing DVCSRequestInformation
      13: invokespecial #156                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #155                // Field requestPolicy:Lorg/bouncycastle/asn1/x509/PolicyInformation;
      22: return

  public void setDVCS(org.bouncycastle.asn1.x509.GeneralName);
    Code:
       0: aload_0
       1: new           #83                 // class org/bouncycastle/asn1/x509/GeneralNames
       4: dup
       5: aload_1
       6: invokespecial #178                // Method org/bouncycastle/asn1/x509/GeneralNames."<init>":(Lorg/bouncycastle/asn1/x509/GeneralName;)V
       9: invokevirtual #175                // Method setDVCS:(Lorg/bouncycastle/asn1/x509/GeneralNames;)V
      12: return

  public void setDVCS(org.bouncycastle.asn1.x509.GeneralNames);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #153                // Field dvcs:Lorg/bouncycastle/asn1/x509/GeneralNames;
       5: return

  public void setDataLocations(org.bouncycastle.asn1.x509.GeneralName);
    Code:
       0: aload_0
       1: new           #83                 // class org/bouncycastle/asn1/x509/GeneralNames
       4: dup
       5: aload_1
       6: invokespecial #178                // Method org/bouncycastle/asn1/x509/GeneralNames."<init>":(Lorg/bouncycastle/asn1/x509/GeneralName;)V
       9: invokevirtual #176                // Method setDataLocations:(Lorg/bouncycastle/asn1/x509/GeneralNames;)V
      12: return

  public void setDataLocations(org.bouncycastle.asn1.x509.GeneralNames);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #152                // Field dataLocations:Lorg/bouncycastle/asn1/x509/GeneralNames;
       5: return

  public void setExtensions(org.bouncycastle.asn1.x509.Extensions);
    Code:
       0: aload_0
       1: getfield      #148                // Field initialInfo:Lorg/bouncycastle/asn1/dvcs/DVCSRequestInformation;
       4: ifnull        17
       7: new           #72                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #1                  // String cannot change extensions in existing DVCSRequestInformation
      13: invokespecial #156                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #151                // Field extensions:Lorg/bouncycastle/asn1/x509/Extensions;
      22: return
}
