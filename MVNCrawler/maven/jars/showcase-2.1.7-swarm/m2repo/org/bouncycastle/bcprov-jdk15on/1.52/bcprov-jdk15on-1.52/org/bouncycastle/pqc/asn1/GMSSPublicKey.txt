public class org.bouncycastle.pqc.asn1.GMSSPublicKey extends org.bouncycastle.asn1.ASN1Object {
  private org.bouncycastle.asn1.ASN1Integer version;

  private byte[] publicKey;

  private org.bouncycastle.pqc.asn1.GMSSPublicKey(org.bouncycastle.asn1.ASN1Sequence);
    Code:
       0: aload_0
       1: invokespecial #89                 // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_1
       5: invokevirtual #92                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
       8: iconst_2
       9: if_icmpeq     42
      12: new           #34                 // class java/lang/IllegalArgumentException
      15: dup
      16: new           #35                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #81                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #1                  // String size of seq =
      25: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #92                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      32: invokevirtual #83                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      35: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #80                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: aload_1
      44: iconst_0
      45: invokevirtual #93                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      48: invokestatic  #88                 // Method org/bouncycastle/asn1/ASN1Integer.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Integer;
      51: putfield      #79                 // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
      54: aload_0
      55: aload_1
      56: iconst_1
      57: invokevirtual #93                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      60: invokestatic  #91                 // Method org/bouncycastle/asn1/ASN1OctetString.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1OctetString;
      63: invokevirtual #90                 // Method org/bouncycastle/asn1/ASN1OctetString.getOctets:()[B
      66: putfield      #78                 // Field publicKey:[B
      69: return

  public org.bouncycastle.pqc.asn1.GMSSPublicKey(byte[]);
    Code:
       0: aload_0
       1: invokespecial #89                 // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_0
       5: new           #37                 // class org/bouncycastle/asn1/ASN1Integer
       8: dup
       9: lconst_0
      10: invokespecial #87                 // Method org/bouncycastle/asn1/ASN1Integer."<init>":(J)V
      13: putfield      #79                 // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
      16: aload_0
      17: aload_1
      18: putfield      #78                 // Field publicKey:[B
      21: return

  public static org.bouncycastle.pqc.asn1.GMSSPublicKey getInstance(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #43                 // class org/bouncycastle/pqc/asn1/GMSSPublicKey
       4: ifeq          12
       7: aload_0
       8: checkcast     #43                 // class org/bouncycastle/pqc/asn1/GMSSPublicKey
      11: areturn
      12: aload_0
      13: ifnull        28
      16: new           #43                 // class org/bouncycastle/pqc/asn1/GMSSPublicKey
      19: dup
      20: aload_0
      21: invokestatic  #94                 // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      24: invokespecial #97                 // Method "<init>":(Lorg/bouncycastle/asn1/ASN1Sequence;)V
      27: areturn
      28: aconst_null
      29: areturn

  public byte[] getPublicKey();
    Code:
       0: aload_0
       1: getfield      #78                 // Field publicKey:[B
       4: invokestatic  #98                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
       7: areturn

  public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive();
    Code:
       0: new           #36                 // class org/bouncycastle/asn1/ASN1EncodableVector
       3: dup
       4: invokespecial #85                 // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #79                 // Field version:Lorg/bouncycastle/asn1/ASN1Integer;
      13: invokevirtual #86                 // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      16: aload_1
      17: new           #41                 // class org/bouncycastle/asn1/DEROctetString
      20: dup
      21: aload_0
      22: getfield      #78                 // Field publicKey:[B
      25: invokespecial #95                 // Method org/bouncycastle/asn1/DEROctetString."<init>":([B)V
      28: invokevirtual #86                 // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      31: new           #42                 // class org/bouncycastle/asn1/DERSequence
      34: dup
      35: aload_1
      36: invokespecial #96                 // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
      39: areturn
}
