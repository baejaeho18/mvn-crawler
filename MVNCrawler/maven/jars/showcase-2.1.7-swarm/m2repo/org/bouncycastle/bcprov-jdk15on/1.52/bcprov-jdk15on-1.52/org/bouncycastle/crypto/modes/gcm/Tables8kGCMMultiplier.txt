public class org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier implements org.bouncycastle.crypto.modes.gcm.GCMMultiplier {
  private byte[] H;

  private int[][][] M;

  public org.bouncycastle.crypto.modes.gcm.Tables8kGCMMultiplier();
    Code:
       0: aload_0
       1: invokespecial #48                 // Method java/lang/Object."<init>":()V
       4: return

  public void init(byte[]);
    Code:
       0: aload_0
       1: getfield      #47                 // Field M:[[[I
       4: ifnonnull     23
       7: aload_0
       8: bipush        32
      10: bipush        16
      12: iconst_4
      13: multianewarray #29,  3            // class "[[[I"
      17: putfield      #47                 // Field M:[[[I
      20: goto          35
      23: aload_0
      24: getfield      #46                 // Field H:[B
      27: aload_1
      28: invokestatic  #54                 // Method org/bouncycastle/util/Arrays.areEqual:([B[B)Z
      31: ifeq          35
      34: return
      35: aload_0
      36: aload_1
      37: invokestatic  #53                 // Method org/bouncycastle/util/Arrays.clone:([B)[B
      40: putfield      #46                 // Field H:[B
      43: aload_1
      44: aload_0
      45: getfield      #47                 // Field M:[[[I
      48: iconst_1
      49: aaload
      50: bipush        8
      52: aaload
      53: invokestatic  #49                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.asInts:([B[I)V
      56: iconst_4
      57: istore_2
      58: iload_2
      59: iconst_1
      60: if_icmplt     91
      63: aload_0
      64: getfield      #47                 // Field M:[[[I
      67: iconst_1
      68: aaload
      69: iload_2
      70: iload_2
      71: iadd
      72: aaload
      73: aload_0
      74: getfield      #47                 // Field M:[[[I
      77: iconst_1
      78: aaload
      79: iload_2
      80: aaload
      81: invokestatic  #50                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.multiplyP:([I[I)V
      84: iload_2
      85: iconst_1
      86: ishr
      87: istore_2
      88: goto          58
      91: aload_0
      92: getfield      #47                 // Field M:[[[I
      95: iconst_1
      96: aaload
      97: iconst_1
      98: aaload
      99: aload_0
     100: getfield      #47                 // Field M:[[[I
     103: iconst_0
     104: aaload
     105: bipush        8
     107: aaload
     108: invokestatic  #50                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.multiplyP:([I[I)V
     111: iconst_4
     112: istore_2
     113: iload_2
     114: iconst_1
     115: if_icmplt     146
     118: aload_0
     119: getfield      #47                 // Field M:[[[I
     122: iconst_0
     123: aaload
     124: iload_2
     125: iload_2
     126: iadd
     127: aaload
     128: aload_0
     129: getfield      #47                 // Field M:[[[I
     132: iconst_0
     133: aaload
     134: iload_2
     135: aaload
     136: invokestatic  #50                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.multiplyP:([I[I)V
     139: iload_2
     140: iconst_1
     141: ishr
     142: istore_2
     143: goto          113
     146: iconst_0
     147: istore_2
     148: iconst_2
     149: istore_3
     150: iload_3
     151: bipush        16
     153: if_icmpge     209
     156: iconst_1
     157: istore        4
     159: iload         4
     161: iload_3
     162: if_icmpge     202
     165: aload_0
     166: getfield      #47                 // Field M:[[[I
     169: iload_2
     170: aaload
     171: iload_3
     172: aaload
     173: aload_0
     174: getfield      #47                 // Field M:[[[I
     177: iload_2
     178: aaload
     179: iload         4
     181: aaload
     182: aload_0
     183: getfield      #47                 // Field M:[[[I
     186: iload_2
     187: aaload
     188: iload_3
     189: iload         4
     191: iadd
     192: aaload
     193: invokestatic  #52                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.xor:([I[I[I)V
     196: iinc          4, 1
     199: goto          159
     202: iload_3
     203: iload_3
     204: iadd
     205: istore_3
     206: goto          150
     209: iinc          2, 1
     212: iload_2
     213: bipush        32
     215: if_icmpne     219
     218: return
     219: iload_2
     220: iconst_1
     221: if_icmple     148
     224: bipush        8
     226: istore_3
     227: iload_3
     228: ifle          259
     231: aload_0
     232: getfield      #47                 // Field M:[[[I
     235: iload_2
     236: iconst_2
     237: isub
     238: aaload
     239: iload_3
     240: aaload
     241: aload_0
     242: getfield      #47                 // Field M:[[[I
     245: iload_2
     246: aaload
     247: iload_3
     248: aaload
     249: invokestatic  #51                 // Method org/bouncycastle/crypto/modes/gcm/GCMUtil.multiplyP8:([I[I)V
     252: iload_3
     253: iconst_1
     254: ishr
     255: istore_3
     256: goto          227
     259: goto          148

  public void multiplyH(byte[]);
    Code:
       0: iconst_4
       1: newarray       int
       3: astore_2
       4: bipush        15
       6: istore_3
       7: iload_3
       8: iflt          136
      11: aload_0
      12: getfield      #47                 // Field M:[[[I
      15: iload_3
      16: iload_3
      17: iadd
      18: aaload
      19: aload_1
      20: iload_3
      21: baload
      22: bipush        15
      24: iand
      25: aaload
      26: astore        4
      28: aload_2
      29: iconst_0
      30: dup2
      31: iaload
      32: aload         4
      34: iconst_0
      35: iaload
      36: ixor
      37: iastore
      38: aload_2
      39: iconst_1
      40: dup2
      41: iaload
      42: aload         4
      44: iconst_1
      45: iaload
      46: ixor
      47: iastore
      48: aload_2
      49: iconst_2
      50: dup2
      51: iaload
      52: aload         4
      54: iconst_2
      55: iaload
      56: ixor
      57: iastore
      58: aload_2
      59: iconst_3
      60: dup2
      61: iaload
      62: aload         4
      64: iconst_3
      65: iaload
      66: ixor
      67: iastore
      68: aload_0
      69: getfield      #47                 // Field M:[[[I
      72: iload_3
      73: iload_3
      74: iadd
      75: iconst_1
      76: iadd
      77: aaload
      78: aload_1
      79: iload_3
      80: baload
      81: sipush        240
      84: iand
      85: iconst_4
      86: iushr
      87: aaload
      88: astore        4
      90: aload_2
      91: iconst_0
      92: dup2
      93: iaload
      94: aload         4
      96: iconst_0
      97: iaload
      98: ixor
      99: iastore
     100: aload_2
     101: iconst_1
     102: dup2
     103: iaload
     104: aload         4
     106: iconst_1
     107: iaload
     108: ixor
     109: iastore
     110: aload_2
     111: iconst_2
     112: dup2
     113: iaload
     114: aload         4
     116: iconst_2
     117: iaload
     118: ixor
     119: iastore
     120: aload_2
     121: iconst_3
     122: dup2
     123: iaload
     124: aload         4
     126: iconst_3
     127: iaload
     128: ixor
     129: iastore
     130: iinc          3, -1
     133: goto          7
     136: aload_2
     137: aload_1
     138: iconst_0
     139: invokestatic  #55                 // Method org/bouncycastle/util/Pack.intToBigEndian:([I[BI)V
     142: return
}
