public class org.bouncycastle.crypto.prng.drbg.DualECPoints {
  private final org.bouncycastle.math.ec.ECPoint p;

  private final org.bouncycastle.math.ec.ECPoint q;

  private final int securityStrength;

  private final int cofactor;

  public org.bouncycastle.crypto.prng.drbg.DualECPoints(int, org.bouncycastle.math.ec.ECPoint, org.bouncycastle.math.ec.ECPoint, int);
    Code:
       0: aload_0
       1: invokespecial #53                 // Method java/lang/Object."<init>":()V
       4: aload_2
       5: invokevirtual #57                 // Method org/bouncycastle/math/ec/ECPoint.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
       8: aload_3
       9: invokevirtual #57                 // Method org/bouncycastle/math/ec/ECPoint.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      12: invokevirtual #56                 // Method org/bouncycastle/math/ec/ECCurve.equals:(Lorg/bouncycastle/math/ec/ECCurve;)Z
      15: ifne          28
      18: new           #27                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #1                  // String points need to be on the same curve
      24: invokespecial #52                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: iload_1
      30: putfield      #49                 // Field securityStrength:I
      33: aload_0
      34: aload_2
      35: putfield      #50                 // Field p:Lorg/bouncycastle/math/ec/ECPoint;
      38: aload_0
      39: aload_3
      40: putfield      #51                 // Field q:Lorg/bouncycastle/math/ec/ECPoint;
      43: aload_0
      44: iload         4
      46: putfield      #48                 // Field cofactor:I
      49: return

  public int getSeedLen();
    Code:
       0: aload_0
       1: getfield      #50                 // Field p:Lorg/bouncycastle/math/ec/ECPoint;
       4: invokevirtual #57                 // Method org/bouncycastle/math/ec/ECPoint.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
       7: invokevirtual #55                 // Method org/bouncycastle/math/ec/ECCurve.getFieldSize:()I
      10: ireturn

  public int getMaxOutlen();
    Code:
       0: aload_0
       1: getfield      #50                 // Field p:Lorg/bouncycastle/math/ec/ECPoint;
       4: invokevirtual #57                 // Method org/bouncycastle/math/ec/ECPoint.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
       7: invokevirtual #55                 // Method org/bouncycastle/math/ec/ECCurve.getFieldSize:()I
      10: bipush        13
      12: aload_0
      13: getfield      #48                 // Field cofactor:I
      16: invokestatic  #54                 // Method log2:(I)I
      19: iadd
      20: isub
      21: bipush        8
      23: idiv
      24: bipush        8
      26: imul
      27: ireturn

  public org.bouncycastle.math.ec.ECPoint getP();
    Code:
       0: aload_0
       1: getfield      #50                 // Field p:Lorg/bouncycastle/math/ec/ECPoint;
       4: areturn

  public org.bouncycastle.math.ec.ECPoint getQ();
    Code:
       0: aload_0
       1: getfield      #51                 // Field q:Lorg/bouncycastle/math/ec/ECPoint;
       4: areturn

  public int getSecurityStrength();
    Code:
       0: aload_0
       1: getfield      #49                 // Field securityStrength:I
       4: ireturn

  public int getCofactor();
    Code:
       0: aload_0
       1: getfield      #48                 // Field cofactor:I
       4: ireturn

  private static int log2(int);
    Code:
       0: iconst_0
       1: istore_1
       2: iload_0
       3: iconst_1
       4: ishr
       5: dup
       6: istore_0
       7: ifeq          16
      10: iinc          1, 1
      13: goto          2
      16: iload_1
      17: ireturn
}
