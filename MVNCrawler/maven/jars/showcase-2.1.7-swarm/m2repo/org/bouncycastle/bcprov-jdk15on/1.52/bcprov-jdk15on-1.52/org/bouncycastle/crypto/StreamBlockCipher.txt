public abstract class org.bouncycastle.crypto.StreamBlockCipher implements org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.StreamCipher {
  private final org.bouncycastle.crypto.BlockCipher cipher;

  protected org.bouncycastle.crypto.StreamBlockCipher(org.bouncycastle.crypto.BlockCipher);
    Code:
       0: aload_0
       1: invokespecial #33                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #32                 // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       9: return

  public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher();
    Code:
       0: aload_0
       1: getfield      #32                 // Field cipher:Lorg/bouncycastle/crypto/BlockCipher;
       4: areturn

  public final byte returnByte(byte);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #35                 // Method calculateByte:(B)B
       5: ireturn

  public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException;
    Code:
       0: iload         5
       2: iload_3
       3: iadd
       4: aload         4
       6: arraylength
       7: if_icmple     20
      10: new           #21                 // class org/bouncycastle/crypto/DataLengthException
      13: dup
      14: ldc           #2                  // String output buffer too short
      16: invokespecial #34                 // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: iload_2
      21: iload_3
      22: iadd
      23: aload_1
      24: arraylength
      25: if_icmple     38
      28: new           #21                 // class org/bouncycastle/crypto/DataLengthException
      31: dup
      32: ldc           #1                  // String input buffer too small
      34: invokespecial #34                 // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: iload_2
      39: istore        6
      41: iload_2
      42: iload_3
      43: iadd
      44: istore        7
      46: iload         5
      48: istore        8
      50: iload         6
      52: iload         7
      54: if_icmpge     79
      57: aload         4
      59: iload         8
      61: iinc          8, 1
      64: aload_0
      65: aload_1
      66: iload         6
      68: iinc          6, 1
      71: baload
      72: invokevirtual #35                 // Method calculateByte:(B)B
      75: bastore
      76: goto          50
      79: iload_3
      80: ireturn

  protected abstract byte calculateByte(byte);
}
