public abstract class org.bouncycastle.math.ec.ECCurve {
  public static final int COORD_AFFINE;

  public static final int COORD_HOMOGENEOUS;

  public static final int COORD_JACOBIAN;

  public static final int COORD_JACOBIAN_CHUDNOVSKY;

  public static final int COORD_JACOBIAN_MODIFIED;

  public static final int COORD_LAMBDA_AFFINE;

  public static final int COORD_LAMBDA_PROJECTIVE;

  public static final int COORD_SKEWED;

  protected org.bouncycastle.math.field.FiniteField field;

  protected org.bouncycastle.math.ec.ECFieldElement a;

  protected org.bouncycastle.math.ec.ECFieldElement b;

  protected java.math.BigInteger order;

  protected java.math.BigInteger cofactor;

  protected int coord;

  protected org.bouncycastle.math.ec.endo.ECEndomorphism endomorphism;

  protected org.bouncycastle.math.ec.ECMultiplier multiplier;

  public static int[] getAllCoordinateSystems();
    Code:
       0: bipush        8
       2: newarray       int
       4: dup
       5: iconst_0
       6: iconst_0
       7: iastore
       8: dup
       9: iconst_1
      10: iconst_1
      11: iastore
      12: dup
      13: iconst_2
      14: iconst_2
      15: iastore
      16: dup
      17: iconst_3
      18: iconst_3
      19: iastore
      20: dup
      21: iconst_4
      22: iconst_4
      23: iastore
      24: dup
      25: iconst_5
      26: iconst_5
      27: iastore
      28: dup
      29: bipush        6
      31: bipush        6
      33: iastore
      34: dup
      35: bipush        7
      37: bipush        7
      39: iastore
      40: areturn

  protected org.bouncycastle.math.ec.ECCurve(org.bouncycastle.math.field.FiniteField);
    Code:
       0: aload_0
       1: invokespecial #267                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #254                // Field coord:I
       9: aload_0
      10: aconst_null
      11: putfield      #260                // Field endomorphism:Lorg/bouncycastle/math/ec/endo/ECEndomorphism;
      14: aload_0
      15: aconst_null
      16: putfield      #259                // Field multiplier:Lorg/bouncycastle/math/ec/ECMultiplier;
      19: aload_0
      20: aload_1
      21: putfield      #261                // Field field:Lorg/bouncycastle/math/field/FiniteField;
      24: return

  public abstract int getFieldSize();

  public abstract org.bouncycastle.math.ec.ECFieldElement fromBigInteger(java.math.BigInteger);

  public org.bouncycastle.math.ec.ECCurve$Config configure();
    Code:
       0: new           #145                // class org/bouncycastle/math/ec/ECCurve$Config
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #254                // Field coord:I
       9: aload_0
      10: getfield      #260                // Field endomorphism:Lorg/bouncycastle/math/ec/endo/ECEndomorphism;
      13: aload_0
      14: getfield      #259                // Field multiplier:Lorg/bouncycastle/math/ec/ECMultiplier;
      17: invokespecial #297                // Method org/bouncycastle/math/ec/ECCurve$Config."<init>":(Lorg/bouncycastle/math/ec/ECCurve;ILorg/bouncycastle/math/ec/endo/ECEndomorphism;Lorg/bouncycastle/math/ec/ECMultiplier;)V
      20: areturn

  public org.bouncycastle.math.ec.ECPoint validatePoint(java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #292                // Method createPoint:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
       6: astore_3
       7: aload_3
       8: invokevirtual #301                // Method org/bouncycastle/math/ec/ECPoint.isValid:()Z
      11: ifne          24
      14: new           #135                // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #12                 // String Invalid point coordinates
      20: invokespecial #264                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_3
      25: areturn

  public org.bouncycastle.math.ec.ECPoint validatePoint(java.math.BigInteger, java.math.BigInteger, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokevirtual #294                // Method createPoint:(Ljava/math/BigInteger;Ljava/math/BigInteger;Z)Lorg/bouncycastle/math/ec/ECPoint;
       7: astore        4
       9: aload         4
      11: invokevirtual #301                // Method org/bouncycastle/math/ec/ECPoint.isValid:()Z
      14: ifne          27
      17: new           #135                // class java/lang/IllegalArgumentException
      20: dup
      21: ldc           #12                 // String Invalid point coordinates
      23: invokespecial #264                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload         4
      29: areturn

  public org.bouncycastle.math.ec.ECPoint createPoint(java.math.BigInteger, java.math.BigInteger);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokevirtual #294                // Method createPoint:(Ljava/math/BigInteger;Ljava/math/BigInteger;Z)Lorg/bouncycastle/math/ec/ECPoint;
       7: areturn

  public org.bouncycastle.math.ec.ECPoint createPoint(java.math.BigInteger, java.math.BigInteger, boolean);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #289                // Method fromBigInteger:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECFieldElement;
       6: aload_0
       7: aload_2
       8: invokevirtual #289                // Method fromBigInteger:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECFieldElement;
      11: iload_3
      12: invokevirtual #296                // Method createRawPoint:(Lorg/bouncycastle/math/ec/ECFieldElement;Lorg/bouncycastle/math/ec/ECFieldElement;Z)Lorg/bouncycastle/math/ec/ECPoint;
      15: areturn

  protected abstract org.bouncycastle.math.ec.ECCurve cloneCurve();

  protected abstract org.bouncycastle.math.ec.ECPoint createRawPoint(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, boolean);

  protected abstract org.bouncycastle.math.ec.ECPoint createRawPoint(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement[], boolean);

  protected org.bouncycastle.math.ec.ECMultiplier createDefaultMultiplier();
    Code:
       0: aload_0
       1: getfield      #260                // Field endomorphism:Lorg/bouncycastle/math/ec/endo/ECEndomorphism;
       4: instanceof    #153                // class org/bouncycastle/math/ec/endo/GLVEndomorphism
       7: ifeq          26
      10: new           #150                // class org/bouncycastle/math/ec/GLVMultiplier
      13: dup
      14: aload_0
      15: aload_0
      16: getfield      #260                // Field endomorphism:Lorg/bouncycastle/math/ec/endo/ECEndomorphism;
      19: checkcast     #153                // class org/bouncycastle/math/ec/endo/GLVEndomorphism
      22: invokespecial #309                // Method org/bouncycastle/math/ec/GLVMultiplier."<init>":(Lorg/bouncycastle/math/ec/ECCurve;Lorg/bouncycastle/math/ec/endo/GLVEndomorphism;)V
      25: areturn
      26: new           #152                // class org/bouncycastle/math/ec/WNafL2RMultiplier
      29: dup
      30: invokespecial #310                // Method org/bouncycastle/math/ec/WNafL2RMultiplier."<init>":()V
      33: areturn

  public boolean supportsCoordinateSystem(int);
    Code:
       0: iload_1
       1: ifne          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ireturn

  public org.bouncycastle.math.ec.PreCompInfo getPreCompInfo(org.bouncycastle.math.ec.ECPoint, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #286                // Method checkPoint:(Lorg/bouncycastle/math/ec/ECPoint;)V
       5: aload_1
       6: dup
       7: astore_3
       8: monitorenter
       9: aload_1
      10: getfield      #263                // Field org/bouncycastle/math/ec/ECPoint.preCompTable:Ljava/util/Hashtable;
      13: astore        4
      15: aload         4
      17: ifnonnull     24
      20: aconst_null
      21: goto          33
      24: aload         4
      26: aload_2
      27: invokevirtual #276                // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #151                // class org/bouncycastle/math/ec/PreCompInfo
      33: aload_3
      34: monitorexit
      35: areturn
      36: astore        5
      38: aload_3
      39: monitorexit
      40: aload         5
      42: athrow
    Exception table:
       from    to  target type
           9    35    36   any
          36    40    36   any

  public void setPreCompInfo(org.bouncycastle.math.ec.ECPoint, java.lang.String, org.bouncycastle.math.ec.PreCompInfo);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #286                // Method checkPoint:(Lorg/bouncycastle/math/ec/ECPoint;)V
       5: aload_1
       6: dup
       7: astore        4
       9: monitorenter
      10: aload_1
      11: getfield      #263                // Field org/bouncycastle/math/ec/ECPoint.preCompTable:Ljava/util/Hashtable;
      14: astore        5
      16: aconst_null
      17: aload         5
      19: if_acmpne     37
      22: aload_1
      23: new           #140                // class java/util/Hashtable
      26: dup
      27: iconst_4
      28: invokespecial #275                // Method java/util/Hashtable."<init>":(I)V
      31: dup
      32: astore        5
      34: putfield      #263                // Field org/bouncycastle/math/ec/ECPoint.preCompTable:Ljava/util/Hashtable;
      37: aload         5
      39: aload_2
      40: aload_3
      41: invokevirtual #277                // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      44: pop
      45: aload         4
      47: monitorexit
      48: goto          59
      51: astore        6
      53: aload         4
      55: monitorexit
      56: aload         6
      58: athrow
      59: return
    Exception table:
       from    to  target type
          10    48    51   any
          51    56    51   any

  public org.bouncycastle.math.ec.ECPoint importPoint(org.bouncycastle.math.ec.ECPoint);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #303                // Method org/bouncycastle/math/ec/ECPoint.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
       5: if_acmpne     10
       8: aload_1
       9: areturn
      10: aload_1
      11: invokevirtual #299                // Method org/bouncycastle/math/ec/ECPoint.isInfinity:()Z
      14: ifeq          22
      17: aload_0
      18: invokevirtual #285                // Method getInfinity:()Lorg/bouncycastle/math/ec/ECPoint;
      21: areturn
      22: aload_1
      23: invokevirtual #307                // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
      26: astore_1
      27: aload_0
      28: aload_1
      29: invokevirtual #304                // Method org/bouncycastle/math/ec/ECPoint.getXCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      32: invokevirtual #298                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      35: aload_1
      36: invokevirtual #305                // Method org/bouncycastle/math/ec/ECPoint.getYCoord:()Lorg/bouncycastle/math/ec/ECFieldElement;
      39: invokevirtual #298                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      42: aload_1
      43: getfield      #262                // Field org/bouncycastle/math/ec/ECPoint.withCompression:Z
      46: invokevirtual #295                // Method validatePoint:(Ljava/math/BigInteger;Ljava/math/BigInteger;Z)Lorg/bouncycastle/math/ec/ECPoint;
      49: areturn

  public void normalizeAll(org.bouncycastle.math.ec.ECPoint[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: aconst_null
       6: invokevirtual #290                // Method normalizeAll:([Lorg/bouncycastle/math/ec/ECPoint;IILorg/bouncycastle/math/ec/ECFieldElement;)V
       9: return

  public void normalizeAll(org.bouncycastle.math.ec.ECPoint[], int, int, org.bouncycastle.math.ec.ECFieldElement);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #287                // Method checkPoints:([Lorg/bouncycastle/math/ec/ECPoint;II)V
       7: aload_0
       8: invokevirtual #279                // Method getCoordinateSystem:()I
      11: lookupswitch  { // 2
                     0: 36
                     5: 36
               default: 52
          }
      36: aload         4
      38: ifnull        51
      41: new           #135                // class java/lang/IllegalArgumentException
      44: dup
      45: ldc           #1                  // String \'iso\' not valid for affine coordinates
      47: invokespecial #264                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: return
      52: iload_3
      53: anewarray     #148                // class org/bouncycastle/math/ec/ECFieldElement
      56: astore        5
      58: iload_3
      59: newarray       int
      61: astore        6
      63: iconst_0
      64: istore        7
      66: iconst_0
      67: istore        8
      69: iload         8
      71: iload_3
      72: if_icmpge     131
      75: aload_1
      76: iload_2
      77: iload         8
      79: iadd
      80: aaload
      81: astore        9
      83: aconst_null
      84: aload         9
      86: if_acmpeq     125
      89: aload         4
      91: ifnonnull     102
      94: aload         9
      96: invokevirtual #300                // Method org/bouncycastle/math/ec/ECPoint.isNormalized:()Z
      99: ifne          125
     102: aload         5
     104: iload         7
     106: aload         9
     108: iconst_0
     109: invokevirtual #306                // Method org/bouncycastle/math/ec/ECPoint.getZCoord:(I)Lorg/bouncycastle/math/ec/ECFieldElement;
     112: aastore
     113: aload         6
     115: iload         7
     117: iinc          7, 1
     120: iload_2
     121: iload         8
     123: iadd
     124: iastore
     125: iinc          8, 1
     128: goto          69
     131: iload         7
     133: ifne          137
     136: return
     137: aload         5
     139: iconst_0
     140: iload         7
     142: aload         4
     144: invokestatic  #278                // Method org/bouncycastle/math/ec/ECAlgorithms.montgomeryTrick:([Lorg/bouncycastle/math/ec/ECFieldElement;IILorg/bouncycastle/math/ec/ECFieldElement;)V
     147: iconst_0
     148: istore        8
     150: iload         8
     152: iload         7
     154: if_icmpge     186
     157: aload         6
     159: iload         8
     161: iaload
     162: istore        9
     164: aload_1
     165: iload         9
     167: aload_1
     168: iload         9
     170: aaload
     171: aload         5
     173: iload         8
     175: aaload
     176: invokevirtual #308                // Method org/bouncycastle/math/ec/ECPoint.normalize:(Lorg/bouncycastle/math/ec/ECFieldElement;)Lorg/bouncycastle/math/ec/ECPoint;
     179: aastore
     180: iinc          8, 1
     183: goto          150
     186: return

  public abstract org.bouncycastle.math.ec.ECPoint getInfinity();

  public org.bouncycastle.math.field.FiniteField getField();
    Code:
       0: aload_0
       1: getfield      #261                // Field field:Lorg/bouncycastle/math/field/FiniteField;
       4: areturn

  public org.bouncycastle.math.ec.ECFieldElement getA();
    Code:
       0: aload_0
       1: getfield      #257                // Field a:Lorg/bouncycastle/math/ec/ECFieldElement;
       4: areturn

  public org.bouncycastle.math.ec.ECFieldElement getB();
    Code:
       0: aload_0
       1: getfield      #258                // Field b:Lorg/bouncycastle/math/ec/ECFieldElement;
       4: areturn

  public java.math.BigInteger getOrder();
    Code:
       0: aload_0
       1: getfield      #256                // Field order:Ljava/math/BigInteger;
       4: areturn

  public java.math.BigInteger getCofactor();
    Code:
       0: aload_0
       1: getfield      #255                // Field cofactor:Ljava/math/BigInteger;
       4: areturn

  public int getCoordinateSystem();
    Code:
       0: aload_0
       1: getfield      #254                // Field coord:I
       4: ireturn

  protected abstract org.bouncycastle.math.ec.ECPoint decompressPoint(int, java.math.BigInteger);

  public org.bouncycastle.math.ec.endo.ECEndomorphism getEndomorphism();
    Code:
       0: aload_0
       1: getfield      #260                // Field endomorphism:Lorg/bouncycastle/math/ec/endo/ECEndomorphism;
       4: areturn

  public synchronized org.bouncycastle.math.ec.ECMultiplier getMultiplier();
    Code:
       0: aload_0
       1: getfield      #259                // Field multiplier:Lorg/bouncycastle/math/ec/ECMultiplier;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokevirtual #284                // Method createDefaultMultiplier:()Lorg/bouncycastle/math/ec/ECMultiplier;
      12: putfield      #259                // Field multiplier:Lorg/bouncycastle/math/ec/ECMultiplier;
      15: aload_0
      16: getfield      #259                // Field multiplier:Lorg/bouncycastle/math/ec/ECMultiplier;
      19: areturn

  public org.bouncycastle.math.ec.ECPoint decodePoint(byte[]);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokevirtual #280                // Method getFieldSize:()I
       6: bipush        7
       8: iadd
       9: bipush        8
      11: idiv
      12: istore_3
      13: aload_1
      14: iconst_0
      15: baload
      16: istore        4
      18: iload         4
      20: tableswitch   { // 0 to 7
                     0: 68
                     1: 281
                     2: 92
                     3: 92
                     4: 150
                     5: 281
                     6: 200
                     7: 200
               default: 281
          }
      68: aload_1
      69: arraylength
      70: iconst_1
      71: if_icmpeq     84
      74: new           #135                // class java/lang/IllegalArgumentException
      77: dup
      78: ldc           #8                  // String Incorrect length for infinity encoding
      80: invokespecial #264                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      83: athrow
      84: aload_0
      85: invokevirtual #285                // Method getInfinity:()Lorg/bouncycastle/math/ec/ECPoint;
      88: astore_2
      89: goto          314
      92: aload_1
      93: arraylength
      94: iload_3
      95: iconst_1
      96: iadd
      97: if_icmpeq     110
     100: new           #135                // class java/lang/IllegalArgumentException
     103: dup
     104: ldc           #6                  // String Incorrect length for compressed encoding
     106: invokespecial #264                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     109: athrow
     110: iload         4
     112: iconst_1
     113: iand
     114: istore        5
     116: aload_1
     117: iconst_1
     118: iload_3
     119: invokestatic  #311                // Method org/bouncycastle/util/BigIntegers.fromUnsignedByteArray:([BII)Ljava/math/BigInteger;
     122: astore        6
     124: aload_0
     125: iload         5
     127: aload         6
     129: invokevirtual #291                // Method decompressPoint:(ILjava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
     132: astore_2
     133: aload_2
     134: invokevirtual #302                // Method org/bouncycastle/math/ec/ECPoint.satisfiesCofactor:()Z
     137: ifne          314
     140: new           #135                // class java/lang/IllegalArgumentException
     143: dup
     144: ldc           #11                 // String Invalid point
     146: invokespecial #264                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     149: athrow
     150: aload_1
     151: arraylength
     152: iconst_2
     153: iload_3
     154: imul
     155: iconst_1
     156: iadd
     157: if_icmpeq     170
     160: new           #135                // class java/lang/IllegalArgumentException
     163: dup
     164: ldc           #9                  // String Incorrect length for uncompressed encoding
     166: invokespecial #264                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     169: athrow
     170: aload_1
     171: iconst_1
     172: iload_3
     173: invokestatic  #311                // Method org/bouncycastle/util/BigIntegers.fromUnsignedByteArray:([BII)Ljava/math/BigInteger;
     176: astore        5
     178: aload_1
     179: iconst_1
     180: iload_3
     181: iadd
     182: iload_3
     183: invokestatic  #311                // Method org/bouncycastle/util/BigIntegers.fromUnsignedByteArray:([BII)Ljava/math/BigInteger;
     186: astore        6
     188: aload_0
     189: aload         5
     191: aload         6
     193: invokevirtual #293                // Method validatePoint:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
     196: astore_2
     197: goto          314
     200: aload_1
     201: arraylength
     202: iconst_2
     203: iload_3
     204: imul
     205: iconst_1
     206: iadd
     207: if_icmpeq     220
     210: new           #135                // class java/lang/IllegalArgumentException
     213: dup
     214: ldc           #7                  // String Incorrect length for hybrid encoding
     216: invokespecial #264                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     219: athrow
     220: aload_1
     221: iconst_1
     222: iload_3
     223: invokestatic  #311                // Method org/bouncycastle/util/BigIntegers.fromUnsignedByteArray:([BII)Ljava/math/BigInteger;
     226: astore        5
     228: aload_1
     229: iconst_1
     230: iload_3
     231: iadd
     232: iload_3
     233: invokestatic  #311                // Method org/bouncycastle/util/BigIntegers.fromUnsignedByteArray:([BII)Ljava/math/BigInteger;
     236: astore        6
     238: aload         6
     240: iconst_0
     241: invokevirtual #273                // Method java/math/BigInteger.testBit:(I)Z
     244: iload         4
     246: bipush        7
     248: if_icmpne     255
     251: iconst_1
     252: goto          256
     255: iconst_0
     256: if_icmpeq     269
     259: new           #135                // class java/lang/IllegalArgumentException
     262: dup
     263: ldc           #5                  // String Inconsistent Y coordinate in hybrid encoding
     265: invokespecial #264                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     268: athrow
     269: aload_0
     270: aload         5
     272: aload         6
     274: invokevirtual #293                // Method validatePoint:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
     277: astore_2
     278: goto          314
     281: new           #135                // class java/lang/IllegalArgumentException
     284: dup
     285: new           #138                // class java/lang/StringBuilder
     288: dup
     289: invokespecial #269                // Method java/lang/StringBuilder."<init>":()V
     292: ldc           #13                 // String Invalid point encoding 0x
     294: invokevirtual #271                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     297: iload         4
     299: bipush        16
     301: invokestatic  #265                // Method java/lang/Integer.toString:(II)Ljava/lang/String;
     304: invokevirtual #271                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     307: invokevirtual #270                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     310: invokespecial #264                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     313: athrow
     314: iload         4
     316: ifeq          336
     319: aload_2
     320: invokevirtual #299                // Method org/bouncycastle/math/ec/ECPoint.isInfinity:()Z
     323: ifeq          336
     326: new           #135                // class java/lang/IllegalArgumentException
     329: dup
     330: ldc           #10                 // String Invalid infinity encoding
     332: invokespecial #264                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     335: athrow
     336: aload_2
     337: areturn

  protected void checkPoint(org.bouncycastle.math.ec.ECPoint);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpeq     13
       5: aload_0
       6: aload_1
       7: invokevirtual #303                // Method org/bouncycastle/math/ec/ECPoint.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      10: if_acmpeq     23
      13: new           #135                // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #2                  // String \'point\' must be non-null and on this curve
      19: invokespecial #264                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: return

  protected void checkPoints(org.bouncycastle.math.ec.ECPoint[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #287                // Method checkPoints:([Lorg/bouncycastle/math/ec/ECPoint;II)V
       8: return

  protected void checkPoints(org.bouncycastle.math.ec.ECPoint[], int, int);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #135                // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String \'points\' cannot be null
      10: invokespecial #264                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_2
      15: iflt          30
      18: iload_3
      19: iflt          30
      22: iload_2
      23: aload_1
      24: arraylength
      25: iload_3
      26: isub
      27: if_icmple     40
      30: new           #135                // class java/lang/IllegalArgumentException
      33: dup
      34: ldc           #14                 // String invalid range specified for \'points\'
      36: invokespecial #264                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: iconst_0
      41: istore        4
      43: iload         4
      45: iload_3
      46: if_icmpge     88
      49: aload_1
      50: iload_2
      51: iload         4
      53: iadd
      54: aaload
      55: astore        5
      57: aconst_null
      58: aload         5
      60: if_acmpeq     82
      63: aload_0
      64: aload         5
      66: invokevirtual #303                // Method org/bouncycastle/math/ec/ECPoint.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      69: if_acmpeq     82
      72: new           #135                // class java/lang/IllegalArgumentException
      75: dup
      76: ldc           #4                  // String \'points\' entries must be null or on this curve
      78: invokespecial #264                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: iinc          4, 1
      85: goto          43
      88: return

  public boolean equals(org.bouncycastle.math.ec.ECCurve);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     64
       5: aconst_null
       6: aload_1
       7: if_acmpeq     68
      10: aload_0
      11: invokevirtual #288                // Method getField:()Lorg/bouncycastle/math/field/FiniteField;
      14: aload_1
      15: invokevirtual #288                // Method getField:()Lorg/bouncycastle/math/field/FiniteField;
      18: invokevirtual #268                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      21: ifeq          68
      24: aload_0
      25: invokevirtual #282                // Method getA:()Lorg/bouncycastle/math/ec/ECFieldElement;
      28: invokevirtual #298                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      31: aload_1
      32: invokevirtual #282                // Method getA:()Lorg/bouncycastle/math/ec/ECFieldElement;
      35: invokevirtual #298                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      38: invokevirtual #274                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      41: ifeq          68
      44: aload_0
      45: invokevirtual #283                // Method getB:()Lorg/bouncycastle/math/ec/ECFieldElement;
      48: invokevirtual #298                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      51: aload_1
      52: invokevirtual #283                // Method getB:()Lorg/bouncycastle/math/ec/ECFieldElement;
      55: invokevirtual #298                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      58: invokevirtual #274                // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      61: ifeq          68
      64: iconst_1
      65: goto          69
      68: iconst_0
      69: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     23
       5: aload_1
       6: instanceof    #142                // class org/bouncycastle/math/ec/ECCurve
       9: ifeq          27
      12: aload_0
      13: aload_1
      14: checkcast     #142                // class org/bouncycastle/math/ec/ECCurve
      17: invokevirtual #281                // Method equals:(Lorg/bouncycastle/math/ec/ECCurve;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #288                // Method getField:()Lorg/bouncycastle/math/field/FiniteField;
       4: invokevirtual #266                // Method java/lang/Object.hashCode:()I
       7: aload_0
       8: invokevirtual #282                // Method getA:()Lorg/bouncycastle/math/ec/ECFieldElement;
      11: invokevirtual #298                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      14: invokevirtual #272                // Method java/math/BigInteger.hashCode:()I
      17: bipush        8
      19: invokestatic  #312                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
      22: ixor
      23: aload_0
      24: invokevirtual #283                // Method getB:()Lorg/bouncycastle/math/ec/ECFieldElement;
      27: invokevirtual #298                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      30: invokevirtual #272                // Method java/math/BigInteger.hashCode:()I
      33: bipush        16
      35: invokestatic  #312                // Method org/bouncycastle/util/Integers.rotateLeft:(II)I
      38: ixor
      39: ireturn
}
