public class org.bouncycastle.jcajce.provider.symmetric.DESede$KeyGenerator extends org.bouncycastle.jcajce.provider.symmetric.util.BaseKeyGenerator {
  private boolean keySizeSet;

  public org.bouncycastle.jcajce.provider.symmetric.DESede$KeyGenerator();
    Code:
       0: aload_0
       1: ldc           #1                  // String DESede
       3: sipush        192
       6: new           #32                 // class org/bouncycastle/crypto/generators/DESedeKeyGenerator
       9: dup
      10: invokespecial #69                 // Method org/bouncycastle/crypto/generators/DESedeKeyGenerator."<init>":()V
      13: invokespecial #71                 // Method org/bouncycastle/jcajce/provider/symmetric/util/BaseKeyGenerator."<init>":(Ljava/lang/String;ILorg/bouncycastle/crypto/CipherKeyGenerator;)V
      16: aload_0
      17: iconst_0
      18: putfield      #59                 // Field keySizeSet:Z
      21: return

  protected void engineInit(int, java.security.SecureRandom);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #70                 // Method org/bouncycastle/jcajce/provider/symmetric/util/BaseKeyGenerator.engineInit:(ILjava/security/SecureRandom;)V
       6: aload_0
       7: iconst_1
       8: putfield      #59                 // Field keySizeSet:Z
      11: return

  protected javax.crypto.SecretKey engineGenerateKey();
    Code:
       0: aload_0
       1: getfield      #60                 // Field uninitialised:Z
       4: ifeq          37
       7: aload_0
       8: getfield      #62                 // Field engine:Lorg/bouncycastle/crypto/CipherKeyGenerator;
      11: new           #31                 // class org/bouncycastle/crypto/KeyGenerationParameters
      14: dup
      15: new           #28                 // class java/security/SecureRandom
      18: dup
      19: invokespecial #64                 // Method java/security/SecureRandom."<init>":()V
      22: aload_0
      23: getfield      #58                 // Field defaultKeySize:I
      26: invokespecial #68                 // Method org/bouncycastle/crypto/KeyGenerationParameters."<init>":(Ljava/security/SecureRandom;I)V
      29: invokevirtual #67                 // Method org/bouncycastle/crypto/CipherKeyGenerator.init:(Lorg/bouncycastle/crypto/KeyGenerationParameters;)V
      32: aload_0
      33: iconst_0
      34: putfield      #60                 // Field uninitialised:Z
      37: aload_0
      38: getfield      #59                 // Field keySizeSet:Z
      41: ifne          75
      44: aload_0
      45: getfield      #62                 // Field engine:Lorg/bouncycastle/crypto/CipherKeyGenerator;
      48: invokevirtual #66                 // Method org/bouncycastle/crypto/CipherKeyGenerator.generateKey:()[B
      51: astore_1
      52: aload_1
      53: iconst_0
      54: aload_1
      55: bipush        16
      57: bipush        8
      59: invokestatic  #63                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      62: new           #29                 // class javax/crypto/spec/SecretKeySpec
      65: dup
      66: aload_1
      67: aload_0
      68: getfield      #61                 // Field algName:Ljava/lang/String;
      71: invokespecial #65                 // Method javax/crypto/spec/SecretKeySpec."<init>":([BLjava/lang/String;)V
      74: areturn
      75: new           #29                 // class javax/crypto/spec/SecretKeySpec
      78: dup
      79: aload_0
      80: getfield      #62                 // Field engine:Lorg/bouncycastle/crypto/CipherKeyGenerator;
      83: invokevirtual #66                 // Method org/bouncycastle/crypto/CipherKeyGenerator.generateKey:()[B
      86: aload_0
      87: getfield      #61                 // Field algName:Ljava/lang/String;
      90: invokespecial #65                 // Method javax/crypto/spec/SecretKeySpec."<init>":([BLjava/lang/String;)V
      93: areturn
}
