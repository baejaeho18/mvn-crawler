public abstract class org.bouncycastle.crypto.tls.TlsProtocol {
  protected static final java.lang.Integer EXT_RenegotiationInfo;

  protected static final java.lang.Integer EXT_SessionTicket;

  private static final java.lang.String TLS_ERROR_MESSAGE;

  protected static final short CS_START;

  protected static final short CS_CLIENT_HELLO;

  protected static final short CS_SERVER_HELLO;

  protected static final short CS_SERVER_SUPPLEMENTAL_DATA;

  protected static final short CS_SERVER_CERTIFICATE;

  protected static final short CS_CERTIFICATE_STATUS;

  protected static final short CS_SERVER_KEY_EXCHANGE;

  protected static final short CS_CERTIFICATE_REQUEST;

  protected static final short CS_SERVER_HELLO_DONE;

  protected static final short CS_CLIENT_SUPPLEMENTAL_DATA;

  protected static final short CS_CLIENT_CERTIFICATE;

  protected static final short CS_CLIENT_KEY_EXCHANGE;

  protected static final short CS_CERTIFICATE_VERIFY;

  protected static final short CS_CLIENT_FINISHED;

  protected static final short CS_SERVER_SESSION_TICKET;

  protected static final short CS_SERVER_FINISHED;

  protected static final short CS_END;

  private org.bouncycastle.crypto.tls.ByteQueue applicationDataQueue;

  private org.bouncycastle.crypto.tls.ByteQueue alertQueue;

  private org.bouncycastle.crypto.tls.ByteQueue handshakeQueue;

  org.bouncycastle.crypto.tls.RecordStream recordStream;

  protected java.security.SecureRandom secureRandom;

  private org.bouncycastle.crypto.tls.TlsInputStream tlsInputStream;

  private org.bouncycastle.crypto.tls.TlsOutputStream tlsOutputStream;

  private volatile boolean closed;

  private volatile boolean failedWithError;

  private volatile boolean appDataReady;

  private volatile boolean splitApplicationDataRecords;

  private byte[] expected_verify_data;

  protected org.bouncycastle.crypto.tls.TlsSession tlsSession;

  protected org.bouncycastle.crypto.tls.SessionParameters sessionParameters;

  protected org.bouncycastle.crypto.tls.SecurityParameters securityParameters;

  protected org.bouncycastle.crypto.tls.Certificate peerCertificate;

  protected int[] offeredCipherSuites;

  protected short[] offeredCompressionMethods;

  protected java.util.Hashtable clientExtensions;

  protected java.util.Hashtable serverExtensions;

  protected short connection_state;

  protected boolean resumedSession;

  protected boolean receivedChangeCipherSpec;

  protected boolean secure_renegotiation;

  protected boolean allowCertificateStatus;

  protected boolean expectSessionTicket;

  public org.bouncycastle.crypto.tls.TlsProtocol(java.io.InputStream, java.io.OutputStream, java.security.SecureRandom);
    Code:
       0: aload_0
       1: invokespecial #587                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #302                // class org/bouncycastle/crypto/tls/ByteQueue
       8: dup
       9: invokespecial #601                // Method org/bouncycastle/crypto/tls/ByteQueue."<init>":()V
      12: putfield      #568                // Field applicationDataQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      15: aload_0
      16: new           #302                // class org/bouncycastle/crypto/tls/ByteQueue
      19: dup
      20: iconst_2
      21: invokespecial #602                // Method org/bouncycastle/crypto/tls/ByteQueue."<init>":(I)V
      24: putfield      #567                // Field alertQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      27: aload_0
      28: new           #302                // class org/bouncycastle/crypto/tls/ByteQueue
      31: dup
      32: invokespecial #601                // Method org/bouncycastle/crypto/tls/ByteQueue."<init>":()V
      35: putfield      #569                // Field handshakeQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      38: aload_0
      39: aconst_null
      40: putfield      #574                // Field tlsInputStream:Lorg/bouncycastle/crypto/tls/TlsInputStream;
      43: aload_0
      44: aconst_null
      45: putfield      #575                // Field tlsOutputStream:Lorg/bouncycastle/crypto/tls/TlsOutputStream;
      48: aload_0
      49: iconst_0
      50: putfield      #552                // Field closed:Z
      53: aload_0
      54: iconst_0
      55: putfield      #554                // Field failedWithError:Z
      58: aload_0
      59: iconst_0
      60: putfield      #551                // Field appDataReady:Z
      63: aload_0
      64: iconst_1
      65: putfield      #558                // Field splitApplicationDataRecords:Z
      68: aload_0
      69: aconst_null
      70: putfield      #559                // Field expected_verify_data:[B
      73: aload_0
      74: aconst_null
      75: putfield      #576                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
      78: aload_0
      79: aconst_null
      80: putfield      #573                // Field sessionParameters:Lorg/bouncycastle/crypto/tls/SessionParameters;
      83: aload_0
      84: aconst_null
      85: putfield      #572                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
      88: aload_0
      89: aconst_null
      90: putfield      #570                // Field peerCertificate:Lorg/bouncycastle/crypto/tls/Certificate;
      93: aload_0
      94: aconst_null
      95: putfield      #560                // Field offeredCipherSuites:[I
      98: aload_0
      99: aconst_null
     100: putfield      #561                // Field offeredCompressionMethods:[S
     103: aload_0
     104: aconst_null
     105: putfield      #565                // Field clientExtensions:Ljava/util/Hashtable;
     108: aload_0
     109: aconst_null
     110: putfield      #566                // Field serverExtensions:Ljava/util/Hashtable;
     113: aload_0
     114: iconst_0
     115: putfield      #549                // Field connection_state:S
     118: aload_0
     119: iconst_0
     120: putfield      #556                // Field resumedSession:Z
     123: aload_0
     124: iconst_0
     125: putfield      #555                // Field receivedChangeCipherSpec:Z
     128: aload_0
     129: iconst_0
     130: putfield      #557                // Field secure_renegotiation:Z
     133: aload_0
     134: iconst_0
     135: putfield      #550                // Field allowCertificateStatus:Z
     138: aload_0
     139: iconst_0
     140: putfield      #553                // Field expectSessionTicket:Z
     143: aload_0
     144: new           #305                // class org/bouncycastle/crypto/tls/RecordStream
     147: dup
     148: aload_0
     149: aload_1
     150: aload_2
     151: invokespecial #621                // Method org/bouncycastle/crypto/tls/RecordStream."<init>":(Lorg/bouncycastle/crypto/tls/TlsProtocol;Ljava/io/InputStream;Ljava/io/OutputStream;)V
     154: putfield      #571                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
     157: aload_0
     158: aload_3
     159: putfield      #564                // Field secureRandom:Ljava/security/SecureRandom;
     162: return

  protected abstract org.bouncycastle.crypto.tls.TlsContext getContext();

  abstract org.bouncycastle.crypto.tls.AbstractTlsContext getContextAdmin();

  protected abstract org.bouncycastle.crypto.tls.TlsPeer getPeer();

  protected void handleChangeCipherSpecMessage() throws java.io.IOException;
    Code:
       0: return

  protected abstract void handleHandshakeMessage(short, byte[]) throws java.io.IOException;

  protected void handleWarningMessage(short) throws java.io.IOException;
    Code:
       0: return

  protected void cleanupHandshake();
    Code:
       0: aload_0
       1: getfield      #559                // Field expected_verify_data:[B
       4: ifnull        20
       7: aload_0
       8: getfield      #559                // Field expected_verify_data:[B
      11: iconst_0
      12: invokestatic  #685                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      15: aload_0
      16: aconst_null
      17: putfield      #559                // Field expected_verify_data:[B
      20: aload_0
      21: getfield      #572                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
      24: invokevirtual #622                // Method org/bouncycastle/crypto/tls/SecurityParameters.clear:()V
      27: aload_0
      28: aconst_null
      29: putfield      #570                // Field peerCertificate:Lorg/bouncycastle/crypto/tls/Certificate;
      32: aload_0
      33: aconst_null
      34: putfield      #560                // Field offeredCipherSuites:[I
      37: aload_0
      38: aconst_null
      39: putfield      #561                // Field offeredCompressionMethods:[S
      42: aload_0
      43: aconst_null
      44: putfield      #565                // Field clientExtensions:Ljava/util/Hashtable;
      47: aload_0
      48: aconst_null
      49: putfield      #566                // Field serverExtensions:Ljava/util/Hashtable;
      52: aload_0
      53: iconst_0
      54: putfield      #556                // Field resumedSession:Z
      57: aload_0
      58: iconst_0
      59: putfield      #555                // Field receivedChangeCipherSpec:Z
      62: aload_0
      63: iconst_0
      64: putfield      #557                // Field secure_renegotiation:Z
      67: aload_0
      68: iconst_0
      69: putfield      #550                // Field allowCertificateStatus:Z
      72: aload_0
      73: iconst_0
      74: putfield      #553                // Field expectSessionTicket:Z
      77: return

  protected void completeHandshake() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #549                // Field connection_state:S
       4: bipush        16
       6: if_icmpeq     23
       9: aload_0
      10: getfield      #552                // Field closed:Z
      13: ifeq          16
      16: aload_0
      17: invokevirtual #647                // Method safeReadRecord:()V
      20: goto          0
      23: aload_0
      24: getfield      #571                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      27: invokevirtual #612                // Method org/bouncycastle/crypto/tls/RecordStream.finaliseHandshake:()V
      30: aload_0
      31: aload_0
      32: invokevirtual #657                // Method getContext:()Lorg/bouncycastle/crypto/tls/TlsContext;
      35: invokestatic  #681                // Method org/bouncycastle/crypto/tls/TlsUtils.isTLSv11:(Lorg/bouncycastle/crypto/tls/TlsContext;)Z
      38: ifne          45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: putfield      #558                // Field splitApplicationDataRecords:Z
      49: aload_0
      50: getfield      #551                // Field appDataReady:Z
      53: ifne          85
      56: aload_0
      57: iconst_1
      58: putfield      #551                // Field appDataReady:Z
      61: aload_0
      62: new           #314                // class org/bouncycastle/crypto/tls/TlsInputStream
      65: dup
      66: aload_0
      67: invokespecial #639                // Method org/bouncycastle/crypto/tls/TlsInputStream."<init>":(Lorg/bouncycastle/crypto/tls/TlsProtocol;)V
      70: putfield      #574                // Field tlsInputStream:Lorg/bouncycastle/crypto/tls/TlsInputStream;
      73: aload_0
      74: new           #316                // class org/bouncycastle/crypto/tls/TlsOutputStream
      77: dup
      78: aload_0
      79: invokespecial #640                // Method org/bouncycastle/crypto/tls/TlsOutputStream."<init>":(Lorg/bouncycastle/crypto/tls/TlsProtocol;)V
      82: putfield      #575                // Field tlsOutputStream:Lorg/bouncycastle/crypto/tls/TlsOutputStream;
      85: aload_0
      86: getfield      #576                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
      89: ifnull        212
      92: aload_0
      93: getfield      #573                // Field sessionParameters:Lorg/bouncycastle/crypto/tls/SessionParameters;
      96: ifnonnull     201
      99: aload_0
     100: new           #308                // class org/bouncycastle/crypto/tls/SessionParameters$Builder
     103: dup
     104: invokespecial #624                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder."<init>":()V
     107: aload_0
     108: getfield      #572                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
     111: getfield      #544                // Field org/bouncycastle/crypto/tls/SecurityParameters.cipherSuite:I
     114: invokevirtual #626                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.setCipherSuite:(I)Lorg/bouncycastle/crypto/tls/SessionParameters$Builder;
     117: aload_0
     118: getfield      #572                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
     121: getfield      #545                // Field org/bouncycastle/crypto/tls/SecurityParameters.compressionAlgorithm:S
     124: invokevirtual #627                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.setCompressionAlgorithm:(S)Lorg/bouncycastle/crypto/tls/SessionParameters$Builder;
     127: aload_0
     128: getfield      #572                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
     131: getfield      #546                // Field org/bouncycastle/crypto/tls/SecurityParameters.masterSecret:[B
     134: invokevirtual #628                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.setMasterSecret:([B)Lorg/bouncycastle/crypto/tls/SessionParameters$Builder;
     137: aload_0
     138: getfield      #570                // Field peerCertificate:Lorg/bouncycastle/crypto/tls/Certificate;
     141: invokevirtual #632                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.setPeerCertificate:(Lorg/bouncycastle/crypto/tls/Certificate;)Lorg/bouncycastle/crypto/tls/SessionParameters$Builder;
     144: aload_0
     145: getfield      #572                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
     148: getfield      #547                // Field org/bouncycastle/crypto/tls/SecurityParameters.pskIdentity:[B
     151: invokevirtual #629                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.setPSKIdentity:([B)Lorg/bouncycastle/crypto/tls/SessionParameters$Builder;
     154: aload_0
     155: getfield      #572                // Field securityParameters:Lorg/bouncycastle/crypto/tls/SecurityParameters;
     158: getfield      #548                // Field org/bouncycastle/crypto/tls/SecurityParameters.srpIdentity:[B
     161: invokevirtual #630                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.setSRPIdentity:([B)Lorg/bouncycastle/crypto/tls/SessionParameters$Builder;
     164: aload_0
     165: getfield      #566                // Field serverExtensions:Ljava/util/Hashtable;
     168: invokevirtual #631                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.setServerExtensions:(Ljava/util/Hashtable;)Lorg/bouncycastle/crypto/tls/SessionParameters$Builder;
     171: invokevirtual #625                // Method org/bouncycastle/crypto/tls/SessionParameters$Builder.build:()Lorg/bouncycastle/crypto/tls/SessionParameters;
     174: putfield      #573                // Field sessionParameters:Lorg/bouncycastle/crypto/tls/SessionParameters;
     177: aload_0
     178: new           #321                // class org/bouncycastle/crypto/tls/TlsSessionImpl
     181: dup
     182: aload_0
     183: getfield      #576                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
     186: invokeinterface #703,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsSession.getSessionID:()[B
     191: aload_0
     192: getfield      #573                // Field sessionParameters:Lorg/bouncycastle/crypto/tls/SessionParameters;
     195: invokespecial #667                // Method org/bouncycastle/crypto/tls/TlsSessionImpl."<init>":([BLorg/bouncycastle/crypto/tls/SessionParameters;)V
     198: putfield      #576                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
     201: aload_0
     202: invokevirtual #656                // Method getContextAdmin:()Lorg/bouncycastle/crypto/tls/AbstractTlsContext;
     205: aload_0
     206: getfield      #576                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
     209: invokevirtual #599                // Method org/bouncycastle/crypto/tls/AbstractTlsContext.setResumableSession:(Lorg/bouncycastle/crypto/tls/TlsSession;)V
     212: aload_0
     213: invokevirtual #658                // Method getPeer:()Lorg/bouncycastle/crypto/tls/TlsPeer;
     216: invokeinterface #699,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsPeer.notifyHandshakeComplete:()V
     221: aload_0
     222: invokevirtual #641                // Method cleanupHandshake:()V
     225: goto          235
     228: astore_1
     229: aload_0
     230: invokevirtual #641                // Method cleanupHandshake:()V
     233: aload_1
     234: athrow
     235: return
    Exception table:
       from    to  target type
           0   221   228   any
         228   229   228   any

  protected void processRecord(short, byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_1
       1: tableswitch   { // 20 to 24
                    20: 89
                    21: 36
                    22: 100
                    23: 54
                    24: 118
               default: 135
          }
      36: aload_0
      37: getfield      #567                // Field alertQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      40: aload_2
      41: iload_3
      42: iload         4
      44: invokevirtual #604                // Method org/bouncycastle/crypto/tls/ByteQueue.addData:([BII)V
      47: aload_0
      48: invokespecial #644                // Method processAlert:()V
      51: goto          135
      54: aload_0
      55: getfield      #551                // Field appDataReady:Z
      58: ifne          71
      61: new           #312                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      64: dup
      65: bipush        10
      67: invokespecial #638                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      70: athrow
      71: aload_0
      72: getfield      #568                // Field applicationDataQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      75: aload_2
      76: iload_3
      77: iload         4
      79: invokevirtual #604                // Method org/bouncycastle/crypto/tls/ByteQueue.addData:([BII)V
      82: aload_0
      83: invokespecial #645                // Method processApplicationData:()V
      86: goto          135
      89: aload_0
      90: aload_2
      91: iload_3
      92: iload         4
      94: invokespecial #653                // Method processChangeCipherSpec:([BII)V
      97: goto          135
     100: aload_0
     101: getfield      #569                // Field handshakeQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
     104: aload_2
     105: iload_3
     106: iload         4
     108: invokevirtual #604                // Method org/bouncycastle/crypto/tls/ByteQueue.addData:([BII)V
     111: aload_0
     112: invokespecial #646                // Method processHandshake:()V
     115: goto          135
     118: aload_0
     119: getfield      #551                // Field appDataReady:Z
     122: ifne          135
     125: new           #312                // class org/bouncycastle/crypto/tls/TlsFatalAlert
     128: dup
     129: bipush        10
     131: invokespecial #638                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
     134: athrow
     135: return

  private void processHandshake() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #569                // Field handshakeQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
       6: invokevirtual #600                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
       9: iconst_4
      10: if_icmplt     162
      13: iconst_4
      14: newarray       byte
      16: astore_2
      17: aload_0
      18: getfield      #569                // Field handshakeQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      21: aload_2
      22: iconst_0
      23: iconst_4
      24: iconst_0
      25: invokevirtual #605                // Method org/bouncycastle/crypto/tls/ByteQueue.read:([BIII)V
      28: aload_2
      29: iconst_0
      30: invokestatic  #671                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint8:([BI)S
      33: istore_3
      34: aload_2
      35: iconst_1
      36: invokestatic  #670                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint24:([BI)I
      39: istore        4
      41: aload_0
      42: getfield      #569                // Field handshakeQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      45: invokevirtual #600                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
      48: iload         4
      50: iconst_4
      51: iadd
      52: if_icmplt     162
      55: aload_0
      56: getfield      #569                // Field handshakeQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      59: iload         4
      61: iconst_4
      62: invokevirtual #603                // Method org/bouncycastle/crypto/tls/ByteQueue.removeData:(II)[B
      65: astore        5
      67: iload_3
      68: lookupswitch  { // 2
                     0: 96
                    20: 99
               default: 131
          }
      96: goto          153
      99: aload_0
     100: getfield      #559                // Field expected_verify_data:[B
     103: ifnonnull     131
     106: aload_0
     107: aload_0
     108: aload_0
     109: invokevirtual #657                // Method getContext:()Lorg/bouncycastle/crypto/tls/TlsContext;
     112: invokeinterface #694,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.isServer:()Z
     117: ifne          124
     120: iconst_1
     121: goto          125
     124: iconst_0
     125: invokevirtual #652                // Method createVerifyData:(Z)[B
     128: putfield      #559                // Field expected_verify_data:[B
     131: aload_0
     132: getfield      #571                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
     135: aload_2
     136: iconst_0
     137: iconst_4
     138: invokevirtual #619                // Method org/bouncycastle/crypto/tls/RecordStream.updateHandshakeData:([BII)V
     141: aload_0
     142: getfield      #571                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
     145: aload         5
     147: iconst_0
     148: iload         4
     150: invokevirtual #619                // Method org/bouncycastle/crypto/tls/RecordStream.updateHandshakeData:([BII)V
     153: aload_0
     154: iload_3
     155: aload         5
     157: invokevirtual #649                // Method handleHandshakeMessage:(S[B)V
     160: iconst_1
     161: istore_1
     162: iload_1
     163: ifne          0
     166: return

  private void processApplicationData();
    Code:
       0: return

  private void processAlert() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #567                // Field alertQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
       4: invokevirtual #600                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
       7: iconst_2
       8: if_icmplt     95
      11: aload_0
      12: getfield      #567                // Field alertQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      15: iconst_2
      16: iconst_0
      17: invokevirtual #603                // Method org/bouncycastle/crypto/tls/ByteQueue.removeData:(II)[B
      20: astore_1
      21: aload_1
      22: iconst_0
      23: baload
      24: i2s
      25: istore_2
      26: aload_1
      27: iconst_1
      28: baload
      29: i2s
      30: istore_3
      31: aload_0
      32: invokevirtual #658                // Method getPeer:()Lorg/bouncycastle/crypto/tls/TlsPeer;
      35: iload_2
      36: iload_3
      37: invokeinterface #700,  3          // InterfaceMethod org/bouncycastle/crypto/tls/TlsPeer.notifyAlertReceived:(SS)V
      42: iload_2
      43: iconst_2
      44: if_icmpne     78
      47: aload_0
      48: invokevirtual #643                // Method invalidateSession:()V
      51: aload_0
      52: iconst_1
      53: putfield      #554                // Field failedWithError:Z
      56: aload_0
      57: iconst_1
      58: putfield      #552                // Field closed:Z
      61: aload_0
      62: getfield      #571                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      65: invokevirtual #615                // Method org/bouncycastle/crypto/tls/RecordStream.safeClose:()V
      68: new           #290                // class java/io/IOException
      71: dup
      72: ldc           #6                  // String Internal TLS error, this could be an attack
      74: invokespecial #584                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: iload_3
      79: ifne          87
      82: aload_0
      83: iconst_0
      84: invokevirtual #651                // Method handleClose:(Z)V
      87: aload_0
      88: iload_3
      89: invokevirtual #648                // Method handleWarningMessage:(S)V
      92: goto          0
      95: return

  private void processChangeCipherSpec(byte[], int, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     94
       9: aload_1
      10: iload_2
      11: iload         4
      13: iadd
      14: invokestatic  #671                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint8:([BI)S
      17: istore        5
      19: iload         5
      21: iconst_1
      22: if_icmpeq     35
      25: new           #312                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      28: dup
      29: bipush        50
      31: invokespecial #638                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      34: athrow
      35: aload_0
      36: getfield      #555                // Field receivedChangeCipherSpec:Z
      39: ifne          62
      42: aload_0
      43: getfield      #567                // Field alertQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      46: invokevirtual #600                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
      49: ifgt          62
      52: aload_0
      53: getfield      #569                // Field handshakeQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      56: invokevirtual #600                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
      59: ifle          72
      62: new           #312                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      65: dup
      66: bipush        10
      68: invokespecial #638                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      71: athrow
      72: aload_0
      73: getfield      #571                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      76: invokevirtual #614                // Method org/bouncycastle/crypto/tls/RecordStream.receivedReadCipherSpec:()V
      79: aload_0
      80: iconst_1
      81: putfield      #555                // Field receivedChangeCipherSpec:Z
      84: aload_0
      85: invokevirtual #642                // Method handleChangeCipherSpecMessage:()V
      88: iinc          4, 1
      91: goto          3
      94: return

  protected int applicationDataAvailable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #568                // Field applicationDataQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
       4: invokevirtual #600                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
       7: ireturn

  protected int readApplicationData(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: iconst_1
       2: if_icmpge     7
       5: iconst_0
       6: ireturn
       7: aload_0
       8: getfield      #568                // Field applicationDataQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      11: invokevirtual #600                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
      14: ifne          50
      17: aload_0
      18: getfield      #552                // Field closed:Z
      21: ifeq          43
      24: aload_0
      25: getfield      #554                // Field failedWithError:Z
      28: ifeq          41
      31: new           #290                // class java/io/IOException
      34: dup
      35: ldc           #6                  // String Internal TLS error, this could be an attack
      37: invokespecial #584                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: iconst_m1
      42: ireturn
      43: aload_0
      44: invokevirtual #647                // Method safeReadRecord:()V
      47: goto          7
      50: iload_3
      51: aload_0
      52: getfield      #568                // Field applicationDataQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      55: invokevirtual #600                // Method org/bouncycastle/crypto/tls/ByteQueue.available:()I
      58: invokestatic  #586                // Method java/lang/Math.min:(II)I
      61: istore_3
      62: aload_0
      63: getfield      #568                // Field applicationDataQueue:Lorg/bouncycastle/crypto/tls/ByteQueue;
      66: aload_1
      67: iload_2
      68: iload_3
      69: iconst_0
      70: invokevirtual #606                // Method org/bouncycastle/crypto/tls/ByteQueue.removeData:([BIII)V
      73: iload_3
      74: ireturn

  protected void safeReadRecord() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #571                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
       4: invokevirtual #617                // Method org/bouncycastle/crypto/tls/RecordStream.readRecord:()Z
       7: ifne          18
      10: new           #289                // class java/io/EOFException
      13: dup
      14: invokespecial #583                // Method java/io/EOFException."<init>":()V
      17: athrow
      18: goto          83
      21: astore_1
      22: aload_0
      23: getfield      #552                // Field closed:Z
      26: ifne          41
      29: aload_0
      30: iconst_2
      31: aload_1
      32: invokevirtual #637                // Method org/bouncycastle/crypto/tls/TlsFatalAlert.getAlertDescription:()S
      35: ldc           #4                  // String Failed to read record
      37: aload_1
      38: invokevirtual #659                // Method failWithError:(SSLjava/lang/String;Ljava/lang/Throwable;)V
      41: aload_1
      42: athrow
      43: astore_1
      44: aload_0
      45: getfield      #552                // Field closed:Z
      48: ifne          61
      51: aload_0
      52: iconst_2
      53: bipush        80
      55: ldc           #4                  // String Failed to read record
      57: aload_1
      58: invokevirtual #659                // Method failWithError:(SSLjava/lang/String;Ljava/lang/Throwable;)V
      61: aload_1
      62: athrow
      63: astore_1
      64: aload_0
      65: getfield      #552                // Field closed:Z
      68: ifne          81
      71: aload_0
      72: iconst_2
      73: bipush        80
      75: ldc           #4                  // String Failed to read record
      77: aload_1
      78: invokevirtual #659                // Method failWithError:(SSLjava/lang/String;Ljava/lang/Throwable;)V
      81: aload_1
      82: athrow
      83: return
    Exception table:
       from    to  target type
           0    18    21   Class org/bouncycastle/crypto/tls/TlsFatalAlert
           0    18    43   Class java/io/IOException
           0    18    63   Class java/lang/RuntimeException

  protected void safeWriteRecord(short, byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #571                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
       4: iload_1
       5: aload_2
       6: iload_3
       7: iload         4
       9: invokevirtual #618                // Method org/bouncycastle/crypto/tls/RecordStream.writeRecord:(S[BII)V
      12: goto          87
      15: astore        5
      17: aload_0
      18: getfield      #552                // Field closed:Z
      21: ifne          38
      24: aload_0
      25: iconst_2
      26: aload         5
      28: invokevirtual #637                // Method org/bouncycastle/crypto/tls/TlsFatalAlert.getAlertDescription:()S
      31: ldc           #5                  // String Failed to write record
      33: aload         5
      35: invokevirtual #659                // Method failWithError:(SSLjava/lang/String;Ljava/lang/Throwable;)V
      38: aload         5
      40: athrow
      41: astore        5
      43: aload_0
      44: getfield      #552                // Field closed:Z
      47: ifne          61
      50: aload_0
      51: iconst_2
      52: bipush        80
      54: ldc           #5                  // String Failed to write record
      56: aload         5
      58: invokevirtual #659                // Method failWithError:(SSLjava/lang/String;Ljava/lang/Throwable;)V
      61: aload         5
      63: athrow
      64: astore        5
      66: aload_0
      67: getfield      #552                // Field closed:Z
      70: ifne          84
      73: aload_0
      74: iconst_2
      75: bipush        80
      77: ldc           #5                  // String Failed to write record
      79: aload         5
      81: invokevirtual #659                // Method failWithError:(SSLjava/lang/String;Ljava/lang/Throwable;)V
      84: aload         5
      86: athrow
      87: return
    Exception table:
       from    to  target type
           0    12    15   Class org/bouncycastle/crypto/tls/TlsFatalAlert
           0    12    41   Class java/io/IOException
           0    12    64   Class java/lang/RuntimeException

  protected void writeData(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #552                // Field closed:Z
       4: ifeq          34
       7: aload_0
       8: getfield      #554                // Field failedWithError:Z
      11: ifeq          24
      14: new           #290                // class java/io/IOException
      17: dup
      18: ldc           #6                  // String Internal TLS error, this could be an attack
      20: invokespecial #584                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: new           #290                // class java/io/IOException
      27: dup
      28: ldc           #7                  // String Sorry, connection has been closed, you cannot write more data
      30: invokespecial #584                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: iload_3
      35: ifle          100
      38: aload_0
      39: getfield      #558                // Field splitApplicationDataRecords:Z
      42: ifeq          60
      45: aload_0
      46: bipush        23
      48: aload_1
      49: iload_2
      50: iconst_1
      51: invokevirtual #650                // Method safeWriteRecord:(S[BII)V
      54: iinc          2, 1
      57: iinc          3, -1
      60: iload_3
      61: ifle          34
      64: iload_3
      65: aload_0
      66: getfield      #571                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      69: invokevirtual #611                // Method org/bouncycastle/crypto/tls/RecordStream.getPlaintextLimit:()I
      72: invokestatic  #586                // Method java/lang/Math.min:(II)I
      75: istore        4
      77: aload_0
      78: bipush        23
      80: aload_1
      81: iload_2
      82: iload         4
      84: invokevirtual #650                // Method safeWriteRecord:(S[BII)V
      87: iload_2
      88: iload         4
      90: iadd
      91: istore_2
      92: iload_3
      93: iload         4
      95: isub
      96: istore_3
      97: goto          34
     100: return

  protected void writeHandshakeMessage(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifle          40
       4: iload_3
       5: aload_0
       6: getfield      #571                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
       9: invokevirtual #611                // Method org/bouncycastle/crypto/tls/RecordStream.getPlaintextLimit:()I
      12: invokestatic  #586                // Method java/lang/Math.min:(II)I
      15: istore        4
      17: aload_0
      18: bipush        22
      20: aload_1
      21: iload_2
      22: iload         4
      24: invokevirtual #650                // Method safeWriteRecord:(S[BII)V
      27: iload_2
      28: iload         4
      30: iadd
      31: istore_2
      32: iload_3
      33: iload         4
      35: isub
      36: istore_3
      37: goto          0
      40: return

  public java.io.OutputStream getOutputStream();
    Code:
       0: aload_0
       1: getfield      #575                // Field tlsOutputStream:Lorg/bouncycastle/crypto/tls/TlsOutputStream;
       4: areturn

  public java.io.InputStream getInputStream();
    Code:
       0: aload_0
       1: getfield      #574                // Field tlsInputStream:Lorg/bouncycastle/crypto/tls/TlsInputStream;
       4: areturn

  protected void failWithError(short, short, java.lang.String, java.lang.Throwable) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #552                // Field closed:Z
       4: ifne          48
       7: aload_0
       8: iconst_1
       9: putfield      #552                // Field closed:Z
      12: iload_1
      13: iconst_2
      14: if_icmpne     26
      17: aload_0
      18: invokevirtual #643                // Method invalidateSession:()V
      21: aload_0
      22: iconst_1
      23: putfield      #554                // Field failedWithError:Z
      26: aload_0
      27: iload_1
      28: iload_2
      29: aload_3
      30: aload         4
      32: invokevirtual #660                // Method raiseAlert:(SSLjava/lang/String;Ljava/lang/Throwable;)V
      35: aload_0
      36: getfield      #571                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      39: invokevirtual #615                // Method org/bouncycastle/crypto/tls/RecordStream.safeClose:()V
      42: iload_1
      43: iconst_2
      44: if_icmpeq     48
      47: return
      48: new           #290                // class java/io/IOException
      51: dup
      52: ldc           #6                  // String Internal TLS error, this could be an attack
      54: invokespecial #584                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      57: athrow

  protected void invalidateSession();
    Code:
       0: aload_0
       1: getfield      #573                // Field sessionParameters:Lorg/bouncycastle/crypto/tls/SessionParameters;
       4: ifnull        19
       7: aload_0
       8: getfield      #573                // Field sessionParameters:Lorg/bouncycastle/crypto/tls/SessionParameters;
      11: invokevirtual #623                // Method org/bouncycastle/crypto/tls/SessionParameters.clear:()V
      14: aload_0
      15: aconst_null
      16: putfield      #573                // Field sessionParameters:Lorg/bouncycastle/crypto/tls/SessionParameters;
      19: aload_0
      20: getfield      #576                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
      23: ifnull        40
      26: aload_0
      27: getfield      #576                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
      30: invokeinterface #702,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsSession.invalidate:()V
      35: aload_0
      36: aconst_null
      37: putfield      #576                // Field tlsSession:Lorg/bouncycastle/crypto/tls/TlsSession;
      40: return

  protected void processFinishedMessage(java.io.ByteArrayInputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #559                // Field expected_verify_data:[B
       4: arraylength
       5: aload_1
       6: invokestatic  #673                // Method org/bouncycastle/crypto/tls/TlsUtils.readFully:(ILjava/io/InputStream;)[B
       9: astore_2
      10: aload_1
      11: invokestatic  #654                // Method assertEmpty:(Ljava/io/ByteArrayInputStream;)V
      14: aload_0
      15: getfield      #559                // Field expected_verify_data:[B
      18: aload_2
      19: invokestatic  #686                // Method org/bouncycastle/util/Arrays.constantTimeAreEqual:([B[B)Z
      22: ifne          35
      25: new           #312                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      28: dup
      29: bipush        51
      31: invokespecial #638                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      34: athrow
      35: return

  protected void raiseAlert(short, short, java.lang.String, java.lang.Throwable) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #658                // Method getPeer:()Lorg/bouncycastle/crypto/tls/TlsPeer;
       4: iload_1
       5: iload_2
       6: aload_3
       7: aload         4
       9: invokeinterface #701,  5          // InterfaceMethod org/bouncycastle/crypto/tls/TlsPeer.notifyAlertRaised:(SSLjava/lang/String;Ljava/lang/Throwable;)V
      14: iconst_2
      15: newarray       byte
      17: astore        5
      19: aload         5
      21: iconst_0
      22: iload_1
      23: i2b
      24: bastore
      25: aload         5
      27: iconst_1
      28: iload_2
      29: i2b
      30: bastore
      31: aload_0
      32: bipush        21
      34: aload         5
      36: iconst_0
      37: iconst_2
      38: invokevirtual #650                // Method safeWriteRecord:(S[BII)V
      41: return

  protected void raiseWarning(short, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: iload_1
       3: aload_2
       4: aconst_null
       5: invokevirtual #660                // Method raiseAlert:(SSLjava/lang/String;Ljava/lang/Throwable;)V
       8: return

  protected void sendCertificateMessage(org.bouncycastle.crypto.tls.Certificate) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     8
       4: getstatic     #543                // Field org/bouncycastle/crypto/tls/Certificate.EMPTY_CHAIN:Lorg/bouncycastle/crypto/tls/Certificate;
       7: astore_1
       8: aload_1
       9: invokevirtual #607                // Method org/bouncycastle/crypto/tls/Certificate.isEmpty:()Z
      12: ifeq          79
      15: aload_0
      16: invokevirtual #657                // Method getContext:()Lorg/bouncycastle/crypto/tls/TlsContext;
      19: astore_2
      20: aload_2
      21: invokeinterface #694,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.isServer:()Z
      26: ifne          79
      29: aload_0
      30: invokevirtual #657                // Method getContext:()Lorg/bouncycastle/crypto/tls/TlsContext;
      33: invokeinterface #695,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getServerVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      38: astore_3
      39: aload_3
      40: invokevirtual #609                // Method org/bouncycastle/crypto/tls/ProtocolVersion.isSSL:()Z
      43: ifeq          79
      46: new           #295                // class java/lang/StringBuilder
      49: dup
      50: invokespecial #588                // Method java/lang/StringBuilder."<init>":()V
      53: aload_3
      54: invokevirtual #610                // Method org/bouncycastle/crypto/tls/ProtocolVersion.toString:()Ljava/lang/String;
      57: invokevirtual #590                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: ldc           #2                  // String  client didn\'t provide credentials
      62: invokevirtual #590                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #589                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: astore        4
      70: aload_0
      71: bipush        41
      73: aload         4
      75: invokevirtual #655                // Method raiseWarning:(SLjava/lang/String;)V
      78: return
      79: new           #319                // class org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage
      82: dup
      83: aload_0
      84: bipush        11
      86: invokespecial #665                // Method org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage."<init>":(Lorg/bouncycastle/crypto/tls/TlsProtocol;S)V
      89: astore_2
      90: aload_1
      91: aload_2
      92: invokevirtual #608                // Method org/bouncycastle/crypto/tls/Certificate.encode:(Ljava/io/OutputStream;)V
      95: aload_2
      96: invokevirtual #663                // Method org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage.writeToRecordStream:()V
      99: return

  protected void sendChangeCipherSpecMessage() throws java.io.IOException;
    Code:
       0: iconst_1
       1: newarray       byte
       3: dup
       4: iconst_0
       5: iconst_1
       6: bastore
       7: astore_1
       8: aload_0
       9: bipush        20
      11: aload_1
      12: iconst_0
      13: aload_1
      14: arraylength
      15: invokevirtual #650                // Method safeWriteRecord:(S[BII)V
      18: aload_0
      19: getfield      #571                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      22: invokevirtual #616                // Method org/bouncycastle/crypto/tls/RecordStream.sentWriteCipherSpec:()V
      25: return

  protected void sendFinishedMessage() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #657                // Method getContext:()Lorg/bouncycastle/crypto/tls/TlsContext;
       5: invokeinterface #694,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.isServer:()Z
      10: invokevirtual #652                // Method createVerifyData:(Z)[B
      13: astore_1
      14: new           #319                // class org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage
      17: dup
      18: aload_0
      19: bipush        20
      21: aload_1
      22: arraylength
      23: invokespecial #666                // Method org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage."<init>":(Lorg/bouncycastle/crypto/tls/TlsProtocol;SI)V
      26: astore_2
      27: aload_2
      28: aload_1
      29: invokevirtual #664                // Method org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage.write:([B)V
      32: aload_2
      33: invokevirtual #663                // Method org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage.writeToRecordStream:()V
      36: return

  protected void sendSupplementalDataMessage(java.util.Vector) throws java.io.IOException;
    Code:
       0: new           #319                // class org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage
       3: dup
       4: aload_0
       5: bipush        23
       7: invokespecial #665                // Method org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage."<init>":(Lorg/bouncycastle/crypto/tls/TlsProtocol;S)V
      10: astore_2
      11: aload_2
      12: aload_1
      13: invokestatic  #661                // Method writeSupplementalData:(Ljava/io/OutputStream;Ljava/util/Vector;)V
      16: aload_2
      17: invokevirtual #663                // Method org/bouncycastle/crypto/tls/TlsProtocol$HandshakeMessage.writeToRecordStream:()V
      20: return

  protected byte[] createVerifyData(boolean);
    Code:
       0: aload_0
       1: invokevirtual #657                // Method getContext:()Lorg/bouncycastle/crypto/tls/TlsContext;
       4: astore_2
       5: iload_1
       6: ifeq          14
       9: ldc           #10                 // String server finished
      11: goto          16
      14: ldc           #9                  // String client finished
      16: astore_3
      17: iload_1
      18: ifeq          27
      21: getstatic     #578                // Field org/bouncycastle/crypto/tls/TlsUtils.SSL_SERVER:[B
      24: goto          30
      27: getstatic     #577                // Field org/bouncycastle/crypto/tls/TlsUtils.SSL_CLIENT:[B
      30: astore        4
      32: aload_2
      33: aload_0
      34: getfield      #571                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
      37: invokevirtual #620                // Method org/bouncycastle/crypto/tls/RecordStream.getHandshakeHash:()Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;
      40: aload         4
      42: invokestatic  #662                // Method getCurrentPRFHash:(Lorg/bouncycastle/crypto/tls/TlsContext;Lorg/bouncycastle/crypto/tls/TlsHandshakeHash;[B)[B
      45: astore        5
      47: aload_2
      48: aload_3
      49: aload         5
      51: invokestatic  #684                // Method org/bouncycastle/crypto/tls/TlsUtils.calculateVerifyData:(Lorg/bouncycastle/crypto/tls/TlsContext;Ljava/lang/String;[B)[B
      54: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #651                // Method handleClose:(Z)V
       5: return

  protected void handleClose(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #552                // Field closed:Z
       4: ifne          35
       7: iload_1
       8: ifeq          26
      11: aload_0
      12: getfield      #551                // Field appDataReady:Z
      15: ifne          26
      18: aload_0
      19: bipush        90
      21: ldc           #8                  // String User canceled handshake
      23: invokevirtual #655                // Method raiseWarning:(SLjava/lang/String;)V
      26: aload_0
      27: iconst_1
      28: iconst_0
      29: ldc           #3                  // String Connection closed
      31: aconst_null
      32: invokevirtual #659                // Method failWithError:(SSLjava/lang/String;Ljava/lang/Throwable;)V
      35: return

  protected void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #571                // Field recordStream:Lorg/bouncycastle/crypto/tls/RecordStream;
       4: invokevirtual #613                // Method org/bouncycastle/crypto/tls/RecordStream.flush:()V
       7: return

  protected boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #552                // Field closed:Z
       4: ireturn

  protected short processMaxFragmentLengthExtension(java.util.Hashtable, java.util.Hashtable, short) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokestatic  #636                // Method org/bouncycastle/crypto/tls/TlsExtensionsUtils.getMaxFragmentLengthExtension:(Ljava/util/Hashtable;)S
       4: istore        4
       6: iload         4
       8: iflt          36
      11: aload_0
      12: getfield      #556                // Field resumedSession:Z
      15: ifne          36
      18: iload         4
      20: aload_1
      21: invokestatic  #636                // Method org/bouncycastle/crypto/tls/TlsExtensionsUtils.getMaxFragmentLengthExtension:(Ljava/util/Hashtable;)S
      24: if_icmpeq     36
      27: new           #312                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      30: dup
      31: iload_3
      32: invokespecial #638                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      35: athrow
      36: iload         4
      38: ireturn

  protected static void assertEmpty(java.io.ByteArrayInputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #579                // Method java/io/ByteArrayInputStream.available:()I
       4: ifle          17
       7: new           #312                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      10: dup
      11: bipush        50
      13: invokespecial #638                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      16: athrow
      17: return

  protected static byte[] createRandomBlock(boolean, org.bouncycastle.crypto.prng.RandomGenerator);
    Code:
       0: bipush        32
       2: newarray       byte
       4: astore_2
       5: aload_1
       6: aload_2
       7: invokeinterface #693,  2          // InterfaceMethod org/bouncycastle/crypto/prng/RandomGenerator.nextBytes:([B)V
      12: iload_0
      13: ifeq          21
      16: aload_2
      17: iconst_0
      18: invokestatic  #672                // Method org/bouncycastle/crypto/tls/TlsUtils.writeGMTUnixTime:([BI)V
      21: aload_2
      22: areturn

  protected static byte[] createRenegotiationInfo(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #669                // Method org/bouncycastle/crypto/tls/TlsUtils.encodeOpaque8:([B)[B
       4: areturn

  protected static void establishMasterSecret(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.tls.TlsKeyExchange) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #698,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsKeyExchange.generatePremasterSecret:()[B
       6: astore_2
       7: aload_0
       8: invokeinterface #696,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsContext.getSecurityParameters:()Lorg/bouncycastle/crypto/tls/SecurityParameters;
      13: aload_0
      14: aload_2
      15: invokestatic  #683                // Method org/bouncycastle/crypto/tls/TlsUtils.calculateMasterSecret:(Lorg/bouncycastle/crypto/tls/TlsContext;[B)[B
      18: putfield      #546                // Field org/bouncycastle/crypto/tls/SecurityParameters.masterSecret:[B
      21: aload_2
      22: ifnull        45
      25: aload_2
      26: iconst_0
      27: invokestatic  #685                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      30: goto          45
      33: astore_3
      34: aload_2
      35: ifnull        43
      38: aload_2
      39: iconst_0
      40: invokestatic  #685                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      43: aload_3
      44: athrow
      45: return
    Exception table:
       from    to  target type
           7    21    33   any
          33    34    33   any

  protected static byte[] getCurrentPRFHash(org.bouncycastle.crypto.tls.TlsContext, org.bouncycastle.crypto.tls.TlsHandshakeHash, byte[]);
    Code:
       0: aload_1
       1: invokeinterface #697,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsHandshakeHash.forkPRFHash:()Lorg/bouncycastle/crypto/Digest;
       6: astore_3
       7: aload_2
       8: ifnull        28
      11: aload_0
      12: invokestatic  #680                // Method org/bouncycastle/crypto/tls/TlsUtils.isSSL:(Lorg/bouncycastle/crypto/tls/TlsContext;)Z
      15: ifeq          28
      18: aload_3
      19: aload_2
      20: iconst_0
      21: aload_2
      22: arraylength
      23: invokeinterface #692,  4          // InterfaceMethod org/bouncycastle/crypto/Digest.update:([BII)V
      28: aload_3
      29: invokeinterface #690,  1          // InterfaceMethod org/bouncycastle/crypto/Digest.getDigestSize:()I
      34: newarray       byte
      36: astore        4
      38: aload_3
      39: aload         4
      41: iconst_0
      42: invokeinterface #691,  3          // InterfaceMethod org/bouncycastle/crypto/Digest.doFinal:([BI)I
      47: pop
      48: aload         4
      50: areturn

  protected static java.util.Hashtable readExtensions(java.io.ByteArrayInputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #579                // Method java/io/ByteArrayInputStream.available:()I
       4: iconst_1
       5: if_icmpge     10
       8: aconst_null
       9: areturn
      10: aload_0
      11: invokestatic  #675                // Method org/bouncycastle/crypto/tls/TlsUtils.readOpaque16:(Ljava/io/InputStream;)[B
      14: astore_1
      15: aload_0
      16: invokestatic  #654                // Method assertEmpty:(Ljava/io/ByteArrayInputStream;)V
      19: new           #287                // class java/io/ByteArrayInputStream
      22: dup
      23: aload_1
      24: invokespecial #580                // Method java/io/ByteArrayInputStream."<init>":([B)V
      27: astore_2
      28: new           #297                // class java/util/Hashtable
      31: dup
      32: invokespecial #591                // Method java/util/Hashtable."<init>":()V
      35: astore_3
      36: aload_2
      37: invokevirtual #579                // Method java/io/ByteArrayInputStream.available:()I
      40: ifle          83
      43: aload_2
      44: invokestatic  #674                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint16:(Ljava/io/InputStream;)I
      47: invokestatic  #687                // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
      50: astore        4
      52: aload_2
      53: invokestatic  #675                // Method org/bouncycastle/crypto/tls/TlsUtils.readOpaque16:(Ljava/io/InputStream;)[B
      56: astore        5
      58: aconst_null
      59: aload_3
      60: aload         4
      62: aload         5
      64: invokevirtual #594                // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      67: if_acmpeq     80
      70: new           #312                // class org/bouncycastle/crypto/tls/TlsFatalAlert
      73: dup
      74: bipush        47
      76: invokespecial #638                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      79: athrow
      80: goto          36
      83: aload_3
      84: areturn

  protected static java.util.Vector readSupplementalDataMessage(java.io.ByteArrayInputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #676                // Method org/bouncycastle/crypto/tls/TlsUtils.readOpaque24:(Ljava/io/InputStream;)[B
       4: astore_1
       5: aload_0
       6: invokestatic  #654                // Method assertEmpty:(Ljava/io/ByteArrayInputStream;)V
       9: new           #287                // class java/io/ByteArrayInputStream
      12: dup
      13: aload_1
      14: invokespecial #580                // Method java/io/ByteArrayInputStream."<init>":([B)V
      17: astore_2
      18: new           #298                // class java/util/Vector
      21: dup
      22: invokespecial #596                // Method java/util/Vector."<init>":()V
      25: astore_3
      26: aload_2
      27: invokevirtual #579                // Method java/io/ByteArrayInputStream.available:()I
      30: ifle          63
      33: aload_2
      34: invokestatic  #674                // Method org/bouncycastle/crypto/tls/TlsUtils.readUint16:(Ljava/io/InputStream;)I
      37: istore        4
      39: aload_2
      40: invokestatic  #675                // Method org/bouncycastle/crypto/tls/TlsUtils.readOpaque16:(Ljava/io/InputStream;)[B
      43: astore        5
      45: aload_3
      46: new           #309                // class org/bouncycastle/crypto/tls/SupplementalDataEntry
      49: dup
      50: iload         4
      52: aload         5
      54: invokespecial #635                // Method org/bouncycastle/crypto/tls/SupplementalDataEntry."<init>":(I[B)V
      57: invokevirtual #598                // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      60: goto          26
      63: aload_3
      64: areturn

  protected static void writeExtensions(java.io.OutputStream, java.util.Hashtable) throws java.io.IOException;
    Code:
       0: new           #288                // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #581                // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_2
       8: aload_1
       9: invokevirtual #592                // Method java/util/Hashtable.keys:()Ljava/util/Enumeration;
      12: astore_3
      13: aload_3
      14: invokeinterface #688,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      19: ifeq          74
      22: aload_3
      23: invokeinterface #689,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      28: checkcast     #291                // class java/lang/Integer
      31: astore        4
      33: aload         4
      35: invokevirtual #585                // Method java/lang/Integer.intValue:()I
      38: istore        5
      40: aload_1
      41: aload         4
      43: invokevirtual #593                // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #286                // class "[B"
      49: checkcast     #286                // class "[B"
      52: astore        6
      54: iload         5
      56: invokestatic  #668                // Method org/bouncycastle/crypto/tls/TlsUtils.checkUint16:(I)V
      59: iload         5
      61: aload_2
      62: invokestatic  #677                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint16:(ILjava/io/OutputStream;)V
      65: aload         6
      67: aload_2
      68: invokestatic  #678                // Method org/bouncycastle/crypto/tls/TlsUtils.writeOpaque16:([BLjava/io/OutputStream;)V
      71: goto          13
      74: aload_2
      75: invokevirtual #582                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      78: astore        4
      80: aload         4
      82: aload_0
      83: invokestatic  #678                // Method org/bouncycastle/crypto/tls/TlsUtils.writeOpaque16:([BLjava/io/OutputStream;)V
      86: return

  protected static void writeSupplementalData(java.io.OutputStream, java.util.Vector) throws java.io.IOException;
    Code:
       0: new           #288                // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #581                // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: aload_1
      12: invokevirtual #595                // Method java/util/Vector.size:()I
      15: if_icmpge     61
      18: aload_1
      19: iload_3
      20: invokevirtual #597                // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      23: checkcast     #309                // class org/bouncycastle/crypto/tls/SupplementalDataEntry
      26: astore        4
      28: aload         4
      30: invokevirtual #633                // Method org/bouncycastle/crypto/tls/SupplementalDataEntry.getDataType:()I
      33: istore        5
      35: iload         5
      37: invokestatic  #668                // Method org/bouncycastle/crypto/tls/TlsUtils.checkUint16:(I)V
      40: iload         5
      42: aload_2
      43: invokestatic  #677                // Method org/bouncycastle/crypto/tls/TlsUtils.writeUint16:(ILjava/io/OutputStream;)V
      46: aload         4
      48: invokevirtual #634                // Method org/bouncycastle/crypto/tls/SupplementalDataEntry.getData:()[B
      51: aload_2
      52: invokestatic  #678                // Method org/bouncycastle/crypto/tls/TlsUtils.writeOpaque16:([BLjava/io/OutputStream;)V
      55: iinc          3, 1
      58: goto          10
      61: aload_2
      62: invokevirtual #582                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      65: astore_3
      66: aload_3
      67: aload_0
      68: invokestatic  #679                // Method org/bouncycastle/crypto/tls/TlsUtils.writeOpaque24:([BLjava/io/OutputStream;)V
      71: return

  protected static int getPRFAlgorithm(org.bouncycastle.crypto.tls.TlsContext, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #682                // Method org/bouncycastle/crypto/tls/TlsUtils.isTLSv12:(Lorg/bouncycastle/crypto/tls/TlsContext;)Z
       4: istore_2
       5: iload_1
       6: lookupswitch  { // 124
                    59: 1008
                    60: 1008
                    61: 1008
                    62: 1008
                    63: 1008
                    64: 1008
                   103: 1008
                   104: 1008
                   105: 1008
                   106: 1008
                   107: 1008
                   156: 1008
                   157: 1024
                   158: 1008
                   159: 1024
                   160: 1008
                   161: 1024
                   162: 1008
                   163: 1024
                   164: 1008
                   165: 1024
                   168: 1008
                   169: 1024
                   170: 1008
                   171: 1024
                   172: 1008
                   173: 1024
                   175: 1040
                   177: 1040
                   179: 1040
                   181: 1040
                   183: 1040
                   185: 1040
                   186: 1008
                   187: 1008
                   188: 1008
                   189: 1008
                   190: 1008
                   191: 1008
                   192: 1008
                   193: 1008
                   194: 1008
                   195: 1008
                   196: 1008
                   197: 1008
                 49187: 1008
                 49188: 1024
                 49189: 1008
                 49190: 1024
                 49191: 1008
                 49192: 1024
                 49193: 1008
                 49194: 1024
                 49195: 1008
                 49196: 1024
                 49197: 1008
                 49198: 1024
                 49199: 1008
                 49200: 1024
                 49201: 1008
                 49202: 1024
                 49208: 1040
                 49211: 1040
                 49266: 1008
                 49267: 1024
                 49268: 1008
                 49269: 1024
                 49270: 1008
                 49271: 1024
                 49272: 1008
                 49273: 1024
                 49274: 1008
                 49275: 1024
                 49276: 1008
                 49277: 1024
                 49278: 1008
                 49279: 1024
                 49280: 1008
                 49281: 1024
                 49282: 1008
                 49283: 1024
                 49284: 1008
                 49285: 1024
                 49286: 1008
                 49287: 1024
                 49288: 1008
                 49289: 1024
                 49290: 1008
                 49291: 1024
                 49292: 1008
                 49293: 1024
                 49294: 1008
                 49295: 1024
                 49296: 1008
                 49297: 1024
                 49298: 1008
                 49299: 1024
                 49301: 1040
                 49303: 1040
                 49305: 1040
                 49307: 1040
                 49308: 1008
                 49309: 1008
                 49310: 1008
                 49311: 1008
                 49312: 1008
                 49313: 1008
                 49314: 1008
                 49315: 1008
                 49316: 1008
                 49317: 1008
                 49318: 1008
                 49319: 1008
                 49320: 1008
                 49321: 1008
                 49322: 1008
                 49323: 1008
                 49324: 1008
                 49325: 1008
                 49326: 1008
                 49327: 1008
                 52243: 1008
                 52244: 1008
                 52245: 1008
               default: 1048
          }
    1008: iload_2
    1009: ifeq          1014
    1012: iconst_1
    1013: ireturn
    1014: new           #312                // class org/bouncycastle/crypto/tls/TlsFatalAlert
    1017: dup
    1018: bipush        47
    1020: invokespecial #638                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
    1023: athrow
    1024: iload_2
    1025: ifeq          1030
    1028: iconst_2
    1029: ireturn
    1030: new           #312                // class org/bouncycastle/crypto/tls/TlsFatalAlert
    1033: dup
    1034: bipush        47
    1036: invokespecial #638                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
    1039: athrow
    1040: iload_2
    1041: ifeq          1046
    1044: iconst_2
    1045: ireturn
    1046: iconst_0
    1047: ireturn
    1048: iload_2
    1049: ifeq          1054
    1052: iconst_1
    1053: ireturn
    1054: iconst_0
    1055: ireturn

  static {};
    Code:
       0: ldc           #1                  // int 65281
       2: invokestatic  #687                // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
       5: putstatic     #562                // Field EXT_RenegotiationInfo:Ljava/lang/Integer;
       8: bipush        35
      10: invokestatic  #687                // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
      13: putstatic     #563                // Field EXT_SessionTicket:Ljava/lang/Integer;
      16: return
}
