public class org.bouncycastle.crypto.modes.EAXBlockCipher implements org.bouncycastle.crypto.modes.AEADBlockCipher {
  private static final byte nTAG;

  private static final byte hTAG;

  private static final byte cTAG;

  private org.bouncycastle.crypto.modes.SICBlockCipher cipher;

  private boolean forEncryption;

  private int blockSize;

  private org.bouncycastle.crypto.Mac mac;

  private byte[] nonceMac;

  private byte[] associatedTextMac;

  private byte[] macBlock;

  private int macSize;

  private byte[] bufBlock;

  private int bufOff;

  private boolean cipherInitialized;

  private byte[] initialAssociatedText;

  public org.bouncycastle.crypto.modes.EAXBlockCipher(org.bouncycastle.crypto.BlockCipher);
    Code:
       0: aload_0
       1: invokespecial #187                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokeinterface #217,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      11: putfield      #173                // Field blockSize:I
      14: aload_0
      15: new           #111                // class org/bouncycastle/crypto/macs/CMac
      18: dup
      19: aload_1
      20: invokespecial #195                // Method org/bouncycastle/crypto/macs/CMac."<init>":(Lorg/bouncycastle/crypto/BlockCipher;)V
      23: putfield      #183                // Field mac:Lorg/bouncycastle/crypto/Mac;
      26: aload_0
      27: aload_0
      28: getfield      #173                // Field blockSize:I
      31: newarray       byte
      33: putfield      #181                // Field macBlock:[B
      36: aload_0
      37: aload_0
      38: getfield      #183                // Field mac:Lorg/bouncycastle/crypto/Mac;
      41: invokeinterface #219,  1          // InterfaceMethod org/bouncycastle/crypto/Mac.getMacSize:()I
      46: newarray       byte
      48: putfield      #178                // Field associatedTextMac:[B
      51: aload_0
      52: aload_0
      53: getfield      #183                // Field mac:Lorg/bouncycastle/crypto/Mac;
      56: invokeinterface #219,  1          // InterfaceMethod org/bouncycastle/crypto/Mac.getMacSize:()I
      61: newarray       byte
      63: putfield      #182                // Field nonceMac:[B
      66: aload_0
      67: new           #114                // class org/bouncycastle/crypto/modes/SICBlockCipher
      70: dup
      71: aload_1
      72: invokespecial #207                // Method org/bouncycastle/crypto/modes/SICBlockCipher."<init>":(Lorg/bouncycastle/crypto/BlockCipher;)V
      75: putfield      #184                // Field cipher:Lorg/bouncycastle/crypto/modes/SICBlockCipher;
      78: return

  public java.lang.String getAlgorithmName();
    Code:
       0: new           #104                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #188                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #184                // Field cipher:Lorg/bouncycastle/crypto/modes/SICBlockCipher;
      11: invokevirtual #206                // Method org/bouncycastle/crypto/modes/SICBlockCipher.getUnderlyingCipher:()Lorg/bouncycastle/crypto/BlockCipher;
      14: invokeinterface #218,  1          // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getAlgorithmName:()Ljava/lang/String;
      19: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #1                  // String /EAX
      24: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #189                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: areturn

  public org.bouncycastle.crypto.BlockCipher getUnderlyingCipher();
    Code:
       0: aload_0
       1: getfield      #184                // Field cipher:Lorg/bouncycastle/crypto/modes/SICBlockCipher;
       4: invokevirtual #206                // Method org/bouncycastle/crypto/modes/SICBlockCipher.getUnderlyingCipher:()Lorg/bouncycastle/crypto/BlockCipher;
       7: areturn

  public int getBlockSize();
    Code:
       0: aload_0
       1: getfield      #184                // Field cipher:Lorg/bouncycastle/crypto/modes/SICBlockCipher;
       4: invokevirtual #203                // Method org/bouncycastle/crypto/modes/SICBlockCipher.getBlockSize:()I
       7: ireturn

  public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #177                // Field forEncryption:Z
       5: aload_2
       6: instanceof    #115                // class org/bouncycastle/crypto/params/AEADParameters
       9: ifeq          55
      12: aload_2
      13: checkcast     #115                // class org/bouncycastle/crypto/params/AEADParameters
      16: astore        5
      18: aload         5
      20: invokevirtual #211                // Method org/bouncycastle/crypto/params/AEADParameters.getNonce:()[B
      23: astore_3
      24: aload_0
      25: aload         5
      27: invokevirtual #210                // Method org/bouncycastle/crypto/params/AEADParameters.getAssociatedText:()[B
      30: putfield      #180                // Field initialAssociatedText:[B
      33: aload_0
      34: aload         5
      36: invokevirtual #209                // Method org/bouncycastle/crypto/params/AEADParameters.getMacSize:()I
      39: bipush        8
      41: idiv
      42: putfield      #175                // Field macSize:I
      45: aload         5
      47: invokevirtual #212                // Method org/bouncycastle/crypto/params/AEADParameters.getKey:()Lorg/bouncycastle/crypto/params/KeyParameter;
      50: astore        4
      52: goto          114
      55: aload_2
      56: instanceof    #116                // class org/bouncycastle/crypto/params/ParametersWithIV
      59: ifeq          104
      62: aload_2
      63: checkcast     #116                // class org/bouncycastle/crypto/params/ParametersWithIV
      66: astore        5
      68: aload         5
      70: invokevirtual #213                // Method org/bouncycastle/crypto/params/ParametersWithIV.getIV:()[B
      73: astore_3
      74: aload_0
      75: aconst_null
      76: putfield      #180                // Field initialAssociatedText:[B
      79: aload_0
      80: aload_0
      81: getfield      #183                // Field mac:Lorg/bouncycastle/crypto/Mac;
      84: invokeinterface #219,  1          // InterfaceMethod org/bouncycastle/crypto/Mac.getMacSize:()I
      89: iconst_2
      90: idiv
      91: putfield      #175                // Field macSize:I
      94: aload         5
      96: invokevirtual #214                // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      99: astore        4
     101: goto          114
     104: new           #101                // class java/lang/IllegalArgumentException
     107: dup
     108: ldc           #8                  // String invalid parameters passed to EAX
     110: invokespecial #185                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     113: athrow
     114: aload_0
     115: iload_1
     116: ifeq          126
     119: aload_0
     120: getfield      #173                // Field blockSize:I
     123: goto          135
     126: aload_0
     127: getfield      #173                // Field blockSize:I
     130: aload_0
     131: getfield      #175                // Field macSize:I
     134: iadd
     135: newarray       byte
     137: putfield      #179                // Field bufBlock:[B
     140: aload_0
     141: getfield      #173                // Field blockSize:I
     144: newarray       byte
     146: astore        5
     148: aload_0
     149: getfield      #183                // Field mac:Lorg/bouncycastle/crypto/Mac;
     152: aload         4
     154: invokeinterface #224,  2          // InterfaceMethod org/bouncycastle/crypto/Mac.init:(Lorg/bouncycastle/crypto/CipherParameters;)V
     159: aload         5
     161: aload_0
     162: getfield      #173                // Field blockSize:I
     165: iconst_1
     166: isub
     167: iconst_0
     168: bastore
     169: aload_0
     170: getfield      #183                // Field mac:Lorg/bouncycastle/crypto/Mac;
     173: aload         5
     175: iconst_0
     176: aload_0
     177: getfield      #173                // Field blockSize:I
     180: invokeinterface #223,  4          // InterfaceMethod org/bouncycastle/crypto/Mac.update:([BII)V
     185: aload_0
     186: getfield      #183                // Field mac:Lorg/bouncycastle/crypto/Mac;
     189: aload_3
     190: iconst_0
     191: aload_3
     192: arraylength
     193: invokeinterface #223,  4          // InterfaceMethod org/bouncycastle/crypto/Mac.update:([BII)V
     198: aload_0
     199: getfield      #183                // Field mac:Lorg/bouncycastle/crypto/Mac;
     202: aload_0
     203: getfield      #182                // Field nonceMac:[B
     206: iconst_0
     207: invokeinterface #222,  3          // InterfaceMethod org/bouncycastle/crypto/Mac.doFinal:([BI)I
     212: pop
     213: aload_0
     214: getfield      #184                // Field cipher:Lorg/bouncycastle/crypto/modes/SICBlockCipher;
     217: iconst_1
     218: new           #116                // class org/bouncycastle/crypto/params/ParametersWithIV
     221: dup
     222: aconst_null
     223: aload_0
     224: getfield      #182                // Field nonceMac:[B
     227: invokespecial #215                // Method org/bouncycastle/crypto/params/ParametersWithIV."<init>":(Lorg/bouncycastle/crypto/CipherParameters;[B)V
     230: invokevirtual #208                // Method org/bouncycastle/crypto/modes/SICBlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
     233: aload_0
     234: invokevirtual #198                // Method reset:()V
     237: return

  private void initCipher();
    Code:
       0: aload_0
       1: getfield      #176                // Field cipherInitialized:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #176                // Field cipherInitialized:Z
      13: aload_0
      14: getfield      #183                // Field mac:Lorg/bouncycastle/crypto/Mac;
      17: aload_0
      18: getfield      #178                // Field associatedTextMac:[B
      21: iconst_0
      22: invokeinterface #222,  3          // InterfaceMethod org/bouncycastle/crypto/Mac.doFinal:([BI)I
      27: pop
      28: aload_0
      29: getfield      #173                // Field blockSize:I
      32: newarray       byte
      34: astore_1
      35: aload_1
      36: aload_0
      37: getfield      #173                // Field blockSize:I
      40: iconst_1
      41: isub
      42: iconst_2
      43: bastore
      44: aload_0
      45: getfield      #183                // Field mac:Lorg/bouncycastle/crypto/Mac;
      48: aload_1
      49: iconst_0
      50: aload_0
      51: getfield      #173                // Field blockSize:I
      54: invokeinterface #223,  4          // InterfaceMethod org/bouncycastle/crypto/Mac.update:([BII)V
      59: return

  private void calculateMac();
    Code:
       0: aload_0
       1: getfield      #173                // Field blockSize:I
       4: newarray       byte
       6: astore_1
       7: aload_0
       8: getfield      #183                // Field mac:Lorg/bouncycastle/crypto/Mac;
      11: aload_1
      12: iconst_0
      13: invokeinterface #222,  3          // InterfaceMethod org/bouncycastle/crypto/Mac.doFinal:([BI)I
      18: pop
      19: iconst_0
      20: istore_2
      21: iload_2
      22: aload_0
      23: getfield      #181                // Field macBlock:[B
      26: arraylength
      27: if_icmpge     60
      30: aload_0
      31: getfield      #181                // Field macBlock:[B
      34: iload_2
      35: aload_0
      36: getfield      #182                // Field nonceMac:[B
      39: iload_2
      40: baload
      41: aload_0
      42: getfield      #178                // Field associatedTextMac:[B
      45: iload_2
      46: baload
      47: ixor
      48: aload_1
      49: iload_2
      50: baload
      51: ixor
      52: i2b
      53: bastore
      54: iinc          2, 1
      57: goto          21
      60: return

  public void reset();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #200                // Method reset:(Z)V
       5: return

  private void reset(boolean);
    Code:
       0: aload_0
       1: getfield      #184                // Field cipher:Lorg/bouncycastle/crypto/modes/SICBlockCipher;
       4: invokevirtual #204                // Method org/bouncycastle/crypto/modes/SICBlockCipher.reset:()V
       7: aload_0
       8: getfield      #183                // Field mac:Lorg/bouncycastle/crypto/Mac;
      11: invokeinterface #220,  1          // InterfaceMethod org/bouncycastle/crypto/Mac.reset:()V
      16: aload_0
      17: iconst_0
      18: putfield      #174                // Field bufOff:I
      21: aload_0
      22: getfield      #179                // Field bufBlock:[B
      25: iconst_0
      26: invokestatic  #216                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      29: iload_1
      30: ifeq          41
      33: aload_0
      34: getfield      #181                // Field macBlock:[B
      37: iconst_0
      38: invokestatic  #216                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      41: aload_0
      42: getfield      #173                // Field blockSize:I
      45: newarray       byte
      47: astore_2
      48: aload_2
      49: aload_0
      50: getfield      #173                // Field blockSize:I
      53: iconst_1
      54: isub
      55: iconst_1
      56: bastore
      57: aload_0
      58: getfield      #183                // Field mac:Lorg/bouncycastle/crypto/Mac;
      61: aload_2
      62: iconst_0
      63: aload_0
      64: getfield      #173                // Field blockSize:I
      67: invokeinterface #223,  4          // InterfaceMethod org/bouncycastle/crypto/Mac.update:([BII)V
      72: aload_0
      73: iconst_0
      74: putfield      #176                // Field cipherInitialized:Z
      77: aload_0
      78: getfield      #180                // Field initialAssociatedText:[B
      81: ifnull        98
      84: aload_0
      85: aload_0
      86: getfield      #180                // Field initialAssociatedText:[B
      89: iconst_0
      90: aload_0
      91: getfield      #180                // Field initialAssociatedText:[B
      94: arraylength
      95: invokevirtual #202                // Method processAADBytes:([BII)V
      98: return

  public void processAADByte(byte);
    Code:
       0: aload_0
       1: getfield      #176                // Field cipherInitialized:Z
       4: ifeq          17
       7: new           #102                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #2                  // String AAD data cannot be added after encryption/decription processing has begun.
      13: invokespecial #186                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #183                // Field mac:Lorg/bouncycastle/crypto/Mac;
      21: iload_1
      22: invokeinterface #221,  2          // InterfaceMethod org/bouncycastle/crypto/Mac.update:(B)V
      27: return

  public void processAADBytes(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #176                // Field cipherInitialized:Z
       4: ifeq          17
       7: new           #102                // class java/lang/IllegalStateException
      10: dup
      11: ldc           #3                  // String AAD data cannot be added after encryption/decryption processing has begun.
      13: invokespecial #186                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #183                // Field mac:Lorg/bouncycastle/crypto/Mac;
      21: aload_1
      22: iload_2
      23: iload_3
      24: invokeinterface #223,  4          // InterfaceMethod org/bouncycastle/crypto/Mac.update:([BII)V
      29: return

  public int processByte(byte, byte[], int) throws org.bouncycastle.crypto.DataLengthException;
    Code:
       0: aload_0
       1: invokespecial #197                // Method initCipher:()V
       4: aload_0
       5: iload_1
       6: aload_2
       7: iload_3
       8: invokespecial #199                // Method process:(B[BI)I
      11: ireturn

  public int processBytes(byte[], int, int, byte[], int) throws org.bouncycastle.crypto.DataLengthException;
    Code:
       0: aload_0
       1: invokespecial #197                // Method initCipher:()V
       4: aload_1
       5: arraylength
       6: iload_2
       7: iload_3
       8: iadd
       9: if_icmpge     22
      12: new           #107                // class org/bouncycastle/crypto/DataLengthException
      15: dup
      16: ldc           #4                  // String Input buffer too short
      18: invokespecial #192                // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: iconst_0
      23: istore        6
      25: iconst_0
      26: istore        7
      28: iload         7
      30: iload_3
      31: if_icmpeq     62
      34: iload         6
      36: aload_0
      37: aload_1
      38: iload_2
      39: iload         7
      41: iadd
      42: baload
      43: aload         4
      45: iload         5
      47: iload         6
      49: iadd
      50: invokespecial #199                // Method process:(B[BI)I
      53: iadd
      54: istore        6
      56: iinc          7, 1
      59: goto          28
      62: iload         6
      64: ireturn

  public int doFinal(byte[], int) throws java.lang.IllegalStateException, org.bouncycastle.crypto.InvalidCipherTextException;
    Code:
       0: aload_0
       1: invokespecial #197                // Method initCipher:()V
       4: aload_0
       5: getfield      #174                // Field bufOff:I
       8: istore_3
       9: aload_0
      10: getfield      #179                // Field bufBlock:[B
      13: arraylength
      14: newarray       byte
      16: astore        4
      18: aload_0
      19: iconst_0
      20: putfield      #174                // Field bufOff:I
      23: aload_0
      24: getfield      #177                // Field forEncryption:Z
      27: ifeq          123
      30: aload_1
      31: arraylength
      32: iload_2
      33: iload_3
      34: iadd
      35: aload_0
      36: getfield      #175                // Field macSize:I
      39: iadd
      40: if_icmpge     53
      43: new           #110                // class org/bouncycastle/crypto/OutputLengthException
      46: dup
      47: ldc           #6                  // String Output buffer too short
      49: invokespecial #194                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: aload_0
      54: getfield      #184                // Field cipher:Lorg/bouncycastle/crypto/modes/SICBlockCipher;
      57: aload_0
      58: getfield      #179                // Field bufBlock:[B
      61: iconst_0
      62: aload         4
      64: iconst_0
      65: invokevirtual #205                // Method org/bouncycastle/crypto/modes/SICBlockCipher.processBlock:([BI[BI)I
      68: pop
      69: aload         4
      71: iconst_0
      72: aload_1
      73: iload_2
      74: iload_3
      75: invokestatic  #191                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      78: aload_0
      79: getfield      #183                // Field mac:Lorg/bouncycastle/crypto/Mac;
      82: aload         4
      84: iconst_0
      85: iload_3
      86: invokeinterface #223,  4          // InterfaceMethod org/bouncycastle/crypto/Mac.update:([BII)V
      91: aload_0
      92: invokespecial #196                // Method calculateMac:()V
      95: aload_0
      96: getfield      #181                // Field macBlock:[B
      99: iconst_0
     100: aload_1
     101: iload_2
     102: iload_3
     103: iadd
     104: aload_0
     105: getfield      #175                // Field macSize:I
     108: invokestatic  #191                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     111: aload_0
     112: iconst_0
     113: invokespecial #200                // Method reset:(Z)V
     116: iload_3
     117: aload_0
     118: getfield      #175                // Field macSize:I
     121: iadd
     122: ireturn
     123: aload_1
     124: arraylength
     125: iload_2
     126: iload_3
     127: iadd
     128: aload_0
     129: getfield      #175                // Field macSize:I
     132: isub
     133: if_icmpge     146
     136: new           #110                // class org/bouncycastle/crypto/OutputLengthException
     139: dup
     140: ldc           #6                  // String Output buffer too short
     142: invokespecial #194                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
     145: athrow
     146: iload_3
     147: aload_0
     148: getfield      #175                // Field macSize:I
     151: if_icmpge     164
     154: new           #108                // class org/bouncycastle/crypto/InvalidCipherTextException
     157: dup
     158: ldc           #7                  // String data too short
     160: invokespecial #193                // Method org/bouncycastle/crypto/InvalidCipherTextException."<init>":(Ljava/lang/String;)V
     163: athrow
     164: iload_3
     165: aload_0
     166: getfield      #175                // Field macSize:I
     169: if_icmple     222
     172: aload_0
     173: getfield      #183                // Field mac:Lorg/bouncycastle/crypto/Mac;
     176: aload_0
     177: getfield      #179                // Field bufBlock:[B
     180: iconst_0
     181: iload_3
     182: aload_0
     183: getfield      #175                // Field macSize:I
     186: isub
     187: invokeinterface #223,  4          // InterfaceMethod org/bouncycastle/crypto/Mac.update:([BII)V
     192: aload_0
     193: getfield      #184                // Field cipher:Lorg/bouncycastle/crypto/modes/SICBlockCipher;
     196: aload_0
     197: getfield      #179                // Field bufBlock:[B
     200: iconst_0
     201: aload         4
     203: iconst_0
     204: invokevirtual #205                // Method org/bouncycastle/crypto/modes/SICBlockCipher.processBlock:([BI[BI)I
     207: pop
     208: aload         4
     210: iconst_0
     211: aload_1
     212: iload_2
     213: iload_3
     214: aload_0
     215: getfield      #175                // Field macSize:I
     218: isub
     219: invokestatic  #191                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     222: aload_0
     223: invokespecial #196                // Method calculateMac:()V
     226: aload_0
     227: aload_0
     228: getfield      #179                // Field bufBlock:[B
     231: iload_3
     232: aload_0
     233: getfield      #175                // Field macSize:I
     236: isub
     237: invokespecial #201                // Method verifyMac:([BI)Z
     240: ifne          253
     243: new           #108                // class org/bouncycastle/crypto/InvalidCipherTextException
     246: dup
     247: ldc           #9                  // String mac check in EAX failed
     249: invokespecial #193                // Method org/bouncycastle/crypto/InvalidCipherTextException."<init>":(Ljava/lang/String;)V
     252: athrow
     253: aload_0
     254: iconst_0
     255: invokespecial #200                // Method reset:(Z)V
     258: iload_3
     259: aload_0
     260: getfield      #175                // Field macSize:I
     263: isub
     264: ireturn

  public byte[] getMac();
    Code:
       0: aload_0
       1: getfield      #175                // Field macSize:I
       4: newarray       byte
       6: astore_1
       7: aload_0
       8: getfield      #181                // Field macBlock:[B
      11: iconst_0
      12: aload_1
      13: iconst_0
      14: aload_0
      15: getfield      #175                // Field macSize:I
      18: invokestatic  #191                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      21: aload_1
      22: areturn

  public int getUpdateOutputSize(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #174                // Field bufOff:I
       5: iadd
       6: istore_2
       7: aload_0
       8: getfield      #177                // Field forEncryption:Z
      11: ifne          31
      14: iload_2
      15: aload_0
      16: getfield      #175                // Field macSize:I
      19: if_icmpge     24
      22: iconst_0
      23: ireturn
      24: iload_2
      25: aload_0
      26: getfield      #175                // Field macSize:I
      29: isub
      30: istore_2
      31: iload_2
      32: iload_2
      33: aload_0
      34: getfield      #173                // Field blockSize:I
      37: irem
      38: isub
      39: ireturn

  public int getOutputSize(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #174                // Field bufOff:I
       5: iadd
       6: istore_2
       7: aload_0
       8: getfield      #177                // Field forEncryption:Z
      11: ifeq          21
      14: iload_2
      15: aload_0
      16: getfield      #175                // Field macSize:I
      19: iadd
      20: ireturn
      21: iload_2
      22: aload_0
      23: getfield      #175                // Field macSize:I
      26: if_icmpge     33
      29: iconst_0
      30: goto          39
      33: iload_2
      34: aload_0
      35: getfield      #175                // Field macSize:I
      38: isub
      39: ireturn

  private int process(byte, byte[], int);
    Code:
       0: aload_0
       1: getfield      #179                // Field bufBlock:[B
       4: aload_0
       5: dup
       6: getfield      #174                // Field bufOff:I
       9: dup_x1
      10: iconst_1
      11: iadd
      12: putfield      #174                // Field bufOff:I
      15: iload_1
      16: bastore
      17: aload_0
      18: getfield      #174                // Field bufOff:I
      21: aload_0
      22: getfield      #179                // Field bufBlock:[B
      25: arraylength
      26: if_icmpne     168
      29: aload_2
      30: arraylength
      31: iload_3
      32: aload_0
      33: getfield      #173                // Field blockSize:I
      36: iadd
      37: if_icmpge     50
      40: new           #110                // class org/bouncycastle/crypto/OutputLengthException
      43: dup
      44: ldc           #5                  // String Output buffer is too short
      46: invokespecial #194                // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: getfield      #177                // Field forEncryption:Z
      54: ifeq          91
      57: aload_0
      58: getfield      #184                // Field cipher:Lorg/bouncycastle/crypto/modes/SICBlockCipher;
      61: aload_0
      62: getfield      #179                // Field bufBlock:[B
      65: iconst_0
      66: aload_2
      67: iload_3
      68: invokevirtual #205                // Method org/bouncycastle/crypto/modes/SICBlockCipher.processBlock:([BI[BI)I
      71: istore        4
      73: aload_0
      74: getfield      #183                // Field mac:Lorg/bouncycastle/crypto/Mac;
      77: aload_2
      78: iload_3
      79: aload_0
      80: getfield      #173                // Field blockSize:I
      83: invokeinterface #223,  4          // InterfaceMethod org/bouncycastle/crypto/Mac.update:([BII)V
      88: goto          125
      91: aload_0
      92: getfield      #183                // Field mac:Lorg/bouncycastle/crypto/Mac;
      95: aload_0
      96: getfield      #179                // Field bufBlock:[B
      99: iconst_0
     100: aload_0
     101: getfield      #173                // Field blockSize:I
     104: invokeinterface #223,  4          // InterfaceMethod org/bouncycastle/crypto/Mac.update:([BII)V
     109: aload_0
     110: getfield      #184                // Field cipher:Lorg/bouncycastle/crypto/modes/SICBlockCipher;
     113: aload_0
     114: getfield      #179                // Field bufBlock:[B
     117: iconst_0
     118: aload_2
     119: iload_3
     120: invokevirtual #205                // Method org/bouncycastle/crypto/modes/SICBlockCipher.processBlock:([BI[BI)I
     123: istore        4
     125: aload_0
     126: iconst_0
     127: putfield      #174                // Field bufOff:I
     130: aload_0
     131: getfield      #177                // Field forEncryption:Z
     134: ifne          165
     137: aload_0
     138: getfield      #179                // Field bufBlock:[B
     141: aload_0
     142: getfield      #173                // Field blockSize:I
     145: aload_0
     146: getfield      #179                // Field bufBlock:[B
     149: iconst_0
     150: aload_0
     151: getfield      #175                // Field macSize:I
     154: invokestatic  #191                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     157: aload_0
     158: aload_0
     159: getfield      #175                // Field macSize:I
     162: putfield      #174                // Field bufOff:I
     165: iload         4
     167: ireturn
     168: iconst_0
     169: ireturn

  private boolean verifyMac(byte[], int);
    Code:
       0: iconst_0
       1: istore_3
       2: iconst_0
       3: istore        4
       5: iload         4
       7: aload_0
       8: getfield      #175                // Field macSize:I
      11: if_icmpge     37
      14: iload_3
      15: aload_0
      16: getfield      #181                // Field macBlock:[B
      19: iload         4
      21: baload
      22: aload_1
      23: iload_2
      24: iload         4
      26: iadd
      27: baload
      28: ixor
      29: ior
      30: istore_3
      31: iinc          4, 1
      34: goto          5
      37: iload_3
      38: ifne          45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: ireturn
}
