public class org.bouncycastle.asn1.ess.SigningCertificateV2 extends org.bouncycastle.asn1.ASN1Object {
  org.bouncycastle.asn1.ASN1Sequence certs;

  org.bouncycastle.asn1.ASN1Sequence policies;

  public static org.bouncycastle.asn1.ess.SigningCertificateV2 getInstance(java.lang.Object);
    Code:
       0: aload_0
       1: ifnull        11
       4: aload_0
       5: instanceof    #33                 // class org/bouncycastle/asn1/ess/SigningCertificateV2
       8: ifeq          16
      11: aload_0
      12: checkcast     #33                 // class org/bouncycastle/asn1/ess/SigningCertificateV2
      15: areturn
      16: aload_0
      17: instanceof    #30                 // class org/bouncycastle/asn1/ASN1Sequence
      20: ifeq          35
      23: new           #33                 // class org/bouncycastle/asn1/ess/SigningCertificateV2
      26: dup
      27: aload_0
      28: checkcast     #30                 // class org/bouncycastle/asn1/ASN1Sequence
      31: invokespecial #86                 // Method "<init>":(Lorg/bouncycastle/asn1/ASN1Sequence;)V
      34: areturn
      35: aconst_null
      36: areturn

  private org.bouncycastle.asn1.ess.SigningCertificateV2(org.bouncycastle.asn1.ASN1Sequence);
    Code:
       0: aload_0
       1: invokespecial #79                 // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_1
       5: invokevirtual #80                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
       8: iconst_1
       9: if_icmplt     20
      12: aload_1
      13: invokevirtual #80                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      16: iconst_2
      17: if_icmple     50
      20: new           #26                 // class java/lang/IllegalArgumentException
      23: dup
      24: new           #27                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #1                  // String Bad sequence size:
      33: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_1
      37: invokevirtual #80                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      40: invokevirtual #75                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #72                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: aload_1
      52: iconst_0
      53: invokevirtual #81                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      56: invokestatic  #82                 // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      59: putfield      #70                 // Field certs:Lorg/bouncycastle/asn1/ASN1Sequence;
      62: aload_1
      63: invokevirtual #80                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      66: iconst_1
      67: if_icmple     82
      70: aload_0
      71: aload_1
      72: iconst_1
      73: invokevirtual #81                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      76: invokestatic  #82                 // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      79: putfield      #71                 // Field policies:Lorg/bouncycastle/asn1/ASN1Sequence;
      82: return

  public org.bouncycastle.asn1.ess.SigningCertificateV2(org.bouncycastle.asn1.ess.ESSCertIDv2);
    Code:
       0: aload_0
       1: invokespecial #79                 // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_0
       5: new           #31                 // class org/bouncycastle/asn1/DERSequence
       8: dup
       9: aload_1
      10: invokespecial #83                 // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      13: putfield      #70                 // Field certs:Lorg/bouncycastle/asn1/ASN1Sequence;
      16: return

  public org.bouncycastle.asn1.ess.SigningCertificateV2(org.bouncycastle.asn1.ess.ESSCertIDv2[]);
    Code:
       0: aload_0
       1: invokespecial #79                 // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: new           #28                 // class org/bouncycastle/asn1/ASN1EncodableVector
       7: dup
       8: invokespecial #77                 // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":()V
      11: astore_2
      12: iconst_0
      13: istore_3
      14: iload_3
      15: aload_1
      16: arraylength
      17: if_icmpge     33
      20: aload_2
      21: aload_1
      22: iload_3
      23: aaload
      24: invokevirtual #78                 // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      27: iinc          3, 1
      30: goto          14
      33: aload_0
      34: new           #31                 // class org/bouncycastle/asn1/DERSequence
      37: dup
      38: aload_2
      39: invokespecial #84                 // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
      42: putfield      #70                 // Field certs:Lorg/bouncycastle/asn1/ASN1Sequence;
      45: return

  public org.bouncycastle.asn1.ess.SigningCertificateV2(org.bouncycastle.asn1.ess.ESSCertIDv2[], org.bouncycastle.asn1.x509.PolicyInformation[]);
    Code:
       0: aload_0
       1: invokespecial #79                 // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: new           #28                 // class org/bouncycastle/asn1/ASN1EncodableVector
       7: dup
       8: invokespecial #77                 // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":()V
      11: astore_3
      12: iconst_0
      13: istore        4
      15: iload         4
      17: aload_1
      18: arraylength
      19: if_icmpge     36
      22: aload_3
      23: aload_1
      24: iload         4
      26: aaload
      27: invokevirtual #78                 // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      30: iinc          4, 1
      33: goto          15
      36: aload_0
      37: new           #31                 // class org/bouncycastle/asn1/DERSequence
      40: dup
      41: aload_3
      42: invokespecial #84                 // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
      45: putfield      #70                 // Field certs:Lorg/bouncycastle/asn1/ASN1Sequence;
      48: aload_2
      49: ifnull        96
      52: new           #28                 // class org/bouncycastle/asn1/ASN1EncodableVector
      55: dup
      56: invokespecial #77                 // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":()V
      59: astore_3
      60: iconst_0
      61: istore        4
      63: iload         4
      65: aload_2
      66: arraylength
      67: if_icmpge     84
      70: aload_3
      71: aload_2
      72: iload         4
      74: aaload
      75: invokevirtual #78                 // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      78: iinc          4, 1
      81: goto          63
      84: aload_0
      85: new           #31                 // class org/bouncycastle/asn1/DERSequence
      88: dup
      89: aload_3
      90: invokespecial #84                 // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
      93: putfield      #71                 // Field policies:Lorg/bouncycastle/asn1/ASN1Sequence;
      96: return

  public org.bouncycastle.asn1.ess.ESSCertIDv2[] getCerts();
    Code:
       0: aload_0
       1: getfield      #70                 // Field certs:Lorg/bouncycastle/asn1/ASN1Sequence;
       4: invokevirtual #80                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
       7: anewarray     #32                 // class org/bouncycastle/asn1/ess/ESSCertIDv2
      10: astore_1
      11: iconst_0
      12: istore_2
      13: iload_2
      14: aload_0
      15: getfield      #70                 // Field certs:Lorg/bouncycastle/asn1/ASN1Sequence;
      18: invokevirtual #80                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      21: if_icmpeq     44
      24: aload_1
      25: iload_2
      26: aload_0
      27: getfield      #70                 // Field certs:Lorg/bouncycastle/asn1/ASN1Sequence;
      30: iload_2
      31: invokevirtual #81                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      34: invokestatic  #85                 // Method org/bouncycastle/asn1/ess/ESSCertIDv2.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ess/ESSCertIDv2;
      37: aastore
      38: iinc          2, 1
      41: goto          13
      44: aload_1
      45: areturn

  public org.bouncycastle.asn1.x509.PolicyInformation[] getPolicies();
    Code:
       0: aload_0
       1: getfield      #71                 // Field policies:Lorg/bouncycastle/asn1/ASN1Sequence;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #71                 // Field policies:Lorg/bouncycastle/asn1/ASN1Sequence;
      13: invokevirtual #80                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      16: anewarray     #34                 // class org/bouncycastle/asn1/x509/PolicyInformation
      19: astore_1
      20: iconst_0
      21: istore_2
      22: iload_2
      23: aload_0
      24: getfield      #71                 // Field policies:Lorg/bouncycastle/asn1/ASN1Sequence;
      27: invokevirtual #80                 // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      30: if_icmpeq     53
      33: aload_1
      34: iload_2
      35: aload_0
      36: getfield      #71                 // Field policies:Lorg/bouncycastle/asn1/ASN1Sequence;
      39: iload_2
      40: invokevirtual #81                 // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      43: invokestatic  #87                 // Method org/bouncycastle/asn1/x509/PolicyInformation.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/x509/PolicyInformation;
      46: aastore
      47: iinc          2, 1
      50: goto          22
      53: aload_1
      54: areturn

  public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive();
    Code:
       0: new           #28                 // class org/bouncycastle/asn1/ASN1EncodableVector
       3: dup
       4: invokespecial #77                 // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #70                 // Field certs:Lorg/bouncycastle/asn1/ASN1Sequence;
      13: invokevirtual #78                 // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      16: aload_0
      17: getfield      #71                 // Field policies:Lorg/bouncycastle/asn1/ASN1Sequence;
      20: ifnull        31
      23: aload_1
      24: aload_0
      25: getfield      #71                 // Field policies:Lorg/bouncycastle/asn1/ASN1Sequence;
      28: invokevirtual #78                 // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      31: new           #31                 // class org/bouncycastle/asn1/DERSequence
      34: dup
      35: aload_1
      36: invokespecial #84                 // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
      39: areturn
}
