public class org.bouncycastle.crypto.digests.SHA3Digest implements org.bouncycastle.crypto.ExtendedDigest {
  private static long[] KeccakRoundConstants;

  private static int[] KeccakRhoOffsets;

  private byte[] state;

  private byte[] dataQueue;

  private int rate;

  private int bitsInQueue;

  private int fixedOutputLength;

  private boolean squeezing;

  private int bitsAvailableForSqueezing;

  private byte[] chunk;

  private byte[] oneByte;

  long[] C;

  long[] tempA;

  long[] chiC;

  private static long[] keccakInitializeRoundConstants();
    Code:
       0: bipush        24
       2: newarray       long
       4: astore_0
       5: iconst_1
       6: newarray       byte
       8: astore_1
       9: aload_1
      10: iconst_0
      11: iconst_1
      12: bastore
      13: iconst_0
      14: istore_2
      15: iload_2
      16: bipush        24
      18: if_icmpge     69
      21: aload_0
      22: iload_2
      23: lconst_0
      24: lastore
      25: iconst_0
      26: istore_3
      27: iload_3
      28: bipush        7
      30: if_icmpge     63
      33: iconst_1
      34: iload_3
      35: ishl
      36: iconst_1
      37: isub
      38: istore        4
      40: aload_1
      41: invokestatic  #199                // Method LFSR86540:([B)Z
      44: ifeq          57
      47: aload_0
      48: iload_2
      49: dup2
      50: laload
      51: lconst_1
      52: iload         4
      54: lshl
      55: lxor
      56: lastore
      57: iinc          3, 1
      60: goto          27
      63: iinc          2, 1
      66: goto          15
      69: aload_0
      70: areturn

  private static boolean LFSR86540(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: baload
       3: iconst_1
       4: iand
       5: ifeq          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: istore_1
      14: aload_0
      15: iconst_0
      16: baload
      17: sipush        128
      20: iand
      21: ifeq          39
      24: aload_0
      25: iconst_0
      26: aload_0
      27: iconst_0
      28: baload
      29: iconst_1
      30: ishl
      31: bipush        113
      33: ixor
      34: i2b
      35: bastore
      36: goto          47
      39: aload_0
      40: iconst_0
      41: dup2
      42: baload
      43: iconst_1
      44: ishl
      45: i2b
      46: bastore
      47: iload_1
      48: ireturn

  private static int[] keccakInitializeRhoOffsets();
    Code:
       0: bipush        25
       2: newarray       int
       4: astore_0
       5: aload_0
       6: iconst_0
       7: iconst_0
       8: iastore
       9: iconst_1
      10: istore_1
      11: iconst_0
      12: istore_2
      13: iconst_0
      14: istore_3
      15: iload_3
      16: bipush        24
      18: if_icmpge     78
      21: aload_0
      22: iload_1
      23: iconst_5
      24: irem
      25: iconst_5
      26: iload_2
      27: iconst_5
      28: irem
      29: imul
      30: iadd
      31: iload_3
      32: iconst_1
      33: iadd
      34: iload_3
      35: iconst_2
      36: iadd
      37: imul
      38: iconst_2
      39: idiv
      40: bipush        64
      42: irem
      43: iastore
      44: iconst_0
      45: iload_1
      46: imul
      47: iconst_1
      48: iload_2
      49: imul
      50: iadd
      51: iconst_5
      52: irem
      53: istore        4
      55: iconst_2
      56: iload_1
      57: imul
      58: iconst_3
      59: iload_2
      60: imul
      61: iadd
      62: iconst_5
      63: irem
      64: istore        5
      66: iload         4
      68: istore_1
      69: iload         5
      71: istore_2
      72: iinc          3, 1
      75: goto          15
      78: aload_0
      79: areturn

  private void clearDataQueueSection(int, int);
    Code:
       0: iload_1
       1: istore_3
       2: iload_3
       3: iload_1
       4: iload_2
       5: iadd
       6: if_icmpeq     22
       9: aload_0
      10: getfield      #173                // Field dataQueue:[B
      13: iload_3
      14: iconst_0
      15: bastore
      16: iinc          3, 1
      19: goto          2
      22: return

  public org.bouncycastle.crypto.digests.SHA3Digest();
    Code:
       0: aload_0
       1: invokespecial #183                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        200
       8: newarray       byte
      10: putfield      #175                // Field state:[B
      13: aload_0
      14: sipush        192
      17: newarray       byte
      19: putfield      #173                // Field dataQueue:[B
      22: aload_0
      23: iconst_5
      24: newarray       long
      26: putfield      #177                // Field C:[J
      29: aload_0
      30: bipush        25
      32: newarray       long
      34: putfield      #180                // Field tempA:[J
      37: aload_0
      38: iconst_5
      39: newarray       long
      41: putfield      #179                // Field chiC:[J
      44: aload_0
      45: iconst_0
      46: invokespecial #195                // Method init:(I)V
      49: return

  public org.bouncycastle.crypto.digests.SHA3Digest(int);
    Code:
       0: aload_0
       1: invokespecial #183                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        200
       8: newarray       byte
      10: putfield      #175                // Field state:[B
      13: aload_0
      14: sipush        192
      17: newarray       byte
      19: putfield      #173                // Field dataQueue:[B
      22: aload_0
      23: iconst_5
      24: newarray       long
      26: putfield      #177                // Field C:[J
      29: aload_0
      30: bipush        25
      32: newarray       long
      34: putfield      #180                // Field tempA:[J
      37: aload_0
      38: iconst_5
      39: newarray       long
      41: putfield      #179                // Field chiC:[J
      44: aload_0
      45: iload_1
      46: invokespecial #195                // Method init:(I)V
      49: return

  public org.bouncycastle.crypto.digests.SHA3Digest(org.bouncycastle.crypto.digests.SHA3Digest);
    Code:
       0: aload_0
       1: invokespecial #183                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        200
       8: newarray       byte
      10: putfield      #175                // Field state:[B
      13: aload_0
      14: sipush        192
      17: newarray       byte
      19: putfield      #173                // Field dataQueue:[B
      22: aload_0
      23: iconst_5
      24: newarray       long
      26: putfield      #177                // Field C:[J
      29: aload_0
      30: bipush        25
      32: newarray       long
      34: putfield      #180                // Field tempA:[J
      37: aload_0
      38: iconst_5
      39: newarray       long
      41: putfield      #179                // Field chiC:[J
      44: aload_1
      45: getfield      #175                // Field state:[B
      48: iconst_0
      49: aload_0
      50: getfield      #175                // Field state:[B
      53: iconst_0
      54: aload_1
      55: getfield      #175                // Field state:[B
      58: arraylength
      59: invokestatic  #188                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      62: aload_1
      63: getfield      #173                // Field dataQueue:[B
      66: iconst_0
      67: aload_0
      68: getfield      #173                // Field dataQueue:[B
      71: iconst_0
      72: aload_1
      73: getfield      #173                // Field dataQueue:[B
      76: arraylength
      77: invokestatic  #188                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      80: aload_0
      81: aload_1
      82: getfield      #170                // Field rate:I
      85: putfield      #170                // Field rate:I
      88: aload_0
      89: aload_1
      90: getfield      #168                // Field bitsInQueue:I
      93: putfield      #168                // Field bitsInQueue:I
      96: aload_0
      97: aload_1
      98: getfield      #169                // Field fixedOutputLength:I
     101: putfield      #169                // Field fixedOutputLength:I
     104: aload_0
     105: aload_1
     106: getfield      #171                // Field squeezing:Z
     109: putfield      #171                // Field squeezing:Z
     112: aload_0
     113: aload_1
     114: getfield      #167                // Field bitsAvailableForSqueezing:I
     117: putfield      #167                // Field bitsAvailableForSqueezing:I
     120: aload_0
     121: aload_1
     122: getfield      #172                // Field chunk:[B
     125: invokestatic  #215                // Method org/bouncycastle/util/Arrays.clone:([B)[B
     128: putfield      #172                // Field chunk:[B
     131: aload_0
     132: aload_1
     133: getfield      #174                // Field oneByte:[B
     136: invokestatic  #215                // Method org/bouncycastle/util/Arrays.clone:([B)[B
     139: putfield      #174                // Field oneByte:[B
     142: return

  public java.lang.String getAlgorithmName();
    Code:
       0: new           #108                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #184                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #1                  // String SHA3-
       9: invokevirtual #187                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #169                // Field fixedOutputLength:I
      16: invokevirtual #186                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: invokevirtual #185                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  public int getDigestSize();
    Code:
       0: aload_0
       1: getfield      #169                // Field fixedOutputLength:I
       4: bipush        8
       6: idiv
       7: ireturn

  public void update(byte);
    Code:
       0: aload_0
       1: getfield      #174                // Field oneByte:[B
       4: iconst_0
       5: iload_1
       6: bastore
       7: aload_0
       8: aload_0
       9: getfield      #174                // Field oneByte:[B
      12: iconst_0
      13: ldc2_w        #101                // long 8l
      16: invokespecial #201                // Method doUpdate:([BIJ)V
      19: return

  public void update(byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: i2l
       5: ldc2_w        #101                // long 8l
       8: lmul
       9: invokespecial #201                // Method doUpdate:([BIJ)V
      12: return

  public int doFinal(byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_0
       4: getfield      #169                // Field fixedOutputLength:I
       7: i2l
       8: invokespecial #202                // Method squeeze:([BIJ)V
      11: aload_0
      12: invokevirtual #192                // Method reset:()V
      15: aload_0
      16: invokevirtual #189                // Method getDigestSize:()I
      19: ireturn

  public void reset();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #169                // Field fixedOutputLength:I
       5: invokespecial #195                // Method init:(I)V
       8: return

  public int getByteLength();
    Code:
       0: aload_0
       1: getfield      #170                // Field rate:I
       4: bipush        8
       6: idiv
       7: ireturn

  private void init(int);
    Code:
       0: iload_1
       1: lookupswitch  { // 6
                     0: 60
                   224: 73
                   256: 86
                   288: 60
                   384: 99
                   512: 112
               default: 125
          }
      60: aload_0
      61: sipush        1024
      64: sipush        576
      67: invokespecial #197                // Method initSponge:(II)V
      70: goto          135
      73: aload_0
      74: sipush        1152
      77: sipush        448
      80: invokespecial #197                // Method initSponge:(II)V
      83: goto          135
      86: aload_0
      87: sipush        1088
      90: sipush        512
      93: invokespecial #197                // Method initSponge:(II)V
      96: goto          135
      99: aload_0
     100: sipush        832
     103: sipush        768
     106: invokespecial #197                // Method initSponge:(II)V
     109: goto          135
     112: aload_0
     113: sipush        576
     116: sipush        1024
     119: invokespecial #197                // Method initSponge:(II)V
     122: goto          135
     125: new           #105                // class java/lang/IllegalArgumentException
     128: dup
     129: ldc           #4                  // String bitLength must be one of 224, 256, 384, or 512.
     131: invokespecial #181                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     134: athrow
     135: return

  private void doUpdate(byte[], int, long);
    Code:
       0: lload_3
       1: ldc2_w        #101                // long 8l
       4: lrem
       5: lconst_0
       6: lcmp
       7: ifne          20
      10: aload_0
      11: aload_1
      12: iload_2
      13: lload_3
      14: invokespecial #200                // Method absorb:([BIJ)V
      17: goto          76
      20: aload_0
      21: aload_1
      22: iload_2
      23: lload_3
      24: lload_3
      25: ldc2_w        #101                // long 8l
      28: lrem
      29: lsub
      30: invokespecial #200                // Method absorb:([BIJ)V
      33: iconst_1
      34: newarray       byte
      36: astore        5
      38: aload         5
      40: iconst_0
      41: aload_1
      42: iload_2
      43: lload_3
      44: ldc2_w        #101                // long 8l
      47: ldiv
      48: l2i
      49: iadd
      50: baload
      51: ldc2_w        #101                // long 8l
      54: lload_3
      55: ldc2_w        #101                // long 8l
      58: lrem
      59: lsub
      60: l2i
      61: ishr
      62: i2b
      63: bastore
      64: aload_0
      65: aload         5
      67: iload_2
      68: lload_3
      69: ldc2_w        #101                // long 8l
      72: lrem
      73: invokespecial #200                // Method absorb:([BIJ)V
      76: return

  private void initSponge(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: iadd
       3: sipush        1600
       6: if_icmpeq     19
       9: new           #106                // class java/lang/IllegalStateException
      12: dup
      13: ldc           #7                  // String rate + capacity != 1600
      15: invokespecial #182                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: iload_1
      20: ifle          37
      23: iload_1
      24: sipush        1600
      27: if_icmpge     37
      30: iload_1
      31: bipush        64
      33: irem
      34: ifeq          47
      37: new           #106                // class java/lang/IllegalStateException
      40: dup
      41: ldc           #5                  // String invalid rate value
      43: invokespecial #182                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: iload_1
      49: putfield      #170                // Field rate:I
      52: aload_0
      53: iconst_0
      54: putfield      #169                // Field fixedOutputLength:I
      57: aload_0
      58: getfield      #175                // Field state:[B
      61: iconst_0
      62: invokestatic  #216                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      65: aload_0
      66: getfield      #173                // Field dataQueue:[B
      69: iconst_0
      70: invokestatic  #216                // Method org/bouncycastle/util/Arrays.fill:([BB)V
      73: aload_0
      74: iconst_0
      75: putfield      #168                // Field bitsInQueue:I
      78: aload_0
      79: iconst_0
      80: putfield      #171                // Field squeezing:Z
      83: aload_0
      84: iconst_0
      85: putfield      #167                // Field bitsAvailableForSqueezing:I
      88: aload_0
      89: iload_2
      90: iconst_2
      91: idiv
      92: putfield      #169                // Field fixedOutputLength:I
      95: aload_0
      96: iload_1
      97: bipush        8
      99: idiv
     100: newarray       byte
     102: putfield      #172                // Field chunk:[B
     105: aload_0
     106: iconst_1
     107: newarray       byte
     109: putfield      #174                // Field oneByte:[B
     112: return

  private void absorbQueue();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #175                // Field state:[B
       5: aload_0
       6: getfield      #173                // Field dataQueue:[B
       9: aload_0
      10: getfield      #170                // Field rate:I
      13: bipush        8
      15: idiv
      16: invokespecial #204                // Method KeccakAbsorb:([B[BI)V
      19: aload_0
      20: iconst_0
      21: putfield      #168                // Field bitsInQueue:I
      24: return

  private void absorb(byte[], int, long);
    Code:
       0: aload_0
       1: getfield      #168                // Field bitsInQueue:I
       4: bipush        8
       6: irem
       7: ifeq          20
      10: new           #106                // class java/lang/IllegalStateException
      13: dup
      14: ldc           #3                  // String attempt to absorb with odd length queue.
      16: invokespecial #182                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #171                // Field squeezing:Z
      24: ifeq          37
      27: new           #106                // class java/lang/IllegalStateException
      30: dup
      31: ldc           #2                  // String attempt to absorb while squeezing.
      33: invokespecial #182                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: lconst_0
      38: lstore        5
      40: lload         5
      42: lload_3
      43: lcmp
      44: ifge          347
      47: aload_0
      48: getfield      #168                // Field bitsInQueue:I
      51: ifne          176
      54: lload_3
      55: aload_0
      56: getfield      #170                // Field rate:I
      59: i2l
      60: lcmp
      61: iflt          176
      64: lload         5
      66: lload_3
      67: aload_0
      68: getfield      #170                // Field rate:I
      71: i2l
      72: lsub
      73: lcmp
      74: ifgt          176
      77: lload_3
      78: lload         5
      80: lsub
      81: aload_0
      82: getfield      #170                // Field rate:I
      85: i2l
      86: ldiv
      87: lstore        9
      89: lconst_0
      90: lstore        7
      92: lload         7
      94: lload         9
      96: lcmp
      97: ifge          160
     100: aload_1
     101: iload_2
     102: i2l
     103: lload         5
     105: ldc2_w        #101                // long 8l
     108: ldiv
     109: ladd
     110: lload         7
     112: aload_0
     113: getfield      #172                // Field chunk:[B
     116: arraylength
     117: i2l
     118: lmul
     119: ladd
     120: l2i
     121: aload_0
     122: getfield      #172                // Field chunk:[B
     125: iconst_0
     126: aload_0
     127: getfield      #172                // Field chunk:[B
     130: arraylength
     131: invokestatic  #188                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     134: aload_0
     135: aload_0
     136: getfield      #175                // Field state:[B
     139: aload_0
     140: getfield      #172                // Field chunk:[B
     143: aload_0
     144: getfield      #172                // Field chunk:[B
     147: arraylength
     148: invokespecial #204                // Method KeccakAbsorb:([B[BI)V
     151: lload         7
     153: lconst_1
     154: ladd
     155: lstore        7
     157: goto          92
     160: lload         5
     162: lload         9
     164: aload_0
     165: getfield      #170                // Field rate:I
     168: i2l
     169: lmul
     170: ladd
     171: lstore        5
     173: goto          40
     176: lload_3
     177: lload         5
     179: lsub
     180: l2i
     181: istore        11
     183: iload         11
     185: aload_0
     186: getfield      #168                // Field bitsInQueue:I
     189: iadd
     190: aload_0
     191: getfield      #170                // Field rate:I
     194: if_icmple     208
     197: aload_0
     198: getfield      #170                // Field rate:I
     201: aload_0
     202: getfield      #168                // Field bitsInQueue:I
     205: isub
     206: istore        11
     208: iload         11
     210: bipush        8
     212: irem
     213: istore        12
     215: iload         11
     217: iload         12
     219: isub
     220: istore        11
     222: aload_1
     223: iload_2
     224: lload         5
     226: ldc2_w        #101                // long 8l
     229: ldiv
     230: l2i
     231: iadd
     232: aload_0
     233: getfield      #173                // Field dataQueue:[B
     236: aload_0
     237: getfield      #168                // Field bitsInQueue:I
     240: bipush        8
     242: idiv
     243: iload         11
     245: bipush        8
     247: idiv
     248: invokestatic  #188                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     251: aload_0
     252: dup
     253: getfield      #168                // Field bitsInQueue:I
     256: iload         11
     258: iadd
     259: putfield      #168                // Field bitsInQueue:I
     262: lload         5
     264: iload         11
     266: i2l
     267: ladd
     268: lstore        5
     270: aload_0
     271: getfield      #168                // Field bitsInQueue:I
     274: aload_0
     275: getfield      #170                // Field rate:I
     278: if_icmpne     285
     281: aload_0
     282: invokespecial #190                // Method absorbQueue:()V
     285: iload         12
     287: ifle          344
     290: iconst_1
     291: iload         12
     293: ishl
     294: iconst_1
     295: isub
     296: istore        13
     298: aload_0
     299: getfield      #173                // Field dataQueue:[B
     302: aload_0
     303: getfield      #168                // Field bitsInQueue:I
     306: bipush        8
     308: idiv
     309: aload_1
     310: iload_2
     311: lload         5
     313: ldc2_w        #101                // long 8l
     316: ldiv
     317: l2i
     318: iadd
     319: baload
     320: iload         13
     322: iand
     323: i2b
     324: bastore
     325: aload_0
     326: dup
     327: getfield      #168                // Field bitsInQueue:I
     330: iload         12
     332: iadd
     333: putfield      #168                // Field bitsInQueue:I
     336: lload         5
     338: iload         12
     340: i2l
     341: ladd
     342: lstore        5
     344: goto          40
     347: return

  private void padAndSwitchToSqueezingPhase();
    Code:
       0: aload_0
       1: getfield      #168                // Field bitsInQueue:I
       4: iconst_1
       5: iadd
       6: aload_0
       7: getfield      #170                // Field rate:I
      10: if_icmpne     57
      13: aload_0
      14: getfield      #173                // Field dataQueue:[B
      17: aload_0
      18: getfield      #168                // Field bitsInQueue:I
      21: bipush        8
      23: idiv
      24: dup2
      25: baload
      26: iconst_1
      27: aload_0
      28: getfield      #168                // Field bitsInQueue:I
      31: bipush        8
      33: irem
      34: ishl
      35: ior
      36: i2b
      37: bastore
      38: aload_0
      39: invokespecial #190                // Method absorbQueue:()V
      42: aload_0
      43: iconst_0
      44: aload_0
      45: getfield      #170                // Field rate:I
      48: bipush        8
      50: idiv
      51: invokespecial #196                // Method clearDataQueueSection:(II)V
      54: goto          114
      57: aload_0
      58: aload_0
      59: getfield      #168                // Field bitsInQueue:I
      62: bipush        7
      64: iadd
      65: bipush        8
      67: idiv
      68: aload_0
      69: getfield      #170                // Field rate:I
      72: bipush        8
      74: idiv
      75: aload_0
      76: getfield      #168                // Field bitsInQueue:I
      79: bipush        7
      81: iadd
      82: bipush        8
      84: idiv
      85: isub
      86: invokespecial #196                // Method clearDataQueueSection:(II)V
      89: aload_0
      90: getfield      #173                // Field dataQueue:[B
      93: aload_0
      94: getfield      #168                // Field bitsInQueue:I
      97: bipush        8
      99: idiv
     100: dup2
     101: baload
     102: iconst_1
     103: aload_0
     104: getfield      #168                // Field bitsInQueue:I
     107: bipush        8
     109: irem
     110: ishl
     111: ior
     112: i2b
     113: bastore
     114: aload_0
     115: getfield      #173                // Field dataQueue:[B
     118: aload_0
     119: getfield      #170                // Field rate:I
     122: iconst_1
     123: isub
     124: bipush        8
     126: idiv
     127: dup2
     128: baload
     129: iconst_1
     130: aload_0
     131: getfield      #170                // Field rate:I
     134: iconst_1
     135: isub
     136: bipush        8
     138: irem
     139: ishl
     140: ior
     141: i2b
     142: bastore
     143: aload_0
     144: invokespecial #190                // Method absorbQueue:()V
     147: aload_0
     148: getfield      #170                // Field rate:I
     151: sipush        1024
     154: if_icmpne     179
     157: aload_0
     158: aload_0
     159: getfield      #175                // Field state:[B
     162: aload_0
     163: getfield      #173                // Field dataQueue:[B
     166: invokespecial #203                // Method KeccakExtract1024bits:([B[B)V
     169: aload_0
     170: sipush        1024
     173: putfield      #167                // Field bitsAvailableForSqueezing:I
     176: goto          206
     179: aload_0
     180: aload_0
     181: getfield      #175                // Field state:[B
     184: aload_0
     185: getfield      #173                // Field dataQueue:[B
     188: aload_0
     189: getfield      #170                // Field rate:I
     192: bipush        64
     194: idiv
     195: invokespecial #205                // Method KeccakExtract:([B[BI)V
     198: aload_0
     199: aload_0
     200: getfield      #170                // Field rate:I
     203: putfield      #167                // Field bitsAvailableForSqueezing:I
     206: aload_0
     207: iconst_1
     208: putfield      #171                // Field squeezing:Z
     211: return

  private void squeeze(byte[], int, long);
    Code:
       0: aload_0
       1: getfield      #171                // Field squeezing:Z
       4: ifne          11
       7: aload_0
       8: invokespecial #191                // Method padAndSwitchToSqueezingPhase:()V
      11: lload_3
      12: ldc2_w        #101                // long 8l
      15: lrem
      16: lconst_0
      17: lcmp
      18: ifeq          31
      21: new           #106                // class java/lang/IllegalStateException
      24: dup
      25: ldc           #6                  // String outputLength not a multiple of 8
      27: invokespecial #182                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: lconst_0
      32: lstore        5
      34: lload         5
      36: lload_3
      37: lcmp
      38: ifge          195
      41: aload_0
      42: getfield      #167                // Field bitsAvailableForSqueezing:I
      45: ifne          115
      48: aload_0
      49: aload_0
      50: getfield      #175                // Field state:[B
      53: invokespecial #198                // Method keccakPermutation:([B)V
      56: aload_0
      57: getfield      #170                // Field rate:I
      60: sipush        1024
      63: if_icmpne     88
      66: aload_0
      67: aload_0
      68: getfield      #175                // Field state:[B
      71: aload_0
      72: getfield      #173                // Field dataQueue:[B
      75: invokespecial #203                // Method KeccakExtract1024bits:([B[B)V
      78: aload_0
      79: sipush        1024
      82: putfield      #167                // Field bitsAvailableForSqueezing:I
      85: goto          115
      88: aload_0
      89: aload_0
      90: getfield      #175                // Field state:[B
      93: aload_0
      94: getfield      #173                // Field dataQueue:[B
      97: aload_0
      98: getfield      #170                // Field rate:I
     101: bipush        64
     103: idiv
     104: invokespecial #205                // Method KeccakExtract:([B[BI)V
     107: aload_0
     108: aload_0
     109: getfield      #170                // Field rate:I
     112: putfield      #167                // Field bitsAvailableForSqueezing:I
     115: aload_0
     116: getfield      #167                // Field bitsAvailableForSqueezing:I
     119: istore        7
     121: iload         7
     123: i2l
     124: lload_3
     125: lload         5
     127: lsub
     128: lcmp
     129: ifle          139
     132: lload_3
     133: lload         5
     135: lsub
     136: l2i
     137: istore        7
     139: aload_0
     140: getfield      #173                // Field dataQueue:[B
     143: aload_0
     144: getfield      #170                // Field rate:I
     147: aload_0
     148: getfield      #167                // Field bitsAvailableForSqueezing:I
     151: isub
     152: bipush        8
     154: idiv
     155: aload_1
     156: iload_2
     157: lload         5
     159: ldc2_w        #101                // long 8l
     162: ldiv
     163: l2i
     164: iadd
     165: iload         7
     167: bipush        8
     169: idiv
     170: invokestatic  #188                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     173: aload_0
     174: dup
     175: getfield      #167                // Field bitsAvailableForSqueezing:I
     178: iload         7
     180: isub
     181: putfield      #167                // Field bitsAvailableForSqueezing:I
     184: lload         5
     186: iload         7
     188: i2l
     189: ladd
     190: lstore        5
     192: goto          34
     195: return

  private void fromBytesToWords(long[], byte[]);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: bipush        25
       5: if_icmpge     64
       8: aload_1
       9: iload_3
      10: lconst_0
      11: lastore
      12: iload_3
      13: bipush        8
      15: imul
      16: istore        4
      18: iconst_0
      19: istore        5
      21: iload         5
      23: bipush        8
      25: if_icmpge     58
      28: aload_1
      29: iload_3
      30: dup2
      31: laload
      32: aload_2
      33: iload         4
      35: iload         5
      37: iadd
      38: baload
      39: i2l
      40: ldc2_w        #103                // long 255l
      43: land
      44: bipush        8
      46: iload         5
      48: imul
      49: lshl
      50: lor
      51: lastore
      52: iinc          5, 1
      55: goto          21
      58: iinc          3, 1
      61: goto          2
      64: return

  private void fromWordsToBytes(byte[], long[]);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: bipush        25
       5: if_icmpge     58
       8: iload_3
       9: bipush        8
      11: imul
      12: istore        4
      14: iconst_0
      15: istore        5
      17: iload         5
      19: bipush        8
      21: if_icmpge     52
      24: aload_1
      25: iload         4
      27: iload         5
      29: iadd
      30: aload_2
      31: iload_3
      32: laload
      33: bipush        8
      35: iload         5
      37: imul
      38: lushr
      39: ldc2_w        #103                // long 255l
      42: land
      43: l2i
      44: i2b
      45: bastore
      46: iinc          5, 1
      49: goto          17
      52: iinc          3, 1
      55: goto          2
      58: return

  private void keccakPermutation(byte[]);
    Code:
       0: aload_1
       1: arraylength
       2: bipush        8
       4: idiv
       5: newarray       long
       7: astore_2
       8: aload_0
       9: aload_2
      10: aload_1
      11: invokespecial #214                // Method fromBytesToWords:([J[B)V
      14: aload_0
      15: aload_2
      16: invokespecial #209                // Method keccakPermutationOnWords:([J)V
      19: aload_0
      20: aload_1
      21: aload_2
      22: invokespecial #207                // Method fromWordsToBytes:([B[J)V
      25: return

  private void keccakPermutationAfterXor(byte[], byte[], int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     27
       9: aload_1
      10: iload         4
      12: dup2
      13: baload
      14: aload_2
      15: iload         4
      17: baload
      18: ixor
      19: i2b
      20: bastore
      21: iinc          4, 1
      24: goto          3
      27: aload_0
      28: aload_1
      29: invokespecial #198                // Method keccakPermutation:([B)V
      32: return

  private void keccakPermutationOnWords(long[]);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: bipush        24
       5: if_icmpge     40
       8: aload_0
       9: aload_1
      10: invokespecial #212                // Method theta:([J)V
      13: aload_0
      14: aload_1
      15: invokespecial #211                // Method rho:([J)V
      18: aload_0
      19: aload_1
      20: invokespecial #210                // Method pi:([J)V
      23: aload_0
      24: aload_1
      25: invokespecial #208                // Method chi:([J)V
      28: aload_0
      29: aload_1
      30: iload_2
      31: invokespecial #213                // Method iota:([JI)V
      34: iinc          2, 1
      37: goto          2
      40: return

  private void theta(long[]);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: iconst_5
       4: if_icmpge     49
       7: aload_0
       8: getfield      #177                // Field C:[J
      11: iload_2
      12: lconst_0
      13: lastore
      14: iconst_0
      15: istore_3
      16: iload_3
      17: iconst_5
      18: if_icmpge     43
      21: aload_0
      22: getfield      #177                // Field C:[J
      25: iload_2
      26: dup2
      27: laload
      28: aload_1
      29: iload_2
      30: iconst_5
      31: iload_3
      32: imul
      33: iadd
      34: laload
      35: lxor
      36: lastore
      37: iinc          3, 1
      40: goto          16
      43: iinc          2, 1
      46: goto          2
      49: iconst_0
      50: istore_2
      51: iload_2
      52: iconst_5
      53: if_icmpge     127
      56: aload_0
      57: getfield      #177                // Field C:[J
      60: iload_2
      61: iconst_1
      62: iadd
      63: iconst_5
      64: irem
      65: laload
      66: iconst_1
      67: lshl
      68: aload_0
      69: getfield      #177                // Field C:[J
      72: iload_2
      73: iconst_1
      74: iadd
      75: iconst_5
      76: irem
      77: laload
      78: bipush        63
      80: lushr
      81: lxor
      82: aload_0
      83: getfield      #177                // Field C:[J
      86: iload_2
      87: iconst_4
      88: iadd
      89: iconst_5
      90: irem
      91: laload
      92: lxor
      93: lstore_3
      94: iconst_0
      95: istore        5
      97: iload         5
      99: iconst_5
     100: if_icmpge     121
     103: aload_1
     104: iload_2
     105: iconst_5
     106: iload         5
     108: imul
     109: iadd
     110: dup2
     111: laload
     112: lload_3
     113: lxor
     114: lastore
     115: iinc          5, 1
     118: goto          97
     121: iinc          2, 1
     124: goto          51
     127: return

  private void rho(long[]);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: iconst_5
       4: if_icmpge     79
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iconst_5
      11: if_icmpge     73
      14: iload_2
      15: iconst_5
      16: iload_3
      17: imul
      18: iadd
      19: istore        4
      21: aload_1
      22: iload         4
      24: getstatic     #176                // Field KeccakRhoOffsets:[I
      27: iload         4
      29: iaload
      30: ifeq          62
      33: aload_1
      34: iload         4
      36: laload
      37: getstatic     #176                // Field KeccakRhoOffsets:[I
      40: iload         4
      42: iaload
      43: lshl
      44: aload_1
      45: iload         4
      47: laload
      48: bipush        64
      50: getstatic     #176                // Field KeccakRhoOffsets:[I
      53: iload         4
      55: iaload
      56: isub
      57: lushr
      58: lxor
      59: goto          66
      62: aload_1
      63: iload         4
      65: laload
      66: lastore
      67: iinc          3, 1
      70: goto          9
      73: iinc          2, 1
      76: goto          2
      79: return

  private void pi(long[]);
    Code:
       0: aload_1
       1: iconst_0
       2: aload_0
       3: getfield      #180                // Field tempA:[J
       6: iconst_0
       7: aload_0
       8: getfield      #180                // Field tempA:[J
      11: arraylength
      12: invokestatic  #188                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      15: iconst_0
      16: istore_2
      17: iload_2
      18: iconst_5
      19: if_icmpge     66
      22: iconst_0
      23: istore_3
      24: iload_3
      25: iconst_5
      26: if_icmpge     60
      29: aload_1
      30: iload_3
      31: iconst_5
      32: iconst_2
      33: iload_2
      34: imul
      35: iconst_3
      36: iload_3
      37: imul
      38: iadd
      39: iconst_5
      40: irem
      41: imul
      42: iadd
      43: aload_0
      44: getfield      #180                // Field tempA:[J
      47: iload_2
      48: iconst_5
      49: iload_3
      50: imul
      51: iadd
      52: laload
      53: lastore
      54: iinc          3, 1
      57: goto          24
      60: iinc          2, 1
      63: goto          17
      66: return

  private void chi(long[]);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: iconst_5
       4: if_icmpge     93
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iconst_5
      11: if_icmpge     61
      14: aload_0
      15: getfield      #179                // Field chiC:[J
      18: iload_3
      19: aload_1
      20: iload_3
      21: iconst_5
      22: iload_2
      23: imul
      24: iadd
      25: laload
      26: aload_1
      27: iload_3
      28: iconst_1
      29: iadd
      30: iconst_5
      31: irem
      32: iconst_5
      33: iload_2
      34: imul
      35: iadd
      36: laload
      37: ldc2_w        #99                 // long -1l
      40: lxor
      41: aload_1
      42: iload_3
      43: iconst_2
      44: iadd
      45: iconst_5
      46: irem
      47: iconst_5
      48: iload_2
      49: imul
      50: iadd
      51: laload
      52: land
      53: lxor
      54: lastore
      55: iinc          3, 1
      58: goto          9
      61: iconst_0
      62: istore_3
      63: iload_3
      64: iconst_5
      65: if_icmpge     87
      68: aload_1
      69: iload_3
      70: iconst_5
      71: iload_2
      72: imul
      73: iadd
      74: aload_0
      75: getfield      #179                // Field chiC:[J
      78: iload_3
      79: laload
      80: lastore
      81: iinc          3, 1
      84: goto          63
      87: iinc          2, 1
      90: goto          2
      93: return

  private void iota(long[], int);
    Code:
       0: aload_1
       1: iconst_0
       2: dup2
       3: laload
       4: getstatic     #178                // Field KeccakRoundConstants:[J
       7: iload_2
       8: laload
       9: lxor
      10: lastore
      11: return

  private void KeccakAbsorb(byte[], byte[], int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #206                // Method keccakPermutationAfterXor:([B[BI)V
       7: return

  private void KeccakExtract1024bits(byte[], byte[]);
    Code:
       0: aload_1
       1: iconst_0
       2: aload_2
       3: iconst_0
       4: sipush        128
       7: invokestatic  #188                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      10: return

  private void KeccakExtract(byte[], byte[], int);
    Code:
       0: aload_1
       1: iconst_0
       2: aload_2
       3: iconst_0
       4: iload_3
       5: bipush        8
       7: imul
       8: invokestatic  #188                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      11: return

  static {};
    Code:
       0: invokestatic  #194                // Method keccakInitializeRoundConstants:()[J
       3: putstatic     #178                // Field KeccakRoundConstants:[J
       6: invokestatic  #193                // Method keccakInitializeRhoOffsets:()[I
       9: putstatic     #176                // Field KeccakRhoOffsets:[I
      12: return
}
