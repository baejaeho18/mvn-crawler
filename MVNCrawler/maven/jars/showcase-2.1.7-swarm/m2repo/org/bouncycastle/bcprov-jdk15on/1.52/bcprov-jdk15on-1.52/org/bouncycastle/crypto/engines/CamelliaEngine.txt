public class org.bouncycastle.crypto.engines.CamelliaEngine implements org.bouncycastle.crypto.BlockCipher {
  private boolean initialised;

  private boolean _keyIs128;

  private static final int BLOCK_SIZE;

  private static final int MASK8;

  private int[] subkey;

  private int[] kw;

  private int[] ke;

  private int[] state;

  private static final int[] SIGMA;

  private static final int[] SBOX1_1110;

  private static final int[] SBOX4_4404;

  private static final int[] SBOX2_0222;

  private static final int[] SBOX3_3033;

  private static int rightRotate(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: iushr
       3: iload_0
       4: bipush        32
       6: iload_1
       7: isub
       8: ishl
       9: iadd
      10: ireturn

  private static int leftRotate(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: ishl
       3: iload_0
       4: bipush        32
       6: iload_1
       7: isub
       8: iushr
       9: iadd
      10: ireturn

  private static void roldq(int, int[], int, int[], int);
    Code:
       0: aload_3
       1: iconst_0
       2: iload         4
       4: iadd
       5: aload_1
       6: iconst_0
       7: iload_2
       8: iadd
       9: iaload
      10: iload_0
      11: ishl
      12: aload_1
      13: iconst_1
      14: iload_2
      15: iadd
      16: iaload
      17: bipush        32
      19: iload_0
      20: isub
      21: iushr
      22: ior
      23: iastore
      24: aload_3
      25: iconst_1
      26: iload         4
      28: iadd
      29: aload_1
      30: iconst_1
      31: iload_2
      32: iadd
      33: iaload
      34: iload_0
      35: ishl
      36: aload_1
      37: iconst_2
      38: iload_2
      39: iadd
      40: iaload
      41: bipush        32
      43: iload_0
      44: isub
      45: iushr
      46: ior
      47: iastore
      48: aload_3
      49: iconst_2
      50: iload         4
      52: iadd
      53: aload_1
      54: iconst_2
      55: iload_2
      56: iadd
      57: iaload
      58: iload_0
      59: ishl
      60: aload_1
      61: iconst_3
      62: iload_2
      63: iadd
      64: iaload
      65: bipush        32
      67: iload_0
      68: isub
      69: iushr
      70: ior
      71: iastore
      72: aload_3
      73: iconst_3
      74: iload         4
      76: iadd
      77: aload_1
      78: iconst_3
      79: iload_2
      80: iadd
      81: iaload
      82: iload_0
      83: ishl
      84: aload_1
      85: iconst_0
      86: iload_2
      87: iadd
      88: iaload
      89: bipush        32
      91: iload_0
      92: isub
      93: iushr
      94: ior
      95: iastore
      96: aload_1
      97: iconst_0
      98: iload_2
      99: iadd
     100: aload_3
     101: iconst_0
     102: iload         4
     104: iadd
     105: iaload
     106: iastore
     107: aload_1
     108: iconst_1
     109: iload_2
     110: iadd
     111: aload_3
     112: iconst_1
     113: iload         4
     115: iadd
     116: iaload
     117: iastore
     118: aload_1
     119: iconst_2
     120: iload_2
     121: iadd
     122: aload_3
     123: iconst_2
     124: iload         4
     126: iadd
     127: iaload
     128: iastore
     129: aload_1
     130: iconst_3
     131: iload_2
     132: iadd
     133: aload_3
     134: iconst_3
     135: iload         4
     137: iadd
     138: iaload
     139: iastore
     140: return

  private static void decroldq(int, int[], int, int[], int);
    Code:
       0: aload_3
       1: iconst_2
       2: iload         4
       4: iadd
       5: aload_1
       6: iconst_0
       7: iload_2
       8: iadd
       9: iaload
      10: iload_0
      11: ishl
      12: aload_1
      13: iconst_1
      14: iload_2
      15: iadd
      16: iaload
      17: bipush        32
      19: iload_0
      20: isub
      21: iushr
      22: ior
      23: iastore
      24: aload_3
      25: iconst_3
      26: iload         4
      28: iadd
      29: aload_1
      30: iconst_1
      31: iload_2
      32: iadd
      33: iaload
      34: iload_0
      35: ishl
      36: aload_1
      37: iconst_2
      38: iload_2
      39: iadd
      40: iaload
      41: bipush        32
      43: iload_0
      44: isub
      45: iushr
      46: ior
      47: iastore
      48: aload_3
      49: iconst_0
      50: iload         4
      52: iadd
      53: aload_1
      54: iconst_2
      55: iload_2
      56: iadd
      57: iaload
      58: iload_0
      59: ishl
      60: aload_1
      61: iconst_3
      62: iload_2
      63: iadd
      64: iaload
      65: bipush        32
      67: iload_0
      68: isub
      69: iushr
      70: ior
      71: iastore
      72: aload_3
      73: iconst_1
      74: iload         4
      76: iadd
      77: aload_1
      78: iconst_3
      79: iload_2
      80: iadd
      81: iaload
      82: iload_0
      83: ishl
      84: aload_1
      85: iconst_0
      86: iload_2
      87: iadd
      88: iaload
      89: bipush        32
      91: iload_0
      92: isub
      93: iushr
      94: ior
      95: iastore
      96: aload_1
      97: iconst_0
      98: iload_2
      99: iadd
     100: aload_3
     101: iconst_2
     102: iload         4
     104: iadd
     105: iaload
     106: iastore
     107: aload_1
     108: iconst_1
     109: iload_2
     110: iadd
     111: aload_3
     112: iconst_3
     113: iload         4
     115: iadd
     116: iaload
     117: iastore
     118: aload_1
     119: iconst_2
     120: iload_2
     121: iadd
     122: aload_3
     123: iconst_0
     124: iload         4
     126: iadd
     127: iaload
     128: iastore
     129: aload_1
     130: iconst_3
     131: iload_2
     132: iadd
     133: aload_3
     134: iconst_1
     135: iload         4
     137: iadd
     138: iaload
     139: iastore
     140: return

  private static void roldqo32(int, int[], int, int[], int);
    Code:
       0: aload_3
       1: iconst_0
       2: iload         4
       4: iadd
       5: aload_1
       6: iconst_1
       7: iload_2
       8: iadd
       9: iaload
      10: iload_0
      11: bipush        32
      13: isub
      14: ishl
      15: aload_1
      16: iconst_2
      17: iload_2
      18: iadd
      19: iaload
      20: bipush        64
      22: iload_0
      23: isub
      24: iushr
      25: ior
      26: iastore
      27: aload_3
      28: iconst_1
      29: iload         4
      31: iadd
      32: aload_1
      33: iconst_2
      34: iload_2
      35: iadd
      36: iaload
      37: iload_0
      38: bipush        32
      40: isub
      41: ishl
      42: aload_1
      43: iconst_3
      44: iload_2
      45: iadd
      46: iaload
      47: bipush        64
      49: iload_0
      50: isub
      51: iushr
      52: ior
      53: iastore
      54: aload_3
      55: iconst_2
      56: iload         4
      58: iadd
      59: aload_1
      60: iconst_3
      61: iload_2
      62: iadd
      63: iaload
      64: iload_0
      65: bipush        32
      67: isub
      68: ishl
      69: aload_1
      70: iconst_0
      71: iload_2
      72: iadd
      73: iaload
      74: bipush        64
      76: iload_0
      77: isub
      78: iushr
      79: ior
      80: iastore
      81: aload_3
      82: iconst_3
      83: iload         4
      85: iadd
      86: aload_1
      87: iconst_0
      88: iload_2
      89: iadd
      90: iaload
      91: iload_0
      92: bipush        32
      94: isub
      95: ishl
      96: aload_1
      97: iconst_1
      98: iload_2
      99: iadd
     100: iaload
     101: bipush        64
     103: iload_0
     104: isub
     105: iushr
     106: ior
     107: iastore
     108: aload_1
     109: iconst_0
     110: iload_2
     111: iadd
     112: aload_3
     113: iconst_0
     114: iload         4
     116: iadd
     117: iaload
     118: iastore
     119: aload_1
     120: iconst_1
     121: iload_2
     122: iadd
     123: aload_3
     124: iconst_1
     125: iload         4
     127: iadd
     128: iaload
     129: iastore
     130: aload_1
     131: iconst_2
     132: iload_2
     133: iadd
     134: aload_3
     135: iconst_2
     136: iload         4
     138: iadd
     139: iaload
     140: iastore
     141: aload_1
     142: iconst_3
     143: iload_2
     144: iadd
     145: aload_3
     146: iconst_3
     147: iload         4
     149: iadd
     150: iaload
     151: iastore
     152: return

  private static void decroldqo32(int, int[], int, int[], int);
    Code:
       0: aload_3
       1: iconst_2
       2: iload         4
       4: iadd
       5: aload_1
       6: iconst_1
       7: iload_2
       8: iadd
       9: iaload
      10: iload_0
      11: bipush        32
      13: isub
      14: ishl
      15: aload_1
      16: iconst_2
      17: iload_2
      18: iadd
      19: iaload
      20: bipush        64
      22: iload_0
      23: isub
      24: iushr
      25: ior
      26: iastore
      27: aload_3
      28: iconst_3
      29: iload         4
      31: iadd
      32: aload_1
      33: iconst_2
      34: iload_2
      35: iadd
      36: iaload
      37: iload_0
      38: bipush        32
      40: isub
      41: ishl
      42: aload_1
      43: iconst_3
      44: iload_2
      45: iadd
      46: iaload
      47: bipush        64
      49: iload_0
      50: isub
      51: iushr
      52: ior
      53: iastore
      54: aload_3
      55: iconst_0
      56: iload         4
      58: iadd
      59: aload_1
      60: iconst_3
      61: iload_2
      62: iadd
      63: iaload
      64: iload_0
      65: bipush        32
      67: isub
      68: ishl
      69: aload_1
      70: iconst_0
      71: iload_2
      72: iadd
      73: iaload
      74: bipush        64
      76: iload_0
      77: isub
      78: iushr
      79: ior
      80: iastore
      81: aload_3
      82: iconst_1
      83: iload         4
      85: iadd
      86: aload_1
      87: iconst_0
      88: iload_2
      89: iadd
      90: iaload
      91: iload_0
      92: bipush        32
      94: isub
      95: ishl
      96: aload_1
      97: iconst_1
      98: iload_2
      99: iadd
     100: iaload
     101: bipush        64
     103: iload_0
     104: isub
     105: iushr
     106: ior
     107: iastore
     108: aload_1
     109: iconst_0
     110: iload_2
     111: iadd
     112: aload_3
     113: iconst_2
     114: iload         4
     116: iadd
     117: iaload
     118: iastore
     119: aload_1
     120: iconst_1
     121: iload_2
     122: iadd
     123: aload_3
     124: iconst_3
     125: iload         4
     127: iadd
     128: iaload
     129: iastore
     130: aload_1
     131: iconst_2
     132: iload_2
     133: iadd
     134: aload_3
     135: iconst_0
     136: iload         4
     138: iadd
     139: iaload
     140: iastore
     141: aload_1
     142: iconst_3
     143: iload_2
     144: iadd
     145: aload_3
     146: iconst_1
     147: iload         4
     149: iadd
     150: iaload
     151: iastore
     152: return

  private int bytes2int(byte[], int);
    Code:
       0: iconst_0
       1: istore_3
       2: iconst_0
       3: istore        4
       5: iload         4
       7: iconst_4
       8: if_icmpge     33
      11: iload_3
      12: bipush        8
      14: ishl
      15: aload_1
      16: iload         4
      18: iload_2
      19: iadd
      20: baload
      21: sipush        255
      24: iand
      25: iadd
      26: istore_3
      27: iinc          4, 1
      30: goto          5
      33: iload_3
      34: ireturn

  private void int2bytes(int, byte[], int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iconst_4
       6: if_icmpge     30
       9: aload_2
      10: iconst_3
      11: iload         4
      13: isub
      14: iload_3
      15: iadd
      16: iload_1
      17: i2b
      18: bastore
      19: iload_1
      20: bipush        8
      22: iushr
      23: istore_1
      24: iinc          4, 1
      27: goto          3
      30: return

  private void camelliaF2(int[], int[], int);
    Code:
       0: aload_1
       1: iconst_0
       2: iaload
       3: aload_2
       4: iconst_0
       5: iload_3
       6: iadd
       7: iaload
       8: ixor
       9: istore        4
      11: getstatic     #1144               // Field SBOX4_4404:[I
      14: iload         4
      16: sipush        255
      19: iand
      20: iaload
      21: istore        6
      23: iload         6
      25: getstatic     #1143               // Field SBOX3_3033:[I
      28: iload         4
      30: bipush        8
      32: iushr
      33: sipush        255
      36: iand
      37: iaload
      38: ixor
      39: istore        6
      41: iload         6
      43: getstatic     #1142               // Field SBOX2_0222:[I
      46: iload         4
      48: bipush        16
      50: iushr
      51: sipush        255
      54: iand
      55: iaload
      56: ixor
      57: istore        6
      59: iload         6
      61: getstatic     #1141               // Field SBOX1_1110:[I
      64: iload         4
      66: bipush        24
      68: iushr
      69: sipush        255
      72: iand
      73: iaload
      74: ixor
      75: istore        6
      77: aload_1
      78: iconst_1
      79: iaload
      80: aload_2
      81: iconst_1
      82: iload_3
      83: iadd
      84: iaload
      85: ixor
      86: istore        5
      88: getstatic     #1141               // Field SBOX1_1110:[I
      91: iload         5
      93: sipush        255
      96: iand
      97: iaload
      98: istore        7
     100: iload         7
     102: getstatic     #1144               // Field SBOX4_4404:[I
     105: iload         5
     107: bipush        8
     109: iushr
     110: sipush        255
     113: iand
     114: iaload
     115: ixor
     116: istore        7
     118: iload         7
     120: getstatic     #1143               // Field SBOX3_3033:[I
     123: iload         5
     125: bipush        16
     127: iushr
     128: sipush        255
     131: iand
     132: iaload
     133: ixor
     134: istore        7
     136: iload         7
     138: getstatic     #1142               // Field SBOX2_0222:[I
     141: iload         5
     143: bipush        24
     145: iushr
     146: sipush        255
     149: iand
     150: iaload
     151: ixor
     152: istore        7
     154: aload_1
     155: iconst_2
     156: dup2
     157: iaload
     158: iload         6
     160: iload         7
     162: ixor
     163: ixor
     164: iastore
     165: aload_1
     166: iconst_3
     167: dup2
     168: iaload
     169: iload         6
     171: iload         7
     173: ixor
     174: iload         6
     176: bipush        8
     178: invokestatic  #1156               // Method rightRotate:(II)I
     181: ixor
     182: ixor
     183: iastore
     184: aload_1
     185: iconst_2
     186: iaload
     187: aload_2
     188: iconst_2
     189: iload_3
     190: iadd
     191: iaload
     192: ixor
     193: istore        4
     195: getstatic     #1144               // Field SBOX4_4404:[I
     198: iload         4
     200: sipush        255
     203: iand
     204: iaload
     205: istore        6
     207: iload         6
     209: getstatic     #1143               // Field SBOX3_3033:[I
     212: iload         4
     214: bipush        8
     216: iushr
     217: sipush        255
     220: iand
     221: iaload
     222: ixor
     223: istore        6
     225: iload         6
     227: getstatic     #1142               // Field SBOX2_0222:[I
     230: iload         4
     232: bipush        16
     234: iushr
     235: sipush        255
     238: iand
     239: iaload
     240: ixor
     241: istore        6
     243: iload         6
     245: getstatic     #1141               // Field SBOX1_1110:[I
     248: iload         4
     250: bipush        24
     252: iushr
     253: sipush        255
     256: iand
     257: iaload
     258: ixor
     259: istore        6
     261: aload_1
     262: iconst_3
     263: iaload
     264: aload_2
     265: iconst_3
     266: iload_3
     267: iadd
     268: iaload
     269: ixor
     270: istore        5
     272: getstatic     #1141               // Field SBOX1_1110:[I
     275: iload         5
     277: sipush        255
     280: iand
     281: iaload
     282: istore        7
     284: iload         7
     286: getstatic     #1144               // Field SBOX4_4404:[I
     289: iload         5
     291: bipush        8
     293: iushr
     294: sipush        255
     297: iand
     298: iaload
     299: ixor
     300: istore        7
     302: iload         7
     304: getstatic     #1143               // Field SBOX3_3033:[I
     307: iload         5
     309: bipush        16
     311: iushr
     312: sipush        255
     315: iand
     316: iaload
     317: ixor
     318: istore        7
     320: iload         7
     322: getstatic     #1142               // Field SBOX2_0222:[I
     325: iload         5
     327: bipush        24
     329: iushr
     330: sipush        255
     333: iand
     334: iaload
     335: ixor
     336: istore        7
     338: aload_1
     339: iconst_0
     340: dup2
     341: iaload
     342: iload         6
     344: iload         7
     346: ixor
     347: ixor
     348: iastore
     349: aload_1
     350: iconst_1
     351: dup2
     352: iaload
     353: iload         6
     355: iload         7
     357: ixor
     358: iload         6
     360: bipush        8
     362: invokestatic  #1156               // Method rightRotate:(II)I
     365: ixor
     366: ixor
     367: iastore
     368: return

  private void camelliaFLs(int[], int[], int);
    Code:
       0: aload_1
       1: iconst_1
       2: dup2
       3: iaload
       4: aload_1
       5: iconst_0
       6: iaload
       7: aload_2
       8: iconst_0
       9: iload_3
      10: iadd
      11: iaload
      12: iand
      13: iconst_1
      14: invokestatic  #1155               // Method leftRotate:(II)I
      17: ixor
      18: iastore
      19: aload_1
      20: iconst_0
      21: dup2
      22: iaload
      23: aload_2
      24: iconst_1
      25: iload_3
      26: iadd
      27: iaload
      28: aload_1
      29: iconst_1
      30: iaload
      31: ior
      32: ixor
      33: iastore
      34: aload_1
      35: iconst_2
      36: dup2
      37: iaload
      38: aload_2
      39: iconst_3
      40: iload_3
      41: iadd
      42: iaload
      43: aload_1
      44: iconst_3
      45: iaload
      46: ior
      47: ixor
      48: iastore
      49: aload_1
      50: iconst_3
      51: dup2
      52: iaload
      53: aload_2
      54: iconst_2
      55: iload_3
      56: iadd
      57: iaload
      58: aload_1
      59: iconst_2
      60: iaload
      61: iand
      62: iconst_1
      63: invokestatic  #1155               // Method leftRotate:(II)I
      66: ixor
      67: iastore
      68: return

  private void setKey(boolean, byte[]);
    Code:
       0: bipush        8
       2: newarray       int
       4: astore_3
       5: iconst_4
       6: newarray       int
       8: astore        4
      10: iconst_4
      11: newarray       int
      13: astore        5
      15: iconst_4
      16: newarray       int
      18: astore        6
      20: aload_2
      21: arraylength
      22: lookupswitch  { // 3
                    16: 56
                    24: 120
                    32: 204
               default: 292
          }
      56: aload_0
      57: iconst_1
      58: putfield      #1139               // Field _keyIs128:Z
      61: aload_3
      62: iconst_0
      63: aload_0
      64: aload_2
      65: iconst_0
      66: invokespecial #1163               // Method bytes2int:([BI)I
      69: iastore
      70: aload_3
      71: iconst_1
      72: aload_0
      73: aload_2
      74: iconst_4
      75: invokespecial #1163               // Method bytes2int:([BI)I
      78: iastore
      79: aload_3
      80: iconst_2
      81: aload_0
      82: aload_2
      83: bipush        8
      85: invokespecial #1163               // Method bytes2int:([BI)I
      88: iastore
      89: aload_3
      90: iconst_3
      91: aload_0
      92: aload_2
      93: bipush        12
      95: invokespecial #1163               // Method bytes2int:([BI)I
      98: iastore
      99: aload_3
     100: iconst_4
     101: aload_3
     102: iconst_5
     103: aload_3
     104: bipush        6
     106: aload_3
     107: bipush        7
     109: iconst_0
     110: dup_x2
     111: iastore
     112: dup_x2
     113: iastore
     114: dup_x2
     115: iastore
     116: iastore
     117: goto          302
     120: aload_3
     121: iconst_0
     122: aload_0
     123: aload_2
     124: iconst_0
     125: invokespecial #1163               // Method bytes2int:([BI)I
     128: iastore
     129: aload_3
     130: iconst_1
     131: aload_0
     132: aload_2
     133: iconst_4
     134: invokespecial #1163               // Method bytes2int:([BI)I
     137: iastore
     138: aload_3
     139: iconst_2
     140: aload_0
     141: aload_2
     142: bipush        8
     144: invokespecial #1163               // Method bytes2int:([BI)I
     147: iastore
     148: aload_3
     149: iconst_3
     150: aload_0
     151: aload_2
     152: bipush        12
     154: invokespecial #1163               // Method bytes2int:([BI)I
     157: iastore
     158: aload_3
     159: iconst_4
     160: aload_0
     161: aload_2
     162: bipush        16
     164: invokespecial #1163               // Method bytes2int:([BI)I
     167: iastore
     168: aload_3
     169: iconst_5
     170: aload_0
     171: aload_2
     172: bipush        20
     174: invokespecial #1163               // Method bytes2int:([BI)I
     177: iastore
     178: aload_3
     179: bipush        6
     181: aload_3
     182: iconst_4
     183: iaload
     184: iconst_m1
     185: ixor
     186: iastore
     187: aload_3
     188: bipush        7
     190: aload_3
     191: iconst_5
     192: iaload
     193: iconst_m1
     194: ixor
     195: iastore
     196: aload_0
     197: iconst_0
     198: putfield      #1139               // Field _keyIs128:Z
     201: goto          302
     204: aload_3
     205: iconst_0
     206: aload_0
     207: aload_2
     208: iconst_0
     209: invokespecial #1163               // Method bytes2int:([BI)I
     212: iastore
     213: aload_3
     214: iconst_1
     215: aload_0
     216: aload_2
     217: iconst_4
     218: invokespecial #1163               // Method bytes2int:([BI)I
     221: iastore
     222: aload_3
     223: iconst_2
     224: aload_0
     225: aload_2
     226: bipush        8
     228: invokespecial #1163               // Method bytes2int:([BI)I
     231: iastore
     232: aload_3
     233: iconst_3
     234: aload_0
     235: aload_2
     236: bipush        12
     238: invokespecial #1163               // Method bytes2int:([BI)I
     241: iastore
     242: aload_3
     243: iconst_4
     244: aload_0
     245: aload_2
     246: bipush        16
     248: invokespecial #1163               // Method bytes2int:([BI)I
     251: iastore
     252: aload_3
     253: iconst_5
     254: aload_0
     255: aload_2
     256: bipush        20
     258: invokespecial #1163               // Method bytes2int:([BI)I
     261: iastore
     262: aload_3
     263: bipush        6
     265: aload_0
     266: aload_2
     267: bipush        24
     269: invokespecial #1163               // Method bytes2int:([BI)I
     272: iastore
     273: aload_3
     274: bipush        7
     276: aload_0
     277: aload_2
     278: bipush        28
     280: invokespecial #1163               // Method bytes2int:([BI)I
     283: iastore
     284: aload_0
     285: iconst_0
     286: putfield      #1139               // Field _keyIs128:Z
     289: goto          302
     292: new           #1101               // class java/lang/IllegalArgumentException
     295: dup
     296: ldc           #218                // String key sizes are only 16/24/32 bytes.
     298: invokespecial #1150               // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     301: athrow
     302: iconst_0
     303: istore        7
     305: iload         7
     307: iconst_4
     308: if_icmpge     333
     311: aload         4
     313: iload         7
     315: aload_3
     316: iload         7
     318: iaload
     319: aload_3
     320: iload         7
     322: iconst_4
     323: iadd
     324: iaload
     325: ixor
     326: iastore
     327: iinc          7, 1
     330: goto          305
     333: aload_0
     334: aload         4
     336: getstatic     #1145               // Field SIGMA:[I
     339: iconst_0
     340: invokespecial #1166               // Method camelliaF2:([I[II)V
     343: iconst_0
     344: istore        7
     346: iload         7
     348: iconst_4
     349: if_icmpge     370
     352: aload         4
     354: iload         7
     356: dup2
     357: iaload
     358: aload_3
     359: iload         7
     361: iaload
     362: ixor
     363: iastore
     364: iinc          7, 1
     367: goto          346
     370: aload_0
     371: aload         4
     373: getstatic     #1145               // Field SIGMA:[I
     376: iconst_4
     377: invokespecial #1166               // Method camelliaF2:([I[II)V
     380: aload_0
     381: getfield      #1139               // Field _keyIs128:Z
     384: ifeq          946
     387: iload_1
     388: ifeq          666
     391: aload_0
     392: getfield      #1147               // Field kw:[I
     395: iconst_0
     396: aload_3
     397: iconst_0
     398: iaload
     399: iastore
     400: aload_0
     401: getfield      #1147               // Field kw:[I
     404: iconst_1
     405: aload_3
     406: iconst_1
     407: iaload
     408: iastore
     409: aload_0
     410: getfield      #1147               // Field kw:[I
     413: iconst_2
     414: aload_3
     415: iconst_2
     416: iaload
     417: iastore
     418: aload_0
     419: getfield      #1147               // Field kw:[I
     422: iconst_3
     423: aload_3
     424: iconst_3
     425: iaload
     426: iastore
     427: bipush        15
     429: aload_3
     430: iconst_0
     431: aload_0
     432: getfield      #1149               // Field subkey:[I
     435: iconst_4
     436: invokestatic  #1160               // Method roldq:(I[II[II)V
     439: bipush        30
     441: aload_3
     442: iconst_0
     443: aload_0
     444: getfield      #1149               // Field subkey:[I
     447: bipush        12
     449: invokestatic  #1160               // Method roldq:(I[II[II)V
     452: bipush        15
     454: aload_3
     455: iconst_0
     456: aload         6
     458: iconst_0
     459: invokestatic  #1160               // Method roldq:(I[II[II)V
     462: aload_0
     463: getfield      #1149               // Field subkey:[I
     466: bipush        18
     468: aload         6
     470: iconst_2
     471: iaload
     472: iastore
     473: aload_0
     474: getfield      #1149               // Field subkey:[I
     477: bipush        19
     479: aload         6
     481: iconst_3
     482: iaload
     483: iastore
     484: bipush        17
     486: aload_3
     487: iconst_0
     488: aload_0
     489: getfield      #1146               // Field ke:[I
     492: iconst_4
     493: invokestatic  #1160               // Method roldq:(I[II[II)V
     496: bipush        17
     498: aload_3
     499: iconst_0
     500: aload_0
     501: getfield      #1149               // Field subkey:[I
     504: bipush        24
     506: invokestatic  #1160               // Method roldq:(I[II[II)V
     509: bipush        17
     511: aload_3
     512: iconst_0
     513: aload_0
     514: getfield      #1149               // Field subkey:[I
     517: bipush        32
     519: invokestatic  #1160               // Method roldq:(I[II[II)V
     522: aload_0
     523: getfield      #1149               // Field subkey:[I
     526: iconst_0
     527: aload         4
     529: iconst_0
     530: iaload
     531: iastore
     532: aload_0
     533: getfield      #1149               // Field subkey:[I
     536: iconst_1
     537: aload         4
     539: iconst_1
     540: iaload
     541: iastore
     542: aload_0
     543: getfield      #1149               // Field subkey:[I
     546: iconst_2
     547: aload         4
     549: iconst_2
     550: iaload
     551: iastore
     552: aload_0
     553: getfield      #1149               // Field subkey:[I
     556: iconst_3
     557: aload         4
     559: iconst_3
     560: iaload
     561: iastore
     562: bipush        15
     564: aload         4
     566: iconst_0
     567: aload_0
     568: getfield      #1149               // Field subkey:[I
     571: bipush        8
     573: invokestatic  #1160               // Method roldq:(I[II[II)V
     576: bipush        15
     578: aload         4
     580: iconst_0
     581: aload_0
     582: getfield      #1146               // Field ke:[I
     585: iconst_0
     586: invokestatic  #1160               // Method roldq:(I[II[II)V
     589: bipush        15
     591: aload         4
     593: iconst_0
     594: aload         6
     596: iconst_0
     597: invokestatic  #1160               // Method roldq:(I[II[II)V
     600: aload_0
     601: getfield      #1149               // Field subkey:[I
     604: bipush        16
     606: aload         6
     608: iconst_0
     609: iaload
     610: iastore
     611: aload_0
     612: getfield      #1149               // Field subkey:[I
     615: bipush        17
     617: aload         6
     619: iconst_1
     620: iaload
     621: iastore
     622: bipush        15
     624: aload         4
     626: iconst_0
     627: aload_0
     628: getfield      #1149               // Field subkey:[I
     631: bipush        20
     633: invokestatic  #1160               // Method roldq:(I[II[II)V
     636: bipush        34
     638: aload         4
     640: iconst_0
     641: aload_0
     642: getfield      #1149               // Field subkey:[I
     645: bipush        28
     647: invokestatic  #1161               // Method roldqo32:(I[II[II)V
     650: bipush        17
     652: aload         4
     654: iconst_0
     655: aload_0
     656: getfield      #1147               // Field kw:[I
     659: iconst_4
     660: invokestatic  #1160               // Method roldq:(I[II[II)V
     663: goto          1606
     666: aload_0
     667: getfield      #1147               // Field kw:[I
     670: iconst_4
     671: aload_3
     672: iconst_0
     673: iaload
     674: iastore
     675: aload_0
     676: getfield      #1147               // Field kw:[I
     679: iconst_5
     680: aload_3
     681: iconst_1
     682: iaload
     683: iastore
     684: aload_0
     685: getfield      #1147               // Field kw:[I
     688: bipush        6
     690: aload_3
     691: iconst_2
     692: iaload
     693: iastore
     694: aload_0
     695: getfield      #1147               // Field kw:[I
     698: bipush        7
     700: aload_3
     701: iconst_3
     702: iaload
     703: iastore
     704: bipush        15
     706: aload_3
     707: iconst_0
     708: aload_0
     709: getfield      #1149               // Field subkey:[I
     712: bipush        28
     714: invokestatic  #1158               // Method decroldq:(I[II[II)V
     717: bipush        30
     719: aload_3
     720: iconst_0
     721: aload_0
     722: getfield      #1149               // Field subkey:[I
     725: bipush        20
     727: invokestatic  #1158               // Method decroldq:(I[II[II)V
     730: bipush        15
     732: aload_3
     733: iconst_0
     734: aload         6
     736: iconst_0
     737: invokestatic  #1158               // Method decroldq:(I[II[II)V
     740: aload_0
     741: getfield      #1149               // Field subkey:[I
     744: bipush        16
     746: aload         6
     748: iconst_0
     749: iaload
     750: iastore
     751: aload_0
     752: getfield      #1149               // Field subkey:[I
     755: bipush        17
     757: aload         6
     759: iconst_1
     760: iaload
     761: iastore
     762: bipush        17
     764: aload_3
     765: iconst_0
     766: aload_0
     767: getfield      #1146               // Field ke:[I
     770: iconst_0
     771: invokestatic  #1158               // Method decroldq:(I[II[II)V
     774: bipush        17
     776: aload_3
     777: iconst_0
     778: aload_0
     779: getfield      #1149               // Field subkey:[I
     782: bipush        8
     784: invokestatic  #1158               // Method decroldq:(I[II[II)V
     787: bipush        17
     789: aload_3
     790: iconst_0
     791: aload_0
     792: getfield      #1149               // Field subkey:[I
     795: iconst_0
     796: invokestatic  #1158               // Method decroldq:(I[II[II)V
     799: aload_0
     800: getfield      #1149               // Field subkey:[I
     803: bipush        34
     805: aload         4
     807: iconst_0
     808: iaload
     809: iastore
     810: aload_0
     811: getfield      #1149               // Field subkey:[I
     814: bipush        35
     816: aload         4
     818: iconst_1
     819: iaload
     820: iastore
     821: aload_0
     822: getfield      #1149               // Field subkey:[I
     825: bipush        32
     827: aload         4
     829: iconst_2
     830: iaload
     831: iastore
     832: aload_0
     833: getfield      #1149               // Field subkey:[I
     836: bipush        33
     838: aload         4
     840: iconst_3
     841: iaload
     842: iastore
     843: bipush        15
     845: aload         4
     847: iconst_0
     848: aload_0
     849: getfield      #1149               // Field subkey:[I
     852: bipush        24
     854: invokestatic  #1158               // Method decroldq:(I[II[II)V
     857: bipush        15
     859: aload         4
     861: iconst_0
     862: aload_0
     863: getfield      #1146               // Field ke:[I
     866: iconst_4
     867: invokestatic  #1158               // Method decroldq:(I[II[II)V
     870: bipush        15
     872: aload         4
     874: iconst_0
     875: aload         6
     877: iconst_0
     878: invokestatic  #1158               // Method decroldq:(I[II[II)V
     881: aload_0
     882: getfield      #1149               // Field subkey:[I
     885: bipush        18
     887: aload         6
     889: iconst_2
     890: iaload
     891: iastore
     892: aload_0
     893: getfield      #1149               // Field subkey:[I
     896: bipush        19
     898: aload         6
     900: iconst_3
     901: iaload
     902: iastore
     903: bipush        15
     905: aload         4
     907: iconst_0
     908: aload_0
     909: getfield      #1149               // Field subkey:[I
     912: bipush        12
     914: invokestatic  #1158               // Method decroldq:(I[II[II)V
     917: bipush        34
     919: aload         4
     921: iconst_0
     922: aload_0
     923: getfield      #1149               // Field subkey:[I
     926: iconst_4
     927: invokestatic  #1159               // Method decroldqo32:(I[II[II)V
     930: bipush        17
     932: aload         4
     934: iconst_0
     935: aload_0
     936: getfield      #1147               // Field kw:[I
     939: iconst_0
     940: invokestatic  #1160               // Method roldq:(I[II[II)V
     943: goto          1606
     946: iconst_0
     947: istore        7
     949: iload         7
     951: iconst_4
     952: if_icmpge     978
     955: aload         5
     957: iload         7
     959: aload         4
     961: iload         7
     963: iaload
     964: aload_3
     965: iload         7
     967: iconst_4
     968: iadd
     969: iaload
     970: ixor
     971: iastore
     972: iinc          7, 1
     975: goto          949
     978: aload_0
     979: aload         5
     981: getstatic     #1145               // Field SIGMA:[I
     984: bipush        8
     986: invokespecial #1166               // Method camelliaF2:([I[II)V
     989: iload_1
     990: ifeq          1300
     993: aload_0
     994: getfield      #1147               // Field kw:[I
     997: iconst_0
     998: aload_3
     999: iconst_0
    1000: iaload
    1001: iastore
    1002: aload_0
    1003: getfield      #1147               // Field kw:[I
    1006: iconst_1
    1007: aload_3
    1008: iconst_1
    1009: iaload
    1010: iastore
    1011: aload_0
    1012: getfield      #1147               // Field kw:[I
    1015: iconst_2
    1016: aload_3
    1017: iconst_2
    1018: iaload
    1019: iastore
    1020: aload_0
    1021: getfield      #1147               // Field kw:[I
    1024: iconst_3
    1025: aload_3
    1026: iconst_3
    1027: iaload
    1028: iastore
    1029: bipush        45
    1031: aload_3
    1032: iconst_0
    1033: aload_0
    1034: getfield      #1149               // Field subkey:[I
    1037: bipush        16
    1039: invokestatic  #1161               // Method roldqo32:(I[II[II)V
    1042: bipush        15
    1044: aload_3
    1045: iconst_0
    1046: aload_0
    1047: getfield      #1146               // Field ke:[I
    1050: iconst_4
    1051: invokestatic  #1160               // Method roldq:(I[II[II)V
    1054: bipush        17
    1056: aload_3
    1057: iconst_0
    1058: aload_0
    1059: getfield      #1149               // Field subkey:[I
    1062: bipush        32
    1064: invokestatic  #1160               // Method roldq:(I[II[II)V
    1067: bipush        34
    1069: aload_3
    1070: iconst_0
    1071: aload_0
    1072: getfield      #1149               // Field subkey:[I
    1075: bipush        44
    1077: invokestatic  #1161               // Method roldqo32:(I[II[II)V
    1080: bipush        15
    1082: aload_3
    1083: iconst_4
    1084: aload_0
    1085: getfield      #1149               // Field subkey:[I
    1088: iconst_4
    1089: invokestatic  #1160               // Method roldq:(I[II[II)V
    1092: bipush        15
    1094: aload_3
    1095: iconst_4
    1096: aload_0
    1097: getfield      #1146               // Field ke:[I
    1100: iconst_0
    1101: invokestatic  #1160               // Method roldq:(I[II[II)V
    1104: bipush        30
    1106: aload_3
    1107: iconst_4
    1108: aload_0
    1109: getfield      #1149               // Field subkey:[I
    1112: bipush        24
    1114: invokestatic  #1160               // Method roldq:(I[II[II)V
    1117: bipush        34
    1119: aload_3
    1120: iconst_4
    1121: aload_0
    1122: getfield      #1149               // Field subkey:[I
    1125: bipush        36
    1127: invokestatic  #1161               // Method roldqo32:(I[II[II)V
    1130: bipush        15
    1132: aload         4
    1134: iconst_0
    1135: aload_0
    1136: getfield      #1149               // Field subkey:[I
    1139: bipush        8
    1141: invokestatic  #1160               // Method roldq:(I[II[II)V
    1144: bipush        30
    1146: aload         4
    1148: iconst_0
    1149: aload_0
    1150: getfield      #1149               // Field subkey:[I
    1153: bipush        20
    1155: invokestatic  #1160               // Method roldq:(I[II[II)V
    1158: aload_0
    1159: getfield      #1146               // Field ke:[I
    1162: bipush        8
    1164: aload         4
    1166: iconst_1
    1167: iaload
    1168: iastore
    1169: aload_0
    1170: getfield      #1146               // Field ke:[I
    1173: bipush        9
    1175: aload         4
    1177: iconst_2
    1178: iaload
    1179: iastore
    1180: aload_0
    1181: getfield      #1146               // Field ke:[I
    1184: bipush        10
    1186: aload         4
    1188: iconst_3
    1189: iaload
    1190: iastore
    1191: aload_0
    1192: getfield      #1146               // Field ke:[I
    1195: bipush        11
    1197: aload         4
    1199: iconst_0
    1200: iaload
    1201: iastore
    1202: bipush        49
    1204: aload         4
    1206: iconst_0
    1207: aload_0
    1208: getfield      #1149               // Field subkey:[I
    1211: bipush        40
    1213: invokestatic  #1161               // Method roldqo32:(I[II[II)V
    1216: aload_0
    1217: getfield      #1149               // Field subkey:[I
    1220: iconst_0
    1221: aload         5
    1223: iconst_0
    1224: iaload
    1225: iastore
    1226: aload_0
    1227: getfield      #1149               // Field subkey:[I
    1230: iconst_1
    1231: aload         5
    1233: iconst_1
    1234: iaload
    1235: iastore
    1236: aload_0
    1237: getfield      #1149               // Field subkey:[I
    1240: iconst_2
    1241: aload         5
    1243: iconst_2
    1244: iaload
    1245: iastore
    1246: aload_0
    1247: getfield      #1149               // Field subkey:[I
    1250: iconst_3
    1251: aload         5
    1253: iconst_3
    1254: iaload
    1255: iastore
    1256: bipush        30
    1258: aload         5
    1260: iconst_0
    1261: aload_0
    1262: getfield      #1149               // Field subkey:[I
    1265: bipush        12
    1267: invokestatic  #1160               // Method roldq:(I[II[II)V
    1270: bipush        30
    1272: aload         5
    1274: iconst_0
    1275: aload_0
    1276: getfield      #1149               // Field subkey:[I
    1279: bipush        28
    1281: invokestatic  #1160               // Method roldq:(I[II[II)V
    1284: bipush        51
    1286: aload         5
    1288: iconst_0
    1289: aload_0
    1290: getfield      #1147               // Field kw:[I
    1293: iconst_4
    1294: invokestatic  #1161               // Method roldqo32:(I[II[II)V
    1297: goto          1606
    1300: aload_0
    1301: getfield      #1147               // Field kw:[I
    1304: iconst_4
    1305: aload_3
    1306: iconst_0
    1307: iaload
    1308: iastore
    1309: aload_0
    1310: getfield      #1147               // Field kw:[I
    1313: iconst_5
    1314: aload_3
    1315: iconst_1
    1316: iaload
    1317: iastore
    1318: aload_0
    1319: getfield      #1147               // Field kw:[I
    1322: bipush        6
    1324: aload_3
    1325: iconst_2
    1326: iaload
    1327: iastore
    1328: aload_0
    1329: getfield      #1147               // Field kw:[I
    1332: bipush        7
    1334: aload_3
    1335: iconst_3
    1336: iaload
    1337: iastore
    1338: bipush        45
    1340: aload_3
    1341: iconst_0
    1342: aload_0
    1343: getfield      #1149               // Field subkey:[I
    1346: bipush        28
    1348: invokestatic  #1159               // Method decroldqo32:(I[II[II)V
    1351: bipush        15
    1353: aload_3
    1354: iconst_0
    1355: aload_0
    1356: getfield      #1146               // Field ke:[I
    1359: iconst_4
    1360: invokestatic  #1158               // Method decroldq:(I[II[II)V
    1363: bipush        17
    1365: aload_3
    1366: iconst_0
    1367: aload_0
    1368: getfield      #1149               // Field subkey:[I
    1371: bipush        12
    1373: invokestatic  #1158               // Method decroldq:(I[II[II)V
    1376: bipush        34
    1378: aload_3
    1379: iconst_0
    1380: aload_0
    1381: getfield      #1149               // Field subkey:[I
    1384: iconst_0
    1385: invokestatic  #1159               // Method decroldqo32:(I[II[II)V
    1388: bipush        15
    1390: aload_3
    1391: iconst_4
    1392: aload_0
    1393: getfield      #1149               // Field subkey:[I
    1396: bipush        40
    1398: invokestatic  #1158               // Method decroldq:(I[II[II)V
    1401: bipush        15
    1403: aload_3
    1404: iconst_4
    1405: aload_0
    1406: getfield      #1146               // Field ke:[I
    1409: bipush        8
    1411: invokestatic  #1158               // Method decroldq:(I[II[II)V
    1414: bipush        30
    1416: aload_3
    1417: iconst_4
    1418: aload_0
    1419: getfield      #1149               // Field subkey:[I
    1422: bipush        20
    1424: invokestatic  #1158               // Method decroldq:(I[II[II)V
    1427: bipush        34
    1429: aload_3
    1430: iconst_4
    1431: aload_0
    1432: getfield      #1149               // Field subkey:[I
    1435: bipush        8
    1437: invokestatic  #1159               // Method decroldqo32:(I[II[II)V
    1440: bipush        15
    1442: aload         4
    1444: iconst_0
    1445: aload_0
    1446: getfield      #1149               // Field subkey:[I
    1449: bipush        36
    1451: invokestatic  #1158               // Method decroldq:(I[II[II)V
    1454: bipush        30
    1456: aload         4
    1458: iconst_0
    1459: aload_0
    1460: getfield      #1149               // Field subkey:[I
    1463: bipush        24
    1465: invokestatic  #1158               // Method decroldq:(I[II[II)V
    1468: aload_0
    1469: getfield      #1146               // Field ke:[I
    1472: iconst_2
    1473: aload         4
    1475: iconst_1
    1476: iaload
    1477: iastore
    1478: aload_0
    1479: getfield      #1146               // Field ke:[I
    1482: iconst_3
    1483: aload         4
    1485: iconst_2
    1486: iaload
    1487: iastore
    1488: aload_0
    1489: getfield      #1146               // Field ke:[I
    1492: iconst_0
    1493: aload         4
    1495: iconst_3
    1496: iaload
    1497: iastore
    1498: aload_0
    1499: getfield      #1146               // Field ke:[I
    1502: iconst_1
    1503: aload         4
    1505: iconst_0
    1506: iaload
    1507: iastore
    1508: bipush        49
    1510: aload         4
    1512: iconst_0
    1513: aload_0
    1514: getfield      #1149               // Field subkey:[I
    1517: iconst_4
    1518: invokestatic  #1159               // Method decroldqo32:(I[II[II)V
    1521: aload_0
    1522: getfield      #1149               // Field subkey:[I
    1525: bipush        46
    1527: aload         5
    1529: iconst_0
    1530: iaload
    1531: iastore
    1532: aload_0
    1533: getfield      #1149               // Field subkey:[I
    1536: bipush        47
    1538: aload         5
    1540: iconst_1
    1541: iaload
    1542: iastore
    1543: aload_0
    1544: getfield      #1149               // Field subkey:[I
    1547: bipush        44
    1549: aload         5
    1551: iconst_2
    1552: iaload
    1553: iastore
    1554: aload_0
    1555: getfield      #1149               // Field subkey:[I
    1558: bipush        45
    1560: aload         5
    1562: iconst_3
    1563: iaload
    1564: iastore
    1565: bipush        30
    1567: aload         5
    1569: iconst_0
    1570: aload_0
    1571: getfield      #1149               // Field subkey:[I
    1574: bipush        32
    1576: invokestatic  #1158               // Method decroldq:(I[II[II)V
    1579: bipush        30
    1581: aload         5
    1583: iconst_0
    1584: aload_0
    1585: getfield      #1149               // Field subkey:[I
    1588: bipush        16
    1590: invokestatic  #1158               // Method decroldq:(I[II[II)V
    1593: bipush        51
    1595: aload         5
    1597: iconst_0
    1598: aload_0
    1599: getfield      #1147               // Field kw:[I
    1602: iconst_0
    1603: invokestatic  #1161               // Method roldqo32:(I[II[II)V
    1606: return

  private int processBlock128(byte[], int, byte[], int);
    Code:
       0: iconst_0
       1: istore        5
       3: iload         5
       5: iconst_4
       6: if_icmpge     50
       9: aload_0
      10: getfield      #1148               // Field state:[I
      13: iload         5
      15: aload_0
      16: aload_1
      17: iload_2
      18: iload         5
      20: iconst_4
      21: imul
      22: iadd
      23: invokespecial #1163               // Method bytes2int:([BI)I
      26: iastore
      27: aload_0
      28: getfield      #1148               // Field state:[I
      31: iload         5
      33: dup2
      34: iaload
      35: aload_0
      36: getfield      #1147               // Field kw:[I
      39: iload         5
      41: iaload
      42: ixor
      43: iastore
      44: iinc          5, 1
      47: goto          3
      50: aload_0
      51: aload_0
      52: getfield      #1148               // Field state:[I
      55: aload_0
      56: getfield      #1149               // Field subkey:[I
      59: iconst_0
      60: invokespecial #1166               // Method camelliaF2:([I[II)V
      63: aload_0
      64: aload_0
      65: getfield      #1148               // Field state:[I
      68: aload_0
      69: getfield      #1149               // Field subkey:[I
      72: iconst_4
      73: invokespecial #1166               // Method camelliaF2:([I[II)V
      76: aload_0
      77: aload_0
      78: getfield      #1148               // Field state:[I
      81: aload_0
      82: getfield      #1149               // Field subkey:[I
      85: bipush        8
      87: invokespecial #1166               // Method camelliaF2:([I[II)V
      90: aload_0
      91: aload_0
      92: getfield      #1148               // Field state:[I
      95: aload_0
      96: getfield      #1146               // Field ke:[I
      99: iconst_0
     100: invokespecial #1167               // Method camelliaFLs:([I[II)V
     103: aload_0
     104: aload_0
     105: getfield      #1148               // Field state:[I
     108: aload_0
     109: getfield      #1149               // Field subkey:[I
     112: bipush        12
     114: invokespecial #1166               // Method camelliaF2:([I[II)V
     117: aload_0
     118: aload_0
     119: getfield      #1148               // Field state:[I
     122: aload_0
     123: getfield      #1149               // Field subkey:[I
     126: bipush        16
     128: invokespecial #1166               // Method camelliaF2:([I[II)V
     131: aload_0
     132: aload_0
     133: getfield      #1148               // Field state:[I
     136: aload_0
     137: getfield      #1149               // Field subkey:[I
     140: bipush        20
     142: invokespecial #1166               // Method camelliaF2:([I[II)V
     145: aload_0
     146: aload_0
     147: getfield      #1148               // Field state:[I
     150: aload_0
     151: getfield      #1146               // Field ke:[I
     154: iconst_4
     155: invokespecial #1167               // Method camelliaFLs:([I[II)V
     158: aload_0
     159: aload_0
     160: getfield      #1148               // Field state:[I
     163: aload_0
     164: getfield      #1149               // Field subkey:[I
     167: bipush        24
     169: invokespecial #1166               // Method camelliaF2:([I[II)V
     172: aload_0
     173: aload_0
     174: getfield      #1148               // Field state:[I
     177: aload_0
     178: getfield      #1149               // Field subkey:[I
     181: bipush        28
     183: invokespecial #1166               // Method camelliaF2:([I[II)V
     186: aload_0
     187: aload_0
     188: getfield      #1148               // Field state:[I
     191: aload_0
     192: getfield      #1149               // Field subkey:[I
     195: bipush        32
     197: invokespecial #1166               // Method camelliaF2:([I[II)V
     200: aload_0
     201: getfield      #1148               // Field state:[I
     204: iconst_2
     205: dup2
     206: iaload
     207: aload_0
     208: getfield      #1147               // Field kw:[I
     211: iconst_4
     212: iaload
     213: ixor
     214: iastore
     215: aload_0
     216: getfield      #1148               // Field state:[I
     219: iconst_3
     220: dup2
     221: iaload
     222: aload_0
     223: getfield      #1147               // Field kw:[I
     226: iconst_5
     227: iaload
     228: ixor
     229: iastore
     230: aload_0
     231: getfield      #1148               // Field state:[I
     234: iconst_0
     235: dup2
     236: iaload
     237: aload_0
     238: getfield      #1147               // Field kw:[I
     241: bipush        6
     243: iaload
     244: ixor
     245: iastore
     246: aload_0
     247: getfield      #1148               // Field state:[I
     250: iconst_1
     251: dup2
     252: iaload
     253: aload_0
     254: getfield      #1147               // Field kw:[I
     257: bipush        7
     259: iaload
     260: ixor
     261: iastore
     262: aload_0
     263: aload_0
     264: getfield      #1148               // Field state:[I
     267: iconst_2
     268: iaload
     269: aload_3
     270: iload         4
     272: invokespecial #1157               // Method int2bytes:(I[BI)V
     275: aload_0
     276: aload_0
     277: getfield      #1148               // Field state:[I
     280: iconst_3
     281: iaload
     282: aload_3
     283: iload         4
     285: iconst_4
     286: iadd
     287: invokespecial #1157               // Method int2bytes:(I[BI)V
     290: aload_0
     291: aload_0
     292: getfield      #1148               // Field state:[I
     295: iconst_0
     296: iaload
     297: aload_3
     298: iload         4
     300: bipush        8
     302: iadd
     303: invokespecial #1157               // Method int2bytes:(I[BI)V
     306: aload_0
     307: aload_0
     308: getfield      #1148               // Field state:[I
     311: iconst_1
     312: iaload
     313: aload_3
     314: iload         4
     316: bipush        12
     318: iadd
     319: invokespecial #1157               // Method int2bytes:(I[BI)V
     322: bipush        16
     324: ireturn

  private int processBlock192or256(byte[], int, byte[], int);
    Code:
       0: iconst_0
       1: istore        5
       3: iload         5
       5: iconst_4
       6: if_icmpge     50
       9: aload_0
      10: getfield      #1148               // Field state:[I
      13: iload         5
      15: aload_0
      16: aload_1
      17: iload_2
      18: iload         5
      20: iconst_4
      21: imul
      22: iadd
      23: invokespecial #1163               // Method bytes2int:([BI)I
      26: iastore
      27: aload_0
      28: getfield      #1148               // Field state:[I
      31: iload         5
      33: dup2
      34: iaload
      35: aload_0
      36: getfield      #1147               // Field kw:[I
      39: iload         5
      41: iaload
      42: ixor
      43: iastore
      44: iinc          5, 1
      47: goto          3
      50: aload_0
      51: aload_0
      52: getfield      #1148               // Field state:[I
      55: aload_0
      56: getfield      #1149               // Field subkey:[I
      59: iconst_0
      60: invokespecial #1166               // Method camelliaF2:([I[II)V
      63: aload_0
      64: aload_0
      65: getfield      #1148               // Field state:[I
      68: aload_0
      69: getfield      #1149               // Field subkey:[I
      72: iconst_4
      73: invokespecial #1166               // Method camelliaF2:([I[II)V
      76: aload_0
      77: aload_0
      78: getfield      #1148               // Field state:[I
      81: aload_0
      82: getfield      #1149               // Field subkey:[I
      85: bipush        8
      87: invokespecial #1166               // Method camelliaF2:([I[II)V
      90: aload_0
      91: aload_0
      92: getfield      #1148               // Field state:[I
      95: aload_0
      96: getfield      #1146               // Field ke:[I
      99: iconst_0
     100: invokespecial #1167               // Method camelliaFLs:([I[II)V
     103: aload_0
     104: aload_0
     105: getfield      #1148               // Field state:[I
     108: aload_0
     109: getfield      #1149               // Field subkey:[I
     112: bipush        12
     114: invokespecial #1166               // Method camelliaF2:([I[II)V
     117: aload_0
     118: aload_0
     119: getfield      #1148               // Field state:[I
     122: aload_0
     123: getfield      #1149               // Field subkey:[I
     126: bipush        16
     128: invokespecial #1166               // Method camelliaF2:([I[II)V
     131: aload_0
     132: aload_0
     133: getfield      #1148               // Field state:[I
     136: aload_0
     137: getfield      #1149               // Field subkey:[I
     140: bipush        20
     142: invokespecial #1166               // Method camelliaF2:([I[II)V
     145: aload_0
     146: aload_0
     147: getfield      #1148               // Field state:[I
     150: aload_0
     151: getfield      #1146               // Field ke:[I
     154: iconst_4
     155: invokespecial #1167               // Method camelliaFLs:([I[II)V
     158: aload_0
     159: aload_0
     160: getfield      #1148               // Field state:[I
     163: aload_0
     164: getfield      #1149               // Field subkey:[I
     167: bipush        24
     169: invokespecial #1166               // Method camelliaF2:([I[II)V
     172: aload_0
     173: aload_0
     174: getfield      #1148               // Field state:[I
     177: aload_0
     178: getfield      #1149               // Field subkey:[I
     181: bipush        28
     183: invokespecial #1166               // Method camelliaF2:([I[II)V
     186: aload_0
     187: aload_0
     188: getfield      #1148               // Field state:[I
     191: aload_0
     192: getfield      #1149               // Field subkey:[I
     195: bipush        32
     197: invokespecial #1166               // Method camelliaF2:([I[II)V
     200: aload_0
     201: aload_0
     202: getfield      #1148               // Field state:[I
     205: aload_0
     206: getfield      #1146               // Field ke:[I
     209: bipush        8
     211: invokespecial #1167               // Method camelliaFLs:([I[II)V
     214: aload_0
     215: aload_0
     216: getfield      #1148               // Field state:[I
     219: aload_0
     220: getfield      #1149               // Field subkey:[I
     223: bipush        36
     225: invokespecial #1166               // Method camelliaF2:([I[II)V
     228: aload_0
     229: aload_0
     230: getfield      #1148               // Field state:[I
     233: aload_0
     234: getfield      #1149               // Field subkey:[I
     237: bipush        40
     239: invokespecial #1166               // Method camelliaF2:([I[II)V
     242: aload_0
     243: aload_0
     244: getfield      #1148               // Field state:[I
     247: aload_0
     248: getfield      #1149               // Field subkey:[I
     251: bipush        44
     253: invokespecial #1166               // Method camelliaF2:([I[II)V
     256: aload_0
     257: getfield      #1148               // Field state:[I
     260: iconst_2
     261: dup2
     262: iaload
     263: aload_0
     264: getfield      #1147               // Field kw:[I
     267: iconst_4
     268: iaload
     269: ixor
     270: iastore
     271: aload_0
     272: getfield      #1148               // Field state:[I
     275: iconst_3
     276: dup2
     277: iaload
     278: aload_0
     279: getfield      #1147               // Field kw:[I
     282: iconst_5
     283: iaload
     284: ixor
     285: iastore
     286: aload_0
     287: getfield      #1148               // Field state:[I
     290: iconst_0
     291: dup2
     292: iaload
     293: aload_0
     294: getfield      #1147               // Field kw:[I
     297: bipush        6
     299: iaload
     300: ixor
     301: iastore
     302: aload_0
     303: getfield      #1148               // Field state:[I
     306: iconst_1
     307: dup2
     308: iaload
     309: aload_0
     310: getfield      #1147               // Field kw:[I
     313: bipush        7
     315: iaload
     316: ixor
     317: iastore
     318: aload_0
     319: aload_0
     320: getfield      #1148               // Field state:[I
     323: iconst_2
     324: iaload
     325: aload_3
     326: iload         4
     328: invokespecial #1157               // Method int2bytes:(I[BI)V
     331: aload_0
     332: aload_0
     333: getfield      #1148               // Field state:[I
     336: iconst_3
     337: iaload
     338: aload_3
     339: iload         4
     341: iconst_4
     342: iadd
     343: invokespecial #1157               // Method int2bytes:(I[BI)V
     346: aload_0
     347: aload_0
     348: getfield      #1148               // Field state:[I
     351: iconst_0
     352: iaload
     353: aload_3
     354: iload         4
     356: bipush        8
     358: iadd
     359: invokespecial #1157               // Method int2bytes:(I[BI)V
     362: aload_0
     363: aload_0
     364: getfield      #1148               // Field state:[I
     367: iconst_1
     368: iaload
     369: aload_3
     370: iload         4
     372: bipush        12
     374: iadd
     375: invokespecial #1157               // Method int2bytes:(I[BI)V
     378: bipush        16
     380: ireturn

  public org.bouncycastle.crypto.engines.CamelliaEngine();
    Code:
       0: aload_0
       1: invokespecial #1152               // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #1140               // Field initialised:Z
       9: aload_0
      10: bipush        96
      12: newarray       int
      14: putfield      #1149               // Field subkey:[I
      17: aload_0
      18: bipush        8
      20: newarray       int
      22: putfield      #1147               // Field kw:[I
      25: aload_0
      26: bipush        12
      28: newarray       int
      30: putfield      #1146               // Field ke:[I
      33: aload_0
      34: iconst_4
      35: newarray       int
      37: putfield      #1148               // Field state:[I
      40: return

  public void init(boolean, org.bouncycastle.crypto.CipherParameters) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_2
       1: instanceof    #1108               // class org/bouncycastle/crypto/params/KeyParameter
       4: ifne          17
       7: new           #1101               // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #219                // String only simple KeyParameter expected.
      13: invokespecial #1150               // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iload_1
      19: aload_2
      20: checkcast     #1108               // class org/bouncycastle/crypto/params/KeyParameter
      23: invokevirtual #1168               // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
      26: invokespecial #1162               // Method setKey:(Z[B)V
      29: aload_0
      30: iconst_1
      31: putfield      #1140               // Field initialised:Z
      34: return

  public java.lang.String getAlgorithmName();
    Code:
       0: ldc           #215                // String Camellia
       2: areturn

  public int getBlockSize();
    Code:
       0: bipush        16
       2: ireturn

  public int processBlock(byte[], int, byte[], int) throws org.bouncycastle.crypto.DataLengthException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #1140               // Field initialised:Z
       4: ifne          17
       7: new           #1102               // class java/lang/IllegalStateException
      10: dup
      11: ldc           #216                // String Camellia engine not initialised
      13: invokespecial #1151               // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iload_2
      18: bipush        16
      20: iadd
      21: aload_1
      22: arraylength
      23: if_icmple     36
      26: new           #1105               // class org/bouncycastle/crypto/DataLengthException
      29: dup
      30: ldc           #217                // String input buffer too short
      32: invokespecial #1153               // Method org/bouncycastle/crypto/DataLengthException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: iload         4
      38: bipush        16
      40: iadd
      41: aload_3
      42: arraylength
      43: if_icmple     56
      46: new           #1106               // class org/bouncycastle/crypto/OutputLengthException
      49: dup
      50: ldc           #220                // String output buffer too short
      52: invokespecial #1154               // Method org/bouncycastle/crypto/OutputLengthException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: getfield      #1139               // Field _keyIs128:Z
      60: ifeq          73
      63: aload_0
      64: aload_1
      65: iload_2
      66: aload_3
      67: iload         4
      69: invokespecial #1164               // Method processBlock128:([BI[BI)I
      72: ireturn
      73: aload_0
      74: aload_1
      75: iload_2
      76: aload_3
      77: iload         4
      79: invokespecial #1165               // Method processBlock192or256:([BI[BI)I
      82: ireturn

  public void reset();
    Code:
       0: return

  static {};
    Code:
       0: bipush        12
       2: newarray       int
       4: dup
       5: iconst_0
       6: ldc           #28                 // int -1600231809
       8: iastore
       9: dup
      10: iconst_1
      11: ldc           #159                // int 1003262091
      13: iastore
      14: dup
      15: iconst_2
      16: ldc           #47                 // int -1233459112
      18: iastore
      19: dup
      20: iconst_3
      21: ldc           #171                // int 1286239154
      23: iastore
      24: dup
      25: iconst_4
      26: ldc           #61                 // int -957401297
      28: iastore
      29: dup
      30: iconst_5
      31: ldc           #91                 // int -380665154
      33: iastore
      34: dup
      35: bipush        6
      37: ldc           #180                // int 1426019237
      39: iastore
      40: dup
      41: bipush        7
      43: ldc           #99                 // int -237801700
      45: iastore
      46: dup
      47: bipush        8
      49: ldc           #122                // int 283453434
      51: iastore
      52: dup
      53: bipush        9
      55: ldc           #81                 // int -563598051
      57: iastore
      58: dup
      59: bipush        10
      61: ldc           #40                 // int -1336506174
      63: iastore
      64: dup
      65: bipush        11
      67: ldc           #45                 // int -1276722691
      69: iastore
      70: putstatic     #1145               // Field SIGMA:[I
      73: sipush        256
      76: newarray       int
      78: dup
      79: iconst_0
      80: ldc           #204                // int 1886416896
      82: iastore
      83: dup
      84: iconst_1
      85: ldc           #2                  // int -2105376256
      87: iastore
      88: dup
      89: iconst_2
      90: ldc           #146                // int 741092352
      92: iastore
      93: dup
      94: iconst_3
      95: ldc           #95                 // int -320017408
      97: iastore
      98: dup
      99: iconst_4
     100: ldc           #44                 // int -1280068864
     102: iastore
     103: dup
     104: iconst_5
     105: ldc           #143                // int 656877312
     107: iastore
     108: dup
     109: bipush        6
     111: ldc           #55                 // int -1061109760
     113: iastore
     114: dup
     115: bipush        7
     117: ldc           #88                 // int -437918464
     119: iastore
     120: dup
     121: bipush        8
     123: ldc           #87                 // int -454761472
     125: iastore
     126: dup
     127: bipush        9
     129: ldc           #5                  // int -2054847232
     131: iastore
     132: dup
     133: bipush        10
     135: ldc           #182                // int 1465341696
     137: iastore
     138: dup
     139: bipush        11
     141: ldc           #154                // int 892679424
     143: iastore
     144: dup
     145: bipush        12
     147: ldc           #93                 // int -353703424
     149: iastore
     150: dup
     151: bipush        13
     153: ldc           #117                // int 202116096
     155: iastore
     156: dup
     157: bipush        14
     159: ldc           #38                 // int -1364283904
     161: iastore
     162: dup
     163: bipush        15
     165: ldc           #163                // int 1094795520
     167: iastore
     168: dup
     169: bipush        16
     171: ldc           #140                // int 589505280
     173: iastore
     174: dup
     175: bipush        17
     177: ldc           #97                 // int -269488384
     179: iastore
     180: dup
     181: bipush        18
     183: ldc           #199                // int 1802201856
     185: iastore
     186: dup
     187: bipush        19
     189: ldc           #17                 // int -1819045120
     191: iastore
     192: dup
     193: bipush        20
     195: ldc           #165                // int 1162167552
     197: iastore
     198: dup
     199: bipush        21
     201: ldc           #130                // int 421075200
     203: iastore
     204: dup
     205: bipush        22
     207: ldc           #32                 // int -1515870976
     209: iastore
     210: dup
     211: bipush        23
     213: ldc           #138                // int 555819264
     215: iastore
     216: dup
     217: bipush        24
     219: ldc           #96                 // int -303174400
     221: iastore
     222: dup
     223: bipush        25
     225: ldc           #119                // int 235802112
     227: iastore
     228: dup
     229: bipush        26
     231: ldc           #174                // int 1330597632
     233: iastore
     234: dup
     235: bipush        27
     237: ldc           #173                // int 1313754624
     239: iastore
     240: dup
     241: bipush        28
     243: ldc           #134                // int 488447232
     245: iastore
     246: dup
     247: bipush        29
     249: ldc           #195                // int 1701143808
     251: iastore
     252: dup
     253: bipush        30
     255: ldc           #16                 // int -1835888128
     257: iastore
     258: dup
     259: bipush        31
     261: ldc           #52                 // int -1111638784
     263: iastore
     264: dup
     265: bipush        32
     267: ldc           #6                  // int -2038004224
     269: iastore
     270: dup
     271: bipush        33
     273: ldc           #50                 // int -1195853824
     275: iastore
     276: dup
     277: bipush        34
     279: ldc           #39                 // int -1347440896
     281: iastore
     282: dup
     283: bipush        35
     285: ldc           #13                 // int -1886417152
     287: iastore
     288: dup
     289: bipush        36
     291: ldc           #211                // int 2088532992
     293: iastore
     294: dup
     295: bipush        37
     297: ldc           #94                 // int -336860416
     299: iastore
     300: dup
     301: bipush        38
     303: ldc           #136                // int 522133248
     305: iastore
     306: dup
     307: bipush        39
     309: ldc           #67                 // int -825307648
     311: iastore
     312: dup
     313: bipush        40
     315: ldc           #161                // int 1044266496
     317: iastore
     318: dup
     319: bipush        41
     321: ldc           #149                // int 808464384
     323: iastore
     324: dup
     325: bipush        42
     327: ldc           #79                 // int -589505536
     329: iastore
     330: dup
     331: bipush        43
     333: ldc           #189                // int 1600085760
     335: iastore
     336: dup
     337: bipush        44
     339: ldc           #188                // int 1583242752
     341: iastore
     342: dup
     343: bipush        45
     345: ldc           #59                 // int -976894720
     347: iastore
     348: dup
     349: bipush        46
     351: ldc           #116                // int 185273088
     353: iastore
     354: dup
     355: bipush        47
     357: ldc           #131                // int 437918208
     359: iastore
     360: dup
     361: bipush        48
     363: ldc           #33                 // int -1499027968
     365: iastore
     366: dup
     367: bipush        49
     369: ldc           #85                 // int -505290496
     371: iastore
     372: dup
     373: bipush        50
     375: ldc           #156                // int 960051456
     377: iastore
     378: dup
     379: bipush        51
     381: ldc           #63                 // int -892679680
     383: iastore
     384: dup
     385: bipush        52
     387: ldc           #72                 // int -707406592
     389: iastore
     390: dup
     391: bipush        53
     393: ldc           #166                // int 1195853568
     395: iastore
     396: dup
     397: bipush        54
     399: ldc           #187                // int 1566399744
     401: iastore
     402: dup
     403: bipush        55
     405: ldc           #160                // int 1027423488
     407: iastore
     408: dup
     409: bipush        56
     411: ldc           #76                 // int -640034560
     413: iastore
     414: dup
     415: bipush        57
     417: ldc           #109                // int 16843008
     419: iastore
     420: dup
     421: bipush        58
     423: ldc           #184                // int 1515870720
     425: iastore
     426: dup
     427: bipush        59
     429: ldc           #73                 // int -690563584
     431: iastore
     432: dup
     433: bipush        60
     435: ldc           #176                // int 1364283648
     437: iastore
     438: dup
     439: bipush        61
     441: ldc           #181                // int 1448498688
     443: iastore
     444: dup
     445: bipush        62
     447: ldc           #200                // int 1819044864
     449: iastore
     450: dup
     451: bipush        63
     453: ldc           #172                // int 1296911616
     455: iastore
     456: dup
     457: bipush        64
     459: ldc           #10                 // int -1953789184
     461: iastore
     462: dup
     463: bipush        65
     465: ldc           #118                // int 218959104
     467: iastore
     468: dup
     469: bipush        66
     471: ldc           #23                 // int -1701144064
     473: iastore
     474: dup
     475: bipush        67
     477: ldc           #196                // int 1717986816
     479: iastore
     480: dup
     481: bipush        68
     483: ldc           #106                // int -67372288
     485: iastore
     486: dup
     487: bipush        69
     489: ldc           #65                 // int -858993664
     491: iastore
     492: dup
     493: bipush        70
     495: ldc           #41                 // int -1330597888
     497: iastore
     498: dup
     499: bipush        71
     501: ldc           #147                // int 757935360
     503: iastore
     504: dup
     505: bipush        72
     507: ldc           #206                // int 1953788928
     509: iastore
     510: dup
     511: bipush        73
     513: ldc           #124                // int 303174144
     515: iastore
     516: dup
     517: bipush        74
     519: ldc           #145                // int 724249344
     521: iastore
     522: dup
     523: bipush        75
     525: ldc           #137                // int 538976256
     527: iastore
     528: dup
     529: bipush        76
     531: ldc           #98                 // int -252645376
     533: iastore
     534: dup
     535: bipush        77
     537: ldc           #42                 // int -1313754880
     539: iastore
     540: dup
     541: bipush        78
     543: ldc           #4                  // int -2071690240
     545: iastore
     546: dup
     547: bipush        79
     549: ldc           #22                 // int -1717987072
     551: iastore
     552: dup
     553: bipush        80
     555: ldc           #83                 // int -538976512
     557: iastore
     558: dup
     559: bipush        81
     561: ldc           #170                // int 1280068608
     563: iastore
     564: dup
     565: bipush        82
     567: ldc           #64                 // int -875836672
     569: iastore
     570: dup
     571: bipush        83
     573: ldc           #56                 // int -1027423744
     575: iastore
     576: dup
     577: bipush        84
     579: ldc           #153                // int 875836416
     581: iastore
     582: dup
     583: bipush        85
     585: ldc           #213                // int 2122219008
     587: iastore
     588: dup
     589: bipush        86
     591: ldc           #208                // int 1987474944
     593: iastore
     594: dup
     595: bipush        87
     597: ldc           #113                // int 84215040
     599: iastore
     600: dup
     601: bipush        88
     603: ldc           #201                // int 1835887872
     605: iastore
     606: dup
     607: bipush        89
     609: ldc           #49                 // int -1212696832
     611: iastore
     612: dup
     613: bipush        90
     615: ldc           #36                 // int -1448498944
     617: iastore
     618: dup
     619: bipush        91
     621: ldc           #150                // int 825307392
     623: iastore
     624: dup
     625: bipush        92
     627: ldc           #70                 // int -774778624
     629: iastore
     630: dup
     631: bipush        93
     633: ldc           #128                // int 387389184
     635: iastore
     636: dup
     637: bipush        94
     639: ldc           #112                // int 67372032
     641: iastore
     642: dup
     643: bipush        95
     645: ldc           #74                 // int -673720576
     647: iastore
     648: dup
     649: bipush        96
     651: ldc           #126                // int 336860160
     653: iastore
     654: dup
     655: bipush        97
     657: ldc           #183                // int 1482184704
     659: iastore
     660: dup
     661: bipush        98
     663: ldc           #157                // int 976894464
     665: iastore
     666: dup
     667: bipush        99
     669: ldc           #191                // int 1633771776
     671: iastore
     672: dup
     673: bipush        100
     675: ldc           #82                 // int -555819520
     677: iastore
     678: dup
     679: bipush        101
     681: ldc           #132                // int 454761216
     683: iastore
     684: dup
     685: bipush        102
     687: ldc           #123                // int 286331136
     689: iastore
     690: dup
     691: bipush        103
     693: ldc           #133                // int 471604224
     695: iastore
     696: dup
     697: bipush        104
     699: ldc           #151                // int 842150400
     701: iastore
     702: dup
     703: bipush        105
     705: ldc           #120                // int 252645120
     707: iastore
     708: dup
     709: bipush        106
     711: ldc           #25                 // int -1667458048
     713: iastore
     714: dup
     715: bipush        107
     717: ldc           #127                // int 370546176
     719: iastore
     720: dup
     721: bipush        108
     723: ldc           #178                // int 1397969664
     725: iastore
     726: dup
     727: bipush        109
     729: ldc           #129                // int 404232192
     731: iastore
     732: dup
     733: bipush        110
     735: ldc           #100                // int -218959360
     737: iastore
     738: dup
     739: bipush        111
     741: ldc           #139                // int 572662272
     743: iastore
     744: dup
     745: bipush        112
     747: ldc           #108                // int -16843264
     749: iastore
     750: dup
     751: bipush        113
     753: ldc           #164                // int 1145324544
     755: iastore
     756: dup
     757: bipush        114
     759: ldc           #68                 // int -808464640
     761: iastore
     762: dup
     763: bipush        115
     765: ldc           #43                 // int -1296911872
     767: iastore
     768: dup
     769: bipush        116
     771: ldc           #57                 // int -1010580736
     773: iastore
     774: dup
     775: bipush        117
     777: ldc           #46                 // int -1246382848
     779: iastore
     780: dup
     781: bipush        118
     783: ldc           #210                // int 2054846976
     785: iastore
     786: dup
     787: bipush        119
     789: ldc           #15                 // int -1852731136
     791: iastore
     792: dup
     793: bipush        120
     795: ldc           #141                // int 606348288
     797: iastore
     798: dup
     799: bipush        121
     801: ldc           #114                // int 134744064
     803: iastore
     804: dup
     805: bipush        122
     807: ldc           #90                 // int -387389440
     809: iastore
     810: dup
     811: bipush        123
     813: ldc           #35                 // int -1465341952
     815: iastore
     816: dup
     817: bipush        124
     819: ldc           #190                // int 1616928768
     821: iastore
     822: dup
     823: bipush        125
     825: ldc           #107                // int -50529280
     827: iastore
     828: dup
     829: bipush        126
     831: ldc           #198                // int 1768515840
     833: iastore
     834: dup
     835: bipush        127
     837: ldc           #175                // int 1347440640
     839: iastore
     840: dup
     841: sipush        128
     844: ldc           #37                 // int -1431655936
     846: iastore
     847: dup
     848: sipush        129
     851: ldc           #69                 // int -791621632
     853: iastore
     854: dup
     855: sipush        130
     858: ldc           #29                 // int -1600086016
     860: iastore
     861: dup
     862: sipush        131
     865: ldc           #212                // int 2105376000
     867: iastore
     868: dup
     869: sipush        132
     872: ldc           #30                 // int -1583243008
     874: iastore
     875: dup
     876: sipush        133
     879: ldc           #8                  // int -1987475200
     881: iastore
     882: dup
     883: sipush        134
     886: ldc           #192                // int 1650614784
     888: iastore
     889: dup
     890: sipush        135
     893: ldc           #21                 // int -1751673088
     895: iastore
     896: dup
     897: sipush        136
     900: ldc           #179                // int 1414812672
     902: iastore
     903: dup
     904: sipush        137
     907: ldc           #185                // int 1532713728
     909: iastore
     910: dup
     911: sipush        138
     914: ldc           #135                // int 505290240
     916: iastore
     917: dup
     918: sipush        139
     921: ldc           #19                 // int -1785359104
     923: iastore
     924: dup
     925: sipush        140
     928: ldc           #84                 // int -522133504
     930: iastore
     931: dup
     932: sipush        141
     935: sipush        -256
     938: iastore
     939: dup
     940: sipush        142
     943: ldc           #194                // int 1684300800
     945: iastore
     946: dup
     947: sipush        143
     950: ldc           #71                 // int -757935616
     952: iastore
     953: dup
     954: sipush        144
     957: ldc           #121                // int 269488128
     959: iastore
     960: dup
     961: sipush        145
     964: ldc           #58                 // int -993737728
     966: iastore
     967: dup
     968: sipush        146
     971: iconst_0
     972: iastore
     973: dup
     974: sipush        147
     977: ldc           #167                // int 1212696576
     979: iastore
     980: dup
     981: sipush        148
     984: ldc           #31                 // int -1549556992
     986: iastore
     987: dup
     988: sipush        149
     991: ldc           #104                // int -134744320
     993: iastore
     994: dup
     995: sipush        150
     998: ldc           #207                // int 1970631936
    1000: iastore
    1001: dup
    1002: sipush        151
    1005: ldc           #78                 // int -606348544
    1007: iastore
    1008: dup
    1009: sipush        152
    1012: ldc           #9                  // int -1970632192
    1014: iastore
    1015: dup
    1016: sipush        153
    1019: ldc           #111                // int 50529024
    1021: iastore
    1022: dup
    1023: sipush        154
    1026: ldc           #89                 // int -421075456
    1028: iastore
    1029: dup
    1030: sipush        155
    1033: ldc           #77                 // int -623191552
    1035: iastore
    1036: dup
    1037: sipush        156
    1040: ldc           #115                // int 151587072
    1042: iastore
    1043: dup
    1044: sipush        157
    1047: ldc           #162                // int 1061109504
    1049: iastore
    1050: dup
    1051: sipush        158
    1054: ldc           #80                 // int -572662528
    1056: iastore
    1057: dup
    1058: sipush        159
    1061: ldc           #18                 // int -1802202112
    1063: iastore
    1064: dup
    1065: sipush        160
    1068: ldc           #7                  // int -2021161216
    1070: iastore
    1071: dup
    1072: sipush        161
    1075: ldc           #186                // int 1549556736
    1077: iastore
    1078: dup
    1079: sipush        162
    1082: ldc           #3                  // int -2088533248
    1084: iastore
    1085: dup
    1086: sipush        163
    1089: ldc           #110                // int 33686016
    1091: iastore
    1092: dup
    1093: sipush        164
    1096: ldc           #66                 // int -842150656
    1098: iastore
    1099: dup
    1100: sipush        165
    1103: ldc           #168                // int 1246382592
    1105: iastore
    1106: dup
    1107: sipush        166
    1110: ldc           #14                 // int -1869574144
    1112: iastore
    1113: dup
    1114: sipush        167
    1117: ldc           #152                // int 858993408
    1119: iastore
    1120: dup
    1121: sipush        168
    1124: ldc           #205                // int 1936945920
    1126: iastore
    1127: dup
    1128: sipush        169
    1131: ldc           #197                // int 1734829824
    1133: iastore
    1134: dup
    1135: sipush        170
    1138: ldc           #103                // int -151587328
    1140: iastore
    1141: dup
    1142: sipush        171
    1145: ldc           #101                // int -202116352
    1147: iastore
    1148: dup
    1149: sipush        172
    1152: ldc           #26                 // int -1650615040
    1154: iastore
    1155: dup
    1156: sipush        173
    1159: ldc           #214                // int 2139062016
    1161: iastore
    1162: dup
    1163: sipush        174
    1166: ldc           #54                 // int -1077952768
    1168: iastore
    1169: dup
    1170: sipush        175
    1173: ldc           #86                 // int -488447488
    1175: iastore
    1176: dup
    1177: sipush        176
    1180: ldc           #177                // int 1381126656
    1182: iastore
    1183: dup
    1184: sipush        177
    1187: ldc           #24                 // int -1684301056
    1189: iastore
    1190: dup
    1191: sipush        178
    1194: ldc           #75                 // int -656877568
    1196: iastore
    1197: dup
    1198: sipush        179
    1201: ldc           #142                // int 640034304
    1203: iastore
    1204: dup
    1205: sipush        180
    1208: ldc           #62                 // int -926365696
    1210: iastore
    1211: dup
    1212: sipush        181
    1215: ldc           #155                // int 926365440
    1217: iastore
    1218: dup
    1219: sipush        182
    1222: ldc           #60                 // int -960051712
    1224: iastore
    1225: dup
    1226: sipush        183
    1229: ldc           #158                // int 993737472
    1231: iastore
    1232: dup
    1233: sipush        184
    1236: ldc           #1                  // int -2122219264
    1238: iastore
    1239: dup
    1240: sipush        185
    1243: ldc           #20                 // int -1768516096
    1245: iastore
    1246: dup
    1247: sipush        186
    1250: ldc           #203                // int 1869573888
    1252: iastore
    1253: dup
    1254: sipush        187
    1257: ldc           #169                // int 1263225600
    1259: iastore
    1260: dup
    1261: sipush        188
    1264: ldc           #125                // int 320017152
    1266: iastore
    1267: dup
    1268: sipush        189
    1271: ldc           #53                 // int -1094795776
    1273: iastore
    1274: dup
    1275: sipush        190
    1278: ldc           #193                // int 1667457792
    1280: iastore
    1281: dup
    1282: sipush        191
    1285: ldc           #148                // int 774778368
    1287: iastore
    1288: dup
    1289: sipush        192
    1292: ldc           #92                 // int -370546432
    1294: iastore
    1295: dup
    1296: sipush        193
    1299: ldc           #209                // int 2038003968
    1301: iastore
    1302: dup
    1303: sipush        194
    1306: ldc           #34                 // int -1482184960
    1308: iastore
    1309: dup
    1310: sipush        195
    1313: ldc           #11                 // int -1936946176
    1315: iastore
    1316: dup
    1317: sipush        196
    1320: ldc           #27                 // int -1616929024
    1322: iastore
    1323: dup
    1324: sipush        197
    1327: ldc           #202                // int 1852730880
    1329: iastore
    1330: dup
    1331: sipush        198
    1334: ldc           #51                 // int -1128481792
    1336: iastore
    1337: dup
    1338: sipush        199
    1341: ldc           #12                 // int -1903260160
    1343: iastore
    1344: dup
    1345: sipush        200
    1348: ldc           #144                // int 690563328
    1350: iastore
    1351: dup
    1352: sipush        201
    1355: ldc           #102                // int -168430336
    1357: iastore
    1358: dup
    1359: sipush        202
    1362: ldc           #105                // int -101058304
    1364: iastore
    1365: dup
    1366: sipush        203
    1369: ldc           #48                 // int -1229539840
    1371: iastore
    1372: dup
    1373: sipush        204
    1376: ldc_w         #923                // int 791621376
    1379: iastore
    1380: dup
    1381: sipush        205
    1384: ldc_w         #560                // int -33686272
    1387: iastore
    1388: dup
    1389: sipush        206
    1392: ldc_w         #398                // int -1263225856
    1395: iastore
    1396: dup
    1397: sipush        207
    1400: ldc_w         #1017               // int 1499027712
    1403: iastore
    1404: dup
    1405: sipush        208
    1408: ldc_w         #1085               // int 2021160960
    1411: iastore
    1412: dup
    1413: sipush        209
    1416: ldc_w         #335                // int -1734830080
    1419: iastore
    1420: dup
    1421: sipush        210
    1424: ldc_w         #834                // int 101058048
    1427: iastore
    1428: dup
    1429: sipush        211
    1432: ldc_w         #1053               // int 1785358848
    1435: iastore
    1436: dup
    1437: sipush        212
    1440: ldc_w         #510                // int -404232448
    1443: iastore
    1444: dup
    1445: sipush        213
    1448: ldc_w         #976                // int 1179010560
    1451: iastore
    1452: dup
    1453: sipush        214
    1456: ldc_w         #1068               // int 1903259904
    1459: iastore
    1460: dup
    1461: sipush        215
    1464: ldc_w         #412                // int -1162167808
    1467: iastore
    1468: dup
    1469: sipush        216
    1472: ldc_w         #470                // int -724249600
    1475: iastore
    1476: dup
    1477: sipush        217
    1480: ldc_w         #900                // int 623191296
    1483: iastore
    1484: dup
    1485: sipush        218
    1488: ldc_w         #377                // int -1414812928
    1491: iastore
    1492: dup
    1493: sipush        219
    1496: ldc_w         #966                // int 1111638528
    1499: iastore
    1500: dup
    1501: sipush        220
    1504: ldc_w         #301                // int -2004318208
    1507: iastore
    1508: dup
    1509: sipush        221
    1512: ldc_w         #357                // int -1566400000
    1515: iastore
    1516: dup
    1517: sipush        222
    1520: ldc_w         #312                // int -1920103168
    1523: iastore
    1524: dup
    1525: sipush        223
    1528: ldc_w         #553                // int -84215296
    1531: iastore
    1532: dup
    1533: sipush        224
    1536: ldc_w         #1071               // int 1920102912
    1539: iastore
    1540: dup
    1541: sipush        225
    1544: ldc_w         #837                // int 117901056
    1547: iastore
    1548: dup
    1549: sipush        226
    1552: ldc_w         #409                // int -1179010816
    1555: iastore
    1556: dup
    1557: sipush        227
    1560: ldc_w         #1008               // int 1431655680
    1563: iastore
    1564: dup
    1565: sipush        228
    1568: ldc_w         #548                // int -117901312
    1571: iastore
    1572: dup
    1573: sipush        229
    1576: ldc_w         #525                // int -286331392
    1579: iastore
    1580: dup
    1581: sipush        230
    1584: ldc_w         #380                // int -1397969920
    1587: iastore
    1588: dup
    1589: sipush        231
    1592: ldc_w         #844                // int 168430080
    1595: iastore
    1596: dup
    1597: sipush        232
    1600: ldc_w         #938                // int 909522432
    1603: iastore
    1604: dup
    1605: sipush        233
    1608: ldc_w         #983                // int 1229539584
    1611: iastore
    1612: dup
    1613: sipush        234
    1616: ldc_w         #912                // int 707406336
    1619: iastore
    1620: dup
    1621: sipush        235
    1624: ldc_w         #1048               // int 1751672832
    1627: iastore
    1628: dup
    1629: sipush        236
    1632: ldc_w         #952                // int 1010580480
    1635: iastore
    1636: dup
    1637: sipush        237
    1640: ldc_w         #943                // int 943208448
    1643: iastore
    1644: dup
    1645: sipush        238
    1648: ldc_w         #532                // int -235802368
    1651: iastore
    1652: dup
    1653: sipush        239
    1656: ldc_w         #362                // int -1532713984
    1659: iastore
    1660: dup
    1661: sipush        240
    1664: ldc_w         #961                // int 1077952512
    1667: iastore
    1668: dup
    1669: sipush        241
    1672: ldc_w         #907                // int 673720320
    1675: iastore
    1676: dup
    1677: sipush        242
    1680: ldc_w         #467                // int -741092608
    1683: iastore
    1684: dup
    1685: sipush        243
    1688: ldc_w         #1092               // int 2071689984
    1691: iastore
    1692: dup
    1693: sipush        244
    1696: ldc_w         #415                // int -1145324800
    1699: iastore
    1700: dup
    1701: sipush        245
    1704: ldc_w         #446                // int -909522688
    1707: iastore
    1708: dup
    1709: sipush        246
    1712: ldc_w         #969                // int 1128481536
    1715: iastore
    1716: dup
    1717: sipush        247
    1720: ldc_w         #428                // int -1044266752
    1723: iastore
    1724: dup
    1725: sipush        248
    1728: ldc_w         #867                // int 353703168
    1731: iastore
    1732: dup
    1733: sipush        249
    1736: ldc_w         #501                // int -471604480
    1739: iastore
    1740: dup
    1741: sipush        250
    1744: ldc_w         #383                // int -1381126912
    1747: iastore
    1748: dup
    1749: sipush        251
    1752: ldc_w         #539                // int -185273344
    1755: iastore
    1756: dup
    1757: sipush        252
    1760: ldc_w         #1082               // int 2004317952
    1763: iastore
    1764: dup
    1765: sipush        253
    1768: ldc_w         #441                // int -943208704
    1771: iastore
    1772: dup
    1773: sipush        254
    1776: ldc_w         #284                // int -2139062272
    1779: iastore
    1780: dup
    1781: sipush        255
    1784: ldc_w         #348                // int -1633772032
    1787: iastore
    1788: putstatic     #1141               // Field SBOX1_1110:[I
    1791: sipush        256
    1794: newarray       int
    1796: dup
    1797: iconst_0
    1798: ldc_w         #1065               // int 1886388336
    1801: iastore
    1802: dup
    1803: iconst_1
    1804: ldc_w         #916                // int 741081132
    1807: iastore
    1808: dup
    1809: iconst_2
    1810: ldc_w         #395                // int -1280114509
    1813: iastore
    1814: dup
    1815: iconst_3
    1816: ldc_w         #425                // int -1061158720
    1819: iastore
    1820: dup
    1821: iconst_4
    1822: ldc_w         #503                // int -454819612
    1825: iastore
    1826: dup
    1827: iconst_5
    1828: ldc_w         #1012               // int 1465319511
    1831: iastore
    1832: dup
    1833: bipush        6
    1835: ldc_w         #516                // int -353763094
    1838: iastore
    1839: dup
    1840: bipush        7
    1842: ldc_w         #385                // int -1364328274
    1845: iastore
    1846: dup
    1847: bipush        8
    1849: ldc_w         #895                // int 589496355
    1852: iastore
    1853: dup
    1854: bipush        9
    1856: ldc_w         #1055               // int 1802174571
    1859: iastore
    1860: dup
    1861: bipush        10
    1863: ldc_w         #973                // int 1162149957
    1866: iastore
    1867: dup
    1868: bipush        11
    1870: ldc_w         #364                // int -1515913051
    1873: iastore
    1874: dup
    1875: bipush        12
    1877: ldc_w         #522                // int -303234835
    1880: iastore
    1881: dup
    1882: bipush        13
    1884: ldc_w         #995                // int 1330577487
    1887: iastore
    1888: dup
    1889: bipush        14
    1891: ldc_w         #883                // int 488439837
    1894: iastore
    1895: dup
    1896: bipush        15
    1898: ldc_w         #322                // int -1835925358
    1901: iastore
    1902: dup
    1903: bipush        16
    1905: ldc_w         #296                // int -2038038394
    1908: iastore
    1909: dup
    1910: bipush        17
    1912: ldc_w         #387                // int -1347485521
    1915: iastore
    1916: dup
    1917: bipush        18
    1919: ldc_w         #1094               // int 2088501372
    1922: iastore
    1923: dup
    1924: bipush        19
    1926: ldc_w         #887                // int 522125343
    1929: iastore
    1930: dup
    1931: bipush        20
    1933: ldc_w         #956                // int 1044250686
    1936: iastore
    1937: dup
    1938: bipush        21
    1940: ldc_w         #486                // int -589561636
    1943: iastore
    1944: dup
    1945: bipush        22
    1947: ldc_w         #1027               // int 1583218782
    1950: iastore
    1951: dup
    1952: bipush        23
    1954: ldc_w         #846                // int 185270283
    1957: iastore
    1958: dup
    1959: bipush        24
    1961: ldc_w         #366                // int -1499070298
    1964: iastore
    1965: dup
    1966: bipush        25
    1968: ldc_w         #945                // int 960036921
    1971: iastore
    1972: dup
    1973: bipush        26
    1975: ldc_w         #472                // int -707460907
    1978: iastore
    1979: dup
    1980: bipush        27
    1982: ldc_w         #1025               // int 1566376029
    1985: iastore
    1986: dup
    1987: bipush        28
    1989: ldc_w         #480                // int -640089895
    1992: iastore
    1993: dup
    1994: bipush        29
    1996: ldc_w         #1019               // int 1515847770
    1999: iastore
    2000: dup
    2001: bipush        30
    2003: ldc_w         #999                // int 1364262993
    2006: iastore
    2007: dup
    2008: bipush        31
    2010: ldc_w         #1057               // int 1819017324
    2013: iastore
    2014: dup
    2015: bipush        32
    2017: ldc_w         #307                // int -1953824629
    2020: iastore
    2021: dup
    2022: bipush        33
    2024: ldc_w         #339                // int -1701183334
    2027: iastore
    2028: dup
    2029: bipush        34
    2031: ldc_w         #555                // int -67436293
    2034: iastore
    2035: dup
    2036: bipush        35
    2038: ldc_w         #389                // int -1330642768
    2041: iastore
    2042: dup
    2043: bipush        36
    2045: ldc_w         #1075               // int 1953759348
    2048: iastore
    2049: dup
    2050: bipush        37
    2052: ldc_w         #914                // int 724238379
    2055: iastore
    2056: dup
    2057: bipush        38
    2059: ldc_w         #529                // int -252706576
    2062: iastore
    2063: dup
    2064: bipush        39
    2066: ldc_w         #292                // int -2071723900
    2069: iastore
    2070: dup
    2071: bipush        40
    2073: ldc_w         #492                // int -539033377
    2076: iastore
    2077: dup
    2078: bipush        41
    2080: ldc_w         #450                // int -875888437
    2083: iastore
    2084: dup
    2085: bipush        42
    2087: ldc_w         #933                // int 875823156
    2090: iastore
    2091: dup
    2092: bipush        43
    2094: ldc_w         #1079               // int 1987444854
    2097: iastore
    2098: dup
    2099: bipush        44
    2101: ldc_w         #1059               // int 1835860077
    2104: iastore
    2105: dup
    2106: bipush        45
    2108: ldc_w         #372                // int -1448542039
    2111: iastore
    2112: dup
    2113: bipush        46
    2115: ldc_w         #462                // int -774831919
    2118: iastore
    2119: dup
    2120: bipush        47
    2122: ldc_w         #829                // int 67371012
    2125: iastore
    2126: dup
    2127: bipush        48
    2129: ldc_w         #864                // int 336855060
    2132: iastore
    2133: dup
    2134: bipush        49
    2136: ldc_w         #947                // int 976879674
    2139: iastore
    2140: dup
    2141: bipush        50
    2143: ldc_w         #490                // int -555876130
    2146: iastore
    2147: dup
    2148: bipush        51
    2150: ldc_w         #858                // int 286326801
    2153: iastore
    2154: dup
    2155: bipush        52
    2157: ldc_w         #929                // int 842137650
    2160: iastore
    2161: dup
    2162: bipush        53
    2164: ldc_w         #343                // int -1667497828
    2167: iastore
    2168: dup
    2169: bipush        54
    2171: ldc_w         #1003               // int 1397948499
    2174: iastore
    2175: dup
    2176: bipush        55
    2178: ldc_w         #534                // int -219021070
    2181: iastore
    2182: dup
    2183: bipush        56
    2185: ldc_w         #562                // int -16908034
    2188: iastore
    2189: dup
    2190: bipush        57
    2192: ldc_w         #458                // int -808517425
    2195: iastore
    2196: dup
    2197: bipush        58
    2199: ldc_w         #432                // int -1010630461
    2202: iastore
    2203: dup
    2204: bipush        59
    2206: ldc_w         #1089               // int 2054815866
    2209: iastore
    2210: dup
    2211: bipush        60
    2213: ldc_w         #897                // int 606339108
    2216: iastore
    2217: dup
    2218: bipush        61
    2220: ldc_w         #512                // int -387448600
    2223: iastore
    2224: dup
    2225: bipush        62
    2227: ldc_w         #1031               // int 1616904288
    2230: iastore
    2231: dup
    2232: bipush        63
    2234: ldc_w         #1050               // int 1768489065
    2237: iastore
    2238: dup
    2239: bipush        64
    2241: ldc_w         #374                // int -1431699286
    2244: iastore
    2245: dup
    2246: bipush        65
    2248: ldc_w         #352                // int -1600126816
    2251: iastore
    2252: dup
    2253: bipush        66
    2255: ldc_w         #354                // int -1583284063
    2258: iastore
    2259: dup
    2260: bipush        67
    2262: ldc_w         #1035               // int 1650589794
    2265: iastore
    2266: dup
    2267: bipush        68
    2269: ldc_w         #1005               // int 1414791252
    2272: iastore
    2273: dup
    2274: bipush        69
    2276: ldc_w         #885                // int 505282590
    2279: iastore
    2280: dup
    2281: bipush        70
    2283: ldc_w         #494                // int -522190624
    2286: iastore
    2287: dup
    2288: bipush        71
    2290: ldc_w         #1039               // int 1684275300
    2293: iastore
    2294: dup
    2295: bipush        72
    2297: ldc_w         #856                // int 269484048
    2300: iastore
    2301: dup
    2302: bipush        73
    2304: iconst_0
    2305: iastore
    2306: dup
    2307: bipush        74
    2309: ldc_w         #359                // int -1549598557
    2312: iastore
    2313: dup
    2314: bipush        75
    2316: ldc_w         #1077               // int 1970602101
    2319: iastore
    2320: dup
    2321: bipush        76
    2323: ldc_w         #305                // int -1970667382
    2326: iastore
    2327: dup
    2328: bipush        77
    2330: ldc_w         #507                // int -421134106
    2333: iastore
    2334: dup
    2335: bipush        78
    2337: ldc_w         #841                // int 151584777
    2340: iastore
    2341: dup
    2342: bipush        79
    2344: ldc_w         #488                // int -572718883
    2347: iastore
    2348: dup
    2349: bipush        80
    2351: ldc_w         #298                // int -2021195641
    2354: iastore
    2355: dup
    2356: bipush        81
    2358: ldc_w         #290                // int -2088566653
    2361: iastore
    2362: dup
    2363: bipush        82
    2365: ldc_w         #454                // int -842202931
    2368: iastore
    2369: dup
    2370: bipush        83
    2372: ldc_w         #318                // int -1869610864
    2375: iastore
    2376: dup
    2377: bipush        84
    2379: ldc_w         #1073               // int 1936916595
    2382: iastore
    2383: dup
    2384: bipush        85
    2386: ldc_w         #543                // int -151650058
    2389: iastore
    2390: dup
    2391: bipush        86
    2393: ldc_w         #345                // int -1650655075
    2396: iastore
    2397: dup
    2398: bipush        87
    2400: ldc_w         #423                // int -1078001473
    2403: iastore
    2404: dup
    2405: bipush        88
    2407: ldc_w         #1001               // int 1381105746
    2410: iastore
    2411: dup
    2412: bipush        89
    2414: ldc_w         #478                // int -656932648
    2417: iastore
    2418: dup
    2419: bipush        90
    2421: ldc_w         #443                // int -926416696
    2424: iastore
    2425: dup
    2426: bipush        91
    2428: ldc_w         #438                // int -960102202
    2431: iastore
    2432: dup
    2433: bipush        92
    2435: ldc_w         #286                // int -2122252159
    2438: iastore
    2439: dup
    2440: bipush        93
    2442: ldc_w         #1063               // int 1869545583
    2445: iastore
    2446: dup
    2447: bipush        94
    2449: ldc_w         #862                // int 320012307
    2452: iastore
    2453: dup
    2454: bipush        95
    2456: ldc_w         #1037               // int 1667432547
    2459: iastore
    2460: dup
    2461: bipush        96
    2463: ldc_w         #514                // int -370605847
    2466: iastore
    2467: dup
    2468: bipush        97
    2470: ldc_w         #368                // int -1482227545
    2473: iastore
    2474: dup
    2475: bipush        98
    2477: ldc_w         #350                // int -1616969569
    2480: iastore
    2481: dup
    2482: bipush        99
    2484: ldc_w         #417                // int -1128529732
    2487: iastore
    2488: dup
    2489: bipush        100
    2491: ldc_w         #909                // int 690552873
    2494: iastore
    2495: dup
    2496: bipush        101
    2498: ldc_w         #550                // int -101121799
    2501: iastore
    2502: dup
    2503: bipush        102
    2505: ldc_w         #922                // int 791609391
    2508: iastore
    2509: dup
    2510: bipush        103
    2512: ldc_w         #397                // int -1263271756
    2515: iastore
    2516: dup
    2517: bipush        104
    2519: ldc_w         #1084               // int 2021130360
    2522: iastore
    2523: dup
    2524: bipush        105
    2526: ldc_w         #833                // int 101056518
    2529: iastore
    2530: dup
    2531: bipush        106
    2533: ldc_w         #509                // int -404291353
    2536: iastore
    2537: dup
    2538: bipush        107
    2540: ldc_w         #1067               // int 1903231089
    2543: iastore
    2544: dup
    2545: bipush        108
    2547: ldc_w         #469                // int -724303660
    2550: iastore
    2551: dup
    2552: bipush        109
    2554: ldc_w         #376                // int -1414856533
    2557: iastore
    2558: dup
    2559: bipush        110
    2561: ldc_w         #300                // int -2004352888
    2564: iastore
    2565: dup
    2566: bipush        111
    2568: ldc_w         #311                // int -1920139123
    2571: iastore
    2572: dup
    2573: bipush        112
    2575: ldc_w         #1070               // int 1920073842
    2578: iastore
    2579: dup
    2580: bipush        113
    2582: ldc_w         #408                // int -1179057991
    2585: iastore
    2586: dup
    2587: bipush        114
    2589: ldc_w         #547                // int -117964552
    2592: iastore
    2593: dup
    2594: bipush        115
    2596: ldc_w         #379                // int -1398013780
    2599: iastore
    2600: dup
    2601: bipush        116
    2603: ldc_w         #937                // int 909508662
    2606: iastore
    2607: dup
    2608: bipush        117
    2610: ldc_w         #911                // int 707395626
    2613: iastore
    2614: dup
    2615: bipush        118
    2617: ldc_w         #951                // int 1010565180
    2620: iastore
    2621: dup
    2622: bipush        119
    2624: ldc_w         #531                // int -235863823
    2627: iastore
    2628: dup
    2629: bipush        120
    2631: ldc_w         #960                // int 1077936192
    2634: iastore
    2635: dup
    2636: bipush        121
    2638: ldc_w         #466                // int -741146413
    2641: iastore
    2642: dup
    2643: bipush        122
    2645: ldc_w         #414                // int -1145372485
    2648: iastore
    2649: dup
    2650: bipush        123
    2652: ldc_w         #968                // int 1128464451
    2655: iastore
    2656: dup
    2657: bipush        124
    2659: ldc_w         #866                // int 353697813
    2662: iastore
    2663: dup
    2664: bipush        125
    2666: ldc_w         #382                // int -1381171027
    2669: iastore
    2670: dup
    2671: bipush        126
    2673: ldc_w         #1081               // int 2004287607
    2676: iastore
    2677: dup
    2678: bipush        127
    2680: ldc_w         #283                // int -2139094912
    2683: iastore
    2684: dup
    2685: sipush        128
    2688: ldc_w         #288                // int -2105409406
    2691: iastore
    2692: dup
    2693: sipush        129
    2696: ldc_w         #520                // int -320077588
    2699: iastore
    2700: dup
    2701: sipush        130
    2704: ldc_w         #904                // int 656867367
    2707: iastore
    2708: dup
    2709: sipush        131
    2712: ldc_w         #505                // int -437976859
    2715: iastore
    2716: dup
    2717: sipush        132
    2720: ldc_w         #294                // int -2054881147
    2723: iastore
    2724: dup
    2725: sipush        133
    2728: ldc_w         #935                // int 892665909
    2731: iastore
    2732: dup
    2733: sipush        134
    2736: ldc_w         #848                // int 202113036
    2739: iastore
    2740: dup
    2741: sipush        135
    2744: ldc_w         #963                // int 1094778945
    2747: iastore
    2748: dup
    2749: sipush        136
    2752: ldc_w         #527                // int -269549329
    2755: iastore
    2756: dup
    2757: sipush        137
    2760: ldc_w         #324                // int -1819082605
    2763: iastore
    2764: dup
    2765: sipush        138
    2768: ldc_w         #875                // int 421068825
    2771: iastore
    2772: dup
    2773: sipush        139
    2776: ldc_w         #891                // int 555810849
    2779: iastore
    2780: dup
    2781: sipush        140
    2784: ldc_w         #852                // int 235798542
    2787: iastore
    2788: dup
    2789: sipush        141
    2792: ldc_w         #993                // int 1313734734
    2795: iastore
    2796: dup
    2797: sipush        142
    2800: ldc_w         #1041               // int 1701118053
    2803: iastore
    2804: dup
    2805: sipush        143
    2808: ldc_w         #419                // int -1111686979
    2811: iastore
    2812: dup
    2813: sipush        144
    2816: ldc_w         #406                // int -1195900744
    2819: iastore
    2820: dup
    2821: sipush        145
    2824: ldc_w         #316                // int -1886453617
    2827: iastore
    2828: dup
    2829: sipush        146
    2832: ldc_w         #518                // int -336920341
    2835: iastore
    2836: dup
    2837: sipush        147
    2840: ldc_w         #456                // int -825360178
    2843: iastore
    2844: dup
    2845: sipush        148
    2848: ldc_w         #925                // int 808452144
    2851: iastore
    2852: dup
    2853: sipush        149
    2856: ldc_w         #1029               // int 1600061535
    2859: iastore
    2860: dup
    2861: sipush        150
    2864: ldc_w         #436                // int -976944955
    2867: iastore
    2868: dup
    2869: sipush        151
    2872: ldc_w         #877                // int 437911578
    2875: iastore
    2876: dup
    2877: sipush        152
    2880: ldc_w         #496                // int -505347871
    2883: iastore
    2884: dup
    2885: sipush        153
    2888: ldc_w         #448                // int -892731190
    2891: iastore
    2892: dup
    2893: sipush        154
    2896: ldc_w         #978                // int 1195835463
    2899: iastore
    2900: dup
    2901: sipush        155
    2904: ldc_w         #954                // int 1027407933
    2907: iastore
    2908: dup
    2909: sipush        156
    2912: ldc_w         #823                // int 16842753
    2915: iastore
    2916: dup
    2917: sipush        157
    2920: ldc_w         #474                // int -690618154
    2923: iastore
    2924: dup
    2925: sipush        158
    2928: ldc_w         #1010               // int 1448476758
    2931: iastore
    2932: dup
    2933: sipush        159
    2936: ldc_w         #991                // int 1296891981
    2939: iastore
    2940: dup
    2941: sipush        160
    2944: ldc_w         #850                // int 218955789
    2947: iastore
    2948: dup
    2949: sipush        161
    2952: ldc_w         #1043               // int 1717960806
    2955: iastore
    2956: dup
    2957: sipush        162
    2960: ldc_w         #452                // int -859045684
    2963: iastore
    2964: dup
    2965: sipush        163
    2968: ldc_w         #918                // int 757923885
    2971: iastore
    2972: dup
    2973: sipush        164
    2976: ldc_w         #860                // int 303169554
    2979: iastore
    2980: dup
    2981: sipush        165
    2984: ldc_w         #889                // int 538968096
    2987: iastore
    2988: dup
    2989: sipush        166
    2992: ldc_w         #391                // int -1313800015
    2995: iastore
    2996: dup
    2997: sipush        167
    3000: ldc_w         #337                // int -1718026087
    3003: iastore
    3004: dup
    3005: sipush        168
    3008: ldc_w         #989                // int 1280049228
    3011: iastore
    3012: dup
    3013: sipush        169
    3016: ldc_w         #430                // int -1027473214
    3019: iastore
    3020: dup
    3021: sipush        170
    3024: ldc_w         #1098               // int 2122186878
    3027: iastore
    3028: dup
    3029: sipush        171
    3032: ldc_w         #831                // int 84213765
    3035: iastore
    3036: dup
    3037: sipush        172
    3040: ldc_w         #404                // int -1212743497
    3043: iastore
    3044: dup
    3045: sipush        173
    3048: ldc_w         #927                // int 825294897
    3051: iastore
    3052: dup
    3053: sipush        174
    3056: ldc_w         #871                // int 387383319
    3059: iastore
    3060: dup
    3061: sipush        175
    3064: ldc_w         #476                // int -673775401
    3067: iastore
    3068: dup
    3069: sipush        176
    3072: ldc_w         #1014               // int 1482162264
    3075: iastore
    3076: dup
    3077: sipush        177
    3080: ldc_w         #1033               // int 1633747041
    3083: iastore
    3084: dup
    3085: sipush        178
    3088: ldc_w         #879                // int 454754331
    3091: iastore
    3092: dup
    3093: sipush        179
    3096: ldc_w         #881                // int 471597084
    3099: iastore
    3100: dup
    3101: sipush        180
    3104: ldc_w         #854                // int 252641295
    3107: iastore
    3108: dup
    3109: sipush        181
    3112: ldc_w         #869                // int 370540566
    3115: iastore
    3116: dup
    3117: sipush        182
    3120: ldc_w         #873                // int 404226072
    3123: iastore
    3124: dup
    3125: sipush        183
    3128: ldc_w         #893                // int 572653602
    3131: iastore
    3132: dup
    3133: sipush        184
    3136: ldc_w         #971                // int 1145307204
    3139: iastore
    3140: dup
    3141: sipush        185
    3144: ldc_w         #393                // int -1296957262
    3147: iastore
    3148: dup
    3149: sipush        186
    3152: ldc_w         #400                // int -1246429003
    3155: iastore
    3156: dup
    3157: sipush        187
    3160: ldc_w         #320                // int -1852768111
    3163: iastore
    3164: dup
    3165: sipush        188
    3168: ldc_w         #839                // int 134742024
    3171: iastore
    3172: dup
    3173: sipush        189
    3176: ldc_w         #370                // int -1465384792
    3179: iastore
    3180: dup
    3181: sipush        190
    3184: ldc_w         #557                // int -50593540
    3187: iastore
    3188: dup
    3189: sipush        191
    3192: ldc_w         #997                // int 1347420240
    3195: iastore
    3196: dup
    3197: sipush        192
    3200: ldc_w         #460                // int -791674672
    3203: iastore
    3204: dup
    3205: sipush        193
    3208: ldc_w         #1096               // int 2105344125
    3211: iastore
    3212: dup
    3213: sipush        194
    3216: ldc_w         #303                // int -1987510135
    3219: iastore
    3220: dup
    3221: sipush        195
    3224: ldc_w         #332                // int -1751711593
    3227: iastore
    3228: dup
    3229: sipush        196
    3232: ldc_w         #1021               // int 1532690523
    3235: iastore
    3236: dup
    3237: sipush        197
    3240: ldc_w         #328                // int -1785397099
    3243: iastore
    3244: dup
    3245: sipush        198
    3248: ldc_w         #564                // int -65281
    3251: iastore
    3252: dup
    3253: sipush        199
    3256: ldc_w         #464                // int -757989166
    3259: iastore
    3260: dup
    3261: sipush        200
    3264: ldc_w         #434                // int -993787708
    3267: iastore
    3268: dup
    3269: sipush        201
    3272: ldc_w         #980                // int 1212678216
    3275: iastore
    3276: dup
    3277: sipush        202
    3280: ldc_w         #545                // int -134807305
    3283: iastore
    3284: dup
    3285: sipush        203
    3288: ldc_w         #484                // int -606404389
    3291: iastore
    3292: dup
    3293: sipush        204
    3296: ldc_w         #827                // int 50528259
    3299: iastore
    3300: dup
    3301: sipush        205
    3304: ldc_w         #482                // int -623247142
    3307: iastore
    3308: dup
    3309: sipush        206
    3312: ldc_w         #958                // int 1061093439
    3315: iastore
    3316: dup
    3317: sipush        207
    3320: ldc_w         #326                // int -1802239852
    3323: iastore
    3324: dup
    3325: sipush        208
    3328: ldc_w         #1023               // int 1549533276
    3331: iastore
    3332: dup
    3333: sipush        209
    3336: ldc_w         #825                // int 33685506
    3339: iastore
    3340: dup
    3341: sipush        210
    3344: ldc_w         #985                // int 1246363722
    3347: iastore
    3348: dup
    3349: sipush        211
    3352: ldc_w         #931                // int 858980403
    3355: iastore
    3356: dup
    3357: sipush        212
    3360: ldc_w         #1045               // int 1734803559
    3363: iastore
    3364: dup
    3365: sipush        213
    3368: ldc_w         #536                // int -202178317
    3371: iastore
    3372: dup
    3373: sipush        214
    3376: ldc_w         #1100               // int 2139029631
    3379: iastore
    3380: dup
    3381: sipush        215
    3384: ldc_w         #498                // int -488505118
    3387: iastore
    3388: dup
    3389: sipush        216
    3392: ldc_w         #341                // int -1684340581
    3395: iastore
    3396: dup
    3397: sipush        217
    3400: ldc_w         #902                // int 640024614
    3403: iastore
    3404: dup
    3405: sipush        218
    3408: ldc_w         #940                // int 926351415
    3411: iastore
    3412: dup
    3413: sipush        219
    3416: ldc_w         #949                // int 993722427
    3419: iastore
    3420: dup
    3421: sipush        220
    3424: ldc_w         #330                // int -1768554346
    3427: iastore
    3428: dup
    3429: sipush        221
    3432: ldc_w         #987                // int 1263206475
    3435: iastore
    3436: dup
    3437: sipush        222
    3440: ldc_w         #421                // int -1094844226
    3443: iastore
    3444: dup
    3445: sipush        223
    3448: ldc_w         #920                // int 774766638
    3451: iastore
    3452: dup
    3453: sipush        224
    3456: ldc_w         #1087               // int 2037973113
    3459: iastore
    3460: dup
    3461: sipush        225
    3464: ldc_w         #309                // int -1936981876
    3467: iastore
    3468: dup
    3469: sipush        226
    3472: ldc_w         #1061               // int 1852702830
    3475: iastore
    3476: dup
    3477: sipush        227
    3480: ldc_w         #314                // int -1903296370
    3483: iastore
    3484: dup
    3485: sipush        228
    3488: ldc_w         #541                // int -168492811
    3491: iastore
    3492: dup
    3493: sipush        229
    3496: ldc_w         #402                // int -1229586250
    3499: iastore
    3500: dup
    3501: sipush        230
    3504: ldc_w         #559                // int -33750787
    3507: iastore
    3508: dup
    3509: sipush        231
    3512: ldc_w         #1016               // int 1499005017
    3515: iastore
    3516: dup
    3517: sipush        232
    3520: ldc_w         #334                // int -1734868840
    3523: iastore
    3524: dup
    3525: sipush        233
    3528: ldc_w         #1052               // int 1785331818
    3531: iastore
    3532: dup
    3533: sipush        234
    3536: ldc_w         #975                // int 1178992710
    3539: iastore
    3540: dup
    3541: sipush        235
    3544: ldc_w         #411                // int -1162215238
    3547: iastore
    3548: dup
    3549: sipush        236
    3552: ldc_w         #899                // int 623181861
    3555: iastore
    3556: dup
    3557: sipush        237
    3560: ldc_w         #965                // int 1111621698
    3563: iastore
    3564: dup
    3565: sipush        238
    3568: ldc_w         #356                // int -1566441310
    3571: iastore
    3572: dup
    3573: sipush        239
    3576: ldc_w         #552                // int -84279046
    3579: iastore
    3580: dup
    3581: sipush        240
    3584: ldc_w         #836                // int 117899271
    3587: iastore
    3588: dup
    3589: sipush        241
    3592: ldc_w         #1007               // int 1431634005
    3595: iastore
    3596: dup
    3597: sipush        242
    3600: ldc_w         #524                // int -286392082
    3603: iastore
    3604: dup
    3605: sipush        243
    3608: ldc_w         #843                // int 168427530
    3611: iastore
    3612: dup
    3613: sipush        244
    3616: ldc_w         #982                // int 1229520969
    3619: iastore
    3620: dup
    3621: sipush        245
    3624: ldc_w         #1047               // int 1751646312
    3627: iastore
    3628: dup
    3629: sipush        246
    3632: ldc_w         #942                // int 943194168
    3635: iastore
    3636: dup
    3637: sipush        247
    3640: ldc_w         #361                // int -1532755804
    3643: iastore
    3644: dup
    3645: sipush        248
    3648: ldc_w         #906                // int 673710120
    3651: iastore
    3652: dup
    3653: sipush        249
    3656: ldc_w         #1091               // int 2071658619
    3659: iastore
    3660: dup
    3661: sipush        250
    3664: ldc_w         #445                // int -909573943
    3667: iastore
    3668: dup
    3669: sipush        251
    3672: ldc_w         #427                // int -1044315967
    3675: iastore
    3676: dup
    3677: sipush        252
    3680: ldc_w         #500                // int -471662365
    3683: iastore
    3684: dup
    3685: sipush        253
    3688: ldc_w         #538                // int -185335564
    3691: iastore
    3692: dup
    3693: sipush        254
    3696: ldc_w         #440                // int -943259449
    3699: iastore
    3700: dup
    3701: sipush        255
    3704: ldc_w         #347                // int -1633812322
    3707: iastore
    3708: putstatic     #1144               // Field SBOX4_4404:[I
    3711: sipush        256
    3714: newarray       int
    3716: dup
    3717: iconst_0
    3718: ldc_w         #790                // int 14737632
    3721: iastore
    3722: dup
    3723: iconst_1
    3724: ldc_w         #571                // int 328965
    3727: iastore
    3728: dup
    3729: iconst_2
    3730: ldc_w         #654                // int 5789784
    3733: iastore
    3734: dup
    3735: iconst_3
    3736: ldc_w         #783                // int 14277081
    3739: iastore
    3740: dup
    3741: iconst_4
    3742: ldc_w         #669                // int 6776679
    3745: iastore
    3746: dup
    3747: iconst_5
    3748: ldc_w         #644                // int 5131854
    3751: iastore
    3752: dup
    3753: bipush        6
    3755: ldc_w         #695                // int 8487297
    3758: iastore
    3759: dup
    3760: bipush        7
    3762: ldc_w         #769                // int 13355979
    3765: iastore
    3766: dup
    3767: bipush        8
    3769: ldc_w         #767                // int 13224393
    3772: iastore
    3773: dup
    3774: bipush        9
    3776: ldc_w         #577                // int 723723
    3779: iastore
    3780: dup
    3781: bipush        10
    3783: ldc_w         #740                // int 11447982
    3786: iastore
    3787: dup
    3788: bipush        11
    3790: ldc_w         #672                // int 6974058
    3793: iastore
    3794: dup
    3795: bipush        12
    3797: ldc_w         #779                // int 14013909
    3800: iastore
    3801: dup
    3802: bipush        13
    3804: ldc_w         #590                // int 1579032
    3807: iastore
    3808: dup
    3809: bipush        14
    3811: ldc_w         #659                // int 6118749
    3814: iastore
    3815: dup
    3816: bipush        15
    3818: ldc_w         #696                // int 8553090
    3821: iastore
    3822: dup
    3823: bipush        16
    3825: ldc_w         #636                // int 4605510
    3828: iastore
    3829: dup
    3830: bipush        17
    3832: ldc_w         #789                // int 14671839
    3835: iastore
    3836: dup
    3837: bipush        18
    3839: ldc_w         #780                // int 14079702
    3842: iastore
    3843: dup
    3844: bipush        19
    3846: ldc_w         #605                // int 2565927
    3849: iastore
    3850: dup
    3851: bipush        20
    3853: ldc_w         #704                // int 9079434
    3856: iastore
    3857: dup
    3858: bipush        21
    3860: ldc_w         #616                // int 3289650
    3863: iastore
    3864: dup
    3865: bipush        22
    3867: ldc_w         #641                // int 4934475
    3870: iastore
    3871: dup
    3872: bipush        23
    3874: ldc_w         #632                // int 4342338
    3877: iastore
    3878: dup
    3879: bipush        24
    3881: ldc_w         #785                // int 14408667
    3884: iastore
    3885: dup
    3886: bipush        25
    3888: ldc_w         #594                // int 1842204
    3891: iastore
    3892: dup
    3893: bipush        26
    3895: ldc_w         #724                // int 10395294
    3898: iastore
    3899: dup
    3900: bipush        27
    3902: ldc_w         #722                // int 10263708
    3905: iastore
    3906: dup
    3907: bipush        28
    3909: ldc_w         #624                // int 3815994
    3912: iastore
    3913: dup
    3914: bipush        29
    3916: ldc_w         #768                // int 13290186
    3919: iastore
    3920: dup
    3921: bipush        30
    3923: ldc_w         #603                // int 2434341
    3926: iastore
    3927: dup
    3928: bipush        31
    3930: ldc_w         #689                // int 8092539
    3933: iastore
    3934: dup
    3935: bipush        32
    3937: ldc_w         #579                // int 855309
    3940: iastore
    3941: dup
    3942: bipush        33
    3944: ldc_w         #679                // int 7434609
    3947: iastore
    3948: dup
    3949: bipush        34
    3951: ldc_w         #661                // int 6250335
    3954: iastore
    3955: dup
    3956: bipush        35
    3958: ldc_w         #597                // int 2039583
    3961: iastore
    3962: dup
    3963: bipush        36
    3965: ldc_w         #814                // int 16316664
    3968: iastore
    3969: dup
    3970: bipush        37
    3972: ldc_w         #781                // int 14145495
    3975: iastore
    3976: dup
    3977: bipush        38
    3979: ldc_w         #628                // int 4079166
    3982: iastore
    3983: dup
    3984: bipush        39
    3986: ldc_w         #723                // int 10329501
    3989: iastore
    3990: dup
    3991: bipush        40
    3993: ldc_w         #690                // int 8158332
    3996: iastore
    3997: dup
    3998: bipush        41
    4000: ldc_w         #662                // int 6316128
    4003: iastore
    4004: dup
    4005: bipush        42
    4007: ldc_w         #751                // int 12171705
    4010: iastore
    4011: dup
    4012: bipush        43
    4014: ldc_w         #756                // int 12500670
    4017: iastore
    4018: dup
    4019: bipush        44
    4021: ldc_w         #754                // int 12369084
    4024: iastore
    4025: dup
    4026: bipush        45
    4028: ldc_w         #705                // int 9145227
    4031: iastore
    4032: dup
    4033: bipush        46
    4035: ldc_w         #588                // int 1447446
    4038: iastore
    4039: dup
    4040: bipush        47
    4042: ldc_w         #618                // int 3421236
    4045: iastore
    4046: dup
    4047: bipush        48
    4049: ldc_w         #643                // int 5066061
    4052: iastore
    4053: dup
    4054: bipush        49
    4056: ldc_w         #761                // int 12829635
    4059: iastore
    4060: dup
    4061: bipush        50
    4063: ldc_w         #680                // int 7500402
    4066: iastore
    4067: dup
    4068: bipush        51
    4070: ldc_w         #715                // int 9803157
    4073: iastore
    4074: dup
    4075: bipush        52
    4077: ldc_w         #737                // int 11250603
    4080: iastore
    4081: dup
    4082: bipush        53
    4084: ldc_w         #708                // int 9342606
    4087: iastore
    4088: dup
    4089: bipush        54
    4091: ldc_w         #752                // int 12237498
    4094: iastore
    4095: dup
    4096: bipush        55
    4098: ldc_w         #688                // int 8026746
    4101: iastore
    4102: dup
    4103: bipush        56
    4105: ldc_w         #745                // int 11776947
    4108: iastore
    4109: dup
    4110: bipush        57
    4112: ldc_w         #568                // int 131586
    4115: iastore
    4116: dup
    4117: bipush        58
    4119: ldc_w         #746                // int 11842740
    4122: iastore
    4123: dup
    4124: bipush        59
    4126: ldc_w         #739                // int 11382189
    4129: iastore
    4130: dup
    4131: bipush        60
    4133: ldc_w         #728                // int 10658466
    4136: iastore
    4137: dup
    4138: bipush        61
    4140: ldc_w         #738                // int 11316396
    4143: iastore
    4144: dup
    4145: bipush        62
    4147: ldc_w         #782                // int 14211288
    4150: iastore
    4151: dup
    4152: bipush        63
    4154: ldc_w         #720                // int 10132122
    4157: iastore
    4158: dup
    4159: bipush        64
    4161: ldc_w         #589                // int 1513239
    4164: iastore
    4165: dup
    4166: bipush        65
    4168: ldc_w         #592                // int 1710618
    4171: iastore
    4172: dup
    4173: bipush        66
    4175: ldc_w         #619                // int 3487029
    4178: iastore
    4179: dup
    4180: bipush        67
    4182: ldc_w         #770                // int 13421772
    4185: iastore
    4186: dup
    4187: bipush        68
    4189: ldc_w         #813                // int 16250871
    4192: iastore
    4193: dup
    4194: bipush        69
    4196: ldc_w         #719                // int 10066329
    4199: iastore
    4200: dup
    4201: bipush        70
    4203: ldc_w         #663                // int 6381921
    4206: iastore
    4207: dup
    4208: bipush        71
    4210: ldc_w         #656                // int 5921370
    4213: iastore
    4214: dup
    4215: bipush        72
    4217: ldc_w         #798                // int 15263976
    4220: iastore
    4221: dup
    4222: bipush        73
    4224: ldc_w         #602                // int 2368548
    4227: iastore
    4228: dup
    4229: bipush        74
    4231: ldc_w         #652                // int 5658198
    4234: iastore
    4235: dup
    4236: bipush        75
    4238: ldc_w         #630                // int 4210752
    4241: iastore
    4242: dup
    4243: bipush        76
    4245: ldc_w         #791                // int 14803425
    4248: iastore
    4249: dup
    4250: bipush        77
    4252: ldc_w         #665                // int 6513507
    4255: iastore
    4256: dup
    4257: bipush        78
    4259: ldc_w         #575                // int 592137
    4262: iastore
    4263: dup
    4264: bipush        79
    4266: ldc_w         #617                // int 3355443
    4269: iastore
    4270: dup
    4271: bipush        80
    4273: ldc_w         #757                // int 12566463
    4276: iastore
    4277: dup
    4278: bipush        81
    4280: ldc_w         #718                // int 10000536
    4283: iastore
    4284: dup
    4285: bipush        82
    4287: ldc_w         #717                // int 9934743
    4290: iastore
    4291: dup
    4292: bipush        83
    4294: ldc_w         #699                // int 8750469
    4297: iastore
    4298: dup
    4299: bipush        84
    4301: ldc_w         #670                // int 6842472
    4304: iastore
    4305: dup
    4306: bipush        85
    4308: ldc_w         #818                // int 16579836
    4311: iastore
    4312: dup
    4313: bipush        86
    4315: ldc_w         #802                // int 15527148
    4318: iastore
    4319: dup
    4320: bipush        87
    4322: ldc_w         #576                // int 657930
    4325: iastore
    4326: dup
    4327: bipush        88
    4329: ldc_w         #784                // int 14342874
    4332: iastore
    4333: dup
    4334: bipush        89
    4336: ldc_w         #677                // int 7303023
    4339: iastore
    4340: dup
    4341: bipush        90
    4343: ldc_w         #649                // int 5460819
    4346: iastore
    4347: dup
    4348: bipush        91
    4350: ldc_w         #664                // int 6447714
    4353: iastore
    4354: dup
    4355: bipush        92
    4357: ldc_w         #729                // int 10724259
    4360: iastore
    4361: dup
    4362: bipush        93
    4364: ldc_w         #612                // int 3026478
    4367: iastore
    4368: dup
    4369: bipush        94
    4371: ldc_w         #574                // int 526344
    4374: iastore
    4375: dup
    4376: bipush        95
    4378: ldc_w         #741                // int 11513775
    4381: iastore
    4382: dup
    4383: bipush        96
    4385: ldc_w         #606                // int 2631720
    4388: iastore
    4389: dup
    4390: bipush        97
    4392: ldc_w         #742                // int 11579568
    4395: iastore
    4396: dup
    4397: bipush        98
    4399: ldc_w         #682                // int 7631988
    4402: iastore
    4403: dup
    4404: bipush        99
    4406: ldc_w         #760                // int 12763842
    4409: iastore
    4410: dup
    4411: bipush        100
    4413: ldc_w         #755                // int 12434877
    4416: iastore
    4417: dup
    4418: bipush        101
    4420: ldc_w         #620                // int 3552822
    4423: iastore
    4424: dup
    4425: bipush        102
    4427: ldc_w         #600                // int 2236962
    4430: iastore
    4431: dup
    4432: bipush        103
    4434: ldc_w         #622                // int 3684408
    4437: iastore
    4438: dup
    4439: bipush        104
    4441: ldc_w         #666                // int 6579300
    4444: iastore
    4445: dup
    4446: bipush        105
    4448: ldc_w         #596                // int 1973790
    4451: iastore
    4452: dup
    4453: bipush        106
    4455: ldc_w         #623                // int 3750201
    4458: iastore
    4459: dup
    4460: bipush        107
    4462: ldc_w         #610                // int 2894892
    4465: iastore
    4466: dup
    4467: bipush        108
    4469: ldc_w         #732                // int 10921638
    4472: iastore
    4473: dup
    4474: bipush        109
    4476: ldc_w         #614                // int 3158064
    4479: iastore
    4480: dup
    4481: bipush        110
    4483: ldc_w         #795                // int 15066597
    4486: iastore
    4487: dup
    4488: bipush        111
    4490: ldc_w         #634                // int 4473924
    4493: iastore
    4494: dup
    4495: bipush        112
    4497: ldc_w         #819                // int 16645629
    4500: iastore
    4501: dup
    4502: bipush        113
    4504: ldc_w         #702                // int 8947848
    4507: iastore
    4508: dup
    4509: bipush        114
    4511: ldc_w         #725                // int 10461087
    4514: iastore
    4515: dup
    4516: bipush        115
    4518: ldc_w         #667                // int 6645093
    4521: iastore
    4522: dup
    4523: bipush        116
    4525: ldc_w         #701                // int 8882055
    4528: iastore
    4529: dup
    4530: bipush        117
    4532: ldc_w         #673                // int 7039851
    4535: iastore
    4536: dup
    4537: bipush        118
    4539: ldc_w         #810                // int 16053492
    4542: iastore
    4543: dup
    4544: bipush        119
    4546: ldc_w         #601                // int 2302755
    4549: iastore
    4550: dup
    4551: bipush        120
    4553: ldc_w         #638                // int 4737096
    4556: iastore
    4557: dup
    4558: bipush        121
    4560: ldc_w         #582                // int 1052688
    4563: iastore
    4564: dup
    4565: bipush        122
    4567: ldc_w         #775                // int 13750737
    4570: iastore
    4571: dup
    4572: bipush        123
    4574: ldc_w         #647                // int 5329233
    4577: iastore
    4578: dup
    4579: bipush        124
    4581: ldc_w         #758                // int 12632256
    4584: iastore
    4585: dup
    4586: bipush        125
    4588: ldc_w         #815                // int 16382457
    4591: iastore
    4592: dup
    4593: bipush        126
    4595: ldc_w         #776                // int 13816530
    4598: iastore
    4599: dup
    4600: bipush        127
    4602: ldc_w         #726                // int 10526880
    4605: iastore
    4606: dup
    4607: sipush        128
    4610: ldc_w         #651                // int 5592405
    4613: iastore
    4614: dup
    4615: sipush        129
    4618: ldc_w         #727                // int 10592673
    4621: iastore
    4622: dup
    4623: sipush        130
    4626: ldc_w         #631                // int 4276545
    4629: iastore
    4630: dup
    4631: sipush        131
    4634: ldc_w         #816                // int 16448250
    4637: iastore
    4638: dup
    4639: sipush        132
    4642: ldc_w         #633                // int 4408131
    4645: iastore
    4646: dup
    4647: sipush        133
    4650: ldc_w         #585                // int 1250067
    4653: iastore
    4654: dup
    4655: sipush        134
    4658: ldc_w         #762                // int 12895428
    4661: iastore
    4662: dup
    4663: sipush        135
    4666: ldc_w         #613                // int 3092271
    4669: iastore
    4670: dup
    4671: sipush        136
    4674: ldc_w         #734                // int 11053224
    4677: iastore
    4678: dup
    4679: sipush        137
    4682: ldc_w         #748                // int 11974326
    4685: iastore
    4686: dup
    4687: sipush        138
    4690: ldc_w         #626                // int 3947580
    4693: iastore
    4694: dup
    4695: sipush        139
    4698: ldc_w         #609                // int 2829099
    4701: iastore
    4702: dup
    4703: sipush        140
    4706: ldc_w         #759                // int 12698049
    4709: iastore
    4710: dup
    4711: sipush        141
    4714: ldc_w         #821                // int 16777215
    4717: iastore
    4718: dup
    4719: sipush        142
    4722: ldc_w         #766                // int 13158600
    4725: iastore
    4726: dup
    4727: sipush        143
    4730: ldc_w         #731                // int 10855845
    4733: iastore
    4734: dup
    4735: sipush        144
    4738: ldc_w         #598                // int 2105376
    4741: iastore
    4742: dup
    4743: sipush        145
    4746: ldc_w         #703                // int 9013641
    4749: iastore
    4750: dup
    4751: sipush        146
    4754: iconst_0
    4755: iastore
    4756: dup
    4757: sipush        147
    4760: ldc_w         #710                // int 9474192
    4763: iastore
    4764: dup
    4765: sipush        148
    4768: ldc_w         #637                // int 4671303
    4771: iastore
    4772: dup
    4773: sipush        149
    4776: ldc_w         #805                // int 15724527
    4779: iastore
    4780: dup
    4781: sipush        150
    4784: ldc_w         #800                // int 15395562
    4787: iastore
    4788: dup
    4789: sipush        151
    4792: ldc_w         #749                // int 12040119
    4795: iastore
    4796: dup
    4797: sipush        152
    4800: ldc_w         #587                // int 1381653
    4803: iastore
    4804: dup
    4805: sipush        153
    4808: ldc_w         #572                // int 394758
    4811: iastore
    4812: dup
    4813: sipush        154
    4816: ldc_w         #771                // int 13487565
    4819: iastore
    4820: dup
    4821: sipush        155
    4824: ldc_w         #747                // int 11908533
    4827: iastore
    4828: dup
    4829: sipush        156
    4832: ldc_w         #584                // int 1184274
    4835: iastore
    4836: dup
    4837: sipush        157
    4840: ldc_w         #692                // int 8289918
    4843: iastore
    4844: dup
    4845: sipush        158
    4848: ldc_w         #753                // int 12303291
    4851: iastore
    4852: dup
    4853: sipush        159
    4856: ldc_w         #607                // int 2697513
    4859: iastore
    4860: dup
    4861: sipush        160
    4864: ldc_w         #581                // int 986895
    4867: iastore
    4868: dup
    4869: sipush        161
    4872: ldc_w         #750                // int 12105912
    4875: iastore
    4876: dup
    4877: sipush        162
    4880: ldc_w         #573                // int 460551
    4883: iastore
    4884: dup
    4885: sipush        163
    4888: ldc_w         #570                // int 263172
    4891: iastore
    4892: dup
    4893: sipush        164
    4896: ldc_w         #721                // int 10197915
    4899: iastore
    4900: dup
    4901: sipush        165
    4904: ldc_w         #714                // int 9737364
    4907: iastore
    4908: dup
    4909: sipush        166
    4912: ldc_w         #599                // int 2171169
    4915: iastore
    4916: dup
    4917: sipush        167
    4920: ldc_w         #668                // int 6710886
    4923: iastore
    4924: dup
    4925: sipush        168
    4928: ldc_w         #796                // int 15132390
    4931: iastore
    4932: dup
    4933: sipush        169
    4936: ldc_w         #772                // int 13553358
    4939: iastore
    4940: dup
    4941: sipush        170
    4944: ldc_w         #803                // int 15592941
    4947: iastore
    4948: dup
    4949: sipush        171
    4952: ldc_w         #797                // int 15198183
    4955: iastore
    4956: dup
    4957: sipush        172
    4960: ldc_w         #625                // int 3881787
    4963: iastore
    4964: dup
    4965: sipush        173
    4968: ldc_w         #820                // int 16711422
    4971: iastore
    4972: dup
    4973: sipush        174
    4976: ldc_w         #693                // int 8355711
    4979: iastore
    4980: dup
    4981: sipush        175
    4984: ldc_w         #763                // int 12961221
    4987: iastore
    4988: dup
    4989: sipush        176
    4992: ldc_w         #730                // int 10790052
    4995: iastore
    4996: dup
    4997: sipush        177
    5000: ldc_w         #621                // int 3618615
    5003: iastore
    5004: dup
    5005: sipush        178
    5008: ldc_w         #743                // int 11645361
    5011: iastore
    5012: dup
    5013: sipush        179
    5016: ldc_w         #642                // int 5000268
    5019: iastore
    5020: dup
    5021: sipush        180
    5024: ldc_w         #711                // int 9539985
    5027: iastore
    5028: dup
    5029: sipush        181
    5032: ldc_w         #676                // int 7237230
    5035: iastore
    5036: dup
    5037: sipush        182
    5040: ldc_w         #707                // int 9276813
    5043: iastore
    5044: dup
    5045: sipush        183
    5048: ldc_w         #684                // int 7763574
    5051: iastore
    5052: dup
    5053: sipush        184
    5056: ldc_w         #569                // int 197379
    5059: iastore
    5060: dup
    5061: sipush        185
    5064: ldc_w         #611                // int 2960685
    5067: iastore
    5068: dup
    5069: sipush        186
    5072: ldc_w         #788                // int 14606046
    5075: iastore
    5076: dup
    5077: sipush        187
    5080: ldc_w         #716                // int 9868950
    5083: iastore
    5084: dup
    5085: sipush        188
    5088: ldc_w         #604                // int 2500134
    5091: iastore
    5092: dup
    5093: sipush        189
    5096: ldc_w         #691                // int 8224125
    5099: iastore
    5100: dup
    5101: sipush        190
    5104: ldc_w         #764                // int 13027014
    5107: iastore
    5108: dup
    5109: sipush        191
    5112: ldc_w         #658                // int 6052956
    5115: iastore
    5116: dup
    5117: sipush        192
    5120: ldc_w         #777                // int 13882323
    5123: iastore
    5124: dup
    5125: sipush        193
    5128: ldc_w         #808                // int 15921906
    5131: iastore
    5132: dup
    5133: sipush        194
    5136: ldc_w         #645                // int 5197647
    5139: iastore
    5140: dup
    5141: sipush        195
    5144: ldc_w         #591                // int 1644825
    5147: iastore
    5148: dup
    5149: sipush        196
    5152: ldc_w         #629                // int 4144959
    5155: iastore
    5156: dup
    5157: sipush        197
    5160: ldc_w         #786                // int 14474460
    5163: iastore
    5164: dup
    5165: sipush        198
    5168: ldc_w         #687                // int 7960953
    5171: iastore
    5172: dup
    5173: sipush        199
    5176: ldc_w         #595                // int 1907997
    5179: iastore
    5180: dup
    5181: sipush        200
    5184: ldc_w         #648                // int 5395026
    5187: iastore
    5188: dup
    5189: sipush        201
    5192: ldc_w         #801                // int 15461355
    5195: iastore
    5196: dup
    5197: sipush        202
    5200: ldc_w         #809                // int 15987699
    5203: iastore
    5204: dup
    5205: sipush        203
    5208: ldc_w         #675                // int 7171437
    5211: iastore
    5212: dup
    5213: sipush        204
    5216: ldc_w         #660                // int 6184542
    5219: iastore
    5220: dup
    5221: sipush        205
    5224: ldc_w         #817                // int 16514043
    5227: iastore
    5228: dup
    5229: sipush        206
    5232: ldc_w         #671                // int 6908265
    5235: iastore
    5236: dup
    5237: sipush        207
    5240: ldc_w         #744                // int 11711154
    5243: iastore
    5244: dup
    5245: sipush        208
    5248: ldc_w         #806                // int 15790320
    5251: iastore
    5252: dup
    5253: sipush        209
    5256: ldc_w         #615                // int 3223857
    5259: iastore
    5260: dup
    5261: sipush        210
    5264: ldc_w         #578                // int 789516
    5267: iastore
    5268: dup
    5269: sipush        211
    5272: ldc_w         #778                // int 13948116
    5275: iastore
    5276: dup
    5277: sipush        212
    5280: ldc_w         #773                // int 13619151
    5283: iastore
    5284: dup
    5285: sipush        213
    5288: ldc_w         #706                // int 9211020
    5291: iastore
    5292: dup
    5293: sipush        214
    5296: ldc_w         #792                // int 14869218
    5299: iastore
    5300: dup
    5301: sipush        215
    5304: ldc_w         #683                // int 7697781
    5307: iastore
    5308: dup
    5309: sipush        216
    5312: ldc_w         #735                // int 11119017
    5315: iastore
    5316: dup
    5317: sipush        217
    5320: ldc_w         #640                // int 4868682
    5323: iastore
    5324: dup
    5325: sipush        218
    5328: ldc_w         #653                // int 5723991
    5331: iastore
    5332: dup
    5333: sipush        219
    5336: ldc_w         #698                // int 8684676
    5339: iastore
    5340: dup
    5341: sipush        220
    5344: ldc_w         #583                // int 1118481
    5347: iastore
    5348: dup
    5349: sipush        221
    5352: ldc_w         #635                // int 4539717
    5355: iastore
    5356: dup
    5357: sipush        222
    5360: ldc_w         #593                // int 1776411
    5363: iastore
    5364: dup
    5365: sipush        223
    5368: ldc_w         #811                // int 16119285
    5371: iastore
    5372: dup
    5373: sipush        224
    5376: ldc_w         #794                // int 15000804
    5379: iastore
    5380: dup
    5381: sipush        225
    5384: ldc_w         #580                // int 921102
    5387: iastore
    5388: dup
    5389: sipush        226
    5392: ldc_w         #681                // int 7566195
    5395: iastore
    5396: dup
    5397: sipush        227
    5400: ldc_w         #736                // int 11184810
    5403: iastore
    5404: dup
    5405: sipush        228
    5408: ldc_w         #807                // int 15856113
    5411: iastore
    5412: dup
    5413: sipush        229
    5416: ldc_w         #787                // int 14540253
    5419: iastore
    5420: dup
    5421: sipush        230
    5424: ldc_w         #655                // int 5855577
    5427: iastore
    5428: dup
    5429: sipush        231
    5432: ldc_w         #586                // int 1315860
    5435: iastore
    5436: dup
    5437: sipush        232
    5440: ldc_w         #674                // int 7105644
    5443: iastore
    5444: dup
    5445: sipush        233
    5448: ldc_w         #712                // int 9605778
    5451: iastore
    5452: dup
    5453: sipush        234
    5456: ldc_w         #650                // int 5526612
    5459: iastore
    5460: dup
    5461: sipush        235
    5464: ldc_w         #774                // int 13684944
    5467: iastore
    5468: dup
    5469: sipush        236
    5472: ldc_w         #686                // int 7895160
    5475: iastore
    5476: dup
    5477: sipush        237
    5480: ldc_w         #678                // int 7368816
    5483: iastore
    5484: dup
    5485: sipush        238
    5488: ldc_w         #793                // int 14935011
    5491: iastore
    5492: dup
    5493: sipush        239
    5496: ldc_w         #639                // int 4802889
    5499: iastore
    5500: dup
    5501: sipush        240
    5504: ldc_w         #694                // int 8421504
    5507: iastore
    5508: dup
    5509: sipush        241
    5512: ldc_w         #646                // int 5263440
    5515: iastore
    5516: dup
    5517: sipush        242
    5520: ldc_w         #733                // int 10987431
    5523: iastore
    5524: dup
    5525: sipush        243
    5528: ldc_w         #812                // int 16185078
    5531: iastore
    5532: dup
    5533: sipush        244
    5536: ldc_w         #685                // int 7829367
    5539: iastore
    5540: dup
    5541: sipush        245
    5544: ldc_w         #713                // int 9671571
    5547: iastore
    5548: dup
    5549: sipush        246
    5552: ldc_w         #700                // int 8816262
    5555: iastore
    5556: dup
    5557: sipush        247
    5560: ldc_w         #697                // int 8618883
    5563: iastore
    5564: dup
    5565: sipush        248
    5568: ldc_w         #608                // int 2763306
    5571: iastore
    5572: dup
    5573: sipush        249
    5576: ldc_w         #765                // int 13092807
    5579: iastore
    5580: dup
    5581: sipush        250
    5584: ldc_w         #657                // int 5987163
    5587: iastore
    5588: dup
    5589: sipush        251
    5592: ldc_w         #799                // int 15329769
    5595: iastore
    5596: dup
    5597: sipush        252
    5600: ldc_w         #804                // int 15658734
    5603: iastore
    5604: dup
    5605: sipush        253
    5608: ldc_w         #709                // int 9408399
    5611: iastore
    5612: dup
    5613: sipush        254
    5616: ldc_w         #567                // int 65793
    5619: iastore
    5620: dup
    5621: sipush        255
    5624: ldc_w         #627                // int 4013373
    5627: iastore
    5628: putstatic     #1142               // Field SBOX2_0222:[I
    5631: sipush        256
    5634: newarray       int
    5636: dup
    5637: iconst_0
    5638: ldc_w         #941                // int 939538488
    5641: iastore
    5642: dup
    5643: iconst_1
    5644: ldc_w         #962                // int 1090535745
    5647: iastore
    5648: dup
    5649: iconst_2
    5650: ldc_w         #868                // int 369104406
    5653: iastore
    5654: dup
    5655: iconst_3
    5656: ldc_w         #1078               // int 1979741814
    5659: iastore
    5660: dup
    5661: iconst_4
    5662: ldc_w         #479                // int -654255655
    5665: iastore
    5666: dup
    5667: iconst_5
    5668: ldc_w         #323                // int -1828678765
    5671: iastore
    5672: dup
    5673: bipush        6
    5675: ldc_w         #1030               // int 1610637408
    5678: iastore
    5679: dup
    5680: bipush        7
    5682: ldc_w         #533                // int -234818830
    5685: iastore
    5686: dup
    5687: bipush        8
    5689: ldc_w         #1069               // int 1912631922
    5692: iastore
    5693: dup
    5694: bipush        9
    5696: ldc_w         #429                // int -1040137534
    5699: iastore
    5700: dup
    5701: bipush        10
    5703: ldc_w         #375                // int -1426019413
    5706: iastore
    5707: dup
    5708: bipush        11
    5710: ldc_w         #338                // int -1711236454
    5713: iastore
    5714: dup
    5715: bipush        12
    5717: ldc_w         #1076               // int 1962964341
    5720: iastore
    5721: dup
    5722: bipush        13
    5724: ldc_w         #832                // int 100664838
    5727: iastore
    5728: dup
    5729: bipush        14
    5731: ldc_w         #1011               // int 1459640151
    5734: iastore
    5735: dup
    5736: bipush        15
    5738: ldc_w         #351                // int -1610571616
    5741: iastore
    5742: dup
    5743: bipush        16
    5745: ldc_w         #319                // int -1862233711
    5748: iastore
    5749: dup
    5750: bipush        17
    5752: ldc_w         #544                // int -150931465
    5755: iastore
    5756: dup
    5757: bipush        18
    5759: ldc_w         #399                // int -1258244683
    5762: iastore
    5763: dup
    5764: bipush        19
    5766: ldc_w         #444                // int -922695223
    5769: iastore
    5770: dup
    5771: bipush        20
    5773: ldc_w         #355                // int -1577016670
    5776: iastore
    5777: dup
    5778: bipush        21
    5780: ldc_w         #308                // int -1946121076
    5783: iastore
    5784: dup
    5785: bipush        22
    5787: ldc_w         #463                // int -771697966
    5790: iastore
    5791: dup
    5792: bipush        23
    5794: ldc_w         #317                // int -1879011184
    5797: iastore
    5798: dup
    5799: bipush        24
    5801: ldc_w         #542                // int -167708938
    5804: iastore
    5805: dup
    5806: bipush        25
    5808: ldc_w         #835                // int 117442311
    5811: iastore
    5812: dup
    5813: bipush        26
    5815: ldc_w         #367                // int -1493129305
    5818: iastore
    5819: dup
    5820: bipush        27
    5822: ldc_w         #903                // int 654321447
    5825: iastore
    5826: dup
    5827: bipush        28
    5829: ldc_w         #313                // int -1912566130
    5832: iastore
    5833: dup
    5834: bipush        29
    5836: ldc_w         #392                // int -1308577102
    5839: iastore
    5840: dup
    5841: bipush        30
    5843: ldc_w         #981                // int 1224755529
    5846: iastore
    5847: dup
    5848: bipush        31
    5850: ldc_w         #489                // int -570368290
    5853: iastore
    5854: dup
    5855: bipush        32
    5857: ldc_w         #967                // int 1124090691
    5860: iastore
    5861: dup
    5862: bipush        33
    5864: ldc_w         #1022               // int 1543527516
    5867: iastore
    5868: dup
    5869: bipush        34
    5871: ldc_w         #475                // int -687810601
    5874: iastore
    5875: dup
    5876: bipush        35
    5878: ldc_w         #439                // int -956250169
    5881: iastore
    5882: dup
    5883: bipush        36
    5885: ldc_w         #955                // int 1040203326
    5888: iastore
    5889: dup
    5890: bipush        37
    5892: ldc_w         #540                // int -184486411
    5895: iastore
    5896: dup
    5897: bipush        38
    5899: ldc_w         #315                // int -1895788657
    5902: iastore
    5903: dup
    5904: bipush        39
    5906: ldc_w         #1044               // int 1728079719
    5909: iastore
    5910: dup
    5911: bipush        40
    5913: ldc_w         #886                // int 520101663
    5916: iastore
    5917: dup
    5918: bipush        41
    5920: ldc_w         #872                // int 402659352
    5923: iastore
    5924: dup
    5925: bipush        42
    5927: ldc_w         #1060               // int 1845522030
    5930: iastore
    5931: dup
    5932: bipush        43
    5934: ldc_w         #386                // int -1358909521
    5937: iastore
    5938: dup
    5939: bipush        44
    5941: ldc_w         #921                // int 788541231
    5944: iastore
    5945: dup
    5946: bipush        45
    5948: ldc_w         #497                // int -503258398
    5951: iastore
    5952: dup
    5953: bipush        46
    5955: ldc_w         #293                // int -2063563387
    5958: iastore
    5959: dup
    5960: bipush        47
    5962: ldc_w         #849                // int 218107149
    5965: iastore
    5966: dup
    5967: bipush        48
    5969: ldc_w         #1002               // int 1392530259
    5972: iastore
    5973: dup
    5974: bipush        49
    5976: ldc_w         #528                // int -268373776
    5979: iastore
    5980: dup
    5981: bipush        50
    5983: ldc_w         #342                // int -1677681508
    5986: iastore
    5987: dup
    5988: bipush        51
    5990: ldc_w         #1040               // int 1694524773
    5993: iastore
    5994: dup
    5995: bipush        52
    5997: ldc_w         #515                // int -369038614
    6000: iastore
    6001: dup
    6002: bipush        53
    6004: ldc_w         #358                // int -1560239197
    6007: iastore
    6008: dup
    6009: bipush        54
    6011: ldc_w         #384                // int -1375686994
    6014: iastore
    6015: dup
    6016: bipush        55
    6018: ldc_w         #346                // int -1644126562
    6021: iastore
    6022: dup
    6023: bipush        56
    6025: ldc_w         #519                // int -335483668
    6028: iastore
    6029: dup
    6030: bipush        57
    6032: ldc_w         #282                // int -2147450752
    6035: iastore
    6036: dup
    6037: bipush        58
    6039: ldc_w         #917                // int 754986285
    6042: iastore
    6043: dup
    6044: bipush        59
    6046: ldc_w         #1054               // int 1795189611
    6049: iastore
    6050: dup
    6051: bipush        60
    6053: ldc_w         #369                // int -1476351832
    6056: iastore
    6057: dup
    6058: bipush        61
    6060: ldc_w         #913                // int 721431339
    6063: iastore
    6064: dup
    6065: bipush        62
    6067: ldc_w         #936                // int 905983542
    6070: iastore
    6071: dup
    6072: bipush        63
    6074: ldc_w         #365                // int -1509906778
    6077: iastore
    6078: dup
    6079: bipush        64
    6081: ldc_w         #435                // int -989805115
    6084: iastore
    6085: dup
    6086: bipush        65
    6088: ldc_w         #295                // int -2046785914
    6091: iastore
    6092: dup
    6093: bipush        66
    6095: ldc_w         #990                // int 1291865421
    6098: iastore
    6099: dup
    6100: bipush        67
    6102: ldc_w         #930                // int 855651123
    6105: iastore
    6106: dup
    6107: bipush        68
    6109: ldc_w         #558                // int -50266627
    6112: iastore
    6113: dup
    6114: bipush        69
    6116: ldc_w         #1042               // int 1711302246
    6119: iastore
    6120: dup
    6121: bipush        70
    6123: ldc_w         #1013               // int 1476417624
    6126: iastore
    6127: dup
    6128: bipush        71
    6130: ldc_w         #329                // int -1778346346
    6133: iastore
    6134: dup
    6135: bipush        72
    6137: ldc_w         #946                // int 973093434
    6140: iastore
    6141: dup
    6142: bipush        73
    6144: ldc_w         #840                // int 150997257
    6147: iastore
    6148: dup
    6149: bipush        74
    6151: ldc_w         #327                // int -1795123819
    6154: iastore
    6155: dup
    6156: bipush        75
    6158: ldc_w         #855                // int 268439568
    6161: iastore
    6162: dup
    6163: bipush        76
    6165: ldc_w         #1083               // int 2013296760
    6168: iastore
    6169: dup
    6170: bipush        77
    6172: ldc_w         #477                // int -671033128
    6175: iastore
    6176: dup
    6177: bipush        78
    6179: ldc_w         #964                // int 1107313218
    6182: iastore
    6183: dup
    6184: bipush        79
    6186: ldc_w         #451                // int -872362804
    6189: iastore
    6190: dup
    6191: bipush        80
    6193: ldc_w         #526                // int -285151249
    6196: iastore
    6197: dup
    6198: bipush        81
    6200: ldc_w         #901                // int 637543974
    6203: iastore
    6204: dup
    6205: bipush        82
    6207: ldc_w         #504                // int -452925979
    6210: iastore
    6211: dup
    6212: bipush        83
    6214: ldc_w         #1032               // int 1627414881
    6217: iastore
    6218: dup
    6219: bipush        84
    6221: ldc_w         #876                // int 436214298
    6224: iastore
    6225: dup
    6226: bipush        85
    6228: ldc_w         #957                // int 1056980799
    6231: iastore
    6232: dup
    6233: bipush        86
    6235: ldc_w         #948                // int 989870907
    6238: iastore
    6239: dup
    6240: bipush        87
    6242: ldc_w         #287                // int -2113895806
    6245: iastore
    6246: dup
    6247: bipush        88
    6249: ldc_w         #401                // int -1241467210
    6252: iastore
    6253: dup
    6254: bipush        89
    6256: ldc_w         #483                // int -620700709
    6259: iastore
    6260: dup
    6261: bipush        90
    6263: ldc_w         #468                // int -738143020
    6266: iastore
    6267: dup
    6268: bipush        91
    6270: ldc_w         #333                // int -1744791400
    6273: iastore
    6274: dup
    6275: bipush        92
    6277: ldc_w         #511                // int -402593560
    6280: iastore
    6281: dup
    6282: bipush        93
    6284: ldc_w         #306                // int -1962898549
    6287: iastore
    6288: dup
    6289: bipush        94
    6291: ldc_w         #824                // int 33554946
    6294: iastore
    6295: dup
    6296: bipush        95
    6298: ldc_w         #517                // int -352261141
    6301: iastore
    6302: dup
    6303: bipush        96
    6305: ldc_w         #842                // int 167774730
    6308: iastore
    6309: dup
    6310: bipush        97
    6312: ldc_w         #915                // int 738208812
    6315: iastore
    6316: dup
    6317: bipush        98
    6319: ldc_w         #882                // int 486546717
    6322: iastore
    6323: dup
    6324: bipush        99
    6326: ldc_w         #388                // int -1342132048
    6329: iastore
    6330: dup
    6331: bipush        100
    6333: ldc_w         #1062               // int 1862299503
    6336: iastore
    6337: dup
    6338: bipush        101
    6340: ldc_w         #310                // int -1929343603
    6343: iastore
    6344: dup
    6345: bipush        102
    6347: ldc_w         #299                // int -2013230968
    6350: iastore
    6351: dup
    6352: bipush        103
    6354: ldc_w         #851                // int 234884622
    6357: iastore
    6358: dup
    6359: bipush        104
    6361: ldc_w         #874                // int 419436825
    6364: iastore
    6365: dup
    6366: bipush        105
    6368: ldc_w         #297                // int -2030008441
    6371: iastore
    6372: dup
    6373: bipush        106
    6375: ldc_w         #992                // int 1308642894
    6378: iastore
    6379: dup
    6380: bipush        107
    6382: ldc_w         #845                // int 184552203
    6385: iastore
    6386: dup
    6387: bipush        108
    6389: ldc_w         #371                // int -1459574359
    6392: iastore
    6393: dup
    6394: bipush        109
    6396: ldc_w         #847                // int 201329676
    6399: iastore
    6400: dup
    6401: bipush        110
    6403: ldc_w         #1086               // int 2030074233
    6406: iastore
    6407: dup
    6408: bipush        111
    6410: ldc_w         #857                // int 285217041
    6413: iastore
    6414: dup
    6415: bipush        112
    6417: ldc_w         #1099               // int 2130739071
    6420: iastore
    6421: dup
    6422: bipush        113
    6424: ldc_w         #892                // int 570434082
    6427: iastore
    6428: dup
    6429: bipush        114
    6431: ldc_w         #508                // int -419371033
    6434: iastore
    6435: dup
    6436: bipush        115
    6438: ldc_w         #1015               // int 1493195097
    6441: iastore
    6442: dup
    6443: bipush        116
    6445: ldc_w         #495                // int -520035871
    6448: iastore
    6449: dup
    6450: bipush        117
    6452: ldc_w         #481                // int -637478182
    6455: iastore
    6456: dup
    6457: bipush        118
    6459: ldc_w         #953                // int 1023425853
    6462: iastore
    6463: dup
    6464: bipush        119
    6466: ldc_w         #442                // int -939472696
    6469: iastore
    6470: dup
    6471: bipush        120
    6473: ldc_w         #859                // int 301994514
    6476: iastore
    6477: dup
    6478: bipush        121
    6480: ldc_w         #828                // int 67109892
    6483: iastore
    6484: dup
    6485: bipush        122
    6487: ldc_w         #1074               // int 1946186868
    6490: iastore
    6491: dup
    6492: bipush        123
    6494: ldc_w         #1004               // int 1409307732
    6497: iastore
    6498: dup
    6499: bipush        124
    6501: ldc_w         #924                // int 805318704
    6504: iastore
    6505: dup
    6506: bipush        125
    6508: ldc_w         #1097               // int 2113961598
    6511: iastore
    6512: dup
    6513: bipush        126
    6515: ldc_w         #396                // int -1275022156
    6518: iastore
    6519: dup
    6520: bipush        127
    6522: ldc_w         #905                // int 671098920
    6525: iastore
    6526: dup
    6527: sipush        128
    6530: ldc_w         #1006               // int 1426085205
    6533: iastore
    6534: dup
    6535: sipush        129
    6538: ldc_w         #1046               // int 1744857192
    6541: iastore
    6542: dup
    6543: sipush        130
    6546: ldc_w         #996                // int 1342197840
    6549: iastore
    6550: dup
    6551: sipush        131
    6554: ldc_w         #420                // int -1107247426
    6557: iastore
    6558: dup
    6559: sipush        132
    6562: ldc_w         #459                // int -805252912
    6565: iastore
    6566: dup
    6567: sipush        133
    6570: ldc_w         #433                // int -1006582588
    6573: iastore
    6574: dup
    6575: sipush        134
    6578: ldc_w         #926                // int 822096177
    6581: iastore
    6582: dup
    6583: sipush        135
    6586: ldc_w         #449                // int -889140277
    6589: iastore
    6590: dup
    6591: sipush        136
    6594: ldc_w         #910                // int 704653866
    6597: iastore
    6598: dup
    6599: sipush        137
    6602: ldc_w         #381                // int -1392464467
    6605: iastore
    6606: dup
    6607: sipush        138
    6610: ldc_w         #853                // int 251662095
    6613: iastore
    6614: dup
    6615: sipush        139
    6618: ldc_w         #447                // int -905917750
    6621: iastore
    6622: dup
    6623: sipush        140
    6626: ldc_w         #1064               // int 1879076976
    6629: iastore
    6630: dup
    6631: sipush        141
    6634: ldc_w         #563                // int -16711681
    6637: iastore
    6638: dup
    6639: sipush        142
    6642: ldc_w         #928                // int 838873650
    6645: iastore
    6646: dup
    6647: sipush        143
    6650: ldc_w         #1049               // int 1761634665
    6653: iastore
    6654: dup
    6655: sipush        144
    6658: ldc_w         #838                // int 134219784
    6661: iastore
    6662: dup
    6663: sipush        145
    6666: ldc_w         #1034               // int 1644192354
    6669: iastore
    6670: dup
    6671: sipush        146
    6674: iconst_0
    6675: iastore
    6676: dup
    6677: sipush        147
    6680: ldc_w         #896                // int 603989028
    6683: iastore
    6684: dup
    6685: sipush        148
    6688: ldc_w         #461                // int -788475439
    6691: iastore
    6692: dup
    6693: sipush        149
    6696: ldc_w         #554                // int -83821573
    6699: iastore
    6700: dup
    6701: sipush        150
    6704: ldc_w         #410                // int -1174357318
    6707: iastore
    6708: dup
    6709: sipush        151
    6712: ldc_w         #521                // int -318706195
    6715: iastore
    6716: dup
    6717: sipush        152
    6720: ldc_w         #972                // int 1157645637
    6723: iastore
    6724: dup
    6725: sipush        153
    6728: ldc_w         #285                // int -2130673279
    6731: iastore
    6732: dup
    6733: sipush        154
    6736: ldc_w         #1072               // int 1929409395
    6739: iastore
    6740: dup
    6741: sipush        155
    6744: ldc_w         #1058               // int 1828744557
    6747: iastore
    6748: dup
    6749: sipush        156
    6752: ldc_w         #291                // int -2080340860
    6755: iastore
    6756: dup
    6757: sipush        157
    6760: ldc_w         #349                // int -1627349089
    6763: iastore
    6764: dup
    6765: sipush        158
    6768: ldc_w         #523                // int -301928722
    6771: iastore
    6772: dup
    6773: sipush        159
    6776: ldc_w         #984                // int 1241533002
    6779: iastore
    6780: dup
    6781: sipush        160
    6784: ldc_w         #431                // int -1023360061
    6787: iastore
    6788: dup
    6789: sipush        161
    6792: ldc_w         #919                // int 771763758
    6795: iastore
    6796: dup
    6797: sipush        162
    6800: ldc_w         #426                // int -1056915007
    6803: iastore
    6804: dup
    6805: sipush        163
    6808: ldc_w         #822                // int 16777473
    6811: iastore
    6812: dup
    6813: sipush        164
    6816: ldc_w         #506                // int -436148506
    6819: iastore
    6820: dup
    6821: sipush        165
    6824: ldc_w         #898                // int 620766501
    6827: iastore
    6828: dup
    6829: sipush        166
    6832: ldc_w         #979                // int 1207978056
    6835: iastore
    6836: dup
    6837: sipush        167
    6840: ldc_w         #336                // int -1728013927
    6843: iastore
    6844: dup
    6845: sipush        168
    6848: ldc_w         #407                // int -1191134791
    6851: iastore
    6852: dup
    6853: sipush        169
    6856: ldc_w         #394                // int -1291799629
    6859: iastore
    6860: dup
    6861: sipush        170
    6864: ldc_w         #1090               // int 2063629179
    6867: iastore
    6868: dup
    6869: sipush        171
    6872: ldc_w         #549                // int -117376519
    6875: iastore
    6876: dup
    6877: sipush        172
    6880: ldc_w         #455                // int -838807858
    6883: iastore
    6884: dup
    6885: sipush        173
    6888: ldc_w         #422                // int -1090469953
    6891: iastore
    6892: dup
    6893: sipush        174
    6896: ldc_w         #491                // int -553590817
    6899: iastore
    6900: dup
    6901: sipush        175
    6904: ldc_w         #1066               // int 1895854449
    6907: iastore
    6908: dup
    6909: sipush        176
    6912: ldc_w         #908                // int 687876393
    6915: iastore
    6916: dup
    6917: sipush        177
    6920: ldc_w         #453                // int -855585331
    6923: iastore
    6924: dup
    6925: sipush        178
    6928: ldc_w         #1056               // int 1811967084
    6931: iastore
    6932: dup
    6933: sipush        179
    6936: ldc_w         #861                // int 318771987
    6939: iastore
    6940: dup
    6941: sipush        180
    6944: ldc_w         #1038               // int 1677747300
    6947: iastore
    6948: dup
    6949: sipush        181
    6952: ldc_w         #340                // int -1694458981
    6955: iastore
    6956: dup
    6957: sipush        182
    6960: ldc_w         #1036               // int 1660969827
    6963: iastore
    6964: dup
    6965: sipush        183
    6968: ldc_w         #344                // int -1660904035
    6971: iastore
    6972: dup
    6973: sipush        184
    6976: ldc_w         #424                // int -1073692480
    6979: iastore
    6980: dup
    6981: sipush        185
    6984: ldc_w         #986                // int 1258310475
    6987: iastore
    6988: dup
    6989: sipush        186
    6992: ldc_w         #403                // int -1224689737
    6995: iastore
    6996: dup
    6997: sipush        187
    7000: ldc_w         #363                // int -1526684251
    7003: iastore
    7004: dup
    7005: sipush        188
    7008: ldc_w         #302                // int -1996453495
    7011: iastore
    7012: dup
    7013: sipush        189
    7016: ldc_w         #1028               // int 1593859935
    7019: iastore
    7020: dup
    7021: sipush        190
    7024: ldc_w         #390                // int -1325354575
    7027: iastore
    7028: dup
    7029: sipush        191
    7032: ldc_w         #870                // int 385881879
    7035: iastore
    7036: dup
    7037: sipush        192
    7040: ldc_w         #537                // int -201263884
    7043: iastore
    7044: dup
    7045: sipush        193
    7048: ldc_w         #416                // int -1140802372
    7051: iastore
    7052: dup
    7053: sipush        194
    7056: ldc_w         #465                // int -754920493
    7059: iastore
    7060: dup
    7061: sipush        195
    7064: ldc_w         #974                // int 1174423110
    7067: iastore
    7068: dup
    7069: sipush        196
    7072: ldc_w         #457                // int -822030385
    7075: iastore
    7076: dup
    7077: sipush        197
    7080: ldc_w         #939                // int 922761015
    7083: iastore
    7084: dup
    7085: sipush        198
    7088: ldc_w         #1026               // int 1577082462
    7091: iastore
    7092: dup
    7093: sipush        199
    7096: ldc_w         #977                // int 1191200583
    7099: iastore
    7100: dup
    7101: sipush        200
    7104: ldc_w         #325                // int -1811901292
    7107: iastore
    7108: dup
    7109: sipush        201
    7112: ldc_w         #551                // int -100599046
    7115: iastore
    7116: dup
    7117: sipush        202
    7120: ldc_w         #556                // int -67044100
    7123: iastore
    7124: dup
    7125: sipush        203
    7128: ldc_w         #1020               // int 1526750043
    7131: iastore
    7132: dup
    7133: sipush        204
    7136: ldc_w         #331                // int -1761568873
    7139: iastore
    7140: dup
    7141: sipush        205
    7144: ldc_w         #561                // int -33489154
    7147: iastore
    7148: dup
    7149: sipush        206
    7152: ldc_w         #1018               // int 1509972570
    7155: iastore
    7156: dup
    7157: sipush        207
    7160: ldc_w         #378                // int -1409241940
    7163: iastore
    7164: dup
    7165: sipush        208
    7168: ldc_w         #950                // int 1006648380
    7171: iastore
    7172: dup
    7173: sipush        209
    7176: ldc_w         #988                // int 1275087948
    7179: iastore
    7180: dup
    7181: sipush        210
    7184: ldc_w         #826                // int 50332419
    7187: iastore
    7188: dup
    7189: sipush        211
    7192: ldc_w         #934                // int 889206069
    7195: iastore
    7196: dup
    7197: sipush        212
    7200: ldc_w         #535                // int -218041357
    7203: iastore
    7204: dup
    7205: sipush        213
    7208: ldc_w         #894                // int 587211555
    7211: iastore
    7212: dup
    7213: sipush        214
    7216: ldc_w         #405                // int -1207912264
    7219: iastore
    7220: dup
    7221: sipush        215
    7224: ldc_w         #1024               // int 1560304989
    7227: iastore
    7228: dup
    7229: sipush        216
    7232: ldc_w         #1051               // int 1778412138
    7235: iastore
    7236: dup
    7237: sipush        217
    7240: ldc_w         #321                // int -1845456238
    7243: iastore
    7244: dup
    7245: sipush        218
    7248: ldc_w         #471                // int -721365547
    7251: iastore
    7252: dup
    7253: sipush        219
    7256: ldc_w         #890                // int 553656609
    7259: iastore
    7260: dup
    7261: sipush        220
    7264: ldc_w         #970                // int 1140868164
    7267: iastore
    7268: dup
    7269: sipush        221
    7272: ldc_w         #998                // int 1358975313
    7275: iastore
    7276: dup
    7277: sipush        222
    7280: ldc_w         #437                // int -973027642
    7283: iastore
    7284: dup
    7285: sipush        223
    7288: ldc_w         #1095               // int 2097184125
    7291: iastore
    7292: dup
    7293: sipush        224
    7296: ldc_w         #944                // int 956315961
    7299: iastore
    7300: dup
    7301: sipush        225
    7304: ldc_w         #289                // int -2097118333
    7307: iastore
    7308: dup
    7309: sipush        226
    7312: ldc_w         #485                // int -603923236
    7315: iastore
    7316: dup
    7317: sipush        227
    7320: ldc_w         #373                // int -1442796886
    7323: iastore
    7324: dup
    7325: sipush        228
    7328: ldc_w         #1093               // int 2080406652
    7331: iastore
    7332: dup
    7333: sipush        229
    7336: ldc_w         #1080               // int 1996519287
    7339: iastore
    7340: dup
    7341: sipush        230
    7344: ldc_w         #1009               // int 1442862678
    7347: iastore
    7348: dup
    7349: sipush        231
    7352: ldc_w         #830                // int 83887365
    7355: iastore
    7356: dup
    7357: sipush        232
    7360: ldc_w         #878                // int 452991771
    7363: iastore
    7364: dup
    7365: sipush        233
    7368: ldc_w         #360                // int -1543461724
    7371: iastore
    7372: dup
    7373: sipush        234
    7376: ldc_w         #865                // int 352326933
    7379: iastore
    7380: dup
    7381: sipush        235
    7384: ldc_w         #932                // int 872428596
    7387: iastore
    7388: dup
    7389: sipush        236
    7392: ldc_w         #884                // int 503324190
    7395: iastore
    7396: dup
    7397: sipush        237
    7400: ldc_w         #880                // int 469769244
    7403: iastore
    7404: dup
    7405: sipush        238
    7408: ldc_w         #546                // int -134153992
    7411: iastore
    7412: dup
    7413: sipush        239
    7416: ldc_w         #1000               // int 1375752786
    7419: iastore
    7420: dup
    7421: sipush        240
    7424: ldc_w         #888                // int 536879136
    7427: iastore
    7428: dup
    7429: sipush        241
    7432: ldc_w         #863                // int 335549460
    7435: iastore
    7436: dup
    7437: sipush        242
    7440: ldc_w         #513                // int -385816087
    7443: iastore
    7444: dup
    7445: sipush        243
    7448: ldc_w         #418                // int -1124024899
    7451: iastore
    7452: dup
    7453: sipush        244
    7456: ldc_w         #487                // int -587145763
    7459: iastore
    7460: dup
    7461: sipush        245
    7464: ldc_w         #502                // int -469703452
    7467: iastore
    7468: dup
    7469: sipush        246
    7472: ldc_w         #353                // int -1593794143
    7475: iastore
    7476: dup
    7477: sipush        247
    7480: ldc_w         #493                // int -536813344
    7483: iastore
    7484: dup
    7485: sipush        248
    7488: ldc_w         #304                // int -1979676022
    7491: iastore
    7492: dup
    7493: sipush        249
    7496: ldc_w         #530                // int -251596303
    7499: iastore
    7500: dup
    7501: sipush        250
    7504: ldc_w         #473                // int -704588074
    7507: iastore
    7508: dup
    7509: sipush        251
    7512: ldc_w         #1088               // int 2046851706
    7515: iastore
    7516: dup
    7517: sipush        252
    7520: ldc_w         #413                // int -1157579845
    7523: iastore
    7524: dup
    7525: sipush        253
    7528: ldc_w         #499                // int -486480925
    7531: iastore
    7532: dup
    7533: sipush        254
    7536: ldc_w         #959                // int 1073758272
    7539: iastore
    7540: dup
    7541: sipush        255
    7544: ldc_w         #994                // int 1325420367
    7547: iastore
    7548: putstatic     #1143               // Field SBOX3_3033:[I
    7551: return
}
