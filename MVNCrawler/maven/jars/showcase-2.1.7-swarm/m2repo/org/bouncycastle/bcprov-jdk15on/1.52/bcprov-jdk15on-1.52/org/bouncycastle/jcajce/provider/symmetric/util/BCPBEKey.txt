public class org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey implements javax.crypto.interfaces.PBEKey {
  java.lang.String algorithm;

  org.bouncycastle.asn1.ASN1ObjectIdentifier oid;

  int type;

  int digest;

  int keySize;

  int ivSize;

  org.bouncycastle.crypto.CipherParameters param;

  javax.crypto.spec.PBEKeySpec pbeKeySpec;

  boolean tryWrong;

  public org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey(java.lang.String, org.bouncycastle.asn1.ASN1ObjectIdentifier, int, int, int, int, javax.crypto.spec.PBEKeySpec, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_0
       1: invokespecial #90                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #85                 // Field tryWrong:Z
       9: aload_0
      10: aload_1
      11: putfield      #86                 // Field algorithm:Ljava/lang/String;
      14: aload_0
      15: aload_2
      16: putfield      #88                 // Field oid:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      19: aload_0
      20: iload_3
      21: putfield      #84                 // Field type:I
      24: aload_0
      25: iload         4
      27: putfield      #81                 // Field digest:I
      30: aload_0
      31: iload         5
      33: putfield      #83                 // Field keySize:I
      36: aload_0
      37: iload         6
      39: putfield      #82                 // Field ivSize:I
      42: aload_0
      43: aload         7
      45: putfield      #87                 // Field pbeKeySpec:Ljavax/crypto/spec/PBEKeySpec;
      48: aload_0
      49: aload         8
      51: putfield      #89                 // Field param:Lorg/bouncycastle/crypto/CipherParameters;
      54: return

  public java.lang.String getAlgorithm();
    Code:
       0: aload_0
       1: getfield      #86                 // Field algorithm:Ljava/lang/String;
       4: areturn

  public java.lang.String getFormat();
    Code:
       0: ldc           #1                  // String RAW
       2: areturn

  public byte[] getEncoded();
    Code:
       0: aload_0
       1: getfield      #89                 // Field param:Lorg/bouncycastle/crypto/CipherParameters;
       4: ifnull        47
       7: aload_0
       8: getfield      #89                 // Field param:Lorg/bouncycastle/crypto/CipherParameters;
      11: instanceof    #53                 // class org/bouncycastle/crypto/params/ParametersWithIV
      14: ifeq          34
      17: aload_0
      18: getfield      #89                 // Field param:Lorg/bouncycastle/crypto/CipherParameters;
      21: checkcast     #53                 // class org/bouncycastle/crypto/params/ParametersWithIV
      24: invokevirtual #98                 // Method org/bouncycastle/crypto/params/ParametersWithIV.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      27: checkcast     #52                 // class org/bouncycastle/crypto/params/KeyParameter
      30: astore_1
      31: goto          42
      34: aload_0
      35: getfield      #89                 // Field param:Lorg/bouncycastle/crypto/CipherParameters;
      38: checkcast     #52                 // class org/bouncycastle/crypto/params/KeyParameter
      41: astore_1
      42: aload_1
      43: invokevirtual #97                 // Method org/bouncycastle/crypto/params/KeyParameter.getKey:()[B
      46: areturn
      47: aload_0
      48: getfield      #84                 // Field type:I
      51: iconst_2
      52: if_icmpne     66
      55: aload_0
      56: getfield      #87                 // Field pbeKeySpec:Ljavax/crypto/spec/PBEKeySpec;
      59: invokevirtual #93                 // Method javax/crypto/spec/PBEKeySpec.getPassword:()[C
      62: invokestatic  #94                 // Method org/bouncycastle/crypto/PBEParametersGenerator.PKCS12PasswordToBytes:([C)[B
      65: areturn
      66: aload_0
      67: getfield      #84                 // Field type:I
      70: iconst_5
      71: if_icmpne     85
      74: aload_0
      75: getfield      #87                 // Field pbeKeySpec:Ljavax/crypto/spec/PBEKeySpec;
      78: invokevirtual #93                 // Method javax/crypto/spec/PBEKeySpec.getPassword:()[C
      81: invokestatic  #96                 // Method org/bouncycastle/crypto/PBEParametersGenerator.PKCS5PasswordToUTF8Bytes:([C)[B
      84: areturn
      85: aload_0
      86: getfield      #87                 // Field pbeKeySpec:Ljavax/crypto/spec/PBEKeySpec;
      89: invokevirtual #93                 // Method javax/crypto/spec/PBEKeySpec.getPassword:()[C
      92: invokestatic  #95                 // Method org/bouncycastle/crypto/PBEParametersGenerator.PKCS5PasswordToBytes:([C)[B
      95: areturn

  int getType();
    Code:
       0: aload_0
       1: getfield      #84                 // Field type:I
       4: ireturn

  int getDigest();
    Code:
       0: aload_0
       1: getfield      #81                 // Field digest:I
       4: ireturn

  int getKeySize();
    Code:
       0: aload_0
       1: getfield      #83                 // Field keySize:I
       4: ireturn

  public int getIvSize();
    Code:
       0: aload_0
       1: getfield      #82                 // Field ivSize:I
       4: ireturn

  public org.bouncycastle.crypto.CipherParameters getParam();
    Code:
       0: aload_0
       1: getfield      #89                 // Field param:Lorg/bouncycastle/crypto/CipherParameters;
       4: areturn

  public char[] getPassword();
    Code:
       0: aload_0
       1: getfield      #87                 // Field pbeKeySpec:Ljavax/crypto/spec/PBEKeySpec;
       4: invokevirtual #93                 // Method javax/crypto/spec/PBEKeySpec.getPassword:()[C
       7: areturn

  public byte[] getSalt();
    Code:
       0: aload_0
       1: getfield      #87                 // Field pbeKeySpec:Ljavax/crypto/spec/PBEKeySpec;
       4: invokevirtual #92                 // Method javax/crypto/spec/PBEKeySpec.getSalt:()[B
       7: areturn

  public int getIterationCount();
    Code:
       0: aload_0
       1: getfield      #87                 // Field pbeKeySpec:Ljavax/crypto/spec/PBEKeySpec;
       4: invokevirtual #91                 // Method javax/crypto/spec/PBEKeySpec.getIterationCount:()I
       7: ireturn

  public org.bouncycastle.asn1.ASN1ObjectIdentifier getOID();
    Code:
       0: aload_0
       1: getfield      #88                 // Field oid:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
       4: areturn

  public void setTryWrongPKCS12Zero(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #85                 // Field tryWrong:Z
       5: return

  boolean shouldTryWrongPKCS12();
    Code:
       0: aload_0
       1: getfield      #85                 // Field tryWrong:Z
       4: ireturn
}
