public class org.bouncycastle.crypto.ec.ECElGamalDecryptor implements org.bouncycastle.crypto.ec.ECDecryptor {
  private org.bouncycastle.crypto.params.ECPrivateKeyParameters key;

  public org.bouncycastle.crypto.ec.ECElGamalDecryptor();
    Code:
       0: aload_0
       1: invokespecial #52                 // Method java/lang/Object."<init>":()V
       4: return

  public void init(org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_1
       1: instanceof    #30                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
       4: ifne          17
       7: new           #24                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #2                  // String ECPrivateKeyParameters are required for decryption.
      13: invokespecial #50                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: checkcast     #30                 // class org/bouncycastle/crypto/params/ECPrivateKeyParameters
      22: putfield      #49                 // Field key:Lorg/bouncycastle/crypto/params/ECPrivateKeyParameters;
      25: return

  public org.bouncycastle.math.ec.ECPoint decrypt(org.bouncycastle.crypto.ec.ECPair);
    Code:
       0: aload_0
       1: getfield      #49                 // Field key:Lorg/bouncycastle/crypto/params/ECPrivateKeyParameters;
       4: ifnonnull     17
       7: new           #25                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #1                  // String ECElGamalDecryptor not initialised
      13: invokespecial #51                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: invokevirtual #53                 // Method org/bouncycastle/crypto/ec/ECPair.getX:()Lorg/bouncycastle/math/ec/ECPoint;
      21: aload_0
      22: getfield      #49                 // Field key:Lorg/bouncycastle/crypto/params/ECPrivateKeyParameters;
      25: invokevirtual #55                 // Method org/bouncycastle/crypto/params/ECPrivateKeyParameters.getD:()Ljava/math/BigInteger;
      28: invokevirtual #57                 // Method org/bouncycastle/math/ec/ECPoint.multiply:(Ljava/math/BigInteger;)Lorg/bouncycastle/math/ec/ECPoint;
      31: astore_2
      32: aload_1
      33: invokevirtual #54                 // Method org/bouncycastle/crypto/ec/ECPair.getY:()Lorg/bouncycastle/math/ec/ECPoint;
      36: aload_2
      37: invokevirtual #58                 // Method org/bouncycastle/math/ec/ECPoint.subtract:(Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
      40: invokevirtual #56                 // Method org/bouncycastle/math/ec/ECPoint.normalize:()Lorg/bouncycastle/math/ec/ECPoint;
      43: areturn
}
