public class org.bouncycastle.pqc.asn1.ParSet extends org.bouncycastle.asn1.ASN1Object {
  private static final java.math.BigInteger ZERO;

  private int t;

  private int[] h;

  private int[] w;

  private int[] k;

  private static int checkBigIntegerInIntRangeAndPositive(java.math.BigInteger);
    Code:
       0: aload_0
       1: ldc2_w        #49                 // long 2147483647l
       4: invokestatic  #111                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       7: invokevirtual #112                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      10: ifgt          23
      13: aload_0
      14: getstatic     #103                // Field ZERO:Ljava/math/BigInteger;
      17: invokevirtual #112                // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      20: ifgt          53
      23: new           #51                 // class java/lang/IllegalArgumentException
      26: dup
      27: new           #52                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #1                  // String BigInteger not in Range:
      36: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: invokevirtual #110                // Method java/math/BigInteger.toString:()Ljava/lang/String;
      43: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #106                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #104                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: aload_0
      54: invokevirtual #109                // Method java/math/BigInteger.intValue:()I
      57: ireturn

  private org.bouncycastle.pqc.asn1.ParSet(org.bouncycastle.asn1.ASN1Sequence);
    Code:
       0: aload_0
       1: invokespecial #117                // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_1
       5: invokevirtual #118                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
       8: iconst_4
       9: if_icmpeq     42
      12: new           #51                 // class java/lang/IllegalArgumentException
      15: dup
      16: new           #52                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #105                // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #3                  // String sie of seqOfParams =
      25: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #118                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      32: invokevirtual #107                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      35: invokevirtual #106                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #104                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_1
      43: iconst_0
      44: invokevirtual #119                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      47: checkcast     #55                 // class org/bouncycastle/asn1/ASN1Integer
      50: invokevirtual #116                // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
      53: astore_2
      54: aload_0
      55: aload_2
      56: invokestatic  #122                // Method checkBigIntegerInIntRangeAndPositive:(Ljava/math/BigInteger;)I
      59: putfield      #99                 // Field t:I
      62: aload_1
      63: iconst_1
      64: invokevirtual #119                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      67: checkcast     #57                 // class org/bouncycastle/asn1/ASN1Sequence
      70: astore_3
      71: aload_1
      72: iconst_2
      73: invokevirtual #119                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      76: checkcast     #57                 // class org/bouncycastle/asn1/ASN1Sequence
      79: astore        4
      81: aload_1
      82: iconst_3
      83: invokevirtual #119                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
      86: checkcast     #57                 // class org/bouncycastle/asn1/ASN1Sequence
      89: astore        5
      91: aload_3
      92: invokevirtual #118                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
      95: aload_0
      96: getfield      #99                 // Field t:I
      99: if_icmpne     126
     102: aload         4
     104: invokevirtual #118                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
     107: aload_0
     108: getfield      #99                 // Field t:I
     111: if_icmpne     126
     114: aload         5
     116: invokevirtual #118                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
     119: aload_0
     120: getfield      #99                 // Field t:I
     123: if_icmpeq     136
     126: new           #51                 // class java/lang/IllegalArgumentException
     129: dup
     130: ldc           #2                  // String invalid size of sequences
     132: invokespecial #104                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     135: athrow
     136: aload_0
     137: aload_3
     138: invokevirtual #118                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
     141: newarray       int
     143: putfield      #100                // Field h:[I
     146: aload_0
     147: aload         4
     149: invokevirtual #118                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
     152: newarray       int
     154: putfield      #102                // Field w:[I
     157: aload_0
     158: aload         5
     160: invokevirtual #118                // Method org/bouncycastle/asn1/ASN1Sequence.size:()I
     163: newarray       int
     165: putfield      #101                // Field k:[I
     168: iconst_0
     169: istore        6
     171: iload         6
     173: aload_0
     174: getfield      #99                 // Field t:I
     177: if_icmpge     254
     180: aload_0
     181: getfield      #100                // Field h:[I
     184: iload         6
     186: aload_3
     187: iload         6
     189: invokevirtual #119                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     192: checkcast     #55                 // class org/bouncycastle/asn1/ASN1Integer
     195: invokevirtual #116                // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
     198: invokestatic  #122                // Method checkBigIntegerInIntRangeAndPositive:(Ljava/math/BigInteger;)I
     201: iastore
     202: aload_0
     203: getfield      #102                // Field w:[I
     206: iload         6
     208: aload         4
     210: iload         6
     212: invokevirtual #119                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     215: checkcast     #55                 // class org/bouncycastle/asn1/ASN1Integer
     218: invokevirtual #116                // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
     221: invokestatic  #122                // Method checkBigIntegerInIntRangeAndPositive:(Ljava/math/BigInteger;)I
     224: iastore
     225: aload_0
     226: getfield      #101                // Field k:[I
     229: iload         6
     231: aload         5
     233: iload         6
     235: invokevirtual #119                // Method org/bouncycastle/asn1/ASN1Sequence.getObjectAt:(I)Lorg/bouncycastle/asn1/ASN1Encodable;
     238: checkcast     #55                 // class org/bouncycastle/asn1/ASN1Integer
     241: invokevirtual #116                // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
     244: invokestatic  #122                // Method checkBigIntegerInIntRangeAndPositive:(Ljava/math/BigInteger;)I
     247: iastore
     248: iinc          6, 1
     251: goto          171
     254: return

  public org.bouncycastle.pqc.asn1.ParSet(int, int[], int[], int[]);
    Code:
       0: aload_0
       1: invokespecial #117                // Method org/bouncycastle/asn1/ASN1Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #99                 // Field t:I
       9: aload_0
      10: aload_2
      11: putfield      #100                // Field h:[I
      14: aload_0
      15: aload_3
      16: putfield      #102                // Field w:[I
      19: aload_0
      20: aload         4
      22: putfield      #101                // Field k:[I
      25: return

  public static org.bouncycastle.pqc.asn1.ParSet getInstance(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #59                 // class org/bouncycastle/pqc/asn1/ParSet
       4: ifeq          12
       7: aload_0
       8: checkcast     #59                 // class org/bouncycastle/pqc/asn1/ParSet
      11: areturn
      12: aload_0
      13: ifnull        28
      16: new           #59                 // class org/bouncycastle/pqc/asn1/ParSet
      19: dup
      20: aload_0
      21: invokestatic  #120                // Method org/bouncycastle/asn1/ASN1Sequence.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Sequence;
      24: invokespecial #123                // Method "<init>":(Lorg/bouncycastle/asn1/ASN1Sequence;)V
      27: areturn
      28: aconst_null
      29: areturn

  public int getT();
    Code:
       0: aload_0
       1: getfield      #99                 // Field t:I
       4: ireturn

  public int[] getH();
    Code:
       0: aload_0
       1: getfield      #100                // Field h:[I
       4: invokestatic  #124                // Method org/bouncycastle/util/Arrays.clone:([I)[I
       7: areturn

  public int[] getW();
    Code:
       0: aload_0
       1: getfield      #102                // Field w:[I
       4: invokestatic  #124                // Method org/bouncycastle/util/Arrays.clone:([I)[I
       7: areturn

  public int[] getK();
    Code:
       0: aload_0
       1: getfield      #101                // Field k:[I
       4: invokestatic  #124                // Method org/bouncycastle/util/Arrays.clone:([I)[I
       7: areturn

  public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive();
    Code:
       0: new           #54                 // class org/bouncycastle/asn1/ASN1EncodableVector
       3: dup
       4: invokespecial #113                // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":()V
       7: astore_1
       8: new           #54                 // class org/bouncycastle/asn1/ASN1EncodableVector
      11: dup
      12: invokespecial #113                // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":()V
      15: astore_2
      16: new           #54                 // class org/bouncycastle/asn1/ASN1EncodableVector
      19: dup
      20: invokespecial #113                // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":()V
      23: astore_3
      24: iconst_0
      25: istore        4
      27: iload         4
      29: aload_0
      30: getfield      #100                // Field h:[I
      33: arraylength
      34: if_icmpge     100
      37: aload_1
      38: new           #55                 // class org/bouncycastle/asn1/ASN1Integer
      41: dup
      42: aload_0
      43: getfield      #100                // Field h:[I
      46: iload         4
      48: iaload
      49: i2l
      50: invokespecial #115                // Method org/bouncycastle/asn1/ASN1Integer."<init>":(J)V
      53: invokevirtual #114                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      56: aload_2
      57: new           #55                 // class org/bouncycastle/asn1/ASN1Integer
      60: dup
      61: aload_0
      62: getfield      #102                // Field w:[I
      65: iload         4
      67: iaload
      68: i2l
      69: invokespecial #115                // Method org/bouncycastle/asn1/ASN1Integer."<init>":(J)V
      72: invokevirtual #114                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      75: aload_3
      76: new           #55                 // class org/bouncycastle/asn1/ASN1Integer
      79: dup
      80: aload_0
      81: getfield      #101                // Field k:[I
      84: iload         4
      86: iaload
      87: i2l
      88: invokespecial #115                // Method org/bouncycastle/asn1/ASN1Integer."<init>":(J)V
      91: invokevirtual #114                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
      94: iinc          4, 1
      97: goto          27
     100: new           #54                 // class org/bouncycastle/asn1/ASN1EncodableVector
     103: dup
     104: invokespecial #113                // Method org/bouncycastle/asn1/ASN1EncodableVector."<init>":()V
     107: astore        4
     109: aload         4
     111: new           #55                 // class org/bouncycastle/asn1/ASN1Integer
     114: dup
     115: aload_0
     116: getfield      #99                 // Field t:I
     119: i2l
     120: invokespecial #115                // Method org/bouncycastle/asn1/ASN1Integer."<init>":(J)V
     123: invokevirtual #114                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
     126: aload         4
     128: new           #58                 // class org/bouncycastle/asn1/DERSequence
     131: dup
     132: aload_1
     133: invokespecial #121                // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
     136: invokevirtual #114                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
     139: aload         4
     141: new           #58                 // class org/bouncycastle/asn1/DERSequence
     144: dup
     145: aload_2
     146: invokespecial #121                // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
     149: invokevirtual #114                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
     152: aload         4
     154: new           #58                 // class org/bouncycastle/asn1/DERSequence
     157: dup
     158: aload_3
     159: invokespecial #121                // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
     162: invokevirtual #114                // Method org/bouncycastle/asn1/ASN1EncodableVector.add:(Lorg/bouncycastle/asn1/ASN1Encodable;)V
     165: new           #58                 // class org/bouncycastle/asn1/DERSequence
     168: dup
     169: aload         4
     171: invokespecial #121                // Method org/bouncycastle/asn1/DERSequence."<init>":(Lorg/bouncycastle/asn1/ASN1EncodableVector;)V
     174: areturn

  static {};
    Code:
       0: lconst_0
       1: invokestatic  #111                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       4: putstatic     #103                // Field ZERO:Ljava/math/BigInteger;
       7: return
}
