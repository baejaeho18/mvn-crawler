public abstract class org.bouncycastle.crypto.tls.AbstractTlsClient extends org.bouncycastle.crypto.tls.AbstractTlsPeer implements org.bouncycastle.crypto.tls.TlsClient {
  protected org.bouncycastle.crypto.tls.TlsCipherFactory cipherFactory;

  protected org.bouncycastle.crypto.tls.TlsClientContext context;

  protected java.util.Vector supportedSignatureAlgorithms;

  protected int[] namedCurves;

  protected short[] clientECPointFormats;

  protected short[] serverECPointFormats;

  protected int selectedCipherSuite;

  protected short selectedCompressionMethod;

  public org.bouncycastle.crypto.tls.AbstractTlsClient();
    Code:
       0: aload_0
       1: new           #80                 // class org/bouncycastle/crypto/tls/DefaultTlsCipherFactory
       4: dup
       5: invokespecial #169                // Method org/bouncycastle/crypto/tls/DefaultTlsCipherFactory."<init>":()V
       8: invokespecial #166                // Method "<init>":(Lorg/bouncycastle/crypto/tls/TlsCipherFactory;)V
      11: return

  public org.bouncycastle.crypto.tls.AbstractTlsClient(org.bouncycastle.crypto.tls.TlsCipherFactory);
    Code:
       0: aload_0
       1: invokespecial #168                // Method org/bouncycastle/crypto/tls/AbstractTlsPeer."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #154                // Field cipherFactory:Lorg/bouncycastle/crypto/tls/TlsCipherFactory;
       9: return

  protected boolean allowUnexpectedServerExtension(java.lang.Integer, byte[]) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #161                // Method java/lang/Integer.intValue:()I
       4: lookupswitch  { // 1
                    10: 24
               default: 31
          }
      24: aload_2
      25: invokestatic  #172                // Method org/bouncycastle/crypto/tls/TlsECCUtils.readSupportedEllipticCurvesExtension:([B)[I
      28: pop
      29: iconst_1
      30: ireturn
      31: iconst_0
      32: ireturn

  protected void checkForUnexpectedServerExtension(java.util.Hashtable, java.lang.Integer) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #182                // Method org/bouncycastle/crypto/tls/TlsUtils.getExtensionData:(Ljava/util/Hashtable;Ljava/lang/Integer;)[B
       5: astore_3
       6: aload_3
       7: ifnull        29
      10: aload_0
      11: aload_2
      12: aload_3
      13: invokevirtual #163                // Method allowUnexpectedServerExtension:(Ljava/lang/Integer;[B)Z
      16: ifne          29
      19: new           #86                 // class org/bouncycastle/crypto/tls/TlsFatalAlert
      22: dup
      23: bipush        47
      25: invokespecial #178                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      28: athrow
      29: return

  public void init(org.bouncycastle.crypto.tls.TlsClientContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #155                // Field context:Lorg/bouncycastle/crypto/tls/TlsClientContext;
       5: return

  public org.bouncycastle.crypto.tls.TlsSession getSessionToResume();
    Code:
       0: aconst_null
       1: areturn

  public org.bouncycastle.crypto.tls.ProtocolVersion getClientHelloRecordLayerVersion();
    Code:
       0: aload_0
       1: invokevirtual #164                // Method getClientVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       4: areturn

  public org.bouncycastle.crypto.tls.ProtocolVersion getClientVersion();
    Code:
       0: getstatic     #157                // Field org/bouncycastle/crypto/tls/ProtocolVersion.TLSv12:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       3: areturn

  public boolean isFallback();
    Code:
       0: iconst_0
       1: ireturn

  public java.util.Hashtable getClientExtensions() throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #155                // Field context:Lorg/bouncycastle/crypto/tls/TlsClientContext;
       6: invokeinterface #184,  1          // InterfaceMethod org/bouncycastle/crypto/tls/TlsClientContext.getClientVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
      11: astore_2
      12: aload_2
      13: invokestatic  #181                // Method org/bouncycastle/crypto/tls/TlsUtils.isSignatureAlgorithmsExtensionAllowed:(Lorg/bouncycastle/crypto/tls/ProtocolVersion;)Z
      16: ifeq          39
      19: aload_0
      20: invokestatic  #180                // Method org/bouncycastle/crypto/tls/TlsUtils.getDefaultSupportedSignatureAlgorithms:()Ljava/util/Vector;
      23: putfield      #153                // Field supportedSignatureAlgorithms:Ljava/util/Vector;
      26: aload_1
      27: invokestatic  #177                // Method org/bouncycastle/crypto/tls/TlsExtensionsUtils.ensureExtensionsInitialised:(Ljava/util/Hashtable;)Ljava/util/Hashtable;
      30: astore_1
      31: aload_1
      32: aload_0
      33: getfield      #153                // Field supportedSignatureAlgorithms:Ljava/util/Vector;
      36: invokestatic  #183                // Method org/bouncycastle/crypto/tls/TlsUtils.addSignatureAlgorithmsExtension:(Ljava/util/Hashtable;Ljava/util/Vector;)V
      39: aload_0
      40: invokevirtual #162                // Method getCipherSuites:()[I
      43: invokestatic  #173                // Method org/bouncycastle/crypto/tls/TlsECCUtils.containsECCCipherSuites:([I)Z
      46: ifeq          106
      49: aload_0
      50: iconst_2
      51: newarray       int
      53: dup
      54: iconst_0
      55: bipush        23
      57: iastore
      58: dup
      59: iconst_1
      60: bipush        24
      62: iastore
      63: putfield      #150                // Field namedCurves:[I
      66: aload_0
      67: iconst_3
      68: newarray       short
      70: dup
      71: iconst_0
      72: iconst_0
      73: sastore
      74: dup
      75: iconst_1
      76: iconst_1
      77: sastore
      78: dup
      79: iconst_2
      80: iconst_2
      81: sastore
      82: putfield      #151                // Field clientECPointFormats:[S
      85: aload_1
      86: invokestatic  #177                // Method org/bouncycastle/crypto/tls/TlsExtensionsUtils.ensureExtensionsInitialised:(Ljava/util/Hashtable;)Ljava/util/Hashtable;
      89: astore_1
      90: aload_1
      91: aload_0
      92: getfield      #150                // Field namedCurves:[I
      95: invokestatic  #175                // Method org/bouncycastle/crypto/tls/TlsECCUtils.addSupportedEllipticCurvesExtension:(Ljava/util/Hashtable;[I)V
      98: aload_1
      99: aload_0
     100: getfield      #151                // Field clientECPointFormats:[S
     103: invokestatic  #176                // Method org/bouncycastle/crypto/tls/TlsECCUtils.addSupportedPointFormatsExtension:(Ljava/util/Hashtable;[S)V
     106: aload_1
     107: areturn

  public org.bouncycastle.crypto.tls.ProtocolVersion getMinimumVersion();
    Code:
       0: getstatic     #156                // Field org/bouncycastle/crypto/tls/ProtocolVersion.TLSv10:Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       3: areturn

  public void notifyServerVersion(org.bouncycastle.crypto.tls.ProtocolVersion) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #165                // Method getMinimumVersion:()Lorg/bouncycastle/crypto/tls/ProtocolVersion;
       4: aload_1
       5: invokevirtual #170                // Method org/bouncycastle/crypto/tls/ProtocolVersion.isEqualOrEarlierVersionOf:(Lorg/bouncycastle/crypto/tls/ProtocolVersion;)Z
       8: ifne          21
      11: new           #86                 // class org/bouncycastle/crypto/tls/TlsFatalAlert
      14: dup
      15: bipush        70
      17: invokespecial #178                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      20: athrow
      21: return

  public short[] getCompressionMethods();
    Code:
       0: iconst_1
       1: newarray       short
       3: dup
       4: iconst_0
       5: iconst_0
       6: sastore
       7: areturn

  public void notifySessionID(byte[]);
    Code:
       0: return

  public void notifySelectedCipherSuite(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #148                // Field selectedCipherSuite:I
       5: return

  public void notifySelectedCompressionMethod(short);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #149                // Field selectedCompressionMethod:S
       5: return

  public void processServerExtensions(java.util.Hashtable) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnull        49
       4: aload_0
       5: aload_1
       6: getstatic     #160                // Field org/bouncycastle/crypto/tls/TlsUtils.EXT_signature_algorithms:Ljava/lang/Integer;
       9: invokevirtual #167                // Method checkForUnexpectedServerExtension:(Ljava/util/Hashtable;Ljava/lang/Integer;)V
      12: aload_0
      13: aload_1
      14: getstatic     #159                // Field org/bouncycastle/crypto/tls/TlsECCUtils.EXT_elliptic_curves:Ljava/lang/Integer;
      17: invokevirtual #167                // Method checkForUnexpectedServerExtension:(Ljava/util/Hashtable;Ljava/lang/Integer;)V
      20: aload_0
      21: getfield      #148                // Field selectedCipherSuite:I
      24: invokestatic  #171                // Method org/bouncycastle/crypto/tls/TlsECCUtils.isECCCipherSuite:(I)Z
      27: ifeq          41
      30: aload_0
      31: aload_1
      32: invokestatic  #174                // Method org/bouncycastle/crypto/tls/TlsECCUtils.getSupportedPointFormatsExtension:(Ljava/util/Hashtable;)[S
      35: putfield      #152                // Field serverECPointFormats:[S
      38: goto          49
      41: aload_0
      42: aload_1
      43: getstatic     #158                // Field org/bouncycastle/crypto/tls/TlsECCUtils.EXT_ec_point_formats:Ljava/lang/Integer;
      46: invokevirtual #167                // Method checkForUnexpectedServerExtension:(Ljava/util/Hashtable;Ljava/lang/Integer;)V
      49: return

  public void processServerSupplementalData(java.util.Vector) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnull        14
       4: new           #86                 // class org/bouncycastle/crypto/tls/TlsFatalAlert
       7: dup
       8: bipush        10
      10: invokespecial #178                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      13: athrow
      14: return

  public java.util.Vector getClientSupplementalData() throws java.io.IOException;
    Code:
       0: aconst_null
       1: areturn

  public org.bouncycastle.crypto.tls.TlsCompression getCompression() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #149                // Field selectedCompressionMethod:S
       4: lookupswitch  { // 1
                     0: 24
               default: 32
          }
      24: new           #87                 // class org/bouncycastle/crypto/tls/TlsNullCompression
      27: dup
      28: invokespecial #179                // Method org/bouncycastle/crypto/tls/TlsNullCompression."<init>":()V
      31: areturn
      32: new           #86                 // class org/bouncycastle/crypto/tls/TlsFatalAlert
      35: dup
      36: bipush        80
      38: invokespecial #178                // Method org/bouncycastle/crypto/tls/TlsFatalAlert."<init>":(S)V
      41: athrow

  public void notifyNewSessionTicket(org.bouncycastle.crypto.tls.NewSessionTicket) throws java.io.IOException;
    Code:
       0: return
}
