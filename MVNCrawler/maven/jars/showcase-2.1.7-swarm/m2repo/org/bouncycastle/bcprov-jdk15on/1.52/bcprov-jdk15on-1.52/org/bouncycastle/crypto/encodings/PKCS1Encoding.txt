public class org.bouncycastle.crypto.encodings.PKCS1Encoding implements org.bouncycastle.crypto.AsymmetricBlockCipher {
  public static final java.lang.String STRICT_LENGTH_ENABLED_PROPERTY;

  private static final int HEADER_LENGTH;

  private java.security.SecureRandom random;

  private org.bouncycastle.crypto.AsymmetricBlockCipher engine;

  private boolean forEncryption;

  private boolean forPrivateKey;

  private boolean useStrictLength;

  private int pLen;

  private byte[] fallback;

  public org.bouncycastle.crypto.encodings.PKCS1Encoding(org.bouncycastle.crypto.AsymmetricBlockCipher);
    Code:
       0: aload_0
       1: invokespecial #131                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #123                // Field pLen:I
       9: aload_0
      10: aconst_null
      11: putfield      #127                // Field fallback:[B
      14: aload_0
      15: aload_1
      16: putfield      #129                // Field engine:Lorg/bouncycastle/crypto/AsymmetricBlockCipher;
      19: aload_0
      20: aload_0
      21: invokespecial #141                // Method useStrict:()Z
      24: putfield      #126                // Field useStrictLength:Z
      27: return

  public org.bouncycastle.crypto.encodings.PKCS1Encoding(org.bouncycastle.crypto.AsymmetricBlockCipher, int);
    Code:
       0: aload_0
       1: invokespecial #131                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #123                // Field pLen:I
       9: aload_0
      10: aconst_null
      11: putfield      #127                // Field fallback:[B
      14: aload_0
      15: aload_1
      16: putfield      #129                // Field engine:Lorg/bouncycastle/crypto/AsymmetricBlockCipher;
      19: aload_0
      20: aload_0
      21: invokespecial #141                // Method useStrict:()Z
      24: putfield      #126                // Field useStrictLength:Z
      27: aload_0
      28: iload_2
      29: putfield      #123                // Field pLen:I
      32: return

  public org.bouncycastle.crypto.encodings.PKCS1Encoding(org.bouncycastle.crypto.AsymmetricBlockCipher, byte[]);
    Code:
       0: aload_0
       1: invokespecial #131                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #123                // Field pLen:I
       9: aload_0
      10: aconst_null
      11: putfield      #127                // Field fallback:[B
      14: aload_0
      15: aload_1
      16: putfield      #129                // Field engine:Lorg/bouncycastle/crypto/AsymmetricBlockCipher;
      19: aload_0
      20: aload_0
      21: invokespecial #141                // Method useStrict:()Z
      24: putfield      #126                // Field useStrictLength:Z
      27: aload_0
      28: aload_2
      29: putfield      #127                // Field fallback:[B
      32: aload_0
      33: aload_2
      34: arraylength
      35: putfield      #123                // Field pLen:I
      38: return

  private boolean useStrict();
    Code:
       0: new           #78                 // class org/bouncycastle/crypto/encodings/PKCS1Encoding$1
       3: dup
       4: aload_0
       5: invokespecial #146                // Method org/bouncycastle/crypto/encodings/PKCS1Encoding$1."<init>":(Lorg/bouncycastle/crypto/encodings/PKCS1Encoding;)V
       8: invokestatic  #134                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      11: checkcast     #71                 // class java/lang/String
      14: astore_1
      15: aload_1
      16: ifnull        28
      19: aload_1
      20: ldc           #7                  // String true
      22: invokevirtual #132                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public org.bouncycastle.crypto.AsymmetricBlockCipher getUnderlyingCipher();
    Code:
       0: aload_0
       1: getfield      #129                // Field engine:Lorg/bouncycastle/crypto/AsymmetricBlockCipher;
       4: areturn

  public void init(boolean, org.bouncycastle.crypto.CipherParameters);
    Code:
       0: aload_2
       1: instanceof    #80                 // class org/bouncycastle/crypto/params/ParametersWithRandom
       4: ifeq          34
       7: aload_2
       8: checkcast     #80                 // class org/bouncycastle/crypto/params/ParametersWithRandom
      11: astore        4
      13: aload_0
      14: aload         4
      16: invokevirtual #148                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getRandom:()Ljava/security/SecureRandom;
      19: putfield      #128                // Field random:Ljava/security/SecureRandom;
      22: aload         4
      24: invokevirtual #149                // Method org/bouncycastle/crypto/params/ParametersWithRandom.getParameters:()Lorg/bouncycastle/crypto/CipherParameters;
      27: checkcast     #79                 // class org/bouncycastle/crypto/params/AsymmetricKeyParameter
      30: astore_3
      31: goto          50
      34: aload_0
      35: new           #74                 // class java/security/SecureRandom
      38: dup
      39: invokespecial #136                // Method java/security/SecureRandom."<init>":()V
      42: putfield      #128                // Field random:Ljava/security/SecureRandom;
      45: aload_2
      46: checkcast     #79                 // class org/bouncycastle/crypto/params/AsymmetricKeyParameter
      49: astore_3
      50: aload_0
      51: getfield      #129                // Field engine:Lorg/bouncycastle/crypto/AsymmetricBlockCipher;
      54: iload_1
      55: aload_2
      56: invokeinterface #153,  3          // InterfaceMethod org/bouncycastle/crypto/AsymmetricBlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
      61: aload_0
      62: aload_3
      63: invokevirtual #147                // Method org/bouncycastle/crypto/params/AsymmetricKeyParameter.isPrivate:()Z
      66: putfield      #125                // Field forPrivateKey:Z
      69: aload_0
      70: iload_1
      71: putfield      #124                // Field forEncryption:Z
      74: return

  public int getInputBlockSize();
    Code:
       0: aload_0
       1: getfield      #129                // Field engine:Lorg/bouncycastle/crypto/AsymmetricBlockCipher;
       4: invokeinterface #150,  1          // InterfaceMethod org/bouncycastle/crypto/AsymmetricBlockCipher.getInputBlockSize:()I
       9: istore_1
      10: aload_0
      11: getfield      #124                // Field forEncryption:Z
      14: ifeq          22
      17: iload_1
      18: bipush        10
      20: isub
      21: ireturn
      22: iload_1
      23: ireturn

  public int getOutputBlockSize();
    Code:
       0: aload_0
       1: getfield      #129                // Field engine:Lorg/bouncycastle/crypto/AsymmetricBlockCipher;
       4: invokeinterface #151,  1          // InterfaceMethod org/bouncycastle/crypto/AsymmetricBlockCipher.getOutputBlockSize:()I
       9: istore_1
      10: aload_0
      11: getfield      #124                // Field forEncryption:Z
      14: ifeq          19
      17: iload_1
      18: ireturn
      19: iload_1
      20: bipush        10
      22: isub
      23: ireturn

  public byte[] processBlock(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException;
    Code:
       0: aload_0
       1: getfield      #124                // Field forEncryption:Z
       4: ifeq          15
       7: aload_0
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokespecial #145                // Method encodeBlock:([BII)[B
      14: areturn
      15: aload_0
      16: aload_1
      17: iload_2
      18: iload_3
      19: invokespecial #143                // Method decodeBlock:([BII)[B
      22: areturn

  private byte[] encodeBlock(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException;
    Code:
       0: iload_3
       1: aload_0
       2: invokevirtual #139                // Method getInputBlockSize:()I
       5: if_icmple     18
       8: new           #69                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #4                  // String input data too large
      14: invokespecial #130                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: getfield      #129                // Field engine:Lorg/bouncycastle/crypto/AsymmetricBlockCipher;
      22: invokeinterface #150,  1          // InterfaceMethod org/bouncycastle/crypto/AsymmetricBlockCipher.getInputBlockSize:()I
      27: newarray       byte
      29: astore        4
      31: aload_0
      32: getfield      #125                // Field forPrivateKey:Z
      35: ifeq          73
      38: aload         4
      40: iconst_0
      41: iconst_1
      42: bastore
      43: iconst_1
      44: istore        5
      46: iload         5
      48: aload         4
      50: arraylength
      51: iload_3
      52: isub
      53: iconst_1
      54: isub
      55: if_icmpeq     70
      58: aload         4
      60: iload         5
      62: iconst_m1
      63: bastore
      64: iinc          5, 1
      67: goto          46
      70: goto          132
      73: aload_0
      74: getfield      #128                // Field random:Ljava/security/SecureRandom;
      77: aload         4
      79: invokevirtual #137                // Method java/security/SecureRandom.nextBytes:([B)V
      82: aload         4
      84: iconst_0
      85: iconst_2
      86: bastore
      87: iconst_1
      88: istore        5
      90: iload         5
      92: aload         4
      94: arraylength
      95: iload_3
      96: isub
      97: iconst_1
      98: isub
      99: if_icmpeq     132
     102: aload         4
     104: iload         5
     106: baload
     107: ifne          126
     110: aload         4
     112: iload         5
     114: aload_0
     115: getfield      #128                // Field random:Ljava/security/SecureRandom;
     118: invokevirtual #135                // Method java/security/SecureRandom.nextInt:()I
     121: i2b
     122: bastore
     123: goto          102
     126: iinc          5, 1
     129: goto          90
     132: aload         4
     134: aload         4
     136: arraylength
     137: iload_3
     138: isub
     139: iconst_1
     140: isub
     141: iconst_0
     142: bastore
     143: aload_1
     144: iload_2
     145: aload         4
     147: aload         4
     149: arraylength
     150: iload_3
     151: isub
     152: iload_3
     153: invokestatic  #133                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     156: aload_0
     157: getfield      #129                // Field engine:Lorg/bouncycastle/crypto/AsymmetricBlockCipher;
     160: aload         4
     162: iconst_0
     163: aload         4
     165: arraylength
     166: invokeinterface #152,  4          // InterfaceMethod org/bouncycastle/crypto/AsymmetricBlockCipher.processBlock:([BII)[B
     171: areturn

  private static int checkPkcs1Encoding(byte[], int);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: iconst_0
       5: baload
       6: iconst_2
       7: ixor
       8: ior
       9: istore_2
      10: aload_0
      11: arraylength
      12: iload_1
      13: iconst_1
      14: iadd
      15: isub
      16: istore_3
      17: iconst_1
      18: istore        4
      20: iload         4
      22: iload_3
      23: if_icmpge     74
      26: aload_0
      27: iload         4
      29: baload
      30: istore        5
      32: iload         5
      34: iload         5
      36: iconst_1
      37: ishr
      38: ior
      39: istore        5
      41: iload         5
      43: iload         5
      45: iconst_2
      46: ishr
      47: ior
      48: istore        5
      50: iload         5
      52: iload         5
      54: iconst_4
      55: ishr
      56: ior
      57: istore        5
      59: iload_2
      60: iload         5
      62: iconst_1
      63: iand
      64: iconst_1
      65: isub
      66: ior
      67: istore_2
      68: iinc          4, 1
      71: goto          20
      74: iload_2
      75: aload_0
      76: aload_0
      77: arraylength
      78: iload_1
      79: iconst_1
      80: iadd
      81: isub
      82: baload
      83: ior
      84: istore_2
      85: iload_2
      86: iload_2
      87: iconst_1
      88: ishr
      89: ior
      90: istore_2
      91: iload_2
      92: iload_2
      93: iconst_2
      94: ishr
      95: ior
      96: istore_2
      97: iload_2
      98: iload_2
      99: iconst_4
     100: ishr
     101: ior
     102: istore_2
     103: iload_2
     104: iconst_1
     105: iand
     106: iconst_1
     107: isub
     108: iconst_m1
     109: ixor
     110: ireturn

  private byte[] decodeBlockOrRandom(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException;
    Code:
       0: aload_0
       1: getfield      #125                // Field forPrivateKey:Z
       4: ifne          17
       7: new           #76                 // class org/bouncycastle/crypto/InvalidCipherTextException
      10: dup
      11: ldc           #6                  // String sorry, this method is only for decryption, not for signing
      13: invokespecial #138                // Method org/bouncycastle/crypto/InvalidCipherTextException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #129                // Field engine:Lorg/bouncycastle/crypto/AsymmetricBlockCipher;
      21: aload_1
      22: iload_2
      23: iload_3
      24: invokeinterface #152,  4          // InterfaceMethod org/bouncycastle/crypto/AsymmetricBlockCipher.processBlock:([BII)[B
      29: astore        4
      31: aconst_null
      32: astore        5
      34: aload_0
      35: getfield      #127                // Field fallback:[B
      38: ifnonnull     61
      41: aload_0
      42: getfield      #123                // Field pLen:I
      45: newarray       byte
      47: astore        5
      49: aload_0
      50: getfield      #128                // Field random:Ljava/security/SecureRandom;
      53: aload         5
      55: invokevirtual #137                // Method java/security/SecureRandom.nextBytes:([B)V
      58: goto          67
      61: aload_0
      62: getfield      #127                // Field fallback:[B
      65: astore        5
      67: aload         4
      69: arraylength
      70: aload_0
      71: invokevirtual #140                // Method getOutputBlockSize:()I
      74: if_icmpge     87
      77: new           #76                 // class org/bouncycastle/crypto/InvalidCipherTextException
      80: dup
      81: ldc           #3                  // String block truncated
      83: invokespecial #138                // Method org/bouncycastle/crypto/InvalidCipherTextException."<init>":(Ljava/lang/String;)V
      86: athrow
      87: aload_0
      88: getfield      #126                // Field useStrictLength:Z
      91: ifeq          119
      94: aload         4
      96: arraylength
      97: aload_0
      98: getfield      #129                // Field engine:Lorg/bouncycastle/crypto/AsymmetricBlockCipher;
     101: invokeinterface #151,  1          // InterfaceMethod org/bouncycastle/crypto/AsymmetricBlockCipher.getOutputBlockSize:()I
     106: if_icmpeq     119
     109: new           #76                 // class org/bouncycastle/crypto/InvalidCipherTextException
     112: dup
     113: ldc           #1                  // String block incorrect size
     115: invokespecial #138                // Method org/bouncycastle/crypto/InvalidCipherTextException."<init>":(Ljava/lang/String;)V
     118: athrow
     119: aload         4
     121: aload_0
     122: getfield      #123                // Field pLen:I
     125: invokestatic  #142                // Method checkPkcs1Encoding:([BI)I
     128: istore        6
     130: aload_0
     131: getfield      #123                // Field pLen:I
     134: newarray       byte
     136: astore        7
     138: iconst_0
     139: istore        8
     141: iload         8
     143: aload_0
     144: getfield      #123                // Field pLen:I
     147: if_icmpge     190
     150: aload         7
     152: iload         8
     154: aload         4
     156: iload         8
     158: aload         4
     160: arraylength
     161: aload_0
     162: getfield      #123                // Field pLen:I
     165: isub
     166: iadd
     167: baload
     168: iload         6
     170: iconst_m1
     171: ixor
     172: iand
     173: aload         5
     175: iload         8
     177: baload
     178: iload         6
     180: iand
     181: ior
     182: i2b
     183: bastore
     184: iinc          8, 1
     187: goto          141
     190: aload         7
     192: areturn

  private byte[] decodeBlock(byte[], int, int) throws org.bouncycastle.crypto.InvalidCipherTextException;
    Code:
       0: aload_0
       1: getfield      #123                // Field pLen:I
       4: iconst_m1
       5: if_icmpeq     16
       8: aload_0
       9: aload_1
      10: iload_2
      11: iload_3
      12: invokespecial #144                // Method decodeBlockOrRandom:([BII)[B
      15: areturn
      16: aload_0
      17: getfield      #129                // Field engine:Lorg/bouncycastle/crypto/AsymmetricBlockCipher;
      20: aload_1
      21: iload_2
      22: iload_3
      23: invokeinterface #152,  4          // InterfaceMethod org/bouncycastle/crypto/AsymmetricBlockCipher.processBlock:([BII)[B
      28: astore        4
      30: aload         4
      32: arraylength
      33: aload_0
      34: invokevirtual #140                // Method getOutputBlockSize:()I
      37: if_icmpge     50
      40: new           #76                 // class org/bouncycastle/crypto/InvalidCipherTextException
      43: dup
      44: ldc           #3                  // String block truncated
      46: invokespecial #138                // Method org/bouncycastle/crypto/InvalidCipherTextException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload         4
      52: iconst_0
      53: baload
      54: istore        5
      56: aload_0
      57: getfield      #125                // Field forPrivateKey:Z
      60: ifeq          79
      63: iload         5
      65: iconst_2
      66: if_icmpeq     95
      69: new           #76                 // class org/bouncycastle/crypto/InvalidCipherTextException
      72: dup
      73: ldc           #8                  // String unknown block type
      75: invokespecial #138                // Method org/bouncycastle/crypto/InvalidCipherTextException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: iload         5
      81: iconst_1
      82: if_icmpeq     95
      85: new           #76                 // class org/bouncycastle/crypto/InvalidCipherTextException
      88: dup
      89: ldc           #8                  // String unknown block type
      91: invokespecial #138                // Method org/bouncycastle/crypto/InvalidCipherTextException."<init>":(Ljava/lang/String;)V
      94: athrow
      95: aload_0
      96: getfield      #126                // Field useStrictLength:Z
      99: ifeq          127
     102: aload         4
     104: arraylength
     105: aload_0
     106: getfield      #129                // Field engine:Lorg/bouncycastle/crypto/AsymmetricBlockCipher;
     109: invokeinterface #151,  1          // InterfaceMethod org/bouncycastle/crypto/AsymmetricBlockCipher.getOutputBlockSize:()I
     114: if_icmpeq     127
     117: new           #76                 // class org/bouncycastle/crypto/InvalidCipherTextException
     120: dup
     121: ldc           #1                  // String block incorrect size
     123: invokespecial #138                // Method org/bouncycastle/crypto/InvalidCipherTextException."<init>":(Ljava/lang/String;)V
     126: athrow
     127: iconst_1
     128: istore        6
     130: iload         6
     132: aload         4
     134: arraylength
     135: if_icmpeq     181
     138: aload         4
     140: iload         6
     142: baload
     143: istore        7
     145: iload         7
     147: ifne          153
     150: goto          181
     153: iload         5
     155: iconst_1
     156: if_icmpne     175
     159: iload         7
     161: iconst_m1
     162: if_icmpeq     175
     165: new           #76                 // class org/bouncycastle/crypto/InvalidCipherTextException
     168: dup
     169: ldc           #2                  // String block padding incorrect
     171: invokespecial #138                // Method org/bouncycastle/crypto/InvalidCipherTextException."<init>":(Ljava/lang/String;)V
     174: athrow
     175: iinc          6, 1
     178: goto          130
     181: iinc          6, 1
     184: iload         6
     186: aload         4
     188: arraylength
     189: if_icmpgt     199
     192: iload         6
     194: bipush        10
     196: if_icmpge     209
     199: new           #76                 // class org/bouncycastle/crypto/InvalidCipherTextException
     202: dup
     203: ldc           #5                  // String no data in block
     205: invokespecial #138                // Method org/bouncycastle/crypto/InvalidCipherTextException."<init>":(Ljava/lang/String;)V
     208: athrow
     209: aload         4
     211: arraylength
     212: iload         6
     214: isub
     215: newarray       byte
     217: astore        7
     219: aload         4
     221: iload         6
     223: aload         7
     225: iconst_0
     226: aload         7
     228: arraylength
     229: invokestatic  #133                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     232: aload         7
     234: areturn
}
