class org.bouncycastle.cert.selector.MSOutlookKeyIdCalculator {
  org.bouncycastle.cert.selector.MSOutlookKeyIdCalculator();
    Code:
       0: aload_0
       1: invokespecial #32                 // Method java/lang/Object."<init>":()V
       4: return

  static byte[] calculateKeyId(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo);
    Code:
       0: new           #24                 // class org/bouncycastle/cert/selector/MSOutlookKeyIdCalculator$SHA1Digest
       3: dup
       4: invokespecial #35                 // Method org/bouncycastle/cert/selector/MSOutlookKeyIdCalculator$SHA1Digest."<init>":()V
       7: astore_1
       8: aload_1
       9: invokevirtual #34                 // Method org/bouncycastle/cert/selector/MSOutlookKeyIdCalculator$SHA1Digest.getDigestSize:()I
      12: newarray       byte
      14: astore_2
      15: iconst_0
      16: newarray       byte
      18: astore_3
      19: aload_0
      20: ldc           #1                  // String DER
      22: invokevirtual #33                 // Method org/bouncycastle/asn1/x509/SubjectPublicKeyInfo.getEncoded:(Ljava/lang/String;)[B
      25: astore_3
      26: goto          35
      29: astore        4
      31: iconst_0
      32: newarray       byte
      34: areturn
      35: aload_1
      36: aload_3
      37: iconst_0
      38: aload_3
      39: arraylength
      40: invokevirtual #37                 // Method org/bouncycastle/cert/selector/MSOutlookKeyIdCalculator$SHA1Digest.update:([BII)V
      43: aload_1
      44: aload_2
      45: iconst_0
      46: invokevirtual #36                 // Method org/bouncycastle/cert/selector/MSOutlookKeyIdCalculator$SHA1Digest.doFinal:([BI)I
      49: pop
      50: aload_2
      51: areturn
    Exception table:
       from    to  target type
          19    26    29   Class java/io/IOException
}
