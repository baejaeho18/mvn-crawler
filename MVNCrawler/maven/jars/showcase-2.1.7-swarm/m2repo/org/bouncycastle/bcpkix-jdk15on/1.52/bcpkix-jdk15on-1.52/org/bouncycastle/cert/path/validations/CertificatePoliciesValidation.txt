public class org.bouncycastle.cert.path.validations.CertificatePoliciesValidation implements org.bouncycastle.cert.path.CertPathValidation {
  private int explicitPolicy;

  private int policyMapping;

  private int inhibitAnyPolicy;

  org.bouncycastle.cert.path.validations.CertificatePoliciesValidation(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: iconst_0
       4: iconst_0
       5: invokespecial #103                // Method "<init>":(IZZZ)V
       8: return

  org.bouncycastle.cert.path.validations.CertificatePoliciesValidation(int, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #89                 // Method java/lang/Object."<init>":()V
       4: iload_2
       5: ifeq          16
       8: aload_0
       9: iconst_0
      10: putfield      #86                 // Field explicitPolicy:I
      13: goto          23
      16: aload_0
      17: iload_1
      18: iconst_1
      19: iadd
      20: putfield      #86                 // Field explicitPolicy:I
      23: iload_3
      24: ifeq          35
      27: aload_0
      28: iconst_0
      29: putfield      #87                 // Field inhibitAnyPolicy:I
      32: goto          42
      35: aload_0
      36: iload_1
      37: iconst_1
      38: iadd
      39: putfield      #87                 // Field inhibitAnyPolicy:I
      42: iload         4
      44: ifeq          55
      47: aload_0
      48: iconst_0
      49: putfield      #88                 // Field policyMapping:I
      52: goto          62
      55: aload_0
      56: iload_1
      57: iconst_1
      58: iadd
      59: putfield      #88                 // Field policyMapping:I
      62: return

  public void validate(org.bouncycastle.cert.path.CertPathValidationContext, org.bouncycastle.cert.X509CertificateHolder) throws org.bouncycastle.cert.path.CertPathValidationException;
    Code:
       0: aload_1
       1: getstatic     #85                 // Field org/bouncycastle/asn1/x509/Extension.policyConstraints:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
       4: invokevirtual #100                // Method org/bouncycastle/cert/path/CertPathValidationContext.addHandledExtension:(Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;)V
       7: aload_1
       8: getstatic     #84                 // Field org/bouncycastle/asn1/x509/Extension.inhibitAnyPolicy:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
      11: invokevirtual #100                // Method org/bouncycastle/cert/path/CertPathValidationContext.addHandledExtension:(Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;)V
      14: aload_1
      15: invokevirtual #99                 // Method org/bouncycastle/cert/path/CertPathValidationContext.isEndEntity:()Z
      18: ifne          185
      21: aload_2
      22: invokestatic  #104                // Method org/bouncycastle/cert/path/validations/ValidationUtils.isSelfIssued:(Lorg/bouncycastle/cert/X509CertificateHolder;)Z
      25: ifne          185
      28: aload_0
      29: aload_0
      30: aload_0
      31: getfield      #86                 // Field explicitPolicy:I
      34: invokespecial #101                // Method countDown:(I)I
      37: putfield      #86                 // Field explicitPolicy:I
      40: aload_0
      41: aload_0
      42: aload_0
      43: getfield      #88                 // Field policyMapping:I
      46: invokespecial #101                // Method countDown:(I)I
      49: putfield      #88                 // Field policyMapping:I
      52: aload_0
      53: aload_0
      54: aload_0
      55: getfield      #87                 // Field inhibitAnyPolicy:I
      58: invokespecial #101                // Method countDown:(I)I
      61: putfield      #87                 // Field inhibitAnyPolicy:I
      64: aload_2
      65: invokevirtual #97                 // Method org/bouncycastle/cert/X509CertificateHolder.getExtensions:()Lorg/bouncycastle/asn1/x509/Extensions;
      68: invokestatic  #96                 // Method org/bouncycastle/asn1/x509/PolicyConstraints.fromExtensions:(Lorg/bouncycastle/asn1/x509/Extensions;)Lorg/bouncycastle/asn1/x509/PolicyConstraints;
      71: astore_3
      72: aload_3
      73: ifnull        140
      76: aload_3
      77: invokevirtual #95                 // Method org/bouncycastle/asn1/x509/PolicyConstraints.getRequireExplicitPolicyMapping:()Ljava/math/BigInteger;
      80: astore        4
      82: aload         4
      84: ifnull        108
      87: aload         4
      89: invokevirtual #90                 // Method java/math/BigInteger.intValue:()I
      92: aload_0
      93: getfield      #86                 // Field explicitPolicy:I
      96: if_icmpge     108
      99: aload_0
     100: aload         4
     102: invokevirtual #90                 // Method java/math/BigInteger.intValue:()I
     105: putfield      #86                 // Field explicitPolicy:I
     108: aload_3
     109: invokevirtual #94                 // Method org/bouncycastle/asn1/x509/PolicyConstraints.getInhibitPolicyMapping:()Ljava/math/BigInteger;
     112: astore        5
     114: aload         5
     116: ifnull        140
     119: aload         5
     121: invokevirtual #90                 // Method java/math/BigInteger.intValue:()I
     124: aload_0
     125: getfield      #88                 // Field policyMapping:I
     128: if_icmpge     140
     131: aload_0
     132: aload         5
     134: invokevirtual #90                 // Method java/math/BigInteger.intValue:()I
     137: putfield      #88                 // Field policyMapping:I
     140: aload_2
     141: getstatic     #84                 // Field org/bouncycastle/asn1/x509/Extension.inhibitAnyPolicy:Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
     144: invokevirtual #98                 // Method org/bouncycastle/cert/X509CertificateHolder.getExtension:(Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;)Lorg/bouncycastle/asn1/x509/Extension;
     147: astore        4
     149: aload         4
     151: ifnull        185
     154: aload         4
     156: invokevirtual #93                 // Method org/bouncycastle/asn1/x509/Extension.getParsedValue:()Lorg/bouncycastle/asn1/ASN1Encodable;
     159: invokestatic  #92                 // Method org/bouncycastle/asn1/ASN1Integer.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/ASN1Integer;
     162: invokevirtual #91                 // Method org/bouncycastle/asn1/ASN1Integer.getValue:()Ljava/math/BigInteger;
     165: invokevirtual #90                 // Method java/math/BigInteger.intValue:()I
     168: istore        5
     170: iload         5
     172: aload_0
     173: getfield      #87                 // Field inhibitAnyPolicy:I
     176: if_icmpge     185
     179: aload_0
     180: iload         5
     182: putfield      #87                 // Field inhibitAnyPolicy:I
     185: return

  private int countDown(int);
    Code:
       0: iload_1
       1: ifeq          8
       4: iload_1
       5: iconst_1
       6: isub
       7: ireturn
       8: iconst_0
       9: ireturn

  public org.bouncycastle.util.Memoable copy();
    Code:
       0: new           #49                 // class org/bouncycastle/cert/path/validations/CertificatePoliciesValidation
       3: dup
       4: iconst_0
       5: invokespecial #102                // Method "<init>":(I)V
       8: areturn

  public void reset(org.bouncycastle.util.Memoable);
    Code:
       0: aload_1
       1: checkcast     #49                 // class org/bouncycastle/cert/path/validations/CertificatePoliciesValidation
       4: astore_2
       5: return
}
