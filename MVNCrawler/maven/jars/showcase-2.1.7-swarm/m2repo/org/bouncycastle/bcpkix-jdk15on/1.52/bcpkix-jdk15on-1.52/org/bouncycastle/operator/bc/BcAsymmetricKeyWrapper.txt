public abstract class org.bouncycastle.operator.bc.BcAsymmetricKeyWrapper extends org.bouncycastle.operator.AsymmetricKeyWrapper {
  private org.bouncycastle.crypto.params.AsymmetricKeyParameter publicKey;

  private java.security.SecureRandom random;

  public org.bouncycastle.operator.bc.BcAsymmetricKeyWrapper(org.bouncycastle.asn1.x509.AlgorithmIdentifier, org.bouncycastle.crypto.params.AsymmetricKeyParameter);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #58                 // Method org/bouncycastle/operator/AsymmetricKeyWrapper."<init>":(Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;)V
       5: aload_0
       6: aload_2
       7: putfield      #55                 // Field publicKey:Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
      10: return

  public org.bouncycastle.operator.bc.BcAsymmetricKeyWrapper setSecureRandom(java.security.SecureRandom);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #54                 // Field random:Ljava/security/SecureRandom;
       5: aload_0
       6: areturn

  public byte[] generateWrappedKey(org.bouncycastle.operator.GenericKey) throws org.bouncycastle.operator.OperatorException;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #60                 // Method getAlgorithmIdentifier:()Lorg/bouncycastle/asn1/x509/AlgorithmIdentifier;
       5: invokevirtual #56                 // Method org/bouncycastle/asn1/x509/AlgorithmIdentifier.getAlgorithm:()Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;
       8: invokevirtual #61                 // Method createAsymmetricWrapper:(Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;)Lorg/bouncycastle/crypto/AsymmetricBlockCipher;
      11: astore_2
      12: aload_0
      13: getfield      #55                 // Field publicKey:Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
      16: astore_3
      17: aload_0
      18: getfield      #54                 // Field random:Ljava/security/SecureRandom;
      21: ifnull        37
      24: new           #26                 // class org/bouncycastle/crypto/params/ParametersWithRandom
      27: dup
      28: aload_3
      29: aload_0
      30: getfield      #54                 // Field random:Ljava/security/SecureRandom;
      33: invokespecial #57                 // Method org/bouncycastle/crypto/params/ParametersWithRandom."<init>":(Lorg/bouncycastle/crypto/CipherParameters;Ljava/security/SecureRandom;)V
      36: astore_3
      37: aload_1
      38: invokestatic  #62                 // Method org/bouncycastle/operator/bc/OperatorUtils.getKeyBytes:(Lorg/bouncycastle/operator/GenericKey;)[B
      41: astore        4
      43: aload_2
      44: iconst_1
      45: aload_0
      46: getfield      #55                 // Field publicKey:Lorg/bouncycastle/crypto/params/AsymmetricKeyParameter;
      49: invokeinterface #64,  3           // InterfaceMethod org/bouncycastle/crypto/AsymmetricBlockCipher.init:(ZLorg/bouncycastle/crypto/CipherParameters;)V
      54: aload_2
      55: aload         4
      57: iconst_0
      58: aload         4
      60: arraylength
      61: invokeinterface #63,  4           // InterfaceMethod org/bouncycastle/crypto/AsymmetricBlockCipher.processBlock:([BII)[B
      66: areturn
      67: astore        4
      69: new           #28                 // class org/bouncycastle/operator/OperatorException
      72: dup
      73: ldc           #1                  // String unable to encrypt contents key
      75: aload         4
      77: invokespecial #59                 // Method org/bouncycastle/operator/OperatorException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      80: athrow
    Exception table:
       from    to  target type
          37    66    67   Class org/bouncycastle/crypto/InvalidCipherTextException

  protected abstract org.bouncycastle.crypto.AsymmetricBlockCipher createAsymmetricWrapper(org.bouncycastle.asn1.ASN1ObjectIdentifier);
}
